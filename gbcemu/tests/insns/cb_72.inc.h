    TEST(gbcemu, opcode_cb_72) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 72 0000
        gbc.setState(0xdd38, 0x7dc4, 0x23a0, 0xd3d4, 0xb502, 0xf66a, 0x0, 0x0);
        gbc.writeMem(0xdd38, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7dc4, gbc.sp());
        EXPECT(0xdd3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd38));
        EXPECT(0x72, gbc.readMem(0xdd39));
        // CB 72 0001
        gbc.setState(0x7756, 0x331d, 0x7340, 0xf661, 0xdc82, 0x6029, 0x0, 0x1);
        gbc.writeMem(0x7756, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x331d, gbc.sp());
        EXPECT(0x7758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0002
        gbc.setState(0x3a6, 0xd3ac, 0x2860, 0x2ce3, 0x34e9, 0x78c7, 0x1, 0x0);
        gbc.writeMem(0x3a6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd3ac, gbc.sp());
        EXPECT(0x3a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0003
        gbc.setState(0xc92c, 0xb19d, 0x1b90, 0x4c08, 0x2e13, 0x3cef, 0x1, 0x0);
        gbc.writeMem(0xc92c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb19d, gbc.sp());
        EXPECT(0xc92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc92c));
        EXPECT(0x72, gbc.readMem(0xc92d));
        // CB 72 0004
        gbc.setState(0x9168, 0xafea, 0x8e50, 0xad3, 0x4d02, 0x1bdc, 0x0, 0x1);
        gbc.writeMem(0x9168, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0x916a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9168));
        EXPECT(0x72, gbc.readMem(0x9169));
        // CB 72 0005
        gbc.setState(0xb3bd, 0x1ad4, 0xc870, 0xd27b, 0x8fab, 0x8d4e, 0x0, 0x0);
        gbc.writeMem(0xb3bd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0xb3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bd));
        EXPECT(0x72, gbc.readMem(0xb3be));
        // CB 72 0006
        gbc.setState(0xeffd, 0x87f6, 0xcb30, 0x3674, 0x8ae6, 0x7d8f, 0x0, 0x0);
        gbc.writeMem(0xeffd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0xefff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeffd));
        EXPECT(0x72, gbc.readMem(0xeffe));
        // CB 72 0007
        gbc.setState(0xd2b8, 0xa284, 0xe940, 0x1ef0, 0x5e36, 0x6ea5, 0x0, 0x0);
        gbc.writeMem(0xd2b8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xa284, gbc.sp());
        EXPECT(0xd2ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2b8));
        EXPECT(0x72, gbc.readMem(0xd2b9));
        // CB 72 0008
        gbc.setState(0xe7ed, 0x39c6, 0xa70, 0xa2b0, 0xe13d, 0xb485, 0x1, 0x0);
        gbc.writeMem(0xe7ed, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x39c6, gbc.sp());
        EXPECT(0xe7ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ed));
        EXPECT(0x72, gbc.readMem(0xe7ee));
        // CB 72 0009
        gbc.setState(0xac24, 0x74f3, 0xbc60, 0x20, 0x6dc4, 0x3564, 0x0, 0x0);
        gbc.writeMem(0xac24, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x74f3, gbc.sp());
        EXPECT(0xac26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac24));
        EXPECT(0x72, gbc.readMem(0xac25));
        // CB 72 000A
        gbc.setState(0xdf83, 0x9403, 0xf930, 0x3399, 0x9ad7, 0x5e52, 0x1, 0x1);
        gbc.writeMem(0xdf83, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9403, gbc.sp());
        EXPECT(0xdf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf83));
        EXPECT(0x72, gbc.readMem(0xdf84));
        // CB 72 000B
        gbc.setState(0x27bc, 0xe03d, 0x5d40, 0x338b, 0xd158, 0xb09b, 0x1, 0x1);
        gbc.writeMem(0x27bc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe03d, gbc.sp());
        EXPECT(0x27be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 000C
        gbc.setState(0xa6d8, 0x7de, 0xa370, 0xcb42, 0xd4ff, 0xbad7, 0x0, 0x1);
        gbc.writeMem(0xa6d8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7de, gbc.sp());
        EXPECT(0xa6da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6d8));
        EXPECT(0x72, gbc.readMem(0xa6d9));
        // CB 72 000D
        gbc.setState(0x8b20, 0x93a6, 0xb060, 0x243e, 0x504b, 0xdb1a, 0x0, 0x1);
        gbc.writeMem(0x8b20, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x93a6, gbc.sp());
        EXPECT(0x8b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b20));
        EXPECT(0x72, gbc.readMem(0x8b21));
        // CB 72 000E
        gbc.setState(0x8e81, 0x40f4, 0xa290, 0xbf34, 0x5d8c, 0x5557, 0x0, 0x0);
        gbc.writeMem(0x8e81, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x40f4, gbc.sp());
        EXPECT(0x8e83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e81));
        EXPECT(0x72, gbc.readMem(0x8e82));
        // CB 72 000F
        gbc.setState(0xeb6d, 0x76aa, 0x3350, 0x2572, 0x4ac6, 0x401f, 0x1, 0x0);
        gbc.writeMem(0xeb6d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x76aa, gbc.sp());
        EXPECT(0xeb6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb6d));
        EXPECT(0x72, gbc.readMem(0xeb6e));
        // CB 72 0010
        gbc.setState(0x69b2, 0xc88f, 0x1550, 0x3c8f, 0xbc6a, 0xa365, 0x1, 0x0);
        gbc.writeMem(0x69b2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0x69b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0011
        gbc.setState(0x56bc, 0xecba, 0x75c0, 0x364b, 0x2d34, 0x48a7, 0x0, 0x0);
        gbc.writeMem(0x56bc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xecba, gbc.sp());
        EXPECT(0x56be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0012
        gbc.setState(0x1f9a, 0xf084, 0x5930, 0x1253, 0x3d21, 0x63b3, 0x0, 0x0);
        gbc.writeMem(0x1f9a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf084, gbc.sp());
        EXPECT(0x1f9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0014
        gbc.setState(0xce1b, 0xd185, 0x3230, 0xf148, 0x84b1, 0x613c, 0x1, 0x0);
        gbc.writeMem(0xce1b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd185, gbc.sp());
        EXPECT(0xce1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1b));
        EXPECT(0x72, gbc.readMem(0xce1c));
        // CB 72 0015
        gbc.setState(0x770a, 0x1e23, 0x9e20, 0xa290, 0x4a66, 0x51ff, 0x1, 0x1);
        gbc.writeMem(0x770a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x770c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0017
        gbc.setState(0xc50c, 0x5100, 0x6940, 0x7912, 0x197b, 0xcc2e, 0x1, 0x1);
        gbc.writeMem(0xc50c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5100, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc50c));
        EXPECT(0x72, gbc.readMem(0xc50d));
        // CB 72 0018
        gbc.setState(0x9819, 0xe74c, 0xa3a0, 0x3889, 0x28d4, 0x69e5, 0x1, 0x0);
        gbc.writeMem(0x9819, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xe74c, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9819));
        EXPECT(0x72, gbc.readMem(0x981a));
        // CB 72 0019
        gbc.setState(0x9fa5, 0x41b, 0x3d0, 0xe3dd, 0xd280, 0xf606, 0x0, 0x1);
        gbc.writeMem(0x9fa5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x41b, gbc.sp());
        EXPECT(0x9fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa5));
        EXPECT(0x72, gbc.readMem(0x9fa6));
        // CB 72 001A
        gbc.setState(0xbead, 0x1814, 0xdee0, 0x2633, 0x145a, 0xeb96, 0x0, 0x0);
        gbc.writeMem(0xbead, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1814, gbc.sp());
        EXPECT(0xbeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbead));
        EXPECT(0x72, gbc.readMem(0xbeae));
        // CB 72 001B
        gbc.setState(0xc7f7, 0x186c, 0x8c10, 0x2468, 0x9c74, 0x475e, 0x0, 0x0);
        gbc.writeMem(0xc7f7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x186c, gbc.sp());
        EXPECT(0xc7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f7));
        EXPECT(0x72, gbc.readMem(0xc7f8));
        // CB 72 001C
        gbc.setState(0x13d0, 0xc04d, 0xfaf0, 0xeaed, 0x122d, 0xa07d, 0x1, 0x1);
        gbc.writeMem(0x13d0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc04d, gbc.sp());
        EXPECT(0x13d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 001D
        gbc.setState(0xa5bd, 0x9137, 0x63b0, 0xd556, 0x9fd5, 0x9c8, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9137, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bd));
        EXPECT(0x72, gbc.readMem(0xa5be));
        // CB 72 001E
        gbc.setState(0x9dbe, 0x642b, 0x4b30, 0xdf27, 0xfe0f, 0x6807, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x642b, gbc.sp());
        EXPECT(0x9dc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbe));
        EXPECT(0x72, gbc.readMem(0x9dbf));
        // CB 72 001F
        gbc.setState(0xa886, 0x66fa, 0xf370, 0xf99, 0x21a2, 0xc56f, 0x1, 0x1);
        gbc.writeMem(0xa886, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x66fa, gbc.sp());
        EXPECT(0xa888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa886));
        EXPECT(0x72, gbc.readMem(0xa887));
        // CB 72 0020
        gbc.setState(0xe6c6, 0x7bf2, 0x8ee0, 0xc9a4, 0xa9f0, 0x997d, 0x1, 0x1);
        gbc.writeMem(0xe6c6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x7bf2, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c6));
        EXPECT(0x72, gbc.readMem(0xe6c7));
        // CB 72 0021
        gbc.setState(0x868f, 0x7c3d, 0x4770, 0x382b, 0x7f79, 0x1d34, 0x0, 0x1);
        gbc.writeMem(0x868f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7c3d, gbc.sp());
        EXPECT(0x8691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x868f));
        EXPECT(0x72, gbc.readMem(0x8690));
        // CB 72 0022
        gbc.setState(0xb9c6, 0x1cc9, 0x6e80, 0xd36f, 0x5926, 0x9e80, 0x1, 0x0);
        gbc.writeMem(0xb9c6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1cc9, gbc.sp());
        EXPECT(0xb9c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9c6));
        EXPECT(0x72, gbc.readMem(0xb9c7));
        // CB 72 0023
        gbc.setState(0xa603, 0x7200, 0x4e10, 0x72d3, 0xcc73, 0x6df9, 0x0, 0x1);
        gbc.writeMem(0xa603, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7200, gbc.sp());
        EXPECT(0xa605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa603));
        EXPECT(0x72, gbc.readMem(0xa604));
        // CB 72 0024
        gbc.setState(0xb1ac, 0x6979, 0x6f70, 0xa801, 0xd5a1, 0x3d4b, 0x0, 0x0);
        gbc.writeMem(0xb1ac, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6979, gbc.sp());
        EXPECT(0xb1ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ac));
        EXPECT(0x72, gbc.readMem(0xb1ad));
        // CB 72 0025
        gbc.setState(0x6be8, 0x1c13, 0xae60, 0x19a3, 0x3337, 0x1ed0, 0x1, 0x1);
        gbc.writeMem(0x6be8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0x6bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0026
        gbc.setState(0xa97a, 0x8f41, 0xf950, 0x574, 0x65b2, 0x7765, 0x1, 0x0);
        gbc.writeMem(0xa97a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8f41, gbc.sp());
        EXPECT(0xa97c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97a));
        EXPECT(0x72, gbc.readMem(0xa97b));
        // CB 72 0027
        gbc.setState(0x11e5, 0x4df6, 0x6050, 0x1660, 0x5f69, 0x99b3, 0x1, 0x0);
        gbc.writeMem(0x11e5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4df6, gbc.sp());
        EXPECT(0x11e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0028
        gbc.setState(0x8340, 0xde50, 0xdd50, 0x5c48, 0xc58d, 0xb95e, 0x0, 0x0);
        gbc.writeMem(0x8340, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xde50, gbc.sp());
        EXPECT(0x8342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8340));
        EXPECT(0x72, gbc.readMem(0x8341));
        // CB 72 002A
        gbc.setState(0x2009, 0x86d4, 0xd730, 0x7501, 0xd32d, 0x10e9, 0x1, 0x1);
        gbc.writeMem(0x2009, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x86d4, gbc.sp());
        EXPECT(0x200b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 002B
        gbc.setState(0x6180, 0x5eb7, 0x7fc0, 0x6fb9, 0xb14e, 0x10a1, 0x1, 0x1);
        gbc.writeMem(0x6180, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5eb7, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 002C
        gbc.setState(0x2c60, 0xa797, 0xe450, 0x8161, 0x4cf0, 0x62a6, 0x0, 0x0);
        gbc.writeMem(0x2c60, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0x2c62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 002D
        gbc.setState(0x3e37, 0x4127, 0x66b0, 0xbcd3, 0xb3cb, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0x3e37, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4127, gbc.sp());
        EXPECT(0x3e39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 002E
        gbc.setState(0xa4e3, 0x9429, 0xf000, 0xe32b, 0xe263, 0x7b91, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9429, gbc.sp());
        EXPECT(0xa4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e3));
        EXPECT(0x72, gbc.readMem(0xa4e4));
        // CB 72 002F
        gbc.setState(0x3fb8, 0x7c17, 0xddc0, 0x7f9f, 0xd6e0, 0x906, 0x0, 0x1);
        gbc.writeMem(0x3fb8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7c17, gbc.sp());
        EXPECT(0x3fba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0030
        gbc.setState(0x4208, 0x8cf3, 0x8800, 0x826e, 0xca7e, 0x1b73, 0x1, 0x0);
        gbc.writeMem(0x4208, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8cf3, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0031
        gbc.setState(0xda3c, 0x4ac7, 0xe2c0, 0x60ee, 0xd447, 0xebf8, 0x1, 0x0);
        gbc.writeMem(0xda3c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4ac7, gbc.sp());
        EXPECT(0xda3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3c));
        EXPECT(0x72, gbc.readMem(0xda3d));
        // CB 72 0032
        gbc.setState(0xc971, 0xa335, 0xd930, 0x1005, 0x65f0, 0x263a, 0x0, 0x1);
        gbc.writeMem(0xc971, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa335, gbc.sp());
        EXPECT(0xc973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc971));
        EXPECT(0x72, gbc.readMem(0xc972));
        // CB 72 0033
        gbc.setState(0x3bd2, 0x6f76, 0xa020, 0xf3d5, 0x7817, 0xb8ea, 0x0, 0x1);
        gbc.writeMem(0x3bd2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6f76, gbc.sp());
        EXPECT(0x3bd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0034
        gbc.setState(0x1ec, 0xa1d2, 0x6dc0, 0xc32d, 0x6d99, 0x4395, 0x0, 0x1);
        gbc.writeMem(0x1ec, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0035
        gbc.setState(0x6626, 0xc486, 0xd550, 0x8b27, 0x55f, 0xaabd, 0x1, 0x1);
        gbc.writeMem(0x6626, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc486, gbc.sp());
        EXPECT(0x6628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0036
        gbc.setState(0xaa0f, 0xda32, 0x7030, 0x7f36, 0xc5c9, 0xa61c, 0x1, 0x0);
        gbc.writeMem(0xaa0f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xda32, gbc.sp());
        EXPECT(0xaa11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0f));
        EXPECT(0x72, gbc.readMem(0xaa10));
        // CB 72 0037
        gbc.setState(0xcc2c, 0xa97d, 0x8dd0, 0x8518, 0x696a, 0xd66b, 0x1, 0x0);
        gbc.writeMem(0xcc2c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0xcc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2c));
        EXPECT(0x72, gbc.readMem(0xcc2d));
        // CB 72 0038
        gbc.setState(0x9444, 0x7809, 0x5320, 0xcb2f, 0x1a0, 0xc7da, 0x0, 0x1);
        gbc.writeMem(0x9444, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7809, gbc.sp());
        EXPECT(0x9446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9444));
        EXPECT(0x72, gbc.readMem(0x9445));
        // CB 72 0039
        gbc.setState(0x82ef, 0xf468, 0x6850, 0x9605, 0x33fa, 0x8b9b, 0x1, 0x1);
        gbc.writeMem(0x82ef, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0x82f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ef));
        EXPECT(0x72, gbc.readMem(0x82f0));
        // CB 72 003A
        gbc.setState(0x38d6, 0xb4e6, 0xac20, 0xa8e, 0x47b0, 0xe0c8, 0x1, 0x1);
        gbc.writeMem(0x38d6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb4e6, gbc.sp());
        EXPECT(0x38d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 003B
        gbc.setState(0xe97b, 0x1793, 0x1fd0, 0x64bb, 0x949c, 0x5c7b, 0x1, 0x0);
        gbc.writeMem(0xe97b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1793, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe97b));
        EXPECT(0x72, gbc.readMem(0xe97c));
        // CB 72 003C
        gbc.setState(0xb5b8, 0x51c7, 0x4e10, 0xc544, 0x4f3e, 0x56da, 0x0, 0x1);
        gbc.writeMem(0xb5b8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x51c7, gbc.sp());
        EXPECT(0xb5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b8));
        EXPECT(0x72, gbc.readMem(0xb5b9));
        // CB 72 003D
        gbc.setState(0xa966, 0x7d7, 0xb0, 0xeb54, 0x9680, 0x6c99, 0x0, 0x1);
        gbc.writeMem(0xa966, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7d7, gbc.sp());
        EXPECT(0xa968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa966));
        EXPECT(0x72, gbc.readMem(0xa967));
        // CB 72 003E
        gbc.setState(0xcc78, 0xb1a3, 0x3f00, 0x98b5, 0x3b6a, 0xa9fb, 0x1, 0x0);
        gbc.writeMem(0xcc78, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb1a3, gbc.sp());
        EXPECT(0xcc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc78));
        EXPECT(0x72, gbc.readMem(0xcc79));
        // CB 72 003F
        gbc.setState(0x54bb, 0xe6e1, 0x7a20, 0x54c0, 0xad40, 0x31ed, 0x1, 0x0);
        gbc.writeMem(0x54bb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe6e1, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0040
        gbc.setState(0x2a50, 0x803e, 0x6140, 0x1649, 0x5311, 0xd1c3, 0x1, 0x0);
        gbc.writeMem(0x2a50, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x803e, gbc.sp());
        EXPECT(0x2a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0041
        gbc.setState(0x343c, 0xe293, 0x9740, 0xedcf, 0x40df, 0x915, 0x1, 0x0);
        gbc.writeMem(0x343c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe293, gbc.sp());
        EXPECT(0x343e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0042
        gbc.setState(0x188e, 0x5367, 0xef30, 0x2a29, 0x3664, 0x7612, 0x0, 0x1);
        gbc.writeMem(0x188e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5367, gbc.sp());
        EXPECT(0x1890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0043
        gbc.setState(0x20c0, 0xa767, 0x81e0, 0x132d, 0xbd61, 0x1af9, 0x1, 0x1);
        gbc.writeMem(0x20c0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa767, gbc.sp());
        EXPECT(0x20c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0044
        gbc.setState(0xa7a0, 0x86a3, 0x470, 0x98f0, 0x9560, 0x31ec, 0x1, 0x0);
        gbc.writeMem(0xa7a0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0xa7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a0));
        EXPECT(0x72, gbc.readMem(0xa7a1));
        // CB 72 0045
        gbc.setState(0x5a92, 0x187c, 0xbfe0, 0xec05, 0x79d1, 0x233a, 0x1, 0x1);
        gbc.writeMem(0x5a92, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x187c, gbc.sp());
        EXPECT(0x5a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0046
        gbc.setState(0xc52d, 0xe633, 0x5150, 0x1a3, 0x4faa, 0x221b, 0x0, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe633, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52d));
        EXPECT(0x72, gbc.readMem(0xc52e));
        // CB 72 0047
        gbc.setState(0x24c, 0xfb22, 0xff60, 0xba0d, 0x1dcc, 0xac8d, 0x1, 0x1);
        gbc.writeMem(0x24c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0x24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0048
        gbc.setState(0x981, 0x82a6, 0x72c0, 0xdea3, 0xa6f, 0x8447, 0x0, 0x0);
        gbc.writeMem(0x981, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x82a6, gbc.sp());
        EXPECT(0x983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 004A
        gbc.setState(0x724d, 0xe813, 0x2da0, 0x9908, 0x7916, 0x740d, 0x1, 0x1);
        gbc.writeMem(0x724d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe813, gbc.sp());
        EXPECT(0x724f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 004D
        gbc.setState(0x3c69, 0x8f3, 0x9420, 0x4d4a, 0x9951, 0x82e7, 0x0, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8f3, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 004E
        gbc.setState(0xcf31, 0xea33, 0x7810, 0x971, 0xfb98, 0x7a4e, 0x0, 0x1);
        gbc.writeMem(0xcf31, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xea33, gbc.sp());
        EXPECT(0xcf33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf31));
        EXPECT(0x72, gbc.readMem(0xcf32));
        // CB 72 004F
        gbc.setState(0xecbe, 0x1e8d, 0xdaf0, 0x6fc9, 0x1750, 0x1591, 0x1, 0x1);
        gbc.writeMem(0xecbe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1e8d, gbc.sp());
        EXPECT(0xecc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbe));
        EXPECT(0x72, gbc.readMem(0xecbf));
        // CB 72 0050
        gbc.setState(0xdd63, 0xa380, 0xb200, 0x5b05, 0x44b6, 0x8f8d, 0x0, 0x1);
        gbc.writeMem(0xdd63, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa380, gbc.sp());
        EXPECT(0xdd65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd63));
        EXPECT(0x72, gbc.readMem(0xdd64));
        // CB 72 0051
        gbc.setState(0x7c67, 0x790b, 0xf340, 0x8903, 0x69c7, 0x2da2, 0x0, 0x1);
        gbc.writeMem(0x7c67, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x790b, gbc.sp());
        EXPECT(0x7c69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0052
        gbc.setState(0xd84c, 0x8baf, 0x3d20, 0x70ff, 0x79a4, 0x683, 0x1, 0x0);
        gbc.writeMem(0xd84c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x8baf, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd84c));
        EXPECT(0x72, gbc.readMem(0xd84d));
        // CB 72 0053
        gbc.setState(0x7a6f, 0xec50, 0xdb70, 0x137e, 0x7cb8, 0x8f06, 0x1, 0x1);
        gbc.writeMem(0x7a6f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xec50, gbc.sp());
        EXPECT(0x7a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0054
        gbc.setState(0x3098, 0xb744, 0xd550, 0x162b, 0x978a, 0x54d, 0x1, 0x0);
        gbc.writeMem(0x3098, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb744, gbc.sp());
        EXPECT(0x309a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0055
        gbc.setState(0x2b1, 0xf181, 0x8fe0, 0x7304, 0x3b20, 0xd512, 0x1, 0x1);
        gbc.writeMem(0x2b1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf181, gbc.sp());
        EXPECT(0x2b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0056
        gbc.setState(0xeb61, 0xbacb, 0x19a0, 0xaa46, 0x9f4, 0x2c22, 0x1, 0x0);
        gbc.writeMem(0xeb61, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbacb, gbc.sp());
        EXPECT(0xeb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb61));
        EXPECT(0x72, gbc.readMem(0xeb62));
        // CB 72 0057
        gbc.setState(0x5305, 0x5218, 0x2240, 0xd3c8, 0x3e83, 0x7b26, 0x1, 0x0);
        gbc.writeMem(0x5305, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5218, gbc.sp());
        EXPECT(0x5307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0058
        gbc.setState(0xe11, 0xcfe7, 0xa9e0, 0x5e0d, 0x27d5, 0x6553, 0x0, 0x0);
        gbc.writeMem(0xe11, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcfe7, gbc.sp());
        EXPECT(0xe13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0059
        gbc.setState(0x1dc9, 0xc9e7, 0x8440, 0x6a7c, 0x212c, 0x2053, 0x1, 0x1);
        gbc.writeMem(0x1dc9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xc9e7, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 005A
        gbc.setState(0x1c, 0x2fa2, 0xf6d0, 0x1cdb, 0x5, 0xfb41, 0x0, 0x0);
        gbc.writeMem(0x1c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2fa2, gbc.sp());
        EXPECT(0x1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 005C
        gbc.setState(0x6b76, 0xa843, 0x9530, 0x37e, 0xe4fc, 0x2fe3, 0x0, 0x0);
        gbc.writeMem(0x6b76, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa843, gbc.sp());
        EXPECT(0x6b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 005E
        gbc.setState(0x42a0, 0xae0f, 0x15f0, 0x671a, 0xe702, 0xf600, 0x0, 0x0);
        gbc.writeMem(0x42a0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xae0f, gbc.sp());
        EXPECT(0x42a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 005F
        gbc.setState(0x377d, 0xdcc6, 0x5650, 0xf511, 0xc753, 0xf0cd, 0x1, 0x0);
        gbc.writeMem(0x377d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdcc6, gbc.sp());
        EXPECT(0x377f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0060
        gbc.setState(0xba15, 0x43d, 0x8bc0, 0x35d6, 0x74f, 0x6be, 0x1, 0x1);
        gbc.writeMem(0xba15, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0xba17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba15));
        EXPECT(0x72, gbc.readMem(0xba16));
        // CB 72 0061
        gbc.setState(0x6cb0, 0xf311, 0x8680, 0x56e3, 0x5fc8, 0x3c59, 0x1, 0x0);
        gbc.writeMem(0x6cb0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf311, gbc.sp());
        EXPECT(0x6cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0062
        gbc.setState(0x8af2, 0x778a, 0xc300, 0x3ac, 0xbe94, 0xc935, 0x0, 0x0);
        gbc.writeMem(0x8af2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x778a, gbc.sp());
        EXPECT(0x8af4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af2));
        EXPECT(0x72, gbc.readMem(0x8af3));
        // CB 72 0063
        gbc.setState(0x8a74, 0x2bdd, 0x44b0, 0xed6d, 0xca32, 0x1a48, 0x0, 0x0);
        gbc.writeMem(0x8a74, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2bdd, gbc.sp());
        EXPECT(0x8a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a74));
        EXPECT(0x72, gbc.readMem(0x8a75));
        // CB 72 0064
        gbc.setState(0x4fc9, 0x2d71, 0x34f0, 0x5f6f, 0x6f09, 0xf409, 0x0, 0x1);
        gbc.writeMem(0x4fc9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x2d71, gbc.sp());
        EXPECT(0x4fcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0065
        gbc.setState(0xccef, 0xe96e, 0x7dd0, 0x5f24, 0xeedb, 0x6fea, 0x0, 0x1);
        gbc.writeMem(0xccef, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xe96e, gbc.sp());
        EXPECT(0xccf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccef));
        EXPECT(0x72, gbc.readMem(0xccf0));
        // CB 72 0066
        gbc.setState(0x3f42, 0x3a6d, 0x16b0, 0xe8e5, 0xb72c, 0xf99d, 0x0, 0x0);
        gbc.writeMem(0x3f42, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3a6d, gbc.sp());
        EXPECT(0x3f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0067
        gbc.setState(0xbbd1, 0xc0c9, 0xb050, 0x5b05, 0x52ce, 0x5954, 0x0, 0x0);
        gbc.writeMem(0xbbd1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc0c9, gbc.sp());
        EXPECT(0xbbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd1));
        EXPECT(0x72, gbc.readMem(0xbbd2));
        // CB 72 0068
        gbc.setState(0x4fc, 0x88de, 0xb1b0, 0x9cfb, 0x5bae, 0x1516, 0x0, 0x1);
        gbc.writeMem(0x4fc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x88de, gbc.sp());
        EXPECT(0x4fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0069
        gbc.setState(0xa1ca, 0x3492, 0x45b0, 0x9dc8, 0xc39f, 0x5331, 0x1, 0x0);
        gbc.writeMem(0xa1ca, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3492, gbc.sp());
        EXPECT(0xa1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ca));
        EXPECT(0x72, gbc.readMem(0xa1cb));
        // CB 72 006A
        gbc.setState(0xa68a, 0xbd64, 0x2610, 0xf813, 0xc583, 0x7171, 0x1, 0x1);
        gbc.writeMem(0xa68a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbd64, gbc.sp());
        EXPECT(0xa68c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa68a));
        EXPECT(0x72, gbc.readMem(0xa68b));
        // CB 72 006B
        gbc.setState(0x15c2, 0x84bb, 0x62f0, 0x6082, 0x2fd2, 0xffda, 0x1, 0x0);
        gbc.writeMem(0x15c2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x84bb, gbc.sp());
        EXPECT(0x15c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 006C
        gbc.setState(0xa8e1, 0xd517, 0xb5c0, 0xab07, 0x864b, 0x8680, 0x1, 0x1);
        gbc.writeMem(0xa8e1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd517, gbc.sp());
        EXPECT(0xa8e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e1));
        EXPECT(0x72, gbc.readMem(0xa8e2));
        // CB 72 006D
        gbc.setState(0x622b, 0xf7a5, 0x150, 0x8f41, 0xc9c0, 0xa4d0, 0x0, 0x0);
        gbc.writeMem(0x622b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf7a5, gbc.sp());
        EXPECT(0x622d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 006E
        gbc.setState(0xe135, 0x973e, 0x7140, 0x2b7b, 0x4096, 0x21f2, 0x0, 0x1);
        gbc.writeMem(0xe135, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0xe137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe135));
        EXPECT(0x72, gbc.readMem(0xe136));
        // CB 72 006F
        gbc.setState(0x4b25, 0x8ba9, 0x6020, 0xb915, 0xaf30, 0xc46d, 0x1, 0x0);
        gbc.writeMem(0x4b25, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8ba9, gbc.sp());
        EXPECT(0x4b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0070
        gbc.setState(0x80fc, 0x830d, 0x4df0, 0x9976, 0xdfac, 0x98de, 0x0, 0x1);
        gbc.writeMem(0x80fc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x830d, gbc.sp());
        EXPECT(0x80fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80fc));
        EXPECT(0x72, gbc.readMem(0x80fd));
        // CB 72 0071
        gbc.setState(0xc122, 0xc1cb, 0x38d0, 0xfdb4, 0xb27d, 0xb74c, 0x1, 0x0);
        gbc.writeMem(0xc122, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc1cb, gbc.sp());
        EXPECT(0xc124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc122));
        EXPECT(0x72, gbc.readMem(0xc123));
        // CB 72 0072
        gbc.setState(0xeae9, 0x1baf, 0x4970, 0x6307, 0xd1ec, 0xcb38, 0x0, 0x0);
        gbc.writeMem(0xeae9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1baf, gbc.sp());
        EXPECT(0xeaeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeae9));
        EXPECT(0x72, gbc.readMem(0xeaea));
        // CB 72 0073
        gbc.setState(0xbe2b, 0xbcbd, 0x1830, 0x18ae, 0x3d48, 0xc1ba, 0x0, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xbcbd, gbc.sp());
        EXPECT(0xbe2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2b));
        EXPECT(0x72, gbc.readMem(0xbe2c));
        // CB 72 0074
        gbc.setState(0x2826, 0xf294, 0x20, 0x17fe, 0x4582, 0x4559, 0x1, 0x1);
        gbc.writeMem(0x2826, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf294, gbc.sp());
        EXPECT(0x2828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0075
        gbc.setState(0x49b2, 0x66b1, 0xbf60, 0xfdf1, 0xacc, 0x7a, 0x0, 0x0);
        gbc.writeMem(0x49b2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x66b1, gbc.sp());
        EXPECT(0x49b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0076
        gbc.setState(0x6969, 0x7eb0, 0xd080, 0x71c, 0xdbe1, 0xd92d, 0x0, 0x1);
        gbc.writeMem(0x6969, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0077
        gbc.setState(0x6d8e, 0x166b, 0x56b0, 0xb5bb, 0x367b, 0x2f55, 0x1, 0x0);
        gbc.writeMem(0x6d8e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x166b, gbc.sp());
        EXPECT(0x6d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0078
        gbc.setState(0xe8e5, 0xb298, 0x3450, 0xf84b, 0x7ff8, 0x3d46, 0x0, 0x0);
        gbc.writeMem(0xe8e5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0xe8e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e5));
        EXPECT(0x72, gbc.readMem(0xe8e6));
        // CB 72 007A
        gbc.setState(0xb487, 0x22d8, 0x4820, 0x395, 0xc88, 0x2874, 0x1, 0x1);
        gbc.writeMem(0xb487, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x22d8, gbc.sp());
        EXPECT(0xb489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb487));
        EXPECT(0x72, gbc.readMem(0xb488));
        // CB 72 007B
        gbc.setState(0xd96, 0x6472, 0x7f60, 0x8b34, 0xf029, 0xb38f, 0x0, 0x1);
        gbc.writeMem(0xd96, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6472, gbc.sp());
        EXPECT(0xd98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 007C
        gbc.setState(0x1497, 0xb658, 0x74e0, 0x638f, 0xab96, 0x2ae9, 0x1, 0x1);
        gbc.writeMem(0x1497, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0x1499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 007D
        gbc.setState(0x9eaf, 0xbb8f, 0x4750, 0x2932, 0x3096, 0xf6c9, 0x0, 0x0);
        gbc.writeMem(0x9eaf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xbb8f, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eaf));
        EXPECT(0x72, gbc.readMem(0x9eb0));
        // CB 72 007E
        gbc.setState(0x824c, 0xa7e4, 0xdbf0, 0xbc3a, 0x3ff9, 0x52b8, 0x1, 0x1);
        gbc.writeMem(0x824c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa7e4, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824c));
        EXPECT(0x72, gbc.readMem(0x824d));
        // CB 72 007F
        gbc.setState(0xaf5a, 0x6de6, 0xca70, 0x75e1, 0x6b9b, 0xee12, 0x1, 0x0);
        gbc.writeMem(0xaf5a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6de6, gbc.sp());
        EXPECT(0xaf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5a));
        EXPECT(0x72, gbc.readMem(0xaf5b));
        // CB 72 0080
        gbc.setState(0xb6ba, 0x1eba, 0x8a90, 0x65c4, 0xf879, 0x96d3, 0x0, 0x0);
        gbc.writeMem(0xb6ba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1eba, gbc.sp());
        EXPECT(0xb6bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ba));
        EXPECT(0x72, gbc.readMem(0xb6bb));
        // CB 72 0081
        gbc.setState(0xbdf0, 0x3ec8, 0x9ba0, 0x38a3, 0x315, 0xeed7, 0x1, 0x1);
        gbc.writeMem(0xbdf0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3ec8, gbc.sp());
        EXPECT(0xbdf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf0));
        EXPECT(0x72, gbc.readMem(0xbdf1));
        // CB 72 0082
        gbc.setState(0x46f0, 0xbc4f, 0x3b90, 0xdbf5, 0x9808, 0x9839, 0x0, 0x1);
        gbc.writeMem(0x46f0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbc4f, gbc.sp());
        EXPECT(0x46f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0083
        gbc.setState(0xb4ea, 0x8edb, 0xcfa0, 0xc9eb, 0xf0a9, 0xbe28, 0x0, 0x0);
        gbc.writeMem(0xb4ea, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8edb, gbc.sp());
        EXPECT(0xb4ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ea));
        EXPECT(0x72, gbc.readMem(0xb4eb));
        // CB 72 0084
        gbc.setState(0x5f99, 0x31bc, 0x7900, 0x8411, 0xa52a, 0xb383, 0x1, 0x0);
        gbc.writeMem(0x5f99, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x31bc, gbc.sp());
        EXPECT(0x5f9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0085
        gbc.setState(0x4537, 0x5865, 0xffa0, 0xade8, 0xaf9e, 0x8fcc, 0x1, 0x0);
        gbc.writeMem(0x4537, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5865, gbc.sp());
        EXPECT(0x4539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0086
        gbc.setState(0xee6a, 0x1b2b, 0x1420, 0xdf8, 0x710f, 0xd71d, 0x1, 0x0);
        gbc.writeMem(0xee6a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1b2b, gbc.sp());
        EXPECT(0xee6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee6a));
        EXPECT(0x72, gbc.readMem(0xee6b));
        // CB 72 0087
        gbc.setState(0x2ad4, 0xda7a, 0xcda0, 0x15b3, 0x88ba, 0x888d, 0x1, 0x0);
        gbc.writeMem(0x2ad4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0x2ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0089
        gbc.setState(0x793c, 0x57e3, 0x150, 0xc602, 0x20b1, 0x7a79, 0x0, 0x1);
        gbc.writeMem(0x793c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x793e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 008A
        gbc.setState(0x251e, 0x4f96, 0x54b0, 0x7404, 0x7e5d, 0xb8d2, 0x1, 0x0);
        gbc.writeMem(0x251e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0x2520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 008C
        gbc.setState(0xc6a, 0x4d8, 0x6960, 0x1e2e, 0x1389, 0xe0a3, 0x0, 0x0);
        gbc.writeMem(0xc6a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0xc6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 008E
        gbc.setState(0x1279, 0x7026, 0xb400, 0x41e0, 0xbc3d, 0x9dc2, 0x1, 0x1);
        gbc.writeMem(0x1279, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7026, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 008F
        gbc.setState(0x9625, 0xedbb, 0x4030, 0x2d45, 0x8450, 0x953c, 0x0, 0x0);
        gbc.writeMem(0x9625, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xedbb, gbc.sp());
        EXPECT(0x9627, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9625));
        EXPECT(0x72, gbc.readMem(0x9626));
        // CB 72 0090
        gbc.setState(0xb479, 0x872, 0x9ea0, 0xa4f4, 0xfd47, 0x60a6, 0x0, 0x0);
        gbc.writeMem(0xb479, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x872, gbc.sp());
        EXPECT(0xb47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb479));
        EXPECT(0x72, gbc.readMem(0xb47a));
        // CB 72 0091
        gbc.setState(0x887f, 0x58ba, 0x3670, 0x35d9, 0xdaae, 0xfefa, 0x1, 0x0);
        gbc.writeMem(0x887f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x58ba, gbc.sp());
        EXPECT(0x8881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887f));
        EXPECT(0x72, gbc.readMem(0x8880));
        // CB 72 0092
        gbc.setState(0xa5b4, 0x328c, 0xa310, 0x7d15, 0xe9b5, 0x5f72, 0x0, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x328c, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0x72, gbc.readMem(0xa5b5));
        // CB 72 0093
        gbc.setState(0x3a0c, 0x61bc, 0x7860, 0x7854, 0xae0f, 0x49e2, 0x0, 0x0);
        gbc.writeMem(0x3a0c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x61bc, gbc.sp());
        EXPECT(0x3a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0094
        gbc.setState(0x5c73, 0xf25a, 0x57d0, 0x8666, 0xde05, 0x240, 0x1, 0x0);
        gbc.writeMem(0x5c73, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf25a, gbc.sp());
        EXPECT(0x5c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0095
        gbc.setState(0xb28b, 0xe7d7, 0xb790, 0x9e45, 0xdb9b, 0xfcdb, 0x0, 0x0);
        gbc.writeMem(0xb28b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe7d7, gbc.sp());
        EXPECT(0xb28d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28b));
        EXPECT(0x72, gbc.readMem(0xb28c));
        // CB 72 0096
        gbc.setState(0x1505, 0x2e07, 0x9200, 0x32d0, 0x8388, 0xf267, 0x1, 0x1);
        gbc.writeMem(0x1505, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2e07, gbc.sp());
        EXPECT(0x1507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0097
        gbc.setState(0x6c36, 0xb133, 0x7560, 0xe98f, 0x7c88, 0xe037, 0x0, 0x1);
        gbc.writeMem(0x6c36, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb133, gbc.sp());
        EXPECT(0x6c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0098
        gbc.setState(0x84b5, 0x44a0, 0x6a60, 0xbcf3, 0x93d5, 0x9df3, 0x0, 0x1);
        gbc.writeMem(0x84b5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x44a0, gbc.sp());
        EXPECT(0x84b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b5));
        EXPECT(0x72, gbc.readMem(0x84b6));
        // CB 72 0099
        gbc.setState(0x3d44, 0x7c22, 0x6310, 0xeec1, 0xed8, 0xc02, 0x0, 0x0);
        gbc.writeMem(0x3d44, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7c22, gbc.sp());
        EXPECT(0x3d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 009A
        gbc.setState(0xb55f, 0xd79b, 0xb4b0, 0x36b9, 0x68df, 0xd384, 0x0, 0x0);
        gbc.writeMem(0xb55f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd79b, gbc.sp());
        EXPECT(0xb561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55f));
        EXPECT(0x72, gbc.readMem(0xb560));
        // CB 72 009B
        gbc.setState(0xefbb, 0xc7f2, 0xc7b0, 0xbca2, 0xa202, 0xab8d, 0x0, 0x0);
        gbc.writeMem(0xefbb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc7f2, gbc.sp());
        EXPECT(0xefbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefbb));
        EXPECT(0x72, gbc.readMem(0xefbc));
        // CB 72 009C
        gbc.setState(0xa5d2, 0x2835, 0x68b0, 0xc06b, 0x17f0, 0x4662, 0x1, 0x0);
        gbc.writeMem(0xa5d2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2835, gbc.sp());
        EXPECT(0xa5d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d2));
        EXPECT(0x72, gbc.readMem(0xa5d3));
        // CB 72 009D
        gbc.setState(0xc79b, 0xdc4a, 0x6330, 0xd042, 0xad6, 0x8184, 0x0, 0x1);
        gbc.writeMem(0xc79b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xdc4a, gbc.sp());
        EXPECT(0xc79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79b));
        EXPECT(0x72, gbc.readMem(0xc79c));
        // CB 72 009E
        gbc.setState(0x3f4a, 0xa29e, 0xbb00, 0x62a2, 0x34c5, 0xe490, 0x1, 0x1);
        gbc.writeMem(0x3f4a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 009F
        gbc.setState(0x1f33, 0x9e41, 0x2fe0, 0xe0d9, 0x9d0a, 0x2197, 0x0, 0x0);
        gbc.writeMem(0x1f33, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9e41, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00A0
        gbc.setState(0x3c79, 0x45b0, 0xd7d0, 0x881a, 0x931f, 0x2317, 0x0, 0x0);
        gbc.writeMem(0x3c79, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x3c7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00A1
        gbc.setState(0xa2dd, 0x1d56, 0x1d20, 0x8183, 0x72b8, 0x7fcc, 0x1, 0x1);
        gbc.writeMem(0xa2dd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0xa2df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2dd));
        EXPECT(0x72, gbc.readMem(0xa2de));
        // CB 72 00A2
        gbc.setState(0x368b, 0xb364, 0x7c60, 0x61a3, 0x130e, 0x68ae, 0x1, 0x1);
        gbc.writeMem(0x368b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb364, gbc.sp());
        EXPECT(0x368d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00A4
        gbc.setState(0x11c5, 0x8488, 0x5270, 0xa554, 0xdaa8, 0xf672, 0x1, 0x1);
        gbc.writeMem(0x11c5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8488, gbc.sp());
        EXPECT(0x11c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00A5
        gbc.setState(0x2462, 0x168d, 0x7f80, 0xad29, 0xb465, 0x5e32, 0x0, 0x0);
        gbc.writeMem(0x2462, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x168d, gbc.sp());
        EXPECT(0x2464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00A6
        gbc.setState(0xc1ff, 0xcefe, 0x98a0, 0xcad, 0x2932, 0x30f3, 0x0, 0x0);
        gbc.writeMem(0xc1ff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcefe, gbc.sp());
        EXPECT(0xc201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ff));
        EXPECT(0x72, gbc.readMem(0xc200));
        // CB 72 00A7
        gbc.setState(0x4529, 0xd1ed, 0x7c90, 0x847b, 0x796c, 0x789d, 0x1, 0x1);
        gbc.writeMem(0x4529, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd1ed, gbc.sp());
        EXPECT(0x452b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00A8
        gbc.setState(0xa2a6, 0xb93f, 0xf00, 0x9bc6, 0xb313, 0x7ae4, 0x0, 0x0);
        gbc.writeMem(0xa2a6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xb93f, gbc.sp());
        EXPECT(0xa2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a6));
        EXPECT(0x72, gbc.readMem(0xa2a7));
        // CB 72 00A9
        gbc.setState(0x7562, 0x5a8d, 0xa130, 0x487f, 0x4937, 0xfeaf, 0x0, 0x1);
        gbc.writeMem(0x7562, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x5a8d, gbc.sp());
        EXPECT(0x7564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00AA
        gbc.setState(0x57d9, 0x7433, 0x77e0, 0xe297, 0xf1d5, 0x505, 0x1, 0x1);
        gbc.writeMem(0x57d9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x7433, gbc.sp());
        EXPECT(0x57db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00AB
        gbc.setState(0x3d7, 0x9ae2, 0xb4c0, 0xee8f, 0x703f, 0x6fc8, 0x1, 0x1);
        gbc.writeMem(0x3d7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9ae2, gbc.sp());
        EXPECT(0x3d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00AC
        gbc.setState(0x116f, 0x718a, 0xf290, 0xce97, 0xe72f, 0xc2f5, 0x1, 0x1);
        gbc.writeMem(0x116f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x718a, gbc.sp());
        EXPECT(0x1171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00AD
        gbc.setState(0x102a, 0xecad, 0x6360, 0x71e5, 0x144a, 0xdfa4, 0x0, 0x0);
        gbc.writeMem(0x102a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xecad, gbc.sp());
        EXPECT(0x102c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00AE
        gbc.setState(0x4275, 0xa217, 0x49b0, 0x4f5f, 0x657c, 0xc354, 0x0, 0x0);
        gbc.writeMem(0x4275, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa217, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00AF
        gbc.setState(0x93f3, 0x4ed2, 0x5aa0, 0xdc23, 0x6a3a, 0x1880, 0x0, 0x0);
        gbc.writeMem(0x93f3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4ed2, gbc.sp());
        EXPECT(0x93f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f3));
        EXPECT(0x72, gbc.readMem(0x93f4));
        // CB 72 00B0
        gbc.setState(0x49c1, 0xf4ad, 0x5f50, 0x3a12, 0x3533, 0x652c, 0x0, 0x0);
        gbc.writeMem(0x49c1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf4ad, gbc.sp());
        EXPECT(0x49c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00B1
        gbc.setState(0x421e, 0x23d2, 0x8a70, 0xffe8, 0xe538, 0x977b, 0x0, 0x0);
        gbc.writeMem(0x421e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x23d2, gbc.sp());
        EXPECT(0x4220, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00B3
        gbc.setState(0xdd29, 0xde86, 0xf490, 0x3fc1, 0x80b9, 0x20bb, 0x0, 0x1);
        gbc.writeMem(0xdd29, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xde86, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd29));
        EXPECT(0x72, gbc.readMem(0xdd2a));
        // CB 72 00B4
        gbc.setState(0x45f7, 0xbd27, 0x9460, 0x9f4d, 0x2988, 0xaf75, 0x0, 0x0);
        gbc.writeMem(0x45f7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbd27, gbc.sp());
        EXPECT(0x45f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00B5
        gbc.setState(0x7db7, 0xe30d, 0xc180, 0xe137, 0x5d0, 0xd7a, 0x0, 0x1);
        gbc.writeMem(0x7db7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe30d, gbc.sp());
        EXPECT(0x7db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00B6
        gbc.setState(0x3609, 0x601, 0xdc80, 0x4bff, 0xafe7, 0x54d2, 0x0, 0x0);
        gbc.writeMem(0x3609, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x601, gbc.sp());
        EXPECT(0x360b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00B7
        gbc.setState(0x776f, 0xf820, 0x89f0, 0xa986, 0x1c3a, 0xcef4, 0x0, 0x1);
        gbc.writeMem(0x776f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf820, gbc.sp());
        EXPECT(0x7771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00B8
        gbc.setState(0x2940, 0xb445, 0x1bf0, 0x6b64, 0x630b, 0xc271, 0x1, 0x0);
        gbc.writeMem(0x2940, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0x2942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00B9
        gbc.setState(0x5252, 0xc556, 0x59f0, 0x67ef, 0x2e50, 0xf67f, 0x1, 0x0);
        gbc.writeMem(0x5252, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc556, gbc.sp());
        EXPECT(0x5254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00BA
        gbc.setState(0x95b5, 0x4dd5, 0xd4f0, 0x38a8, 0x2b1a, 0x2ff1, 0x1, 0x1);
        gbc.writeMem(0x95b5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4dd5, gbc.sp());
        EXPECT(0x95b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95b5));
        EXPECT(0x72, gbc.readMem(0x95b6));
        // CB 72 00BB
        gbc.setState(0x1197, 0x2488, 0xa1d0, 0x437d, 0x13fa, 0x87a9, 0x0, 0x1);
        gbc.writeMem(0x1197, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2488, gbc.sp());
        EXPECT(0x1199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00BC
        gbc.setState(0xb487, 0x8059, 0xb200, 0x4e0, 0x8df3, 0x74dc, 0x1, 0x0);
        gbc.writeMem(0xb487, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8059, gbc.sp());
        EXPECT(0xb489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb487));
        EXPECT(0x72, gbc.readMem(0xb488));
        // CB 72 00BD
        gbc.setState(0x233c, 0x4f0e, 0x3180, 0xfa2, 0xd2e5, 0x4f57, 0x1, 0x0);
        gbc.writeMem(0x233c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4f0e, gbc.sp());
        EXPECT(0x233e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00BE
        gbc.setState(0x1713, 0x75cd, 0x5440, 0x50f, 0xba39, 0xedb, 0x1, 0x0);
        gbc.writeMem(0x1713, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x75cd, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00BF
        gbc.setState(0xa76c, 0xbf95, 0xd0e0, 0x31b0, 0x724a, 0x4be8, 0x0, 0x0);
        gbc.writeMem(0xa76c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbf95, gbc.sp());
        EXPECT(0xa76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76c));
        EXPECT(0x72, gbc.readMem(0xa76d));
        // CB 72 00C0
        gbc.setState(0x2b15, 0x314a, 0xfc40, 0xcff4, 0xdd63, 0xb774, 0x1, 0x0);
        gbc.writeMem(0x2b15, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00C1
        gbc.setState(0x208b, 0x1a8b, 0xdbb0, 0x5daf, 0x8af1, 0xff73, 0x0, 0x1);
        gbc.writeMem(0x208b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1a8b, gbc.sp());
        EXPECT(0x208d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00C2
        gbc.setState(0x5b33, 0xebde, 0xa4a0, 0x213b, 0x74a8, 0xf515, 0x1, 0x1);
        gbc.writeMem(0x5b33, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xebde, gbc.sp());
        EXPECT(0x5b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00C3
        gbc.setState(0x1849, 0x1f31, 0x9580, 0x221b, 0xbf78, 0xfdeb, 0x1, 0x1);
        gbc.writeMem(0x1849, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1f31, gbc.sp());
        EXPECT(0x184b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00C4
        gbc.setState(0x9526, 0x7181, 0xcd0, 0xf251, 0x763f, 0x9fbb, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0x9528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9526));
        EXPECT(0x72, gbc.readMem(0x9527));
        // CB 72 00C5
        gbc.setState(0xbe18, 0x70f8, 0xac00, 0x422e, 0x430, 0xb7f0, 0x0, 0x1);
        gbc.writeMem(0xbe18, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x70f8, gbc.sp());
        EXPECT(0xbe1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe18));
        EXPECT(0x72, gbc.readMem(0xbe19));
        // CB 72 00C6
        gbc.setState(0xbc2c, 0xcfd1, 0x2e70, 0x8941, 0x1696, 0x1041, 0x0, 0x1);
        gbc.writeMem(0xbc2c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcfd1, gbc.sp());
        EXPECT(0xbc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2c));
        EXPECT(0x72, gbc.readMem(0xbc2d));
        // CB 72 00C7
        gbc.setState(0x3146, 0x3404, 0x530, 0xa1c4, 0x8ed6, 0x6d29, 0x1, 0x0);
        gbc.writeMem(0x3146, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0x3148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00C8
        gbc.setState(0x4bfc, 0x66e, 0x4c00, 0x8099, 0xd4f4, 0xb3ae, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x66e, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00C9
        gbc.setState(0x92ba, 0x9dc1, 0x4060, 0xb4d, 0x76d1, 0x8a5d, 0x0, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9dc1, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0x72, gbc.readMem(0x92bb));
        // CB 72 00CA
        gbc.setState(0x2e55, 0xfb78, 0x4f30, 0x83d7, 0xf5e7, 0xead, 0x0, 0x1);
        gbc.writeMem(0x2e55, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0x2e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00CB
        gbc.setState(0xe38e, 0x72d, 0x0, 0xdbbc, 0xb6c8, 0x6d27, 0x0, 0x0);
        gbc.writeMem(0xe38e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x72d, gbc.sp());
        EXPECT(0xe390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe38e));
        EXPECT(0x72, gbc.readMem(0xe38f));
        // CB 72 00CC
        gbc.setState(0x15e3, 0xe978, 0x6710, 0x3858, 0xe53e, 0x3d25, 0x1, 0x0);
        gbc.writeMem(0x15e3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe978, gbc.sp());
        EXPECT(0x15e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00CD
        gbc.setState(0x7c4a, 0x2048, 0xe9c0, 0x2899, 0x9c22, 0x1b7d, 0x0, 0x1);
        gbc.writeMem(0x7c4a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2048, gbc.sp());
        EXPECT(0x7c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00CF
        gbc.setState(0xa66c, 0xd12c, 0xc1b0, 0x68b7, 0x14be, 0xcd03, 0x0, 0x1);
        gbc.writeMem(0xa66c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd12c, gbc.sp());
        EXPECT(0xa66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66c));
        EXPECT(0x72, gbc.readMem(0xa66d));
        // CB 72 00D0
        gbc.setState(0xa33c, 0x4806, 0xd1f0, 0xdc3c, 0x12ff, 0xa1ef, 0x1, 0x1);
        gbc.writeMem(0xa33c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4806, gbc.sp());
        EXPECT(0xa33e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33c));
        EXPECT(0x72, gbc.readMem(0xa33d));
        // CB 72 00D1
        gbc.setState(0x873d, 0xa728, 0xfda0, 0x7ec0, 0x918f, 0x516, 0x1, 0x0);
        gbc.writeMem(0x873d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa728, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873d));
        EXPECT(0x72, gbc.readMem(0x873e));
        // CB 72 00D2
        gbc.setState(0x7e80, 0xb380, 0xd5e0, 0xd66e, 0xac78, 0x4631, 0x0, 0x1);
        gbc.writeMem(0x7e80, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xb380, gbc.sp());
        EXPECT(0x7e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00D3
        gbc.setState(0xda75, 0xcfb2, 0x5530, 0x338d, 0x85c, 0xae2b, 0x0, 0x0);
        gbc.writeMem(0xda75, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xcfb2, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda75));
        EXPECT(0x72, gbc.readMem(0xda76));
        // CB 72 00D4
        gbc.setState(0xd1bd, 0xa79f, 0xf220, 0xfd2d, 0x4454, 0x3175, 0x0, 0x0);
        gbc.writeMem(0xd1bd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa79f, gbc.sp());
        EXPECT(0xd1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1bd));
        EXPECT(0x72, gbc.readMem(0xd1be));
        // CB 72 00D5
        gbc.setState(0xcbfd, 0x5408, 0x3760, 0x8007, 0xa562, 0xc1de, 0x0, 0x0);
        gbc.writeMem(0xcbfd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5408, gbc.sp());
        EXPECT(0xcbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfd));
        EXPECT(0x72, gbc.readMem(0xcbfe));
        // CB 72 00D6
        gbc.setState(0xd60e, 0x555c, 0xa180, 0xe6b9, 0xdbf0, 0x213e, 0x1, 0x1);
        gbc.writeMem(0xd60e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x555c, gbc.sp());
        EXPECT(0xd610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60e));
        EXPECT(0x72, gbc.readMem(0xd60f));
        // CB 72 00D7
        gbc.setState(0xcf76, 0x2708, 0x9a90, 0x761a, 0x6365, 0xb5e7, 0x0, 0x0);
        gbc.writeMem(0xcf76, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x2708, gbc.sp());
        EXPECT(0xcf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf76));
        EXPECT(0x72, gbc.readMem(0xcf77));
        // CB 72 00D8
        gbc.setState(0x2225, 0xece, 0xbc70, 0xce2c, 0x300f, 0x28c0, 0x0, 0x0);
        gbc.writeMem(0x2225, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xece, gbc.sp());
        EXPECT(0x2227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00D9
        gbc.setState(0xe474, 0x3c5d, 0xd4f0, 0x4008, 0xc, 0x188c, 0x1, 0x0);
        gbc.writeMem(0xe474, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3c5d, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe474));
        EXPECT(0x72, gbc.readMem(0xe475));
        // CB 72 00DA
        gbc.setState(0x1488, 0x4aad, 0x6f30, 0xbe94, 0x4875, 0xd528, 0x0, 0x1);
        gbc.writeMem(0x1488, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4aad, gbc.sp());
        EXPECT(0x148a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00DB
        gbc.setState(0xd628, 0xa2ef, 0xa240, 0x7a04, 0xbed0, 0x574f, 0x1, 0x0);
        gbc.writeMem(0xd628, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa2ef, gbc.sp());
        EXPECT(0xd62a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd628));
        EXPECT(0x72, gbc.readMem(0xd629));
        // CB 72 00DC
        gbc.setState(0x1169, 0xf91a, 0x2a00, 0xbc8d, 0xee4c, 0x99f1, 0x1, 0x1);
        gbc.writeMem(0x1169, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf91a, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00DD
        gbc.setState(0x71cb, 0x8140, 0xd7f0, 0xb48d, 0xfd0c, 0xa314, 0x1, 0x1);
        gbc.writeMem(0x71cb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8140, gbc.sp());
        EXPECT(0x71cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00DE
        gbc.setState(0x6bb8, 0xce9d, 0xcff0, 0x7359, 0xc219, 0x7d33, 0x0, 0x0);
        gbc.writeMem(0x6bb8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xce9d, gbc.sp());
        EXPECT(0x6bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00DF
        gbc.setState(0xd26b, 0x9fcc, 0x68f0, 0xf0d6, 0xe60a, 0x18bf, 0x0, 0x1);
        gbc.writeMem(0xd26b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9fcc, gbc.sp());
        EXPECT(0xd26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd26b));
        EXPECT(0x72, gbc.readMem(0xd26c));
        // CB 72 00E0
        gbc.setState(0x961e, 0x81eb, 0x7bb0, 0x9182, 0x5717, 0x3de0, 0x1, 0x0);
        gbc.writeMem(0x961e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x81eb, gbc.sp());
        EXPECT(0x9620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961e));
        EXPECT(0x72, gbc.readMem(0x961f));
        // CB 72 00E1
        gbc.setState(0x665a, 0x223b, 0xc210, 0xd828, 0xf1bc, 0xcc81, 0x0, 0x1);
        gbc.writeMem(0x665a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x223b, gbc.sp());
        EXPECT(0x665c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00E2
        gbc.setState(0x136e, 0x307, 0x38f0, 0x63c6, 0x292b, 0xe56a, 0x0, 0x0);
        gbc.writeMem(0x136e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x307, gbc.sp());
        EXPECT(0x1370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00E3
        gbc.setState(0xaa56, 0xd3fa, 0x4760, 0x7818, 0x4a22, 0xb348, 0x1, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd3fa, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0x72, gbc.readMem(0xaa57));
        // CB 72 00E4
        gbc.setState(0xd3e4, 0x17d0, 0xc00, 0x9e99, 0xa5ab, 0x4c0a, 0x1, 0x1);
        gbc.writeMem(0xd3e4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x17d0, gbc.sp());
        EXPECT(0xd3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e4));
        EXPECT(0x72, gbc.readMem(0xd3e5));
        // CB 72 00E5
        gbc.setState(0xb434, 0x24f8, 0xbbd0, 0x1bf2, 0x8575, 0xa819, 0x0, 0x1);
        gbc.writeMem(0xb434, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x24f8, gbc.sp());
        EXPECT(0xb436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb434));
        EXPECT(0x72, gbc.readMem(0xb435));
        // CB 72 00E6
        gbc.setState(0xeee4, 0xca33, 0xb910, 0xc064, 0x7974, 0x5fe8, 0x1, 0x1);
        gbc.writeMem(0xeee4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xca33, gbc.sp());
        EXPECT(0xeee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeee4));
        EXPECT(0x72, gbc.readMem(0xeee5));
        // CB 72 00E7
        gbc.setState(0x6ce, 0x2625, 0x8430, 0x6c80, 0xabe8, 0xcbea, 0x0, 0x0);
        gbc.writeMem(0x6ce, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2625, gbc.sp());
        EXPECT(0x6d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00E9
        gbc.setState(0xba22, 0xac63, 0x8600, 0x3a54, 0xed43, 0xbd04, 0x1, 0x1);
        gbc.writeMem(0xba22, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xac63, gbc.sp());
        EXPECT(0xba24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba22));
        EXPECT(0x72, gbc.readMem(0xba23));
        // CB 72 00EA
        gbc.setState(0x559a, 0x78a7, 0x8ed0, 0x94c5, 0x91a2, 0xf5f9, 0x1, 0x1);
        gbc.writeMem(0x559a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x78a7, gbc.sp());
        EXPECT(0x559c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00EB
        gbc.setState(0x7dd8, 0x3f09, 0xc3d0, 0xd0a3, 0xf8c7, 0xd74c, 0x0, 0x1);
        gbc.writeMem(0x7dd8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3f09, gbc.sp());
        EXPECT(0x7dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00EC
        gbc.setState(0x68b5, 0x22fd, 0x78f0, 0x3ec, 0x94a2, 0xec6b, 0x1, 0x1);
        gbc.writeMem(0x68b5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x22fd, gbc.sp());
        EXPECT(0x68b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 00EE
        gbc.setState(0xe750, 0xa7ee, 0x2df0, 0xe788, 0xd450, 0xf996, 0x0, 0x1);
        gbc.writeMem(0xe750, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa7ee, gbc.sp());
        EXPECT(0xe752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe750));
        EXPECT(0x72, gbc.readMem(0xe751));
        // CB 72 00EF
        gbc.setState(0x9e50, 0x2f95, 0x40d0, 0x525e, 0x643e, 0x8574, 0x0, 0x0);
        gbc.writeMem(0x9e50, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2f95, gbc.sp());
        EXPECT(0x9e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e50));
        EXPECT(0x72, gbc.readMem(0x9e51));
        // CB 72 00F0
        gbc.setState(0xbd5d, 0x1c13, 0xcbc0, 0xf28e, 0x3892, 0x903, 0x0, 0x1);
        gbc.writeMem(0xbd5d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1c13, gbc.sp());
        EXPECT(0xbd5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5d));
        EXPECT(0x72, gbc.readMem(0xbd5e));
        // CB 72 00F1
        gbc.setState(0xd8e8, 0x945c, 0xd190, 0x34cd, 0xe478, 0xe672, 0x1, 0x1);
        gbc.writeMem(0xd8e8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x945c, gbc.sp());
        EXPECT(0xd8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e8));
        EXPECT(0x72, gbc.readMem(0xd8e9));
        // CB 72 00F3
        gbc.setState(0xab68, 0x4fde, 0xe0a0, 0xc330, 0xd0d2, 0x225d, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x4fde, gbc.sp());
        EXPECT(0xab6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab68));
        EXPECT(0x72, gbc.readMem(0xab69));
        // CB 72 00F4
        gbc.setState(0x1b8f, 0x3f16, 0xe420, 0x548c, 0xa653, 0xaa40, 0x0, 0x0);
        gbc.writeMem(0x1b8f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3f16, gbc.sp());
        EXPECT(0x1b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00F5
        gbc.setState(0x7c78, 0xf60d, 0xc240, 0x9df0, 0x6dbc, 0x8baf, 0x1, 0x1);
        gbc.writeMem(0x7c78, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf60d, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00F6
        gbc.setState(0xd2c4, 0xa22e, 0x6b00, 0x4935, 0x5ac2, 0x6754, 0x1, 0x1);
        gbc.writeMem(0xd2c4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xa22e, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c4));
        EXPECT(0x72, gbc.readMem(0xd2c5));
        // CB 72 00F7
        gbc.setState(0x6bfe, 0xaeb7, 0xe740, 0xc3cb, 0xb8dd, 0xe060, 0x1, 0x0);
        gbc.writeMem(0x6bfe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaeb7, gbc.sp());
        EXPECT(0x6c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00F8
        gbc.setState(0x99ee, 0xbd93, 0xe350, 0x7ac4, 0x4604, 0xef32, 0x1, 0x0);
        gbc.writeMem(0x99ee, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xbd93, gbc.sp());
        EXPECT(0x99f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ee));
        EXPECT(0x72, gbc.readMem(0x99ef));
        // CB 72 00F9
        gbc.setState(0xc39f, 0xfef0, 0x2330, 0x22be, 0x959d, 0x576e, 0x1, 0x0);
        gbc.writeMem(0xc39f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfef0, gbc.sp());
        EXPECT(0xc3a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc39f));
        EXPECT(0x72, gbc.readMem(0xc3a0));
        // CB 72 00FA
        gbc.setState(0x9364, 0xc39c, 0xa0c0, 0x9ba3, 0x97c7, 0x1803, 0x0, 0x1);
        gbc.writeMem(0x9364, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9364));
        EXPECT(0x72, gbc.readMem(0x9365));
        // CB 72 00FB
        gbc.setState(0xedf6, 0x8689, 0xfa00, 0xdaf, 0xd7bf, 0xfb4c, 0x0, 0x0);
        gbc.writeMem(0xedf6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8689, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf6));
        EXPECT(0x72, gbc.readMem(0xedf7));
        // CB 72 00FC
        gbc.setState(0xace7, 0xad3b, 0xfcd0, 0x173a, 0xf5d7, 0x79a0, 0x1, 0x1);
        gbc.writeMem(0xace7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xad3b, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace7));
        EXPECT(0x72, gbc.readMem(0xace8));
        // CB 72 00FD
        gbc.setState(0x863c, 0xf19a, 0x1150, 0x91d4, 0x90dd, 0xeb09, 0x1, 0x0);
        gbc.writeMem(0x863c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf19a, gbc.sp());
        EXPECT(0x863e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863c));
        EXPECT(0x72, gbc.readMem(0x863d));
        // CB 72 00FE
        gbc.setState(0x80d, 0x63c1, 0xcca0, 0x538e, 0xa3a2, 0x8846, 0x1, 0x0);
        gbc.writeMem(0x80d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x63c1, gbc.sp());
        EXPECT(0x80f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 00FF
        gbc.setState(0xe28, 0x77fd, 0x79c0, 0xac3f, 0x7ba8, 0x7355, 0x0, 0x0);
        gbc.writeMem(0xe28, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x77fd, gbc.sp());
        EXPECT(0xe2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0100
        gbc.setState(0xc254, 0xd70d, 0xeb00, 0xb806, 0x540b, 0xdc3e, 0x1, 0x1);
        gbc.writeMem(0xc254, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xd70d, gbc.sp());
        EXPECT(0xc256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc254));
        EXPECT(0x72, gbc.readMem(0xc255));
        // CB 72 0101
        gbc.setState(0xacbf, 0x8a78, 0x30b0, 0x30b0, 0x4214, 0xd502, 0x1, 0x1);
        gbc.writeMem(0xacbf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0xacc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacbf));
        EXPECT(0x72, gbc.readMem(0xacc0));
        // CB 72 0102
        gbc.setState(0x9349, 0x4b6e, 0xa4c0, 0xd153, 0xe6dc, 0xd5fe, 0x0, 0x0);
        gbc.writeMem(0x9349, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x4b6e, gbc.sp());
        EXPECT(0x934b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9349));
        EXPECT(0x72, gbc.readMem(0x934a));
        // CB 72 0103
        gbc.setState(0xcd25, 0x2865, 0x9690, 0xf291, 0xb33c, 0x9529, 0x0, 0x1);
        gbc.writeMem(0xcd25, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2865, gbc.sp());
        EXPECT(0xcd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd25));
        EXPECT(0x72, gbc.readMem(0xcd26));
        // CB 72 0104
        gbc.setState(0xde8b, 0x21fe, 0xd5f0, 0xde9c, 0xfeac, 0x6e84, 0x1, 0x0);
        gbc.writeMem(0xde8b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x21fe, gbc.sp());
        EXPECT(0xde8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8b));
        EXPECT(0x72, gbc.readMem(0xde8c));
        // CB 72 0105
        gbc.setState(0x895f, 0x25b, 0x6520, 0x94ab, 0x813e, 0x2b2e, 0x0, 0x0);
        gbc.writeMem(0x895f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x25b, gbc.sp());
        EXPECT(0x8961, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895f));
        EXPECT(0x72, gbc.readMem(0x8960));
        // CB 72 0106
        gbc.setState(0xd0b4, 0x602b, 0x7310, 0xb17, 0x29aa, 0xfcba, 0x0, 0x0);
        gbc.writeMem(0xd0b4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x602b, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b4));
        EXPECT(0x72, gbc.readMem(0xd0b5));
        // CB 72 0107
        gbc.setState(0x5b5c, 0xf9c4, 0x7830, 0xe0ed, 0x6a16, 0x62c8, 0x1, 0x1);
        gbc.writeMem(0x5b5c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf9c4, gbc.sp());
        EXPECT(0x5b5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0108
        gbc.setState(0xba14, 0x5c16, 0x4990, 0xda5f, 0xe617, 0x5448, 0x0, 0x1);
        gbc.writeMem(0xba14, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5c16, gbc.sp());
        EXPECT(0xba16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba14));
        EXPECT(0x72, gbc.readMem(0xba15));
        // CB 72 0109
        gbc.setState(0x9d32, 0x8637, 0xb3c0, 0xf466, 0xe5ef, 0xeb38, 0x1, 0x0);
        gbc.writeMem(0x9d32, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0x9d34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d32));
        EXPECT(0x72, gbc.readMem(0x9d33));
        // CB 72 010A
        gbc.setState(0x753e, 0xf327, 0x8a50, 0x7236, 0x15bf, 0x83ac, 0x1, 0x1);
        gbc.writeMem(0x753e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf327, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 010B
        gbc.setState(0x5816, 0xa4c1, 0x470, 0x2404, 0x6795, 0x4f79, 0x0, 0x0);
        gbc.writeMem(0x5816, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa4c1, gbc.sp());
        EXPECT(0x5818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 010C
        gbc.setState(0x9dba, 0xeee, 0x36e0, 0x3798, 0xb803, 0xfaa0, 0x1, 0x1);
        gbc.writeMem(0x9dba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xeee, gbc.sp());
        EXPECT(0x9dbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dba));
        EXPECT(0x72, gbc.readMem(0x9dbb));
        // CB 72 010D
        gbc.setState(0x6a8f, 0x71f, 0x51e0, 0x5989, 0x6014, 0x629, 0x1, 0x1);
        gbc.writeMem(0x6a8f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71f, gbc.sp());
        EXPECT(0x6a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 010E
        gbc.setState(0x9d0a, 0xa589, 0x33b0, 0x6079, 0x6f06, 0x7ad5, 0x1, 0x0);
        gbc.writeMem(0x9d0a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa589, gbc.sp());
        EXPECT(0x9d0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0a));
        EXPECT(0x72, gbc.readMem(0x9d0b));
        // CB 72 010F
        gbc.setState(0xe6ae, 0xf619, 0x5500, 0xdfd9, 0x9da0, 0xc510, 0x1, 0x1);
        gbc.writeMem(0xe6ae, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf619, gbc.sp());
        EXPECT(0xe6b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6ae));
        EXPECT(0x72, gbc.readMem(0xe6af));
        // CB 72 0110
        gbc.setState(0x259b, 0x7641, 0xca10, 0xda7a, 0x739e, 0x5237, 0x0, 0x1);
        gbc.writeMem(0x259b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7641, gbc.sp());
        EXPECT(0x259d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0111
        gbc.setState(0xa01d, 0x3d6d, 0xd0b0, 0xbeba, 0xcbb2, 0xa051, 0x1, 0x0);
        gbc.writeMem(0xa01d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3d6d, gbc.sp());
        EXPECT(0xa01f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa01d));
        EXPECT(0x72, gbc.readMem(0xa01e));
        // CB 72 0112
        gbc.setState(0xa2c2, 0xe575, 0xe8b0, 0x2d5, 0x6a82, 0xf315, 0x1, 0x1);
        gbc.writeMem(0xa2c2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe575, gbc.sp());
        EXPECT(0xa2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c2));
        EXPECT(0x72, gbc.readMem(0xa2c3));
        // CB 72 0113
        gbc.setState(0x87ad, 0xe967, 0x5c0, 0x3b75, 0x1bb0, 0x1bf6, 0x0, 0x0);
        gbc.writeMem(0x87ad, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe967, gbc.sp());
        EXPECT(0x87af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ad));
        EXPECT(0x72, gbc.readMem(0x87ae));
        // CB 72 0114
        gbc.setState(0x9abe, 0x107e, 0xfac0, 0xdf6d, 0x3e8b, 0xa10b, 0x1, 0x1);
        gbc.writeMem(0x9abe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x107e, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abe));
        EXPECT(0x72, gbc.readMem(0x9abf));
        // CB 72 0115
        gbc.setState(0x9762, 0xdae0, 0x3370, 0xdf26, 0x2df3, 0xe3f, 0x1, 0x0);
        gbc.writeMem(0x9762, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0x9764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9762));
        EXPECT(0x72, gbc.readMem(0x9763));
        // CB 72 0116
        gbc.setState(0xd773, 0x50c6, 0x7a90, 0x2e72, 0xc1ca, 0x377c, 0x1, 0x0);
        gbc.writeMem(0xd773, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x50c6, gbc.sp());
        EXPECT(0xd775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd773));
        EXPECT(0x72, gbc.readMem(0xd774));
        // CB 72 0117
        gbc.setState(0xf48, 0xb411, 0x7ea0, 0x4f94, 0x77e7, 0x7650, 0x1, 0x1);
        gbc.writeMem(0xf48, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb411, gbc.sp());
        EXPECT(0xf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0118
        gbc.setState(0x9371, 0x332f, 0x94c0, 0x209f, 0x6905, 0xe45e, 0x0, 0x0);
        gbc.writeMem(0x9371, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x332f, gbc.sp());
        EXPECT(0x9373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9371));
        EXPECT(0x72, gbc.readMem(0x9372));
        // CB 72 0119
        gbc.setState(0x5894, 0xd0b0, 0xf0c0, 0x157f, 0xfe5, 0x4b8a, 0x0, 0x1);
        gbc.writeMem(0x5894, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0x5896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 011A
        gbc.setState(0x20d4, 0x2ec9, 0x46c0, 0xd3b1, 0xe2b0, 0x4302, 0x1, 0x0);
        gbc.writeMem(0x20d4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0x20d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 011B
        gbc.setState(0x56b9, 0x57eb, 0x64a0, 0x2d66, 0x6c62, 0xf664, 0x1, 0x0);
        gbc.writeMem(0x56b9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x57eb, gbc.sp());
        EXPECT(0x56bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 011D
        gbc.setState(0xc7f2, 0x37a3, 0x5d0, 0x66a4, 0x10b, 0x47cf, 0x0, 0x1);
        gbc.writeMem(0xc7f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x37a3, gbc.sp());
        EXPECT(0xc7f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f2));
        EXPECT(0x72, gbc.readMem(0xc7f3));
        // CB 72 011E
        gbc.setState(0x1ef5, 0xc702, 0xfe50, 0xec4f, 0xa8bb, 0x8330, 0x0, 0x1);
        gbc.writeMem(0x1ef5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc702, gbc.sp());
        EXPECT(0x1ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 011F
        gbc.setState(0xb0d9, 0x292, 0x1d20, 0xb561, 0x19a4, 0x380, 0x0, 0x0);
        gbc.writeMem(0xb0d9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x292, gbc.sp());
        EXPECT(0xb0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d9));
        EXPECT(0x72, gbc.readMem(0xb0da));
        // CB 72 0120
        gbc.setState(0x7cce, 0x583b, 0x7700, 0x5b64, 0xce0c, 0xf2ac, 0x1, 0x1);
        gbc.writeMem(0x7cce, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x583b, gbc.sp());
        EXPECT(0x7cd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0121
        gbc.setState(0x4d04, 0x940b, 0xc370, 0x9868, 0x758c, 0xa470, 0x0, 0x1);
        gbc.writeMem(0x4d04, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x940b, gbc.sp());
        EXPECT(0x4d06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0122
        gbc.setState(0x4791, 0x9335, 0xdb20, 0xb652, 0x85ab, 0x8506, 0x1, 0x0);
        gbc.writeMem(0x4791, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9335, gbc.sp());
        EXPECT(0x4793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0123
        gbc.setState(0xd390, 0xdc7c, 0x2c40, 0xe471, 0xe89c, 0x5ca3, 0x0, 0x0);
        gbc.writeMem(0xd390, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdc7c, gbc.sp());
        EXPECT(0xd392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd390));
        EXPECT(0x72, gbc.readMem(0xd391));
        // CB 72 0124
        gbc.setState(0x40a8, 0xfa40, 0x5240, 0xcdc5, 0xe8ec, 0xed, 0x0, 0x1);
        gbc.writeMem(0x40a8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xfa40, gbc.sp());
        EXPECT(0x40aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0125
        gbc.setState(0x3104, 0xa9e3, 0x9380, 0xafdc, 0x7a1c, 0xc58b, 0x0, 0x1);
        gbc.writeMem(0x3104, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa9e3, gbc.sp());
        EXPECT(0x3106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0126
        gbc.setState(0x8f2e, 0x97f8, 0x3ae0, 0x3cfe, 0x2e7c, 0x452e, 0x0, 0x1);
        gbc.writeMem(0x8f2e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x97f8, gbc.sp());
        EXPECT(0x8f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f2e));
        EXPECT(0x72, gbc.readMem(0x8f2f));
        // CB 72 0127
        gbc.setState(0x381f, 0x5165, 0x8b20, 0x3d16, 0xa222, 0xc5e1, 0x1, 0x0);
        gbc.writeMem(0x381f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5165, gbc.sp());
        EXPECT(0x3821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0128
        gbc.setState(0xbc40, 0xa0f8, 0x75a0, 0xe5a6, 0xe367, 0xc350, 0x0, 0x1);
        gbc.writeMem(0xbc40, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa0f8, gbc.sp());
        EXPECT(0xbc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc40));
        EXPECT(0x72, gbc.readMem(0xbc41));
        // CB 72 0129
        gbc.setState(0xe379, 0xedb6, 0xdea0, 0x8ae1, 0xf4cc, 0xfa2c, 0x1, 0x1);
        gbc.writeMem(0xe379, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xedb6, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe379));
        EXPECT(0x72, gbc.readMem(0xe37a));
        // CB 72 012A
        gbc.setState(0x15b4, 0xcc2f, 0xd4c0, 0x1eb7, 0xef07, 0x3235, 0x1, 0x0);
        gbc.writeMem(0x15b4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcc2f, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 012B
        gbc.setState(0x8437, 0x9bab, 0x5fa0, 0xc7ae, 0x3343, 0x1ced, 0x0, 0x1);
        gbc.writeMem(0x8437, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9bab, gbc.sp());
        EXPECT(0x8439, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8437));
        EXPECT(0x72, gbc.readMem(0x8438));
        // CB 72 012C
        gbc.setState(0xaedd, 0xd3, 0x67c0, 0x6ea2, 0x850a, 0x6dad, 0x1, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd3, gbc.sp());
        EXPECT(0xaedf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedd));
        EXPECT(0x72, gbc.readMem(0xaede));
        // CB 72 012D
        gbc.setState(0x7ed3, 0x477f, 0xd1f0, 0x8c8b, 0xeb6b, 0x99d7, 0x1, 0x1);
        gbc.writeMem(0x7ed3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x477f, gbc.sp());
        EXPECT(0x7ed5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 012F
        gbc.setState(0xac8e, 0x7438, 0xa9c0, 0x81fb, 0xcc06, 0x3aeb, 0x0, 0x0);
        gbc.writeMem(0xac8e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7438, gbc.sp());
        EXPECT(0xac90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac8e));
        EXPECT(0x72, gbc.readMem(0xac8f));
        // CB 72 0130
        gbc.setState(0xc1cb, 0xcebc, 0x7ad0, 0xd182, 0xe37e, 0x5b25, 0x1, 0x0);
        gbc.writeMem(0xc1cb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcebc, gbc.sp());
        EXPECT(0xc1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cb));
        EXPECT(0x72, gbc.readMem(0xc1cc));
        // CB 72 0131
        gbc.setState(0xa2b2, 0x1e84, 0x5dc0, 0x99af, 0x2c4, 0x332a, 0x1, 0x0);
        gbc.writeMem(0xa2b2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0xa2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2b2));
        EXPECT(0x72, gbc.readMem(0xa2b3));
        // CB 72 0132
        gbc.setState(0xc357, 0x9547, 0xb7b0, 0x41a4, 0xfa03, 0xb875, 0x1, 0x0);
        gbc.writeMem(0xc357, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9547, gbc.sp());
        EXPECT(0xc359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc357));
        EXPECT(0x72, gbc.readMem(0xc358));
        // CB 72 0133
        gbc.setState(0x4100, 0x8c9f, 0x3ee0, 0xcdb2, 0x71f9, 0x98cb, 0x1, 0x0);
        gbc.writeMem(0x4100, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x4102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0134
        gbc.setState(0x1872, 0xbeb4, 0xedc0, 0x9279, 0x2018, 0x671f, 0x1, 0x1);
        gbc.writeMem(0x1872, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xbeb4, gbc.sp());
        EXPECT(0x1874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0135
        gbc.setState(0x128e, 0x8ac9, 0xc640, 0xbd2, 0x3ed7, 0x17f4, 0x1, 0x0);
        gbc.writeMem(0x128e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8ac9, gbc.sp());
        EXPECT(0x1290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0136
        gbc.setState(0x6160, 0xe140, 0xbd60, 0x7795, 0x24a2, 0xc837, 0x1, 0x1);
        gbc.writeMem(0x6160, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0137
        gbc.setState(0xe8ad, 0x7ec, 0x48c0, 0xff3f, 0x982b, 0xc6ec, 0x1, 0x1);
        gbc.writeMem(0xe8ad, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7ec, gbc.sp());
        EXPECT(0xe8af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ad));
        EXPECT(0x72, gbc.readMem(0xe8ae));
        // CB 72 0138
        gbc.setState(0x4506, 0x354a, 0x8930, 0x8aac, 0xdeec, 0xc7b5, 0x0, 0x0);
        gbc.writeMem(0x4506, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x354a, gbc.sp());
        EXPECT(0x4508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0139
        gbc.setState(0xe4fb, 0xbdd1, 0xe9a0, 0x3ada, 0xccfd, 0x40f6, 0x1, 0x1);
        gbc.writeMem(0xe4fb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbdd1, gbc.sp());
        EXPECT(0xe4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4fb));
        EXPECT(0x72, gbc.readMem(0xe4fc));
        // CB 72 013A
        gbc.setState(0xb7e0, 0x2683, 0x55e0, 0xf08, 0xeaf5, 0x77a9, 0x0, 0x0);
        gbc.writeMem(0xb7e0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2683, gbc.sp());
        EXPECT(0xb7e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e0));
        EXPECT(0x72, gbc.readMem(0xb7e1));
        // CB 72 013B
        gbc.setState(0x16f1, 0x3ff7, 0x64c0, 0x8b45, 0x3299, 0x2b96, 0x0, 0x0);
        gbc.writeMem(0x16f1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3ff7, gbc.sp());
        EXPECT(0x16f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 013C
        gbc.setState(0xa43d, 0xd1a9, 0xa630, 0xa234, 0x8acf, 0x1b45, 0x1, 0x0);
        gbc.writeMem(0xa43d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0xa43f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43d));
        EXPECT(0x72, gbc.readMem(0xa43e));
        // CB 72 013D
        gbc.setState(0x27e3, 0xd425, 0x7410, 0x84e1, 0x37, 0x3b47, 0x1, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xd425, gbc.sp());
        EXPECT(0x27e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 013E
        gbc.setState(0x659f, 0xb946, 0xeff0, 0x1ad2, 0x4405, 0x4b50, 0x0, 0x0);
        gbc.writeMem(0x659f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb946, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 013F
        gbc.setState(0x2bd2, 0x7edf, 0xe030, 0xfd2f, 0x831e, 0x3887, 0x1, 0x1);
        gbc.writeMem(0x2bd2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0x2bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0140
        gbc.setState(0x3d38, 0x338c, 0x2b0, 0x9016, 0xd04a, 0xf6bf, 0x1, 0x1);
        gbc.writeMem(0x3d38, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x338c, gbc.sp());
        EXPECT(0x3d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0141
        gbc.setState(0x2c66, 0xa0ef, 0x1840, 0xc0a8, 0x1e82, 0x4b6a, 0x0, 0x0);
        gbc.writeMem(0x2c66, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa0ef, gbc.sp());
        EXPECT(0x2c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0142
        gbc.setState(0x3af5, 0x6c38, 0x2230, 0x19d4, 0xe83e, 0x26db, 0x0, 0x0);
        gbc.writeMem(0x3af5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c38, gbc.sp());
        EXPECT(0x3af7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0143
        gbc.setState(0x24e9, 0xa198, 0xcf30, 0xff45, 0x2db3, 0x9716, 0x1, 0x0);
        gbc.writeMem(0x24e9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa198, gbc.sp());
        EXPECT(0x24eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0144
        gbc.setState(0xa1a0, 0xca07, 0xb260, 0x35a1, 0xb876, 0xaac1, 0x1, 0x1);
        gbc.writeMem(0xa1a0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xca07, gbc.sp());
        EXPECT(0xa1a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1a0));
        EXPECT(0x72, gbc.readMem(0xa1a1));
        // CB 72 0145
        gbc.setState(0x5379, 0x9010, 0x14a0, 0xca61, 0xd82f, 0xd9f5, 0x0, 0x0);
        gbc.writeMem(0x5379, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9010, gbc.sp());
        EXPECT(0x537b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0146
        gbc.setState(0x690b, 0xae91, 0x99e0, 0x6c, 0xe0ab, 0x4e3c, 0x0, 0x0);
        gbc.writeMem(0x690b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x690d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0149
        gbc.setState(0x4676, 0xe5e8, 0x3e70, 0x8276, 0x2c23, 0x2df5, 0x1, 0x0);
        gbc.writeMem(0x4676, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe5e8, gbc.sp());
        EXPECT(0x4678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 014A
        gbc.setState(0x320f, 0x2eb3, 0x4540, 0xca42, 0xbb78, 0xd699, 0x0, 0x1);
        gbc.writeMem(0x320f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2eb3, gbc.sp());
        EXPECT(0x3211, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 014B
        gbc.setState(0x64ff, 0x4664, 0x9c20, 0xd50, 0xfbde, 0x3fdf, 0x0, 0x0);
        gbc.writeMem(0x64ff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4664, gbc.sp());
        EXPECT(0x6501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 014C
        gbc.setState(0x633c, 0x4805, 0x4d30, 0xd74c, 0xa538, 0xef00, 0x0, 0x0);
        gbc.writeMem(0x633c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x4805, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 014D
        gbc.setState(0x928a, 0x94e2, 0x4440, 0xc5fd, 0xafdb, 0xe3cd, 0x1, 0x1);
        gbc.writeMem(0x928a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x94e2, gbc.sp());
        EXPECT(0x928c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x928a));
        EXPECT(0x72, gbc.readMem(0x928b));
        // CB 72 014E
        gbc.setState(0x2cf5, 0xf7b9, 0xa790, 0x37c9, 0x1616, 0x7a71, 0x1, 0x0);
        gbc.writeMem(0x2cf5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf7b9, gbc.sp());
        EXPECT(0x2cf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 014F
        gbc.setState(0x9c2b, 0x61a1, 0x3250, 0x925f, 0x9132, 0x4db3, 0x0, 0x1);
        gbc.writeMem(0x9c2b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x61a1, gbc.sp());
        EXPECT(0x9c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2b));
        EXPECT(0x72, gbc.readMem(0x9c2c));
        // CB 72 0150
        gbc.setState(0xefe, 0x2379, 0x2230, 0x7c34, 0xd622, 0xa494, 0x0, 0x1);
        gbc.writeMem(0xefe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2379, gbc.sp());
        EXPECT(0xf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0151
        gbc.setState(0x236b, 0xd7a9, 0xfa40, 0x77c5, 0x665d, 0xd88a, 0x0, 0x1);
        gbc.writeMem(0x236b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd7a9, gbc.sp());
        EXPECT(0x236d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0152
        gbc.setState(0xc887, 0x9e9c, 0xb280, 0x8277, 0x7b78, 0x861c, 0x0, 0x0);
        gbc.writeMem(0xc887, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9e9c, gbc.sp());
        EXPECT(0xc889, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc887));
        EXPECT(0x72, gbc.readMem(0xc888));
        // CB 72 0153
        gbc.setState(0xbf7a, 0x3e3, 0xe3f0, 0x8390, 0x592b, 0x1c08, 0x0, 0x1);
        gbc.writeMem(0xbf7a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3e3, gbc.sp());
        EXPECT(0xbf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf7a));
        EXPECT(0x72, gbc.readMem(0xbf7b));
        // CB 72 0154
        gbc.setState(0x5a4f, 0xb133, 0x89b0, 0x17be, 0xe36e, 0x91c, 0x1, 0x1);
        gbc.writeMem(0x5a4f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb133, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0155
        gbc.setState(0xe553, 0x7d4b, 0x3fc0, 0x30bf, 0x3829, 0x1f34, 0x1, 0x0);
        gbc.writeMem(0xe553, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7d4b, gbc.sp());
        EXPECT(0xe555, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe553));
        EXPECT(0x72, gbc.readMem(0xe554));
        // CB 72 0156
        gbc.setState(0x43b1, 0x43e4, 0x1f80, 0xe9c6, 0x4d9a, 0x39e5, 0x1, 0x1);
        gbc.writeMem(0x43b1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0157
        gbc.setState(0x69e8, 0xd6a0, 0xa580, 0xbaa4, 0x17a0, 0xce27, 0x1, 0x1);
        gbc.writeMem(0x69e8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd6a0, gbc.sp());
        EXPECT(0x69ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0158
        gbc.setState(0x6969, 0x890f, 0xf8e0, 0x345e, 0xcfc4, 0xafd1, 0x1, 0x0);
        gbc.writeMem(0x6969, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x890f, gbc.sp());
        EXPECT(0x696b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0159
        gbc.setState(0x4c1f, 0xd26c, 0xef40, 0xda58, 0x8e93, 0x63c7, 0x1, 0x0);
        gbc.writeMem(0x4c1f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd26c, gbc.sp());
        EXPECT(0x4c21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 015A
        gbc.setState(0xe2c4, 0xd62c, 0x37d0, 0xc5b4, 0x8e11, 0xea11, 0x1, 0x0);
        gbc.writeMem(0xe2c4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0xe2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c4));
        EXPECT(0x72, gbc.readMem(0xe2c5));
        // CB 72 015B
        gbc.setState(0x5296, 0x4159, 0xe650, 0x5ed3, 0xef48, 0x2b67, 0x0, 0x1);
        gbc.writeMem(0x5296, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4159, gbc.sp());
        EXPECT(0x5298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 015C
        gbc.setState(0x7585, 0xcb75, 0x64e0, 0xec6c, 0xa065, 0x2747, 0x0, 0x0);
        gbc.writeMem(0x7585, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcb75, gbc.sp());
        EXPECT(0x7587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 015D
        gbc.setState(0x437f, 0x6123, 0xa340, 0xb38, 0xe18, 0x965c, 0x1, 0x1);
        gbc.writeMem(0x437f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6123, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 015E
        gbc.setState(0xc6e5, 0x3043, 0x15d0, 0xbddd, 0xd9ce, 0xad27, 0x1, 0x0);
        gbc.writeMem(0xc6e5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3043, gbc.sp());
        EXPECT(0xc6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e5));
        EXPECT(0x72, gbc.readMem(0xc6e6));
        // CB 72 015F
        gbc.setState(0x7cef, 0x7411, 0x24f0, 0xd20e, 0xb751, 0xfffc, 0x0, 0x1);
        gbc.writeMem(0x7cef, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7411, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0160
        gbc.setState(0x2e85, 0xe0fa, 0x2490, 0xc575, 0x3a26, 0xb4bc, 0x1, 0x0);
        gbc.writeMem(0x2e85, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe0fa, gbc.sp());
        EXPECT(0x2e87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0161
        gbc.setState(0xe21, 0x659e, 0x7780, 0x6c7d, 0x4dbc, 0xa893, 0x0, 0x1);
        gbc.writeMem(0xe21, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x659e, gbc.sp());
        EXPECT(0xe23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0163
        gbc.setState(0xa0f0, 0x55db, 0xccc0, 0x2d37, 0x7a8f, 0x13b8, 0x1, 0x0);
        gbc.writeMem(0xa0f0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x55db, gbc.sp());
        EXPECT(0xa0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f0));
        EXPECT(0x72, gbc.readMem(0xa0f1));
        // CB 72 0164
        gbc.setState(0x4513, 0xc617, 0x2ba0, 0xcc88, 0x8090, 0x561c, 0x0, 0x1);
        gbc.writeMem(0x4513, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc617, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0165
        gbc.setState(0xd4e9, 0x951d, 0x9860, 0x3293, 0x10ea, 0x1f1c, 0x1, 0x1);
        gbc.writeMem(0xd4e9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x951d, gbc.sp());
        EXPECT(0xd4eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4e9));
        EXPECT(0x72, gbc.readMem(0xd4ea));
        // CB 72 0166
        gbc.setState(0x4179, 0x4baf, 0xd490, 0x9c50, 0x2d54, 0x63d1, 0x1, 0x1);
        gbc.writeMem(0x4179, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4baf, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0167
        gbc.setState(0x97aa, 0x6f41, 0x3f10, 0x468c, 0x2788, 0x2b25, 0x0, 0x0);
        gbc.writeMem(0x97aa, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6f41, gbc.sp());
        EXPECT(0x97ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97aa));
        EXPECT(0x72, gbc.readMem(0x97ab));
        // CB 72 0168
        gbc.setState(0x83b0, 0x298c, 0x1b40, 0x9c9e, 0x3575, 0xaf08, 0x0, 0x1);
        gbc.writeMem(0x83b0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x298c, gbc.sp());
        EXPECT(0x83b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83b0));
        EXPECT(0x72, gbc.readMem(0x83b1));
        // CB 72 0169
        gbc.setState(0x727d, 0x48d8, 0xd4e0, 0xc600, 0xd5ec, 0x10b7, 0x0, 0x1);
        gbc.writeMem(0x727d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 016A
        gbc.setState(0x46f5, 0x78cc, 0x1ce0, 0x330, 0xf833, 0x1c3b, 0x1, 0x1);
        gbc.writeMem(0x46f5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x78cc, gbc.sp());
        EXPECT(0x46f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 016C
        gbc.setState(0x7bc6, 0xf939, 0x8d60, 0x4405, 0x85db, 0x6a1f, 0x1, 0x0);
        gbc.writeMem(0x7bc6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x7bc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 016D
        gbc.setState(0x302, 0x965a, 0xb130, 0x9908, 0x82b0, 0xf3a9, 0x0, 0x1);
        gbc.writeMem(0x302, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x965a, gbc.sp());
        EXPECT(0x304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 016E
        gbc.setState(0x9ea2, 0x187d, 0x410, 0x276a, 0x3647, 0x44b9, 0x0, 0x0);
        gbc.writeMem(0x9ea2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x187d, gbc.sp());
        EXPECT(0x9ea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea2));
        EXPECT(0x72, gbc.readMem(0x9ea3));
        // CB 72 016F
        gbc.setState(0x9d59, 0x2fa4, 0x8d10, 0xaa13, 0xbb4a, 0xa75c, 0x1, 0x1);
        gbc.writeMem(0x9d59, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2fa4, gbc.sp());
        EXPECT(0x9d5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d59));
        EXPECT(0x72, gbc.readMem(0x9d5a));
        // CB 72 0170
        gbc.setState(0x680f, 0xc159, 0x84f0, 0x63a1, 0x7a38, 0x7a8d, 0x1, 0x0);
        gbc.writeMem(0x680f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc159, gbc.sp());
        EXPECT(0x6811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0171
        gbc.setState(0x8aa0, 0xf644, 0x31f0, 0x35b3, 0x46af, 0xff0d, 0x1, 0x0);
        gbc.writeMem(0x8aa0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf644, gbc.sp());
        EXPECT(0x8aa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8aa0));
        EXPECT(0x72, gbc.readMem(0x8aa1));
        // CB 72 0172
        gbc.setState(0x47f6, 0xe7e0, 0x2500, 0xf6ef, 0x13ce, 0x62b, 0x0, 0x0);
        gbc.writeMem(0x47f6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe7e0, gbc.sp());
        EXPECT(0x47f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0173
        gbc.setState(0xad5e, 0x47c6, 0xdc00, 0xedbe, 0xc45e, 0x58ec, 0x1, 0x0);
        gbc.writeMem(0xad5e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47c6, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad5e));
        EXPECT(0x72, gbc.readMem(0xad5f));
        // CB 72 0174
        gbc.setState(0xad66, 0xcaf1, 0x6a00, 0xd677, 0xd4bc, 0x6308, 0x0, 0x0);
        gbc.writeMem(0xad66, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcaf1, gbc.sp());
        EXPECT(0xad68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad66));
        EXPECT(0x72, gbc.readMem(0xad67));
        // CB 72 0175
        gbc.setState(0x5b18, 0x323c, 0xa230, 0xd7cc, 0x7416, 0x4594, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x323c, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0176
        gbc.setState(0x1e5c, 0x49a1, 0x1f60, 0x2a3d, 0x58b9, 0xd138, 0x1, 0x0);
        gbc.writeMem(0x1e5c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x49a1, gbc.sp());
        EXPECT(0x1e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0177
        gbc.setState(0xe959, 0xf26, 0x55e0, 0x4c12, 0x389, 0xd979, 0x0, 0x0);
        gbc.writeMem(0xe959, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf26, gbc.sp());
        EXPECT(0xe95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe959));
        EXPECT(0x72, gbc.readMem(0xe95a));
        // CB 72 0178
        gbc.setState(0x3aea, 0xcbae, 0xd3b0, 0x52f6, 0x8f70, 0x51a0, 0x1, 0x0);
        gbc.writeMem(0x3aea, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcbae, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0179
        gbc.setState(0x53b7, 0xe401, 0xf9d0, 0x1965, 0x6c8b, 0x859b, 0x0, 0x0);
        gbc.writeMem(0x53b7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xe401, gbc.sp());
        EXPECT(0x53b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 017A
        gbc.setState(0x1e0c, 0xc695, 0xc900, 0xa8aa, 0x6eb8, 0xb84c, 0x1, 0x0);
        gbc.writeMem(0x1e0c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc695, gbc.sp());
        EXPECT(0x1e0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 017B
        gbc.setState(0xa164, 0xcd0b, 0xa920, 0xe568, 0x82f8, 0x51ed, 0x0, 0x1);
        gbc.writeMem(0xa164, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcd0b, gbc.sp());
        EXPECT(0xa166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa164));
        EXPECT(0x72, gbc.readMem(0xa165));
        // CB 72 017C
        gbc.setState(0xe3fb, 0x3cff, 0xb190, 0xa33a, 0x2f55, 0xcab1, 0x1, 0x1);
        gbc.writeMem(0xe3fb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3cff, gbc.sp());
        EXPECT(0xe3fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3fb));
        EXPECT(0x72, gbc.readMem(0xe3fc));
        // CB 72 017D
        gbc.setState(0xca6a, 0x84d4, 0xdc80, 0x52a1, 0x4065, 0xc250, 0x1, 0x1);
        gbc.writeMem(0xca6a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x84d4, gbc.sp());
        EXPECT(0xca6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca6a));
        EXPECT(0x72, gbc.readMem(0xca6b));
        // CB 72 017E
        gbc.setState(0x406f, 0x48ee, 0x7fe0, 0x8cac, 0xb02c, 0xb99b, 0x0, 0x0);
        gbc.writeMem(0x406f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0x4071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 017F
        gbc.setState(0x27f3, 0xdeda, 0x13d0, 0x1ae2, 0x581, 0x908f, 0x0, 0x1);
        gbc.writeMem(0x27f3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xdeda, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0181
        gbc.setState(0xc3ca, 0x5aa4, 0x3b90, 0x7a01, 0x71b0, 0x6849, 0x0, 0x0);
        gbc.writeMem(0xc3ca, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0xc3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3ca));
        EXPECT(0x72, gbc.readMem(0xc3cb));
        // CB 72 0182
        gbc.setState(0xdcd8, 0x2bf9, 0x4090, 0x4e11, 0x764d, 0xf70d, 0x1, 0x1);
        gbc.writeMem(0xdcd8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2bf9, gbc.sp());
        EXPECT(0xdcda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd8));
        EXPECT(0x72, gbc.readMem(0xdcd9));
        // CB 72 0183
        gbc.setState(0xabda, 0x2e9d, 0x3f60, 0x1031, 0xbf87, 0xaafe, 0x1, 0x0);
        gbc.writeMem(0xabda, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2e9d, gbc.sp());
        EXPECT(0xabdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabda));
        EXPECT(0x72, gbc.readMem(0xabdb));
        // CB 72 0184
        gbc.setState(0x4b00, 0x3452, 0x2b90, 0x5fb8, 0x4609, 0x43dc, 0x1, 0x1);
        gbc.writeMem(0x4b00, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0x4b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0185
        gbc.setState(0x17c0, 0x8b54, 0x5ba0, 0x1bb1, 0x3d54, 0xc34a, 0x1, 0x0);
        gbc.writeMem(0x17c0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x8b54, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0186
        gbc.setState(0x6d64, 0xdd57, 0x2de0, 0x7ebe, 0x462b, 0xf1b6, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xdd57, gbc.sp());
        EXPECT(0x6d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0187
        gbc.setState(0x2811, 0x2e69, 0x3a50, 0x3d47, 0xbb73, 0xd967, 0x0, 0x0);
        gbc.writeMem(0x2811, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2e69, gbc.sp());
        EXPECT(0x2813, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0188
        gbc.setState(0xac50, 0x4a62, 0xc540, 0x1f40, 0xece3, 0x7184, 0x0, 0x1);
        gbc.writeMem(0xac50, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4a62, gbc.sp());
        EXPECT(0xac52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac50));
        EXPECT(0x72, gbc.readMem(0xac51));
        // CB 72 0189
        gbc.setState(0xb60d, 0xf801, 0xdd40, 0x2c5c, 0x6bfe, 0xffbd, 0x1, 0x1);
        gbc.writeMem(0xb60d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf801, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0x72, gbc.readMem(0xb60e));
        // CB 72 018A
        gbc.setState(0xceec, 0x314a, 0x9600, 0xcbc2, 0x5a68, 0x266c, 0x0, 0x0);
        gbc.writeMem(0xceec, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0xceee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceec));
        EXPECT(0x72, gbc.readMem(0xceed));
        // CB 72 018B
        gbc.setState(0xe5eb, 0xc9b4, 0x7fe0, 0x2b95, 0x46f8, 0xe820, 0x1, 0x1);
        gbc.writeMem(0xe5eb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc9b4, gbc.sp());
        EXPECT(0xe5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5eb));
        EXPECT(0x72, gbc.readMem(0xe5ec));
        // CB 72 018C
        gbc.setState(0x3035, 0xe789, 0xbe40, 0xc05d, 0x4bd2, 0x31e9, 0x0, 0x1);
        gbc.writeMem(0x3035, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe789, gbc.sp());
        EXPECT(0x3037, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 018D
        gbc.setState(0x246a, 0x313b, 0xacf0, 0xb9f0, 0x88a8, 0x3f3a, 0x1, 0x0);
        gbc.writeMem(0x246a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x313b, gbc.sp());
        EXPECT(0x246c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 018E
        gbc.setState(0x201d, 0x667, 0x3640, 0xbb19, 0x26b, 0xc250, 0x0, 0x1);
        gbc.writeMem(0x201d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x667, gbc.sp());
        EXPECT(0x201f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 018F
        gbc.setState(0x34f8, 0xe89, 0x9760, 0x7700, 0x5aaf, 0x1ec5, 0x0, 0x1);
        gbc.writeMem(0x34f8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x34fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0190
        gbc.setState(0x4b93, 0xe291, 0xdb90, 0x6e4e, 0xda4d, 0x18d, 0x0, 0x1);
        gbc.writeMem(0x4b93, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe291, gbc.sp());
        EXPECT(0x4b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0191
        gbc.setState(0x3d15, 0x3938, 0x1ed0, 0xd830, 0x75b9, 0x7283, 0x1, 0x1);
        gbc.writeMem(0x3d15, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x3d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0192
        gbc.setState(0xcc62, 0x9ec8, 0xa150, 0xd1c9, 0x9924, 0x5c6a, 0x1, 0x1);
        gbc.writeMem(0xcc62, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9ec8, gbc.sp());
        EXPECT(0xcc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc62));
        EXPECT(0x72, gbc.readMem(0xcc63));
        // CB 72 0193
        gbc.setState(0xa977, 0xd75c, 0x1f20, 0xbe89, 0x4e8d, 0x36b1, 0x0, 0x0);
        gbc.writeMem(0xa977, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd75c, gbc.sp());
        EXPECT(0xa979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa977));
        EXPECT(0x72, gbc.readMem(0xa978));
        // CB 72 0194
        gbc.setState(0x170c, 0x6a9c, 0xdf30, 0x6e90, 0x3886, 0x38a0, 0x1, 0x0);
        gbc.writeMem(0x170c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6a9c, gbc.sp());
        EXPECT(0x170e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0195
        gbc.setState(0xe35e, 0x77c2, 0x5fa0, 0x4e08, 0x1b01, 0xf72e, 0x0, 0x0);
        gbc.writeMem(0xe35e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x77c2, gbc.sp());
        EXPECT(0xe360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe35e));
        EXPECT(0x72, gbc.readMem(0xe35f));
        // CB 72 0196
        gbc.setState(0xebff, 0xd203, 0x64b0, 0x96f7, 0x37e4, 0x9607, 0x1, 0x0);
        gbc.writeMem(0xebff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd203, gbc.sp());
        EXPECT(0xec01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebff));
        EXPECT(0x72, gbc.readMem(0xec00));
        // CB 72 0197
        gbc.setState(0x209e, 0x6187, 0xc050, 0x663a, 0x9922, 0xd4db, 0x0, 0x1);
        gbc.writeMem(0x209e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6187, gbc.sp());
        EXPECT(0x20a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0199
        gbc.setState(0x8c87, 0xd0ea, 0xd610, 0x57c1, 0x4448, 0xdf66, 0x1, 0x1);
        gbc.writeMem(0x8c87, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd0ea, gbc.sp());
        EXPECT(0x8c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c87));
        EXPECT(0x72, gbc.readMem(0x8c88));
        // CB 72 019A
        gbc.setState(0x1741, 0xd3f2, 0x9cb0, 0xe5f5, 0xb7c7, 0xcb22, 0x0, 0x1);
        gbc.writeMem(0x1741, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd3f2, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 019B
        gbc.setState(0x7608, 0x2d02, 0xb490, 0xf596, 0xd17e, 0xb8d5, 0x0, 0x0);
        gbc.writeMem(0x7608, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d02, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 019D
        gbc.setState(0xb63f, 0x8e43, 0xf2b0, 0x1eb3, 0xee15, 0x73bf, 0x0, 0x0);
        gbc.writeMem(0xb63f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8e43, gbc.sp());
        EXPECT(0xb641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63f));
        EXPECT(0x72, gbc.readMem(0xb640));
        // CB 72 019E
        gbc.setState(0x5f24, 0x53b5, 0xd2d0, 0x949e, 0xeccb, 0xcf33, 0x0, 0x0);
        gbc.writeMem(0x5f24, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x53b5, gbc.sp());
        EXPECT(0x5f26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 019F
        gbc.setState(0x311a, 0xd5e8, 0xf740, 0xae1f, 0x3542, 0x3cba, 0x0, 0x0);
        gbc.writeMem(0x311a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd5e8, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01A0
        gbc.setState(0xdbaa, 0x41f7, 0x7f80, 0xac33, 0xa0a9, 0x8700, 0x0, 0x0);
        gbc.writeMem(0xdbaa, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x41f7, gbc.sp());
        EXPECT(0xdbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbaa));
        EXPECT(0x72, gbc.readMem(0xdbab));
        // CB 72 01A1
        gbc.setState(0xeb5b, 0xb43c, 0x7820, 0xa934, 0x57f3, 0xe04f, 0x0, 0x0);
        gbc.writeMem(0xeb5b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb43c, gbc.sp());
        EXPECT(0xeb5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5b));
        EXPECT(0x72, gbc.readMem(0xeb5c));
        // CB 72 01A2
        gbc.setState(0x2e27, 0xc1bd, 0xf5f0, 0x709e, 0xc062, 0xee93, 0x0, 0x0);
        gbc.writeMem(0x2e27, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc1bd, gbc.sp());
        EXPECT(0x2e29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01A3
        gbc.setState(0x12ef, 0x4f9a, 0x6cc0, 0x45d2, 0x6046, 0x8a8d, 0x0, 0x0);
        gbc.writeMem(0x12ef, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4f9a, gbc.sp());
        EXPECT(0x12f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01A4
        gbc.setState(0x76a7, 0xa6ce, 0xe70, 0xbedc, 0x9542, 0x9d83, 0x0, 0x1);
        gbc.writeMem(0x76a7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa6ce, gbc.sp());
        EXPECT(0x76a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01A5
        gbc.setState(0x1fff, 0xd73c, 0x5c90, 0x73d0, 0x9a0d, 0xc399, 0x0, 0x1);
        gbc.writeMem(0x1fff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd73c, gbc.sp());
        EXPECT(0x2001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01A6
        gbc.setState(0x5ad5, 0x755, 0x6360, 0xa4fb, 0xda25, 0x9c57, 0x0, 0x1);
        gbc.writeMem(0x5ad5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x755, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01A7
        gbc.setState(0xbdc9, 0x806b, 0xe630, 0xb531, 0xbe6b, 0x31c8, 0x1, 0x1);
        gbc.writeMem(0xbdc9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x806b, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdc9));
        EXPECT(0x72, gbc.readMem(0xbdca));
        // CB 72 01A8
        gbc.setState(0x89f9, 0x58c8, 0x42a0, 0x279a, 0xa14b, 0x75ae, 0x0, 0x1);
        gbc.writeMem(0x89f9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x89fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89f9));
        EXPECT(0x72, gbc.readMem(0x89fa));
        // CB 72 01A9
        gbc.setState(0x870a, 0xf023, 0x4400, 0x3cf0, 0x9c9c, 0x6414, 0x0, 0x0);
        gbc.writeMem(0x870a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf023, gbc.sp());
        EXPECT(0x870c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870a));
        EXPECT(0x72, gbc.readMem(0x870b));
        // CB 72 01AA
        gbc.setState(0x9953, 0x8f40, 0x64f0, 0xfe75, 0xcdf2, 0x458b, 0x0, 0x0);
        gbc.writeMem(0x9953, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0x9955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9953));
        EXPECT(0x72, gbc.readMem(0x9954));
        // CB 72 01AB
        gbc.setState(0x2a68, 0x1f89, 0xea90, 0xd847, 0xc8a8, 0xa177, 0x1, 0x1);
        gbc.writeMem(0x2a68, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1f89, gbc.sp());
        EXPECT(0x2a6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01AC
        gbc.setState(0x5670, 0xb383, 0x5a90, 0x5b53, 0xfde0, 0xec26, 0x0, 0x0);
        gbc.writeMem(0x5670, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb383, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01AD
        gbc.setState(0xbb28, 0xd4bb, 0xd4f0, 0x1e0c, 0x95e8, 0x35ba, 0x0, 0x1);
        gbc.writeMem(0xbb28, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd4bb, gbc.sp());
        EXPECT(0xbb2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb28));
        EXPECT(0x72, gbc.readMem(0xbb29));
        // CB 72 01AF
        gbc.setState(0x7d74, 0x1e99, 0x7950, 0xa43f, 0x44e3, 0xeceb, 0x1, 0x0);
        gbc.writeMem(0x7d74, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1e99, gbc.sp());
        EXPECT(0x7d76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01B0
        gbc.setState(0x96b7, 0x1754, 0xcde0, 0xcce7, 0x6b59, 0xfe18, 0x1, 0x1);
        gbc.writeMem(0x96b7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1754, gbc.sp());
        EXPECT(0x96b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b7));
        EXPECT(0x72, gbc.readMem(0x96b8));
        // CB 72 01B1
        gbc.setState(0xdf85, 0x13e, 0xecd0, 0x90ad, 0x3715, 0x2459, 0x0, 0x0);
        gbc.writeMem(0xdf85, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x13e, gbc.sp());
        EXPECT(0xdf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf85));
        EXPECT(0x72, gbc.readMem(0xdf86));
        // CB 72 01B2
        gbc.setState(0x8db9, 0xb300, 0x8990, 0x2e76, 0x25fc, 0xc02b, 0x1, 0x1);
        gbc.writeMem(0x8db9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb300, gbc.sp());
        EXPECT(0x8dbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db9));
        EXPECT(0x72, gbc.readMem(0x8dba));
        // CB 72 01B3
        gbc.setState(0x3ecc, 0xb7be, 0x1310, 0xcd44, 0xfc2d, 0xae9f, 0x1, 0x1);
        gbc.writeMem(0x3ecc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb7be, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01B5
        gbc.setState(0x82ff, 0x9be7, 0xdc70, 0xc418, 0xa1db, 0xb0c0, 0x0, 0x1);
        gbc.writeMem(0x82ff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9be7, gbc.sp());
        EXPECT(0x8301, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ff));
        EXPECT(0x72, gbc.readMem(0x8300));
        // CB 72 01B6
        gbc.setState(0x9e24, 0x7bde, 0x62f0, 0x3934, 0x83eb, 0x1848, 0x1, 0x0);
        gbc.writeMem(0x9e24, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x7bde, gbc.sp());
        EXPECT(0x9e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e24));
        EXPECT(0x72, gbc.readMem(0x9e25));
        // CB 72 01B7
        gbc.setState(0xb813, 0xdde6, 0xb00, 0x9b72, 0xc3c9, 0x928d, 0x0, 0x1);
        gbc.writeMem(0xb813, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xdde6, gbc.sp());
        EXPECT(0xb815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb813));
        EXPECT(0x72, gbc.readMem(0xb814));
        // CB 72 01B8
        gbc.setState(0xb605, 0xe29d, 0x1a10, 0x5392, 0x7c4a, 0x500f, 0x1, 0x1);
        gbc.writeMem(0xb605, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb605));
        EXPECT(0x72, gbc.readMem(0xb606));
        // CB 72 01B9
        gbc.setState(0xeab9, 0x57d2, 0x70a0, 0xc24b, 0x565e, 0x34d2, 0x0, 0x1);
        gbc.writeMem(0xeab9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x57d2, gbc.sp());
        EXPECT(0xeabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeab9));
        EXPECT(0x72, gbc.readMem(0xeaba));
        // CB 72 01BA
        gbc.setState(0x8e0e, 0x323f, 0x2af0, 0xebe5, 0xba3d, 0x6eb7, 0x1, 0x1);
        gbc.writeMem(0x8e0e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x323f, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e0e));
        EXPECT(0x72, gbc.readMem(0x8e0f));
        // CB 72 01BB
        gbc.setState(0x67a5, 0xb431, 0x72f0, 0x2169, 0xbe9b, 0xca4d, 0x0, 0x1);
        gbc.writeMem(0x67a5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb431, gbc.sp());
        EXPECT(0x67a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01BC
        gbc.setState(0x78d1, 0x1ea5, 0x3700, 0xbc72, 0x7625, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0x78d1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x1ea5, gbc.sp());
        EXPECT(0x78d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01BD
        gbc.setState(0x7a29, 0xdbc, 0x81e0, 0x623b, 0xd6c1, 0x808b, 0x1, 0x1);
        gbc.writeMem(0x7a29, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdbc, gbc.sp());
        EXPECT(0x7a2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01BE
        gbc.setState(0xecb0, 0xdf85, 0x35f0, 0x5e92, 0xdf10, 0x3a95, 0x1, 0x1);
        gbc.writeMem(0xecb0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xdf85, gbc.sp());
        EXPECT(0xecb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb0));
        EXPECT(0x72, gbc.readMem(0xecb1));
        // CB 72 01BF
        gbc.setState(0x1d5d, 0x9fad, 0xe6f0, 0xe62d, 0x28ff, 0x37ca, 0x0, 0x0);
        gbc.writeMem(0x1d5d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x9fad, gbc.sp());
        EXPECT(0x1d5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01C0
        gbc.setState(0x88cd, 0xa7fd, 0xf90, 0x1a3f, 0xbf5f, 0x51c9, 0x1, 0x1);
        gbc.writeMem(0x88cd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xa7fd, gbc.sp());
        EXPECT(0x88cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cd));
        EXPECT(0x72, gbc.readMem(0x88ce));
        // CB 72 01C2
        gbc.setState(0x6e72, 0xc49e, 0x6410, 0xf0d, 0x35d7, 0xa6ae, 0x1, 0x0);
        gbc.writeMem(0x6e72, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xc49e, gbc.sp());
        EXPECT(0x6e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01C3
        gbc.setState(0xa704, 0x1f39, 0x5f0, 0xaf12, 0xd5e2, 0x3a17, 0x0, 0x1);
        gbc.writeMem(0xa704, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1f39, gbc.sp());
        EXPECT(0xa706, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa704));
        EXPECT(0x72, gbc.readMem(0xa705));
        // CB 72 01C4
        gbc.setState(0x3864, 0x98e4, 0x67e0, 0xbba8, 0xfb69, 0x5cb8, 0x1, 0x1);
        gbc.writeMem(0x3864, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x98e4, gbc.sp());
        EXPECT(0x3866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01C5
        gbc.setState(0x490a, 0xca55, 0x1d10, 0x8740, 0x49c3, 0x8709, 0x1, 0x1);
        gbc.writeMem(0x490a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xca55, gbc.sp());
        EXPECT(0x490c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01C6
        gbc.setState(0x2730, 0x41ec, 0x1d70, 0xf567, 0x544, 0x756d, 0x0, 0x0);
        gbc.writeMem(0x2730, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x41ec, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01C7
        gbc.setState(0x6d90, 0x2545, 0x6f70, 0xd751, 0x5621, 0x740, 0x1, 0x1);
        gbc.writeMem(0x6d90, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2545, gbc.sp());
        EXPECT(0x6d92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01C8
        gbc.setState(0xb07b, 0xb4c6, 0xf30, 0x4be3, 0xf351, 0x5c4e, 0x0, 0x0);
        gbc.writeMem(0xb07b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb4c6, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07b));
        EXPECT(0x72, gbc.readMem(0xb07c));
        // CB 72 01C9
        gbc.setState(0x769f, 0xc78f, 0x1fe0, 0xb1eb, 0x184a, 0xf70, 0x1, 0x1);
        gbc.writeMem(0x769f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc78f, gbc.sp());
        EXPECT(0x76a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01CA
        gbc.setState(0xafc1, 0xf17d, 0x6f80, 0xe22c, 0x8835, 0xe109, 0x0, 0x0);
        gbc.writeMem(0xafc1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf17d, gbc.sp());
        EXPECT(0xafc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc1));
        EXPECT(0x72, gbc.readMem(0xafc2));
        // CB 72 01CB
        gbc.setState(0x3f9b, 0xba57, 0xfc20, 0xb718, 0xebf2, 0xc3da, 0x0, 0x1);
        gbc.writeMem(0x3f9b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xba57, gbc.sp());
        EXPECT(0x3f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01CC
        gbc.setState(0xbca9, 0x5d4e, 0x9a50, 0x77bf, 0x36dd, 0xc76c, 0x0, 0x0);
        gbc.writeMem(0xbca9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d4e, gbc.sp());
        EXPECT(0xbcab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca9));
        EXPECT(0x72, gbc.readMem(0xbcaa));
        // CB 72 01CD
        gbc.setState(0x7631, 0x5a4f, 0x7650, 0x62b, 0x5203, 0xb7f9, 0x0, 0x0);
        gbc.writeMem(0x7631, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0x7633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01CE
        gbc.setState(0xe7a6, 0xfeea, 0x5470, 0xec50, 0xd877, 0x83e0, 0x0, 0x1);
        gbc.writeMem(0xe7a6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a6));
        EXPECT(0x72, gbc.readMem(0xe7a7));
        // CB 72 01CF
        gbc.setState(0x70a5, 0xb174, 0x1e00, 0x20da, 0x6204, 0xa21f, 0x1, 0x1);
        gbc.writeMem(0x70a5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb174, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01D0
        gbc.setState(0x6, 0x9876, 0xeff0, 0x5dd4, 0xec9c, 0xd18f, 0x0, 0x0);
        gbc.writeMem(0x6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9876, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01D1
        gbc.setState(0x81c5, 0xdfbb, 0xff20, 0xc35c, 0xaa1b, 0x8d62, 0x1, 0x0);
        gbc.writeMem(0x81c5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdfbb, gbc.sp());
        EXPECT(0x81c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c5));
        EXPECT(0x72, gbc.readMem(0x81c6));
        // CB 72 01D2
        gbc.setState(0x5c7f, 0x9d63, 0xe560, 0xca4, 0x4bae, 0xe65b, 0x0, 0x1);
        gbc.writeMem(0x5c7f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9d63, gbc.sp());
        EXPECT(0x5c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01D3
        gbc.setState(0xc281, 0x463c, 0x1be0, 0x3484, 0x1719, 0x91a9, 0x1, 0x0);
        gbc.writeMem(0xc281, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x463c, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc281));
        EXPECT(0x72, gbc.readMem(0xc282));
        // CB 72 01D4
        gbc.setState(0x1bdb, 0xa8bb, 0x6df0, 0x733e, 0xc82f, 0xc403, 0x0, 0x1);
        gbc.writeMem(0x1bdb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa8bb, gbc.sp());
        EXPECT(0x1bdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01D5
        gbc.setState(0xafdb, 0x1fc8, 0x8290, 0xbb2e, 0xa13f, 0x87bf, 0x1, 0x0);
        gbc.writeMem(0xafdb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1fc8, gbc.sp());
        EXPECT(0xafdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafdb));
        EXPECT(0x72, gbc.readMem(0xafdc));
        // CB 72 01D6
        gbc.setState(0xa9b7, 0xb980, 0xaf80, 0x9b67, 0xd549, 0x249f, 0x1, 0x1);
        gbc.writeMem(0xa9b7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb980, gbc.sp());
        EXPECT(0xa9b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9b7));
        EXPECT(0x72, gbc.readMem(0xa9b8));
        // CB 72 01D7
        gbc.setState(0x2484, 0xdfb4, 0xf4b0, 0x19ce, 0x4cd5, 0x3f5c, 0x0, 0x1);
        gbc.writeMem(0x2484, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xdfb4, gbc.sp());
        EXPECT(0x2486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01D8
        gbc.setState(0xa4b0, 0x33dd, 0xf1f0, 0x107e, 0xe6b1, 0x51ce, 0x0, 0x1);
        gbc.writeMem(0xa4b0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x33dd, gbc.sp());
        EXPECT(0xa4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b0));
        EXPECT(0x72, gbc.readMem(0xa4b1));
        // CB 72 01D9
        gbc.setState(0xa63e, 0xbf58, 0x7b20, 0x754d, 0x4979, 0x2b4, 0x1, 0x0);
        gbc.writeMem(0xa63e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf58, gbc.sp());
        EXPECT(0xa640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa63e));
        EXPECT(0x72, gbc.readMem(0xa63f));
        // CB 72 01DA
        gbc.setState(0x96e5, 0xe588, 0xa7a0, 0x11be, 0x6e9b, 0x4a2e, 0x1, 0x0);
        gbc.writeMem(0x96e5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe588, gbc.sp());
        EXPECT(0x96e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e5));
        EXPECT(0x72, gbc.readMem(0x96e6));
        // CB 72 01DB
        gbc.setState(0x58a0, 0x5f07, 0x5180, 0x66ae, 0x3a71, 0x498c, 0x0, 0x1);
        gbc.writeMem(0x58a0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5f07, gbc.sp());
        EXPECT(0x58a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01DC
        gbc.setState(0x7c52, 0xa93a, 0x7e70, 0x1b4, 0xe3ac, 0xe4db, 0x1, 0x1);
        gbc.writeMem(0x7c52, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa93a, gbc.sp());
        EXPECT(0x7c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01DD
        gbc.setState(0x4025, 0x86b1, 0xf9d0, 0x1df7, 0x8136, 0xee33, 0x0, 0x0);
        gbc.writeMem(0x4025, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x86b1, gbc.sp());
        EXPECT(0x4027, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01DE
        gbc.setState(0x644b, 0x6bb0, 0xf5e0, 0x1fe5, 0x3bdd, 0xff66, 0x0, 0x0);
        gbc.writeMem(0x644b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6bb0, gbc.sp());
        EXPECT(0x644d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01DF
        gbc.setState(0x6e3b, 0xe9d, 0x8940, 0xdb3e, 0xda3f, 0xbb49, 0x0, 0x0);
        gbc.writeMem(0x6e3b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe9d, gbc.sp());
        EXPECT(0x6e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01E0
        gbc.setState(0x2dbb, 0xdc6d, 0xcb90, 0x5bcb, 0x79b7, 0x1c2f, 0x1, 0x1);
        gbc.writeMem(0x2dbb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xdc6d, gbc.sp());
        EXPECT(0x2dbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01E1
        gbc.setState(0x4bff, 0xe808, 0xe800, 0x4e7a, 0x8b1, 0x2ea2, 0x1, 0x0);
        gbc.writeMem(0x4bff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe808, gbc.sp());
        EXPECT(0x4c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01E2
        gbc.setState(0x6a4f, 0xf20b, 0xfa80, 0xd31d, 0xf820, 0x4bbf, 0x1, 0x1);
        gbc.writeMem(0x6a4f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf20b, gbc.sp());
        EXPECT(0x6a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01E3
        gbc.setState(0x98d9, 0x414b, 0xacc0, 0xa233, 0x7155, 0xcc45, 0x1, 0x0);
        gbc.writeMem(0x98d9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x414b, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d9));
        EXPECT(0x72, gbc.readMem(0x98da));
        // CB 72 01E4
        gbc.setState(0x63a9, 0x5b3f, 0x2cf0, 0x7a3e, 0xcc8, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0x63a9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5b3f, gbc.sp());
        EXPECT(0x63ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01E5
        gbc.setState(0x25c9, 0x1fc4, 0x38f0, 0xb79e, 0x2f56, 0xdf38, 0x0, 0x1);
        gbc.writeMem(0x25c9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1fc4, gbc.sp());
        EXPECT(0x25cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01E6
        gbc.setState(0xbf88, 0x5524, 0x2680, 0x5531, 0x66a5, 0x2e0c, 0x1, 0x1);
        gbc.writeMem(0xbf88, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5524, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf88));
        EXPECT(0x72, gbc.readMem(0xbf89));
        // CB 72 01E7
        gbc.setState(0xe8b0, 0x96ad, 0x8c20, 0xd8b8, 0xa84c, 0xd065, 0x1, 0x0);
        gbc.writeMem(0xe8b0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0xe8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b0));
        EXPECT(0x72, gbc.readMem(0xe8b1));
        // CB 72 01E8
        gbc.setState(0x6bc9, 0xfd60, 0xf4e0, 0xca5a, 0xdb0f, 0x9c65, 0x1, 0x0);
        gbc.writeMem(0x6bc9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfd60, gbc.sp());
        EXPECT(0x6bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 01EA
        gbc.setState(0x24c9, 0x895d, 0x250, 0xca88, 0xa9f0, 0x96b5, 0x1, 0x1);
        gbc.writeMem(0x24c9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x895d, gbc.sp());
        EXPECT(0x24cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01EB
        gbc.setState(0x4bf0, 0xd029, 0x7430, 0x76d, 0xd90, 0xdffd, 0x1, 0x0);
        gbc.writeMem(0x4bf0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd029, gbc.sp());
        EXPECT(0x4bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01EC
        gbc.setState(0x2b9f, 0xc6b5, 0x1470, 0x8eb4, 0xe2b7, 0xb918, 0x0, 0x0);
        gbc.writeMem(0x2b9f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc6b5, gbc.sp());
        EXPECT(0x2ba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01ED
        gbc.setState(0x929, 0x8013, 0x8c30, 0xd53a, 0xe555, 0xe22d, 0x0, 0x0);
        gbc.writeMem(0x929, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8013, gbc.sp());
        EXPECT(0x92b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01EE
        gbc.setState(0xfb4, 0xb4d3, 0xb5b0, 0xaaf2, 0xc5ed, 0xfbf2, 0x1, 0x1);
        gbc.writeMem(0xfb4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb4d3, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01F0
        gbc.setState(0x176b, 0x7e47, 0x9b50, 0x75dd, 0x8ee, 0xc949, 0x0, 0x1);
        gbc.writeMem(0x176b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e47, gbc.sp());
        EXPECT(0x176d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01F1
        gbc.setState(0xc38e, 0x7180, 0xd8e0, 0xae19, 0x581b, 0x6592, 0x0, 0x1);
        gbc.writeMem(0xc38e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7180, gbc.sp());
        EXPECT(0xc390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc38e));
        EXPECT(0x72, gbc.readMem(0xc38f));
        // CB 72 01F2
        gbc.setState(0xd40f, 0xc6f6, 0x4e40, 0xff1e, 0xb872, 0xd21, 0x0, 0x1);
        gbc.writeMem(0xd40f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xc6f6, gbc.sp());
        EXPECT(0xd411, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40f));
        EXPECT(0x72, gbc.readMem(0xd410));
        // CB 72 01F3
        gbc.setState(0x96cb, 0x23ea, 0x9f0, 0xc1ee, 0xd646, 0xb64f, 0x1, 0x0);
        gbc.writeMem(0x96cb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x23ea, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96cb));
        EXPECT(0x72, gbc.readMem(0x96cc));
        // CB 72 01F4
        gbc.setState(0x2504, 0xc619, 0xdd10, 0xa401, 0xb181, 0x932b, 0x1, 0x0);
        gbc.writeMem(0x2504, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc619, gbc.sp());
        EXPECT(0x2506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01F5
        gbc.setState(0xa167, 0xe0b4, 0x7820, 0x8045, 0xf09d, 0x6644, 0x0, 0x1);
        gbc.writeMem(0xa167, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe0b4, gbc.sp());
        EXPECT(0xa169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa167));
        EXPECT(0x72, gbc.readMem(0xa168));
        // CB 72 01F6
        gbc.setState(0x76dd, 0x5155, 0xef30, 0xcc46, 0xe834, 0xc83, 0x1, 0x0);
        gbc.writeMem(0x76dd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5155, gbc.sp());
        EXPECT(0x76df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01F7
        gbc.setState(0xb8b4, 0xefaa, 0x71a0, 0xc21a, 0x495d, 0x5e8e, 0x0, 0x1);
        gbc.writeMem(0xb8b4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xefaa, gbc.sp());
        EXPECT(0xb8b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b4));
        EXPECT(0x72, gbc.readMem(0xb8b5));
        // CB 72 01F8
        gbc.setState(0xc7d4, 0x890a, 0x10d0, 0x3c5f, 0x7590, 0x3d33, 0x1, 0x1);
        gbc.writeMem(0xc7d4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x890a, gbc.sp());
        EXPECT(0xc7d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7d4));
        EXPECT(0x72, gbc.readMem(0xc7d5));
        // CB 72 01F9
        gbc.setState(0x4f2, 0x44dd, 0x5c30, 0xc2b, 0x14d6, 0x3a2b, 0x1, 0x1);
        gbc.writeMem(0x4f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x44dd, gbc.sp());
        EXPECT(0x4f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01FA
        gbc.setState(0xaff0, 0x508d, 0x7670, 0xaaa3, 0xe9ec, 0x996a, 0x0, 0x1);
        gbc.writeMem(0xaff0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x508d, gbc.sp());
        EXPECT(0xaff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaff0));
        EXPECT(0x72, gbc.readMem(0xaff1));
        // CB 72 01FB
        gbc.setState(0x7c87, 0x1704, 0x3970, 0xfefb, 0x7286, 0x1e90, 0x0, 0x1);
        gbc.writeMem(0x7c87, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1704, gbc.sp());
        EXPECT(0x7c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 01FC
        gbc.setState(0x979d, 0x2442, 0x3620, 0xf400, 0x1a1a, 0xb0e4, 0x1, 0x0);
        gbc.writeMem(0x979d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2442, gbc.sp());
        EXPECT(0x979f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979d));
        EXPECT(0x72, gbc.readMem(0x979e));
        // CB 72 01FD
        gbc.setState(0x83e0, 0x9dea, 0x230, 0x4057, 0xd5ad, 0x4b63, 0x0, 0x0);
        gbc.writeMem(0x83e0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x83e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e0));
        EXPECT(0x72, gbc.readMem(0x83e1));
        // CB 72 01FE
        gbc.setState(0xa160, 0xc361, 0xbda0, 0xf255, 0x57d8, 0x37f, 0x0, 0x0);
        gbc.writeMem(0xa160, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc361, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa160));
        EXPECT(0x72, gbc.readMem(0xa161));
        // CB 72 01FF
        gbc.setState(0xa268, 0x996f, 0x9680, 0xda2b, 0xae21, 0xad9f, 0x0, 0x1);
        gbc.writeMem(0xa268, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x996f, gbc.sp());
        EXPECT(0xa26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa268));
        EXPECT(0x72, gbc.readMem(0xa269));
        // CB 72 0200
        gbc.setState(0x11fa, 0x4657, 0xf40, 0xc31d, 0xd6b4, 0xa6b1, 0x1, 0x0);
        gbc.writeMem(0x11fa, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4657, gbc.sp());
        EXPECT(0x11fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0201
        gbc.setState(0xa9ba, 0x99ab, 0x7100, 0xc1f8, 0xfcb6, 0x372b, 0x0, 0x1);
        gbc.writeMem(0xa9ba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0xa9bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ba));
        EXPECT(0x72, gbc.readMem(0xa9bb));
        // CB 72 0202
        gbc.setState(0x6e73, 0x3873, 0xaa90, 0xbaa4, 0xaf67, 0xce54, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3873, gbc.sp());
        EXPECT(0x6e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0203
        gbc.setState(0xe13e, 0x4911, 0xe9c0, 0x3fa, 0x6511, 0x8754, 0x1, 0x1);
        gbc.writeMem(0xe13e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4911, gbc.sp());
        EXPECT(0xe140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe13e));
        EXPECT(0x72, gbc.readMem(0xe13f));
        // CB 72 0204
        gbc.setState(0xd57b, 0x3534, 0x68c0, 0x88a2, 0x6d53, 0x4153, 0x0, 0x0);
        gbc.writeMem(0xd57b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3534, gbc.sp());
        EXPECT(0xd57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd57b));
        EXPECT(0x72, gbc.readMem(0xd57c));
        // CB 72 0205
        gbc.setState(0x5726, 0xb80f, 0x20d0, 0xfc79, 0xdc4b, 0x7dbe, 0x1, 0x1);
        gbc.writeMem(0x5726, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0x5728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0206
        gbc.setState(0x36ac, 0xb365, 0x48f0, 0x704e, 0xc7cb, 0xdf3, 0x1, 0x1);
        gbc.writeMem(0x36ac, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xb365, gbc.sp());
        EXPECT(0x36ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0208
        gbc.setState(0xd515, 0x895e, 0xabe0, 0xb7b, 0x69c, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0xd515, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x895e, gbc.sp());
        EXPECT(0xd517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd515));
        EXPECT(0x72, gbc.readMem(0xd516));
        // CB 72 0209
        gbc.setState(0x31e2, 0xd5d8, 0x59a0, 0x4dcd, 0x222c, 0xd06c, 0x0, 0x1);
        gbc.writeMem(0x31e2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd5d8, gbc.sp());
        EXPECT(0x31e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 020A
        gbc.setState(0x9a7, 0x7d28, 0x43a0, 0x6028, 0x8182, 0x83b, 0x1, 0x0);
        gbc.writeMem(0x9a7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7d28, gbc.sp());
        EXPECT(0x9a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 020B
        gbc.setState(0xc3, 0xc58e, 0xf770, 0x983d, 0x1510, 0xdaf6, 0x0, 0x0);
        gbc.writeMem(0xc3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc58e, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 020C
        gbc.setState(0xab37, 0xe2d, 0x6ed0, 0x2587, 0xe683, 0x9c38, 0x1, 0x1);
        gbc.writeMem(0xab37, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0xab39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab37));
        EXPECT(0x72, gbc.readMem(0xab38));
        // CB 72 020D
        gbc.setState(0xb185, 0xf015, 0x6040, 0x6d86, 0xfcff, 0x3969, 0x0, 0x0);
        gbc.writeMem(0xb185, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf015, gbc.sp());
        EXPECT(0xb187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb185));
        EXPECT(0x72, gbc.readMem(0xb186));
        // CB 72 020E
        gbc.setState(0x9bcc, 0x658a, 0x8810, 0xca76, 0xafd3, 0x7e9f, 0x0, 0x0);
        gbc.writeMem(0x9bcc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x658a, gbc.sp());
        EXPECT(0x9bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcc));
        EXPECT(0x72, gbc.readMem(0x9bcd));
        // CB 72 020F
        gbc.setState(0xce2a, 0xee88, 0xaea0, 0xf366, 0x9e90, 0xc3f3, 0x0, 0x1);
        gbc.writeMem(0xce2a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xee88, gbc.sp());
        EXPECT(0xce2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce2a));
        EXPECT(0x72, gbc.readMem(0xce2b));
        // CB 72 0210
        gbc.setState(0x9b73, 0x6fc2, 0x1550, 0x8c85, 0x56bf, 0x5ff, 0x0, 0x1);
        gbc.writeMem(0x9b73, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6fc2, gbc.sp());
        EXPECT(0x9b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b73));
        EXPECT(0x72, gbc.readMem(0x9b74));
        // CB 72 0211
        gbc.setState(0x9132, 0x2f05, 0xb150, 0xdc4f, 0xe824, 0x60cc, 0x0, 0x1);
        gbc.writeMem(0x9132, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2f05, gbc.sp());
        EXPECT(0x9134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9132));
        EXPECT(0x72, gbc.readMem(0x9133));
        // CB 72 0212
        gbc.setState(0xa07f, 0xa9c, 0xdbf0, 0x3879, 0x160, 0x9517, 0x1, 0x1);
        gbc.writeMem(0xa07f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0xa081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa07f));
        EXPECT(0x72, gbc.readMem(0xa080));
        // CB 72 0213
        gbc.setState(0x5e73, 0x248, 0x6f40, 0x3aaf, 0x8025, 0x6087, 0x0, 0x0);
        gbc.writeMem(0x5e73, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x248, gbc.sp());
        EXPECT(0x5e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0214
        gbc.setState(0xbf96, 0xd167, 0x4690, 0x5db8, 0x134e, 0x104a, 0x1, 0x0);
        gbc.writeMem(0xbf96, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd167, gbc.sp());
        EXPECT(0xbf98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf96));
        EXPECT(0x72, gbc.readMem(0xbf97));
        // CB 72 0215
        gbc.setState(0x46b6, 0x48af, 0x3830, 0x7178, 0x3901, 0x7224, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x48af, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0216
        gbc.setState(0xdb9b, 0x46b1, 0xa020, 0x3f53, 0x432b, 0x9c6d, 0x1, 0x1);
        gbc.writeMem(0xdb9b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x46b1, gbc.sp());
        EXPECT(0xdb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9b));
        EXPECT(0x72, gbc.readMem(0xdb9c));
        // CB 72 0217
        gbc.setState(0x3357, 0x342d, 0xf650, 0xe273, 0x9ba5, 0x9a4, 0x1, 0x0);
        gbc.writeMem(0x3357, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x342d, gbc.sp());
        EXPECT(0x3359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0218
        gbc.setState(0xc5ea, 0xb7b7, 0xe7c0, 0xde84, 0xa9d9, 0x85fc, 0x1, 0x1);
        gbc.writeMem(0xc5ea, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb7b7, gbc.sp());
        EXPECT(0xc5ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5ea));
        EXPECT(0x72, gbc.readMem(0xc5eb));
        // CB 72 0219
        gbc.setState(0xec48, 0xef6b, 0xd8a0, 0x71c0, 0xda04, 0x7d1, 0x0, 0x1);
        gbc.writeMem(0xec48, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xef6b, gbc.sp());
        EXPECT(0xec4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec48));
        EXPECT(0x72, gbc.readMem(0xec49));
        // CB 72 021A
        gbc.setState(0x6e01, 0xb6b2, 0xf780, 0xac65, 0xca15, 0x18c5, 0x0, 0x1);
        gbc.writeMem(0x6e01, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6b2, gbc.sp());
        EXPECT(0x6e03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 021B
        gbc.setState(0xaf19, 0xf297, 0x75c0, 0x9c8a, 0x4d6f, 0xc885, 0x1, 0x1);
        gbc.writeMem(0xaf19, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf297, gbc.sp());
        EXPECT(0xaf1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf19));
        EXPECT(0x72, gbc.readMem(0xaf1a));
        // CB 72 021C
        gbc.setState(0xcec3, 0xd84, 0x3130, 0x27f7, 0x7ae4, 0x4bdb, 0x0, 0x1);
        gbc.writeMem(0xcec3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd84, gbc.sp());
        EXPECT(0xcec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec3));
        EXPECT(0x72, gbc.readMem(0xcec4));
        // CB 72 021D
        gbc.setState(0x966a, 0x3331, 0x92e0, 0x212, 0x1a2b, 0x6437, 0x1, 0x0);
        gbc.writeMem(0x966a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3331, gbc.sp());
        EXPECT(0x966c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x966a));
        EXPECT(0x72, gbc.readMem(0x966b));
        // CB 72 021E
        gbc.setState(0x31f1, 0xe71c, 0xb210, 0x33d2, 0x89d2, 0xd01c, 0x1, 0x0);
        gbc.writeMem(0x31f1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe71c, gbc.sp());
        EXPECT(0x31f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 021F
        gbc.setState(0x5f21, 0x36b9, 0x9470, 0xfd27, 0x1c6a, 0xdf5a, 0x0, 0x1);
        gbc.writeMem(0x5f21, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x36b9, gbc.sp());
        EXPECT(0x5f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0220
        gbc.setState(0xb70f, 0xf75d, 0xf8f0, 0x35b4, 0xe1e9, 0xd5ad, 0x0, 0x1);
        gbc.writeMem(0xb70f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf75d, gbc.sp());
        EXPECT(0xb711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb70f));
        EXPECT(0x72, gbc.readMem(0xb710));
        // CB 72 0221
        gbc.setState(0x2ef1, 0x25e1, 0xeb00, 0x1065, 0x7e35, 0x36f4, 0x1, 0x1);
        gbc.writeMem(0x2ef1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x25e1, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0222
        gbc.setState(0xcff, 0x7a79, 0x28e0, 0xfbf2, 0x6e56, 0x321c, 0x0, 0x0);
        gbc.writeMem(0xcff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7a79, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0223
        gbc.setState(0x8dff, 0x37ee, 0x8620, 0x4c9d, 0x68b8, 0xff79, 0x1, 0x1);
        gbc.writeMem(0x8dff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x37ee, gbc.sp());
        EXPECT(0x8e01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dff));
        EXPECT(0x72, gbc.readMem(0x8e00));
        // CB 72 0224
        gbc.setState(0x561e, 0x92de, 0x6870, 0x6fbf, 0xe4a6, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0x561e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x92de, gbc.sp());
        EXPECT(0x5620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0225
        gbc.setState(0x9a22, 0xb4ef, 0x4530, 0xa404, 0x4a97, 0xc54, 0x1, 0x0);
        gbc.writeMem(0x9a22, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb4ef, gbc.sp());
        EXPECT(0x9a24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a22));
        EXPECT(0x72, gbc.readMem(0x9a23));
        // CB 72 0226
        gbc.setState(0x8723, 0x460a, 0x7cd0, 0x8baa, 0x6668, 0xb1d3, 0x0, 0x0);
        gbc.writeMem(0x8723, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x460a, gbc.sp());
        EXPECT(0x8725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8723));
        EXPECT(0x72, gbc.readMem(0x8724));
        // CB 72 0227
        gbc.setState(0xad9f, 0xa372, 0x6fe0, 0x40e7, 0x1fb6, 0x5ca8, 0x0, 0x0);
        gbc.writeMem(0xad9f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad9f));
        EXPECT(0x72, gbc.readMem(0xada0));
        // CB 72 0228
        gbc.setState(0x7c97, 0xa33b, 0x5290, 0x1e5b, 0x4946, 0x203, 0x0, 0x0);
        gbc.writeMem(0x7c97, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa33b, gbc.sp());
        EXPECT(0x7c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0229
        gbc.setState(0x1fbb, 0xdb43, 0x5e70, 0x3da1, 0x2069, 0xa12e, 0x1, 0x1);
        gbc.writeMem(0x1fbb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0x1fbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 022A
        gbc.setState(0xa94d, 0x91ea, 0x3570, 0x720e, 0xe545, 0xd8ce, 0x1, 0x1);
        gbc.writeMem(0xa94d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x91ea, gbc.sp());
        EXPECT(0xa94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94d));
        EXPECT(0x72, gbc.readMem(0xa94e));
        // CB 72 022B
        gbc.setState(0x3e80, 0xf402, 0x5840, 0xc4ec, 0x2055, 0xf6a7, 0x0, 0x1);
        gbc.writeMem(0x3e80, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf402, gbc.sp());
        EXPECT(0x3e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 022C
        gbc.setState(0x8e86, 0xf90a, 0x65c0, 0xe5cb, 0x5f73, 0x52cf, 0x1, 0x1);
        gbc.writeMem(0x8e86, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf90a, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e86));
        EXPECT(0x72, gbc.readMem(0x8e87));
        // CB 72 022D
        gbc.setState(0x9eeb, 0x9c5a, 0xad60, 0x856d, 0xb4d1, 0x44bc, 0x0, 0x0);
        gbc.writeMem(0x9eeb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9c5a, gbc.sp());
        EXPECT(0x9eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eeb));
        EXPECT(0x72, gbc.readMem(0x9eec));
        // CB 72 022E
        gbc.setState(0x1714, 0x5807, 0xa4a0, 0xd4bd, 0x94a, 0x1795, 0x1, 0x1);
        gbc.writeMem(0x1714, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5807, gbc.sp());
        EXPECT(0x1716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 022F
        gbc.setState(0x27d7, 0xe01a, 0x49e0, 0xabbc, 0x96b3, 0xb2e9, 0x1, 0x1);
        gbc.writeMem(0x27d7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe01a, gbc.sp());
        EXPECT(0x27d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0230
        gbc.setState(0x57da, 0xd11c, 0x9db0, 0x726b, 0xfd27, 0x7cae, 0x0, 0x1);
        gbc.writeMem(0x57da, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xd11c, gbc.sp());
        EXPECT(0x57dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0231
        gbc.setState(0x5a3b, 0xe58d, 0x3c00, 0xc56, 0xf17a, 0xcf9c, 0x1, 0x0);
        gbc.writeMem(0x5a3b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xe58d, gbc.sp());
        EXPECT(0x5a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0232
        gbc.setState(0xb167, 0x9b56, 0xe5b0, 0x8fa1, 0x6a8f, 0x31ae, 0x0, 0x1);
        gbc.writeMem(0xb167, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9b56, gbc.sp());
        EXPECT(0xb169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb167));
        EXPECT(0x72, gbc.readMem(0xb168));
        // CB 72 0233
        gbc.setState(0x51cc, 0x1fc1, 0x76e0, 0x7aec, 0xcea5, 0x1152, 0x1, 0x0);
        gbc.writeMem(0x51cc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x1fc1, gbc.sp());
        EXPECT(0x51ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0234
        gbc.setState(0xc28c, 0x5693, 0x8180, 0xfc8d, 0xdf65, 0x8110, 0x0, 0x0);
        gbc.writeMem(0xc28c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0xc28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc28c));
        EXPECT(0x72, gbc.readMem(0xc28d));
        // CB 72 0235
        gbc.setState(0x7eab, 0xb05a, 0x400, 0xbc28, 0x33ba, 0xb7b0, 0x0, 0x1);
        gbc.writeMem(0x7eab, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb05a, gbc.sp());
        EXPECT(0x7ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0236
        gbc.setState(0x5b0d, 0x1fcd, 0xe330, 0xd8f5, 0xa7cf, 0x9c6a, 0x0, 0x0);
        gbc.writeMem(0x5b0d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1fcd, gbc.sp());
        EXPECT(0x5b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0237
        gbc.setState(0xb717, 0x6a48, 0x6990, 0x4d71, 0x4674, 0x3b43, 0x0, 0x0);
        gbc.writeMem(0xb717, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6a48, gbc.sp());
        EXPECT(0xb719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb717));
        EXPECT(0x72, gbc.readMem(0xb718));
        // CB 72 0238
        gbc.setState(0x82ac, 0xa0db, 0xa250, 0x772e, 0x2b62, 0xac89, 0x1, 0x0);
        gbc.writeMem(0x82ac, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0x82ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ac));
        EXPECT(0x72, gbc.readMem(0x82ad));
        // CB 72 0239
        gbc.setState(0x1f07, 0x291a, 0x1720, 0x17da, 0x6c59, 0xde8, 0x0, 0x0);
        gbc.writeMem(0x1f07, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0x1f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 023A
        gbc.setState(0x7744, 0xe190, 0xfc00, 0xd4e8, 0xcf94, 0xb552, 0x1, 0x0);
        gbc.writeMem(0x7744, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0x7746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 023B
        gbc.setState(0x9d3a, 0x3c9, 0x6ff0, 0x47e8, 0xb321, 0xf493, 0x0, 0x1);
        gbc.writeMem(0x9d3a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3c9, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d3a));
        EXPECT(0x72, gbc.readMem(0x9d3b));
        // CB 72 023C
        gbc.setState(0xa297, 0xcfdc, 0x2e0, 0xeb6b, 0x92b6, 0x26d8, 0x1, 0x0);
        gbc.writeMem(0xa297, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcfdc, gbc.sp());
        EXPECT(0xa299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa297));
        EXPECT(0x72, gbc.readMem(0xa298));
        // CB 72 023D
        gbc.setState(0x5550, 0x8bd5, 0x3460, 0xa7d, 0x4d15, 0xcc41, 0x0, 0x1);
        gbc.writeMem(0x5550, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8bd5, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 023E
        gbc.setState(0x6c70, 0x804c, 0x8f40, 0x1b86, 0x4857, 0xcf9f, 0x1, 0x0);
        gbc.writeMem(0x6c70, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x804c, gbc.sp());
        EXPECT(0x6c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 023F
        gbc.setState(0x22bb, 0x78e1, 0xc7d0, 0xc7d9, 0x8107, 0x4daf, 0x1, 0x0);
        gbc.writeMem(0x22bb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x78e1, gbc.sp());
        EXPECT(0x22bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0240
        gbc.setState(0x6756, 0x961, 0xa840, 0xf95e, 0xc2, 0xb36d, 0x0, 0x1);
        gbc.writeMem(0x6756, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x961, gbc.sp());
        EXPECT(0x6758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0241
        gbc.setState(0xd744, 0x6bea, 0x9720, 0x4be, 0xf46f, 0x5da7, 0x1, 0x0);
        gbc.writeMem(0xd744, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6bea, gbc.sp());
        EXPECT(0xd746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd744));
        EXPECT(0x72, gbc.readMem(0xd745));
        // CB 72 0242
        gbc.setState(0x8c1e, 0xa3c7, 0x1060, 0x9057, 0x1cac, 0xd790, 0x0, 0x1);
        gbc.writeMem(0x8c1e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1e));
        EXPECT(0x72, gbc.readMem(0x8c1f));
        // CB 72 0243
        gbc.setState(0x27af, 0x50b0, 0xdfd0, 0xfba9, 0x9fa7, 0xd902, 0x1, 0x0);
        gbc.writeMem(0x27af, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x50b0, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0244
        gbc.setState(0xbbfb, 0x7edd, 0x1b20, 0xfbe8, 0xe84e, 0x18e1, 0x0, 0x1);
        gbc.writeMem(0xbbfb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7edd, gbc.sp());
        EXPECT(0xbbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfb));
        EXPECT(0x72, gbc.readMem(0xbbfc));
        // CB 72 0245
        gbc.setState(0xb0f9, 0x2b28, 0x6010, 0xcbb0, 0xd0ef, 0x868b, 0x1, 0x1);
        gbc.writeMem(0xb0f9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2b28, gbc.sp());
        EXPECT(0xb0fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f9));
        EXPECT(0x72, gbc.readMem(0xb0fa));
        // CB 72 0246
        gbc.setState(0x3b92, 0x99ed, 0xfe60, 0x6021, 0xe46, 0xd6e4, 0x1, 0x0);
        gbc.writeMem(0x3b92, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x99ed, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0247
        gbc.setState(0x6140, 0xf595, 0x1290, 0x3940, 0x87ac, 0x3bdf, 0x0, 0x0);
        gbc.writeMem(0x6140, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf595, gbc.sp());
        EXPECT(0x6142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0248
        gbc.setState(0x997, 0x3eb1, 0x150, 0x43bd, 0x83b5, 0xa91b, 0x1, 0x0);
        gbc.writeMem(0x997, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3eb1, gbc.sp());
        EXPECT(0x999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0249
        gbc.setState(0x5df, 0x3212, 0xa2b0, 0x69b1, 0x4c5a, 0x2d2d, 0x0, 0x0);
        gbc.writeMem(0x5df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3212, gbc.sp());
        EXPECT(0x5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 024B
        gbc.setState(0x442f, 0x6520, 0x89b0, 0x76b7, 0x4ea2, 0x1dce, 0x1, 0x1);
        gbc.writeMem(0x442f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x6520, gbc.sp());
        EXPECT(0x4431, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 024C
        gbc.setState(0x7611, 0xaa96, 0x46c0, 0xb1d2, 0x7fc0, 0x96d9, 0x1, 0x0);
        gbc.writeMem(0x7611, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xaa96, gbc.sp());
        EXPECT(0x7613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 024D
        gbc.setState(0x2522, 0x6c96, 0xf750, 0x128, 0x195, 0x9ff7, 0x1, 0x1);
        gbc.writeMem(0x2522, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6c96, gbc.sp());
        EXPECT(0x2524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 024E
        gbc.setState(0x11ee, 0xb9f, 0xca0, 0x85ba, 0xe6a0, 0xaea, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb9f, gbc.sp());
        EXPECT(0x11f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 024F
        gbc.setState(0x89ba, 0x4c73, 0x3fa0, 0x9b37, 0x32ac, 0x1cec, 0x1, 0x0);
        gbc.writeMem(0x89ba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x4c73, gbc.sp());
        EXPECT(0x89bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89ba));
        EXPECT(0x72, gbc.readMem(0x89bb));
        // CB 72 0250
        gbc.setState(0xb127, 0xa5fc, 0xfc0, 0xdbaa, 0x14e9, 0xba93, 0x0, 0x0);
        gbc.writeMem(0xb127, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa5fc, gbc.sp());
        EXPECT(0xb129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb127));
        EXPECT(0x72, gbc.readMem(0xb128));
        // CB 72 0251
        gbc.setState(0x4423, 0xafc3, 0x5150, 0x10d9, 0xc802, 0x5d2c, 0x1, 0x1);
        gbc.writeMem(0x4423, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xafc3, gbc.sp());
        EXPECT(0x4425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0252
        gbc.setState(0x1d0, 0x9e1b, 0x2220, 0x877d, 0xeea1, 0x83cc, 0x1, 0x1);
        gbc.writeMem(0x1d0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9e1b, gbc.sp());
        EXPECT(0x1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0253
        gbc.setState(0x6d29, 0x37e2, 0x3ca0, 0xce82, 0xdd9a, 0x550e, 0x0, 0x1);
        gbc.writeMem(0x6d29, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x37e2, gbc.sp());
        EXPECT(0x6d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0254
        gbc.setState(0xde6b, 0x799b, 0x95e0, 0x5283, 0xe687, 0x1e6, 0x1, 0x1);
        gbc.writeMem(0xde6b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x799b, gbc.sp());
        EXPECT(0xde6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6b));
        EXPECT(0x72, gbc.readMem(0xde6c));
        // CB 72 0255
        gbc.setState(0x85a5, 0x9bfc, 0x7490, 0x99fe, 0x5b78, 0x6cce, 0x0, 0x1);
        gbc.writeMem(0x85a5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9bfc, gbc.sp());
        EXPECT(0x85a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85a5));
        EXPECT(0x72, gbc.readMem(0x85a6));
        // CB 72 0256
        gbc.setState(0x2693, 0xd87f, 0xfaa0, 0xf989, 0x3154, 0x7b0f, 0x0, 0x1);
        gbc.writeMem(0x2693, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0x2695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0257
        gbc.setState(0x254e, 0xa19a, 0xa860, 0xe864, 0xbb70, 0x1bc4, 0x0, 0x1);
        gbc.writeMem(0x254e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa19a, gbc.sp());
        EXPECT(0x2550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0258
        gbc.setState(0xe511, 0xb828, 0x5ec0, 0x52a5, 0x3a34, 0x64b8, 0x0, 0x1);
        gbc.writeMem(0xe511, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb828, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe511));
        EXPECT(0x72, gbc.readMem(0xe512));
        // CB 72 0259
        gbc.setState(0xa594, 0x15a0, 0x32e0, 0xfe93, 0x37d9, 0x21a4, 0x0, 0x0);
        gbc.writeMem(0xa594, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0xa596, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa594));
        EXPECT(0x72, gbc.readMem(0xa595));
        // CB 72 025A
        gbc.setState(0x9f80, 0xdd0f, 0x9180, 0x8d1c, 0xb18a, 0xf707, 0x1, 0x0);
        gbc.writeMem(0x9f80, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdd0f, gbc.sp());
        EXPECT(0x9f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f80));
        EXPECT(0x72, gbc.readMem(0x9f81));
        // CB 72 025B
        gbc.setState(0xa683, 0xf6ce, 0xc50, 0x87c3, 0x3e26, 0xe53f, 0x1, 0x0);
        gbc.writeMem(0xa683, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf6ce, gbc.sp());
        EXPECT(0xa685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa683));
        EXPECT(0x72, gbc.readMem(0xa684));
        // CB 72 025C
        gbc.setState(0x9dbf, 0x6e5c, 0x5e30, 0xe136, 0xd582, 0x6561, 0x1, 0x1);
        gbc.writeMem(0x9dbf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6e5c, gbc.sp());
        EXPECT(0x9dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbf));
        EXPECT(0x72, gbc.readMem(0x9dc0));
        // CB 72 025E
        gbc.setState(0x293d, 0xf96c, 0xa1f0, 0x7d64, 0x4112, 0x2799, 0x1, 0x1);
        gbc.writeMem(0x293d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf96c, gbc.sp());
        EXPECT(0x293f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 025F
        gbc.setState(0x674d, 0x1e23, 0x5ea0, 0xba54, 0xa56, 0xee34, 0x1, 0x0);
        gbc.writeMem(0x674d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e23, gbc.sp());
        EXPECT(0x674f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0260
        gbc.setState(0x93a3, 0x8849, 0x4fb0, 0xf976, 0x3118, 0xd47, 0x1, 0x0);
        gbc.writeMem(0x93a3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8849, gbc.sp());
        EXPECT(0x93a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a3));
        EXPECT(0x72, gbc.readMem(0x93a4));
        // CB 72 0261
        gbc.setState(0xa224, 0x9b8, 0x2790, 0x6520, 0xe7be, 0xaf85, 0x1, 0x1);
        gbc.writeMem(0xa224, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0xa226, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa224));
        EXPECT(0x72, gbc.readMem(0xa225));
        // CB 72 0262
        gbc.setState(0x55c8, 0xecff, 0xe560, 0x2828, 0x450b, 0xbbf2, 0x1, 0x0);
        gbc.writeMem(0x55c8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xecff, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0263
        gbc.setState(0x8820, 0xa773, 0xfc60, 0x25fd, 0x5a1e, 0xcd79, 0x1, 0x1);
        gbc.writeMem(0x8820, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa773, gbc.sp());
        EXPECT(0x8822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8820));
        EXPECT(0x72, gbc.readMem(0x8821));
        // CB 72 0264
        gbc.setState(0x12b8, 0x3253, 0x2450, 0x5ae1, 0xb885, 0xa8c6, 0x1, 0x0);
        gbc.writeMem(0x12b8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3253, gbc.sp());
        EXPECT(0x12ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0265
        gbc.setState(0x9820, 0x55fc, 0xd7a0, 0x9a89, 0x62b2, 0x39d4, 0x0, 0x1);
        gbc.writeMem(0x9820, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0x9822, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9820));
        EXPECT(0x72, gbc.readMem(0x9821));
        // CB 72 0266
        gbc.setState(0x1d1b, 0x4bc9, 0x24a0, 0xf545, 0x19a0, 0xa21, 0x0, 0x0);
        gbc.writeMem(0x1d1b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4bc9, gbc.sp());
        EXPECT(0x1d1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0267
        gbc.setState(0xcde3, 0x4bda, 0x2050, 0x2c0e, 0x8d48, 0xa83e, 0x1, 0x1);
        gbc.writeMem(0xcde3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0xcde5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcde3));
        EXPECT(0x72, gbc.readMem(0xcde4));
        // CB 72 0268
        gbc.setState(0x2c74, 0x21c5, 0x5950, 0xaf0c, 0x9545, 0xe206, 0x0, 0x1);
        gbc.writeMem(0x2c74, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x21c5, gbc.sp());
        EXPECT(0x2c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0269
        gbc.setState(0x6593, 0xe5e6, 0x6fc0, 0x5785, 0x56e4, 0xd7c1, 0x0, 0x0);
        gbc.writeMem(0x6593, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe5e6, gbc.sp());
        EXPECT(0x6595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 026A
        gbc.setState(0x163e, 0xea90, 0x1a40, 0xe297, 0xb2a0, 0x758f, 0x1, 0x0);
        gbc.writeMem(0x163e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xea90, gbc.sp());
        EXPECT(0x1640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 026B
        gbc.setState(0x4570, 0x711e, 0x1c70, 0xdfbb, 0x9774, 0x8180, 0x0, 0x1);
        gbc.writeMem(0x4570, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x711e, gbc.sp());
        EXPECT(0x4572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 026C
        gbc.setState(0x3498, 0x44ad, 0x2c10, 0x1d0a, 0x357a, 0x9c92, 0x1, 0x1);
        gbc.writeMem(0x3498, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x44ad, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 026D
        gbc.setState(0x1a1e, 0x79a7, 0x61a0, 0x7180, 0xf420, 0xdf6d, 0x1, 0x0);
        gbc.writeMem(0x1a1e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x79a7, gbc.sp());
        EXPECT(0x1a20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 026F
        gbc.setState(0x3e9d, 0x49d0, 0x97b0, 0xd1a5, 0x6d86, 0x1698, 0x1, 0x0);
        gbc.writeMem(0x3e9d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x49d0, gbc.sp());
        EXPECT(0x3e9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0270
        gbc.setState(0xaa4a, 0x9cf9, 0xa460, 0x6b7f, 0xf469, 0xb1c3, 0x0, 0x0);
        gbc.writeMem(0xaa4a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9cf9, gbc.sp());
        EXPECT(0xaa4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4a));
        EXPECT(0x72, gbc.readMem(0xaa4b));
        // CB 72 0271
        gbc.setState(0x8bd8, 0x152c, 0x25e0, 0x1970, 0xf51, 0xc18c, 0x1, 0x0);
        gbc.writeMem(0x8bd8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x152c, gbc.sp());
        EXPECT(0x8bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bd8));
        EXPECT(0x72, gbc.readMem(0x8bd9));
        // CB 72 0272
        gbc.setState(0xcb89, 0xaf35, 0x6f50, 0xcb82, 0x4d96, 0x248, 0x0, 0x1);
        gbc.writeMem(0xcb89, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaf35, gbc.sp());
        EXPECT(0xcb8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb89));
        EXPECT(0x72, gbc.readMem(0xcb8a));
        // CB 72 0273
        gbc.setState(0xd55, 0xb8df, 0x3230, 0xcc8a, 0x9925, 0x7c76, 0x1, 0x0);
        gbc.writeMem(0xd55, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb8df, gbc.sp());
        EXPECT(0xd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0274
        gbc.setState(0x5d3a, 0x7fb, 0x5ba0, 0xcb16, 0x2ba4, 0x4d16, 0x0, 0x0);
        gbc.writeMem(0x5d3a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x7fb, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0275
        gbc.setState(0x7c32, 0x358f, 0xca90, 0xb89a, 0xeeda, 0x6866, 0x1, 0x0);
        gbc.writeMem(0x7c32, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x358f, gbc.sp());
        EXPECT(0x7c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0276
        gbc.setState(0xc2b5, 0xa6cf, 0x1e20, 0x27e, 0x6555, 0x80da, 0x0, 0x0);
        gbc.writeMem(0xc2b5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa6cf, gbc.sp());
        EXPECT(0xc2b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b5));
        EXPECT(0x72, gbc.readMem(0xc2b6));
        // CB 72 0277
        gbc.setState(0xd222, 0x14b5, 0xc250, 0x1ba1, 0xdfe7, 0x704f, 0x0, 0x0);
        gbc.writeMem(0xd222, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0xd224, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd222));
        EXPECT(0x72, gbc.readMem(0xd223));
        // CB 72 0278
        gbc.setState(0x88ce, 0x8a9e, 0xec60, 0xede, 0x44ef, 0xda34, 0x1, 0x0);
        gbc.writeMem(0x88ce, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8a9e, gbc.sp());
        EXPECT(0x88d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ce));
        EXPECT(0x72, gbc.readMem(0x88cf));
        // CB 72 0279
        gbc.setState(0x288e, 0x9d7, 0xe480, 0x3e94, 0x4b8c, 0xed52, 0x0, 0x1);
        gbc.writeMem(0x288e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0x2890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 027A
        gbc.setState(0xbe9f, 0xcfd1, 0x47a0, 0x9237, 0x8ec6, 0x628e, 0x0, 0x1);
        gbc.writeMem(0xbe9f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcfd1, gbc.sp());
        EXPECT(0xbea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe9f));
        EXPECT(0x72, gbc.readMem(0xbea0));
        // CB 72 027C
        gbc.setState(0x230f, 0x9ca4, 0xc3b0, 0x162f, 0x118a, 0x484c, 0x0, 0x0);
        gbc.writeMem(0x230f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9ca4, gbc.sp());
        EXPECT(0x2311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 027D
        gbc.setState(0x76c8, 0xde63, 0x7d60, 0xce89, 0x4200, 0x62e6, 0x0, 0x1);
        gbc.writeMem(0x76c8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xde63, gbc.sp());
        EXPECT(0x76ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 027E
        gbc.setState(0xed11, 0x72b2, 0xbe80, 0x821b, 0x30b3, 0x44b7, 0x1, 0x1);
        gbc.writeMem(0xed11, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x72b2, gbc.sp());
        EXPECT(0xed13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed11));
        EXPECT(0x72, gbc.readMem(0xed12));
        // CB 72 027F
        gbc.setState(0x781c, 0x2b57, 0x4470, 0x9702, 0x868e, 0x620b, 0x1, 0x1);
        gbc.writeMem(0x781c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2b57, gbc.sp());
        EXPECT(0x781e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0280
        gbc.setState(0x3c0e, 0x2a71, 0x2690, 0x8f, 0x431a, 0x8800, 0x1, 0x1);
        gbc.writeMem(0x3c0e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2a71, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0281
        gbc.setState(0xa0dc, 0xa359, 0x51b0, 0x5cc6, 0x1387, 0x4d3, 0x1, 0x1);
        gbc.writeMem(0xa0dc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa359, gbc.sp());
        EXPECT(0xa0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0dc));
        EXPECT(0x72, gbc.readMem(0xa0dd));
        // CB 72 0282
        gbc.setState(0xe951, 0x7d8d, 0xfe80, 0x434b, 0xf27a, 0xd446, 0x0, 0x1);
        gbc.writeMem(0xe951, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7d8d, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe951));
        EXPECT(0x72, gbc.readMem(0xe952));
        // CB 72 0283
        gbc.setState(0xeca4, 0x84a2, 0xa0b0, 0x223d, 0x6b9c, 0x6c9b, 0x1, 0x1);
        gbc.writeMem(0xeca4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x84a2, gbc.sp());
        EXPECT(0xeca6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeca4));
        EXPECT(0x72, gbc.readMem(0xeca5));
        // CB 72 0284
        gbc.setState(0x9b4, 0x1a99, 0x17d0, 0x3317, 0xc87, 0x7d3d, 0x0, 0x1);
        gbc.writeMem(0x9b4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1a99, gbc.sp());
        EXPECT(0x9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0285
        gbc.setState(0x79f2, 0xb5ea, 0x6e80, 0x35b2, 0x38e3, 0x146b, 0x0, 0x1);
        gbc.writeMem(0x79f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb5ea, gbc.sp());
        EXPECT(0x79f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0286
        gbc.setState(0xcb6e, 0x40f, 0x5b90, 0x33a0, 0x214d, 0x1e05, 0x1, 0x0);
        gbc.writeMem(0xcb6e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x40f, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb6e));
        EXPECT(0x72, gbc.readMem(0xcb6f));
        // CB 72 0287
        gbc.setState(0x6b11, 0x59aa, 0x4130, 0xfec4, 0xb43e, 0xa4cc, 0x1, 0x0);
        gbc.writeMem(0x6b11, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x59aa, gbc.sp());
        EXPECT(0x6b13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0288
        gbc.setState(0x7baf, 0x9af2, 0xd90, 0xd35d, 0xbcdf, 0xb1bb, 0x1, 0x0);
        gbc.writeMem(0x7baf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x9af2, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0289
        gbc.setState(0x58af, 0xc5b3, 0xd1b0, 0x4dc0, 0x1dc7, 0x6813, 0x1, 0x0);
        gbc.writeMem(0x58af, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc5b3, gbc.sp());
        EXPECT(0x58b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 028A
        gbc.setState(0xa37, 0x1e73, 0x8890, 0xaebd, 0x692, 0x5beb, 0x0, 0x1);
        gbc.writeMem(0xa37, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1e73, gbc.sp());
        EXPECT(0xa39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 028B
        gbc.setState(0x1697, 0x80d9, 0xbf80, 0xea77, 0xb97a, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0x1697, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x80d9, gbc.sp());
        EXPECT(0x1699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 028C
        gbc.setState(0xae02, 0x8640, 0xc360, 0x72f4, 0xcc06, 0xf008, 0x1, 0x1);
        gbc.writeMem(0xae02, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8640, gbc.sp());
        EXPECT(0xae04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae02));
        EXPECT(0x72, gbc.readMem(0xae03));
        // CB 72 028D
        gbc.setState(0xc962, 0xe4bf, 0x99a0, 0x669c, 0x7d96, 0x5add, 0x0, 0x1);
        gbc.writeMem(0xc962, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe4bf, gbc.sp());
        EXPECT(0xc964, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc962));
        EXPECT(0x72, gbc.readMem(0xc963));
        // CB 72 028E
        gbc.setState(0x94c5, 0xab87, 0xd190, 0xf5f4, 0x7ef5, 0xc238, 0x0, 0x1);
        gbc.writeMem(0x94c5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xab87, gbc.sp());
        EXPECT(0x94c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94c5));
        EXPECT(0x72, gbc.readMem(0x94c6));
        // CB 72 028F
        gbc.setState(0x7acb, 0xf3c8, 0xbec0, 0xc239, 0x1c02, 0x8fbc, 0x0, 0x0);
        gbc.writeMem(0x7acb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf3c8, gbc.sp());
        EXPECT(0x7acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0290
        gbc.setState(0x1485, 0x32e5, 0x5ae0, 0x9b99, 0x8723, 0x4e3c, 0x0, 0x1);
        gbc.writeMem(0x1485, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x32e5, gbc.sp());
        EXPECT(0x1487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0291
        gbc.setState(0xa917, 0xc27a, 0xf3f0, 0x3f5, 0x3cdb, 0x6e07, 0x1, 0x1);
        gbc.writeMem(0xa917, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc27a, gbc.sp());
        EXPECT(0xa919, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa917));
        EXPECT(0x72, gbc.readMem(0xa918));
        // CB 72 0292
        gbc.setState(0xe634, 0x8a10, 0xa820, 0xbe2e, 0xaa03, 0xb1f0, 0x1, 0x0);
        gbc.writeMem(0xe634, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8a10, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe634));
        EXPECT(0x72, gbc.readMem(0xe635));
        // CB 72 0293
        gbc.setState(0xc01, 0xde20, 0xe8e0, 0xbcce, 0x38fe, 0x1d25, 0x1, 0x1);
        gbc.writeMem(0xc01, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xde20, gbc.sp());
        EXPECT(0xc03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0294
        gbc.setState(0xd892, 0x3cd3, 0xc220, 0x9dc3, 0x99fc, 0x7c6c, 0x0, 0x1);
        gbc.writeMem(0xd892, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3cd3, gbc.sp());
        EXPECT(0xd894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd892));
        EXPECT(0x72, gbc.readMem(0xd893));
        // CB 72 0295
        gbc.setState(0x8c02, 0x72b8, 0x7c50, 0xeb58, 0x93b8, 0xd879, 0x0, 0x0);
        gbc.writeMem(0x8c02, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x72b8, gbc.sp());
        EXPECT(0x8c04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c02));
        EXPECT(0x72, gbc.readMem(0x8c03));
        // CB 72 0296
        gbc.setState(0x525f, 0xbf3b, 0x7f10, 0x5fe, 0x6e5b, 0x155b, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf3b, gbc.sp());
        EXPECT(0x5261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0297
        gbc.setState(0xa965, 0x47c9, 0x6090, 0x6cb7, 0xb35b, 0x6b46, 0x1, 0x1);
        gbc.writeMem(0xa965, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x47c9, gbc.sp());
        EXPECT(0xa967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa965));
        EXPECT(0x72, gbc.readMem(0xa966));
        // CB 72 0298
        gbc.setState(0xe0b9, 0xab6b, 0x1a30, 0x34f1, 0xd80e, 0xc797, 0x1, 0x1);
        gbc.writeMem(0xe0b9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xab6b, gbc.sp());
        EXPECT(0xe0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b9));
        EXPECT(0x72, gbc.readMem(0xe0ba));
        // CB 72 0299
        gbc.setState(0xdd07, 0xfe7c, 0x4fd0, 0xb60e, 0x22cf, 0x6fab, 0x0, 0x0);
        gbc.writeMem(0xdd07, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0xdd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd07));
        EXPECT(0x72, gbc.readMem(0xdd08));
        // CB 72 029A
        gbc.setState(0x4fe9, 0x6b16, 0x6f50, 0x33ab, 0xe28d, 0xb8d, 0x0, 0x1);
        gbc.writeMem(0x4fe9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6b16, gbc.sp());
        EXPECT(0x4feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 029B
        gbc.setState(0xa069, 0x8c56, 0x8c80, 0x5381, 0x7521, 0xb278, 0x0, 0x1);
        gbc.writeMem(0xa069, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8c56, gbc.sp());
        EXPECT(0xa06b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa069));
        EXPECT(0x72, gbc.readMem(0xa06a));
        // CB 72 029C
        gbc.setState(0x2e5d, 0x9264, 0x52a0, 0x426d, 0x779, 0xeadc, 0x0, 0x0);
        gbc.writeMem(0x2e5d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9264, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 029D
        gbc.setState(0x25f2, 0x8a89, 0x6050, 0xe901, 0xf369, 0x5dd9, 0x0, 0x1);
        gbc.writeMem(0x25f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8a89, gbc.sp());
        EXPECT(0x25f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 029E
        gbc.setState(0xbb39, 0x1dba, 0x7e80, 0x95c0, 0xc4a5, 0xa3f7, 0x0, 0x1);
        gbc.writeMem(0xbb39, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1dba, gbc.sp());
        EXPECT(0xbb3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb39));
        EXPECT(0x72, gbc.readMem(0xbb3a));
        // CB 72 029F
        gbc.setState(0x1083, 0x3860, 0xf7a0, 0xfe69, 0x79ba, 0xfff5, 0x0, 0x1);
        gbc.writeMem(0x1083, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0x1085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02A0
        gbc.setState(0x8517, 0x1a18, 0xd580, 0xe, 0xf2d, 0x79a2, 0x1, 0x0);
        gbc.writeMem(0x8517, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1a18, gbc.sp());
        EXPECT(0x8519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8517));
        EXPECT(0x72, gbc.readMem(0x8518));
        // CB 72 02A1
        gbc.setState(0x7179, 0xd955, 0x2290, 0xf511, 0xf098, 0x3c19, 0x0, 0x1);
        gbc.writeMem(0x7179, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd955, gbc.sp());
        EXPECT(0x717b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02A2
        gbc.setState(0xcb, 0xc4e8, 0xd870, 0x15a9, 0x38ad, 0xcca7, 0x1, 0x0);
        gbc.writeMem(0xcb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc4e8, gbc.sp());
        EXPECT(0xcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02A3
        gbc.setState(0x5efb, 0x39ea, 0x9010, 0xb298, 0xe8e, 0xd3e8, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x39ea, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02A4
        gbc.setState(0x8f21, 0xe89, 0xb710, 0x49ca, 0x5d67, 0x588d, 0x0, 0x0);
        gbc.writeMem(0x8f21, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe89, gbc.sp());
        EXPECT(0x8f23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f21));
        EXPECT(0x72, gbc.readMem(0x8f22));
        // CB 72 02A5
        gbc.setState(0x8038, 0x9af6, 0x1400, 0x3317, 0x6f9b, 0x6b20, 0x0, 0x1);
        gbc.writeMem(0x8038, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x803a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8038));
        EXPECT(0x72, gbc.readMem(0x8039));
        // CB 72 02A6
        gbc.setState(0x6187, 0x2369, 0x86e0, 0x4af9, 0xb87f, 0x3dfc, 0x0, 0x0);
        gbc.writeMem(0x6187, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02A7
        gbc.setState(0xd277, 0xaa90, 0x2bd0, 0xcb02, 0xc052, 0x3669, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd277));
        EXPECT(0x72, gbc.readMem(0xd278));
        // CB 72 02A8
        gbc.setState(0xa3a7, 0xeb22, 0x4190, 0x8163, 0xc87a, 0x6116, 0x0, 0x1);
        gbc.writeMem(0xa3a7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xeb22, gbc.sp());
        EXPECT(0xa3a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a7));
        EXPECT(0x72, gbc.readMem(0xa3a8));
        // CB 72 02A9
        gbc.setState(0xdc2f, 0x583a, 0x86f0, 0x5d05, 0xca0d, 0xff49, 0x0, 0x1);
        gbc.writeMem(0xdc2f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x583a, gbc.sp());
        EXPECT(0xdc31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc2f));
        EXPECT(0x72, gbc.readMem(0xdc30));
        // CB 72 02AA
        gbc.setState(0xeaae, 0xab8, 0xea20, 0x2eca, 0xec23, 0xcd1f, 0x0, 0x0);
        gbc.writeMem(0xeaae, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xab8, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaae));
        EXPECT(0x72, gbc.readMem(0xeaaf));
        // CB 72 02AB
        gbc.setState(0xda9b, 0xa057, 0xdc20, 0x8349, 0x2626, 0xcea8, 0x0, 0x0);
        gbc.writeMem(0xda9b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa057, gbc.sp());
        EXPECT(0xda9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda9b));
        EXPECT(0x72, gbc.readMem(0xda9c));
        // CB 72 02AC
        gbc.setState(0xc4bb, 0xb0f1, 0xa950, 0x358, 0x6e30, 0xd5d4, 0x0, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bb));
        EXPECT(0x72, gbc.readMem(0xc4bc));
        // CB 72 02AD
        gbc.setState(0x5077, 0x9e43, 0x2370, 0x200, 0x44da, 0xa1c9, 0x0, 0x0);
        gbc.writeMem(0x5077, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9e43, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02AE
        gbc.setState(0xb33e, 0xf58a, 0x9100, 0xc43d, 0xd154, 0x17f4, 0x0, 0x0);
        gbc.writeMem(0xb33e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf58a, gbc.sp());
        EXPECT(0xb340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33e));
        EXPECT(0x72, gbc.readMem(0xb33f));
        // CB 72 02AF
        gbc.setState(0x942b, 0xa02e, 0xc3d0, 0x4f4b, 0xaaf8, 0x6232, 0x1, 0x0);
        gbc.writeMem(0x942b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0x942d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942b));
        EXPECT(0x72, gbc.readMem(0x942c));
        // CB 72 02B0
        gbc.setState(0x1ea5, 0xb4b5, 0x1300, 0x9731, 0x52df, 0x4f84, 0x1, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb4b5, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02B1
        gbc.setState(0xe2a1, 0x827, 0xea50, 0xa0e, 0x13ad, 0x6e26, 0x0, 0x1);
        gbc.writeMem(0xe2a1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x827, gbc.sp());
        EXPECT(0xe2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a1));
        EXPECT(0x72, gbc.readMem(0xe2a2));
        // CB 72 02B2
        gbc.setState(0x7c30, 0x5029, 0x9050, 0xc127, 0x515f, 0xc7b1, 0x1, 0x0);
        gbc.writeMem(0x7c30, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5029, gbc.sp());
        EXPECT(0x7c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02B4
        gbc.setState(0x1db7, 0x86ea, 0x7ac0, 0x2f93, 0x5905, 0xc02b, 0x0, 0x1);
        gbc.writeMem(0x1db7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x86ea, gbc.sp());
        EXPECT(0x1db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02B5
        gbc.setState(0x6866, 0xd09d, 0xed90, 0x481, 0x723d, 0x2627, 0x0, 0x1);
        gbc.writeMem(0x6866, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd09d, gbc.sp());
        EXPECT(0x6868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02B6
        gbc.setState(0x9dd9, 0x2ed5, 0xb090, 0xac9, 0x155a, 0xa89a, 0x1, 0x1);
        gbc.writeMem(0x9dd9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2ed5, gbc.sp());
        EXPECT(0x9ddb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd9));
        EXPECT(0x72, gbc.readMem(0x9dda));
        // CB 72 02B8
        gbc.setState(0x951f, 0x662b, 0x7b10, 0x6def, 0x286f, 0x9c6c, 0x0, 0x0);
        gbc.writeMem(0x951f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x662b, gbc.sp());
        EXPECT(0x9521, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951f));
        EXPECT(0x72, gbc.readMem(0x9520));
        // CB 72 02BA
        gbc.setState(0x68fe, 0xf45d, 0x92c0, 0xe6e0, 0xd6cc, 0x648a, 0x0, 0x0);
        gbc.writeMem(0x68fe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf45d, gbc.sp());
        EXPECT(0x6900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02BB
        gbc.setState(0xbba6, 0xfcde, 0xd160, 0x1e63, 0x39d7, 0x9191, 0x1, 0x1);
        gbc.writeMem(0xbba6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfcde, gbc.sp());
        EXPECT(0xbba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba6));
        EXPECT(0x72, gbc.readMem(0xbba7));
        // CB 72 02BC
        gbc.setState(0x41fd, 0xeb38, 0xab30, 0x7093, 0x47e3, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x41fd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xeb38, gbc.sp());
        EXPECT(0x41ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02BD
        gbc.setState(0xd196, 0x5142, 0xadd0, 0x38e9, 0x4f54, 0xc1fa, 0x0, 0x1);
        gbc.writeMem(0xd196, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5142, gbc.sp());
        EXPECT(0xd198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd196));
        EXPECT(0x72, gbc.readMem(0xd197));
        // CB 72 02BE
        gbc.setState(0x1a00, 0xbf5b, 0x5030, 0x18ab, 0x667d, 0x61fa, 0x0, 0x0);
        gbc.writeMem(0x1a00, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xbf5b, gbc.sp());
        EXPECT(0x1a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02BF
        gbc.setState(0x4795, 0x9787, 0x790, 0x7cad, 0x815d, 0xbfd5, 0x0, 0x1);
        gbc.writeMem(0x4795, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9787, gbc.sp());
        EXPECT(0x4797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02C0
        gbc.setState(0xc212, 0x7f6b, 0x9000, 0x133c, 0xb5ea, 0x4ebf, 0x0, 0x1);
        gbc.writeMem(0xc212, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7f6b, gbc.sp());
        EXPECT(0xc214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc212));
        EXPECT(0x72, gbc.readMem(0xc213));
        // CB 72 02C1
        gbc.setState(0x6efb, 0x3037, 0x9210, 0xa346, 0x6d15, 0x4659, 0x1, 0x1);
        gbc.writeMem(0x6efb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3037, gbc.sp());
        EXPECT(0x6efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02C2
        gbc.setState(0x911c, 0xf3a1, 0x9800, 0xea61, 0x1468, 0x5f17, 0x0, 0x1);
        gbc.writeMem(0x911c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xf3a1, gbc.sp());
        EXPECT(0x911e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911c));
        EXPECT(0x72, gbc.readMem(0x911d));
        // CB 72 02C3
        gbc.setState(0xb8be, 0x356b, 0x9fb0, 0xcfbe, 0x9ecf, 0x6e03, 0x0, 0x0);
        gbc.writeMem(0xb8be, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x356b, gbc.sp());
        EXPECT(0xb8c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8be));
        EXPECT(0x72, gbc.readMem(0xb8bf));
        // CB 72 02C4
        gbc.setState(0x61df, 0x6638, 0x2df0, 0xd7ce, 0xe2b0, 0x6029, 0x0, 0x1);
        gbc.writeMem(0x61df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x61e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02C5
        gbc.setState(0x4a3c, 0x649c, 0xff50, 0xef38, 0x32aa, 0xef07, 0x1, 0x1);
        gbc.writeMem(0x4a3c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x649c, gbc.sp());
        EXPECT(0x4a3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02C6
        gbc.setState(0x1cd9, 0x4c97, 0x2bc0, 0x642e, 0x7345, 0xa218, 0x1, 0x0);
        gbc.writeMem(0x1cd9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4c97, gbc.sp());
        EXPECT(0x1cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02C7
        gbc.setState(0x4ab, 0x7727, 0x69c0, 0xba07, 0x1eba, 0x4df3, 0x0, 0x1);
        gbc.writeMem(0x4ab, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7727, gbc.sp());
        EXPECT(0x4ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02C8
        gbc.setState(0xc7df, 0x57d3, 0x15a0, 0xeeb, 0x82d0, 0x8b84, 0x1, 0x0);
        gbc.writeMem(0xc7df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x57d3, gbc.sp());
        EXPECT(0xc7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7df));
        EXPECT(0x72, gbc.readMem(0xc7e0));
        // CB 72 02C9
        gbc.setState(0xde69, 0xaa19, 0x160, 0x2f36, 0x2c3, 0x99fe, 0x1, 0x0);
        gbc.writeMem(0xde69, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaa19, gbc.sp());
        EXPECT(0xde6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde69));
        EXPECT(0x72, gbc.readMem(0xde6a));
        // CB 72 02CB
        gbc.setState(0xd086, 0x7f6, 0x42d0, 0x287d, 0x8749, 0xc241, 0x0, 0x1);
        gbc.writeMem(0xd086, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7f6, gbc.sp());
        EXPECT(0xd088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd086));
        EXPECT(0x72, gbc.readMem(0xd087));
        // CB 72 02CC
        gbc.setState(0x7adc, 0x8868, 0xba10, 0x2365, 0x75d0, 0xc8d5, 0x0, 0x0);
        gbc.writeMem(0x7adc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8868, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02CD
        gbc.setState(0xed91, 0xeb8, 0xd460, 0xcc52, 0xfffe, 0xaf0f, 0x1, 0x1);
        gbc.writeMem(0xed91, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xeb8, gbc.sp());
        EXPECT(0xed93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed91));
        EXPECT(0x72, gbc.readMem(0xed92));
        // CB 72 02CE
        gbc.setState(0x5f94, 0xa60a, 0x4b80, 0x67fb, 0x6514, 0x695b, 0x1, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa60a, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02CF
        gbc.setState(0x5b9a, 0x76e, 0x6a20, 0x633d, 0x5c52, 0xd808, 0x0, 0x0);
        gbc.writeMem(0x5b9a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x76e, gbc.sp());
        EXPECT(0x5b9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02D0
        gbc.setState(0x9f21, 0xe9e4, 0xf5c0, 0x2023, 0x409c, 0x3331, 0x1, 0x1);
        gbc.writeMem(0x9f21, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe9e4, gbc.sp());
        EXPECT(0x9f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f21));
        EXPECT(0x72, gbc.readMem(0x9f22));
        // CB 72 02D1
        gbc.setState(0xbf94, 0x9ad6, 0xee30, 0xac93, 0xd222, 0x3704, 0x1, 0x1);
        gbc.writeMem(0xbf94, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9ad6, gbc.sp());
        EXPECT(0xbf96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf94));
        EXPECT(0x72, gbc.readMem(0xbf95));
        // CB 72 02D3
        gbc.setState(0xcbbc, 0x86d0, 0xbe80, 0x5ea0, 0xa4e, 0x2508, 0x1, 0x1);
        gbc.writeMem(0xcbbc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0xcbbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbbc));
        EXPECT(0x72, gbc.readMem(0xcbbd));
        // CB 72 02D4
        gbc.setState(0x1876, 0x322a, 0xd570, 0x16ae, 0x81e3, 0xbacf, 0x1, 0x0);
        gbc.writeMem(0x1876, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x322a, gbc.sp());
        EXPECT(0x1878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02D5
        gbc.setState(0x1f4f, 0x17ab, 0x6ec0, 0xdedf, 0xdced, 0xc7ab, 0x0, 0x0);
        gbc.writeMem(0x1f4f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x17ab, gbc.sp());
        EXPECT(0x1f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02D6
        gbc.setState(0x4d99, 0xe86b, 0x5710, 0x982b, 0x5072, 0xde33, 0x1, 0x1);
        gbc.writeMem(0x4d99, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe86b, gbc.sp());
        EXPECT(0x4d9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02D7
        gbc.setState(0x59c8, 0x931a, 0x9480, 0x6d1d, 0xf710, 0x386a, 0x1, 0x0);
        gbc.writeMem(0x59c8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x931a, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02D8
        gbc.setState(0x9a5, 0xc974, 0x90, 0xa475, 0x2b09, 0x123b, 0x0, 0x0);
        gbc.writeMem(0x9a5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc974, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02D9
        gbc.setState(0x1b06, 0xf856, 0xa810, 0xc1c7, 0xcddb, 0xf17e, 0x1, 0x0);
        gbc.writeMem(0x1b06, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf856, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02DA
        gbc.setState(0x614d, 0x4ddc, 0x3e50, 0x79ea, 0x6929, 0xb670, 0x1, 0x1);
        gbc.writeMem(0x614d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x614f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02DB
        gbc.setState(0xc89d, 0x4401, 0xff60, 0xaf36, 0x26f1, 0xdeca, 0x1, 0x0);
        gbc.writeMem(0xc89d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4401, gbc.sp());
        EXPECT(0xc89f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc89d));
        EXPECT(0x72, gbc.readMem(0xc89e));
        // CB 72 02DC
        gbc.setState(0x9749, 0x4983, 0x8e30, 0x97d6, 0x9bb7, 0x18e7, 0x0, 0x1);
        gbc.writeMem(0x9749, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4983, gbc.sp());
        EXPECT(0x974b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9749));
        EXPECT(0x72, gbc.readMem(0x974a));
        // CB 72 02DD
        gbc.setState(0x4477, 0xc5a1, 0x7b80, 0x652d, 0x4279, 0xf96b, 0x1, 0x0);
        gbc.writeMem(0x4477, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc5a1, gbc.sp());
        EXPECT(0x4479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02DE
        gbc.setState(0x6e87, 0xf453, 0x10d0, 0x8c06, 0xa0a3, 0xb399, 0x1, 0x0);
        gbc.writeMem(0x6e87, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf453, gbc.sp());
        EXPECT(0x6e89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02DF
        gbc.setState(0x70d9, 0xd3f4, 0xf560, 0xdd02, 0xecad, 0x656c, 0x0, 0x0);
        gbc.writeMem(0x70d9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xd3f4, gbc.sp());
        EXPECT(0x70db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02E0
        gbc.setState(0x6fc6, 0xf0e8, 0x6b70, 0x3c46, 0xc25a, 0x352c, 0x0, 0x0);
        gbc.writeMem(0x6fc6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0x6fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02E1
        gbc.setState(0xba3b, 0xb6ba, 0x630, 0x5ce, 0xce7, 0xe4c5, 0x0, 0x0);
        gbc.writeMem(0xba3b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb6ba, gbc.sp());
        EXPECT(0xba3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3b));
        EXPECT(0x72, gbc.readMem(0xba3c));
        // CB 72 02E3
        gbc.setState(0xceb1, 0xc175, 0xe80, 0x19bf, 0xd76, 0x55f, 0x0, 0x0);
        gbc.writeMem(0xceb1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc175, gbc.sp());
        EXPECT(0xceb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceb1));
        EXPECT(0x72, gbc.readMem(0xceb2));
        // CB 72 02E4
        gbc.setState(0xa4d4, 0x667a, 0x7800, 0x88f7, 0xb571, 0xb48, 0x1, 0x0);
        gbc.writeMem(0xa4d4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x667a, gbc.sp());
        EXPECT(0xa4d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d4));
        EXPECT(0x72, gbc.readMem(0xa4d5));
        // CB 72 02E5
        gbc.setState(0xe718, 0xc4e3, 0x57b0, 0xf492, 0xf53c, 0x9355, 0x1, 0x0);
        gbc.writeMem(0xe718, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc4e3, gbc.sp());
        EXPECT(0xe71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe718));
        EXPECT(0x72, gbc.readMem(0xe719));
        // CB 72 02E6
        gbc.setState(0xa8d5, 0x2383, 0xccc0, 0x9ec6, 0xb132, 0xb2a2, 0x0, 0x0);
        gbc.writeMem(0xa8d5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2383, gbc.sp());
        EXPECT(0xa8d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8d5));
        EXPECT(0x72, gbc.readMem(0xa8d6));
        // CB 72 02E7
        gbc.setState(0x6536, 0x1433, 0x3790, 0x8862, 0x868d, 0x7fcf, 0x0, 0x1);
        gbc.writeMem(0x6536, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1433, gbc.sp());
        EXPECT(0x6538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02E8
        gbc.setState(0x3aaf, 0x9548, 0x2af0, 0x8da3, 0xf14f, 0x400, 0x1, 0x1);
        gbc.writeMem(0x3aaf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9548, gbc.sp());
        EXPECT(0x3ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02E9
        gbc.setState(0xbe47, 0x94cd, 0xaa40, 0xd4f5, 0x3ab4, 0xbc73, 0x0, 0x1);
        gbc.writeMem(0xbe47, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x94cd, gbc.sp());
        EXPECT(0xbe49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe47));
        EXPECT(0x72, gbc.readMem(0xbe48));
        // CB 72 02EA
        gbc.setState(0x5138, 0x40ef, 0x4320, 0xa40, 0x729e, 0xe970, 0x1, 0x1);
        gbc.writeMem(0x5138, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x40ef, gbc.sp());
        EXPECT(0x513a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02EB
        gbc.setState(0x12fd, 0x5aab, 0xf580, 0xc93c, 0xa99f, 0x2bc9, 0x0, 0x1);
        gbc.writeMem(0x12fd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5aab, gbc.sp());
        EXPECT(0x12ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02EC
        gbc.setState(0x2600, 0xb4b3, 0x5b90, 0xfc17, 0x7cc0, 0xedbd, 0x0, 0x1);
        gbc.writeMem(0x2600, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb4b3, gbc.sp());
        EXPECT(0x2602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02ED
        gbc.setState(0x9c9d, 0x2311, 0x18e0, 0x6fd9, 0xb227, 0x7041, 0x1, 0x1);
        gbc.writeMem(0x9c9d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2311, gbc.sp());
        EXPECT(0x9c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c9d));
        EXPECT(0x72, gbc.readMem(0x9c9e));
        // CB 72 02EE
        gbc.setState(0x97eb, 0x75c9, 0x6250, 0x79a7, 0xe961, 0x9eae, 0x0, 0x0);
        gbc.writeMem(0x97eb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x75c9, gbc.sp());
        EXPECT(0x97ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97eb));
        EXPECT(0x72, gbc.readMem(0x97ec));
        // CB 72 02EF
        gbc.setState(0x3ce6, 0x775e, 0x7bf0, 0x3e4, 0x9aeb, 0x2a58, 0x1, 0x0);
        gbc.writeMem(0x3ce6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x775e, gbc.sp());
        EXPECT(0x3ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02F0
        gbc.setState(0x8d70, 0x8e8a, 0xc010, 0xad74, 0xd917, 0x1b37, 0x1, 0x0);
        gbc.writeMem(0x8d70, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8e8a, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d70));
        EXPECT(0x72, gbc.readMem(0x8d71));
        // CB 72 02F1
        gbc.setState(0xb00b, 0xb213, 0x4890, 0xc0d1, 0x2a90, 0x5fd8, 0x0, 0x0);
        gbc.writeMem(0xb00b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb213, gbc.sp());
        EXPECT(0xb00d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb00b));
        EXPECT(0x72, gbc.readMem(0xb00c));
        // CB 72 02F2
        gbc.setState(0x4dfd, 0x6bca, 0x1af0, 0x3a55, 0x8835, 0xdd9c, 0x0, 0x0);
        gbc.writeMem(0x4dfd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6bca, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02F3
        gbc.setState(0xe077, 0xe21b, 0xf190, 0x852a, 0x57d5, 0x8f30, 0x1, 0x1);
        gbc.writeMem(0xe077, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe21b, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe077));
        EXPECT(0x72, gbc.readMem(0xe078));
        // CB 72 02F4
        gbc.setState(0x70f0, 0x7e8c, 0x8460, 0x558e, 0x1edb, 0xa7c1, 0x1, 0x0);
        gbc.writeMem(0x70f0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7e8c, gbc.sp());
        EXPECT(0x70f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02F5
        gbc.setState(0x13ad, 0x1baf, 0xb1f0, 0xf7e8, 0xa1a6, 0x37c3, 0x0, 0x0);
        gbc.writeMem(0x13ad, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1baf, gbc.sp());
        EXPECT(0x13af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02F6
        gbc.setState(0xee51, 0x18de, 0x69f0, 0xa600, 0xf944, 0x54b1, 0x1, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x18de, gbc.sp());
        EXPECT(0xee53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee51));
        EXPECT(0x72, gbc.readMem(0xee52));
        // CB 72 02F7
        gbc.setState(0xb60d, 0xf033, 0x1b40, 0xb48a, 0x95f3, 0xb291, 0x1, 0x0);
        gbc.writeMem(0xb60d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf033, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb60d));
        EXPECT(0x72, gbc.readMem(0xb60e));
        // CB 72 02F8
        gbc.setState(0x2c3, 0x6b9a, 0xdc70, 0xa10e, 0xf295, 0xae4a, 0x0, 0x1);
        gbc.writeMem(0x2c3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6b9a, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02F9
        gbc.setState(0x41bc, 0x4e9, 0x4460, 0x7920, 0x8c3b, 0x947a, 0x1, 0x0);
        gbc.writeMem(0x41bc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4e9, gbc.sp());
        EXPECT(0x41be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 02FA
        gbc.setState(0x9ade, 0x344d, 0xc0, 0xfaa4, 0xfdc4, 0x20c9, 0x0, 0x1);
        gbc.writeMem(0x9ade, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x344d, gbc.sp());
        EXPECT(0x9ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ade));
        EXPECT(0x72, gbc.readMem(0x9adf));
        // CB 72 02FB
        gbc.setState(0x7e12, 0x9440, 0x84b0, 0x6c97, 0xe222, 0x8e5, 0x1, 0x0);
        gbc.writeMem(0x7e12, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9440, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02FC
        gbc.setState(0xd3e6, 0x1d16, 0xad40, 0xb837, 0xe976, 0x6c88, 0x0, 0x1);
        gbc.writeMem(0xd3e6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0xd3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e6));
        EXPECT(0x72, gbc.readMem(0xd3e7));
        // CB 72 02FE
        gbc.setState(0x40ba, 0x860d, 0x2a10, 0x879b, 0x23b6, 0xb0f2, 0x1, 0x1);
        gbc.writeMem(0x40ba, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x860d, gbc.sp());
        EXPECT(0x40bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 02FF
        gbc.setState(0x9bf0, 0x91d7, 0x3640, 0x98a1, 0xc882, 0xd436, 0x0, 0x1);
        gbc.writeMem(0x9bf0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91d7, gbc.sp());
        EXPECT(0x9bf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf0));
        EXPECT(0x72, gbc.readMem(0x9bf1));
        // CB 72 0300
        gbc.setState(0xaee1, 0xaab3, 0xc270, 0xfe47, 0xc71c, 0xd5de, 0x0, 0x0);
        gbc.writeMem(0xaee1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaab3, gbc.sp());
        EXPECT(0xaee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee1));
        EXPECT(0x72, gbc.readMem(0xaee2));
        // CB 72 0301
        gbc.setState(0xd831, 0x196b, 0xe0b0, 0xe416, 0xb2f9, 0x4433, 0x0, 0x0);
        gbc.writeMem(0xd831, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0xd833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd831));
        EXPECT(0x72, gbc.readMem(0xd832));
        // CB 72 0302
        gbc.setState(0x8dc, 0xdec, 0x6900, 0xcb3a, 0xd40, 0x86fd, 0x0, 0x0);
        gbc.writeMem(0x8dc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xdec, gbc.sp());
        EXPECT(0x8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0303
        gbc.setState(0xcc47, 0x312c, 0x14c0, 0xdcbe, 0x2bb9, 0x4284, 0x1, 0x1);
        gbc.writeMem(0xcc47, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x312c, gbc.sp());
        EXPECT(0xcc49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc47));
        EXPECT(0x72, gbc.readMem(0xcc48));
        // CB 72 0304
        gbc.setState(0xcfca, 0x8e48, 0x39f0, 0x52a3, 0x6164, 0x179, 0x1, 0x0);
        gbc.writeMem(0xcfca, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x8e48, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfca));
        EXPECT(0x72, gbc.readMem(0xcfcb));
        // CB 72 0305
        gbc.setState(0x9cab, 0xb5e7, 0xfbf0, 0xdeef, 0x9a5f, 0xdfde, 0x0, 0x0);
        gbc.writeMem(0x9cab, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb5e7, gbc.sp());
        EXPECT(0x9cad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cab));
        EXPECT(0x72, gbc.readMem(0x9cac));
        // CB 72 0306
        gbc.setState(0xc9ce, 0x87ec, 0xe730, 0x57b5, 0x5774, 0x86d0, 0x1, 0x1);
        gbc.writeMem(0xc9ce, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x87ec, gbc.sp());
        EXPECT(0xc9d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ce));
        EXPECT(0x72, gbc.readMem(0xc9cf));
        // CB 72 0307
        gbc.setState(0x90fb, 0xbc5c, 0x30a0, 0x9571, 0xcfa4, 0x328, 0x0, 0x1);
        gbc.writeMem(0x90fb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0x90fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fb));
        EXPECT(0x72, gbc.readMem(0x90fc));
        // CB 72 0308
        gbc.setState(0x607b, 0xd900, 0xcc50, 0x509e, 0x87d8, 0x9f2c, 0x1, 0x1);
        gbc.writeMem(0x607b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0x607d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0309
        gbc.setState(0x37f4, 0xfaa3, 0x2950, 0xc440, 0x91e3, 0xd6da, 0x1, 0x0);
        gbc.writeMem(0x37f4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xfaa3, gbc.sp());
        EXPECT(0x37f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 030A
        gbc.setState(0x28e5, 0xa099, 0x1090, 0xed23, 0xf40e, 0xf0ee, 0x1, 0x1);
        gbc.writeMem(0x28e5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa099, gbc.sp());
        EXPECT(0x28e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 030B
        gbc.setState(0xacdd, 0x4e6, 0xb820, 0x4e87, 0x2935, 0xa832, 0x0, 0x0);
        gbc.writeMem(0xacdd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4e6, gbc.sp());
        EXPECT(0xacdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacdd));
        EXPECT(0x72, gbc.readMem(0xacde));
        // CB 72 030C
        gbc.setState(0xd91a, 0xedf1, 0x5ca0, 0xb660, 0xdb03, 0x9a59, 0x0, 0x1);
        gbc.writeMem(0xd91a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xedf1, gbc.sp());
        EXPECT(0xd91c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91a));
        EXPECT(0x72, gbc.readMem(0xd91b));
        // CB 72 030D
        gbc.setState(0x66f2, 0xfa42, 0x2670, 0xcbb3, 0xde9f, 0x228d, 0x0, 0x1);
        gbc.writeMem(0x66f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x66f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0310
        gbc.setState(0x4a1d, 0xbe04, 0x6d90, 0x9281, 0x747, 0xcd36, 0x0, 0x0);
        gbc.writeMem(0x4a1d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbe04, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0311
        gbc.setState(0xca37, 0xf8f3, 0xaff0, 0x6fbd, 0x7e5e, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0xca37, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf8f3, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca37));
        EXPECT(0x72, gbc.readMem(0xca38));
        // CB 72 0312
        gbc.setState(0xbb2, 0xd204, 0xff50, 0xed73, 0xd2e0, 0x48e7, 0x1, 0x1);
        gbc.writeMem(0xbb2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd204, gbc.sp());
        EXPECT(0xbb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0313
        gbc.setState(0x6ecd, 0xd219, 0x2f0, 0xbebe, 0x35bc, 0xe28e, 0x1, 0x1);
        gbc.writeMem(0x6ecd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd219, gbc.sp());
        EXPECT(0x6ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0314
        gbc.setState(0xcf12, 0xd253, 0x590, 0xed9, 0x66cc, 0x5fcf, 0x1, 0x1);
        gbc.writeMem(0xcf12, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd253, gbc.sp());
        EXPECT(0xcf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf12));
        EXPECT(0x72, gbc.readMem(0xcf13));
        // CB 72 0315
        gbc.setState(0xb953, 0x5fec, 0xa620, 0xd028, 0xa79c, 0xfdf, 0x0, 0x0);
        gbc.writeMem(0xb953, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5fec, gbc.sp());
        EXPECT(0xb955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb953));
        EXPECT(0x72, gbc.readMem(0xb954));
        // CB 72 0318
        gbc.setState(0xa73, 0x88cc, 0x4b50, 0x194f, 0x9c85, 0xf701, 0x0, 0x1);
        gbc.writeMem(0xa73, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x88cc, gbc.sp());
        EXPECT(0xa75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0319
        gbc.setState(0xbb25, 0x1ed, 0x3fd0, 0x6f6b, 0x2a1c, 0x7620, 0x1, 0x0);
        gbc.writeMem(0xbb25, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1ed, gbc.sp());
        EXPECT(0xbb27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb25));
        EXPECT(0x72, gbc.readMem(0xbb26));
        // CB 72 031A
        gbc.setState(0x78fc, 0xca2a, 0x72e0, 0x7cf8, 0x214d, 0x4e9b, 0x0, 0x1);
        gbc.writeMem(0x78fc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xca2a, gbc.sp());
        EXPECT(0x78fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 031B
        gbc.setState(0x4d33, 0xbd51, 0x84a0, 0xd245, 0x2099, 0x9109, 0x1, 0x1);
        gbc.writeMem(0x4d33, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xbd51, gbc.sp());
        EXPECT(0x4d35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 031C
        gbc.setState(0x1c5, 0x3dc7, 0xa7e0, 0x118c, 0x7e82, 0x2f21, 0x1, 0x0);
        gbc.writeMem(0x1c5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3dc7, gbc.sp());
        EXPECT(0x1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 031D
        gbc.setState(0x43a6, 0x42b, 0xc0e0, 0x4272, 0x687f, 0x5e08, 0x1, 0x0);
        gbc.writeMem(0x43a6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x42b, gbc.sp());
        EXPECT(0x43a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 031E
        gbc.setState(0xa43e, 0x5d42, 0xdba0, 0x1858, 0xf1df, 0xfb89, 0x1, 0x1);
        gbc.writeMem(0xa43e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5d42, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0x72, gbc.readMem(0xa43f));
        // CB 72 031F
        gbc.setState(0x7afd, 0xfc2a, 0x9600, 0x6ee2, 0xbf24, 0xb850, 0x0, 0x1);
        gbc.writeMem(0x7afd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfc2a, gbc.sp());
        EXPECT(0x7aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0320
        gbc.setState(0x6746, 0x2b70, 0x9fa0, 0x7d75, 0xb439, 0x7550, 0x0, 0x0);
        gbc.writeMem(0x6746, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2b70, gbc.sp());
        EXPECT(0x6748, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0321
        gbc.setState(0xbbe9, 0x17b7, 0x4520, 0x8270, 0xb5d4, 0x1e38, 0x0, 0x0);
        gbc.writeMem(0xbbe9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x17b7, gbc.sp());
        EXPECT(0xbbeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe9));
        EXPECT(0x72, gbc.readMem(0xbbea));
        // CB 72 0322
        gbc.setState(0xbf99, 0x8f08, 0x8c50, 0xc6f3, 0xff3a, 0x855, 0x1, 0x1);
        gbc.writeMem(0xbf99, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8f08, gbc.sp());
        EXPECT(0xbf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf99));
        EXPECT(0x72, gbc.readMem(0xbf9a));
        // CB 72 0323
        gbc.setState(0x1b36, 0xf375, 0x92e0, 0xbe7b, 0xee9c, 0x3d51, 0x0, 0x0);
        gbc.writeMem(0x1b36, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf375, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0324
        gbc.setState(0x98ee, 0x6373, 0x7990, 0xa6cb, 0x2ee2, 0xfda2, 0x1, 0x1);
        gbc.writeMem(0x98ee, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6373, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ee));
        EXPECT(0x72, gbc.readMem(0x98ef));
        // CB 72 0325
        gbc.setState(0x2bc1, 0x263f, 0xd5a0, 0x8c2c, 0x3f87, 0x3c64, 0x0, 0x0);
        gbc.writeMem(0x2bc1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x263f, gbc.sp());
        EXPECT(0x2bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0326
        gbc.setState(0x84dd, 0x93c1, 0xab10, 0xd1e5, 0x8b07, 0x7e6e, 0x0, 0x0);
        gbc.writeMem(0x84dd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x93c1, gbc.sp());
        EXPECT(0x84df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84dd));
        EXPECT(0x72, gbc.readMem(0x84de));
        // CB 72 0327
        gbc.setState(0x4d19, 0x73a1, 0x1340, 0xdde9, 0xb44c, 0x9e63, 0x1, 0x0);
        gbc.writeMem(0x4d19, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x73a1, gbc.sp());
        EXPECT(0x4d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0328
        gbc.setState(0x7b27, 0x15c4, 0x96b0, 0xe8d8, 0xaf66, 0x528b, 0x0, 0x1);
        gbc.writeMem(0x7b27, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0x7b29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0329
        gbc.setState(0x84e0, 0xd106, 0x3b50, 0x255b, 0x58fb, 0x2fa7, 0x1, 0x1);
        gbc.writeMem(0x84e0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0x84e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e0));
        EXPECT(0x72, gbc.readMem(0x84e1));
        // CB 72 032A
        gbc.setState(0xaaf4, 0x6b95, 0x3d00, 0x97c3, 0x5ec8, 0xd113, 0x1, 0x0);
        gbc.writeMem(0xaaf4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6b95, gbc.sp());
        EXPECT(0xaaf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf4));
        EXPECT(0x72, gbc.readMem(0xaaf5));
        // CB 72 032B
        gbc.setState(0x6c7f, 0x925c, 0x8350, 0xfae8, 0x6c74, 0xb7ab, 0x1, 0x0);
        gbc.writeMem(0x6c7f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x925c, gbc.sp());
        EXPECT(0x6c81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 032C
        gbc.setState(0x28fe, 0x1f9d, 0x8270, 0x1a8a, 0x1c56, 0x3d30, 0x1, 0x1);
        gbc.writeMem(0x28fe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1f9d, gbc.sp());
        EXPECT(0x2900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 032D
        gbc.setState(0x93eb, 0x3f19, 0xe120, 0xfa84, 0xd8c, 0x622b, 0x1, 0x0);
        gbc.writeMem(0x93eb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3f19, gbc.sp());
        EXPECT(0x93ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93eb));
        EXPECT(0x72, gbc.readMem(0x93ec));
        // CB 72 032E
        gbc.setState(0x895c, 0x117, 0x5c70, 0x5800, 0x6f12, 0x5b21, 0x0, 0x1);
        gbc.writeMem(0x895c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x117, gbc.sp());
        EXPECT(0x895e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x895c));
        EXPECT(0x72, gbc.readMem(0x895d));
        // CB 72 032F
        gbc.setState(0xdb87, 0xcd52, 0xfc00, 0xe057, 0x5844, 0x225a, 0x1, 0x1);
        gbc.writeMem(0xdb87, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcd52, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb87));
        EXPECT(0x72, gbc.readMem(0xdb88));
        // CB 72 0330
        gbc.setState(0x939f, 0xdc17, 0x130, 0xe99e, 0xf576, 0x6793, 0x0, 0x1);
        gbc.writeMem(0x939f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xdc17, gbc.sp());
        EXPECT(0x93a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x939f));
        EXPECT(0x72, gbc.readMem(0x93a0));
        // CB 72 0331
        gbc.setState(0xaa0, 0x78c4, 0xa0b0, 0x8153, 0x94be, 0x3096, 0x0, 0x1);
        gbc.writeMem(0xaa0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x78c4, gbc.sp());
        EXPECT(0xaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0332
        gbc.setState(0xc2da, 0xcdd3, 0xd040, 0x23a8, 0xcc41, 0xaaec, 0x1, 0x1);
        gbc.writeMem(0xc2da, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xcdd3, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2da));
        EXPECT(0x72, gbc.readMem(0xc2db));
        // CB 72 0333
        gbc.setState(0x403a, 0x3483, 0x9890, 0xc2c, 0x5a6d, 0x3207, 0x1, 0x1);
        gbc.writeMem(0x403a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3483, gbc.sp());
        EXPECT(0x403c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0334
        gbc.setState(0x6d0e, 0x7805, 0x6640, 0x3cf2, 0xd5ab, 0x3c84, 0x1, 0x1);
        gbc.writeMem(0x6d0e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7805, gbc.sp());
        EXPECT(0x6d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0335
        gbc.setState(0xb77f, 0x57f4, 0x8f00, 0xdee0, 0x2bba, 0xaeee, 0x0, 0x0);
        gbc.writeMem(0xb77f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x57f4, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0x72, gbc.readMem(0xb780));
        // CB 72 0336
        gbc.setState(0xe77e, 0x24d7, 0x4d50, 0xa541, 0xc684, 0x1468, 0x1, 0x1);
        gbc.writeMem(0xe77e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0xe780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77e));
        EXPECT(0x72, gbc.readMem(0xe77f));
        // CB 72 0337
        gbc.setState(0x2cf4, 0xef80, 0x9280, 0x1c5d, 0x99ca, 0x1ac3, 0x1, 0x0);
        gbc.writeMem(0x2cf4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xef80, gbc.sp());
        EXPECT(0x2cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0338
        gbc.setState(0xa9c0, 0xf6ee, 0x1120, 0xbb3a, 0xae60, 0xbb36, 0x1, 0x1);
        gbc.writeMem(0xa9c0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf6ee, gbc.sp());
        EXPECT(0xa9c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c0));
        EXPECT(0x72, gbc.readMem(0xa9c1));
        // CB 72 0339
        gbc.setState(0x2175, 0xbc07, 0x7a0, 0x8b33, 0xc54b, 0x2d8a, 0x0, 0x0);
        gbc.writeMem(0x2175, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbc07, gbc.sp());
        EXPECT(0x2177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 033A
        gbc.setState(0x4053, 0x473e, 0xcb70, 0x7f50, 0x5e68, 0x2dd6, 0x0, 0x0);
        gbc.writeMem(0x4053, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x473e, gbc.sp());
        EXPECT(0x4055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 033B
        gbc.setState(0x148d, 0x7bc1, 0x6350, 0x42d1, 0xcde1, 0x9a61, 0x1, 0x0);
        gbc.writeMem(0x148d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x148f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 033C
        gbc.setState(0xddbc, 0xe3c2, 0x1550, 0xa991, 0x6fca, 0x657c, 0x0, 0x1);
        gbc.writeMem(0xddbc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe3c2, gbc.sp());
        EXPECT(0xddbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbc));
        EXPECT(0x72, gbc.readMem(0xddbd));
        // CB 72 033D
        gbc.setState(0xeb7e, 0x8ba7, 0x97d0, 0xc682, 0x5c2a, 0x72ce, 0x1, 0x0);
        gbc.writeMem(0xeb7e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8ba7, gbc.sp());
        EXPECT(0xeb80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7e));
        EXPECT(0x72, gbc.readMem(0xeb7f));
        // CB 72 033E
        gbc.setState(0xb947, 0x6f28, 0x63f0, 0x8e2d, 0x668d, 0xbafc, 0x1, 0x0);
        gbc.writeMem(0xb947, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x6f28, gbc.sp());
        EXPECT(0xb949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb947));
        EXPECT(0x72, gbc.readMem(0xb948));
        // CB 72 033F
        gbc.setState(0x79c2, 0xad1f, 0x42b0, 0xc627, 0xb25d, 0xdcc0, 0x1, 0x0);
        gbc.writeMem(0x79c2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xad1f, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0340
        gbc.setState(0x1f37, 0x3f06, 0x9b70, 0x71c3, 0x47b7, 0xdd02, 0x1, 0x0);
        gbc.writeMem(0x1f37, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3f06, gbc.sp());
        EXPECT(0x1f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0341
        gbc.setState(0x4dc8, 0xbab2, 0xf7d0, 0x6486, 0xcb58, 0x4ce2, 0x1, 0x1);
        gbc.writeMem(0x4dc8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xbab2, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0342
        gbc.setState(0x1c00, 0x8997, 0x5d0, 0x12e7, 0x9575, 0x9509, 0x1, 0x1);
        gbc.writeMem(0x1c00, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8997, gbc.sp());
        EXPECT(0x1c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0343
        gbc.setState(0x4eaf, 0x6876, 0xdc20, 0xbc7a, 0xd601, 0xc683, 0x0, 0x0);
        gbc.writeMem(0x4eaf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6876, gbc.sp());
        EXPECT(0x4eb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0344
        gbc.setState(0x643f, 0xe599, 0x6420, 0x929a, 0x5c5, 0xcc41, 0x0, 0x1);
        gbc.writeMem(0x643f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe599, gbc.sp());
        EXPECT(0x6441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0345
        gbc.setState(0xb256, 0xbdc3, 0x6070, 0x192b, 0xac2f, 0xc34a, 0x0, 0x0);
        gbc.writeMem(0xb256, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbdc3, gbc.sp());
        EXPECT(0xb258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb256));
        EXPECT(0x72, gbc.readMem(0xb257));
        // CB 72 0346
        gbc.setState(0xd554, 0x9a7b, 0xe510, 0x68b6, 0x901d, 0xa2cf, 0x0, 0x1);
        gbc.writeMem(0xd554, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9a7b, gbc.sp());
        EXPECT(0xd556, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd554));
        EXPECT(0x72, gbc.readMem(0xd555));
        // CB 72 0347
        gbc.setState(0xd498, 0x3702, 0xd2f0, 0x1d94, 0x97af, 0xcca4, 0x1, 0x0);
        gbc.writeMem(0xd498, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xd49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd498));
        EXPECT(0x72, gbc.readMem(0xd499));
        // CB 72 0348
        gbc.setState(0xb50b, 0xbbed, 0xe570, 0x6a74, 0xdb00, 0x7e5c, 0x1, 0x0);
        gbc.writeMem(0xb50b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbbed, gbc.sp());
        EXPECT(0xb50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb50b));
        EXPECT(0x72, gbc.readMem(0xb50c));
        // CB 72 0349
        gbc.setState(0x180, 0xd1e8, 0x9780, 0xfd31, 0xd0ec, 0x43a6, 0x1, 0x1);
        gbc.writeMem(0x180, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd1e8, gbc.sp());
        EXPECT(0x182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 034A
        gbc.setState(0x10cf, 0x602f, 0x9160, 0x8d1f, 0xafa2, 0x1be0, 0x1, 0x0);
        gbc.writeMem(0x10cf, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x602f, gbc.sp());
        EXPECT(0x10d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 034B
        gbc.setState(0xe437, 0xfaff, 0x9890, 0x4421, 0x9fb0, 0xb695, 0x1, 0x0);
        gbc.writeMem(0xe437, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfaff, gbc.sp());
        EXPECT(0xe439, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe437));
        EXPECT(0x72, gbc.readMem(0xe438));
        // CB 72 034C
        gbc.setState(0x444, 0x3129, 0x8c70, 0x7c22, 0xd916, 0x3c5a, 0x1, 0x0);
        gbc.writeMem(0x444, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0x446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 034D
        gbc.setState(0xdad9, 0x224a, 0x59c0, 0x83e8, 0x6e94, 0x619c, 0x0, 0x1);
        gbc.writeMem(0xdad9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0xdadb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdad9));
        EXPECT(0x72, gbc.readMem(0xdada));
        // CB 72 034E
        gbc.setState(0x89d3, 0x3cb2, 0x39b0, 0x8c00, 0xf5e5, 0x5a71, 0x0, 0x0);
        gbc.writeMem(0x89d3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3cb2, gbc.sp());
        EXPECT(0x89d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d3));
        EXPECT(0x72, gbc.readMem(0x89d4));
        // CB 72 034F
        gbc.setState(0x4077, 0x8d78, 0xdc70, 0x9d97, 0xde5c, 0x911d, 0x0, 0x0);
        gbc.writeMem(0x4077, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8d78, gbc.sp());
        EXPECT(0x4079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0350
        gbc.setState(0xeb3b, 0x1eec, 0xcd90, 0x48f0, 0x7239, 0x76ca, 0x0, 0x0);
        gbc.writeMem(0xeb3b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1eec, gbc.sp());
        EXPECT(0xeb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3b));
        EXPECT(0x72, gbc.readMem(0xeb3c));
        // CB 72 0351
        gbc.setState(0x44bd, 0x68ad, 0x9d70, 0x24bb, 0x64d1, 0xc101, 0x0, 0x1);
        gbc.writeMem(0x44bd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x68ad, gbc.sp());
        EXPECT(0x44bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0352
        gbc.setState(0x55df, 0x5b90, 0x7220, 0x7279, 0x3eb3, 0xd2de, 0x1, 0x0);
        gbc.writeMem(0x55df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b90, gbc.sp());
        EXPECT(0x55e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0353
        gbc.setState(0x5d3a, 0x37b, 0x9960, 0x6337, 0x9241, 0x324f, 0x1, 0x1);
        gbc.writeMem(0x5d3a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0354
        gbc.setState(0xd182, 0x2c51, 0xd160, 0xc47f, 0x6077, 0x614, 0x0, 0x1);
        gbc.writeMem(0xd182, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0xd184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd182));
        EXPECT(0x72, gbc.readMem(0xd183));
        // CB 72 0355
        gbc.setState(0x3a30, 0x3cd2, 0xf10, 0x5f0d, 0x14ba, 0x5c02, 0x1, 0x1);
        gbc.writeMem(0x3a30, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3cd2, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0356
        gbc.setState(0x2c5d, 0xee5d, 0x1c0, 0x3203, 0xa51a, 0xde13, 0x0, 0x0);
        gbc.writeMem(0x2c5d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0357
        gbc.setState(0x4d11, 0x52e7, 0xf870, 0x5293, 0x9d7a, 0x23f9, 0x1, 0x1);
        gbc.writeMem(0x4d11, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x52e7, gbc.sp());
        EXPECT(0x4d13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0358
        gbc.setState(0xd35d, 0x5c3b, 0xf690, 0xb599, 0xdf25, 0x6b9a, 0x1, 0x1);
        gbc.writeMem(0xd35d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5c3b, gbc.sp());
        EXPECT(0xd35f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35d));
        EXPECT(0x72, gbc.readMem(0xd35e));
        // CB 72 0359
        gbc.setState(0x4dc6, 0xbc39, 0xf290, 0x3f66, 0x745d, 0xe65b, 0x0, 0x0);
        gbc.writeMem(0x4dc6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc39, gbc.sp());
        EXPECT(0x4dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 035A
        gbc.setState(0x9a0c, 0xe2aa, 0x3d00, 0x67d8, 0x433d, 0x2c09, 0x0, 0x1);
        gbc.writeMem(0x9a0c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe2aa, gbc.sp());
        EXPECT(0x9a0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a0c));
        EXPECT(0x72, gbc.readMem(0x9a0d));
        // CB 72 035B
        gbc.setState(0xb6f2, 0x3a6c, 0xa00, 0xfa5c, 0x954a, 0x6792, 0x0, 0x1);
        gbc.writeMem(0xb6f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0xb6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6f2));
        EXPECT(0x72, gbc.readMem(0xb6f3));
        // CB 72 035D
        gbc.setState(0x1486, 0xef51, 0x4140, 0x9c93, 0x7aac, 0x4d0c, 0x1, 0x1);
        gbc.writeMem(0x1486, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xef51, gbc.sp());
        EXPECT(0x1488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 035E
        gbc.setState(0x75f2, 0x3872, 0xb240, 0x9c95, 0x437e, 0x7ba4, 0x0, 0x0);
        gbc.writeMem(0x75f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3872, gbc.sp());
        EXPECT(0x75f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 035F
        gbc.setState(0x8bcb, 0xdea7, 0x2220, 0xf088, 0x38c, 0xb321, 0x1, 0x0);
        gbc.writeMem(0x8bcb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdea7, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcb));
        EXPECT(0x72, gbc.readMem(0x8bcc));
        // CB 72 0360
        gbc.setState(0x6dcd, 0x9428, 0x7ff0, 0xe51c, 0xbd5e, 0x307f, 0x0, 0x0);
        gbc.writeMem(0x6dcd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9428, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0361
        gbc.setState(0x1468, 0x55e, 0x1460, 0x400, 0x14fe, 0xc119, 0x0, 0x1);
        gbc.writeMem(0x1468, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x55e, gbc.sp());
        EXPECT(0x146a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0362
        gbc.setState(0xadbe, 0x3543, 0xe070, 0xd4e8, 0xfbd9, 0x1e12, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3543, gbc.sp());
        EXPECT(0xadc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbe));
        EXPECT(0x72, gbc.readMem(0xadbf));
        // CB 72 0364
        gbc.setState(0xae3c, 0xb91e, 0xb7b0, 0x7e32, 0xd0da, 0x291f, 0x1, 0x1);
        gbc.writeMem(0xae3c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb91e, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3c));
        EXPECT(0x72, gbc.readMem(0xae3d));
        // CB 72 0365
        gbc.setState(0xe06, 0x8daa, 0x3410, 0xd4e0, 0x4051, 0x13f0, 0x1, 0x1);
        gbc.writeMem(0xe06, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xe08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0366
        gbc.setState(0x56c0, 0x6ac4, 0xa540, 0x3a26, 0x8005, 0x45a5, 0x0, 0x1);
        gbc.writeMem(0x56c0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6ac4, gbc.sp());
        EXPECT(0x56c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0367
        gbc.setState(0xd47, 0x4bed, 0xb400, 0xfb93, 0x8a00, 0x8616, 0x0, 0x0);
        gbc.writeMem(0xd47, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4bed, gbc.sp());
        EXPECT(0xd49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0368
        gbc.setState(0x535e, 0xd5a3, 0x4320, 0x7dbd, 0x4cc8, 0xf112, 0x1, 0x1);
        gbc.writeMem(0x535e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd5a3, gbc.sp());
        EXPECT(0x5360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0369
        gbc.setState(0x79be, 0x9b34, 0x3350, 0xbe99, 0xf049, 0x34ed, 0x0, 0x1);
        gbc.writeMem(0x79be, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9b34, gbc.sp());
        EXPECT(0x79c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 036A
        gbc.setState(0xd83b, 0xf3, 0xeca0, 0xecce, 0x14ad, 0xc10b, 0x0, 0x1);
        gbc.writeMem(0xd83b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf3, gbc.sp());
        EXPECT(0xd83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd83b));
        EXPECT(0x72, gbc.readMem(0xd83c));
        // CB 72 036B
        gbc.setState(0x4e4b, 0x4423, 0xcd90, 0xa992, 0x29e2, 0xb701, 0x0, 0x1);
        gbc.writeMem(0x4e4b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4423, gbc.sp());
        EXPECT(0x4e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 036C
        gbc.setState(0x91df, 0xbdea, 0x5980, 0xd994, 0x436c, 0xa65f, 0x0, 0x1);
        gbc.writeMem(0x91df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xbdea, gbc.sp());
        EXPECT(0x91e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91df));
        EXPECT(0x72, gbc.readMem(0x91e0));
        // CB 72 036D
        gbc.setState(0x3202, 0x1015, 0xf4e0, 0xd725, 0x827e, 0xfc78, 0x0, 0x1);
        gbc.writeMem(0x3202, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1015, gbc.sp());
        EXPECT(0x3204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 036E
        gbc.setState(0x479b, 0xa382, 0x96d0, 0x9f0, 0x87c6, 0x725d, 0x0, 0x0);
        gbc.writeMem(0x479b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa382, gbc.sp());
        EXPECT(0x479d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 036F
        gbc.setState(0x3e98, 0xc92e, 0xfe20, 0xd78d, 0xb2c4, 0xccfc, 0x1, 0x1);
        gbc.writeMem(0x3e98, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0370
        gbc.setState(0x73e4, 0x8193, 0xa240, 0xd18a, 0xa2e8, 0x60a6, 0x0, 0x1);
        gbc.writeMem(0x73e4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8193, gbc.sp());
        EXPECT(0x73e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0371
        gbc.setState(0x91f1, 0xdb07, 0xb1f0, 0xdc2f, 0xb7d9, 0x2b77, 0x1, 0x0);
        gbc.writeMem(0x91f1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb07, gbc.sp());
        EXPECT(0x91f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f1));
        EXPECT(0x72, gbc.readMem(0x91f2));
        // CB 72 0372
        gbc.setState(0x952c, 0x11b1, 0x4f0, 0x8abf, 0xec2f, 0x657b, 0x0, 0x1);
        gbc.writeMem(0x952c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x11b1, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952c));
        EXPECT(0x72, gbc.readMem(0x952d));
        // CB 72 0373
        gbc.setState(0xf9d, 0x8038, 0xe9b0, 0xfa83, 0xb7c6, 0xb6b7, 0x1, 0x0);
        gbc.writeMem(0xf9d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8038, gbc.sp());
        EXPECT(0xf9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0374
        gbc.setState(0x5b94, 0x6cdf, 0xcd50, 0x9a2e, 0x39c7, 0x2e45, 0x1, 0x0);
        gbc.writeMem(0x5b94, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6cdf, gbc.sp());
        EXPECT(0x5b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0375
        gbc.setState(0x97f2, 0x6fb1, 0x2a80, 0x48e5, 0x5f45, 0x653, 0x0, 0x1);
        gbc.writeMem(0x97f2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6fb1, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f2));
        EXPECT(0x72, gbc.readMem(0x97f3));
        // CB 72 0376
        gbc.setState(0x5f2a, 0xebcf, 0x9d60, 0x3a75, 0x4e5e, 0x3993, 0x1, 0x1);
        gbc.writeMem(0x5f2a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xebcf, gbc.sp());
        EXPECT(0x5f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0377
        gbc.setState(0x1a2a, 0x1ba4, 0xaa0, 0xbd16, 0xb101, 0xa690, 0x1, 0x1);
        gbc.writeMem(0x1a2a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1ba4, gbc.sp());
        EXPECT(0x1a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0379
        gbc.setState(0x38df, 0xa962, 0x8880, 0xec64, 0xf115, 0xdb0a, 0x0, 0x0);
        gbc.writeMem(0x38df, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xa962, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 037A
        gbc.setState(0xe1c3, 0x9b5e, 0xf750, 0xa01a, 0x158b, 0x1e3b, 0x1, 0x1);
        gbc.writeMem(0xe1c3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9b5e, gbc.sp());
        EXPECT(0xe1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c3));
        EXPECT(0x72, gbc.readMem(0xe1c4));
        // CB 72 037B
        gbc.setState(0xd86a, 0x7d46, 0xe6d0, 0x6914, 0xe2a9, 0x720c, 0x1, 0x0);
        gbc.writeMem(0xd86a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7d46, gbc.sp());
        EXPECT(0xd86c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd86a));
        EXPECT(0x72, gbc.readMem(0xd86b));
        // CB 72 037E
        gbc.setState(0xad36, 0x1dee, 0x9e10, 0xde8b, 0x1c8b, 0x217c, 0x0, 0x1);
        gbc.writeMem(0xad36, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0xad38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad36));
        EXPECT(0x72, gbc.readMem(0xad37));
        // CB 72 037F
        gbc.setState(0x8cc3, 0x7128, 0x1b30, 0x6e65, 0xacc4, 0x7a38, 0x1, 0x1);
        gbc.writeMem(0x8cc3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x8cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc3));
        EXPECT(0x72, gbc.readMem(0x8cc4));
        // CB 72 0380
        gbc.setState(0x56d1, 0x322d, 0x1600, 0x6844, 0x20ee, 0xbf5c, 0x1, 0x1);
        gbc.writeMem(0x56d1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x322d, gbc.sp());
        EXPECT(0x56d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 0382
        gbc.setState(0x6fc8, 0x57e8, 0x6f0, 0x5557, 0x7764, 0x6b09, 0x1, 0x1);
        gbc.writeMem(0x6fc8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x57e8, gbc.sp());
        EXPECT(0x6fca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0383
        gbc.setState(0x6683, 0xd7e9, 0x230, 0x71bc, 0x70c8, 0x8520, 0x1, 0x0);
        gbc.writeMem(0x6683, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd7e9, gbc.sp());
        EXPECT(0x6685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0384
        gbc.setState(0x6176, 0xa82a, 0x2490, 0x99a0, 0x734c, 0x2a2e, 0x1, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa82a, gbc.sp());
        EXPECT(0x6178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0385
        gbc.setState(0xa3b0, 0x7e85, 0x9e40, 0xcac4, 0xd1e7, 0xbec6, 0x1, 0x1);
        gbc.writeMem(0xa3b0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7e85, gbc.sp());
        EXPECT(0xa3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3b0));
        EXPECT(0x72, gbc.readMem(0xa3b1));
        // CB 72 0386
        gbc.setState(0xe4a2, 0xad2b, 0xf8a0, 0xd9af, 0x8d14, 0x9d46, 0x0, 0x0);
        gbc.writeMem(0xe4a2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xad2b, gbc.sp());
        EXPECT(0xe4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a2));
        EXPECT(0x72, gbc.readMem(0xe4a3));
        // CB 72 0387
        gbc.setState(0x83c4, 0x4b4c, 0xa190, 0xe604, 0xa930, 0x4f1a, 0x1, 0x0);
        gbc.writeMem(0x83c4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4b4c, gbc.sp());
        EXPECT(0x83c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83c4));
        EXPECT(0x72, gbc.readMem(0x83c5));
        // CB 72 0388
        gbc.setState(0xb9f1, 0xb313, 0x2b70, 0x883b, 0x240e, 0xbfb0, 0x0, 0x1);
        gbc.writeMem(0xb9f1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f1));
        EXPECT(0x72, gbc.readMem(0xb9f2));
        // CB 72 0389
        gbc.setState(0x9f3e, 0x929, 0xf550, 0xff7b, 0xca3, 0x6b34, 0x1, 0x1);
        gbc.writeMem(0x9f3e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x929, gbc.sp());
        EXPECT(0x9f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f3e));
        EXPECT(0x72, gbc.readMem(0x9f3f));
        // CB 72 038A
        gbc.setState(0x802c, 0x603b, 0x3250, 0xdfc2, 0x2ecf, 0xbbf8, 0x1, 0x0);
        gbc.writeMem(0x802c, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x603b, gbc.sp());
        EXPECT(0x802e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802c));
        EXPECT(0x72, gbc.readMem(0x802d));
        // CB 72 038B
        gbc.setState(0xed38, 0x4135, 0x8fc0, 0x409e, 0x89cd, 0xec6b, 0x0, 0x0);
        gbc.writeMem(0xed38, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4135, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed38));
        EXPECT(0x72, gbc.readMem(0xed39));
        // CB 72 038C
        gbc.setState(0xc568, 0xd8d6, 0xe550, 0xe66b, 0xdf1e, 0x17ab, 0x1, 0x1);
        gbc.writeMem(0xc568, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd8d6, gbc.sp());
        EXPECT(0xc56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc568));
        EXPECT(0x72, gbc.readMem(0xc569));
        // CB 72 038D
        gbc.setState(0xaaf0, 0xa23f, 0x830, 0x1932, 0x347, 0xadd3, 0x1, 0x1);
        gbc.writeMem(0xaaf0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa23f, gbc.sp());
        EXPECT(0xaaf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf0));
        EXPECT(0x72, gbc.readMem(0xaaf1));
        // CB 72 038E
        gbc.setState(0x9bf1, 0xe9a0, 0xea40, 0xc6cf, 0xab5, 0xf55, 0x1, 0x1);
        gbc.writeMem(0x9bf1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe9a0, gbc.sp());
        EXPECT(0x9bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf1));
        EXPECT(0x72, gbc.readMem(0x9bf2));
        // CB 72 038F
        gbc.setState(0xc4d9, 0x9a22, 0x3d20, 0x3182, 0x9004, 0xee1c, 0x1, 0x0);
        gbc.writeMem(0xc4d9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9a22, gbc.sp());
        EXPECT(0xc4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4d9));
        EXPECT(0x72, gbc.readMem(0xc4da));
        // CB 72 0390
        gbc.setState(0xe954, 0x4c51, 0xe180, 0x991b, 0x153e, 0xa546, 0x1, 0x0);
        gbc.writeMem(0xe954, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4c51, gbc.sp());
        EXPECT(0xe956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe954));
        EXPECT(0x72, gbc.readMem(0xe955));
        // CB 72 0392
        gbc.setState(0x6206, 0xdb98, 0x2430, 0x6ac3, 0x6028, 0x7a1a, 0x1, 0x0);
        gbc.writeMem(0x6206, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xdb98, gbc.sp());
        EXPECT(0x6208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0393
        gbc.setState(0x11a8, 0x94cb, 0xe250, 0x1108, 0xb021, 0xbc9b, 0x1, 0x0);
        gbc.writeMem(0x11a8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x94cb, gbc.sp());
        EXPECT(0x11aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0394
        gbc.setState(0x78f3, 0x1549, 0x7b10, 0xd5a9, 0x295, 0xa0bd, 0x1, 0x1);
        gbc.writeMem(0x78f3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1549, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0395
        gbc.setState(0xa5b, 0xfa5a, 0x4590, 0xc6ef, 0x203b, 0x95af, 0x1, 0x0);
        gbc.writeMem(0xa5b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0xa5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0396
        gbc.setState(0x4236, 0x221, 0x3850, 0xc76a, 0x9b62, 0x50b6, 0x0, 0x0);
        gbc.writeMem(0x4236, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x221, gbc.sp());
        EXPECT(0x4238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 0397
        gbc.setState(0xe9b1, 0xb887, 0x6930, 0x39e8, 0x3dc3, 0x65ec, 0x1, 0x1);
        gbc.writeMem(0xe9b1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xb887, gbc.sp());
        EXPECT(0xe9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9b1));
        EXPECT(0x72, gbc.readMem(0xe9b2));
        // CB 72 0398
        gbc.setState(0x8729, 0x6808, 0xdd40, 0x8fbf, 0xf4df, 0xf681, 0x1, 0x0);
        gbc.writeMem(0x8729, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6808, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8729));
        EXPECT(0x72, gbc.readMem(0x872a));
        // CB 72 0399
        gbc.setState(0xabf5, 0xee6a, 0x6060, 0xb2a0, 0x2082, 0xe1e0, 0x0, 0x1);
        gbc.writeMem(0xabf5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xee6a, gbc.sp());
        EXPECT(0xabf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf5));
        EXPECT(0x72, gbc.readMem(0xabf6));
        // CB 72 039A
        gbc.setState(0x2ffb, 0x9bdd, 0xaed0, 0x832a, 0xdf33, 0xd31a, 0x0, 0x1);
        gbc.writeMem(0x2ffb, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9bdd, gbc.sp());
        EXPECT(0x2ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 039B
        gbc.setState(0xe4a4, 0x4f71, 0x8a70, 0x9014, 0xd2eb, 0x7a48, 0x1, 0x0);
        gbc.writeMem(0xe4a4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4f71, gbc.sp());
        EXPECT(0xe4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a4));
        EXPECT(0x72, gbc.readMem(0xe4a5));
        // CB 72 039C
        gbc.setState(0xce77, 0xe724, 0x63f0, 0xbcf1, 0xb55e, 0x4d4f, 0x0, 0x1);
        gbc.writeMem(0xce77, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe724, gbc.sp());
        EXPECT(0xce79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce77));
        EXPECT(0x72, gbc.readMem(0xce78));
        // CB 72 039D
        gbc.setState(0xea85, 0x972c, 0xe620, 0x4fcb, 0x54b5, 0xab72, 0x1, 0x1);
        gbc.writeMem(0xea85, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x972c, gbc.sp());
        EXPECT(0xea87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea85));
        EXPECT(0x72, gbc.readMem(0xea86));
        // CB 72 039E
        gbc.setState(0x289f, 0xc95e, 0x1690, 0xf7fb, 0xbadc, 0x3c9a, 0x1, 0x0);
        gbc.writeMem(0x289f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc95e, gbc.sp());
        EXPECT(0x28a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 039F
        gbc.setState(0xbd07, 0xa19, 0xfa40, 0xc58f, 0xa788, 0x761e, 0x0, 0x0);
        gbc.writeMem(0xbd07, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa19, gbc.sp());
        EXPECT(0xbd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd07));
        EXPECT(0x72, gbc.readMem(0xbd08));
        // CB 72 03A0
        gbc.setState(0x4089, 0x9a5a, 0x43b0, 0xa9b, 0x81ca, 0x1693, 0x0, 0x1);
        gbc.writeMem(0x4089, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9a5a, gbc.sp());
        EXPECT(0x408b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03A1
        gbc.setState(0xb6e1, 0x1220, 0x67a0, 0x8005, 0x9f01, 0xb979, 0x0, 0x1);
        gbc.writeMem(0xb6e1, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1220, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x72, gbc.readMem(0xb6e2));
        // CB 72 03A2
        gbc.setState(0x21cc, 0xf45f, 0x6900, 0xc004, 0x32b1, 0xb803, 0x0, 0x1);
        gbc.writeMem(0x21cc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf45f, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03A3
        gbc.setState(0x9697, 0xab60, 0xa420, 0xd6df, 0x12b, 0x297b, 0x1, 0x0);
        gbc.writeMem(0x9697, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xab60, gbc.sp());
        EXPECT(0x9699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9697));
        EXPECT(0x72, gbc.readMem(0x9698));
        // CB 72 03A4
        gbc.setState(0x4273, 0x1f8c, 0x6f10, 0x93b3, 0x8b3, 0x39ac, 0x0, 0x0);
        gbc.writeMem(0x4273, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x4275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03A5
        gbc.setState(0x38d, 0x367, 0xde30, 0xad78, 0x93a, 0xc9bd, 0x0, 0x0);
        gbc.writeMem(0x38d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0x38f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03A6
        gbc.setState(0x3d05, 0xbe29, 0xcf40, 0x6c79, 0xbc95, 0xd0a9, 0x0, 0x1);
        gbc.writeMem(0x3d05, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0x3d07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03A7
        gbc.setState(0x8e21, 0x8868, 0x2c10, 0x9100, 0x51e9, 0xda3a, 0x1, 0x0);
        gbc.writeMem(0x8e21, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8868, gbc.sp());
        EXPECT(0x8e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e21));
        EXPECT(0x72, gbc.readMem(0x8e22));
        // CB 72 03A8
        gbc.setState(0x308f, 0xc265, 0x7f0, 0x7899, 0x393b, 0x1ed0, 0x1, 0x0);
        gbc.writeMem(0x308f, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xc265, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03A9
        gbc.setState(0xebea, 0xae09, 0xf9d0, 0xde21, 0x2f96, 0x8e91, 0x0, 0x0);
        gbc.writeMem(0xebea, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xae09, gbc.sp());
        EXPECT(0xebec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebea));
        EXPECT(0x72, gbc.readMem(0xebeb));
        // CB 72 03AA
        gbc.setState(0x13bc, 0x75ad, 0x9ec0, 0xe5fa, 0xc687, 0xe436, 0x0, 0x1);
        gbc.writeMem(0x13bc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x75ad, gbc.sp());
        EXPECT(0x13be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03AB
        gbc.setState(0x4d3e, 0x3840, 0x5260, 0x570c, 0xa992, 0xcd36, 0x1, 0x1);
        gbc.writeMem(0x4d3e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3840, gbc.sp());
        EXPECT(0x4d40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03AC
        gbc.setState(0xe4aa, 0xa89, 0x14c0, 0x9f6a, 0x4578, 0x8edd, 0x1, 0x0);
        gbc.writeMem(0xe4aa, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0xe4ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4aa));
        EXPECT(0x72, gbc.readMem(0xe4ab));
        // CB 72 03AE
        gbc.setState(0x7bab, 0xe004, 0xed50, 0xca91, 0xb381, 0xfc47, 0x1, 0x1);
        gbc.writeMem(0x7bab, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe004, gbc.sp());
        EXPECT(0x7bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03AF
        gbc.setState(0x5565, 0xb5da, 0x8660, 0x2dc0, 0x4710, 0x300f, 0x1, 0x0);
        gbc.writeMem(0x5565, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb5da, gbc.sp());
        EXPECT(0x5567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03B0
        gbc.setState(0x6232, 0xda84, 0x1a40, 0x6309, 0x769f, 0x340e, 0x0, 0x0);
        gbc.writeMem(0x6232, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xda84, gbc.sp());
        EXPECT(0x6234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03B1
        gbc.setState(0x80a0, 0xb31b, 0xa280, 0xfca9, 0x48da, 0x8ba0, 0x1, 0x1);
        gbc.writeMem(0x80a0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb31b, gbc.sp());
        EXPECT(0x80a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a0));
        EXPECT(0x72, gbc.readMem(0x80a1));
        // CB 72 03B2
        gbc.setState(0x5f51, 0xc47d, 0xe030, 0x9c87, 0xc568, 0x2511, 0x1, 0x0);
        gbc.writeMem(0x5f51, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc47d, gbc.sp());
        EXPECT(0x5f53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03B3
        gbc.setState(0xd00d, 0x9240, 0xdee0, 0x76fd, 0xdf0f, 0x45c7, 0x0, 0x1);
        gbc.writeMem(0xd00d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9240, gbc.sp());
        EXPECT(0xd00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00d));
        EXPECT(0x72, gbc.readMem(0xd00e));
        // CB 72 03B4
        gbc.setState(0x8ccc, 0x5f77, 0x96e0, 0xf426, 0xa8f3, 0xa3d, 0x0, 0x0);
        gbc.writeMem(0x8ccc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5f77, gbc.sp());
        EXPECT(0x8cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ccc));
        EXPECT(0x72, gbc.readMem(0x8ccd));
        // CB 72 03B5
        gbc.setState(0x922e, 0x2504, 0xc690, 0x2b63, 0x6ae0, 0xdb9d, 0x0, 0x1);
        gbc.writeMem(0x922e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2504, gbc.sp());
        EXPECT(0x9230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922e));
        EXPECT(0x72, gbc.readMem(0x922f));
        // CB 72 03B6
        gbc.setState(0x3ecd, 0x8770, 0x5350, 0x1882, 0x6529, 0x1b6b, 0x1, 0x1);
        gbc.writeMem(0x3ecd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8770, gbc.sp());
        EXPECT(0x3ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03B9
        gbc.setState(0x8ab, 0xa200, 0x40b0, 0xf9b0, 0x5933, 0xf9d1, 0x0, 0x0);
        gbc.writeMem(0x8ab, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa200, gbc.sp());
        EXPECT(0x8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03BA
        gbc.setState(0x4752, 0x5693, 0x57e0, 0xc9a0, 0x336c, 0x1e50, 0x0, 0x1);
        gbc.writeMem(0x4752, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0x4754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03BB
        gbc.setState(0x9d78, 0xebc8, 0xda80, 0xddbb, 0x6444, 0xea48, 0x1, 0x0);
        gbc.writeMem(0x9d78, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xebc8, gbc.sp());
        EXPECT(0x9d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d78));
        EXPECT(0x72, gbc.readMem(0x9d79));
        // CB 72 03BC
        gbc.setState(0x5421, 0x984d, 0xb3a0, 0x9ee9, 0xd384, 0x77b3, 0x1, 0x1);
        gbc.writeMem(0x5421, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x984d, gbc.sp());
        EXPECT(0x5423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03BD
        gbc.setState(0x47f6, 0x23fc, 0xfbf0, 0x334c, 0x94f8, 0x22d7, 0x1, 0x1);
        gbc.writeMem(0x47f6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x23fc, gbc.sp());
        EXPECT(0x47f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03BE
        gbc.setState(0x9165, 0xb32e, 0x3410, 0x547a, 0xea08, 0x278c, 0x1, 0x0);
        gbc.writeMem(0x9165, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb32e, gbc.sp());
        EXPECT(0x9167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9165));
        EXPECT(0x72, gbc.readMem(0x9166));
        // CB 72 03C0
        gbc.setState(0x7d08, 0x2b74, 0xc400, 0x4849, 0x87fb, 0x2e94, 0x0, 0x1);
        gbc.writeMem(0x7d08, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x2b74, gbc.sp());
        EXPECT(0x7d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03C2
        gbc.setState(0x7ff, 0x4219, 0x1470, 0xddd5, 0x1cf0, 0x67c8, 0x0, 0x1);
        gbc.writeMem(0x7ff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x4219, gbc.sp());
        EXPECT(0x801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03C3
        gbc.setState(0x56f3, 0x869a, 0xef10, 0x3201, 0x5c95, 0xacb4, 0x0, 0x1);
        gbc.writeMem(0x56f3, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x869a, gbc.sp());
        EXPECT(0x56f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03C4
        gbc.setState(0x6872, 0xcf0b, 0xef80, 0x9762, 0x91b9, 0x80a1, 0x0, 0x0);
        gbc.writeMem(0x6872, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcf0b, gbc.sp());
        EXPECT(0x6874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03C5
        gbc.setState(0x41c4, 0x3cbf, 0xc5a0, 0x34ae, 0x11f9, 0x37f2, 0x1, 0x0);
        gbc.writeMem(0x41c4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x41c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03C6
        gbc.setState(0xd14a, 0xbac9, 0x9f90, 0xf65b, 0x130, 0xc039, 0x1, 0x0);
        gbc.writeMem(0xd14a, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbac9, gbc.sp());
        EXPECT(0xd14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd14a));
        EXPECT(0x72, gbc.readMem(0xd14b));
        // CB 72 03C7
        gbc.setState(0xbf51, 0x7700, 0xadb0, 0x7d92, 0x7829, 0x5a9a, 0x0, 0x0);
        gbc.writeMem(0xbf51, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7700, gbc.sp());
        EXPECT(0xbf53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf51));
        EXPECT(0x72, gbc.readMem(0xbf52));
        // CB 72 03C8
        gbc.setState(0xad22, 0xfa07, 0x9cd0, 0xa587, 0xe5c2, 0xf43c, 0x0, 0x1);
        gbc.writeMem(0xad22, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfa07, gbc.sp());
        EXPECT(0xad24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad22));
        EXPECT(0x72, gbc.readMem(0xad23));
        // CB 72 03C9
        gbc.setState(0x1dc9, 0xbcc5, 0xddc0, 0x55ec, 0xd1f4, 0xe5d0, 0x1, 0x0);
        gbc.writeMem(0x1dc9, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbcc5, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03CB
        gbc.setState(0x69e6, 0x2244, 0x910, 0x132, 0x53c6, 0x26c9, 0x0, 0x0);
        gbc.writeMem(0x69e6, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2244, gbc.sp());
        EXPECT(0x69e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03CE
        gbc.setState(0xb615, 0x21d9, 0x9eb0, 0xd3d4, 0x4f02, 0x89, 0x0, 0x0);
        gbc.writeMem(0xb615, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x21d9, gbc.sp());
        EXPECT(0xb617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb615));
        EXPECT(0x72, gbc.readMem(0xb616));
        // CB 72 03CF
        gbc.setState(0x9c07, 0x4f73, 0x9230, 0x12b5, 0xc3fc, 0x361b, 0x0, 0x0);
        gbc.writeMem(0x9c07, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4f73, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c07));
        EXPECT(0x72, gbc.readMem(0x9c08));
        // CB 72 03D0
        gbc.setState(0xde1b, 0x89c3, 0x4d40, 0x9e08, 0x5d33, 0x6b13, 0x0, 0x1);
        gbc.writeMem(0xde1b, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x89c3, gbc.sp());
        EXPECT(0xde1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde1b));
        EXPECT(0x72, gbc.readMem(0xde1c));
        // CB 72 03D1
        gbc.setState(0xb338, 0xf22e, 0x3e0, 0x5630, 0xdec0, 0x89ac, 0x1, 0x0);
        gbc.writeMem(0xb338, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf22e, gbc.sp());
        EXPECT(0xb33a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb338));
        EXPECT(0x72, gbc.readMem(0xb339));
        // CB 72 03D2
        gbc.setState(0x86d5, 0xebb5, 0x6ba0, 0xe9df, 0xf95b, 0xf7f2, 0x0, 0x0);
        gbc.writeMem(0x86d5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0x86d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86d5));
        EXPECT(0x72, gbc.readMem(0x86d6));
        // CB 72 03D3
        gbc.setState(0xa4b5, 0x576, 0x6af0, 0x58bf, 0xf5cf, 0x99ef, 0x0, 0x0);
        gbc.writeMem(0xa4b5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b5));
        EXPECT(0x72, gbc.readMem(0xa4b6));
        // CB 72 03D4
        gbc.setState(0x6bee, 0x5375, 0x75e0, 0x3f09, 0x5429, 0x43cc, 0x1, 0x0);
        gbc.writeMem(0x6bee, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5375, gbc.sp());
        EXPECT(0x6bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03D5
        gbc.setState(0xcf13, 0xccd6, 0xc360, 0xad14, 0xec2d, 0x7456, 0x1, 0x1);
        gbc.writeMem(0xcf13, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xccd6, gbc.sp());
        EXPECT(0xcf15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf13));
        EXPECT(0x72, gbc.readMem(0xcf14));
        // CB 72 03D6
        gbc.setState(0x1078, 0xe132, 0x1fd0, 0x165, 0xae95, 0xc306, 0x1, 0x1);
        gbc.writeMem(0x1078, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0x107a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03D7
        gbc.setState(0x134, 0x67cd, 0xea40, 0xca8e, 0xfcf4, 0xdee6, 0x0, 0x0);
        gbc.writeMem(0x134, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x67cd, gbc.sp());
        EXPECT(0x136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03D8
        gbc.setState(0xa2a4, 0xa5c6, 0x5420, 0xe125, 0x89b6, 0x34db, 0x1, 0x0);
        gbc.writeMem(0xa2a4, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa5c6, gbc.sp());
        EXPECT(0xa2a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2a4));
        EXPECT(0x72, gbc.readMem(0xa2a5));
        // CB 72 03DA
        gbc.setState(0x9573, 0x908b, 0x9780, 0xc559, 0xcbc, 0x8585, 0x1, 0x0);
        gbc.writeMem(0x9573, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x9575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9573));
        EXPECT(0x72, gbc.readMem(0x9574));
        // CB 72 03DB
        gbc.setState(0xe5ac, 0x305, 0x8a80, 0x628f, 0x11f2, 0x5210, 0x0, 0x1);
        gbc.writeMem(0xe5ac, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x305, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0x72, gbc.readMem(0xe5ad));
        // CB 72 03DC
        gbc.setState(0xecd0, 0x437d, 0x5880, 0x54e9, 0x355d, 0xca08, 0x1, 0x0);
        gbc.writeMem(0xecd0, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x437d, gbc.sp());
        EXPECT(0xecd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd0));
        EXPECT(0x72, gbc.readMem(0xecd1));
        // CB 72 03DD
        gbc.setState(0x7f6e, 0xf910, 0x41c0, 0x1842, 0xe99c, 0xc0b7, 0x0, 0x1);
        gbc.writeMem(0x7f6e, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xf910, gbc.sp());
        EXPECT(0x7f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03DE
        gbc.setState(0x3db2, 0x677b, 0xca20, 0x6486, 0xe32f, 0x56c0, 0x0, 0x0);
        gbc.writeMem(0x3db2, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x677b, gbc.sp());
        EXPECT(0x3db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03DF
        gbc.setState(0xd6f8, 0x54f, 0xc140, 0x10a1, 0x8b8e, 0x45fc, 0x0, 0x0);
        gbc.writeMem(0xd6f8, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x54f, gbc.sp());
        EXPECT(0xd6fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f8));
        EXPECT(0x72, gbc.readMem(0xd6f9));
        // CB 72 03E0
        gbc.setState(0x1024, 0xe759, 0xdf80, 0x8e60, 0xf3a9, 0x41a9, 0x1, 0x1);
        gbc.writeMem(0x1024, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe759, gbc.sp());
        EXPECT(0x1026, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03E1
        gbc.setState(0x530d, 0x936e, 0x3ab0, 0x78e5, 0x3b95, 0x7aba, 0x0, 0x0);
        gbc.writeMem(0x530d, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x936e, gbc.sp());
        EXPECT(0x530f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 72 03E2
        gbc.setState(0xe9c5, 0x3733, 0x1d60, 0x403f, 0xeb69, 0xc8f1, 0x0, 0x1);
        gbc.writeMem(0xe9c5, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3733, gbc.sp());
        EXPECT(0xe9c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c5));
        EXPECT(0x72, gbc.readMem(0xe9c6));
        // CB 72 03E3
        gbc.setState(0x23ff, 0xae6b, 0x8de0, 0x197c, 0xa4a2, 0xc2ca, 0x0, 0x1);
        gbc.writeMem(0x23ff, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xae6b, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03E4
        gbc.setState(0x75cd, 0xd904, 0xa2e0, 0xf849, 0xf9e3, 0x7480, 0x0, 0x1);
        gbc.writeMem(0x75cd, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd904, gbc.sp());
        EXPECT(0x75cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03E5
        gbc.setState(0x79d7, 0x434d, 0xe780, 0xb068, 0x49dd, 0x9bf3, 0x0, 0x0);
        gbc.writeMem(0x79d7, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x434d, gbc.sp());
        EXPECT(0x79d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03E6
        gbc.setState(0x7fc, 0x6f51, 0xab80, 0x6bf6, 0x33b2, 0xf23, 0x0, 0x0);
        gbc.writeMem(0x7fc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x7fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 72 03E7
        gbc.setState(0x46bc, 0xf7ad, 0xe420, 0x5298, 0xb7eb, 0x195e, 0x0, 0x0);
        gbc.writeMem(0x46bc, { 0xcb, 0x72 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xf7ad, gbc.sp());
        EXPECT(0x46be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
