    TEST(gbcemu, opcode_a7) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // A7 0000
        gbc.setState(0x1a7d, 0x96a9, 0x10, 0x2fe0, 0x389c, 0x75fc, 0x1, 0x1);
        gbc.writeMem(0x1a7d, { 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x96a9, gbc.sp());
        EXPECT(0x1a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0001
        gbc.setState(0x67ef, 0x741c, 0x8320, 0x18ee, 0xdd9f, 0x9d73, 0x0, 0x0);
        gbc.writeMem(0x67ef, { 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x741c, gbc.sp());
        EXPECT(0x67f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0002
        gbc.setState(0x1d7b, 0xad6d, 0xbe90, 0x9f66, 0x1a15, 0x79e9, 0x0, 0x1);
        gbc.writeMem(0x1d7b, { 0xa7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xad6d, gbc.sp());
        EXPECT(0x1d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0003
        gbc.setState(0xbc8, 0xc4cb, 0x4090, 0x5fad, 0x5fca, 0x3267, 0x0, 0x1);
        gbc.writeMem(0xbc8, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xc4cb, gbc.sp());
        EXPECT(0xbc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0004
        gbc.setState(0x3260, 0xf211, 0x41c0, 0xf6a3, 0x3444, 0xee5b, 0x0, 0x1);
        gbc.writeMem(0x3260, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf211, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0005
        gbc.setState(0xd08, 0xce4f, 0x4eb0, 0xd06c, 0xed4, 0xc3bf, 0x1, 0x0);
        gbc.writeMem(0xd08, { 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0xd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0006
        gbc.setState(0x104e, 0xee6e, 0x92d0, 0x8043, 0x9d8f, 0xfe20, 0x1, 0x1);
        gbc.writeMem(0x104e, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xee6e, gbc.sp());
        EXPECT(0x104f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0007
        gbc.setState(0x18d1, 0x60ac, 0xf5a0, 0x1d43, 0xab8a, 0x9dcb, 0x0, 0x0);
        gbc.writeMem(0x18d1, { 0xa7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x60ac, gbc.sp());
        EXPECT(0x18d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0008
        gbc.setState(0x7116, 0x8634, 0x3670, 0xb3e5, 0x889, 0xdee, 0x1, 0x0);
        gbc.writeMem(0x7116, { 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8634, gbc.sp());
        EXPECT(0x7117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 000A
        gbc.setState(0x1bd1, 0x3eac, 0xeec0, 0x7e7e, 0x55c1, 0xbc93, 0x1, 0x0);
        gbc.writeMem(0x1bd1, { 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3eac, gbc.sp());
        EXPECT(0x1bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 000B
        gbc.setState(0x7c8e, 0x6e35, 0xbbd0, 0xeabd, 0xf390, 0x366a, 0x1, 0x1);
        gbc.writeMem(0x7c8e, { 0xa7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6e35, gbc.sp());
        EXPECT(0x7c8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 000C
        gbc.setState(0x1050, 0x2a91, 0xafd0, 0x2b04, 0xd5db, 0x3496, 0x1, 0x1);
        gbc.writeMem(0x1050, { 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x2a91, gbc.sp());
        EXPECT(0x1051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 000E
        gbc.setState(0xdcf0, 0x3c86, 0x61e0, 0x3b42, 0x418c, 0x4f26, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3c86, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdcf0));
        // A7 000F
        gbc.setState(0x1178, 0x1dee, 0xb0d0, 0x7f50, 0x566b, 0xd03d, 0x1, 0x1);
        gbc.writeMem(0x1178, { 0xa7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0x1179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0010
        gbc.setState(0xdce1, 0x8a2d, 0x9920, 0x6cfd, 0x96ef, 0x1452, 0x0, 0x0);
        gbc.writeMem(0xdce1, { 0xa7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8a2d, gbc.sp());
        EXPECT(0xdce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdce1));
        // A7 0011
        gbc.setState(0x29cc, 0xf008, 0xe240, 0x452a, 0xd3c5, 0x67ee, 0x1, 0x0);
        gbc.writeMem(0x29cc, { 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf008, gbc.sp());
        EXPECT(0x29cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0012
        gbc.setState(0x6623, 0x23f7, 0x7530, 0x656a, 0xd748, 0x23de, 0x1, 0x1);
        gbc.writeMem(0x6623, { 0xa7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x23f7, gbc.sp());
        EXPECT(0x6624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0013
        gbc.setState(0x47c5, 0xda97, 0x9fa0, 0x1665, 0x5a9f, 0xc80d, 0x1, 0x1);
        gbc.writeMem(0x47c5, { 0xa7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x47c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0014
        gbc.setState(0x1c84, 0xa447, 0x2b50, 0x1a8b, 0x4003, 0xc07b, 0x0, 0x1);
        gbc.writeMem(0x1c84, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x1c85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0015
        gbc.setState(0x4d7e, 0x75a9, 0xa530, 0x3eda, 0x1456, 0x6215, 0x1, 0x1);
        gbc.writeMem(0x4d7e, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x75a9, gbc.sp());
        EXPECT(0x4d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0016
        gbc.setState(0xe6a, 0xa362, 0xe2e0, 0xeeae, 0xd7c, 0xedf3, 0x0, 0x0);
        gbc.writeMem(0xe6a, { 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa362, gbc.sp());
        EXPECT(0xe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0017
        gbc.setState(0x7eaa, 0x2598, 0x9fc0, 0xfb04, 0x7df3, 0x8ceb, 0x1, 0x1);
        gbc.writeMem(0x7eaa, { 0xa7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2598, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0018
        gbc.setState(0xb57c, 0x3487, 0xb3e0, 0xfb32, 0x54ee, 0xbe4e, 0x1, 0x1);
        gbc.writeMem(0xb57c, { 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3487, gbc.sp());
        EXPECT(0xb57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb57c));
        // A7 0019
        gbc.setState(0x15ce, 0x9c8f, 0xdc10, 0x2284, 0x1b88, 0x7b40, 0x0, 0x1);
        gbc.writeMem(0x15ce, { 0xa7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9c8f, gbc.sp());
        EXPECT(0x15cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 001A
        gbc.setState(0xde70, 0x9473, 0xdee0, 0x362a, 0x107d, 0x2971, 0x1, 0x1);
        gbc.writeMem(0xde70, { 0xa7 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9473, gbc.sp());
        EXPECT(0xde71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xde70));
        // A7 001B
        gbc.setState(0x7b4, 0xf316, 0x5c10, 0xfed0, 0x8f3e, 0x931f, 0x1, 0x0);
        gbc.writeMem(0x7b4, { 0xa7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0x7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 001C
        gbc.setState(0x4595, 0x1dfe, 0xdae0, 0x18cb, 0x4d9d, 0x8e38, 0x1, 0x1);
        gbc.writeMem(0x4595, { 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x1dfe, gbc.sp());
        EXPECT(0x4596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 001D
        gbc.setState(0x971a, 0x41cd, 0x67b0, 0xacd1, 0x10bc, 0xf6d6, 0x0, 0x1);
        gbc.writeMem(0x971a, { 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x41cd, gbc.sp());
        EXPECT(0x971b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x971a));
        // A7 001E
        gbc.setState(0x6a54, 0x8f3f, 0xe4a0, 0xe37c, 0xcfbc, 0x2c6e, 0x1, 0x0);
        gbc.writeMem(0x6a54, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8f3f, gbc.sp());
        EXPECT(0x6a55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 001F
        gbc.setState(0x43b2, 0x8ba7, 0x9ca0, 0x356, 0xe556, 0xc436, 0x1, 0x1);
        gbc.writeMem(0x43b2, { 0xa7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8ba7, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0020
        gbc.setState(0xab5f, 0x6909, 0xe630, 0x7400, 0x6c29, 0x760c, 0x1, 0x1);
        gbc.writeMem(0xab5f, { 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6909, gbc.sp());
        EXPECT(0xab60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xab5f));
        // A7 0021
        gbc.setState(0x24a1, 0x9fac, 0xf010, 0x9823, 0x5e10, 0x681a, 0x1, 0x0);
        gbc.writeMem(0x24a1, { 0xa7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9fac, gbc.sp());
        EXPECT(0x24a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0022
        gbc.setState(0x309c, 0xbe54, 0x9ef0, 0x9c33, 0x28e3, 0xf2f6, 0x0, 0x0);
        gbc.writeMem(0x309c, { 0xa7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbe54, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0023
        gbc.setState(0xbabc, 0xe458, 0x5020, 0x383b, 0x8869, 0xecdf, 0x1, 0x0);
        gbc.writeMem(0xbabc, { 0xa7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe458, gbc.sp());
        EXPECT(0xbabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbabc));
        // A7 0024
        gbc.setState(0x905e, 0x3834, 0xeaf0, 0x7140, 0xf07c, 0xcd19, 0x1, 0x1);
        gbc.writeMem(0x905e, { 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3834, gbc.sp());
        EXPECT(0x905f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x905e));
        // A7 0025
        gbc.setState(0xa5fe, 0xe271, 0x62a0, 0xe97c, 0xb7a3, 0x2e8d, 0x1, 0x0);
        gbc.writeMem(0xa5fe, { 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0xa5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa5fe));
        // A7 0026
        gbc.setState(0x5f2c, 0x6295, 0x2580, 0x9780, 0xb893, 0x7749, 0x1, 0x0);
        gbc.writeMem(0x5f2c, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x6295, gbc.sp());
        EXPECT(0x5f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0027
        gbc.setState(0xc53, 0x595a, 0xcc40, 0x544b, 0x1361, 0xe6b5, 0x0, 0x1);
        gbc.writeMem(0xc53, { 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x595a, gbc.sp());
        EXPECT(0xc54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0028
        gbc.setState(0xe17, 0x33a6, 0xbef0, 0x3da6, 0x448, 0xdfd1, 0x0, 0x1);
        gbc.writeMem(0xe17, { 0xa7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x33a6, gbc.sp());
        EXPECT(0xe18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 002A
        gbc.setState(0xe7f8, 0xa435, 0x1da0, 0x96fa, 0x82d3, 0x70e, 0x0, 0x0);
        gbc.writeMem(0xe7f8, { 0xa7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa435, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7f8));
        // A7 002B
        gbc.setState(0x3b0d, 0xb97a, 0x57c0, 0x58be, 0x881, 0x18a2, 0x1, 0x1);
        gbc.writeMem(0x3b0d, { 0xa7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb97a, gbc.sp());
        EXPECT(0x3b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 002C
        gbc.setState(0x3c73, 0xae1a, 0x6920, 0x62ae, 0xadee, 0xb1c4, 0x1, 0x1);
        gbc.writeMem(0x3c73, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xae1a, gbc.sp());
        EXPECT(0x3c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 002D
        gbc.setState(0x54eb, 0xa97d, 0x8c0, 0xf848, 0x236e, 0xbb02, 0x1, 0x0);
        gbc.writeMem(0x54eb, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa97d, gbc.sp());
        EXPECT(0x54ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 002E
        gbc.setState(0xb870, 0xa56f, 0x5fd0, 0x13e7, 0xbede, 0xfcd3, 0x1, 0x0);
        gbc.writeMem(0xb870, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa56f, gbc.sp());
        EXPECT(0xb871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb870));
        // A7 002F
        gbc.setState(0x696b, 0x2325, 0x6bd0, 0x1e4e, 0x4fbc, 0x15d2, 0x1, 0x1);
        gbc.writeMem(0x696b, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2325, gbc.sp());
        EXPECT(0x696c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0030
        gbc.setState(0x62d9, 0x6a21, 0x2b60, 0xa282, 0xe474, 0x29e7, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6a21, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0031
        gbc.setState(0x7818, 0x1cb4, 0x7c0, 0xf524, 0xfc9f, 0x3913, 0x0, 0x1);
        gbc.writeMem(0x7818, { 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1cb4, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0033
        gbc.setState(0xb35a, 0xef4f, 0x6e00, 0xc24a, 0x41b, 0x4a2a, 0x0, 0x1);
        gbc.writeMem(0xb35a, { 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xef4f, gbc.sp());
        EXPECT(0xb35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb35a));
        // A7 0034
        gbc.setState(0x59e5, 0xf9cc, 0x1eb0, 0xa88f, 0xfa33, 0xd715, 0x0, 0x1);
        gbc.writeMem(0x59e5, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf9cc, gbc.sp());
        EXPECT(0x59e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0036
        gbc.setState(0x28f6, 0xdfbe, 0xc6c0, 0xe568, 0x69cc, 0xd291, 0x0, 0x1);
        gbc.writeMem(0x28f6, { 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdfbe, gbc.sp());
        EXPECT(0x28f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0037
        gbc.setState(0x790d, 0xb6d0, 0x6bd0, 0xaf3c, 0x5756, 0xbe95, 0x0, 0x1);
        gbc.writeMem(0x790d, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb6d0, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0038
        gbc.setState(0x28ef, 0x7884, 0x1790, 0x3a9, 0xfb9d, 0xcf25, 0x0, 0x0);
        gbc.writeMem(0x28ef, { 0xa7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7884, gbc.sp());
        EXPECT(0x28f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0039
        gbc.setState(0x3ad1, 0x5796, 0xbb00, 0x6490, 0xfd9d, 0x7ce4, 0x1, 0x1);
        gbc.writeMem(0x3ad1, { 0xa7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5796, gbc.sp());
        EXPECT(0x3ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 003A
        gbc.setState(0xc932, 0x9a34, 0x8440, 0x67a1, 0x3c64, 0x759c, 0x1, 0x1);
        gbc.writeMem(0xc932, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0xc933, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc932));
        // A7 003B
        gbc.setState(0xa88a, 0xad82, 0xf180, 0xb84a, 0xdc18, 0x3c0, 0x0, 0x1);
        gbc.writeMem(0xa88a, { 0xa7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xad82, gbc.sp());
        EXPECT(0xa88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa88a));
        // A7 003C
        gbc.setState(0x2c53, 0xe718, 0x9d20, 0x9fec, 0xfe06, 0xe22c, 0x0, 0x1);
        gbc.writeMem(0x2c53, { 0xa7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe718, gbc.sp());
        EXPECT(0x2c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 003D
        gbc.setState(0xb476, 0x37c7, 0x5f90, 0xc100, 0x7099, 0x8c7a, 0x1, 0x0);
        gbc.writeMem(0xb476, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0xb477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb476));
        // A7 003E
        gbc.setState(0x118a, 0x3524, 0x40d0, 0x3fb1, 0x7b71, 0xb56c, 0x1, 0x0);
        gbc.writeMem(0x118a, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x118b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0040
        gbc.setState(0x7460, 0x4ec0, 0x6950, 0x8650, 0xb514, 0x5934, 0x0, 0x1);
        gbc.writeMem(0x7460, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4ec0, gbc.sp());
        EXPECT(0x7461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0041
        gbc.setState(0x9f36, 0x75e4, 0x2570, 0xd43, 0xc3a6, 0xea7c, 0x0, 0x0);
        gbc.writeMem(0x9f36, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x75e4, gbc.sp());
        EXPECT(0x9f37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9f36));
        // A7 0042
        gbc.setState(0xa0d8, 0x32de, 0x45e0, 0x8bc3, 0xdf0a, 0x2c05, 0x0, 0x0);
        gbc.writeMem(0xa0d8, { 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x32de, gbc.sp());
        EXPECT(0xa0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa0d8));
        // A7 0043
        gbc.setState(0x334e, 0xa8e1, 0xbd50, 0xde38, 0x11ff, 0x4ed5, 0x0, 0x1);
        gbc.writeMem(0x334e, { 0xa7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa8e1, gbc.sp());
        EXPECT(0x334f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0044
        gbc.setState(0x8a0f, 0x3e84, 0x12c0, 0xb527, 0xb975, 0x3712, 0x0, 0x0);
        gbc.writeMem(0x8a0f, { 0xa7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x3e84, gbc.sp());
        EXPECT(0x8a10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8a0f));
        // A7 0046
        gbc.setState(0x1317, 0xd6a8, 0xfe40, 0x207f, 0x715b, 0x9452, 0x0, 0x1);
        gbc.writeMem(0x1317, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0047
        gbc.setState(0x1657, 0x583e, 0x9680, 0x2c1b, 0xa6c3, 0x7260, 0x1, 0x0);
        gbc.writeMem(0x1657, { 0xa7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x583e, gbc.sp());
        EXPECT(0x1658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0048
        gbc.setState(0x6d3c, 0xbd04, 0xe960, 0xb13d, 0x8269, 0xd962, 0x1, 0x0);
        gbc.writeMem(0x6d3c, { 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbd04, gbc.sp());
        EXPECT(0x6d3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0049
        gbc.setState(0xd0e3, 0x9ad2, 0xe2a0, 0x54f2, 0x5bba, 0x3394, 0x1, 0x0);
        gbc.writeMem(0xd0e3, { 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0xd0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd0e3));
        // A7 004A
        gbc.setState(0x7df8, 0x3a92, 0xc840, 0xa31, 0xc417, 0x7052, 0x1, 0x1);
        gbc.writeMem(0x7df8, { 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3a92, gbc.sp());
        EXPECT(0x7df9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 004B
        gbc.setState(0xbf28, 0x8006, 0xe80, 0xbdf4, 0x9813, 0x2c29, 0x0, 0x0);
        gbc.writeMem(0xbf28, { 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8006, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf28));
        // A7 004C
        gbc.setState(0xa0e, 0xb523, 0xbc90, 0x62e0, 0x696d, 0x9f8, 0x1, 0x1);
        gbc.writeMem(0xa0e, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb523, gbc.sp());
        EXPECT(0xa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 004D
        gbc.setState(0x6bfe, 0x3319, 0xa6e0, 0x7ed9, 0x3fbd, 0x229a, 0x0, 0x1);
        gbc.writeMem(0x6bfe, { 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3319, gbc.sp());
        EXPECT(0x6bff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 004E
        gbc.setState(0xea9a, 0xf30c, 0x98d0, 0xf6e4, 0x93a8, 0xb184, 0x0, 0x0);
        gbc.writeMem(0xea9a, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf30c, gbc.sp());
        EXPECT(0xea9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xea9a));
        // A7 004F
        gbc.setState(0x1d1, 0x620d, 0x24e0, 0x5532, 0xe62c, 0x2f47, 0x1, 0x0);
        gbc.writeMem(0x1d1, { 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x620d, gbc.sp());
        EXPECT(0x1d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0050
        gbc.setState(0x1310, 0xd25, 0x5ec0, 0xdc87, 0x5f64, 0x9724, 0x0, 0x1);
        gbc.writeMem(0x1310, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd25, gbc.sp());
        EXPECT(0x1311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0051
        gbc.setState(0x77c4, 0xbb67, 0x7930, 0xfcbb, 0x4474, 0xb156, 0x0, 0x0);
        gbc.writeMem(0x77c4, { 0xa7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0052
        gbc.setState(0x8570, 0x43bf, 0x3d50, 0x7515, 0xc33b, 0x3c53, 0x0, 0x0);
        gbc.writeMem(0x8570, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x43bf, gbc.sp());
        EXPECT(0x8571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8570));
        // A7 0053
        gbc.setState(0x3577, 0x5f3f, 0x5cc0, 0x501a, 0x8b89, 0xbb08, 0x1, 0x1);
        gbc.writeMem(0x3577, { 0xa7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5f3f, gbc.sp());
        EXPECT(0x3578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0055
        gbc.setState(0x612, 0xfa63, 0x300, 0x405c, 0x7f40, 0x15f5, 0x0, 0x1);
        gbc.writeMem(0x612, { 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xfa63, gbc.sp());
        EXPECT(0x613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0056
        gbc.setState(0xc80, 0x9172, 0x77f0, 0x1079, 0xbe62, 0xc71c, 0x1, 0x0);
        gbc.writeMem(0xc80, { 0xa7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0xc81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0057
        gbc.setState(0x501, 0x5e5a, 0x4bb0, 0xb92d, 0xbc80, 0x7e30, 0x1, 0x1);
        gbc.writeMem(0x501, { 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0x502, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0058
        gbc.setState(0x82c2, 0x1260, 0x49b0, 0x31e4, 0xb72e, 0x2206, 0x1, 0x0);
        gbc.writeMem(0x82c2, { 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1260, gbc.sp());
        EXPECT(0x82c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x82c2));
        // A7 0059
        gbc.setState(0x1afa, 0x3f80, 0x7c20, 0xa1ab, 0x7b16, 0x7f68, 0x0, 0x1);
        gbc.writeMem(0x1afa, { 0xa7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f80, gbc.sp());
        EXPECT(0x1afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 005A
        gbc.setState(0xe28e, 0x27c, 0xc070, 0x2bb4, 0xa253, 0x6407, 0x1, 0x1);
        gbc.writeMem(0xe28e, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x27c, gbc.sp());
        EXPECT(0xe28f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe28e));
        // A7 005B
        gbc.setState(0x66f9, 0x7370, 0xcee0, 0x3521, 0xf451, 0x821d, 0x0, 0x1);
        gbc.writeMem(0x66f9, { 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7370, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 005C
        gbc.setState(0xe170, 0xa0cb, 0x70a0, 0xaf98, 0x573c, 0x469e, 0x0, 0x1);
        gbc.writeMem(0xe170, { 0xa7 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0xe171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe170));
        // A7 005D
        gbc.setState(0x6330, 0xa785, 0xf680, 0x9997, 0x4561, 0xe8c8, 0x1, 0x1);
        gbc.writeMem(0x6330, { 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa785, gbc.sp());
        EXPECT(0x6331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 005E
        gbc.setState(0xa4f5, 0x5fc3, 0x4ac0, 0x3ad3, 0xeaa7, 0x48d0, 0x0, 0x1);
        gbc.writeMem(0xa4f5, { 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0xa4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa4f5));
        // A7 005F
        gbc.setState(0x9162, 0x3411, 0xcbf0, 0x7f23, 0xfa76, 0x6238, 0x1, 0x0);
        gbc.writeMem(0x9162, { 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3411, gbc.sp());
        EXPECT(0x9163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9162));
        // A7 0060
        gbc.setState(0xcde5, 0x6677, 0xc70, 0x84b9, 0x129a, 0xa564, 0x0, 0x1);
        gbc.writeMem(0xcde5, { 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0xcde6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcde5));
        // A7 0061
        gbc.setState(0xb11f, 0x3283, 0xc060, 0x5c5f, 0x5916, 0x86f0, 0x1, 0x1);
        gbc.writeMem(0xb11f, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3283, gbc.sp());
        EXPECT(0xb120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb11f));
        // A7 0062
        gbc.setState(0x5bd0, 0xd47, 0xd080, 0xeb2a, 0xff1f, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0x5bd0, { 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd47, gbc.sp());
        EXPECT(0x5bd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0063
        gbc.setState(0x8131, 0x3140, 0xc3d0, 0x3b50, 0xfb64, 0x8f62, 0x1, 0x0);
        gbc.writeMem(0x8131, { 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3140, gbc.sp());
        EXPECT(0x8132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8131));
        // A7 0064
        gbc.setState(0x1df6, 0x71f7, 0xb080, 0x9906, 0xfd38, 0xa143, 0x1, 0x1);
        gbc.writeMem(0x1df6, { 0xa7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x71f7, gbc.sp());
        EXPECT(0x1df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0066
        gbc.setState(0xc57a, 0x550b, 0xe480, 0x3d29, 0xbc47, 0xc8f9, 0x1, 0x0);
        gbc.writeMem(0xc57a, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x550b, gbc.sp());
        EXPECT(0xc57b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc57a));
        // A7 0067
        gbc.setState(0xc528, 0x950b, 0x920, 0xbbd3, 0xee67, 0x745f, 0x1, 0x1);
        gbc.writeMem(0xc528, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x950b, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc528));
        // A7 0068
        gbc.setState(0xa81f, 0x9f46, 0xa100, 0xa87c, 0x27a2, 0xd317, 0x0, 0x1);
        gbc.writeMem(0xa81f, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9f46, gbc.sp());
        EXPECT(0xa820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa81f));
        // A7 0069
        gbc.setState(0x3610, 0xa700, 0xd010, 0xae1e, 0x43d4, 0x88c7, 0x0, 0x1);
        gbc.writeMem(0x3610, { 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa700, gbc.sp());
        EXPECT(0x3611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 006A
        gbc.setState(0xd967, 0xd91c, 0xfcb0, 0xcb55, 0x156, 0xe7b3, 0x0, 0x1);
        gbc.writeMem(0xd967, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd91c, gbc.sp());
        EXPECT(0xd968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd967));
        // A7 006B
        gbc.setState(0x39d4, 0xe8a1, 0xee20, 0x61fa, 0x208b, 0xe3be, 0x1, 0x0);
        gbc.writeMem(0x39d4, { 0xa7 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xe8a1, gbc.sp());
        EXPECT(0x39d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 006D
        gbc.setState(0x4bb7, 0x8281, 0xb370, 0x127, 0x8462, 0xc9a5, 0x1, 0x1);
        gbc.writeMem(0x4bb7, { 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8281, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 006E
        gbc.setState(0x69ab, 0xb0df, 0x5260, 0x8e1c, 0x3f69, 0x73aa, 0x0, 0x1);
        gbc.writeMem(0x69ab, { 0xa7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb0df, gbc.sp());
        EXPECT(0x69ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 006F
        gbc.setState(0xecdc, 0x7821, 0x46d0, 0xb4f5, 0x7cce, 0xa0ec, 0x0, 0x1);
        gbc.writeMem(0xecdc, { 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7821, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecdc));
        // A7 0070
        gbc.setState(0xc5d6, 0x4452, 0x80e0, 0x2b66, 0xcd53, 0x3324, 0x1, 0x0);
        gbc.writeMem(0xc5d6, { 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4452, gbc.sp());
        EXPECT(0xc5d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc5d6));
        // A7 0071
        gbc.setState(0x68b5, 0x850c, 0x4120, 0xec29, 0x4767, 0xead8, 0x0, 0x0);
        gbc.writeMem(0x68b5, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x850c, gbc.sp());
        EXPECT(0x68b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0072
        gbc.setState(0x89cc, 0x1b4e, 0x80e0, 0xa1f0, 0x44cc, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x89cc, { 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1b4e, gbc.sp());
        EXPECT(0x89cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x89cc));
        // A7 0074
        gbc.setState(0xa006, 0x85fd, 0xea30, 0x98a4, 0xef34, 0x52bf, 0x0, 0x1);
        gbc.writeMem(0xa006, { 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x85fd, gbc.sp());
        EXPECT(0xa007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa006));
        // A7 0075
        gbc.setState(0x8fc7, 0xccca, 0x9d50, 0x2248, 0x4ed2, 0x7240, 0x0, 0x0);
        gbc.writeMem(0x8fc7, { 0xa7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xccca, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8fc7));
        // A7 0076
        gbc.setState(0xb032, 0xc8e5, 0x7530, 0x6ff8, 0x68c0, 0xbbd9, 0x1, 0x0);
        gbc.writeMem(0xb032, { 0xa7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc8e5, gbc.sp());
        EXPECT(0xb033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb032));
        // A7 0077
        gbc.setState(0x6161, 0xe65f, 0xbea0, 0xa72d, 0x7a6f, 0x28eb, 0x0, 0x1);
        gbc.writeMem(0x6161, { 0xa7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe65f, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0078
        gbc.setState(0xaad6, 0x8daa, 0x92d0, 0x7b87, 0xb2cf, 0xe7e3, 0x0, 0x1);
        gbc.writeMem(0xaad6, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8daa, gbc.sp());
        EXPECT(0xaad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaad6));
        // A7 0079
        gbc.setState(0x1108, 0xbfe2, 0x2840, 0xdede, 0x567a, 0xa66a, 0x1, 0x0);
        gbc.writeMem(0x1108, { 0xa7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xbfe2, gbc.sp());
        EXPECT(0x1109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 007A
        gbc.setState(0x8597, 0xce97, 0xa530, 0xcf61, 0xc78f, 0x5e2e, 0x0, 0x1);
        gbc.writeMem(0x8597, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xce97, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8597));
        // A7 007B
        gbc.setState(0x23ea, 0x7bb1, 0xdc20, 0x7d02, 0x19f5, 0xf468, 0x1, 0x0);
        gbc.writeMem(0x23ea, { 0xa7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7bb1, gbc.sp());
        EXPECT(0x23eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 007C
        gbc.setState(0x9621, 0xe63d, 0x4160, 0xeb33, 0x1a46, 0x9c41, 0x0, 0x0);
        gbc.writeMem(0x9621, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe63d, gbc.sp());
        EXPECT(0x9622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9621));
        // A7 007D
        gbc.setState(0xcfc8, 0xf94b, 0xf180, 0x3fa1, 0xccd4, 0x7030, 0x0, 0x0);
        gbc.writeMem(0xcfc8, { 0xa7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf94b, gbc.sp());
        EXPECT(0xcfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcfc8));
        // A7 007E
        gbc.setState(0x6576, 0x421b, 0x4b90, 0xe6d4, 0xd45c, 0xd2ba, 0x1, 0x0);
        gbc.writeMem(0x6576, { 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x421b, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 007F
        gbc.setState(0x578, 0xa996, 0xa150, 0x8263, 0x136b, 0xc7da, 0x0, 0x0);
        gbc.writeMem(0x578, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa996, gbc.sp());
        EXPECT(0x579, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0080
        gbc.setState(0x8e40, 0x9a34, 0x9430, 0x2176, 0x57b, 0xa951, 0x0, 0x1);
        gbc.writeMem(0x8e40, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x9a34, gbc.sp());
        EXPECT(0x8e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8e40));
        // A7 0081
        gbc.setState(0xc59a, 0x2cf3, 0x9760, 0x309f, 0xdc1a, 0xc6d4, 0x1, 0x0);
        gbc.writeMem(0xc59a, { 0xa7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2cf3, gbc.sp());
        EXPECT(0xc59b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc59a));
        // A7 0082
        gbc.setState(0x1e07, 0xc610, 0x8790, 0xdbfb, 0x3e64, 0x5d12, 0x0, 0x1);
        gbc.writeMem(0x1e07, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc610, gbc.sp());
        EXPECT(0x1e08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0083
        gbc.setState(0x2af, 0x5716, 0x820, 0xd4f4, 0x1f85, 0x2d1d, 0x1, 0x1);
        gbc.writeMem(0x2af, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5716, gbc.sp());
        EXPECT(0x2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0084
        gbc.setState(0x7e48, 0x3565, 0xeac0, 0x3c03, 0x7835, 0xe1f6, 0x1, 0x1);
        gbc.writeMem(0x7e48, { 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3565, gbc.sp());
        EXPECT(0x7e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0085
        gbc.setState(0xb449, 0xed97, 0xfd30, 0xf0e, 0x64f3, 0xafce, 0x1, 0x1);
        gbc.writeMem(0xb449, { 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xed97, gbc.sp());
        EXPECT(0xb44a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb449));
        // A7 0086
        gbc.setState(0xcf55, 0xcb64, 0x3c60, 0xe8e6, 0xdc65, 0x61e7, 0x0, 0x1);
        gbc.writeMem(0xcf55, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcb64, gbc.sp());
        EXPECT(0xcf56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcf55));
        // A7 0087
        gbc.setState(0xbb4e, 0xb72c, 0xa490, 0x9df4, 0x9ad5, 0x62a0, 0x0, 0x1);
        gbc.writeMem(0xbb4e, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb72c, gbc.sp());
        EXPECT(0xbb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbb4e));
        // A7 0088
        gbc.setState(0x9a85, 0x3284, 0xad10, 0xa658, 0xa602, 0x41a9, 0x0, 0x1);
        gbc.writeMem(0x9a85, { 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3284, gbc.sp());
        EXPECT(0x9a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9a85));
        // A7 0089
        gbc.setState(0xbea6, 0x5eca, 0x1ed0, 0x6f41, 0xfff1, 0x9061, 0x1, 0x1);
        gbc.writeMem(0xbea6, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5eca, gbc.sp());
        EXPECT(0xbea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbea6));
        // A7 008A
        gbc.setState(0x30b6, 0x3cbf, 0x7a10, 0xb7c3, 0xd15d, 0x19a6, 0x1, 0x1);
        gbc.writeMem(0x30b6, { 0xa7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3cbf, gbc.sp());
        EXPECT(0x30b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 008B
        gbc.setState(0x860a, 0x63bf, 0x8d40, 0x180, 0x9832, 0x31fd, 0x1, 0x1);
        gbc.writeMem(0x860a, { 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x63bf, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x860a));
        // A7 008C
        gbc.setState(0xd1c3, 0x1416, 0xfe50, 0xe3c1, 0xfe7f, 0x304a, 0x0, 0x0);
        gbc.writeMem(0xd1c3, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1416, gbc.sp());
        EXPECT(0xd1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd1c3));
        // A7 008E
        gbc.setState(0x35f6, 0xa076, 0x8f00, 0x6d3b, 0xcd63, 0xa7a, 0x1, 0x1);
        gbc.writeMem(0x35f6, { 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xa076, gbc.sp());
        EXPECT(0x35f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 008F
        gbc.setState(0xde89, 0xe6ca, 0xa460, 0x2a57, 0x9bcc, 0x6bef, 0x1, 0x1);
        gbc.writeMem(0xde89, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe6ca, gbc.sp());
        EXPECT(0xde8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xde89));
        // A7 0090
        gbc.setState(0x4f57, 0x1587, 0x66a0, 0xda8e, 0xc33b, 0xb8e5, 0x0, 0x1);
        gbc.writeMem(0x4f57, { 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1587, gbc.sp());
        EXPECT(0x4f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0091
        gbc.setState(0x6f1e, 0xebc9, 0x1a80, 0xbfc3, 0x1741, 0x8f38, 0x0, 0x0);
        gbc.writeMem(0x6f1e, { 0xa7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xebc9, gbc.sp());
        EXPECT(0x6f1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0092
        gbc.setState(0x76b0, 0xd68e, 0x25a0, 0xa3d7, 0x74ae, 0xcd9c, 0x1, 0x1);
        gbc.writeMem(0x76b0, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd68e, gbc.sp());
        EXPECT(0x76b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0093
        gbc.setState(0x2191, 0x3c8c, 0xbf80, 0x6e8a, 0xf177, 0xb6d4, 0x1, 0x1);
        gbc.writeMem(0x2191, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3c8c, gbc.sp());
        EXPECT(0x2192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0094
        gbc.setState(0x27f4, 0xd627, 0x8fd0, 0x3d12, 0xdde8, 0x967d, 0x1, 0x1);
        gbc.writeMem(0x27f4, { 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd627, gbc.sp());
        EXPECT(0x27f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0095
        gbc.setState(0x2871, 0x557b, 0x2a40, 0xee71, 0xb319, 0x6e05, 0x0, 0x1);
        gbc.writeMem(0x2871, { 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x557b, gbc.sp());
        EXPECT(0x2872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0096
        gbc.setState(0xc1b3, 0x62ac, 0x9920, 0xad4f, 0xfa0d, 0x8609, 0x0, 0x0);
        gbc.writeMem(0xc1b3, { 0xa7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x62ac, gbc.sp());
        EXPECT(0xc1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc1b3));
        // A7 0097
        gbc.setState(0xc591, 0x1397, 0x2730, 0x8990, 0xb313, 0xb38b, 0x1, 0x1);
        gbc.writeMem(0xc591, { 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1397, gbc.sp());
        EXPECT(0xc592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc591));
        // A7 0098
        gbc.setState(0x28c7, 0x6fe1, 0xd130, 0x6a60, 0xaacb, 0x53a7, 0x0, 0x0);
        gbc.writeMem(0x28c7, { 0xa7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6fe1, gbc.sp());
        EXPECT(0x28c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0099
        gbc.setState(0xd7a2, 0xb35, 0x8db0, 0x19aa, 0x9f58, 0xab00, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb35, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd7a2));
        // A7 009A
        gbc.setState(0x4a6f, 0x22d6, 0x21d0, 0x3fe, 0xfaf1, 0x3816, 0x1, 0x1);
        gbc.writeMem(0x4a6f, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x22d6, gbc.sp());
        EXPECT(0x4a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 009C
        gbc.setState(0xe9b4, 0x2aa9, 0x4c90, 0xe608, 0x747e, 0x24fd, 0x1, 0x0);
        gbc.writeMem(0xe9b4, { 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2aa9, gbc.sp());
        EXPECT(0xe9b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe9b4));
        // A7 009D
        gbc.setState(0x28d9, 0xfe8, 0x3d20, 0x987b, 0x2e59, 0xd527, 0x0, 0x0);
        gbc.writeMem(0x28d9, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xfe8, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 009E
        gbc.setState(0x57b3, 0x5817, 0x26d0, 0x8baa, 0x182d, 0xbb5d, 0x1, 0x0);
        gbc.writeMem(0x57b3, { 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5817, gbc.sp());
        EXPECT(0x57b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 009F
        gbc.setState(0xb147, 0x26bf, 0x6bb0, 0xbdaf, 0x79da, 0xf572, 0x1, 0x1);
        gbc.writeMem(0xb147, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xb148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb147));
        // A7 00A0
        gbc.setState(0xc16b, 0x475c, 0x7860, 0x1b3e, 0xd866, 0xb71, 0x0, 0x0);
        gbc.writeMem(0xc16b, { 0xa7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x475c, gbc.sp());
        EXPECT(0xc16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc16b));
        // A7 00A1
        gbc.setState(0xc110, 0xfac6, 0xc2b0, 0x223a, 0xefb3, 0x5c30, 0x0, 0x1);
        gbc.writeMem(0xc110, { 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfac6, gbc.sp());
        EXPECT(0xc111, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc110));
        // A7 00A2
        gbc.setState(0x1e16, 0xfc5c, 0x2bd0, 0x7c23, 0x825d, 0xe94f, 0x0, 0x1);
        gbc.writeMem(0x1e16, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xfc5c, gbc.sp());
        EXPECT(0x1e17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00A3
        gbc.setState(0x1130, 0xaef3, 0x4180, 0x60e9, 0x7da1, 0xe6e0, 0x0, 0x1);
        gbc.writeMem(0x1130, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xaef3, gbc.sp());
        EXPECT(0x1131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00A5
        gbc.setState(0xa2bc, 0xb5fc, 0xc490, 0xdb06, 0x7ec0, 0xdb43, 0x1, 0x1);
        gbc.writeMem(0xa2bc, { 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb5fc, gbc.sp());
        EXPECT(0xa2bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa2bc));
        // A7 00A7
        gbc.setState(0x7ac2, 0xec62, 0x55f0, 0x52a, 0xa579, 0x17ea, 0x1, 0x1);
        gbc.writeMem(0x7ac2, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xec62, gbc.sp());
        EXPECT(0x7ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00A8
        gbc.setState(0xb37e, 0x2740, 0x5770, 0xd2a, 0x0, 0x6928, 0x1, 0x0);
        gbc.writeMem(0xb37e, { 0xa7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2740, gbc.sp());
        EXPECT(0xb37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb37e));
        // A7 00A9
        gbc.setState(0x4ecd, 0xa61a, 0x8ae0, 0xa194, 0xc0d9, 0x7c0b, 0x0, 0x1);
        gbc.writeMem(0x4ecd, { 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa61a, gbc.sp());
        EXPECT(0x4ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00AA
        gbc.setState(0xd096, 0xd066, 0x3d90, 0xfbca, 0x451a, 0xb0a0, 0x0, 0x1);
        gbc.writeMem(0xd096, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd066, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd096));
        // A7 00AB
        gbc.setState(0xdac6, 0x6a29, 0xba20, 0x8aab, 0x15c1, 0x6ea3, 0x1, 0x0);
        gbc.writeMem(0xdac6, { 0xa7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x6a29, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdac6));
        // A7 00AC
        gbc.setState(0x7916, 0x7cab, 0x9be0, 0xd6c2, 0x690d, 0x1796, 0x1, 0x0);
        gbc.writeMem(0x7916, { 0xa7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00AD
        gbc.setState(0x54b5, 0xfbd2, 0xf330, 0x4cd5, 0xeaf2, 0x48b8, 0x0, 0x0);
        gbc.writeMem(0x54b5, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xfbd2, gbc.sp());
        EXPECT(0x54b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00AE
        gbc.setState(0x3f51, 0xdd0b, 0x32c0, 0xf3df, 0xc788, 0x243d, 0x0, 0x1);
        gbc.writeMem(0x3f51, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xdd0b, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00AF
        gbc.setState(0x328a, 0x4b92, 0xc4e0, 0xc0ee, 0xa41d, 0xaf42, 0x0, 0x0);
        gbc.writeMem(0x328a, { 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x4b92, gbc.sp());
        EXPECT(0x328b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00B0
        gbc.setState(0x83be, 0x15cd, 0x7c70, 0xafcb, 0xb7f8, 0x7e90, 0x1, 0x1);
        gbc.writeMem(0x83be, { 0xa7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x15cd, gbc.sp());
        EXPECT(0x83bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x83be));
        // A7 00B1
        gbc.setState(0x4da8, 0xb669, 0xa950, 0xc31a, 0x34a5, 0xab9, 0x0, 0x1);
        gbc.writeMem(0x4da8, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb669, gbc.sp());
        EXPECT(0x4da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00B2
        gbc.setState(0x9ef2, 0x5ea8, 0xbf60, 0xef2b, 0xd6a0, 0x252b, 0x0, 0x1);
        gbc.writeMem(0x9ef2, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0x9ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9ef2));
        // A7 00B3
        gbc.setState(0x899f, 0x854e, 0xba50, 0x5e55, 0x5a38, 0x8b87, 0x0, 0x1);
        gbc.writeMem(0x899f, { 0xa7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x854e, gbc.sp());
        EXPECT(0x89a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x899f));
        // A7 00B4
        gbc.setState(0x7a49, 0x3d4d, 0x4070, 0xa735, 0x80cb, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x7a49, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3d4d, gbc.sp());
        EXPECT(0x7a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00B5
        gbc.setState(0xc5b0, 0x110f, 0x5630, 0xbbe, 0xe396, 0x35d3, 0x1, 0x0);
        gbc.writeMem(0xc5b0, { 0xa7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x110f, gbc.sp());
        EXPECT(0xc5b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc5b0));
        // A7 00B6
        gbc.setState(0xbf66, 0x8243, 0x8f0, 0xf823, 0x3ef6, 0xffe6, 0x1, 0x0);
        gbc.writeMem(0xbf66, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8243, gbc.sp());
        EXPECT(0xbf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf66));
        // A7 00B7
        gbc.setState(0x777c, 0x1795, 0x2990, 0x9251, 0x331c, 0x6d3f, 0x1, 0x0);
        gbc.writeMem(0x777c, { 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1795, gbc.sp());
        EXPECT(0x777d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00B8
        gbc.setState(0x5f29, 0x66ad, 0x6460, 0x3d18, 0xe67b, 0x8327, 0x1, 0x0);
        gbc.writeMem(0x5f29, { 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0x5f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00BA
        gbc.setState(0x8a47, 0x2698, 0x9610, 0x6eef, 0x1887, 0x815, 0x1, 0x0);
        gbc.writeMem(0x8a47, { 0xa7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x2698, gbc.sp());
        EXPECT(0x8a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8a47));
        // A7 00BB
        gbc.setState(0xb679, 0xc8b4, 0xa420, 0x7905, 0x4ade, 0x7731, 0x1, 0x0);
        gbc.writeMem(0xb679, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc8b4, gbc.sp());
        EXPECT(0xb67a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb679));
        // A7 00BC
        gbc.setState(0xb1a6, 0x5027, 0x6690, 0xe0a6, 0xdf6, 0x7007, 0x0, 0x0);
        gbc.writeMem(0xb1a6, { 0xa7 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5027, gbc.sp());
        EXPECT(0xb1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb1a6));
        // A7 00BD
        gbc.setState(0xc470, 0x3022, 0x86a0, 0x49a9, 0x5690, 0xb73c, 0x1, 0x1);
        gbc.writeMem(0xc470, { 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3022, gbc.sp());
        EXPECT(0xc471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc470));
        // A7 00BE
        gbc.setState(0x8b62, 0x5f1e, 0x2800, 0x464b, 0xce3, 0x3f94, 0x1, 0x1);
        gbc.writeMem(0x8b62, { 0xa7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5f1e, gbc.sp());
        EXPECT(0x8b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8b62));
        // A7 00BF
        gbc.setState(0xa264, 0xa849, 0x4420, 0xc958, 0xdb92, 0xdfea, 0x1, 0x0);
        gbc.writeMem(0xa264, { 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa849, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa264));
        // A7 00C0
        gbc.setState(0x5560, 0x1314, 0x6480, 0x7ebd, 0xc708, 0x1885, 0x1, 0x0);
        gbc.writeMem(0x5560, { 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1314, gbc.sp());
        EXPECT(0x5561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C1
        gbc.setState(0x1e30, 0xd66e, 0x7fb0, 0xbd8e, 0x6347, 0x3f7b, 0x0, 0x1);
        gbc.writeMem(0x1e30, { 0xa7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd66e, gbc.sp());
        EXPECT(0x1e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C2
        gbc.setState(0x6a14, 0x2b, 0xce40, 0x229c, 0x9736, 0xe2d3, 0x0, 0x0);
        gbc.writeMem(0x6a14, { 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2b, gbc.sp());
        EXPECT(0x6a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C3
        gbc.setState(0x262b, 0x7e11, 0x6b60, 0xe5c7, 0x29a9, 0x212f, 0x1, 0x1);
        gbc.writeMem(0x262b, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7e11, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C4
        gbc.setState(0x4007, 0x830f, 0xfdf0, 0xfc52, 0xbf01, 0x67b5, 0x0, 0x0);
        gbc.writeMem(0x4007, { 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x830f, gbc.sp());
        EXPECT(0x4008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C5
        gbc.setState(0x9c0d, 0x5804, 0xa5b0, 0xd929, 0x984e, 0xc959, 0x0, 0x1);
        gbc.writeMem(0x9c0d, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5804, gbc.sp());
        EXPECT(0x9c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9c0d));
        // A7 00C6
        gbc.setState(0xc3e, 0xb394, 0xa930, 0xe972, 0xb6c5, 0xe326, 0x1, 0x0);
        gbc.writeMem(0xc3e, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb394, gbc.sp());
        EXPECT(0xc3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C7
        gbc.setState(0x4598, 0xe6ea, 0x4090, 0x8f42, 0x86a4, 0x100e, 0x0, 0x0);
        gbc.writeMem(0x4598, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe6ea, gbc.sp());
        EXPECT(0x4599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00C8
        gbc.setState(0xb43d, 0x5452, 0x94a0, 0x73d2, 0xa460, 0x817c, 0x1, 0x1);
        gbc.writeMem(0xb43d, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5452, gbc.sp());
        EXPECT(0xb43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb43d));
        // A7 00C9
        gbc.setState(0x1329, 0x8817, 0x41c0, 0x2ae0, 0xfc26, 0xf1b0, 0x1, 0x1);
        gbc.writeMem(0x1329, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8817, gbc.sp());
        EXPECT(0x132a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00CA
        gbc.setState(0x1a49, 0x24bc, 0x32d0, 0xc693, 0xa193, 0x607e, 0x0, 0x0);
        gbc.writeMem(0x1a49, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x24bc, gbc.sp());
        EXPECT(0x1a4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00CB
        gbc.setState(0x9454, 0x4a7e, 0x3350, 0x3a40, 0xc1c1, 0x78bd, 0x1, 0x0);
        gbc.writeMem(0x9454, { 0xa7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9454));
        // A7 00CC
        gbc.setState(0x7adf, 0xb214, 0xbdc0, 0x4e47, 0xab33, 0x4e92, 0x0, 0x0);
        gbc.writeMem(0x7adf, { 0xa7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xb214, gbc.sp());
        EXPECT(0x7ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00CD
        gbc.setState(0x2f2a, 0x20e7, 0x270, 0xa48e, 0x22dd, 0xccf7, 0x1, 0x0);
        gbc.writeMem(0x2f2a, { 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x20e7, gbc.sp());
        EXPECT(0x2f2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00CE
        gbc.setState(0x583f, 0xd7fd, 0xd9d0, 0xaaa1, 0xc3fc, 0x6939, 0x1, 0x1);
        gbc.writeMem(0x583f, { 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd7fd, gbc.sp());
        EXPECT(0x5840, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00CF
        gbc.setState(0x9060, 0xc682, 0xb2d0, 0xdc15, 0xab67, 0xc44f, 0x0, 0x1);
        gbc.writeMem(0x9060, { 0xa7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0x9061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9060));
        // A7 00D0
        gbc.setState(0xe586, 0x5eaf, 0x5280, 0xfaeb, 0xd98e, 0xbe38, 0x1, 0x1);
        gbc.writeMem(0xe586, { 0xa7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5eaf, gbc.sp());
        EXPECT(0xe587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe586));
        // A7 00D1
        gbc.setState(0xecce, 0x5e34, 0x1b30, 0xb3c4, 0x9962, 0xfcb2, 0x0, 0x0);
        gbc.writeMem(0xecce, { 0xa7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5e34, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecce));
        // A7 00D2
        gbc.setState(0x390b, 0x653f, 0xed20, 0x7113, 0x6f42, 0xaa9a, 0x0, 0x0);
        gbc.writeMem(0x390b, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x653f, gbc.sp());
        EXPECT(0x390c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00D3
        gbc.setState(0xaa78, 0xb94d, 0xcc10, 0xbab7, 0x480c, 0x5e25, 0x0, 0x0);
        gbc.writeMem(0xaa78, { 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb94d, gbc.sp());
        EXPECT(0xaa79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaa78));
        // A7 00D4
        gbc.setState(0xaa72, 0x8c69, 0x7750, 0x69d6, 0x684d, 0x1d29, 0x0, 0x1);
        gbc.writeMem(0xaa72, { 0xa7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c69, gbc.sp());
        EXPECT(0xaa73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaa72));
        // A7 00D5
        gbc.setState(0x5d0a, 0xdc29, 0xc4e0, 0xd630, 0xb1cf, 0x576, 0x0, 0x0);
        gbc.writeMem(0x5d0a, { 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdc29, gbc.sp());
        EXPECT(0x5d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00D6
        gbc.setState(0x9bd1, 0xc16f, 0x20c0, 0xc3e0, 0x7ad, 0x82b8, 0x1, 0x0);
        gbc.writeMem(0x9bd1, { 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc16f, gbc.sp());
        EXPECT(0x9bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9bd1));
        // A7 00D7
        gbc.setState(0x4b1a, 0xf583, 0x38d0, 0xb19b, 0xf4cc, 0xe885, 0x0, 0x1);
        gbc.writeMem(0x4b1a, { 0xa7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf583, gbc.sp());
        EXPECT(0x4b1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00D8
        gbc.setState(0x8feb, 0xb361, 0x4830, 0x32cb, 0x3296, 0x311a, 0x1, 0x1);
        gbc.writeMem(0x8feb, { 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x8fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8feb));
        // A7 00D9
        gbc.setState(0xea65, 0x317c, 0x3510, 0xf5cc, 0x7206, 0x6c51, 0x0, 0x0);
        gbc.writeMem(0xea65, { 0xa7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x317c, gbc.sp());
        EXPECT(0xea66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xea65));
        // A7 00DA
        gbc.setState(0x885d, 0x4bc4, 0xa60, 0x2b84, 0xd54e, 0x80ba, 0x1, 0x1);
        gbc.writeMem(0x885d, { 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4bc4, gbc.sp());
        EXPECT(0x885e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x885d));
        // A7 00DB
        gbc.setState(0x6aa, 0x54d1, 0x81d0, 0x1e5, 0x30f3, 0x2fd7, 0x0, 0x0);
        gbc.writeMem(0x6aa, { 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0x6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00DC
        gbc.setState(0x3d1c, 0xcf3e, 0x30e0, 0xd339, 0x9c3a, 0xfe69, 0x1, 0x0);
        gbc.writeMem(0x3d1c, { 0xa7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcf3e, gbc.sp());
        EXPECT(0x3d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00DE
        gbc.setState(0xa121, 0x9789, 0xed90, 0x5b00, 0xe8d, 0xaed5, 0x0, 0x1);
        gbc.writeMem(0xa121, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9789, gbc.sp());
        EXPECT(0xa122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa121));
        // A7 00DF
        gbc.setState(0xc990, 0xd90, 0xa8b0, 0x9b9, 0x5bcd, 0xc493, 0x0, 0x1);
        gbc.writeMem(0xc990, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd90, gbc.sp());
        EXPECT(0xc991, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc990));
        // A7 00E0
        gbc.setState(0x584f, 0x695f, 0xf790, 0x6ecb, 0xabec, 0x7b, 0x1, 0x1);
        gbc.writeMem(0x584f, { 0xa7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x695f, gbc.sp());
        EXPECT(0x5850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00E2
        gbc.setState(0xd1c6, 0x2c0c, 0x4120, 0xff2b, 0x46a1, 0x7506, 0x1, 0x1);
        gbc.writeMem(0xd1c6, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2c0c, gbc.sp());
        EXPECT(0xd1c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd1c6));
        // A7 00E3
        gbc.setState(0xd60a, 0x76c8, 0x4d00, 0x40b0, 0xe3a3, 0x18c9, 0x1, 0x1);
        gbc.writeMem(0xd60a, { 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x76c8, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd60a));
        // A7 00E4
        gbc.setState(0x860a, 0xe49c, 0x3760, 0x6eb8, 0xa14f, 0x8272, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0xa7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe49c, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x860a));
        // A7 00E5
        gbc.setState(0xab16, 0xbc9a, 0x9220, 0x896, 0x445f, 0x1846, 0x1, 0x0);
        gbc.writeMem(0xab16, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc9a, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xab16));
        // A7 00E6
        gbc.setState(0xa346, 0x48, 0xf150, 0x6e8b, 0xd8d2, 0xbf81, 0x0, 0x1);
        gbc.writeMem(0xa346, { 0xa7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x48, gbc.sp());
        EXPECT(0xa347, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa346));
        // A7 00E7
        gbc.setState(0xdb4c, 0xadc7, 0xef80, 0xc143, 0x972f, 0x47ca, 0x0, 0x1);
        gbc.writeMem(0xdb4c, { 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xadc7, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdb4c));
        // A7 00E9
        gbc.setState(0x6494, 0x7cb4, 0x5120, 0x8fb8, 0x1b15, 0x35ee, 0x1, 0x1);
        gbc.writeMem(0x6494, { 0xa7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7cb4, gbc.sp());
        EXPECT(0x6495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00EA
        gbc.setState(0xd681, 0xca6f, 0xc4e0, 0x4ccd, 0xda97, 0x44e4, 0x1, 0x1);
        gbc.writeMem(0xd681, { 0xa7 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xca6f, gbc.sp());
        EXPECT(0xd682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd681));
        // A7 00EC
        gbc.setState(0x58db, 0x96a8, 0xad80, 0x1056, 0x57d5, 0xe9b8, 0x0, 0x1);
        gbc.writeMem(0x58db, { 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x96a8, gbc.sp());
        EXPECT(0x58dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00ED
        gbc.setState(0x2015, 0x3e77, 0x6210, 0x8d, 0x658c, 0x132f, 0x0, 0x0);
        gbc.writeMem(0x2015, { 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0x2016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00EE
        gbc.setState(0xb96a, 0x1673, 0xe060, 0x8d5, 0x94e5, 0xb160, 0x1, 0x1);
        gbc.writeMem(0xb96a, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1673, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb96a));
        // A7 00F0
        gbc.setState(0x9799, 0x6f5b, 0xcf60, 0xa08e, 0x300c, 0x2e2f, 0x0, 0x1);
        gbc.writeMem(0x9799, { 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6f5b, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9799));
        // A7 00F1
        gbc.setState(0x893, 0x1f6e, 0xfe0, 0x662d, 0xce87, 0xdfc7, 0x1, 0x1);
        gbc.writeMem(0x893, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00F2
        gbc.setState(0x87e1, 0xa063, 0x2130, 0x940f, 0xace0, 0xd292, 0x0, 0x0);
        gbc.writeMem(0x87e1, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa063, gbc.sp());
        EXPECT(0x87e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x87e1));
        // A7 00F3
        gbc.setState(0xdf5b, 0x716a, 0x2e40, 0xf453, 0x405, 0xe376, 0x0, 0x1);
        gbc.writeMem(0xdf5b, { 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x716a, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdf5b));
        // A7 00F4
        gbc.setState(0xedef, 0xe88f, 0xede0, 0xdb11, 0x67c8, 0xfe3b, 0x0, 0x0);
        gbc.writeMem(0xedef, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe88f, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xedef));
        // A7 00F5
        gbc.setState(0x18af, 0x9fa, 0xa7e0, 0xa2bd, 0xb74b, 0x58d1, 0x1, 0x1);
        gbc.writeMem(0x18af, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9fa, gbc.sp());
        EXPECT(0x18b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00F6
        gbc.setState(0x2a2b, 0x21ba, 0x5210, 0x69ca, 0x8d3e, 0xce18, 0x1, 0x1);
        gbc.writeMem(0x2a2b, { 0xa7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x21ba, gbc.sp());
        EXPECT(0x2a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00F7
        gbc.setState(0xd97b, 0x12a2, 0x95f0, 0x3110, 0x5a20, 0x9802, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0xa7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x12a2, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd97b));
        // A7 00F8
        gbc.setState(0xc575, 0xf0c, 0x33b0, 0xe2f, 0xfae4, 0x1c1e, 0x1, 0x1);
        gbc.writeMem(0xc575, { 0xa7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf0c, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc575));
        // A7 00F9
        gbc.setState(0x8ee5, 0x7ea5, 0xd100, 0xe40e, 0xf8d9, 0x5b3c, 0x1, 0x1);
        gbc.writeMem(0x8ee5, { 0xa7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7ea5, gbc.sp());
        EXPECT(0x8ee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8ee5));
        // A7 00FA
        gbc.setState(0x1891, 0xa87a, 0xa240, 0x329a, 0xd300, 0x550f, 0x0, 0x0);
        gbc.writeMem(0x1891, { 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa87a, gbc.sp());
        EXPECT(0x1892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00FB
        gbc.setState(0x6c66, 0x3622, 0xdb50, 0xf2a2, 0x78ef, 0x46c3, 0x1, 0x1);
        gbc.writeMem(0x6c66, { 0xa7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3622, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00FC
        gbc.setState(0x2ae2, 0x4c0a, 0xe9e0, 0x9e70, 0x60f6, 0x5013, 0x0, 0x0);
        gbc.writeMem(0x2ae2, { 0xa7 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4c0a, gbc.sp());
        EXPECT(0x2ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00FD
        gbc.setState(0x521e, 0xfa42, 0x2f20, 0xd63f, 0xacf2, 0x8100, 0x1, 0x1);
        gbc.writeMem(0x521e, { 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfa42, gbc.sp());
        EXPECT(0x521f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 00FE
        gbc.setState(0xa975, 0xa01c, 0x9840, 0xe70a, 0x57a4, 0x12e9, 0x0, 0x1);
        gbc.writeMem(0xa975, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa01c, gbc.sp());
        EXPECT(0xa976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa975));
        // A7 00FF
        gbc.setState(0x8792, 0xf31f, 0xf350, 0x7947, 0x90f4, 0x5843, 0x1, 0x1);
        gbc.writeMem(0x8792, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0x8793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8792));
        // A7 0100
        gbc.setState(0xb5bf, 0x7f1, 0x6b30, 0x3f98, 0x2473, 0x93de, 0x0, 0x0);
        gbc.writeMem(0xb5bf, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7f1, gbc.sp());
        EXPECT(0xb5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb5bf));
        // A7 0101
        gbc.setState(0x75eb, 0x1921, 0x5e10, 0xd4f0, 0x3070, 0x9055, 0x0, 0x1);
        gbc.writeMem(0x75eb, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1921, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0102
        gbc.setState(0x1fbe, 0xc72, 0xe4f0, 0x946f, 0x2fe2, 0x738f, 0x0, 0x1);
        gbc.writeMem(0x1fbe, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x1fbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0103
        gbc.setState(0x9f10, 0x7f7, 0x7420, 0x496e, 0x9c1f, 0x2c8, 0x1, 0x0);
        gbc.writeMem(0x9f10, { 0xa7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7f7, gbc.sp());
        EXPECT(0x9f11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9f10));
        // A7 0104
        gbc.setState(0xa6ee, 0xeff6, 0x48c0, 0xbfe2, 0xdc81, 0x708f, 0x1, 0x1);
        gbc.writeMem(0xa6ee, { 0xa7 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xeff6, gbc.sp());
        EXPECT(0xa6ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa6ee));
        // A7 0105
        gbc.setState(0xee26, 0xccc, 0xae0, 0x6251, 0x45ac, 0xc21a, 0x0, 0x1);
        gbc.writeMem(0xee26, { 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xccc, gbc.sp());
        EXPECT(0xee27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee26));
        // A7 0107
        gbc.setState(0x8a70, 0x671, 0x5730, 0x8441, 0x9d1d, 0x4ee3, 0x1, 0x0);
        gbc.writeMem(0x8a70, { 0xa7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x671, gbc.sp());
        EXPECT(0x8a71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8a70));
        // A7 0108
        gbc.setState(0x19df, 0x4a4b, 0xfc70, 0x4d86, 0x1ed4, 0x4b07, 0x0, 0x0);
        gbc.writeMem(0x19df, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a4b, gbc.sp());
        EXPECT(0x19e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0109
        gbc.setState(0x56b3, 0x409b, 0xdce0, 0xb2bf, 0xad61, 0x8e00, 0x0, 0x1);
        gbc.writeMem(0x56b3, { 0xa7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x409b, gbc.sp());
        EXPECT(0x56b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 010A
        gbc.setState(0xd106, 0x7517, 0x0, 0xe9bd, 0x183a, 0x8f7b, 0x1, 0x0);
        gbc.writeMem(0xd106, { 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7517, gbc.sp());
        EXPECT(0xd107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd106));
        // A7 010B
        gbc.setState(0x6c26, 0x7532, 0xc570, 0xcb91, 0xc8c2, 0xc054, 0x1, 0x1);
        gbc.writeMem(0x6c26, { 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7532, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 010C
        gbc.setState(0xa4ec, 0x9d32, 0xea10, 0x23bc, 0x824b, 0xf589, 0x1, 0x1);
        gbc.writeMem(0xa4ec, { 0xa7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9d32, gbc.sp());
        EXPECT(0xa4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa4ec));
        // A7 010D
        gbc.setState(0xc01c, 0xac52, 0x4f50, 0xe226, 0x6983, 0xb1a0, 0x1, 0x0);
        gbc.writeMem(0xc01c, { 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xac52, gbc.sp());
        EXPECT(0xc01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc01c));
        // A7 010E
        gbc.setState(0x5262, 0x85c5, 0x44f0, 0xa6db, 0x81, 0x8eb, 0x0, 0x0);
        gbc.writeMem(0x5262, { 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x85c5, gbc.sp());
        EXPECT(0x5263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 010F
        gbc.setState(0xa33f, 0x26d5, 0x83a0, 0x72de, 0x78cb, 0xd339, 0x1, 0x1);
        gbc.writeMem(0xa33f, { 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x26d5, gbc.sp());
        EXPECT(0xa340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa33f));
        // A7 0110
        gbc.setState(0x7458, 0x8380, 0xe80, 0x18e0, 0x11f5, 0x37c3, 0x1, 0x1);
        gbc.writeMem(0x7458, { 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8380, gbc.sp());
        EXPECT(0x7459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0111
        gbc.setState(0xc6a6, 0x4738, 0x5f60, 0x7ac1, 0xc00e, 0x2a9a, 0x1, 0x0);
        gbc.writeMem(0xc6a6, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x4738, gbc.sp());
        EXPECT(0xc6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc6a6));
        // A7 0112
        gbc.setState(0x8bda, 0xb7ba, 0x3eb0, 0xa73d, 0xe9ae, 0x4cfb, 0x0, 0x1);
        gbc.writeMem(0x8bda, { 0xa7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb7ba, gbc.sp());
        EXPECT(0x8bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8bda));
        // A7 0113
        gbc.setState(0xd7a2, 0x7f45, 0xaf20, 0x20b6, 0xabe3, 0x968f, 0x1, 0x0);
        gbc.writeMem(0xd7a2, { 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7f45, gbc.sp());
        EXPECT(0xd7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd7a2));
        // A7 0115
        gbc.setState(0xde24, 0xe6a9, 0xe010, 0x974, 0x53e1, 0x16bf, 0x1, 0x0);
        gbc.writeMem(0xde24, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe6a9, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xde24));
        // A7 0116
        gbc.setState(0x2847, 0x4f9b, 0xb050, 0x8251, 0xf4f2, 0x2283, 0x0, 0x0);
        gbc.writeMem(0x2847, { 0xa7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4f9b, gbc.sp());
        EXPECT(0x2848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0117
        gbc.setState(0x3ddc, 0xc1dc, 0x7470, 0x9ad7, 0x6e4b, 0xb66e, 0x1, 0x0);
        gbc.writeMem(0x3ddc, { 0xa7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc1dc, gbc.sp());
        EXPECT(0x3ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0118
        gbc.setState(0x3076, 0xb797, 0xc110, 0x4a6, 0x55f9, 0x8499, 0x0, 0x1);
        gbc.writeMem(0x3076, { 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x3077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0119
        gbc.setState(0x96d8, 0xb6f9, 0x53f0, 0x9251, 0xddf4, 0xc6d7, 0x0, 0x1);
        gbc.writeMem(0x96d8, { 0xa7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb6f9, gbc.sp());
        EXPECT(0x96d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x96d8));
        // A7 011A
        gbc.setState(0x39e5, 0x9c1f, 0x2560, 0xc77c, 0x1dc0, 0xe8b7, 0x0, 0x1);
        gbc.writeMem(0x39e5, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9c1f, gbc.sp());
        EXPECT(0x39e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 011B
        gbc.setState(0xa452, 0xcf58, 0x7aa0, 0xbceb, 0x7815, 0xfdc9, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xa7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xcf58, gbc.sp());
        EXPECT(0xa453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa452));
        // A7 011C
        gbc.setState(0xd96a, 0xdf31, 0xb390, 0x5a76, 0xe924, 0x9a4a, 0x1, 0x0);
        gbc.writeMem(0xd96a, { 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xdf31, gbc.sp());
        EXPECT(0xd96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd96a));
        // A7 011D
        gbc.setState(0xc91a, 0x5e52, 0xac30, 0xb4c3, 0xc991, 0x566e, 0x0, 0x0);
        gbc.writeMem(0xc91a, { 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5e52, gbc.sp());
        EXPECT(0xc91b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc91a));
        // A7 011E
        gbc.setState(0xc8c8, 0xf52b, 0x1bd0, 0x3ceb, 0x6d28, 0x64aa, 0x1, 0x1);
        gbc.writeMem(0xc8c8, { 0xa7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0xc8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc8c8));
        // A7 011F
        gbc.setState(0x6262, 0xc335, 0x2d90, 0x3d5e, 0xb019, 0xf076, 0x0, 0x0);
        gbc.writeMem(0x6262, { 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc335, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0120
        gbc.setState(0x39c5, 0xf72c, 0x9cb0, 0x4cf7, 0x13d8, 0xda5d, 0x1, 0x0);
        gbc.writeMem(0x39c5, { 0xa7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf72c, gbc.sp());
        EXPECT(0x39c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0121
        gbc.setState(0x336b, 0x8fef, 0x3c80, 0xbec5, 0x4a6a, 0x212, 0x0, 0x1);
        gbc.writeMem(0x336b, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8fef, gbc.sp());
        EXPECT(0x336c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0122
        gbc.setState(0x2754, 0x585f, 0x8b70, 0x8f1b, 0x9dc9, 0x8f14, 0x1, 0x1);
        gbc.writeMem(0x2754, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x585f, gbc.sp());
        EXPECT(0x2755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0123
        gbc.setState(0x31aa, 0x4b2e, 0x44a0, 0x3fa3, 0xf277, 0x834c, 0x0, 0x0);
        gbc.writeMem(0x31aa, { 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4b2e, gbc.sp());
        EXPECT(0x31ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0124
        gbc.setState(0xc1ff, 0xfa15, 0xdf50, 0x8e67, 0xe091, 0x16bb, 0x1, 0x1);
        gbc.writeMem(0xc1ff, { 0xa7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xfa15, gbc.sp());
        EXPECT(0xc200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc1ff));
        // A7 0125
        gbc.setState(0x6c10, 0xa8c3, 0x3980, 0x1906, 0x790b, 0x89f9, 0x1, 0x1);
        gbc.writeMem(0x6c10, { 0xa7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa8c3, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0126
        gbc.setState(0x286a, 0x77be, 0xa450, 0xd0da, 0x3b2a, 0x7443, 0x1, 0x0);
        gbc.writeMem(0x286a, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x77be, gbc.sp());
        EXPECT(0x286b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0128
        gbc.setState(0x84ab, 0xa85e, 0xf6e0, 0x8267, 0x985f, 0xb980, 0x1, 0x1);
        gbc.writeMem(0x84ab, { 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa85e, gbc.sp());
        EXPECT(0x84ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x84ab));
        // A7 012A
        gbc.setState(0xcade, 0xec38, 0x2ef0, 0x8aff, 0x30aa, 0xe460, 0x1, 0x1);
        gbc.writeMem(0xcade, { 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xec38, gbc.sp());
        EXPECT(0xcadf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcade));
        // A7 012B
        gbc.setState(0x56e5, 0x27c1, 0xa370, 0xc67a, 0x4656, 0xcdef, 0x1, 0x0);
        gbc.writeMem(0x56e5, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x27c1, gbc.sp());
        EXPECT(0x56e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 012C
        gbc.setState(0x9f08, 0xc0c1, 0xcdf0, 0xc82e, 0xac74, 0x63f5, 0x0, 0x1);
        gbc.writeMem(0x9f08, { 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0x9f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9f08));
        // A7 012D
        gbc.setState(0xa4cb, 0xf77e, 0x1f50, 0x2fc7, 0x863e, 0x2d9, 0x1, 0x1);
        gbc.writeMem(0xa4cb, { 0xa7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf77e, gbc.sp());
        EXPECT(0xa4cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa4cb));
        // A7 012E
        gbc.setState(0x5d88, 0xfcc3, 0xd60, 0x2bdd, 0x4808, 0x550e, 0x1, 0x0);
        gbc.writeMem(0x5d88, { 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfcc3, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 012F
        gbc.setState(0x4c2a, 0x63c6, 0x5640, 0xad48, 0x77a2, 0x44f8, 0x0, 0x1);
        gbc.writeMem(0x4c2a, { 0xa7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x63c6, gbc.sp());
        EXPECT(0x4c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0130
        gbc.setState(0xa734, 0xc108, 0x8280, 0x82fc, 0xbe63, 0xb5e3, 0x0, 0x0);
        gbc.writeMem(0xa734, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc108, gbc.sp());
        EXPECT(0xa735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa734));
        // A7 0131
        gbc.setState(0xc0bd, 0x9c62, 0xe600, 0x2def, 0xe0e9, 0xad11, 0x1, 0x1);
        gbc.writeMem(0xc0bd, { 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xc0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc0bd));
        // A7 0132
        gbc.setState(0x8029, 0xc028, 0x8140, 0x40d3, 0x8c76, 0xd496, 0x0, 0x0);
        gbc.writeMem(0x8029, { 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc028, gbc.sp());
        EXPECT(0x802a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8029));
        // A7 0133
        gbc.setState(0xaa9b, 0xb47e, 0xa880, 0x3137, 0x6d82, 0x7e38, 0x0, 0x1);
        gbc.writeMem(0xaa9b, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb47e, gbc.sp());
        EXPECT(0xaa9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaa9b));
        // A7 0134
        gbc.setState(0x96f6, 0x4c98, 0x5e40, 0xe05d, 0x1bba, 0x2948, 0x0, 0x0);
        gbc.writeMem(0x96f6, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4c98, gbc.sp());
        EXPECT(0x96f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x96f6));
        // A7 0135
        gbc.setState(0x3dec, 0x5f19, 0x9150, 0x27b, 0x2349, 0x299a, 0x0, 0x0);
        gbc.writeMem(0x3dec, { 0xa7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5f19, gbc.sp());
        EXPECT(0x3ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0136
        gbc.setState(0x3478, 0xe4a9, 0x5e20, 0xb578, 0x90bc, 0xd935, 0x1, 0x0);
        gbc.writeMem(0x3478, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe4a9, gbc.sp());
        EXPECT(0x3479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0137
        gbc.setState(0x50bc, 0x440, 0xb570, 0x6f51, 0xa582, 0xde52, 0x0, 0x1);
        gbc.writeMem(0x50bc, { 0xa7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x440, gbc.sp());
        EXPECT(0x50bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0138
        gbc.setState(0x98c4, 0x59d1, 0x50d0, 0x5fc5, 0xfbdc, 0x4090, 0x1, 0x0);
        gbc.writeMem(0x98c4, { 0xa7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x59d1, gbc.sp());
        EXPECT(0x98c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x98c4));
        // A7 0139
        gbc.setState(0x7dc, 0x880b, 0x5da0, 0xcc91, 0x6bfd, 0x9565, 0x0, 0x1);
        gbc.writeMem(0x7dc, { 0xa7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x880b, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 013A
        gbc.setState(0x7ac2, 0x802e, 0xc3c0, 0x6a91, 0x6d96, 0x422d, 0x1, 0x0);
        gbc.writeMem(0x7ac2, { 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x802e, gbc.sp());
        EXPECT(0x7ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 013B
        gbc.setState(0x60f3, 0x31ed, 0x3c50, 0xff37, 0xbe31, 0x22d4, 0x0, 0x0);
        gbc.writeMem(0x60f3, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x31ed, gbc.sp());
        EXPECT(0x60f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 013C
        gbc.setState(0xb371, 0xa39d, 0xff70, 0x9f5b, 0x4f6c, 0x26a1, 0x0, 0x1);
        gbc.writeMem(0xb371, { 0xa7 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa39d, gbc.sp());
        EXPECT(0xb372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb371));
        // A7 013D
        gbc.setState(0x3a1a, 0x5fbd, 0x8840, 0xb382, 0xeb7d, 0x585f, 0x0, 0x0);
        gbc.writeMem(0x3a1a, { 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5fbd, gbc.sp());
        EXPECT(0x3a1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 013E
        gbc.setState(0x8fb2, 0x343d, 0x8e70, 0x9ca8, 0xed30, 0x5a46, 0x0, 0x1);
        gbc.writeMem(0x8fb2, { 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x343d, gbc.sp());
        EXPECT(0x8fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8fb2));
        // A7 013F
        gbc.setState(0x4e3e, 0x70fe, 0xd960, 0x4b40, 0x9584, 0x64ef, 0x1, 0x1);
        gbc.writeMem(0x4e3e, { 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x70fe, gbc.sp());
        EXPECT(0x4e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0140
        gbc.setState(0xc9a0, 0x455c, 0xbb70, 0x930f, 0xda23, 0x1ad5, 0x1, 0x0);
        gbc.writeMem(0xc9a0, { 0xa7 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x455c, gbc.sp());
        EXPECT(0xc9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc9a0));
        // A7 0141
        gbc.setState(0x30c7, 0x837b, 0xa8b0, 0x2229, 0xe5ce, 0x6338, 0x0, 0x0);
        gbc.writeMem(0x30c7, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x837b, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0142
        gbc.setState(0xba9d, 0x4281, 0xf8e0, 0x5e07, 0xefac, 0x65b7, 0x0, 0x0);
        gbc.writeMem(0xba9d, { 0xa7 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4281, gbc.sp());
        EXPECT(0xba9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xba9d));
        // A7 0143
        gbc.setState(0x16fd, 0x5ad6, 0xd040, 0xa6ba, 0xd5ff, 0x14a7, 0x1, 0x0);
        gbc.writeMem(0x16fd, { 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5ad6, gbc.sp());
        EXPECT(0x16fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0144
        gbc.setState(0x307f, 0xc22f, 0x12a0, 0x61e6, 0xed3c, 0xd77a, 0x0, 0x1);
        gbc.writeMem(0x307f, { 0xa7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc22f, gbc.sp());
        EXPECT(0x3080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0145
        gbc.setState(0xcc2a, 0x2be, 0x7510, 0x337a, 0x9d07, 0x7b6d, 0x0, 0x1);
        gbc.writeMem(0xcc2a, { 0xa7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcc2a));
        // A7 0146
        gbc.setState(0xb264, 0x30f0, 0xcfb0, 0xb6c9, 0x3859, 0x67bc, 0x1, 0x1);
        gbc.writeMem(0xb264, { 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x30f0, gbc.sp());
        EXPECT(0xb265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb264));
        // A7 0147
        gbc.setState(0x4a3, 0x203d, 0x9230, 0xf955, 0xeb61, 0x157d, 0x1, 0x1);
        gbc.writeMem(0x4a3, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x203d, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0148
        gbc.setState(0x202b, 0xd640, 0x9630, 0x8674, 0xc925, 0x387f, 0x0, 0x0);
        gbc.writeMem(0x202b, { 0xa7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x202c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0149
        gbc.setState(0xee33, 0x5962, 0xfc80, 0x2fe8, 0xd8e1, 0x5386, 0x0, 0x0);
        gbc.writeMem(0xee33, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5962, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee33));
        // A7 014A
        gbc.setState(0xd0b8, 0x48a1, 0x9d0, 0x1283, 0xc366, 0x8270, 0x0, 0x0);
        gbc.writeMem(0xd0b8, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x48a1, gbc.sp());
        EXPECT(0xd0b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd0b8));
        // A7 014B
        gbc.setState(0x1b7a, 0x988d, 0xfc70, 0x2b96, 0x2148, 0xad56, 0x1, 0x1);
        gbc.writeMem(0x1b7a, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x988d, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 014C
        gbc.setState(0xa1b9, 0xa0fa, 0xc990, 0xf931, 0xdb6a, 0x5d17, 0x1, 0x0);
        gbc.writeMem(0xa1b9, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa0fa, gbc.sp());
        EXPECT(0xa1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa1b9));
        // A7 014D
        gbc.setState(0x9ff8, 0x2ac2, 0xe8a0, 0x185b, 0x11f, 0x3cba, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2ac2, gbc.sp());
        EXPECT(0x9ff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9ff8));
        // A7 014E
        gbc.setState(0x6b6d, 0xd98d, 0xc690, 0x7037, 0xeeb5, 0x681d, 0x1, 0x1);
        gbc.writeMem(0x6b6d, { 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd98d, gbc.sp());
        EXPECT(0x6b6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 014F
        gbc.setState(0xce75, 0xf97, 0x720, 0x4f1, 0x56ea, 0x222b, 0x1, 0x0);
        gbc.writeMem(0xce75, { 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xce76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xce75));
        // A7 0150
        gbc.setState(0x950d, 0x9b07, 0x4fa0, 0xdd46, 0x408a, 0xc871, 0x1, 0x1);
        gbc.writeMem(0x950d, { 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b07, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x950d));
        // A7 0151
        gbc.setState(0x4a02, 0xd5e9, 0x760, 0x3a2b, 0x41a9, 0xf980, 0x1, 0x1);
        gbc.writeMem(0x4a02, { 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd5e9, gbc.sp());
        EXPECT(0x4a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0152
        gbc.setState(0x3e40, 0xd67a, 0x5490, 0xacca, 0x4aa0, 0x611f, 0x0, 0x1);
        gbc.writeMem(0x3e40, { 0xa7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd67a, gbc.sp());
        EXPECT(0x3e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0153
        gbc.setState(0x57b4, 0xa349, 0x8b90, 0xa7ef, 0x1604, 0xde50, 0x1, 0x1);
        gbc.writeMem(0x57b4, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa349, gbc.sp());
        EXPECT(0x57b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0154
        gbc.setState(0xe823, 0x40dd, 0x3ce0, 0xe17e, 0xdaaa, 0xa4fb, 0x0, 0x1);
        gbc.writeMem(0xe823, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x40dd, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe823));
        // A7 0155
        gbc.setState(0xd249, 0x4b9d, 0xc060, 0x594f, 0x1675, 0xc0e0, 0x0, 0x0);
        gbc.writeMem(0xd249, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd249));
        // A7 0156
        gbc.setState(0xabfc, 0x4c91, 0xcec0, 0x5c85, 0x3b90, 0x491e, 0x1, 0x1);
        gbc.writeMem(0xabfc, { 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4c91, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xabfc));
        // A7 0159
        gbc.setState(0x5cfe, 0x71fe, 0xd980, 0x2d6c, 0xd601, 0x867, 0x1, 0x1);
        gbc.writeMem(0x5cfe, { 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x71fe, gbc.sp());
        EXPECT(0x5cff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 015A
        gbc.setState(0x177, 0xa4d3, 0x2ee0, 0xe04f, 0x75a1, 0x8574, 0x1, 0x0);
        gbc.writeMem(0x177, { 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 015B
        gbc.setState(0x7f6f, 0x97c2, 0x9c70, 0x5bcd, 0x9fb5, 0x63b2, 0x0, 0x0);
        gbc.writeMem(0x7f6f, { 0xa7 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x97c2, gbc.sp());
        EXPECT(0x7f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 015C
        gbc.setState(0xb6a2, 0x19a0, 0xcb40, 0x2a0f, 0x486c, 0x880e, 0x0, 0x1);
        gbc.writeMem(0xb6a2, { 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0xb6a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb6a2));
        // A7 015D
        gbc.setState(0xa8d7, 0x1ce3, 0x19a0, 0x83ef, 0x30b, 0x9907, 0x1, 0x0);
        gbc.writeMem(0xa8d7, { 0xa7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1ce3, gbc.sp());
        EXPECT(0xa8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa8d7));
        // A7 015E
        gbc.setState(0x2da9, 0xd317, 0x2180, 0x7ed2, 0x6ae6, 0xd24b, 0x1, 0x0);
        gbc.writeMem(0x2da9, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd317, gbc.sp());
        EXPECT(0x2daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 015F
        gbc.setState(0x4ec3, 0xa585, 0xa110, 0xd32, 0xca2a, 0x2842, 0x0, 0x0);
        gbc.writeMem(0x4ec3, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa585, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0160
        gbc.setState(0x6d83, 0xfb79, 0xe840, 0x7652, 0x6cdd, 0x5f79, 0x0, 0x1);
        gbc.writeMem(0x6d83, { 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0161
        gbc.setState(0xfbf, 0x13d7, 0x9180, 0x5003, 0xb692, 0xe612, 0x1, 0x1);
        gbc.writeMem(0xfbf, { 0xa7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x13d7, gbc.sp());
        EXPECT(0xfc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0162
        gbc.setState(0x442a, 0x5f15, 0x40b0, 0xc398, 0x2f1e, 0x1a2a, 0x0, 0x1);
        gbc.writeMem(0x442a, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5f15, gbc.sp());
        EXPECT(0x442b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0163
        gbc.setState(0x1f29, 0x777f, 0x8a20, 0x358d, 0x6178, 0x3199, 0x0, 0x0);
        gbc.writeMem(0x1f29, { 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x777f, gbc.sp());
        EXPECT(0x1f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0164
        gbc.setState(0xe1b5, 0xb414, 0xbfc0, 0xefd2, 0x2606, 0x4c74, 0x1, 0x1);
        gbc.writeMem(0xe1b5, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb414, gbc.sp());
        EXPECT(0xe1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe1b5));
        // A7 0165
        gbc.setState(0x6f7c, 0x87fb, 0x330, 0x3f55, 0x4e1a, 0xab5e, 0x0, 0x0);
        gbc.writeMem(0x6f7c, { 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x87fb, gbc.sp());
        EXPECT(0x6f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0166
        gbc.setState(0xed29, 0xbf6d, 0x30e0, 0x9e31, 0xa73f, 0xd264, 0x0, 0x1);
        gbc.writeMem(0xed29, { 0xa7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbf6d, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xed29));
        // A7 0167
        gbc.setState(0x5359, 0xfa49, 0x9900, 0xf1e2, 0xd07d, 0xf1d2, 0x0, 0x0);
        gbc.writeMem(0x5359, { 0xa7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfa49, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0168
        gbc.setState(0xe7d9, 0x7c56, 0xc70, 0x4a26, 0x6b59, 0xf678, 0x0, 0x1);
        gbc.writeMem(0xe7d9, { 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7c56, gbc.sp());
        EXPECT(0xe7da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7d9));
        // A7 0169
        gbc.setState(0x9014, 0x415a, 0xc870, 0x2249, 0xf139, 0xa2a6, 0x1, 0x1);
        gbc.writeMem(0x9014, { 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x415a, gbc.sp());
        EXPECT(0x9015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9014));
        // A7 016A
        gbc.setState(0x701b, 0xccef, 0xc2e0, 0x38df, 0x99b7, 0xc3e1, 0x1, 0x1);
        gbc.writeMem(0x701b, { 0xa7 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0x701c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 016C
        gbc.setState(0xe91d, 0xa44b, 0xb5a0, 0xe92a, 0xa2a, 0xef75, 0x0, 0x0);
        gbc.writeMem(0xe91d, { 0xa7 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa44b, gbc.sp());
        EXPECT(0xe91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe91d));
        // A7 016D
        gbc.setState(0xc933, 0xac51, 0x0, 0x2237, 0x45c1, 0x5585, 0x1, 0x1);
        gbc.writeMem(0xc933, { 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xc934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc933));
        // A7 016F
        gbc.setState(0xb6cd, 0x69d6, 0x930, 0xa1fe, 0x659c, 0x3468, 0x1, 0x1);
        gbc.writeMem(0xb6cd, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x69d6, gbc.sp());
        EXPECT(0xb6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb6cd));
        // A7 0170
        gbc.setState(0xb8f4, 0x494b, 0x6a90, 0x85ed, 0x526, 0xb606, 0x0, 0x1);
        gbc.writeMem(0xb8f4, { 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x494b, gbc.sp());
        EXPECT(0xb8f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb8f4));
        // A7 0171
        gbc.setState(0x4d9b, 0x34b, 0x8700, 0x823f, 0xa70d, 0x3e6c, 0x1, 0x0);
        gbc.writeMem(0x4d9b, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x34b, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0172
        gbc.setState(0xecdc, 0x483c, 0x110, 0xa437, 0xabeb, 0xde1d, 0x0, 0x0);
        gbc.writeMem(0xecdc, { 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x483c, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecdc));
        // A7 0173
        gbc.setState(0x4536, 0xd5f3, 0x9c0, 0x82c6, 0xb264, 0x586b, 0x0, 0x1);
        gbc.writeMem(0x4536, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd5f3, gbc.sp());
        EXPECT(0x4537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0174
        gbc.setState(0x3586, 0x768, 0x94a0, 0x71e4, 0x753f, 0x71ac, 0x0, 0x1);
        gbc.writeMem(0x3586, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x768, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0175
        gbc.setState(0x165b, 0xa083, 0x1210, 0x6eaf, 0xa519, 0xaeb6, 0x1, 0x1);
        gbc.writeMem(0x165b, { 0xa7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa083, gbc.sp());
        EXPECT(0x165c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0176
        gbc.setState(0xee5c, 0x8c07, 0x5f0, 0x368d, 0x5171, 0xe9a0, 0x1, 0x0);
        gbc.writeMem(0xee5c, { 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0xee5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee5c));
        // A7 0177
        gbc.setState(0xd8f8, 0xe8f5, 0xcd30, 0xd3bf, 0x9c43, 0x4363, 0x1, 0x0);
        gbc.writeMem(0xd8f8, { 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe8f5, gbc.sp());
        EXPECT(0xd8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd8f8));
        // A7 0178
        gbc.setState(0xdca, 0xfb49, 0xaf50, 0x58f4, 0x866e, 0x622c, 0x1, 0x1);
        gbc.writeMem(0xdca, { 0xa7 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfb49, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0179
        gbc.setState(0x2c7, 0xa6a4, 0xe320, 0xc7d3, 0x5561, 0x597b, 0x1, 0x1);
        gbc.writeMem(0x2c7, { 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa6a4, gbc.sp());
        EXPECT(0x2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 017A
        gbc.setState(0x3d68, 0xcd1c, 0xb070, 0x50d3, 0x2b8f, 0xdc98, 0x0, 0x1);
        gbc.writeMem(0x3d68, { 0xa7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcd1c, gbc.sp());
        EXPECT(0x3d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 017B
        gbc.setState(0x17f2, 0xe355, 0xa180, 0xe8ba, 0xfcad, 0xaaec, 0x1, 0x0);
        gbc.writeMem(0x17f2, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0x17f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 017C
        gbc.setState(0x9953, 0x3f82, 0x3810, 0x2a4d, 0xf5c5, 0x25da, 0x0, 0x0);
        gbc.writeMem(0x9953, { 0xa7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f82, gbc.sp());
        EXPECT(0x9954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9953));
        // A7 017D
        gbc.setState(0xb55f, 0x9b, 0x4000, 0x932, 0x445a, 0x6493, 0x1, 0x0);
        gbc.writeMem(0xb55f, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9b, gbc.sp());
        EXPECT(0xb560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb55f));
        // A7 017E
        gbc.setState(0xd69e, 0x1175, 0xf1d0, 0xdc42, 0x29fe, 0x5df5, 0x1, 0x1);
        gbc.writeMem(0xd69e, { 0xa7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1175, gbc.sp());
        EXPECT(0xd69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd69e));
        // A7 017F
        gbc.setState(0xc3ee, 0x46e0, 0x6210, 0xbddd, 0x6d39, 0x22eb, 0x0, 0x0);
        gbc.writeMem(0xc3ee, { 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x46e0, gbc.sp());
        EXPECT(0xc3ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc3ee));
        // A7 0180
        gbc.setState(0x5d60, 0xf607, 0xa970, 0x734a, 0x988, 0xa5d6, 0x1, 0x0);
        gbc.writeMem(0x5d60, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf607, gbc.sp());
        EXPECT(0x5d61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0181
        gbc.setState(0xa133, 0x9da5, 0x1710, 0x3ad, 0x2b46, 0x6549, 0x1, 0x1);
        gbc.writeMem(0xa133, { 0xa7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x9da5, gbc.sp());
        EXPECT(0xa134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa133));
        // A7 0182
        gbc.setState(0xc36, 0x6ae5, 0x3500, 0x2a94, 0x27d1, 0x2034, 0x0, 0x1);
        gbc.writeMem(0xc36, { 0xa7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6ae5, gbc.sp());
        EXPECT(0xc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0183
        gbc.setState(0x35e3, 0xd795, 0xc020, 0x3a04, 0x6bcb, 0x270a, 0x1, 0x0);
        gbc.writeMem(0x35e3, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd795, gbc.sp());
        EXPECT(0x35e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0184
        gbc.setState(0xee01, 0xef50, 0x9be0, 0x35e5, 0xbc4c, 0xa028, 0x1, 0x1);
        gbc.writeMem(0xee01, { 0xa7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xef50, gbc.sp());
        EXPECT(0xee02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee01));
        // A7 0185
        gbc.setState(0xc8ab, 0x47ea, 0x2320, 0x7a3e, 0x5601, 0x1c7d, 0x0, 0x1);
        gbc.writeMem(0xc8ab, { 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x47ea, gbc.sp());
        EXPECT(0xc8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc8ab));
        // A7 0186
        gbc.setState(0xa05e, 0xe698, 0xd1e0, 0x65bd, 0xbe2c, 0xa966, 0x1, 0x1);
        gbc.writeMem(0xa05e, { 0xa7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe698, gbc.sp());
        EXPECT(0xa05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa05e));
        // A7 0187
        gbc.setState(0x2881, 0x392b, 0xa720, 0xdd74, 0xc274, 0xcba0, 0x0, 0x1);
        gbc.writeMem(0x2881, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x392b, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0188
        gbc.setState(0x4b9d, 0x8218, 0x8130, 0xa146, 0xc085, 0xeaaa, 0x1, 0x0);
        gbc.writeMem(0x4b9d, { 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8218, gbc.sp());
        EXPECT(0x4b9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0189
        gbc.setState(0x693, 0xd04d, 0x4c0, 0xbc3a, 0xacd6, 0x6ca7, 0x1, 0x1);
        gbc.writeMem(0x693, { 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd04d, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 018A
        gbc.setState(0x78ed, 0xb323, 0xb30, 0x57cb, 0x6225, 0x4a84, 0x1, 0x1);
        gbc.writeMem(0x78ed, { 0xa7 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb323, gbc.sp());
        EXPECT(0x78ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 018B
        gbc.setState(0x6032, 0x6f08, 0xe4d0, 0x21ae, 0x1b16, 0xb580, 0x0, 0x1);
        gbc.writeMem(0x6032, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6f08, gbc.sp());
        EXPECT(0x6033, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 018C
        gbc.setState(0x8a48, 0xf7b3, 0xebf0, 0xf9f4, 0x82db, 0x270e, 0x0, 0x0);
        gbc.writeMem(0x8a48, { 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf7b3, gbc.sp());
        EXPECT(0x8a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8a48));
        // A7 018D
        gbc.setState(0x5f01, 0x2bcd, 0xb840, 0x60d5, 0x2407, 0xde18, 0x1, 0x0);
        gbc.writeMem(0x5f01, { 0xa7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0x5f02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 018E
        gbc.setState(0x8d9c, 0x89b0, 0x87c0, 0x78ba, 0xfbb1, 0x28eb, 0x1, 0x0);
        gbc.writeMem(0x8d9c, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x89b0, gbc.sp());
        EXPECT(0x8d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8d9c));
        // A7 018F
        gbc.setState(0x4257, 0x910d, 0xf330, 0x418e, 0x6910, 0x9e1a, 0x0, 0x0);
        gbc.writeMem(0x4257, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x910d, gbc.sp());
        EXPECT(0x4258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0190
        gbc.setState(0xa3e4, 0xa67a, 0x3250, 0x211a, 0xb379, 0x15d3, 0x1, 0x1);
        gbc.writeMem(0xa3e4, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa67a, gbc.sp());
        EXPECT(0xa3e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa3e4));
        // A7 0191
        gbc.setState(0x6432, 0x28b6, 0x2f70, 0xc265, 0xe423, 0xc328, 0x1, 0x1);
        gbc.writeMem(0x6432, { 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x28b6, gbc.sp());
        EXPECT(0x6433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0192
        gbc.setState(0x2774, 0x6d80, 0x1b30, 0x75f9, 0x1ea0, 0xadbc, 0x0, 0x1);
        gbc.writeMem(0x2774, { 0xa7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6d80, gbc.sp());
        EXPECT(0x2775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0193
        gbc.setState(0xe705, 0x76b2, 0xa000, 0x15d5, 0x958b, 0x7f70, 0x1, 0x1);
        gbc.writeMem(0xe705, { 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x76b2, gbc.sp());
        EXPECT(0xe706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe705));
        // A7 0194
        gbc.setState(0x40d2, 0xffc7, 0xfe10, 0xdc15, 0xecdc, 0xe90, 0x1, 0x0);
        gbc.writeMem(0x40d2, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xffc7, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0195
        gbc.setState(0x6227, 0x1eda, 0x4090, 0x13d9, 0xf98a, 0x8f1f, 0x1, 0x0);
        gbc.writeMem(0x6227, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1eda, gbc.sp());
        EXPECT(0x6228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0196
        gbc.setState(0xd5c3, 0x7812, 0x9ec0, 0x4267, 0x1d90, 0x8860, 0x1, 0x0);
        gbc.writeMem(0xd5c3, { 0xa7 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7812, gbc.sp());
        EXPECT(0xd5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd5c3));
        // A7 0197
        gbc.setState(0xe0dd, 0x2bd8, 0xc540, 0xd146, 0x499b, 0x441d, 0x1, 0x0);
        gbc.writeMem(0xe0dd, { 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2bd8, gbc.sp());
        EXPECT(0xe0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe0dd));
        // A7 0198
        gbc.setState(0x5fcb, 0x38e7, 0x1cc0, 0xdfd6, 0x7b28, 0xfcc, 0x0, 0x1);
        gbc.writeMem(0x5fcb, { 0xa7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x38e7, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0199
        gbc.setState(0xc4f7, 0x25b1, 0x4e40, 0x6451, 0x7304, 0x1cb5, 0x0, 0x1);
        gbc.writeMem(0xc4f7, { 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x25b1, gbc.sp());
        EXPECT(0xc4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc4f7));
        // A7 019B
        gbc.setState(0x90b4, 0x49b6, 0x4c10, 0xbc0d, 0x8d9, 0x707e, 0x0, 0x1);
        gbc.writeMem(0x90b4, { 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x49b6, gbc.sp());
        EXPECT(0x90b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x90b4));
        // A7 019C
        gbc.setState(0x1c29, 0xbd43, 0x44d0, 0x6884, 0x9418, 0xde84, 0x1, 0x0);
        gbc.writeMem(0x1c29, { 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbd43, gbc.sp());
        EXPECT(0x1c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 019D
        gbc.setState(0x2cc7, 0xd22d, 0xb1b0, 0x56ae, 0x244a, 0x22dd, 0x0, 0x1);
        gbc.writeMem(0x2cc7, { 0xa7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd22d, gbc.sp());
        EXPECT(0x2cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 019E
        gbc.setState(0x4997, 0x8a12, 0x4630, 0xcf0c, 0x1b6c, 0x8139, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8a12, gbc.sp());
        EXPECT(0x4998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 019F
        gbc.setState(0x6dfe, 0xcfa2, 0x8240, 0x1c0f, 0xe6c6, 0xf9b0, 0x1, 0x0);
        gbc.writeMem(0x6dfe, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcfa2, gbc.sp());
        EXPECT(0x6dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01A0
        gbc.setState(0x542c, 0x57de, 0xa560, 0xfa1f, 0x68c7, 0x2a23, 0x1, 0x1);
        gbc.writeMem(0x542c, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x57de, gbc.sp());
        EXPECT(0x542d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01A1
        gbc.setState(0xc756, 0xf69b, 0x42c0, 0x3a0a, 0x4b29, 0x808b, 0x1, 0x0);
        gbc.writeMem(0xc756, { 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf69b, gbc.sp());
        EXPECT(0xc757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc756));
        // A7 01A2
        gbc.setState(0x5746, 0x1a75, 0x8bc0, 0xd768, 0xb39d, 0xce87, 0x1, 0x1);
        gbc.writeMem(0x5746, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1a75, gbc.sp());
        EXPECT(0x5747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01A3
        gbc.setState(0x8d86, 0x20c5, 0x4c20, 0x1840, 0x2906, 0xdb9b, 0x0, 0x0);
        gbc.writeMem(0x8d86, { 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x20c5, gbc.sp());
        EXPECT(0x8d87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8d86));
        // A7 01A4
        gbc.setState(0x5c71, 0x5e06, 0x2250, 0xad9b, 0x266, 0x44d8, 0x1, 0x1);
        gbc.writeMem(0x5c71, { 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5e06, gbc.sp());
        EXPECT(0x5c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01A5
        gbc.setState(0xe224, 0xc65e, 0x5d80, 0xbfc3, 0x4070, 0xa1c9, 0x1, 0x1);
        gbc.writeMem(0xe224, { 0xa7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc65e, gbc.sp());
        EXPECT(0xe225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe224));
        // A7 01A6
        gbc.setState(0xc16, 0x85e7, 0xd740, 0x28b3, 0x2c81, 0xda, 0x1, 0x1);
        gbc.writeMem(0xc16, { 0xa7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x85e7, gbc.sp());
        EXPECT(0xc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01A7
        gbc.setState(0x89cb, 0xabb2, 0x38b0, 0x18f3, 0xbce0, 0x39e5, 0x0, 0x1);
        gbc.writeMem(0x89cb, { 0xa7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xabb2, gbc.sp());
        EXPECT(0x89cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x89cb));
        // A7 01A8
        gbc.setState(0xb2a6, 0x825b, 0xb0f0, 0x5a21, 0x291c, 0x4eb8, 0x1, 0x0);
        gbc.writeMem(0xb2a6, { 0xa7 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x825b, gbc.sp());
        EXPECT(0xb2a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb2a6));
        // A7 01A9
        gbc.setState(0x6ea9, 0xe376, 0x6550, 0xb564, 0xfd04, 0x70da, 0x0, 0x0);
        gbc.writeMem(0x6ea9, { 0xa7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe376, gbc.sp());
        EXPECT(0x6eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01AA
        gbc.setState(0x2164, 0xbb67, 0x8490, 0x9690, 0xccae, 0x8d9c, 0x1, 0x0);
        gbc.writeMem(0x2164, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01AB
        gbc.setState(0x41b2, 0x1f5e, 0x44b0, 0x8491, 0x7733, 0x21ae, 0x1, 0x1);
        gbc.writeMem(0x41b2, { 0xa7 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1f5e, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01AC
        gbc.setState(0x77da, 0x4316, 0x9410, 0x93b5, 0x74, 0xe5e4, 0x1, 0x0);
        gbc.writeMem(0x77da, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4316, gbc.sp());
        EXPECT(0x77db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01AD
        gbc.setState(0x5614, 0x69bb, 0xab90, 0x9175, 0xf42e, 0x3004, 0x0, 0x0);
        gbc.writeMem(0x5614, { 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x69bb, gbc.sp());
        EXPECT(0x5615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01AE
        gbc.setState(0xac86, 0xb6f9, 0xbce0, 0x4c1e, 0xbc19, 0x9a26, 0x1, 0x0);
        gbc.writeMem(0xac86, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb6f9, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xac86));
        // A7 01AF
        gbc.setState(0x1adb, 0x9ded, 0xdfd0, 0x2c61, 0xf01, 0xf2f9, 0x0, 0x0);
        gbc.writeMem(0x1adb, { 0xa7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9ded, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01B0
        gbc.setState(0xe8f8, 0x6b6c, 0xca90, 0x8f27, 0xea4e, 0x459a, 0x1, 0x0);
        gbc.writeMem(0xe8f8, { 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6b6c, gbc.sp());
        EXPECT(0xe8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe8f8));
        // A7 01B1
        gbc.setState(0xe1b7, 0xd6e0, 0xfe70, 0xe27f, 0x1df0, 0xe163, 0x1, 0x1);
        gbc.writeMem(0xe1b7, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd6e0, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe1b7));
        // A7 01B2
        gbc.setState(0x1107, 0x580, 0x6af0, 0x323a, 0x123f, 0xbf9d, 0x1, 0x1);
        gbc.writeMem(0x1107, { 0xa7 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x580, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01B3
        gbc.setState(0x767, 0x99, 0x4a30, 0xad01, 0xcaaf, 0x68c0, 0x0, 0x0);
        gbc.writeMem(0x767, { 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x99, gbc.sp());
        EXPECT(0x768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01B4
        gbc.setState(0x7f62, 0xb1ea, 0xbcf0, 0x63f5, 0xbded, 0xc12e, 0x0, 0x1);
        gbc.writeMem(0x7f62, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb1ea, gbc.sp());
        EXPECT(0x7f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01B5
        gbc.setState(0x9e94, 0x1dde, 0x41c0, 0x677b, 0x732e, 0x998d, 0x0, 0x0);
        gbc.writeMem(0x9e94, { 0xa7 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0x9e95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9e94));
        // A7 01B6
        gbc.setState(0xc9f7, 0x6c7a, 0x7fb0, 0xbd45, 0x7032, 0xf155, 0x0, 0x0);
        gbc.writeMem(0xc9f7, { 0xa7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6c7a, gbc.sp());
        EXPECT(0xc9f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc9f7));
        // A7 01B7
        gbc.setState(0xb665, 0x42de, 0x9570, 0x71fb, 0x7a8a, 0x9980, 0x0, 0x0);
        gbc.writeMem(0xb665, { 0xa7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x42de, gbc.sp());
        EXPECT(0xb666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb665));
        // A7 01B8
        gbc.setState(0xce82, 0x39be, 0x7f30, 0x27b5, 0x62a, 0x5fb1, 0x1, 0x1);
        gbc.writeMem(0xce82, { 0xa7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x39be, gbc.sp());
        EXPECT(0xce83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xce82));
        // A7 01B9
        gbc.setState(0x8322, 0xa12, 0x8290, 0xdbca, 0xdc8f, 0x8f8a, 0x0, 0x1);
        gbc.writeMem(0x8322, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa12, gbc.sp());
        EXPECT(0x8323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8322));
        // A7 01BA
        gbc.setState(0xc6cd, 0xe14, 0x6b10, 0x15a3, 0xd965, 0xb82a, 0x1, 0x1);
        gbc.writeMem(0xc6cd, { 0xa7 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0xc6ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc6cd));
        // A7 01BB
        gbc.setState(0x7b3d, 0x4943, 0x4280, 0x3b1d, 0x53b5, 0x6747, 0x1, 0x0);
        gbc.writeMem(0x7b3d, { 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4943, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01BC
        gbc.setState(0x10e4, 0x6855, 0xddb0, 0x52d6, 0x672b, 0xd76d, 0x0, 0x0);
        gbc.writeMem(0x10e4, { 0xa7 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6855, gbc.sp());
        EXPECT(0x10e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01BD
        gbc.setState(0x89ce, 0x6319, 0x42f0, 0xeb3a, 0x528, 0x9816, 0x1, 0x0);
        gbc.writeMem(0x89ce, { 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6319, gbc.sp());
        EXPECT(0x89cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x89ce));
        // A7 01BE
        gbc.setState(0x69c1, 0xd5e1, 0x77e0, 0xf3ca, 0x2f1c, 0xe01a, 0x1, 0x0);
        gbc.writeMem(0x69c1, { 0xa7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd5e1, gbc.sp());
        EXPECT(0x69c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01BF
        gbc.setState(0xd5ff, 0xea2e, 0x2740, 0x9f2d, 0x9e30, 0x8fff, 0x0, 0x1);
        gbc.writeMem(0xd5ff, { 0xa7 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xea2e, gbc.sp());
        EXPECT(0xd600, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd5ff));
        // A7 01C0
        gbc.setState(0x1b3, 0xcee6, 0x7180, 0x3ac8, 0xbb95, 0x14c4, 0x0, 0x0);
        gbc.writeMem(0x1b3, { 0xa7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xcee6, gbc.sp());
        EXPECT(0x1b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01C1
        gbc.setState(0x5cc6, 0xb6c0, 0x64f0, 0x780b, 0x3d4f, 0x33d4, 0x1, 0x0);
        gbc.writeMem(0x5cc6, { 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0x5cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01C2
        gbc.setState(0x8e37, 0xda8e, 0x4b40, 0x4ce8, 0xb23b, 0x41c9, 0x1, 0x0);
        gbc.writeMem(0x8e37, { 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xda8e, gbc.sp());
        EXPECT(0x8e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8e37));
        // A7 01C3
        gbc.setState(0xc91f, 0xaae2, 0x3c30, 0x7471, 0xc2ee, 0x410c, 0x0, 0x0);
        gbc.writeMem(0xc91f, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xaae2, gbc.sp());
        EXPECT(0xc920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc91f));
        // A7 01C4
        gbc.setState(0x9026, 0xedea, 0xf000, 0x6a6d, 0xa8c0, 0xcdd2, 0x1, 0x1);
        gbc.writeMem(0x9026, { 0xa7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xedea, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9026));
        // A7 01C5
        gbc.setState(0x86f9, 0x13da, 0x55c0, 0x9a29, 0x5957, 0x8783, 0x0, 0x0);
        gbc.writeMem(0x86f9, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x13da, gbc.sp());
        EXPECT(0x86fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x86f9));
        // A7 01C6
        gbc.setState(0x237e, 0xb48, 0x53f0, 0x3d94, 0x13bb, 0x4349, 0x0, 0x0);
        gbc.writeMem(0x237e, { 0xa7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb48, gbc.sp());
        EXPECT(0x237f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01C7
        gbc.setState(0xe716, 0x1d8, 0xa6c0, 0x9077, 0x16d2, 0x4c46, 0x0, 0x1);
        gbc.writeMem(0xe716, { 0xa7 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0xe717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe716));
        // A7 01C8
        gbc.setState(0x13d5, 0x627d, 0x67d0, 0x7a39, 0x5bf3, 0x817c, 0x1, 0x0);
        gbc.writeMem(0x13d5, { 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0x13d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01C9
        gbc.setState(0xc6c5, 0x9c2d, 0x3570, 0x4a87, 0xf3c5, 0x1697, 0x1, 0x1);
        gbc.writeMem(0xc6c5, { 0xa7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0xc6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc6c5));
        // A7 01CB
        gbc.setState(0xe5f3, 0x4347, 0x6060, 0x860e, 0xd751, 0x3275, 0x1, 0x1);
        gbc.writeMem(0xe5f3, { 0xa7 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4347, gbc.sp());
        EXPECT(0xe5f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe5f3));
        // A7 01CC
        gbc.setState(0xad58, 0xd06e, 0x1df0, 0x3aec, 0x821, 0x1da7, 0x1, 0x0);
        gbc.writeMem(0xad58, { 0xa7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd06e, gbc.sp());
        EXPECT(0xad59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xad58));
        // A7 01CD
        gbc.setState(0x148, 0x871f, 0xd060, 0xf9f5, 0xc930, 0xbd45, 0x1, 0x0);
        gbc.writeMem(0x148, { 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x871f, gbc.sp());
        EXPECT(0x149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01CE
        gbc.setState(0x2642, 0x3732, 0x770, 0xbe26, 0xfab0, 0x6cf7, 0x0, 0x0);
        gbc.writeMem(0x2642, { 0xa7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0x2643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01CF
        gbc.setState(0x74d, 0x41fe, 0x8550, 0x66ae, 0x47aa, 0x4c2e, 0x1, 0x1);
        gbc.writeMem(0x74d, { 0xa7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0x74e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D0
        gbc.setState(0x6b52, 0x6852, 0xc9c0, 0xb229, 0xfa32, 0xcefe, 0x0, 0x0);
        gbc.writeMem(0x6b52, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0x6b53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D1
        gbc.setState(0xd70b, 0x1cf0, 0xc040, 0xcd8, 0x18fe, 0xc29a, 0x1, 0x1);
        gbc.writeMem(0xd70b, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1cf0, gbc.sp());
        EXPECT(0xd70c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd70b));
        // A7 01D2
        gbc.setState(0xe509, 0xb757, 0x16f0, 0xdc5c, 0x3893, 0x9b9b, 0x1, 0x0);
        gbc.writeMem(0xe509, { 0xa7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb757, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe509));
        // A7 01D3
        gbc.setState(0x5341, 0xd59a, 0xabe0, 0x638e, 0x8d9a, 0x6b70, 0x0, 0x0);
        gbc.writeMem(0x5341, { 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd59a, gbc.sp());
        EXPECT(0x5342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D4
        gbc.setState(0xe370, 0x2498, 0x9800, 0x4a88, 0x3a8, 0xd1d6, 0x0, 0x1);
        gbc.writeMem(0xe370, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0xe371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe370));
        // A7 01D5
        gbc.setState(0x1dbd, 0x9a1a, 0xe240, 0xb02e, 0x9472, 0x816, 0x1, 0x1);
        gbc.writeMem(0x1dbd, { 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9a1a, gbc.sp());
        EXPECT(0x1dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D6
        gbc.setState(0x26a6, 0x8163, 0x7170, 0x8487, 0x5011, 0x8094, 0x1, 0x0);
        gbc.writeMem(0x26a6, { 0xa7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8163, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D7
        gbc.setState(0xf0f, 0x2f21, 0x15b0, 0x275d, 0xdd96, 0x3165, 0x1, 0x0);
        gbc.writeMem(0xf0f, { 0xa7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2f21, gbc.sp());
        EXPECT(0xf10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01D8
        gbc.setState(0xd9fc, 0xa46b, 0x7980, 0x528d, 0xa930, 0xe390, 0x0, 0x0);
        gbc.writeMem(0xd9fc, { 0xa7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa46b, gbc.sp());
        EXPECT(0xd9fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd9fc));
        // A7 01D9
        gbc.setState(0x9c36, 0xb75, 0x5ed0, 0x7b00, 0x9d6f, 0xcd07, 0x1, 0x0);
        gbc.writeMem(0x9c36, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0x9c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9c36));
        // A7 01DA
        gbc.setState(0xe062, 0x5b52, 0xced0, 0x7def, 0x4517, 0x653a, 0x1, 0x1);
        gbc.writeMem(0xe062, { 0xa7 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5b52, gbc.sp());
        EXPECT(0xe063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe062));
        // A7 01DB
        gbc.setState(0x23fd, 0x4c3, 0xe090, 0x90a2, 0xaf9e, 0x22d, 0x0, 0x1);
        gbc.writeMem(0x23fd, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4c3, gbc.sp());
        EXPECT(0x23fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01DC
        gbc.setState(0x66a6, 0x4c52, 0xc390, 0xed7d, 0xa7b7, 0xab02, 0x0, 0x0);
        gbc.writeMem(0x66a6, { 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x66a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01DD
        gbc.setState(0x69ed, 0x95fe, 0x8ea0, 0x49f6, 0x5ab7, 0x4f4a, 0x0, 0x0);
        gbc.writeMem(0x69ed, { 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x95fe, gbc.sp());
        EXPECT(0x69ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01DE
        gbc.setState(0x856b, 0x931c, 0x2ff0, 0x147c, 0x6b3a, 0xcbe4, 0x0, 0x0);
        gbc.writeMem(0x856b, { 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x931c, gbc.sp());
        EXPECT(0x856c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x856b));
        // A7 01DF
        gbc.setState(0x6190, 0x41bd, 0xec10, 0x583d, 0xe8bc, 0x79b9, 0x0, 0x0);
        gbc.writeMem(0x6190, { 0xa7 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x41bd, gbc.sp());
        EXPECT(0x6191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E0
        gbc.setState(0xae20, 0x55fb, 0xbe40, 0x4fec, 0x210f, 0x8308, 0x1, 0x0);
        gbc.writeMem(0xae20, { 0xa7 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x55fb, gbc.sp());
        EXPECT(0xae21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xae20));
        // A7 01E1
        gbc.setState(0x5b75, 0x3bdc, 0x6ec0, 0x4415, 0x3f77, 0xb275, 0x0, 0x1);
        gbc.writeMem(0x5b75, { 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3bdc, gbc.sp());
        EXPECT(0x5b76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E2
        gbc.setState(0x305d, 0xc4f9, 0xbff0, 0x5940, 0xf354, 0x374, 0x0, 0x0);
        gbc.writeMem(0x305d, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc4f9, gbc.sp());
        EXPECT(0x305e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E3
        gbc.setState(0x4b98, 0x7a4, 0xf320, 0x6c7b, 0x371f, 0xe765, 0x0, 0x1);
        gbc.writeMem(0x4b98, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7a4, gbc.sp());
        EXPECT(0x4b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E4
        gbc.setState(0x5ca6, 0x9449, 0x4ef0, 0x87f4, 0x9558, 0x3141, 0x1, 0x0);
        gbc.writeMem(0x5ca6, { 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x5ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E5
        gbc.setState(0xe51f, 0x9e2f, 0xb620, 0xd9c7, 0x5f0a, 0xfc29, 0x0, 0x0);
        gbc.writeMem(0xe51f, { 0xa7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9e2f, gbc.sp());
        EXPECT(0xe520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe51f));
        // A7 01E6
        gbc.setState(0x3cc9, 0x1025, 0x5ce0, 0x306f, 0xacf8, 0x29ea, 0x1, 0x0);
        gbc.writeMem(0x3cc9, { 0xa7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1025, gbc.sp());
        EXPECT(0x3cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E7
        gbc.setState(0x4363, 0xc740, 0xfd50, 0x6c15, 0xa770, 0x46d3, 0x1, 0x0);
        gbc.writeMem(0x4363, { 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc740, gbc.sp());
        EXPECT(0x4364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01E8
        gbc.setState(0xa773, 0x8988, 0x26c0, 0x3547, 0x2a8f, 0x2a46, 0x1, 0x1);
        gbc.writeMem(0xa773, { 0xa7 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8988, gbc.sp());
        EXPECT(0xa774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa773));
        // A7 01E9
        gbc.setState(0xead8, 0x1413, 0xf00, 0x53e2, 0x7ab8, 0xf8f4, 0x0, 0x1);
        gbc.writeMem(0xead8, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1413, gbc.sp());
        EXPECT(0xead9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xead8));
        // A7 01EA
        gbc.setState(0xbc5, 0x2592, 0xa010, 0x37f4, 0x8aa2, 0x56e8, 0x1, 0x1);
        gbc.writeMem(0xbc5, { 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2592, gbc.sp());
        EXPECT(0xbc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01EB
        gbc.setState(0x3dcb, 0xdc31, 0x39d0, 0x360c, 0xcdc3, 0xa51b, 0x0, 0x0);
        gbc.writeMem(0x3dcb, { 0xa7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdc31, gbc.sp());
        EXPECT(0x3dcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01EC
        gbc.setState(0xeae2, 0xf950, 0xc0c0, 0x3d4c, 0x52b9, 0xd7a8, 0x0, 0x0);
        gbc.writeMem(0xeae2, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0xeae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xeae2));
        // A7 01ED
        gbc.setState(0x2a66, 0xe4b, 0x8320, 0xdd7, 0xf02e, 0xa3a1, 0x1, 0x1);
        gbc.writeMem(0x2a66, { 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x2a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01EE
        gbc.setState(0x4f4a, 0xf893, 0xaad0, 0xedda, 0xc0bd, 0x6bf5, 0x0, 0x1);
        gbc.writeMem(0x4f4a, { 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf893, gbc.sp());
        EXPECT(0x4f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01EF
        gbc.setState(0x4f61, 0xbb64, 0xeb70, 0xa1ce, 0xed3e, 0x7286, 0x0, 0x0);
        gbc.writeMem(0x4f61, { 0xa7 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbb64, gbc.sp());
        EXPECT(0x4f62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01F0
        gbc.setState(0x4fde, 0x34fc, 0xf720, 0x3715, 0x7192, 0x49f1, 0x0, 0x0);
        gbc.writeMem(0x4fde, { 0xa7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x34fc, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01F1
        gbc.setState(0xb180, 0x1bf2, 0xf4f0, 0x31b3, 0x7deb, 0x7e25, 0x0, 0x0);
        gbc.writeMem(0xb180, { 0xa7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1bf2, gbc.sp());
        EXPECT(0xb181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb180));
        // A7 01F2
        gbc.setState(0x328d, 0x34d8, 0x34e0, 0xdbd8, 0x4912, 0x9388, 0x0, 0x0);
        gbc.writeMem(0x328d, { 0xa7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x34d8, gbc.sp());
        EXPECT(0x328e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01F3
        gbc.setState(0xbdf7, 0x8055, 0x2d10, 0x4d10, 0x372a, 0x9c81, 0x1, 0x0);
        gbc.writeMem(0xbdf7, { 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8055, gbc.sp());
        EXPECT(0xbdf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbdf7));
        // A7 01F4
        gbc.setState(0xae04, 0x42e1, 0x860, 0xfd07, 0x6bcf, 0xca5f, 0x0, 0x1);
        gbc.writeMem(0xae04, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x42e1, gbc.sp());
        EXPECT(0xae05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xae04));
        // A7 01F5
        gbc.setState(0x2b06, 0x681f, 0x6110, 0x7bcb, 0x21e2, 0x841b, 0x1, 0x0);
        gbc.writeMem(0x2b06, { 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x681f, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01F6
        gbc.setState(0xc4cb, 0x5ca9, 0x2fe0, 0x7ed2, 0x1e3e, 0x1e86, 0x0, 0x1);
        gbc.writeMem(0xc4cb, { 0xa7 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5ca9, gbc.sp());
        EXPECT(0xc4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc4cb));
        // A7 01F7
        gbc.setState(0x5840, 0x7c0e, 0x7820, 0x4fcd, 0x3b3f, 0x8c31, 0x0, 0x1);
        gbc.writeMem(0x5840, { 0xa7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0x5841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01F9
        gbc.setState(0x3f0d, 0xf511, 0xf440, 0x8723, 0x6da2, 0xa5b6, 0x1, 0x1);
        gbc.writeMem(0x3f0d, { 0xa7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf511, gbc.sp());
        EXPECT(0x3f0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01FA
        gbc.setState(0x8564, 0x7e31, 0xa780, 0xc316, 0xddc4, 0xbc86, 0x0, 0x1);
        gbc.writeMem(0x8564, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7e31, gbc.sp());
        EXPECT(0x8565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8564));
        // A7 01FB
        gbc.setState(0x5991, 0xfd97, 0x6190, 0xb553, 0x22f, 0x6794, 0x1, 0x0);
        gbc.writeMem(0x5991, { 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xfd97, gbc.sp());
        EXPECT(0x5992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01FC
        gbc.setState(0x3120, 0xb772, 0x5d30, 0x7705, 0x5bca, 0x32c5, 0x1, 0x0);
        gbc.writeMem(0x3120, { 0xa7 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb772, gbc.sp());
        EXPECT(0x3121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 01FD
        gbc.setState(0xd4f6, 0x22cf, 0xa520, 0xf0a2, 0xd5ab, 0xa44e, 0x0, 0x1);
        gbc.writeMem(0xd4f6, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x22cf, gbc.sp());
        EXPECT(0xd4f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd4f6));
        // A7 01FE
        gbc.setState(0xeb1a, 0x76b6, 0xe650, 0x65a5, 0xa6f5, 0x4bbb, 0x1, 0x0);
        gbc.writeMem(0xeb1a, { 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x76b6, gbc.sp());
        EXPECT(0xeb1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xeb1a));
        // A7 01FF
        gbc.setState(0xc5fd, 0xa188, 0x5a00, 0x18f1, 0xf8c8, 0xa1df, 0x1, 0x0);
        gbc.writeMem(0xc5fd, { 0xa7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa188, gbc.sp());
        EXPECT(0xc5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc5fd));
        // A7 0200
        gbc.setState(0x493b, 0x1cf6, 0x82a0, 0xc7c8, 0x79b0, 0x663e, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1cf6, gbc.sp());
        EXPECT(0x493c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0201
        gbc.setState(0xc326, 0xa9ec, 0x9490, 0x14b9, 0xe071, 0x7142, 0x0, 0x1);
        gbc.writeMem(0xc326, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0xc327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc326));
        // A7 0202
        gbc.setState(0x6a1b, 0x8c38, 0x43b0, 0x7c0f, 0xe7d, 0x2ea, 0x1, 0x1);
        gbc.writeMem(0x6a1b, { 0xa7 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8c38, gbc.sp());
        EXPECT(0x6a1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0203
        gbc.setState(0x7a7b, 0x3879, 0xfbd0, 0xf218, 0x6a90, 0x90c7, 0x1, 0x1);
        gbc.writeMem(0x7a7b, { 0xa7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3879, gbc.sp());
        EXPECT(0x7a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0204
        gbc.setState(0x5a6e, 0xa388, 0x49c0, 0x8e75, 0x9e5c, 0x9d8d, 0x1, 0x1);
        gbc.writeMem(0x5a6e, { 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa388, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0205
        gbc.setState(0x94ae, 0x2f37, 0xc760, 0x6369, 0x4ed6, 0x3a22, 0x1, 0x0);
        gbc.writeMem(0x94ae, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2f37, gbc.sp());
        EXPECT(0x94af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x94ae));
        // A7 0206
        gbc.setState(0x625, 0xa0d5, 0x3c30, 0xd9c3, 0x2a5d, 0xd31c, 0x0, 0x1);
        gbc.writeMem(0x625, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa0d5, gbc.sp());
        EXPECT(0x626, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0207
        gbc.setState(0xd4e8, 0x6a7f, 0xa920, 0x96d3, 0xa740, 0x7008, 0x1, 0x1);
        gbc.writeMem(0xd4e8, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6a7f, gbc.sp());
        EXPECT(0xd4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd4e8));
        // A7 0208
        gbc.setState(0x9f1e, 0x480b, 0x6270, 0x9401, 0xc9e, 0x9fa1, 0x1, 0x1);
        gbc.writeMem(0x9f1e, { 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x480b, gbc.sp());
        EXPECT(0x9f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9f1e));
        // A7 0209
        gbc.setState(0x5307, 0xccec, 0xfb40, 0x6cf1, 0x585, 0xafdb, 0x1, 0x1);
        gbc.writeMem(0x5307, { 0xa7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xccec, gbc.sp());
        EXPECT(0x5308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 020A
        gbc.setState(0xe75f, 0x7c92, 0xaac0, 0x2d66, 0xf660, 0x285e, 0x1, 0x1);
        gbc.writeMem(0xe75f, { 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7c92, gbc.sp());
        EXPECT(0xe760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe75f));
        // A7 020B
        gbc.setState(0x8d7a, 0x202d, 0xa3a0, 0xb408, 0x88c7, 0x8789, 0x0, 0x1);
        gbc.writeMem(0x8d7a, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x202d, gbc.sp());
        EXPECT(0x8d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8d7a));
        // A7 020C
        gbc.setState(0x1c94, 0x696b, 0x3150, 0x5b06, 0x5f21, 0xc4ea, 0x1, 0x0);
        gbc.writeMem(0x1c94, { 0xa7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x696b, gbc.sp());
        EXPECT(0x1c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 020E
        gbc.setState(0x9097, 0x687d, 0xf6d0, 0x477d, 0xd43c, 0x37a1, 0x1, 0x0);
        gbc.writeMem(0x9097, { 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x687d, gbc.sp());
        EXPECT(0x9098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9097));
        // A7 020F
        gbc.setState(0xd62b, 0x5e2e, 0xbfe0, 0x56ef, 0x7ea1, 0x4d7e, 0x1, 0x1);
        gbc.writeMem(0xd62b, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5e2e, gbc.sp());
        EXPECT(0xd62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd62b));
        // A7 0210
        gbc.setState(0x14ec, 0x7920, 0x4920, 0x86df, 0x69b8, 0xfef8, 0x1, 0x0);
        gbc.writeMem(0x14ec, { 0xa7 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7920, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0211
        gbc.setState(0xb3ad, 0x17e0, 0x67e0, 0x2a13, 0xe35d, 0x208f, 0x1, 0x0);
        gbc.writeMem(0xb3ad, { 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x17e0, gbc.sp());
        EXPECT(0xb3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb3ad));
        // A7 0212
        gbc.setState(0xab71, 0xec41, 0xcc10, 0x2ff7, 0xcd19, 0x873d, 0x1, 0x1);
        gbc.writeMem(0xab71, { 0xa7 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xec41, gbc.sp());
        EXPECT(0xab72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xab71));
        // A7 0213
        gbc.setState(0xacd0, 0x98b1, 0x2cf0, 0xaa18, 0x2405, 0x3a1d, 0x0, 0x1);
        gbc.writeMem(0xacd0, { 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x98b1, gbc.sp());
        EXPECT(0xacd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xacd0));
        // A7 0214
        gbc.setState(0xd9ce, 0x2b67, 0x8400, 0x212c, 0xd2b, 0xac64, 0x0, 0x1);
        gbc.writeMem(0xd9ce, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2b67, gbc.sp());
        EXPECT(0xd9cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd9ce));
        // A7 0215
        gbc.setState(0x132f, 0xce5d, 0xf720, 0xc223, 0x412, 0xa8e1, 0x1, 0x0);
        gbc.writeMem(0x132f, { 0xa7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xce5d, gbc.sp());
        EXPECT(0x1330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0216
        gbc.setState(0x9813, 0xefdd, 0x650, 0xa4dd, 0x3929, 0x2102, 0x1, 0x0);
        gbc.writeMem(0x9813, { 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xefdd, gbc.sp());
        EXPECT(0x9814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9813));
        // A7 0217
        gbc.setState(0x266c, 0xd3cd, 0xd320, 0x13b2, 0xe7a7, 0x73a1, 0x1, 0x1);
        gbc.writeMem(0x266c, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd3cd, gbc.sp());
        EXPECT(0x266d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0218
        gbc.setState(0x910e, 0x434a, 0xfc50, 0xacb3, 0x8baa, 0x9dea, 0x0, 0x0);
        gbc.writeMem(0x910e, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x434a, gbc.sp());
        EXPECT(0x910f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x910e));
        // A7 0219
        gbc.setState(0xb3c6, 0x270a, 0x9920, 0x5003, 0xa0e1, 0xa2e7, 0x0, 0x0);
        gbc.writeMem(0xb3c6, { 0xa7 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0xb3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb3c6));
        // A7 021A
        gbc.setState(0x5630, 0xa204, 0x190, 0xffc6, 0xf4fc, 0x69a4, 0x1, 0x1);
        gbc.writeMem(0x5630, { 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa204, gbc.sp());
        EXPECT(0x5631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 021B
        gbc.setState(0x4ae4, 0x1128, 0x20f0, 0x269f, 0x1932, 0xb12b, 0x0, 0x0);
        gbc.writeMem(0x4ae4, { 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x4ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 021C
        gbc.setState(0xcc34, 0xed32, 0xd150, 0x7f7d, 0xca8c, 0xea36, 0x0, 0x0);
        gbc.writeMem(0xcc34, { 0xa7 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0xcc35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcc34));
        // A7 021D
        gbc.setState(0x44d6, 0x96fc, 0xd2b0, 0x8ac7, 0xe100, 0xa27d, 0x0, 0x0);
        gbc.writeMem(0x44d6, { 0xa7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x96fc, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 021E
        gbc.setState(0x177b, 0xc041, 0xd7b0, 0xf0f5, 0x7bf6, 0xb673, 0x0, 0x0);
        gbc.writeMem(0x177b, { 0xa7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc041, gbc.sp());
        EXPECT(0x177c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 021F
        gbc.setState(0xd8ae, 0xe960, 0xf960, 0xae0c, 0x8268, 0xd157, 0x0, 0x0);
        gbc.writeMem(0xd8ae, { 0xa7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe960, gbc.sp());
        EXPECT(0xd8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd8ae));
        // A7 0220
        gbc.setState(0x73be, 0xe043, 0xc80, 0xb339, 0x469c, 0x6be7, 0x1, 0x1);
        gbc.writeMem(0x73be, { 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0x73bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0221
        gbc.setState(0x9927, 0xac9a, 0x5050, 0xfbb8, 0xc58d, 0x450e, 0x0, 0x1);
        gbc.writeMem(0x9927, { 0xa7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xac9a, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9927));
        // A7 0222
        gbc.setState(0x5538, 0x6eb, 0x2de0, 0xf6a8, 0xc350, 0x67a0, 0x0, 0x1);
        gbc.writeMem(0x5538, { 0xa7 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6eb, gbc.sp());
        EXPECT(0x5539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0223
        gbc.setState(0x9453, 0x9516, 0xae90, 0x92d3, 0x1f50, 0x35fc, 0x1, 0x1);
        gbc.writeMem(0x9453, { 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x9454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9453));
        // A7 0224
        gbc.setState(0x5b48, 0xe84b, 0xa3b0, 0x3f54, 0x9f1, 0xb575, 0x1, 0x1);
        gbc.writeMem(0x5b48, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe84b, gbc.sp());
        EXPECT(0x5b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0225
        gbc.setState(0x305c, 0xef2c, 0x95a0, 0xb40f, 0x3701, 0x3eb8, 0x0, 0x1);
        gbc.writeMem(0x305c, { 0xa7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef2c, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0226
        gbc.setState(0x9b28, 0x92d, 0xc390, 0xe897, 0x3223, 0xe6f2, 0x1, 0x0);
        gbc.writeMem(0x9b28, { 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x92d, gbc.sp());
        EXPECT(0x9b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9b28));
        // A7 0227
        gbc.setState(0xbca7, 0x4d9a, 0xa380, 0xf8ef, 0xfd3d, 0xd81f, 0x0, 0x1);
        gbc.writeMem(0xbca7, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4d9a, gbc.sp());
        EXPECT(0xbca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbca7));
        // A7 0228
        gbc.setState(0x778a, 0xca9f, 0xc100, 0xd3a8, 0xdbbe, 0x281f, 0x0, 0x1);
        gbc.writeMem(0x778a, { 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xca9f, gbc.sp());
        EXPECT(0x778b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0229
        gbc.setState(0x4f18, 0xd7a, 0x30e0, 0x3126, 0x3270, 0x2461, 0x1, 0x0);
        gbc.writeMem(0x4f18, { 0xa7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xd7a, gbc.sp());
        EXPECT(0x4f19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 022A
        gbc.setState(0x6c1f, 0x44e8, 0x55f0, 0xfa8d, 0x21bc, 0xf70d, 0x0, 0x0);
        gbc.writeMem(0x6c1f, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0x6c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 022B
        gbc.setState(0xb958, 0xd6d1, 0x1560, 0xcae8, 0x9d13, 0x2267, 0x1, 0x0);
        gbc.writeMem(0xb958, { 0xa7 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd6d1, gbc.sp());
        EXPECT(0xb959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb958));
        // A7 022C
        gbc.setState(0xbd6, 0x982e, 0x90b0, 0xed99, 0x761d, 0x4c47, 0x1, 0x0);
        gbc.writeMem(0xbd6, { 0xa7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0xbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 022D
        gbc.setState(0x1428, 0xf72b, 0x50b0, 0xd1b4, 0x1af4, 0xfc06, 0x0, 0x0);
        gbc.writeMem(0x1428, { 0xa7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf72b, gbc.sp());
        EXPECT(0x1429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 022E
        gbc.setState(0x979e, 0xaa40, 0x5b0, 0x3a81, 0xe879, 0xa9e4, 0x1, 0x0);
        gbc.writeMem(0x979e, { 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xaa40, gbc.sp());
        EXPECT(0x979f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x979e));
        // A7 022F
        gbc.setState(0x58bc, 0x5e28, 0x3790, 0xc533, 0xdfda, 0xc6e3, 0x1, 0x0);
        gbc.writeMem(0x58bc, { 0xa7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x5e28, gbc.sp());
        EXPECT(0x58bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0230
        gbc.setState(0xce12, 0x18b6, 0x19a0, 0xe649, 0x1748, 0x5552, 0x0, 0x1);
        gbc.writeMem(0xce12, { 0xa7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0xce13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xce12));
        // A7 0231
        gbc.setState(0xd13f, 0x14ca, 0x1490, 0x343, 0x81d6, 0x5d58, 0x1, 0x0);
        gbc.writeMem(0xd13f, { 0xa7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x14ca, gbc.sp());
        EXPECT(0xd140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd13f));
        // A7 0232
        gbc.setState(0x78c2, 0xa95f, 0x5930, 0x3fd6, 0xa0fc, 0xf196, 0x0, 0x1);
        gbc.writeMem(0x78c2, { 0xa7 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa95f, gbc.sp());
        EXPECT(0x78c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0233
        gbc.setState(0xad52, 0x6752, 0x3a50, 0x97c8, 0x2134, 0x96c, 0x1, 0x1);
        gbc.writeMem(0xad52, { 0xa7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0xad53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xad52));
        // A7 0235
        gbc.setState(0xac48, 0x92ea, 0xf520, 0xe4bd, 0x1c60, 0x269c, 0x1, 0x0);
        gbc.writeMem(0xac48, { 0xa7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x92ea, gbc.sp());
        EXPECT(0xac49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xac48));
        // A7 0236
        gbc.setState(0x4e5c, 0x9f5a, 0x2f0, 0xa685, 0x1bb2, 0x98c9, 0x0, 0x0);
        gbc.writeMem(0x4e5c, { 0xa7 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0x4e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0237
        gbc.setState(0xb8fb, 0x307c, 0x3a0, 0xa783, 0xf93c, 0x7496, 0x1, 0x0);
        gbc.writeMem(0xb8fb, { 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0xb8fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb8fb));
        // A7 0238
        gbc.setState(0xa20c, 0xec34, 0x70, 0x8514, 0x5a7f, 0xfd9c, 0x0, 0x0);
        gbc.writeMem(0xa20c, { 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec34, gbc.sp());
        EXPECT(0xa20d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa20c));
        // A7 0239
        gbc.setState(0xe634, 0xd4cc, 0x8450, 0x3cbd, 0xa832, 0xeb59, 0x0, 0x1);
        gbc.writeMem(0xe634, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0xe635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe634));
        // A7 023A
        gbc.setState(0xa57a, 0x9400, 0x8b90, 0xa56b, 0x6e9d, 0xac62, 0x0, 0x0);
        gbc.writeMem(0xa57a, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9400, gbc.sp());
        EXPECT(0xa57b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa57a));
        // A7 023B
        gbc.setState(0x7cf7, 0xa2b8, 0x9740, 0x8d66, 0x3dc6, 0x81a0, 0x1, 0x1);
        gbc.writeMem(0x7cf7, { 0xa7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x7cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 023D
        gbc.setState(0x2b65, 0xd30e, 0xf180, 0x9bca, 0x520c, 0x475f, 0x1, 0x0);
        gbc.writeMem(0x2b65, { 0xa7 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0x2b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 023E
        gbc.setState(0x1252, 0x72d7, 0x3d80, 0xf457, 0x1d12, 0x4c91, 0x1, 0x0);
        gbc.writeMem(0x1252, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x72d7, gbc.sp());
        EXPECT(0x1253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 023F
        gbc.setState(0x5708, 0x7695, 0xbc50, 0x855f, 0x2c0f, 0xfe46, 0x1, 0x1);
        gbc.writeMem(0x5708, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7695, gbc.sp());
        EXPECT(0x5709, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0240
        gbc.setState(0xc735, 0xea8c, 0x1b90, 0x66bc, 0x1dae, 0x68dd, 0x1, 0x0);
        gbc.writeMem(0xc735, { 0xa7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xea8c, gbc.sp());
        EXPECT(0xc736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc735));
        // A7 0242
        gbc.setState(0x301, 0x3aab, 0xac00, 0xbdf9, 0xc6cc, 0x3984, 0x0, 0x0);
        gbc.writeMem(0x301, { 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3aab, gbc.sp());
        EXPECT(0x302, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0243
        gbc.setState(0x3b1, 0x4b11, 0x2810, 0xd86d, 0x9d71, 0x2113, 0x1, 0x1);
        gbc.writeMem(0x3b1, { 0xa7 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4b11, gbc.sp());
        EXPECT(0x3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0244
        gbc.setState(0x7889, 0xf201, 0x9c0, 0x6fb3, 0x10c3, 0xd2fa, 0x0, 0x0);
        gbc.writeMem(0x7889, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf201, gbc.sp());
        EXPECT(0x788a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0245
        gbc.setState(0xefcf, 0x2818, 0xf3b0, 0xee7b, 0xfc26, 0x6505, 0x1, 0x1);
        gbc.writeMem(0xefcf, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xefcf));
        // A7 0247
        gbc.setState(0x22cb, 0x868c, 0x5f70, 0x9e95, 0x684b, 0x8c7c, 0x0, 0x1);
        gbc.writeMem(0x22cb, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x868c, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0248
        gbc.setState(0xe869, 0x6f6d, 0xf10, 0x86ee, 0xb19, 0x6b6d, 0x0, 0x1);
        gbc.writeMem(0xe869, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6f6d, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe869));
        // A7 0249
        gbc.setState(0xc032, 0x933e, 0x3b70, 0xd1f3, 0x95c9, 0x6b3d, 0x1, 0x0);
        gbc.writeMem(0xc032, { 0xa7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0xc033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc032));
        // A7 024A
        gbc.setState(0xcdfa, 0xd07e, 0xf3a0, 0xe61f, 0xa16b, 0x39d3, 0x1, 0x0);
        gbc.writeMem(0xcdfa, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd07e, gbc.sp());
        EXPECT(0xcdfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcdfa));
        // A7 024B
        gbc.setState(0x9c3, 0x3d08, 0xc7b0, 0x9059, 0x4806, 0x8374, 0x1, 0x0);
        gbc.writeMem(0x9c3, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d08, gbc.sp());
        EXPECT(0x9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 024C
        gbc.setState(0xadca, 0x2961, 0x8660, 0x9ec, 0xa683, 0x793e, 0x1, 0x0);
        gbc.writeMem(0xadca, { 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2961, gbc.sp());
        EXPECT(0xadcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xadca));
        // A7 024D
        gbc.setState(0x1ddc, 0xf912, 0xc5c0, 0xef57, 0xeb9, 0xe892, 0x0, 0x1);
        gbc.writeMem(0x1ddc, { 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xf912, gbc.sp());
        EXPECT(0x1ddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 024E
        gbc.setState(0x9eb2, 0x516a, 0x2b90, 0x1307, 0x2621, 0x805e, 0x1, 0x0);
        gbc.writeMem(0x9eb2, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x516a, gbc.sp());
        EXPECT(0x9eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9eb2));
        // A7 024F
        gbc.setState(0xb6f, 0x7de3, 0x3320, 0xe4f5, 0xc50e, 0x404f, 0x1, 0x1);
        gbc.writeMem(0xb6f, { 0xa7 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7de3, gbc.sp());
        EXPECT(0xb70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0250
        gbc.setState(0x280, 0x7000, 0xbcd0, 0x9b75, 0xd534, 0xd130, 0x0, 0x1);
        gbc.writeMem(0x280, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7000, gbc.sp());
        EXPECT(0x281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0251
        gbc.setState(0xad83, 0x3b5e, 0x7730, 0xd72, 0x695d, 0x1741, 0x1, 0x1);
        gbc.writeMem(0xad83, { 0xa7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3b5e, gbc.sp());
        EXPECT(0xad84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xad83));
        // A7 0252
        gbc.setState(0xb3ea, 0x9fd, 0xe50, 0xa63b, 0x3df3, 0x4fa8, 0x0, 0x0);
        gbc.writeMem(0xb3ea, { 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9fd, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb3ea));
        // A7 0253
        gbc.setState(0xaa3c, 0x4ff4, 0x2a00, 0xa701, 0x899f, 0xc619, 0x0, 0x1);
        gbc.writeMem(0xaa3c, { 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0xaa3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaa3c));
        // A7 0254
        gbc.setState(0x9640, 0x6c3a, 0xf7e0, 0xfdca, 0x655e, 0x971f, 0x1, 0x1);
        gbc.writeMem(0x9640, { 0xa7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6c3a, gbc.sp());
        EXPECT(0x9641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9640));
        // A7 0255
        gbc.setState(0x7a74, 0x72c1, 0x53b0, 0xe1cc, 0xeb2, 0x54d9, 0x1, 0x0);
        gbc.writeMem(0x7a74, { 0xa7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x72c1, gbc.sp());
        EXPECT(0x7a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0256
        gbc.setState(0x36fa, 0xa304, 0x4040, 0xd5f7, 0xe05, 0xad82, 0x0, 0x1);
        gbc.writeMem(0x36fa, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa304, gbc.sp());
        EXPECT(0x36fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0257
        gbc.setState(0xc1df, 0x46c2, 0xad60, 0xf81a, 0xd65a, 0xf3b, 0x0, 0x1);
        gbc.writeMem(0xc1df, { 0xa7 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x46c2, gbc.sp());
        EXPECT(0xc1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc1df));
        // A7 0258
        gbc.setState(0x291d, 0x20f1, 0x74d0, 0x1893, 0x8aed, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0x291d, { 0xa7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x20f1, gbc.sp());
        EXPECT(0x291e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0259
        gbc.setState(0xcb36, 0xe672, 0xe20, 0xd14d, 0xaa42, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0xcb36, { 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe672, gbc.sp());
        EXPECT(0xcb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcb36));
        // A7 025A
        gbc.setState(0xc5c7, 0x3caf, 0xfc90, 0x4d50, 0xa204, 0x742f, 0x0, 0x0);
        gbc.writeMem(0xc5c7, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3caf, gbc.sp());
        EXPECT(0xc5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc5c7));
        // A7 025B
        gbc.setState(0x6d8e, 0x3e71, 0x62e0, 0xc1b7, 0x744, 0xa1f4, 0x1, 0x0);
        gbc.writeMem(0x6d8e, { 0xa7 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3e71, gbc.sp());
        EXPECT(0x6d8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 025C
        gbc.setState(0xb4a, 0xa72a, 0xe830, 0x7cc2, 0xe298, 0xcfa9, 0x0, 0x0);
        gbc.writeMem(0xb4a, { 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xa72a, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 025D
        gbc.setState(0x6a2b, 0x405e, 0x6e0, 0xff80, 0xdeb5, 0xfa1b, 0x1, 0x0);
        gbc.writeMem(0x6a2b, { 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x405e, gbc.sp());
        EXPECT(0x6a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 025E
        gbc.setState(0x5787, 0x290, 0x1d90, 0xa1b5, 0xd70e, 0xe6a5, 0x0, 0x1);
        gbc.writeMem(0x5787, { 0xa7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x290, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 025F
        gbc.setState(0x9b1e, 0xbdc1, 0x7a60, 0x66a9, 0x2e20, 0xce00, 0x1, 0x0);
        gbc.writeMem(0x9b1e, { 0xa7 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xbdc1, gbc.sp());
        EXPECT(0x9b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9b1e));
        // A7 0260
        gbc.setState(0x6c40, 0xd2a5, 0x63e0, 0x2b59, 0xa9ef, 0xa48c, 0x1, 0x1);
        gbc.writeMem(0x6c40, { 0xa7 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd2a5, gbc.sp());
        EXPECT(0x6c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0261
        gbc.setState(0xc6a9, 0xb766, 0xc9b0, 0x9e3e, 0x69d5, 0x2e5c, 0x0, 0x1);
        gbc.writeMem(0xc6a9, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb766, gbc.sp());
        EXPECT(0xc6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc6a9));
        // A7 0262
        gbc.setState(0xe0d0, 0xa94a, 0x82c0, 0x7ad1, 0xae4e, 0xcb30, 0x0, 0x0);
        gbc.writeMem(0xe0d0, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0xe0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe0d0));
        // A7 0263
        gbc.setState(0xe43d, 0xe018, 0x8200, 0xb05f, 0x207c, 0x304e, 0x1, 0x1);
        gbc.writeMem(0xe43d, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe018, gbc.sp());
        EXPECT(0xe43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe43d));
        // A7 0264
        gbc.setState(0x6f1, 0xa4a7, 0xd910, 0x5f20, 0xd70, 0x7827, 0x1, 0x0);
        gbc.writeMem(0x6f1, { 0xa7 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0265
        gbc.setState(0xdfc7, 0x3f07, 0xe190, 0xac09, 0xe04d, 0x50c8, 0x0, 0x1);
        gbc.writeMem(0xdfc7, { 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3f07, gbc.sp());
        EXPECT(0xdfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdfc7));
        // A7 0266
        gbc.setState(0xe7c2, 0x2aee, 0x8dc0, 0x2f8b, 0x62e, 0xb73a, 0x0, 0x1);
        gbc.writeMem(0xe7c2, { 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2aee, gbc.sp());
        EXPECT(0xe7c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7c2));
        // A7 0267
        gbc.setState(0x48f4, 0xe07e, 0x7b80, 0xc93d, 0xf36d, 0x8753, 0x0, 0x1);
        gbc.writeMem(0x48f4, { 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe07e, gbc.sp());
        EXPECT(0x48f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0268
        gbc.setState(0xd104, 0x2c07, 0xfdf0, 0xa7c7, 0x8b4b, 0xdf6b, 0x1, 0x1);
        gbc.writeMem(0xd104, { 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c07, gbc.sp());
        EXPECT(0xd105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd104));
        // A7 0269
        gbc.setState(0x4be2, 0xd70a, 0xd840, 0xf826, 0x9ff4, 0x64c5, 0x1, 0x1);
        gbc.writeMem(0x4be2, { 0xa7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd70a, gbc.sp());
        EXPECT(0x4be3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 026A
        gbc.setState(0xff1, 0x8426, 0x9430, 0x9913, 0xa85f, 0x9efe, 0x0, 0x0);
        gbc.writeMem(0xff1, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8426, gbc.sp());
        EXPECT(0xff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 026B
        gbc.setState(0x8ec4, 0x132c, 0x2270, 0x6675, 0xbd78, 0xcb17, 0x0, 0x1);
        gbc.writeMem(0x8ec4, { 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x132c, gbc.sp());
        EXPECT(0x8ec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8ec4));
        // A7 026C
        gbc.setState(0xb45a, 0x1478, 0x6c70, 0x6fff, 0x9837, 0x243b, 0x1, 0x1);
        gbc.writeMem(0xb45a, { 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1478, gbc.sp());
        EXPECT(0xb45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb45a));
        // A7 026D
        gbc.setState(0xae56, 0x3ad4, 0x6d00, 0x3222, 0xbb27, 0xd5c9, 0x1, 0x0);
        gbc.writeMem(0xae56, { 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3ad4, gbc.sp());
        EXPECT(0xae57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xae56));
        // A7 026E
        gbc.setState(0x2a92, 0x207d, 0x1f50, 0xabf0, 0xaf, 0x123, 0x1, 0x0);
        gbc.writeMem(0x2a92, { 0xa7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x207d, gbc.sp());
        EXPECT(0x2a93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 026F
        gbc.setState(0x7c9d, 0x5421, 0x4500, 0x8aea, 0xe47c, 0xbe9e, 0x1, 0x0);
        gbc.writeMem(0x7c9d, { 0xa7 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5421, gbc.sp());
        EXPECT(0x7c9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0270
        gbc.setState(0xde3f, 0x4080, 0x2ec0, 0x9115, 0x44a3, 0x45cc, 0x0, 0x0);
        gbc.writeMem(0xde3f, { 0xa7 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4080, gbc.sp());
        EXPECT(0xde40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xde3f));
        // A7 0271
        gbc.setState(0x13e1, 0x9bd9, 0xa60, 0xa899, 0x6718, 0x2bde, 0x0, 0x0);
        gbc.writeMem(0x13e1, { 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9bd9, gbc.sp());
        EXPECT(0x13e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0272
        gbc.setState(0x4f64, 0x311f, 0x3770, 0xe1cd, 0xce16, 0x9244, 0x0, 0x1);
        gbc.writeMem(0x4f64, { 0xa7 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x311f, gbc.sp());
        EXPECT(0x4f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0273
        gbc.setState(0x2a02, 0xe59a, 0x82c0, 0xfa53, 0xb1c5, 0x2044, 0x0, 0x0);
        gbc.writeMem(0x2a02, { 0xa7 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe59a, gbc.sp());
        EXPECT(0x2a03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0274
        gbc.setState(0xaeab, 0xd6c0, 0xb640, 0x27f1, 0x3f04, 0x44a1, 0x1, 0x1);
        gbc.writeMem(0xaeab, { 0xa7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaeab));
        // A7 0275
        gbc.setState(0xa5e7, 0x9677, 0xa4a0, 0xb9ca, 0x1351, 0x52e7, 0x0, 0x0);
        gbc.writeMem(0xa5e7, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9677, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa5e7));
        // A7 0276
        gbc.setState(0x4e6a, 0x692, 0x2a00, 0x1038, 0x1c22, 0x2637, 0x0, 0x0);
        gbc.writeMem(0x4e6a, { 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x692, gbc.sp());
        EXPECT(0x4e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0277
        gbc.setState(0x80f9, 0x6049, 0xcd70, 0x3c51, 0x4a1a, 0x6ac6, 0x1, 0x1);
        gbc.writeMem(0x80f9, { 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6049, gbc.sp());
        EXPECT(0x80fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x80f9));
        // A7 0278
        gbc.setState(0x4cdc, 0x6c9c, 0x8990, 0xead0, 0xa41d, 0x4bae, 0x0, 0x1);
        gbc.writeMem(0x4cdc, { 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0x4cdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0279
        gbc.setState(0xb650, 0x63d5, 0x34f0, 0x10bc, 0x8157, 0xeb39, 0x1, 0x1);
        gbc.writeMem(0xb650, { 0xa7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x63d5, gbc.sp());
        EXPECT(0xb651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb650));
        // A7 027B
        gbc.setState(0x89e0, 0x7e33, 0x3aa0, 0x3e79, 0x716, 0xcb3, 0x0, 0x0);
        gbc.writeMem(0x89e0, { 0xa7 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x89e0));
        // A7 027C
        gbc.setState(0x3da, 0xaa74, 0x4000, 0x1998, 0x8d98, 0x30b5, 0x0, 0x1);
        gbc.writeMem(0x3da, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xaa74, gbc.sp());
        EXPECT(0x3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 027E
        gbc.setState(0xdf43, 0x8dee, 0x1060, 0x8d66, 0x4914, 0xa3fd, 0x1, 0x1);
        gbc.writeMem(0xdf43, { 0xa7 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8dee, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdf43));
        // A7 027F
        gbc.setState(0xe11c, 0xa64d, 0xaa70, 0x8535, 0xfc4e, 0xd7af, 0x0, 0x0);
        gbc.writeMem(0xe11c, { 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa64d, gbc.sp());
        EXPECT(0xe11d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe11c));
        // A7 0280
        gbc.setState(0xc50a, 0xd4ba, 0xa160, 0x6ecf, 0xa1a4, 0xa23a, 0x0, 0x1);
        gbc.writeMem(0xc50a, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd4ba, gbc.sp());
        EXPECT(0xc50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc50a));
        // A7 0281
        gbc.setState(0xca80, 0x69de, 0xf320, 0xcea1, 0xcb0e, 0x98a0, 0x0, 0x0);
        gbc.writeMem(0xca80, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x69de, gbc.sp());
        EXPECT(0xca81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xca80));
        // A7 0282
        gbc.setState(0x958e, 0xd95f, 0x8930, 0xee2a, 0xb1e8, 0xec5c, 0x0, 0x1);
        gbc.writeMem(0x958e, { 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd95f, gbc.sp());
        EXPECT(0x958f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x958e));
        // A7 0283
        gbc.setState(0x2397, 0x2d0f, 0x55c0, 0x5b29, 0x1358, 0xb90, 0x1, 0x0);
        gbc.writeMem(0x2397, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2d0f, gbc.sp());
        EXPECT(0x2398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0284
        gbc.setState(0x7b53, 0x866, 0x17a0, 0x64a9, 0x6ad0, 0x9ffd, 0x0, 0x0);
        gbc.writeMem(0x7b53, { 0xa7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0x7b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0285
        gbc.setState(0x78f8, 0xe78f, 0xfd10, 0xe0cf, 0x48a1, 0x78b3, 0x0, 0x1);
        gbc.writeMem(0x78f8, { 0xa7 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0x78f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0286
        gbc.setState(0x2f5b, 0x843b, 0x680, 0xc0fa, 0xdac6, 0x2ae9, 0x1, 0x1);
        gbc.writeMem(0x2f5b, { 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x843b, gbc.sp());
        EXPECT(0x2f5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0287
        gbc.setState(0xda59, 0xb01c, 0x4c90, 0xc16f, 0x3e69, 0xfe49, 0x1, 0x0);
        gbc.writeMem(0xda59, { 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb01c, gbc.sp());
        EXPECT(0xda5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xda59));
        // A7 0288
        gbc.setState(0x5da6, 0x8d31, 0x5c60, 0xc7a3, 0x5a7d, 0xe019, 0x0, 0x0);
        gbc.writeMem(0x5da6, { 0xa7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8d31, gbc.sp());
        EXPECT(0x5da7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0289
        gbc.setState(0x82d1, 0x33c8, 0xff0, 0xe020, 0xffc1, 0x9bbe, 0x0, 0x0);
        gbc.writeMem(0x82d1, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x33c8, gbc.sp());
        EXPECT(0x82d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x82d1));
        // A7 028A
        gbc.setState(0x643c, 0x7f49, 0x2140, 0xece5, 0x27de, 0xf9ea, 0x1, 0x1);
        gbc.writeMem(0x643c, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7f49, gbc.sp());
        EXPECT(0x643d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 028B
        gbc.setState(0x8a0, 0x5de5, 0x42d0, 0xab94, 0x4941, 0x7616, 0x0, 0x0);
        gbc.writeMem(0x8a0, { 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5de5, gbc.sp());
        EXPECT(0x8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 028C
        gbc.setState(0x301d, 0x3c9f, 0x8cc0, 0xe5c1, 0x8683, 0x60c8, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3c9f, gbc.sp());
        EXPECT(0x301e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 028D
        gbc.setState(0x7376, 0x4ad7, 0xc40, 0xc756, 0xe540, 0x343d, 0x0, 0x0);
        gbc.writeMem(0x7376, { 0xa7 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x4ad7, gbc.sp());
        EXPECT(0x7377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 028E
        gbc.setState(0x5de6, 0xe2d7, 0x5400, 0x22bd, 0x4953, 0x8eff, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xa7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe2d7, gbc.sp());
        EXPECT(0x5de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 028F
        gbc.setState(0x226d, 0x3906, 0xe740, 0x5b63, 0x8dcc, 0xb2fe, 0x0, 0x0);
        gbc.writeMem(0x226d, { 0xa7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3906, gbc.sp());
        EXPECT(0x226e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0290
        gbc.setState(0xd287, 0xccc7, 0x38c0, 0x8c1e, 0x6454, 0x45c3, 0x0, 0x0);
        gbc.writeMem(0xd287, { 0xa7 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0xd288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd287));
        // A7 0291
        gbc.setState(0x6fd9, 0x5148, 0xdd0, 0x7578, 0xd6f3, 0xe4ae, 0x0, 0x0);
        gbc.writeMem(0x6fd9, { 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5148, gbc.sp());
        EXPECT(0x6fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0293
        gbc.setState(0xc914, 0x5d35, 0x69d0, 0x6078, 0xc42, 0x70d7, 0x1, 0x1);
        gbc.writeMem(0xc914, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d35, gbc.sp());
        EXPECT(0xc915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc914));
        // A7 0294
        gbc.setState(0x8709, 0x4e7b, 0x7fb0, 0x5fda, 0xf850, 0x7cf0, 0x1, 0x0);
        gbc.writeMem(0x8709, { 0xa7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4e7b, gbc.sp());
        EXPECT(0x870a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8709));
        // A7 0295
        gbc.setState(0xd4c2, 0x52a, 0xad0, 0x61cc, 0x6450, 0x410e, 0x0, 0x1);
        gbc.writeMem(0xd4c2, { 0xa7 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0xd4c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd4c2));
        // A7 0296
        gbc.setState(0x3c56, 0xee6a, 0xa720, 0x21b1, 0xfbe, 0x85a7, 0x0, 0x1);
        gbc.writeMem(0x3c56, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xee6a, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0297
        gbc.setState(0x3579, 0x86fe, 0x29f0, 0xfabc, 0x30a4, 0xccdd, 0x1, 0x0);
        gbc.writeMem(0x3579, { 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x86fe, gbc.sp());
        EXPECT(0x357a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0299
        gbc.setState(0x3d8c, 0xc46, 0xf580, 0x178b, 0x25de, 0x6e91, 0x0, 0x0);
        gbc.writeMem(0x3d8c, { 0xa7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc46, gbc.sp());
        EXPECT(0x3d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 029A
        gbc.setState(0xe9b1, 0x8dd8, 0xdd0, 0xf713, 0x3820, 0xcaf5, 0x0, 0x1);
        gbc.writeMem(0xe9b1, { 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8dd8, gbc.sp());
        EXPECT(0xe9b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe9b1));
        // A7 029B
        gbc.setState(0xc5b1, 0xd68c, 0x1b0, 0x8221, 0xde28, 0x3ca6, 0x1, 0x0);
        gbc.writeMem(0xc5b1, { 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd68c, gbc.sp());
        EXPECT(0xc5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc5b1));
        // A7 029C
        gbc.setState(0x348f, 0x575f, 0xc190, 0x9a83, 0x2741, 0x3cad, 0x1, 0x1);
        gbc.writeMem(0x348f, { 0xa7 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x575f, gbc.sp());
        EXPECT(0x3490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 029D
        gbc.setState(0x7b97, 0x21cd, 0x91b0, 0x4772, 0x990, 0xb089, 0x0, 0x1);
        gbc.writeMem(0x7b97, { 0xa7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x21cd, gbc.sp());
        EXPECT(0x7b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 029E
        gbc.setState(0x232d, 0xaa4e, 0x4010, 0xadba, 0xe7a3, 0x76b0, 0x1, 0x1);
        gbc.writeMem(0x232d, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaa4e, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02A0
        gbc.setState(0xc2cc, 0x3d43, 0x3fa0, 0xfb98, 0xdf17, 0x2637, 0x0, 0x1);
        gbc.writeMem(0xc2cc, { 0xa7 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0xc2cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc2cc));
        // A7 02A1
        gbc.setState(0x9f7f, 0xcc39, 0x8a00, 0x5ce7, 0xe378, 0x33eb, 0x0, 0x0);
        gbc.writeMem(0x9f7f, { 0xa7 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcc39, gbc.sp());
        EXPECT(0x9f80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9f7f));
        // A7 02A2
        gbc.setState(0x35a3, 0xe2bc, 0x190, 0xcea3, 0x4633, 0x970f, 0x1, 0x1);
        gbc.writeMem(0x35a3, { 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x35a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02A3
        gbc.setState(0x60fd, 0xe948, 0xc640, 0xd890, 0xcc8b, 0x6daf, 0x0, 0x1);
        gbc.writeMem(0x60fd, { 0xa7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe948, gbc.sp());
        EXPECT(0x60fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02A4
        gbc.setState(0xe3cb, 0xf570, 0xc790, 0x40c6, 0xf2c0, 0x9115, 0x0, 0x0);
        gbc.writeMem(0xe3cb, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf570, gbc.sp());
        EXPECT(0xe3cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe3cb));
        // A7 02A5
        gbc.setState(0x992c, 0x15d3, 0x6a0, 0x95f6, 0x8e5d, 0x6aeb, 0x1, 0x1);
        gbc.writeMem(0x992c, { 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x15d3, gbc.sp());
        EXPECT(0x992d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x992c));
        // A7 02A6
        gbc.setState(0xc06d, 0x93de, 0xe860, 0xbd92, 0x94a5, 0x37ef, 0x0, 0x0);
        gbc.writeMem(0xc06d, { 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0xc06e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc06d));
        // A7 02A7
        gbc.setState(0x3c36, 0xe2bc, 0x30e0, 0xc4f, 0xa0cf, 0x3d38, 0x1, 0x0);
        gbc.writeMem(0x3c36, { 0xa7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x3c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02A8
        gbc.setState(0xe38f, 0x185d, 0x8eb0, 0xa3b8, 0xdaa2, 0x452, 0x0, 0x1);
        gbc.writeMem(0xe38f, { 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x185d, gbc.sp());
        EXPECT(0xe390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe38f));
        // A7 02A9
        gbc.setState(0x7a97, 0x9172, 0x7360, 0x8980, 0xa035, 0x7e53, 0x0, 0x0);
        gbc.writeMem(0x7a97, { 0xa7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9172, gbc.sp());
        EXPECT(0x7a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02AA
        gbc.setState(0xe244, 0xcc76, 0x1e40, 0x6c8, 0x9f6f, 0x9b3d, 0x1, 0x1);
        gbc.writeMem(0xe244, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcc76, gbc.sp());
        EXPECT(0xe245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe244));
        // A7 02AB
        gbc.setState(0x3dc7, 0x2b82, 0xe170, 0x6f72, 0x1851, 0x63b6, 0x0, 0x0);
        gbc.writeMem(0x3dc7, { 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2b82, gbc.sp());
        EXPECT(0x3dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02AC
        gbc.setState(0xba07, 0xc340, 0xfa30, 0xb787, 0xefe7, 0x9ba8, 0x0, 0x0);
        gbc.writeMem(0xba07, { 0xa7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc340, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xba07));
        // A7 02AD
        gbc.setState(0x1cf8, 0x73df, 0xa8f0, 0xcc37, 0x7900, 0x812c, 0x1, 0x1);
        gbc.writeMem(0x1cf8, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x73df, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02AF
        gbc.setState(0x33b8, 0x287f, 0x5f00, 0x6305, 0x5c21, 0x1fe2, 0x1, 0x1);
        gbc.writeMem(0x33b8, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x287f, gbc.sp());
        EXPECT(0x33b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B0
        gbc.setState(0xc871, 0x1b8f, 0xdbb0, 0xbe, 0x6fcb, 0x71aa, 0x0, 0x1);
        gbc.writeMem(0xc871, { 0xa7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1b8f, gbc.sp());
        EXPECT(0xc872, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc871));
        // A7 02B1
        gbc.setState(0x4f6f, 0x4613, 0x7520, 0xfb56, 0x23e5, 0x43ca, 0x0, 0x0);
        gbc.writeMem(0x4f6f, { 0xa7 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4613, gbc.sp());
        EXPECT(0x4f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B2
        gbc.setState(0xefac, 0x6999, 0x89f0, 0xec6f, 0x6d4e, 0x1ae7, 0x0, 0x1);
        gbc.writeMem(0xefac, { 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x6999, gbc.sp());
        EXPECT(0xefad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xefac));
        // A7 02B3
        gbc.setState(0x2a63, 0x2211, 0xd390, 0xd277, 0xdb33, 0xeca8, 0x0, 0x1);
        gbc.writeMem(0x2a63, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2211, gbc.sp());
        EXPECT(0x2a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B4
        gbc.setState(0x850a, 0xb84, 0x7870, 0x7223, 0x4a95, 0xa00b, 0x1, 0x1);
        gbc.writeMem(0x850a, { 0xa7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xb84, gbc.sp());
        EXPECT(0x850b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x850a));
        // A7 02B5
        gbc.setState(0x5136, 0xa68e, 0xda60, 0x1182, 0x87a7, 0x48a6, 0x0, 0x1);
        gbc.writeMem(0x5136, { 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa68e, gbc.sp());
        EXPECT(0x5137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B6
        gbc.setState(0xd419, 0x5c16, 0xa820, 0x48c9, 0xccec, 0x7d83, 0x0, 0x1);
        gbc.writeMem(0xd419, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5c16, gbc.sp());
        EXPECT(0xd41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd419));
        // A7 02B7
        gbc.setState(0x5ed7, 0xfee4, 0x3be0, 0xe0e6, 0xed75, 0x97d4, 0x0, 0x1);
        gbc.writeMem(0x5ed7, { 0xa7 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xfee4, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B8
        gbc.setState(0x439, 0x2f64, 0x50f0, 0x4d97, 0x8bf7, 0x317e, 0x0, 0x1);
        gbc.writeMem(0x439, { 0xa7 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2f64, gbc.sp());
        EXPECT(0x43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02B9
        gbc.setState(0xa509, 0xc993, 0xd3f0, 0x9d05, 0xcad7, 0xb7c3, 0x0, 0x0);
        gbc.writeMem(0xa509, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc993, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa509));
        // A7 02BA
        gbc.setState(0x6b3b, 0x2c35, 0x9b80, 0xe5a8, 0x55ac, 0xd697, 0x1, 0x1);
        gbc.writeMem(0x6b3b, { 0xa7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c35, gbc.sp());
        EXPECT(0x6b3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02BB
        gbc.setState(0x5d29, 0xddf6, 0xe4a0, 0x3081, 0x98f4, 0xfa94, 0x0, 0x1);
        gbc.writeMem(0x5d29, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xddf6, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02BC
        gbc.setState(0xe468, 0x113d, 0x7ba0, 0xc70d, 0x7349, 0xb755, 0x1, 0x1);
        gbc.writeMem(0xe468, { 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0xe469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe468));
        // A7 02BD
        gbc.setState(0x138, 0xea67, 0x42a0, 0xf952, 0xaf89, 0x1324, 0x0, 0x1);
        gbc.writeMem(0x138, { 0xa7 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea67, gbc.sp());
        EXPECT(0x139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02BE
        gbc.setState(0x7e30, 0xb4b7, 0x9700, 0x9942, 0x40be, 0x545e, 0x0, 0x0);
        gbc.writeMem(0x7e30, { 0xa7 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xb4b7, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02BF
        gbc.setState(0xd8e7, 0xf8c6, 0x9a40, 0x5095, 0x6012, 0xdac4, 0x0, 0x1);
        gbc.writeMem(0xd8e7, { 0xa7 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf8c6, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd8e7));
        // A7 02C0
        gbc.setState(0x3bec, 0xd5ac, 0x6e80, 0x49cf, 0xfdb1, 0x5494, 0x0, 0x1);
        gbc.writeMem(0x3bec, { 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd5ac, gbc.sp());
        EXPECT(0x3bed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02C1
        gbc.setState(0x3c72, 0x270a, 0x7310, 0x295a, 0x896, 0x9d98, 0x1, 0x0);
        gbc.writeMem(0x3c72, { 0xa7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x270a, gbc.sp());
        EXPECT(0x3c73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02C2
        gbc.setState(0xbabc, 0x653a, 0xed30, 0x626a, 0x4e21, 0xcad5, 0x1, 0x0);
        gbc.writeMem(0xbabc, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x653a, gbc.sp());
        EXPECT(0xbabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbabc));
        // A7 02C3
        gbc.setState(0xe7ae, 0x8ac7, 0x1d90, 0xdde3, 0x6c0b, 0x54cf, 0x1, 0x0);
        gbc.writeMem(0xe7ae, { 0xa7 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8ac7, gbc.sp());
        EXPECT(0xe7af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7ae));
        // A7 02C4
        gbc.setState(0xce1e, 0x20a9, 0x3620, 0xded6, 0x1fb0, 0xdeea, 0x0, 0x0);
        gbc.writeMem(0xce1e, { 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x20a9, gbc.sp());
        EXPECT(0xce1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xce1e));
        // A7 02C5
        gbc.setState(0x6ca7, 0x6dc4, 0x7be0, 0xfd01, 0x8480, 0x7ffd, 0x1, 0x1);
        gbc.writeMem(0x6ca7, { 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6dc4, gbc.sp());
        EXPECT(0x6ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02C6
        gbc.setState(0xedfe, 0xb941, 0x7940, 0x1238, 0x5f2d, 0x9b11, 0x1, 0x0);
        gbc.writeMem(0xedfe, { 0xa7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb941, gbc.sp());
        EXPECT(0xedff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xedfe));
        // A7 02C7
        gbc.setState(0xa9b3, 0xb54, 0xa170, 0xf1f2, 0xc20b, 0x7cfc, 0x1, 0x1);
        gbc.writeMem(0xa9b3, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb54, gbc.sp());
        EXPECT(0xa9b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa9b3));
        // A7 02C8
        gbc.setState(0xe54e, 0x94be, 0x2510, 0x6835, 0x5da7, 0x9e8e, 0x1, 0x1);
        gbc.writeMem(0xe54e, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x94be, gbc.sp());
        EXPECT(0xe54f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe54e));
        // A7 02C9
        gbc.setState(0x3dce, 0xd656, 0x3680, 0x6c61, 0x342e, 0xfdcc, 0x1, 0x1);
        gbc.writeMem(0x3dce, { 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd656, gbc.sp());
        EXPECT(0x3dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02CA
        gbc.setState(0x87f, 0x8584, 0xe350, 0xf6e4, 0x70fc, 0x7422, 0x0, 0x1);
        gbc.writeMem(0x87f, { 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x8584, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02CB
        gbc.setState(0x99fe, 0xc10b, 0x8430, 0xd792, 0xb411, 0x7aad, 0x0, 0x1);
        gbc.writeMem(0x99fe, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc10b, gbc.sp());
        EXPECT(0x99ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x99fe));
        // A7 02CC
        gbc.setState(0xc71f, 0x37cf, 0x4a80, 0x16b, 0x4dab, 0xc7b0, 0x1, 0x1);
        gbc.writeMem(0xc71f, { 0xa7 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x37cf, gbc.sp());
        EXPECT(0xc720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc71f));
        // A7 02CD
        gbc.setState(0xefe7, 0x9692, 0x71a0, 0x3270, 0x2e93, 0x7908, 0x0, 0x0);
        gbc.writeMem(0xefe7, { 0xa7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9692, gbc.sp());
        EXPECT(0xefe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xefe7));
        // A7 02CE
        gbc.setState(0x3d71, 0x67da, 0xd3a0, 0x737, 0x3f4e, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x3d71, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x67da, gbc.sp());
        EXPECT(0x3d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02CF
        gbc.setState(0x3764, 0x5648, 0xc700, 0x1208, 0x1780, 0x6561, 0x0, 0x1);
        gbc.writeMem(0x3764, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5648, gbc.sp());
        EXPECT(0x3765, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D0
        gbc.setState(0x34e0, 0x8160, 0x2ba0, 0xd443, 0x4323, 0x11fa, 0x0, 0x0);
        gbc.writeMem(0x34e0, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8160, gbc.sp());
        EXPECT(0x34e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D1
        gbc.setState(0xbefb, 0x59ea, 0x9d70, 0x83c6, 0x9fa0, 0xe936, 0x1, 0x1);
        gbc.writeMem(0xbefb, { 0xa7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x59ea, gbc.sp());
        EXPECT(0xbefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbefb));
        // A7 02D2
        gbc.setState(0x7945, 0x3519, 0x5140, 0x8e7a, 0x4603, 0xad1e, 0x1, 0x0);
        gbc.writeMem(0x7945, { 0xa7 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3519, gbc.sp());
        EXPECT(0x7946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D3
        gbc.setState(0x1867, 0x66e3, 0xfb70, 0x867c, 0x3663, 0x3696, 0x1, 0x1);
        gbc.writeMem(0x1867, { 0xa7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x66e3, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D4
        gbc.setState(0x98f4, 0xef84, 0x6140, 0x2e9a, 0x5cf4, 0xb92e, 0x1, 0x0);
        gbc.writeMem(0x98f4, { 0xa7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xef84, gbc.sp());
        EXPECT(0x98f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x98f4));
        // A7 02D5
        gbc.setState(0x36fd, 0x1196, 0x8140, 0x8437, 0x2ae0, 0xa274, 0x0, 0x1);
        gbc.writeMem(0x36fd, { 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1196, gbc.sp());
        EXPECT(0x36fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D6
        gbc.setState(0x6644, 0x366d, 0x23a0, 0x247, 0xdfd6, 0xffd1, 0x0, 0x0);
        gbc.writeMem(0x6644, { 0xa7 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x366d, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D7
        gbc.setState(0xc411, 0x28fb, 0x8f90, 0xb328, 0xc74b, 0x9447, 0x0, 0x0);
        gbc.writeMem(0xc411, { 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x28fb, gbc.sp());
        EXPECT(0xc412, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc411));
        // A7 02D8
        gbc.setState(0x798f, 0x8951, 0x9b70, 0x4c5c, 0x168d, 0x4e70, 0x1, 0x0);
        gbc.writeMem(0x798f, { 0xa7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x8951, gbc.sp());
        EXPECT(0x7990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02D9
        gbc.setState(0x3a41, 0x5e71, 0x1160, 0xc594, 0xb196, 0xaa21, 0x0, 0x0);
        gbc.writeMem(0x3a41, { 0xa7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e71, gbc.sp());
        EXPECT(0x3a42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02DA
        gbc.setState(0x22ae, 0xad12, 0xf950, 0xee7e, 0xfb87, 0xb6f3, 0x1, 0x0);
        gbc.writeMem(0x22ae, { 0xa7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xad12, gbc.sp());
        EXPECT(0x22af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02DB
        gbc.setState(0x5cc2, 0x4fd7, 0x870, 0x5feb, 0x7255, 0x9035, 0x0, 0x0);
        gbc.writeMem(0x5cc2, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4fd7, gbc.sp());
        EXPECT(0x5cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02DC
        gbc.setState(0x6ba6, 0xd14e, 0x9870, 0xe4d8, 0x7655, 0xf688, 0x0, 0x0);
        gbc.writeMem(0x6ba6, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x6ba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02DD
        gbc.setState(0x665a, 0xcd81, 0xb610, 0x1eb9, 0xd0c5, 0xefe5, 0x0, 0x0);
        gbc.writeMem(0x665a, { 0xa7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcd81, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02DE
        gbc.setState(0x80f8, 0x1208, 0x3d10, 0xca90, 0x5c6f, 0x7b67, 0x1, 0x1);
        gbc.writeMem(0x80f8, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1208, gbc.sp());
        EXPECT(0x80f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x80f8));
        // A7 02DF
        gbc.setState(0xa2c4, 0x665b, 0xa5e0, 0xc63c, 0x94ae, 0xb11b, 0x1, 0x0);
        gbc.writeMem(0xa2c4, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x665b, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa2c4));
        // A7 02E0
        gbc.setState(0x49ff, 0x2184, 0x4d50, 0x154a, 0x887f, 0x7ed8, 0x1, 0x0);
        gbc.writeMem(0x49ff, { 0xa7 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x2184, gbc.sp());
        EXPECT(0x4a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02E1
        gbc.setState(0xd458, 0x79f8, 0xd020, 0x12c3, 0x1916, 0x5196, 0x1, 0x1);
        gbc.writeMem(0xd458, { 0xa7 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x79f8, gbc.sp());
        EXPECT(0xd459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd458));
        // A7 02E2
        gbc.setState(0xac79, 0x3bab, 0x29b0, 0xe363, 0x1402, 0xac64, 0x0, 0x1);
        gbc.writeMem(0xac79, { 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3bab, gbc.sp());
        EXPECT(0xac7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xac79));
        // A7 02E3
        gbc.setState(0xa566, 0x9bc2, 0xf5f0, 0x978b, 0xb6b1, 0x52a3, 0x0, 0x1);
        gbc.writeMem(0xa566, { 0xa7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9bc2, gbc.sp());
        EXPECT(0xa567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa566));
        // A7 02E4
        gbc.setState(0xd24b, 0x8ea1, 0x5e0, 0x2fe1, 0x81dd, 0x3a50, 0x1, 0x1);
        gbc.writeMem(0xd24b, { 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8ea1, gbc.sp());
        EXPECT(0xd24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd24b));
        // A7 02E5
        gbc.setState(0x8097, 0x1d8d, 0x55a0, 0x4930, 0x118b, 0xb8ab, 0x0, 0x0);
        gbc.writeMem(0x8097, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1d8d, gbc.sp());
        EXPECT(0x8098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8097));
        // A7 02E6
        gbc.setState(0xecf9, 0x41f9, 0x9d00, 0x6bc9, 0x6c7e, 0x475f, 0x0, 0x1);
        gbc.writeMem(0xecf9, { 0xa7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x41f9, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecf9));
        // A7 02E7
        gbc.setState(0x3853, 0x3f86, 0x4060, 0xa1e1, 0x134e, 0xdbac, 0x0, 0x0);
        gbc.writeMem(0x3853, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3f86, gbc.sp());
        EXPECT(0x3854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02E8
        gbc.setState(0x5926, 0xfa5d, 0x5ee0, 0xb261, 0x7929, 0x2983, 0x0, 0x1);
        gbc.writeMem(0x5926, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfa5d, gbc.sp());
        EXPECT(0x5927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02E9
        gbc.setState(0x1a19, 0xf78f, 0xa0a0, 0x2bd7, 0x1fd8, 0x8f8f, 0x1, 0x1);
        gbc.writeMem(0x1a19, { 0xa7 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xf78f, gbc.sp());
        EXPECT(0x1a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02EA
        gbc.setState(0xd5fd, 0x992e, 0x9460, 0x191e, 0x1f67, 0x6ed1, 0x1, 0x0);
        gbc.writeMem(0xd5fd, { 0xa7 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x992e, gbc.sp());
        EXPECT(0xd5fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd5fd));
        // A7 02EC
        gbc.setState(0x4d9b, 0x23c6, 0xd540, 0xaed6, 0x3dc5, 0x49ad, 0x0, 0x0);
        gbc.writeMem(0x4d9b, { 0xa7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x23c6, gbc.sp());
        EXPECT(0x4d9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02ED
        gbc.setState(0xe60d, 0xee1b, 0x78e0, 0x9ba3, 0x3046, 0x15ad, 0x0, 0x0);
        gbc.writeMem(0xe60d, { 0xa7 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xee1b, gbc.sp());
        EXPECT(0xe60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe60d));
        // A7 02EE
        gbc.setState(0x5773, 0x65b9, 0x7190, 0x973c, 0x326c, 0x3312, 0x0, 0x1);
        gbc.writeMem(0x5773, { 0xa7 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x65b9, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02EF
        gbc.setState(0x9995, 0x7ed5, 0xfca0, 0xda1a, 0xa353, 0xd641, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7ed5, gbc.sp());
        EXPECT(0x9996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9995));
        // A7 02F0
        gbc.setState(0xbdf2, 0xce09, 0x3250, 0xffe1, 0x810d, 0x67cf, 0x0, 0x0);
        gbc.writeMem(0xbdf2, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xce09, gbc.sp());
        EXPECT(0xbdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbdf2));
        // A7 02F1
        gbc.setState(0xa615, 0x8ef1, 0xb900, 0xfcf8, 0x1d44, 0x42ad, 0x1, 0x1);
        gbc.writeMem(0xa615, { 0xa7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8ef1, gbc.sp());
        EXPECT(0xa616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa615));
        // A7 02F2
        gbc.setState(0xac3e, 0x511f, 0x3680, 0x99a0, 0xc3e8, 0xf284, 0x0, 0x0);
        gbc.writeMem(0xac3e, { 0xa7 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x511f, gbc.sp());
        EXPECT(0xac3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xac3e));
        // A7 02F3
        gbc.setState(0x879f, 0xa22f, 0x9da0, 0x30fe, 0xe9a0, 0xb1ed, 0x0, 0x1);
        gbc.writeMem(0x879f, { 0xa7 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x87a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x879f));
        // A7 02F4
        gbc.setState(0x107e, 0x3637, 0x1220, 0x2c76, 0x5b08, 0xc6a4, 0x0, 0x1);
        gbc.writeMem(0x107e, { 0xa7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3637, gbc.sp());
        EXPECT(0x107f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02F5
        gbc.setState(0x8532, 0x96b2, 0x6d70, 0xebf6, 0x88c, 0x5b19, 0x0, 0x1);
        gbc.writeMem(0x8532, { 0xa7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x96b2, gbc.sp());
        EXPECT(0x8533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8532));
        // A7 02F6
        gbc.setState(0xa413, 0xee93, 0x5e00, 0x57b9, 0xce80, 0xb099, 0x1, 0x0);
        gbc.writeMem(0xa413, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xee93, gbc.sp());
        EXPECT(0xa414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa413));
        // A7 02F7
        gbc.setState(0xa60a, 0x7c3e, 0x7600, 0xe67c, 0x299b, 0x8e6, 0x0, 0x0);
        gbc.writeMem(0xa60a, { 0xa7 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7c3e, gbc.sp());
        EXPECT(0xa60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa60a));
        // A7 02F8
        gbc.setState(0x8f56, 0xd4be, 0x6950, 0x9599, 0x6318, 0x31aa, 0x0, 0x0);
        gbc.writeMem(0x8f56, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd4be, gbc.sp());
        EXPECT(0x8f57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8f56));
        // A7 02F9
        gbc.setState(0x2573, 0x55ea, 0xca90, 0xf6d7, 0x6035, 0x6ab9, 0x0, 0x1);
        gbc.writeMem(0x2573, { 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02FA
        gbc.setState(0x9779, 0x63c8, 0xb9b0, 0xe8ea, 0x4e9d, 0x605d, 0x0, 0x0);
        gbc.writeMem(0x9779, { 0xa7 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x63c8, gbc.sp());
        EXPECT(0x977a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9779));
        // A7 02FB
        gbc.setState(0x5b2e, 0xf546, 0x13b0, 0x8625, 0x7f1f, 0x6c80, 0x1, 0x1);
        gbc.writeMem(0x5b2e, { 0xa7 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf546, gbc.sp());
        EXPECT(0x5b2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02FC
        gbc.setState(0xc21e, 0xdcb1, 0x8e0, 0x8746, 0x3444, 0xfc12, 0x1, 0x1);
        gbc.writeMem(0xc21e, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdcb1, gbc.sp());
        EXPECT(0xc21f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc21e));
        // A7 02FD
        gbc.setState(0x606e, 0xa1b2, 0xa780, 0x3571, 0xe7b9, 0x67d7, 0x0, 0x0);
        gbc.writeMem(0x606e, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa1b2, gbc.sp());
        EXPECT(0x606f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 02FE
        gbc.setState(0x768e, 0xeebe, 0x93a0, 0x5c81, 0xc6e9, 0x385, 0x1, 0x1);
        gbc.writeMem(0x768e, { 0xa7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0300
        gbc.setState(0x2356, 0x84ad, 0x9310, 0x855e, 0x7a70, 0xd649, 0x0, 0x0);
        gbc.writeMem(0x2356, { 0xa7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x84ad, gbc.sp());
        EXPECT(0x2357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0301
        gbc.setState(0xd919, 0x21d8, 0xfce0, 0xae72, 0xa651, 0x5e06, 0x1, 0x0);
        gbc.writeMem(0xd919, { 0xa7 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x21d8, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd919));
        // A7 0302
        gbc.setState(0xb057, 0xcc2a, 0xd2f0, 0x76fc, 0x4cbe, 0x6bb1, 0x1, 0x0);
        gbc.writeMem(0xb057, { 0xa7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xcc2a, gbc.sp());
        EXPECT(0xb058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb057));
        // A7 0303
        gbc.setState(0x56d4, 0xf87d, 0x7c00, 0x9023, 0xbc9e, 0x6d8e, 0x0, 0x0);
        gbc.writeMem(0x56d4, { 0xa7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf87d, gbc.sp());
        EXPECT(0x56d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0304
        gbc.setState(0x8aa2, 0x4386, 0x1400, 0x8437, 0xdfa0, 0x8304, 0x0, 0x0);
        gbc.writeMem(0x8aa2, { 0xa7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4386, gbc.sp());
        EXPECT(0x8aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8aa2));
        // A7 0305
        gbc.setState(0x340c, 0xdf59, 0x88a0, 0x799, 0x76f5, 0x3ca9, 0x0, 0x1);
        gbc.writeMem(0x340c, { 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdf59, gbc.sp());
        EXPECT(0x340d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0306
        gbc.setState(0xd56a, 0xca8a, 0x4b30, 0x3d45, 0xa4f1, 0x6710, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xca8a, gbc.sp());
        EXPECT(0xd56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd56a));
        // A7 0307
        gbc.setState(0x86e9, 0xf321, 0xb270, 0xb572, 0xc774, 0xf924, 0x0, 0x1);
        gbc.writeMem(0x86e9, { 0xa7 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf321, gbc.sp());
        EXPECT(0x86ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x86e9));
        // A7 0308
        gbc.setState(0x1424, 0x9a0a, 0xf40, 0x7dbb, 0x47af, 0xc467, 0x1, 0x0);
        gbc.writeMem(0x1424, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x1425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0309
        gbc.setState(0x1ac6, 0x712c, 0x21f0, 0x70cf, 0x52ac, 0x68a5, 0x0, 0x1);
        gbc.writeMem(0x1ac6, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x712c, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 030A
        gbc.setState(0xd362, 0x2a13, 0xf060, 0x6cbd, 0xcc66, 0xc231, 0x0, 0x0);
        gbc.writeMem(0xd362, { 0xa7 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2a13, gbc.sp());
        EXPECT(0xd363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd362));
        // A7 030B
        gbc.setState(0x194b, 0xa1da, 0x9f40, 0x6a7b, 0xff77, 0x2e9a, 0x0, 0x0);
        gbc.writeMem(0x194b, { 0xa7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa1da, gbc.sp());
        EXPECT(0x194c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 030C
        gbc.setState(0xc80d, 0x8d0e, 0xed50, 0x53c2, 0xce23, 0xe17e, 0x1, 0x0);
        gbc.writeMem(0xc80d, { 0xa7 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8d0e, gbc.sp());
        EXPECT(0xc80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc80d));
        // A7 030D
        gbc.setState(0x1aa0, 0x6699, 0x8d0, 0xe533, 0xa406, 0x61d8, 0x1, 0x1);
        gbc.writeMem(0x1aa0, { 0xa7 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6699, gbc.sp());
        EXPECT(0x1aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 030E
        gbc.setState(0x4500, 0xcc86, 0x80f0, 0x63c4, 0x9764, 0xf301, 0x0, 0x0);
        gbc.writeMem(0x4500, { 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x4501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 030F
        gbc.setState(0x39fb, 0x4d1f, 0x6fa0, 0x51f2, 0x532e, 0xc5ed, 0x0, 0x1);
        gbc.writeMem(0x39fb, { 0xa7 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4d1f, gbc.sp());
        EXPECT(0x39fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0310
        gbc.setState(0x68cf, 0x8ffe, 0x58c0, 0x193c, 0x113d, 0xc3c7, 0x1, 0x1);
        gbc.writeMem(0x68cf, { 0xa7 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8ffe, gbc.sp());
        EXPECT(0x68d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0311
        gbc.setState(0x3b1b, 0x8d5f, 0x87c0, 0x23ad, 0x54b0, 0xc394, 0x1, 0x1);
        gbc.writeMem(0x3b1b, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8d5f, gbc.sp());
        EXPECT(0x3b1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0312
        gbc.setState(0xac4d, 0x4a70, 0xcb30, 0x9cb1, 0x4aa2, 0x7faa, 0x0, 0x0);
        gbc.writeMem(0xac4d, { 0xa7 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xac4d));
        // A7 0313
        gbc.setState(0x848, 0xe3f5, 0x22e0, 0x36d1, 0x7d08, 0x4b9a, 0x1, 0x1);
        gbc.writeMem(0x848, { 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe3f5, gbc.sp());
        EXPECT(0x849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0314
        gbc.setState(0xde76, 0xfa2b, 0x2ac0, 0x1822, 0x3074, 0x62a3, 0x1, 0x0);
        gbc.writeMem(0xde76, { 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xfa2b, gbc.sp());
        EXPECT(0xde77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xde76));
        // A7 0315
        gbc.setState(0xc45d, 0x6b2d, 0x1a10, 0xe2cd, 0x93ac, 0x2fb8, 0x1, 0x1);
        gbc.writeMem(0xc45d, { 0xa7 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6b2d, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc45d));
        // A7 0316
        gbc.setState(0x7eb1, 0x3227, 0x8760, 0x21d4, 0x2778, 0x19b0, 0x1, 0x0);
        gbc.writeMem(0x7eb1, { 0xa7 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3227, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0317
        gbc.setState(0x6370, 0xebee, 0xc890, 0x85ea, 0x2f4, 0x897b, 0x0, 0x1);
        gbc.writeMem(0x6370, { 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xebee, gbc.sp());
        EXPECT(0x6371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0318
        gbc.setState(0xe176, 0x52d4, 0xcf40, 0x698d, 0x6b16, 0x975f, 0x0, 0x0);
        gbc.writeMem(0xe176, { 0xa7 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x52d4, gbc.sp());
        EXPECT(0xe177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe176));
        // A7 0319
        gbc.setState(0x812e, 0xfff6, 0x1ff0, 0x3d10, 0xc564, 0xa492, 0x1, 0x1);
        gbc.writeMem(0x812e, { 0xa7 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xfff6, gbc.sp());
        EXPECT(0x812f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x812e));
        // A7 031A
        gbc.setState(0x5002, 0xcf17, 0x8830, 0x9ee9, 0x7691, 0x1e58, 0x1, 0x1);
        gbc.writeMem(0x5002, { 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcf17, gbc.sp());
        EXPECT(0x5003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 031B
        gbc.setState(0x1ec0, 0x78ee, 0x4c80, 0xb790, 0xfe58, 0xb8e4, 0x0, 0x1);
        gbc.writeMem(0x1ec0, { 0xa7 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x78ee, gbc.sp());
        EXPECT(0x1ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 031C
        gbc.setState(0x8fe7, 0x80f6, 0x5cf0, 0x1136, 0xea00, 0x1274, 0x1, 0x1);
        gbc.writeMem(0x8fe7, { 0xa7 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x8fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8fe7));
        // A7 031D
        gbc.setState(0x1fb3, 0x6e42, 0xa240, 0x859b, 0xb762, 0xfce2, 0x1, 0x0);
        gbc.writeMem(0x1fb3, { 0xa7 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6e42, gbc.sp());
        EXPECT(0x1fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 031E
        gbc.setState(0xbf95, 0x854, 0xb640, 0xb798, 0xf4c2, 0x2f22, 0x0, 0x1);
        gbc.writeMem(0xbf95, { 0xa7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x854, gbc.sp());
        EXPECT(0xbf96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf95));
        // A7 031F
        gbc.setState(0x2b9f, 0xed05, 0xc760, 0x1596, 0x59bb, 0xce9, 0x0, 0x1);
        gbc.writeMem(0x2b9f, { 0xa7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xed05, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0320
        gbc.setState(0x1b2b, 0x948f, 0xd220, 0x1ca0, 0x9207, 0x70b6, 0x1, 0x0);
        gbc.writeMem(0x1b2b, { 0xa7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x948f, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0321
        gbc.setState(0x3462, 0xa7d9, 0x7450, 0x6863, 0xed65, 0x665c, 0x0, 0x1);
        gbc.writeMem(0x3462, { 0xa7 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa7d9, gbc.sp());
        EXPECT(0x3463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0322
        gbc.setState(0x2cee, 0x7ad5, 0xd710, 0x5e5b, 0xaecc, 0x1f04, 0x0, 0x0);
        gbc.writeMem(0x2cee, { 0xa7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ad5, gbc.sp());
        EXPECT(0x2cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0323
        gbc.setState(0x4542, 0x72ea, 0xb310, 0xa7a8, 0xaca8, 0xaeb7, 0x1, 0x1);
        gbc.writeMem(0x4542, { 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x72ea, gbc.sp());
        EXPECT(0x4543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0324
        gbc.setState(0x9621, 0xee85, 0x470, 0x147a, 0x6aad, 0xf5f, 0x1, 0x1);
        gbc.writeMem(0x9621, { 0xa7 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x9622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9621));
        // A7 0325
        gbc.setState(0x7fb3, 0xdcb7, 0x77b0, 0x964d, 0x3067, 0x77c6, 0x0, 0x1);
        gbc.writeMem(0x7fb3, { 0xa7 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdcb7, gbc.sp());
        EXPECT(0x7fb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0326
        gbc.setState(0x8f91, 0xd949, 0x80e0, 0x5e04, 0x7588, 0x4228, 0x1, 0x0);
        gbc.writeMem(0x8f91, { 0xa7 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd949, gbc.sp());
        EXPECT(0x8f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8f91));
        // A7 0327
        gbc.setState(0x8975, 0xa53b, 0x2910, 0x2a40, 0x1160, 0x156a, 0x1, 0x1);
        gbc.writeMem(0x8975, { 0xa7 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa53b, gbc.sp());
        EXPECT(0x8976, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8975));
        // A7 0328
        gbc.setState(0xe2e9, 0x1e45, 0xc5c0, 0x7c84, 0x3d9f, 0x19b9, 0x0, 0x0);
        gbc.writeMem(0xe2e9, { 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0xe2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe2e9));
        // A7 0329
        gbc.setState(0x41e9, 0x1c30, 0xe1d0, 0x409c, 0x96b7, 0x653a, 0x0, 0x0);
        gbc.writeMem(0x41e9, { 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1c30, gbc.sp());
        EXPECT(0x41ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 032A
        gbc.setState(0x506f, 0xc166, 0x30c0, 0x78e1, 0xb179, 0x5a52, 0x1, 0x1);
        gbc.writeMem(0x506f, { 0xa7 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x5070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 032B
        gbc.setState(0x1942, 0xd6dd, 0xd210, 0xc22b, 0xb052, 0x9a27, 0x0, 0x1);
        gbc.writeMem(0x1942, { 0xa7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0x1943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 032C
        gbc.setState(0x9148, 0x4c22, 0xf990, 0xfa89, 0xef19, 0x392c, 0x0, 0x0);
        gbc.writeMem(0x9148, { 0xa7 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4c22, gbc.sp());
        EXPECT(0x9149, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9148));
        // A7 032D
        gbc.setState(0x1301, 0x4603, 0x83c0, 0xef13, 0x2bde, 0x161f, 0x1, 0x1);
        gbc.writeMem(0x1301, { 0xa7 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4603, gbc.sp());
        EXPECT(0x1302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 032E
        gbc.setState(0x8295, 0x5b4, 0xa890, 0xd728, 0xee63, 0x66bb, 0x1, 0x1);
        gbc.writeMem(0x8295, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5b4, gbc.sp());
        EXPECT(0x8296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8295));
        // A7 032F
        gbc.setState(0xa2c4, 0xea2b, 0x9370, 0x2271, 0x4766, 0xb8c5, 0x1, 0x0);
        gbc.writeMem(0xa2c4, { 0xa7 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xea2b, gbc.sp());
        EXPECT(0xa2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa2c4));
        // A7 0330
        gbc.setState(0xd276, 0x27af, 0xd830, 0xcd28, 0x3e91, 0x3b7b, 0x0, 0x1);
        gbc.writeMem(0xd276, { 0xa7 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x27af, gbc.sp());
        EXPECT(0xd277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd276));
        // A7 0331
        gbc.setState(0xecdc, 0x6cfc, 0x5a40, 0x7d84, 0x1f43, 0x5f8d, 0x1, 0x0);
        gbc.writeMem(0xecdc, { 0xa7 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x6cfc, gbc.sp());
        EXPECT(0xecdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecdc));
        // A7 0332
        gbc.setState(0xc36e, 0xa9e8, 0x8d00, 0xc3ef, 0x2300, 0x6325, 0x1, 0x0);
        gbc.writeMem(0xc36e, { 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0xc36f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc36e));
        // A7 0333
        gbc.setState(0x18c8, 0x4010, 0x3ea0, 0xb0a9, 0xc645, 0xe3fb, 0x0, 0x0);
        gbc.writeMem(0x18c8, { 0xa7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4010, gbc.sp());
        EXPECT(0x18c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0334
        gbc.setState(0xc9c2, 0x8637, 0x3110, 0xa7c8, 0xe853, 0xeb6, 0x0, 0x1);
        gbc.writeMem(0xc9c2, { 0xa7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0xc9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc9c2));
        // A7 0335
        gbc.setState(0x6fe3, 0x8987, 0x7cc0, 0x4972, 0x4634, 0xd20e, 0x1, 0x1);
        gbc.writeMem(0x6fe3, { 0xa7 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8987, gbc.sp());
        EXPECT(0x6fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0336
        gbc.setState(0x419c, 0x59d9, 0x3e50, 0x4aa4, 0x20dc, 0x98ac, 0x0, 0x1);
        gbc.writeMem(0x419c, { 0xa7 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x59d9, gbc.sp());
        EXPECT(0x419d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0338
        gbc.setState(0xc4b6, 0x2bbe, 0x1e10, 0x7207, 0x5d1c, 0xf375, 0x0, 0x1);
        gbc.writeMem(0xc4b6, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2bbe, gbc.sp());
        EXPECT(0xc4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc4b6));
        // A7 0339
        gbc.setState(0x1c06, 0xbfcd, 0x5e80, 0x1f41, 0x95b2, 0xfb27, 0x0, 0x0);
        gbc.writeMem(0x1c06, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbfcd, gbc.sp());
        EXPECT(0x1c07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 033A
        gbc.setState(0x3468, 0x8764, 0xcd60, 0xe6e5, 0x95fb, 0x604d, 0x0, 0x1);
        gbc.writeMem(0x3468, { 0xa7 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x8764, gbc.sp());
        EXPECT(0x3469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 033B
        gbc.setState(0xd4d8, 0x814c, 0x1240, 0x323, 0xd985, 0x2e4e, 0x1, 0x1);
        gbc.writeMem(0xd4d8, { 0xa7 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x814c, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd4d8));
        // A7 033C
        gbc.setState(0x96c7, 0x1f42, 0x8910, 0x42d2, 0x81ef, 0xa9f9, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0xa7 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f42, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x96c7));
        // A7 033D
        gbc.setState(0x2a8c, 0xa1d5, 0x6e90, 0x7ca8, 0x48c3, 0xe38b, 0x0, 0x0);
        gbc.writeMem(0x2a8c, { 0xa7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa1d5, gbc.sp());
        EXPECT(0x2a8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 033E
        gbc.setState(0xd653, 0xe55d, 0x7fe0, 0x3e52, 0xf6b1, 0xb412, 0x0, 0x1);
        gbc.writeMem(0xd653, { 0xa7 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe55d, gbc.sp());
        EXPECT(0xd654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd653));
        // A7 033F
        gbc.setState(0xdc3b, 0xad6, 0xc8d0, 0xa06, 0x72b5, 0xebc5, 0x1, 0x0);
        gbc.writeMem(0xdc3b, { 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xad6, gbc.sp());
        EXPECT(0xdc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdc3b));
        // A7 0340
        gbc.setState(0xb941, 0x1d32, 0x6c0, 0x9075, 0xc906, 0x2d01, 0x1, 0x0);
        gbc.writeMem(0xb941, { 0xa7 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1d32, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb941));
        // A7 0341
        gbc.setState(0x1c87, 0xff02, 0xc9b0, 0x1932, 0x95a8, 0xdc5b, 0x0, 0x1);
        gbc.writeMem(0x1c87, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xff02, gbc.sp());
        EXPECT(0x1c88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0342
        gbc.setState(0x3f53, 0x6394, 0xe150, 0x94a5, 0x4ec9, 0x55c4, 0x0, 0x0);
        gbc.writeMem(0x3f53, { 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6394, gbc.sp());
        EXPECT(0x3f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0343
        gbc.setState(0xeb1f, 0x5f63, 0xc900, 0x4030, 0x10e3, 0xc749, 0x0, 0x1);
        gbc.writeMem(0xeb1f, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5f63, gbc.sp());
        EXPECT(0xeb20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xeb1f));
        // A7 0345
        gbc.setState(0xe481, 0x5fa8, 0x2260, 0xc295, 0xcf72, 0xf166, 0x0, 0x1);
        gbc.writeMem(0xe481, { 0xa7 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5fa8, gbc.sp());
        EXPECT(0xe482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe481));
        // A7 0346
        gbc.setState(0xa8e7, 0xa40e, 0xf450, 0x3ed2, 0xfad2, 0x28d1, 0x0, 0x0);
        gbc.writeMem(0xa8e7, { 0xa7 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa40e, gbc.sp());
        EXPECT(0xa8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa8e7));
        // A7 0347
        gbc.setState(0x7069, 0xa705, 0x7310, 0x64fd, 0x5021, 0xadd4, 0x1, 0x0);
        gbc.writeMem(0x7069, { 0xa7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x706a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0348
        gbc.setState(0xd127, 0xb442, 0x90b0, 0xd9d8, 0x645b, 0x8a8a, 0x1, 0x1);
        gbc.writeMem(0xd127, { 0xa7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb442, gbc.sp());
        EXPECT(0xd128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd127));
        // A7 0349
        gbc.setState(0xb3c, 0x7096, 0xa970, 0xc71a, 0xdaf3, 0x2bfd, 0x0, 0x0);
        gbc.writeMem(0xb3c, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 034A
        gbc.setState(0x8139, 0x2613, 0x6480, 0x1fce, 0x6142, 0x98f9, 0x0, 0x0);
        gbc.writeMem(0x8139, { 0xa7 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2613, gbc.sp());
        EXPECT(0x813a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8139));
        // A7 034B
        gbc.setState(0x3dab, 0x854f, 0xe880, 0xe669, 0x84c0, 0xeb4, 0x1, 0x0);
        gbc.writeMem(0x3dab, { 0xa7 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x854f, gbc.sp());
        EXPECT(0x3dac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 034C
        gbc.setState(0x2b63, 0x62e1, 0x46c0, 0x194b, 0x885f, 0x6d9d, 0x1, 0x1);
        gbc.writeMem(0x2b63, { 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x62e1, gbc.sp());
        EXPECT(0x2b64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 034D
        gbc.setState(0x12e5, 0xc9b, 0xfe30, 0xdaf7, 0xac63, 0x9d54, 0x1, 0x0);
        gbc.writeMem(0x12e5, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc9b, gbc.sp());
        EXPECT(0x12e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 034E
        gbc.setState(0x2e9d, 0x5d11, 0xbf90, 0x4418, 0x2784, 0x3639, 0x1, 0x1);
        gbc.writeMem(0x2e9d, { 0xa7 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5d11, gbc.sp());
        EXPECT(0x2e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 034F
        gbc.setState(0x43d3, 0xbd6, 0xd650, 0xe778, 0x2e52, 0xde2d, 0x0, 0x1);
        gbc.writeMem(0x43d3, { 0xa7 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbd6, gbc.sp());
        EXPECT(0x43d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0350
        gbc.setState(0x9267, 0x328d, 0x39c0, 0xfc2e, 0xc3e0, 0xef10, 0x0, 0x1);
        gbc.writeMem(0x9267, { 0xa7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x328d, gbc.sp());
        EXPECT(0x9268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9267));
        // A7 0351
        gbc.setState(0x8807, 0x544a, 0xa8b0, 0x70d3, 0x6448, 0x248d, 0x0, 0x1);
        gbc.writeMem(0x8807, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x544a, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8807));
        // A7 0352
        gbc.setState(0x47a4, 0x3355, 0xe0c0, 0x2be0, 0xb402, 0xa746, 0x0, 0x1);
        gbc.writeMem(0x47a4, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3355, gbc.sp());
        EXPECT(0x47a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0353
        gbc.setState(0xa627, 0x380f, 0x9560, 0xc6c1, 0x6493, 0xaa43, 0x1, 0x1);
        gbc.writeMem(0xa627, { 0xa7 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x380f, gbc.sp());
        EXPECT(0xa628, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa627));
        // A7 0354
        gbc.setState(0x5f9c, 0x1126, 0x3900, 0x5a77, 0x1564, 0x47f7, 0x0, 0x0);
        gbc.writeMem(0x5f9c, { 0xa7 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x1126, gbc.sp());
        EXPECT(0x5f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0355
        gbc.setState(0x4558, 0x6cd1, 0x5490, 0x5cbc, 0xc692, 0x4675, 0x0, 0x1);
        gbc.writeMem(0x4558, { 0xa7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6cd1, gbc.sp());
        EXPECT(0x4559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0356
        gbc.setState(0xb0b0, 0x163, 0xc390, 0xca39, 0xcd53, 0xa2f2, 0x1, 0x0);
        gbc.writeMem(0xb0b0, { 0xa7 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x163, gbc.sp());
        EXPECT(0xb0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb0b0));
        // A7 0357
        gbc.setState(0xd05c, 0x6e4e, 0x3c80, 0x9b7d, 0x18b8, 0xb429, 0x0, 0x1);
        gbc.writeMem(0xd05c, { 0xa7 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6e4e, gbc.sp());
        EXPECT(0xd05d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd05c));
        // A7 0358
        gbc.setState(0x4abc, 0x2427, 0x3230, 0xc769, 0xb59b, 0xc05f, 0x0, 0x1);
        gbc.writeMem(0x4abc, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0x4abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0359
        gbc.setState(0x5029, 0x2552, 0xe60, 0xd20e, 0x1f48, 0x99ea, 0x0, 0x1);
        gbc.writeMem(0x5029, { 0xa7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2552, gbc.sp());
        EXPECT(0x502a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035A
        gbc.setState(0x5ae3, 0xe393, 0x16c0, 0x7897, 0x8f09, 0x1cb2, 0x1, 0x1);
        gbc.writeMem(0x5ae3, { 0xa7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe393, gbc.sp());
        EXPECT(0x5ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035B
        gbc.setState(0x4ba2, 0x58fc, 0xf2c0, 0x26c9, 0x621d, 0x5110, 0x0, 0x1);
        gbc.writeMem(0x4ba2, { 0xa7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x58fc, gbc.sp());
        EXPECT(0x4ba3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035C
        gbc.setState(0x5548, 0x67bc, 0x7b90, 0x1bb1, 0x4e92, 0x1bb1, 0x1, 0x0);
        gbc.writeMem(0x5548, { 0xa7 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x67bc, gbc.sp());
        EXPECT(0x5549, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035D
        gbc.setState(0x4cd4, 0x381, 0xbd40, 0x7ec4, 0xa8f5, 0x809d, 0x1, 0x1);
        gbc.writeMem(0x4cd4, { 0xa7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x381, gbc.sp());
        EXPECT(0x4cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035E
        gbc.setState(0x4aa8, 0x10d0, 0xa3d0, 0xb2a7, 0xf0d7, 0xf93b, 0x0, 0x1);
        gbc.writeMem(0x4aa8, { 0xa7 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x10d0, gbc.sp());
        EXPECT(0x4aa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 035F
        gbc.setState(0x8aa0, 0x6498, 0x21f0, 0x1a1a, 0x1e4d, 0xf893, 0x0, 0x1);
        gbc.writeMem(0x8aa0, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6498, gbc.sp());
        EXPECT(0x8aa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8aa0));
        // A7 0360
        gbc.setState(0x5b4f, 0xe058, 0xdf60, 0xcd10, 0xbaf, 0x123, 0x0, 0x0);
        gbc.writeMem(0x5b4f, { 0xa7 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe058, gbc.sp());
        EXPECT(0x5b50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0361
        gbc.setState(0x84ae, 0x2fb8, 0xae20, 0xe239, 0x32dc, 0x3dca, 0x1, 0x1);
        gbc.writeMem(0x84ae, { 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x2fb8, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x84ae));
        // A7 0362
        gbc.setState(0x893, 0xeea8, 0xac70, 0x95e8, 0x8174, 0xd674, 0x1, 0x0);
        gbc.writeMem(0x893, { 0xa7 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeea8, gbc.sp());
        EXPECT(0x894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0363
        gbc.setState(0xbbb4, 0x3ba2, 0x1740, 0x7b51, 0x1c02, 0x56ed, 0x1, 0x0);
        gbc.writeMem(0xbbb4, { 0xa7 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3ba2, gbc.sp());
        EXPECT(0xbbb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbbb4));
        // A7 0364
        gbc.setState(0xaf1e, 0x42d8, 0x54f0, 0xa7a8, 0xa72f, 0xff60, 0x0, 0x0);
        gbc.writeMem(0xaf1e, { 0xa7 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x42d8, gbc.sp());
        EXPECT(0xaf1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xaf1e));
        // A7 0365
        gbc.setState(0x7fa5, 0xbe08, 0x50, 0xc455, 0x88da, 0xb772, 0x0, 0x0);
        gbc.writeMem(0x7fa5, { 0xa7 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0x7fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0367
        gbc.setState(0x8e4b, 0xbe61, 0x40c0, 0x27f7, 0x83aa, 0xabcc, 0x1, 0x0);
        gbc.writeMem(0x8e4b, { 0xa7 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbe61, gbc.sp());
        EXPECT(0x8e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8e4b));
        // A7 0368
        gbc.setState(0x7528, 0xf863, 0x8f00, 0xbac3, 0xbe9a, 0x2b56, 0x1, 0x0);
        gbc.writeMem(0x7528, { 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf863, gbc.sp());
        EXPECT(0x7529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0369
        gbc.setState(0x28e8, 0xc56d, 0xaef0, 0x7568, 0x89e, 0x35e8, 0x1, 0x0);
        gbc.writeMem(0x28e8, { 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc56d, gbc.sp());
        EXPECT(0x28e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 036A
        gbc.setState(0x1b2d, 0x8539, 0x9820, 0x599e, 0xec10, 0xcb45, 0x0, 0x0);
        gbc.writeMem(0x1b2d, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x8539, gbc.sp());
        EXPECT(0x1b2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 036B
        gbc.setState(0x85a, 0x69bc, 0xe200, 0x1a1e, 0x8e17, 0xe975, 0x1, 0x0);
        gbc.writeMem(0x85a, { 0xa7 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x69bc, gbc.sp());
        EXPECT(0x85b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 036C
        gbc.setState(0xc91, 0x7f14, 0x8cd0, 0xa046, 0x5b2a, 0x377, 0x0, 0x0);
        gbc.writeMem(0xc91, { 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7f14, gbc.sp());
        EXPECT(0xc92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 036D
        gbc.setState(0xdc21, 0x4c73, 0xc0e0, 0x5cfb, 0x3a34, 0x6ece, 0x0, 0x0);
        gbc.writeMem(0xdc21, { 0xa7 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4c73, gbc.sp());
        EXPECT(0xdc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdc21));
        // A7 036E
        gbc.setState(0x8371, 0x3421, 0x8b50, 0xfd2, 0x9107, 0xf939, 0x1, 0x0);
        gbc.writeMem(0x8371, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3421, gbc.sp());
        EXPECT(0x8372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8371));
        // A7 036F
        gbc.setState(0xa429, 0x680a, 0x2470, 0x610b, 0xe526, 0x63bc, 0x0, 0x0);
        gbc.writeMem(0xa429, { 0xa7 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x680a, gbc.sp());
        EXPECT(0xa42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa429));
        // A7 0370
        gbc.setState(0x25c0, 0xfddf, 0xe500, 0xd0d, 0xbd4, 0x5b52, 0x0, 0x1);
        gbc.writeMem(0x25c0, { 0xa7 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xfddf, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0371
        gbc.setState(0xed70, 0x45da, 0x1880, 0x1c53, 0xf111, 0x3ee1, 0x1, 0x1);
        gbc.writeMem(0xed70, { 0xa7 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x45da, gbc.sp());
        EXPECT(0xed71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xed70));
        // A7 0372
        gbc.setState(0x7c14, 0x3950, 0x2ca0, 0xb4cb, 0x261a, 0xb76d, 0x0, 0x1);
        gbc.writeMem(0x7c14, { 0xa7 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0373
        gbc.setState(0xbc6e, 0x4b4, 0x4ec0, 0x261a, 0xf25a, 0x4088, 0x1, 0x1);
        gbc.writeMem(0xbc6e, { 0xa7 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4b4, gbc.sp());
        EXPECT(0xbc6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbc6e));
        // A7 0374
        gbc.setState(0xc46, 0x3259, 0x3230, 0x67, 0xd112, 0x87ac, 0x0, 0x1);
        gbc.writeMem(0xc46, { 0xa7 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3259, gbc.sp());
        EXPECT(0xc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0376
        gbc.setState(0x7e49, 0x2d1e, 0x4ba0, 0x14e3, 0x37d, 0x83c6, 0x0, 0x0);
        gbc.writeMem(0x7e49, { 0xa7 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2d1e, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0377
        gbc.setState(0x8463, 0x8e80, 0x7320, 0xb788, 0xf11d, 0xc0b3, 0x1, 0x1);
        gbc.writeMem(0x8463, { 0xa7 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8e80, gbc.sp());
        EXPECT(0x8464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8463));
        // A7 0378
        gbc.setState(0x9a21, 0xbe92, 0x88e0, 0x33d4, 0xafd3, 0x4c2b, 0x1, 0x1);
        gbc.writeMem(0x9a21, { 0xa7 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbe92, gbc.sp());
        EXPECT(0x9a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9a21));
        // A7 0379
        gbc.setState(0xbe7c, 0xa45, 0x3160, 0xf1f0, 0xb140, 0xd4c0, 0x0, 0x1);
        gbc.writeMem(0xbe7c, { 0xa7 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa45, gbc.sp());
        EXPECT(0xbe7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbe7c));
        // A7 037A
        gbc.setState(0x571e, 0xc128, 0xe370, 0x85a0, 0xe0b, 0x6f94, 0x1, 0x0);
        gbc.writeMem(0x571e, { 0xa7 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc128, gbc.sp());
        EXPECT(0x571f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 037B
        gbc.setState(0xc14c, 0x26f, 0xaa20, 0xb4d2, 0x1002, 0x4fb0, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xa7 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x26f, gbc.sp());
        EXPECT(0xc14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc14c));
        // A7 037C
        gbc.setState(0xe7e8, 0x410e, 0x8680, 0x2532, 0x21c3, 0x34de, 0x0, 0x1);
        gbc.writeMem(0xe7e8, { 0xa7 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x410e, gbc.sp());
        EXPECT(0xe7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7e8));
        // A7 037D
        gbc.setState(0xd6b4, 0x1cbf, 0x8c00, 0x53d, 0xbf5c, 0x33fc, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0xa7 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1cbf, gbc.sp());
        EXPECT(0xd6b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd6b4));
        // A7 037E
        gbc.setState(0xba6c, 0x430f, 0x130, 0xa088, 0xc9ab, 0xed3c, 0x1, 0x0);
        gbc.writeMem(0xba6c, { 0xa7 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x430f, gbc.sp());
        EXPECT(0xba6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xba6c));
        // A7 0380
        gbc.setState(0x4bba, 0x40b4, 0xca90, 0x4274, 0x599b, 0x1e29, 0x1, 0x0);
        gbc.writeMem(0x4bba, { 0xa7 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x40b4, gbc.sp());
        EXPECT(0x4bbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0381
        gbc.setState(0x31cd, 0xd27e, 0xc8b0, 0x503a, 0x6f2c, 0x2d45, 0x0, 0x0);
        gbc.writeMem(0x31cd, { 0xa7 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd27e, gbc.sp());
        EXPECT(0x31ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0382
        gbc.setState(0x1631, 0x681, 0x9f20, 0xbbe5, 0x9a0, 0x9794, 0x1, 0x0);
        gbc.writeMem(0x1631, { 0xa7 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x681, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0383
        gbc.setState(0x99dc, 0x9b6c, 0xa430, 0xfed6, 0x5c9b, 0x3b3a, 0x0, 0x1);
        gbc.writeMem(0x99dc, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9b6c, gbc.sp());
        EXPECT(0x99dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x99dc));
        // A7 0384
        gbc.setState(0xc1ce, 0x55ea, 0xbd00, 0xf335, 0xa8e3, 0x77ec, 0x1, 0x1);
        gbc.writeMem(0xc1ce, { 0xa7 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x55ea, gbc.sp());
        EXPECT(0xc1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc1ce));
        // A7 0385
        gbc.setState(0xee33, 0x7d2c, 0xa9e0, 0xbd42, 0xf18d, 0x39c6, 0x0, 0x1);
        gbc.writeMem(0xee33, { 0xa7 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7d2c, gbc.sp());
        EXPECT(0xee34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xee33));
        // A7 0386
        gbc.setState(0x379e, 0x9aa4, 0x1ef0, 0x8286, 0xb1aa, 0x7a80, 0x1, 0x0);
        gbc.writeMem(0x379e, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9aa4, gbc.sp());
        EXPECT(0x379f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0387
        gbc.setState(0xeb7c, 0xb089, 0xfab0, 0x4e09, 0xdb84, 0xe9bc, 0x1, 0x0);
        gbc.writeMem(0xeb7c, { 0xa7 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb089, gbc.sp());
        EXPECT(0xeb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xeb7c));
        // A7 0388
        gbc.setState(0xb1c1, 0x9e2e, 0x84a0, 0xbbc0, 0x9e53, 0xba7c, 0x0, 0x0);
        gbc.writeMem(0xb1c1, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9e2e, gbc.sp());
        EXPECT(0xb1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb1c1));
        // A7 0389
        gbc.setState(0x66f, 0xd9d3, 0xc5a0, 0xf366, 0xd2be, 0xc21d, 0x0, 0x0);
        gbc.writeMem(0x66f, { 0xa7 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd9d3, gbc.sp());
        EXPECT(0x670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038A
        gbc.setState(0x3941, 0x69d2, 0xfb00, 0xc84e, 0x35f6, 0xc3fb, 0x1, 0x1);
        gbc.writeMem(0x3941, { 0xa7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x69d2, gbc.sp());
        EXPECT(0x3942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038B
        gbc.setState(0xb58, 0x7759, 0xe080, 0xae60, 0x513e, 0xa5f2, 0x1, 0x0);
        gbc.writeMem(0xb58, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0xb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038C
        gbc.setState(0x568d, 0x24aa, 0x3dd0, 0x75c8, 0xcac0, 0x1903, 0x0, 0x1);
        gbc.writeMem(0x568d, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x24aa, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038D
        gbc.setState(0x5573, 0xade8, 0xf5d0, 0x5dc7, 0xdc3, 0xf47d, 0x0, 0x1);
        gbc.writeMem(0x5573, { 0xa7 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xade8, gbc.sp());
        EXPECT(0x5574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038E
        gbc.setState(0x71a4, 0xc1e, 0x5fd0, 0x4623, 0x1836, 0xbece, 0x1, 0x1);
        gbc.writeMem(0x71a4, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc1e, gbc.sp());
        EXPECT(0x71a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 038F
        gbc.setState(0xb210, 0xa06c, 0x5d0, 0xc92d, 0xe082, 0xf02a, 0x1, 0x0);
        gbc.writeMem(0xb210, { 0xa7 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa06c, gbc.sp());
        EXPECT(0xb211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb210));
        // A7 0390
        gbc.setState(0xbb85, 0x5982, 0xdac0, 0x26b2, 0xae89, 0x5fdc, 0x0, 0x1);
        gbc.writeMem(0xbb85, { 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xbb86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbb85));
        // A7 0391
        gbc.setState(0x8165, 0xba84, 0x1b50, 0x4fd8, 0x6635, 0x607c, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0xa7 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xba84, gbc.sp());
        EXPECT(0x8166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8165));
        // A7 0392
        gbc.setState(0xc74, 0xfb2b, 0xf30, 0x6820, 0x929f, 0x2da0, 0x0, 0x0);
        gbc.writeMem(0xc74, { 0xa7 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xfb2b, gbc.sp());
        EXPECT(0xc75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0393
        gbc.setState(0xc42e, 0x7cd2, 0xb400, 0xdd11, 0x4d5c, 0xca25, 0x0, 0x1);
        gbc.writeMem(0xc42e, { 0xa7 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7cd2, gbc.sp());
        EXPECT(0xc42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc42e));
        // A7 0394
        gbc.setState(0x4376, 0x8915, 0x2180, 0xca18, 0x591, 0x3ce2, 0x0, 0x0);
        gbc.writeMem(0x4376, { 0xa7 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8915, gbc.sp());
        EXPECT(0x4377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0395
        gbc.setState(0x8675, 0x9589, 0xb890, 0x3d4a, 0xf5cf, 0x1f2e, 0x1, 0x0);
        gbc.writeMem(0x8675, { 0xa7 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9589, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8675));
        // A7 0396
        gbc.setState(0xa597, 0xc3a3, 0x2b60, 0x11ef, 0xc672, 0x57f4, 0x0, 0x0);
        gbc.writeMem(0xa597, { 0xa7 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc3a3, gbc.sp());
        EXPECT(0xa598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa597));
        // A7 0397
        gbc.setState(0x49c5, 0x2c09, 0x14d0, 0x2bf9, 0xc6ec, 0xbca0, 0x0, 0x0);
        gbc.writeMem(0x49c5, { 0xa7 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0x49c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 0398
        gbc.setState(0xc3df, 0x10cc, 0x3420, 0x3cc5, 0x6117, 0xd06, 0x0, 0x1);
        gbc.writeMem(0xc3df, { 0xa7 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0xc3e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc3df));
        // A7 0399
        gbc.setState(0xb177, 0x6b75, 0x5540, 0x9489, 0xbb72, 0xc054, 0x1, 0x1);
        gbc.writeMem(0xb177, { 0xa7 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6b75, gbc.sp());
        EXPECT(0xb178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb177));
        // A7 039A
        gbc.setState(0xd389, 0xf01e, 0x11d0, 0xf9d1, 0x9eb7, 0x4dea, 0x0, 0x0);
        gbc.writeMem(0xd389, { 0xa7 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf01e, gbc.sp());
        EXPECT(0xd38a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd389));
        // A7 039B
        gbc.setState(0x2d2a, 0x4fd6, 0x9680, 0x93c3, 0xc95f, 0xb3fb, 0x0, 0x1);
        gbc.writeMem(0x2d2a, { 0xa7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x4fd6, gbc.sp());
        EXPECT(0x2d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 039C
        gbc.setState(0xcfd8, 0x1146, 0xa5b0, 0xa495, 0x274a, 0xd8ca, 0x0, 0x1);
        gbc.writeMem(0xcfd8, { 0xa7 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1146, gbc.sp());
        EXPECT(0xcfd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcfd8));
        // A7 039D
        gbc.setState(0x9021, 0x145f, 0x81b0, 0x2899, 0x11fe, 0xa2c9, 0x0, 0x0);
        gbc.writeMem(0x9021, { 0xa7 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x145f, gbc.sp());
        EXPECT(0x9022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9021));
        // A7 039E
        gbc.setState(0xb583, 0x837c, 0xa130, 0x6fd3, 0xf26a, 0xe2f9, 0x0, 0x1);
        gbc.writeMem(0xb583, { 0xa7 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x837c, gbc.sp());
        EXPECT(0xb584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb583));
        // A7 039F
        gbc.setState(0x33df, 0xe06a, 0x9850, 0xec04, 0x3fc, 0xb334, 0x1, 0x1);
        gbc.writeMem(0x33df, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe06a, gbc.sp());
        EXPECT(0x33e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03A0
        gbc.setState(0x79af, 0xbb5b, 0x3f0, 0x90e2, 0xc722, 0xe676, 0x0, 0x0);
        gbc.writeMem(0x79af, { 0xa7 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbb5b, gbc.sp());
        EXPECT(0x79b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03A2
        gbc.setState(0x6b37, 0xfba1, 0xbc20, 0xd701, 0x340b, 0x3763, 0x1, 0x1);
        gbc.writeMem(0x6b37, { 0xa7 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfba1, gbc.sp());
        EXPECT(0x6b38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03A4
        gbc.setState(0xbe40, 0x9ee9, 0xb310, 0x5d9b, 0xe8ac, 0xdaa5, 0x1, 0x1);
        gbc.writeMem(0xbe40, { 0xa7 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x9ee9, gbc.sp());
        EXPECT(0xbe41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbe40));
        // A7 03A5
        gbc.setState(0xcb50, 0x4c9d, 0xd290, 0x70a, 0x8014, 0x618a, 0x0, 0x1);
        gbc.writeMem(0xcb50, { 0xa7 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0xcb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcb50));
        // A7 03A6
        gbc.setState(0xb94d, 0x9c83, 0xa420, 0xce10, 0x9587, 0xae0, 0x1, 0x1);
        gbc.writeMem(0xb94d, { 0xa7 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9c83, gbc.sp());
        EXPECT(0xb94e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xb94d));
        // A7 03A7
        gbc.setState(0xcd73, 0xe52a, 0x9200, 0x4d0d, 0x3904, 0x9306, 0x1, 0x1);
        gbc.writeMem(0xcd73, { 0xa7 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe52a, gbc.sp());
        EXPECT(0xcd74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcd73));
        // A7 03A8
        gbc.setState(0x6c8, 0x2832, 0x19b0, 0xb9c9, 0x264c, 0xc1a9, 0x0, 0x1);
        gbc.writeMem(0x6c8, { 0xa7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03A9
        gbc.setState(0x23b6, 0x502, 0xd50, 0x63c0, 0x72ba, 0x82, 0x0, 0x0);
        gbc.writeMem(0x23b6, { 0xa7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x502, gbc.sp());
        EXPECT(0x23b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03AA
        gbc.setState(0x870c, 0xbb2a, 0xd3a0, 0x3587, 0x89ca, 0x5971, 0x0, 0x1);
        gbc.writeMem(0x870c, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xbb2a, gbc.sp());
        EXPECT(0x870d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x870c));
        // A7 03AB
        gbc.setState(0x98fb, 0x3f3b, 0xfe40, 0x172a, 0xe2d6, 0xd353, 0x1, 0x1);
        gbc.writeMem(0x98fb, { 0xa7 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3f3b, gbc.sp());
        EXPECT(0x98fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x98fb));
        // A7 03AC
        gbc.setState(0x212b, 0xa465, 0xdbb0, 0x5790, 0xdacc, 0xd7ff, 0x0, 0x0);
        gbc.writeMem(0x212b, { 0xa7 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa465, gbc.sp());
        EXPECT(0x212c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03AD
        gbc.setState(0xecc2, 0x9279, 0x5ee0, 0x5c8a, 0xd6de, 0xa773, 0x0, 0x0);
        gbc.writeMem(0xecc2, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9279, gbc.sp());
        EXPECT(0xecc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xecc2));
        // A7 03AE
        gbc.setState(0xcf2b, 0x3e0d, 0xb170, 0x375, 0x47b6, 0x1e57, 0x1, 0x0);
        gbc.writeMem(0xcf2b, { 0xa7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3e0d, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcf2b));
        // A7 03AF
        gbc.setState(0x9c86, 0x952a, 0x68a0, 0x24ea, 0x3756, 0x25e8, 0x0, 0x0);
        gbc.writeMem(0x9c86, { 0xa7 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x952a, gbc.sp());
        EXPECT(0x9c87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9c86));
        // A7 03B0
        gbc.setState(0x9448, 0xabbc, 0x53b0, 0x38c7, 0x9b7d, 0x43b4, 0x1, 0x1);
        gbc.writeMem(0x9448, { 0xa7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xabbc, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9448));
        // A7 03B1
        gbc.setState(0x3e87, 0xb827, 0x4f90, 0xe65f, 0xeb87, 0x24da, 0x1, 0x1);
        gbc.writeMem(0x3e87, { 0xa7 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb827, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B2
        gbc.setState(0x3d58, 0x7ff0, 0x90f0, 0xb189, 0x30f8, 0x7aa3, 0x0, 0x1);
        gbc.writeMem(0x3d58, { 0xa7 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x7ff0, gbc.sp());
        EXPECT(0x3d59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B3
        gbc.setState(0x4525, 0xa500, 0xd340, 0x4663, 0x5ee3, 0x648e, 0x1, 0x1);
        gbc.writeMem(0x4525, { 0xa7 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0x4526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B4
        gbc.setState(0x2310, 0x40d6, 0x52f0, 0x3f06, 0xfb9e, 0xfe25, 0x1, 0x1);
        gbc.writeMem(0x2310, { 0xa7 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x40d6, gbc.sp());
        EXPECT(0x2311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B5
        gbc.setState(0x1169, 0x5c8, 0x8ef0, 0x7292, 0x6a24, 0x512e, 0x0, 0x0);
        gbc.writeMem(0x1169, { 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x5c8, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B6
        gbc.setState(0xce08, 0x9cdd, 0x8e00, 0x960e, 0x8857, 0xe13f, 0x1, 0x0);
        gbc.writeMem(0xce08, { 0xa7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9cdd, gbc.sp());
        EXPECT(0xce09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xce08));
        // A7 03B7
        gbc.setState(0x9553, 0x93a2, 0xaea0, 0x1f16, 0x5e1e, 0xceb7, 0x0, 0x0);
        gbc.writeMem(0x9553, { 0xa7 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x93a2, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9553));
        // A7 03B8
        gbc.setState(0x5345, 0xeeba, 0x9b10, 0xe843, 0xa514, 0x16bf, 0x0, 0x0);
        gbc.writeMem(0x5345, { 0xa7 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeeba, gbc.sp());
        EXPECT(0x5346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03B9
        gbc.setState(0xed6c, 0xd72c, 0x2570, 0x7f00, 0x4079, 0x52f4, 0x0, 0x1);
        gbc.writeMem(0xed6c, { 0xa7 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0xed6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xed6c));
        // A7 03BA
        gbc.setState(0xa256, 0xfff, 0xe480, 0x8822, 0xcf2d, 0x992e, 0x0, 0x0);
        gbc.writeMem(0xa256, { 0xa7 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfff, gbc.sp());
        EXPECT(0xa257, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa256));
        // A7 03BB
        gbc.setState(0x9075, 0xd0ef, 0xd520, 0x60a, 0x4f64, 0x38ca, 0x1, 0x0);
        gbc.writeMem(0x9075, { 0xa7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd0ef, gbc.sp());
        EXPECT(0x9076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9075));
        // A7 03BC
        gbc.setState(0x88ed, 0x7cec, 0xd570, 0x7772, 0xba62, 0x9549, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xa7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7cec, gbc.sp());
        EXPECT(0x88ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x88ed));
        // A7 03BD
        gbc.setState(0xd9fd, 0xd149, 0xc9f0, 0xf310, 0xfc2b, 0xd145, 0x1, 0x1);
        gbc.writeMem(0xd9fd, { 0xa7 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xd149, gbc.sp());
        EXPECT(0xd9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd9fd));
        // A7 03BE
        gbc.setState(0xbbae, 0xb35e, 0x3dd0, 0xbd0f, 0x3092, 0xeadb, 0x1, 0x1);
        gbc.writeMem(0xbbae, { 0xa7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb35e, gbc.sp());
        EXPECT(0xbbaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbbae));
        // A7 03BF
        gbc.setState(0xdb88, 0x8ae8, 0xef80, 0x466f, 0x8fef, 0x6c74, 0x0, 0x1);
        gbc.writeMem(0xdb88, { 0xa7 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0xdb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdb88));
        // A7 03C0
        gbc.setState(0x5bf2, 0xe7f4, 0x5ee0, 0x7836, 0x535f, 0xa40a, 0x1, 0x0);
        gbc.writeMem(0x5bf2, { 0xa7 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe7f4, gbc.sp());
        EXPECT(0x5bf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03C1
        gbc.setState(0x6063, 0x4c86, 0xd560, 0xc058, 0xd285, 0xf3be, 0x0, 0x0);
        gbc.writeMem(0x6063, { 0xa7 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4c86, gbc.sp());
        EXPECT(0x6064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03C2
        gbc.setState(0x796f, 0x18fb, 0x1e90, 0x4930, 0xcf0f, 0xd15a, 0x0, 0x0);
        gbc.writeMem(0x796f, { 0xa7 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x18fb, gbc.sp());
        EXPECT(0x7970, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03C4
        gbc.setState(0xfbe, 0xd6aa, 0xe070, 0x51bc, 0x77a5, 0xdc94, 0x0, 0x0);
        gbc.writeMem(0xfbe, { 0xa7 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd6aa, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03C5
        gbc.setState(0x9015, 0x3edd, 0x9670, 0xde44, 0x7020, 0x40b4, 0x1, 0x0);
        gbc.writeMem(0x9015, { 0xa7 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0x9016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9015));
        // A7 03C6
        gbc.setState(0x9019, 0xe29a, 0x6ce0, 0xc287, 0x7ae1, 0x49c2, 0x1, 0x1);
        gbc.writeMem(0x9019, { 0xa7 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0x901a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9019));
        // A7 03C7
        gbc.setState(0xcda8, 0x6e17, 0x65e0, 0xbc42, 0xcb6c, 0x2d24, 0x0, 0x1);
        gbc.writeMem(0xcda8, { 0xa7 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6e17, gbc.sp());
        EXPECT(0xcda9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcda8));
        // A7 03C8
        gbc.setState(0xe92, 0x7ec2, 0xa7b0, 0xc6ca, 0x4a2c, 0xc0f0, 0x0, 0x1);
        gbc.writeMem(0xe92, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7ec2, gbc.sp());
        EXPECT(0xe93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03C9
        gbc.setState(0x5900, 0x6249, 0x5f90, 0xdc7d, 0x1460, 0xa882, 0x1, 0x1);
        gbc.writeMem(0x5900, { 0xa7 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6249, gbc.sp());
        EXPECT(0x5901, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03CA
        gbc.setState(0x2eea, 0xee80, 0x8b10, 0xcae9, 0xdc5d, 0xbfb1, 0x1, 0x1);
        gbc.writeMem(0x2eea, { 0xa7 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xee80, gbc.sp());
        EXPECT(0x2eeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03CB
        gbc.setState(0x3782, 0x8c33, 0x6780, 0x87f0, 0x290f, 0x759a, 0x1, 0x0);
        gbc.writeMem(0x3782, { 0xa7 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8c33, gbc.sp());
        EXPECT(0x3783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03CC
        gbc.setState(0xa794, 0x2528, 0xe600, 0xb90b, 0x72c2, 0xbe3d, 0x0, 0x0);
        gbc.writeMem(0xa794, { 0xa7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2528, gbc.sp());
        EXPECT(0xa795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa794));
        // A7 03CD
        gbc.setState(0x8fd5, 0x64fa, 0xf750, 0xb940, 0x57ca, 0xe203, 0x0, 0x1);
        gbc.writeMem(0x8fd5, { 0xa7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x64fa, gbc.sp());
        EXPECT(0x8fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8fd5));
        // A7 03CE
        gbc.setState(0x8c1a, 0x82f7, 0xda70, 0x4eda, 0x6dd7, 0x781a, 0x1, 0x0);
        gbc.writeMem(0x8c1a, { 0xa7 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x82f7, gbc.sp());
        EXPECT(0x8c1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x8c1a));
        // A7 03CF
        gbc.setState(0x2d39, 0x1151, 0x6980, 0xad29, 0x4015, 0x3ec5, 0x1, 0x1);
        gbc.writeMem(0x2d39, { 0xa7 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1151, gbc.sp());
        EXPECT(0x2d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D0
        gbc.setState(0x7878, 0x53e2, 0x91d0, 0x8043, 0x6ea5, 0xccd, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0xa7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x7879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D2
        gbc.setState(0x568, 0x5feb, 0x7e90, 0xc368, 0x6590, 0x41ef, 0x1, 0x0);
        gbc.writeMem(0x568, { 0xa7 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5feb, gbc.sp());
        EXPECT(0x569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D3
        gbc.setState(0x4b62, 0xd170, 0x1c80, 0x7836, 0xc6f7, 0x66d6, 0x0, 0x1);
        gbc.writeMem(0x4b62, { 0xa7 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd170, gbc.sp());
        EXPECT(0x4b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D4
        gbc.setState(0xbe59, 0xf5f1, 0x1630, 0x2085, 0xbf9b, 0xe27b, 0x0, 0x0);
        gbc.writeMem(0xbe59, { 0xa7 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5f1, gbc.sp());
        EXPECT(0xbe5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbe59));
        // A7 03D5
        gbc.setState(0x5f73, 0xcabf, 0xa800, 0x8029, 0xfc04, 0x7b2c, 0x1, 0x1);
        gbc.writeMem(0x5f73, { 0xa7 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcabf, gbc.sp());
        EXPECT(0x5f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D6
        gbc.setState(0x43d6, 0xde80, 0x9120, 0x47b, 0xb803, 0xa429, 0x1, 0x0);
        gbc.writeMem(0x43d6, { 0xa7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xde80, gbc.sp());
        EXPECT(0x43d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D7
        gbc.setState(0x6855, 0x793b, 0x19b0, 0xaa82, 0x188, 0xddf8, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0xa7 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x793b, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D8
        gbc.setState(0x2f81, 0x161, 0x53b0, 0xa48c, 0x3fb7, 0xdf7d, 0x1, 0x0);
        gbc.writeMem(0x2f81, { 0xa7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x161, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03D9
        gbc.setState(0x6c4d, 0x29d4, 0x5b00, 0xc9a7, 0x32e7, 0x16b1, 0x0, 0x1);
        gbc.writeMem(0x6c4d, { 0xa7 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x29d4, gbc.sp());
        EXPECT(0x6c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03DA
        gbc.setState(0x3905, 0xdfc9, 0x72e0, 0x3a75, 0x99ab, 0xc877, 0x0, 0x1);
        gbc.writeMem(0x3905, { 0xa7 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdfc9, gbc.sp());
        EXPECT(0x3906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03DB
        gbc.setState(0x41f8, 0x149, 0x2ad0, 0x36ed, 0xc454, 0x9024, 0x0, 0x1);
        gbc.writeMem(0x41f8, { 0xa7 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x149, gbc.sp());
        EXPECT(0x41f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03DC
        gbc.setState(0x559e, 0x231, 0x5600, 0xdecd, 0x56b9, 0xa2c1, 0x1, 0x0);
        gbc.writeMem(0x559e, { 0xa7 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x231, gbc.sp());
        EXPECT(0x559f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03DD
        gbc.setState(0xe1be, 0x2229, 0x8f20, 0xb2dc, 0x5d18, 0x368d, 0x1, 0x1);
        gbc.writeMem(0xe1be, { 0xa7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2229, gbc.sp());
        EXPECT(0xe1bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe1be));
        // A7 03DE
        gbc.setState(0xa635, 0x4a21, 0x98e0, 0x22a3, 0x2464, 0x979b, 0x1, 0x1);
        gbc.writeMem(0xa635, { 0xa7 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4a21, gbc.sp());
        EXPECT(0xa636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa635));
        // A7 03DF
        gbc.setState(0x2fec, 0x68e6, 0xf3c0, 0x4668, 0x3aeb, 0x31d9, 0x1, 0x1);
        gbc.writeMem(0x2fec, { 0xa7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x68e6, gbc.sp());
        EXPECT(0x2fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03E0
        gbc.setState(0x12e4, 0x2823, 0xba70, 0x6c1d, 0xcb43, 0x796e, 0x0, 0x0);
        gbc.writeMem(0x12e4, { 0xa7 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x12e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03E2
        gbc.setState(0xc86c, 0x8336, 0xa7c0, 0x124e, 0x96c2, 0xd5c1, 0x0, 0x1);
        gbc.writeMem(0xc86c, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8336, gbc.sp());
        EXPECT(0xc86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xc86c));
        // A7 03E3
        gbc.setState(0xa3d0, 0xfd42, 0xe1f0, 0x9a67, 0xf1bc, 0xfae7, 0x0, 0x1);
        gbc.writeMem(0xa3d0, { 0xa7 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfd42, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa3d0));
        // A7 03E4
        gbc.setState(0x38ee, 0x33fb, 0xb7a0, 0xec9f, 0xdfa0, 0x94a7, 0x1, 0x0);
        gbc.writeMem(0x38ee, { 0xa7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x33fb, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03E5
        gbc.setState(0xfcb, 0x84de, 0xdc80, 0xae0d, 0x22a1, 0x141f, 0x0, 0x0);
        gbc.writeMem(0xfcb, { 0xa7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x84de, gbc.sp());
        EXPECT(0xfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // A7 03E6
        gbc.setState(0x206d, 0x99d7, 0x84e0, 0x16c2, 0x6276, 0xf376, 0x1, 0x1);
        gbc.writeMem(0x206d, { 0xa7 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x99d7, gbc.sp());
        EXPECT(0x206e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
