#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_67)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_67) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 67 0000
        gbc.setState(0xa462, 0x4c42, 0x6960, 0xb2ae, 0x8cff, 0x2fa, 0x0, 0x1);
        gbc.writeMem(0xa462, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x4c42);
        EXPECT(gbc.pc(), 0xa464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa462), 0xcb);
        EXPECT(gbc.readMem(0xa463), 0x67);
        // CB 67 0001
        gbc.setState(0x287b, 0x202b, 0x340, 0x55a0, 0xa35a, 0x8822, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x202b);
        EXPECT(gbc.pc(), 0x287d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0002
        gbc.setState(0x4372, 0x8d51, 0xdae0, 0x8425, 0xc877, 0x26b4, 0x0, 0x1);
        gbc.writeMem(0x4372, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8d51);
        EXPECT(gbc.pc(), 0x4374);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0003
        gbc.setState(0xe62a, 0x9b34, 0xbcc0, 0x277e, 0xfc7d, 0xd321, 0x0, 0x0);
        gbc.writeMem(0xe62a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9b34);
        EXPECT(gbc.pc(), 0xe62c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe62a), 0xcb);
        EXPECT(gbc.readMem(0xe62b), 0x67);
        // CB 67 0004
        gbc.setState(0x5ce8, 0x866d, 0xb440, 0x96fe, 0x7ae2, 0x91f0, 0x1, 0x0);
        gbc.writeMem(0x5ce8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x866d);
        EXPECT(gbc.pc(), 0x5cea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0005
        gbc.setState(0x1b3d, 0x8aa1, 0xf620, 0x7909, 0xde9d, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x1b3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0x1b3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0006
        gbc.setState(0xb820, 0x21e3, 0x4ac0, 0xfb38, 0xd82, 0x94f0, 0x1, 0x0);
        gbc.writeMem(0xb820, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x21e3);
        EXPECT(gbc.pc(), 0xb822);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb820), 0xcb);
        EXPECT(gbc.readMem(0xb821), 0x67);
        // CB 67 0007
        gbc.setState(0x7d50, 0xaf46, 0x3e0, 0xddb2, 0xa75a, 0xdecf, 0x1, 0x0);
        gbc.writeMem(0x7d50, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xaf46);
        EXPECT(gbc.pc(), 0x7d52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0008
        gbc.setState(0x6c52, 0xc8a5, 0xaa40, 0xf3a0, 0x5e40, 0x606f, 0x1, 0x0);
        gbc.writeMem(0x6c52, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc8a5);
        EXPECT(gbc.pc(), 0x6c54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0009
        gbc.setState(0x123f, 0xa0f5, 0x7fc0, 0xb35e, 0xbeee, 0x9456, 0x0, 0x0);
        gbc.writeMem(0x123f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xa0f5);
        EXPECT(gbc.pc(), 0x1241);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 000A
        gbc.setState(0xe332, 0x114, 0x6d90, 0x3a56, 0x81be, 0x3864, 0x1, 0x1);
        gbc.writeMem(0xe332, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x114);
        EXPECT(gbc.pc(), 0xe334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe332), 0xcb);
        EXPECT(gbc.readMem(0xe333), 0x67);
        // CB 67 000B
        gbc.setState(0x7eda, 0xa1ce, 0x5410, 0xac28, 0xa2e4, 0xe901, 0x1, 0x1);
        gbc.writeMem(0x7eda, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa1ce);
        EXPECT(gbc.pc(), 0x7edc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 000C
        gbc.setState(0xcf48, 0x2f6f, 0x4690, 0x91a, 0x398, 0xb783, 0x1, 0x0);
        gbc.writeMem(0xcf48, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x2f6f);
        EXPECT(gbc.pc(), 0xcf4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf48), 0xcb);
        EXPECT(gbc.readMem(0xcf49), 0x67);
        // CB 67 000D
        gbc.setState(0x6a46, 0x6f8c, 0xb4d0, 0x87aa, 0xe3ee, 0xac8e, 0x0, 0x1);
        gbc.writeMem(0x6a46, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6f8c);
        EXPECT(gbc.pc(), 0x6a48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 000E
        gbc.setState(0x1aa9, 0xe0b2, 0x7710, 0xa819, 0xe980, 0x6892, 0x1, 0x0);
        gbc.writeMem(0x1aa9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe0b2);
        EXPECT(gbc.pc(), 0x1aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 000F
        gbc.setState(0x2311, 0xc172, 0x7860, 0x80c5, 0xedc9, 0xdc6, 0x1, 0x1);
        gbc.writeMem(0x2311, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc172);
        EXPECT(gbc.pc(), 0x2313);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0010
        gbc.setState(0xf01, 0x4994, 0xe7e0, 0xbb0d, 0xb329, 0x2f1b, 0x1, 0x0);
        gbc.writeMem(0xf01, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4994);
        EXPECT(gbc.pc(), 0xf03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0011
        gbc.setState(0x208c, 0x7f8c, 0x3020, 0xd625, 0xf901, 0x691f, 0x0, 0x0);
        gbc.writeMem(0x208c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7f8c);
        EXPECT(gbc.pc(), 0x208e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0012
        gbc.setState(0x6576, 0x77e9, 0xaf90, 0x5919, 0xa574, 0x734, 0x1, 0x1);
        gbc.writeMem(0x6576, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x77e9);
        EXPECT(gbc.pc(), 0x6578);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0013
        gbc.setState(0x538, 0xd4fb, 0xf610, 0xf873, 0xbc7b, 0x13e, 0x0, 0x0);
        gbc.writeMem(0x538, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0x53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0014
        gbc.setState(0xaa65, 0x20d, 0xcf0, 0xb1e8, 0xb551, 0xd955, 0x0, 0x1);
        gbc.writeMem(0xaa65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x20d);
        EXPECT(gbc.pc(), 0xaa67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa65), 0xcb);
        EXPECT(gbc.readMem(0xaa66), 0x67);
        // CB 67 0015
        gbc.setState(0x7c29, 0x7d70, 0x180, 0x18b5, 0x3f65, 0xafda, 0x0, 0x0);
        gbc.writeMem(0x7c29, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7d70);
        EXPECT(gbc.pc(), 0x7c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0017
        gbc.setState(0x15fd, 0xef4e, 0x86c0, 0x6e0e, 0x3b08, 0x36bb, 0x0, 0x0);
        gbc.writeMem(0x15fd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xef4e);
        EXPECT(gbc.pc(), 0x15ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0018
        gbc.setState(0x7704, 0xe33b, 0xf200, 0x7577, 0x88e0, 0x6e76, 0x0, 0x1);
        gbc.writeMem(0x7704, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe33b);
        EXPECT(gbc.pc(), 0x7706);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0019
        gbc.setState(0x96ef, 0x6b5b, 0x8840, 0x1a77, 0x20c, 0x63b2, 0x0, 0x1);
        gbc.writeMem(0x96ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6b5b);
        EXPECT(gbc.pc(), 0x96f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ef), 0xcb);
        EXPECT(gbc.readMem(0x96f0), 0x67);
        // CB 67 001A
        gbc.setState(0xa4cc, 0xa1e0, 0x6650, 0xca1a, 0x5008, 0xa75f, 0x0, 0x0);
        gbc.writeMem(0xa4cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa1e0);
        EXPECT(gbc.pc(), 0xa4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4cc), 0xcb);
        EXPECT(gbc.readMem(0xa4cd), 0x67);
        // CB 67 001B
        gbc.setState(0x1649, 0x4f6b, 0x2460, 0x7928, 0xc103, 0x389, 0x0, 0x0);
        gbc.writeMem(0x1649, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4f6b);
        EXPECT(gbc.pc(), 0x164b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 001C
        gbc.setState(0xad61, 0xc35f, 0xe5f0, 0x1782, 0x4d89, 0x87b, 0x0, 0x0);
        gbc.writeMem(0xad61, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc35f);
        EXPECT(gbc.pc(), 0xad63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad61), 0xcb);
        EXPECT(gbc.readMem(0xad62), 0x67);
        // CB 67 001D
        gbc.setState(0xc0f8, 0xa02f, 0x8b50, 0x88b1, 0x89a8, 0x1eaf, 0x1, 0x1);
        gbc.writeMem(0xc0f8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa02f);
        EXPECT(gbc.pc(), 0xc0fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0f8), 0xcb);
        EXPECT(gbc.readMem(0xc0f9), 0x67);
        // CB 67 001E
        gbc.setState(0x7216, 0x2690, 0x2940, 0xfbb7, 0x57bc, 0x9b5b, 0x0, 0x1);
        gbc.writeMem(0x7216, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2690);
        EXPECT(gbc.pc(), 0x7218);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 001F
        gbc.setState(0x4cd1, 0x2ce4, 0xc760, 0xd02e, 0x1290, 0x6beb, 0x1, 0x0);
        gbc.writeMem(0x4cd1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2ce4);
        EXPECT(gbc.pc(), 0x4cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0020
        gbc.setState(0x7613, 0x95cb, 0x1160, 0x25dd, 0x14a, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0x7613, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x95cb);
        EXPECT(gbc.pc(), 0x7615);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0021
        gbc.setState(0x8b88, 0x689e, 0x6610, 0x5dab, 0xeb29, 0x9a22, 0x1, 0x0);
        gbc.writeMem(0x8b88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x689e);
        EXPECT(gbc.pc(), 0x8b8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b88), 0xcb);
        EXPECT(gbc.readMem(0x8b89), 0x67);
        // CB 67 0022
        gbc.setState(0x8386, 0x8884, 0xe580, 0xf885, 0xb1e7, 0x2bdf, 0x1, 0x1);
        gbc.writeMem(0x8386, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8884);
        EXPECT(gbc.pc(), 0x8388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8386), 0xcb);
        EXPECT(gbc.readMem(0x8387), 0x67);
        // CB 67 0023
        gbc.setState(0x6265, 0x9504, 0x6a60, 0xa759, 0xb8fc, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x6265, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9504);
        EXPECT(gbc.pc(), 0x6267);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0024
        gbc.setState(0xb8f5, 0xd94c, 0x6530, 0xf2f4, 0x7555, 0x99c2, 0x0, 0x1);
        gbc.writeMem(0xb8f5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xd94c);
        EXPECT(gbc.pc(), 0xb8f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f5), 0xcb);
        EXPECT(gbc.readMem(0xb8f6), 0x67);
        // CB 67 0025
        gbc.setState(0x4362, 0xdc7d, 0xc700, 0xfc6a, 0xcbb9, 0x4b17, 0x1, 0x0);
        gbc.writeMem(0x4362, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xdc7d);
        EXPECT(gbc.pc(), 0x4364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0026
        gbc.setState(0xb2d4, 0xadb2, 0x9670, 0x8db2, 0xda93, 0x1db5, 0x0, 0x0);
        gbc.writeMem(0xb2d4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xadb2);
        EXPECT(gbc.pc(), 0xb2d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d4), 0xcb);
        EXPECT(gbc.readMem(0xb2d5), 0x67);
        // CB 67 0027
        gbc.setState(0x42b1, 0x26f7, 0x2590, 0x4dd9, 0x30b2, 0x19f1, 0x0, 0x1);
        gbc.writeMem(0x42b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x26f7);
        EXPECT(gbc.pc(), 0x42b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0028
        gbc.setState(0x3560, 0xef12, 0x9a20, 0x8bdf, 0x592c, 0x65df, 0x1, 0x1);
        gbc.writeMem(0x3560, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xef12);
        EXPECT(gbc.pc(), 0x3562);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0029
        gbc.setState(0xc2d3, 0xd07b, 0xf4b0, 0xebf7, 0x2518, 0x4e0b, 0x0, 0x1);
        gbc.writeMem(0xc2d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xd07b);
        EXPECT(gbc.pc(), 0xc2d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2d3), 0xcb);
        EXPECT(gbc.readMem(0xc2d4), 0x67);
        // CB 67 002A
        gbc.setState(0xb10e, 0x629a, 0xbe30, 0xac3a, 0x58b8, 0x1594, 0x1, 0x1);
        gbc.writeMem(0xb10e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x629a);
        EXPECT(gbc.pc(), 0xb110);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb10e), 0xcb);
        EXPECT(gbc.readMem(0xb10f), 0x67);
        // CB 67 002B
        gbc.setState(0xf9c, 0x4e, 0x6140, 0xd857, 0x90c2, 0x56a2, 0x0, 0x0);
        gbc.writeMem(0xf9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4e);
        EXPECT(gbc.pc(), 0xf9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 002C
        gbc.setState(0xbbe7, 0x1511, 0xd6b0, 0xa5d7, 0x5993, 0x40e2, 0x0, 0x1);
        gbc.writeMem(0xbbe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1511);
        EXPECT(gbc.pc(), 0xbbe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbe7), 0xcb);
        EXPECT(gbc.readMem(0xbbe8), 0x67);
        // CB 67 002D
        gbc.setState(0xbf7b, 0x75ca, 0x5df0, 0x7d46, 0x8d96, 0xe052, 0x1, 0x0);
        gbc.writeMem(0xbf7b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x75ca);
        EXPECT(gbc.pc(), 0xbf7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7b), 0xcb);
        EXPECT(gbc.readMem(0xbf7c), 0x67);
        // CB 67 002E
        gbc.setState(0xe217, 0x9641, 0x5be0, 0xac7a, 0xe10c, 0x157e, 0x1, 0x0);
        gbc.writeMem(0xe217, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9641);
        EXPECT(gbc.pc(), 0xe219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe217), 0xcb);
        EXPECT(gbc.readMem(0xe218), 0x67);
        // CB 67 002F
        gbc.setState(0x1d16, 0xc451, 0x2c60, 0xa03, 0x3072, 0xe650, 0x0, 0x0);
        gbc.writeMem(0x1d16, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc451);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0030
        gbc.setState(0xd407, 0x1dfa, 0x4990, 0xea10, 0xb7d3, 0xa693, 0x1, 0x0);
        gbc.writeMem(0xd407, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1dfa);
        EXPECT(gbc.pc(), 0xd409);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd407), 0xcb);
        EXPECT(gbc.readMem(0xd408), 0x67);
        // CB 67 0031
        gbc.setState(0xb7c2, 0x2f17, 0xc1b0, 0xc486, 0x9c5a, 0xb844, 0x1, 0x0);
        gbc.writeMem(0xb7c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2f17);
        EXPECT(gbc.pc(), 0xb7c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c2), 0xcb);
        EXPECT(gbc.readMem(0xb7c3), 0x67);
        // CB 67 0032
        gbc.setState(0xde99, 0xcd76, 0x6e80, 0x5842, 0xd95a, 0x330b, 0x0, 0x0);
        gbc.writeMem(0xde99, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcd76);
        EXPECT(gbc.pc(), 0xde9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde99), 0xcb);
        EXPECT(gbc.readMem(0xde9a), 0x67);
        // CB 67 0033
        gbc.setState(0x1e20, 0xe4fc, 0x7f70, 0x731f, 0xf689, 0x6441, 0x0, 0x0);
        gbc.writeMem(0x1e20, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xe4fc);
        EXPECT(gbc.pc(), 0x1e22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0034
        gbc.setState(0xeb0e, 0x7a0b, 0x4250, 0xd3a, 0x1f44, 0xc12, 0x1, 0x0);
        gbc.writeMem(0xeb0e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7a0b);
        EXPECT(gbc.pc(), 0xeb10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb0e), 0xcb);
        EXPECT(gbc.readMem(0xeb0f), 0x67);
        // CB 67 0035
        gbc.setState(0x9a92, 0x8775, 0x3eb0, 0x1f69, 0xa4e0, 0x79c8, 0x1, 0x1);
        gbc.writeMem(0x9a92, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8775);
        EXPECT(gbc.pc(), 0x9a94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a92), 0xcb);
        EXPECT(gbc.readMem(0x9a93), 0x67);
        // CB 67 0036
        gbc.setState(0x7c1d, 0xecd, 0x67d0, 0x3c15, 0x1d40, 0xf95, 0x1, 0x1);
        gbc.writeMem(0x7c1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xecd);
        EXPECT(gbc.pc(), 0x7c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0037
        gbc.setState(0x3a58, 0xada1, 0x46b0, 0x9e3d, 0x29d9, 0xbe0e, 0x1, 0x1);
        gbc.writeMem(0x3a58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xada1);
        EXPECT(gbc.pc(), 0x3a5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0038
        gbc.setState(0x4b10, 0x8be6, 0xf620, 0x7a93, 0x3478, 0x8df4, 0x0, 0x1);
        gbc.writeMem(0x4b10, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x8be6);
        EXPECT(gbc.pc(), 0x4b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0039
        gbc.setState(0xbbc4, 0xa8bf, 0xfb70, 0x47a3, 0xa8c8, 0x36af, 0x1, 0x0);
        gbc.writeMem(0xbbc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa8bf);
        EXPECT(gbc.pc(), 0xbbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc4), 0xcb);
        EXPECT(gbc.readMem(0xbbc5), 0x67);
        // CB 67 003A
        gbc.setState(0x2b35, 0x2cdd, 0x7c0, 0x85e6, 0x55ff, 0x3e15, 0x1, 0x1);
        gbc.writeMem(0x2b35, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2cdd);
        EXPECT(gbc.pc(), 0x2b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 003B
        gbc.setState(0x64ba, 0x65fc, 0xa870, 0x97a5, 0x8f3d, 0x8a12, 0x0, 0x0);
        gbc.writeMem(0x64ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x65fc);
        EXPECT(gbc.pc(), 0x64bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 003C
        gbc.setState(0x6467, 0x260d, 0xfa00, 0x3a16, 0xb9d5, 0x1c91, 0x0, 0x1);
        gbc.writeMem(0x6467, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x260d);
        EXPECT(gbc.pc(), 0x6469);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 003D
        gbc.setState(0x780d, 0x3091, 0x3150, 0x4e01, 0x3d48, 0xb0c5, 0x0, 0x1);
        gbc.writeMem(0x780d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3091);
        EXPECT(gbc.pc(), 0x780f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 003E
        gbc.setState(0x17a0, 0xc3e7, 0x69f0, 0x1873, 0xceae, 0xa9b8, 0x1, 0x1);
        gbc.writeMem(0x17a0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc3e7);
        EXPECT(gbc.pc(), 0x17a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 003F
        gbc.setState(0x7b33, 0x427a, 0x1a80, 0xb5e, 0x7284, 0x4a2, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x427a);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0040
        gbc.setState(0x1eec, 0xdac5, 0xb560, 0x1627, 0x3f5d, 0xe0e4, 0x0, 0x1);
        gbc.writeMem(0x1eec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdac5);
        EXPECT(gbc.pc(), 0x1eee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0041
        gbc.setState(0x7101, 0xf4ed, 0xd7c0, 0xbbaf, 0x4299, 0x33c7, 0x1, 0x0);
        gbc.writeMem(0x7101, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf4ed);
        EXPECT(gbc.pc(), 0x7103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0042
        gbc.setState(0x3f18, 0x2b31, 0x7400, 0x7450, 0x15e0, 0x8874, 0x0, 0x1);
        gbc.writeMem(0x3f18, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2b31);
        EXPECT(gbc.pc(), 0x3f1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0043
        gbc.setState(0xcc1e, 0x1d0d, 0x89b0, 0x3433, 0x6309, 0xb803, 0x1, 0x0);
        gbc.writeMem(0xcc1e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1d0d);
        EXPECT(gbc.pc(), 0xcc20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1e), 0xcb);
        EXPECT(gbc.readMem(0xcc1f), 0x67);
        // CB 67 0044
        gbc.setState(0x7fe2, 0xa788, 0xe140, 0x5013, 0xde37, 0xf259, 0x0, 0x0);
        gbc.writeMem(0x7fe2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa788);
        EXPECT(gbc.pc(), 0x7fe4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0045
        gbc.setState(0xbb81, 0x632c, 0xa9a0, 0x2dff, 0x4f30, 0xc1, 0x1, 0x0);
        gbc.writeMem(0xbb81, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x632c);
        EXPECT(gbc.pc(), 0xbb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb81), 0xcb);
        EXPECT(gbc.readMem(0xbb82), 0x67);
        // CB 67 0046
        gbc.setState(0x2367, 0xd6a0, 0x870, 0xe52b, 0x4067, 0x5c, 0x1, 0x0);
        gbc.writeMem(0x2367, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd6a0);
        EXPECT(gbc.pc(), 0x2369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0047
        gbc.setState(0x737d, 0xe50e, 0x37f0, 0xae33, 0x73fb, 0x71fc, 0x0, 0x1);
        gbc.writeMem(0x737d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xe50e);
        EXPECT(gbc.pc(), 0x737f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0048
        gbc.setState(0x107d, 0xd1c4, 0xf280, 0xba1, 0xe7f3, 0xb285, 0x0, 0x0);
        gbc.writeMem(0x107d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xd1c4);
        EXPECT(gbc.pc(), 0x107f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0049
        gbc.setState(0xdc8, 0x8bfe, 0xbc60, 0x8919, 0x1f85, 0x184f, 0x0, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x8bfe);
        EXPECT(gbc.pc(), 0xdca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 004A
        gbc.setState(0x424f, 0xa6c, 0xe3b0, 0x7675, 0x2186, 0x3a57, 0x0, 0x1);
        gbc.writeMem(0x424f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa6c);
        EXPECT(gbc.pc(), 0x4251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 004B
        gbc.setState(0x9d93, 0xde30, 0x35a0, 0x4aa2, 0x389f, 0xe2e3, 0x0, 0x0);
        gbc.writeMem(0x9d93, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xde30);
        EXPECT(gbc.pc(), 0x9d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d93), 0xcb);
        EXPECT(gbc.readMem(0x9d94), 0x67);
        // CB 67 004C
        gbc.setState(0xa389, 0x21bb, 0x7700, 0x742b, 0x91d9, 0xa4c3, 0x1, 0x1);
        gbc.writeMem(0xa389, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x21bb);
        EXPECT(gbc.pc(), 0xa38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa389), 0xcb);
        EXPECT(gbc.readMem(0xa38a), 0x67);
        // CB 67 004D
        gbc.setState(0x185f, 0xd24c, 0x9d80, 0x1786, 0x18a9, 0x7c24, 0x1, 0x0);
        gbc.writeMem(0x185f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xd24c);
        EXPECT(gbc.pc(), 0x1861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 004F
        gbc.setState(0xc694, 0xa4cc, 0x69d0, 0x9ff4, 0x5f2a, 0x8237, 0x1, 0x1);
        gbc.writeMem(0xc694, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa4cc);
        EXPECT(gbc.pc(), 0xc696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc694), 0xcb);
        EXPECT(gbc.readMem(0xc695), 0x67);
        // CB 67 0050
        gbc.setState(0xd89e, 0x7ae2, 0x5ef0, 0x7f79, 0xaf4b, 0xcb84, 0x1, 0x1);
        gbc.writeMem(0xd89e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7ae2);
        EXPECT(gbc.pc(), 0xd8a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89e), 0xcb);
        EXPECT(gbc.readMem(0xd89f), 0x67);
        // CB 67 0051
        gbc.setState(0x2ee6, 0x7c49, 0xed50, 0x6d7f, 0xdd27, 0x283e, 0x0, 0x0);
        gbc.writeMem(0x2ee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7c49);
        EXPECT(gbc.pc(), 0x2ee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0052
        gbc.setState(0x744b, 0x47be, 0xfb20, 0x9966, 0xddc7, 0x84d9, 0x1, 0x1);
        gbc.writeMem(0x744b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x47be);
        EXPECT(gbc.pc(), 0x744d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0053
        gbc.setState(0xe3a3, 0xc8b2, 0x50e0, 0xb448, 0x9151, 0x3aad, 0x1, 0x1);
        gbc.writeMem(0xe3a3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc8b2);
        EXPECT(gbc.pc(), 0xe3a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a3), 0xcb);
        EXPECT(gbc.readMem(0xe3a4), 0x67);
        // CB 67 0054
        gbc.setState(0x827f, 0x2625, 0x4c50, 0x6009, 0x1f2c, 0x5462, 0x1, 0x0);
        gbc.writeMem(0x827f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2625);
        EXPECT(gbc.pc(), 0x8281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x827f), 0xcb);
        EXPECT(gbc.readMem(0x8280), 0x67);
        // CB 67 0055
        gbc.setState(0x72ba, 0x533c, 0x8290, 0xe467, 0xa685, 0x7404, 0x1, 0x1);
        gbc.writeMem(0x72ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x533c);
        EXPECT(gbc.pc(), 0x72bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0056
        gbc.setState(0xe187, 0x5e23, 0xc30, 0xb298, 0xf540, 0x56d3, 0x0, 0x0);
        gbc.writeMem(0xe187, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5e23);
        EXPECT(gbc.pc(), 0xe189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe187), 0xcb);
        EXPECT(gbc.readMem(0xe188), 0x67);
        // CB 67 0057
        gbc.setState(0xdcea, 0x32dd, 0xf360, 0xe878, 0xe167, 0xe78, 0x0, 0x1);
        gbc.writeMem(0xdcea, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x32dd);
        EXPECT(gbc.pc(), 0xdcec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcea), 0xcb);
        EXPECT(gbc.readMem(0xdceb), 0x67);
        // CB 67 0058
        gbc.setState(0x9f10, 0x4ced, 0x2750, 0x39c, 0x1cd0, 0x4c5e, 0x1, 0x1);
        gbc.writeMem(0x9f10, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x4ced);
        EXPECT(gbc.pc(), 0x9f12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f10), 0xcb);
        EXPECT(gbc.readMem(0x9f11), 0x67);
        // CB 67 0059
        gbc.setState(0xabfa, 0x607e, 0xf590, 0xdf09, 0x7301, 0x6eac, 0x0, 0x0);
        gbc.writeMem(0xabfa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x607e);
        EXPECT(gbc.pc(), 0xabfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabfa), 0xcb);
        EXPECT(gbc.readMem(0xabfb), 0x67);
        // CB 67 005A
        gbc.setState(0xdbe7, 0x453e, 0x5280, 0x5e75, 0x1cf4, 0xe2c4, 0x1, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x453e);
        EXPECT(gbc.pc(), 0xdbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe7), 0xcb);
        EXPECT(gbc.readMem(0xdbe8), 0x67);
        // CB 67 005B
        gbc.setState(0x9927, 0xa5c6, 0x1d80, 0xaa2, 0x8b3a, 0xd3f6, 0x1, 0x1);
        gbc.writeMem(0x9927, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa5c6);
        EXPECT(gbc.pc(), 0x9929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9927), 0xcb);
        EXPECT(gbc.readMem(0x9928), 0x67);
        // CB 67 005C
        gbc.setState(0x93f, 0x982e, 0xb290, 0x6a3, 0xffc0, 0x5c6f, 0x1, 0x1);
        gbc.writeMem(0x93f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x982e);
        EXPECT(gbc.pc(), 0x941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 005D
        gbc.setState(0xcfad, 0x4ec3, 0x6160, 0x4ce, 0x1fc7, 0xbe4c, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4ec3);
        EXPECT(gbc.pc(), 0xcfaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfad), 0xcb);
        EXPECT(gbc.readMem(0xcfae), 0x67);
        // CB 67 005E
        gbc.setState(0xe7bd, 0xa490, 0x1b0, 0x22e3, 0x3fe4, 0x9742, 0x0, 0x1);
        gbc.writeMem(0xe7bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa490);
        EXPECT(gbc.pc(), 0xe7bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bd), 0xcb);
        EXPECT(gbc.readMem(0xe7be), 0x67);
        // CB 67 005F
        gbc.setState(0xcabd, 0xe632, 0xed00, 0x205, 0xc7a2, 0x8944, 0x0, 0x0);
        gbc.writeMem(0xcabd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xe632);
        EXPECT(gbc.pc(), 0xcabf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcabd), 0xcb);
        EXPECT(gbc.readMem(0xcabe), 0x67);
        // CB 67 0060
        gbc.setState(0x7557, 0x619b, 0xadb0, 0x2da2, 0xe106, 0xe070, 0x1, 0x1);
        gbc.writeMem(0x7557, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x619b);
        EXPECT(gbc.pc(), 0x7559);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0061
        gbc.setState(0x7794, 0xf28a, 0xf0f0, 0xa056, 0x2862, 0xb9e1, 0x0, 0x0);
        gbc.writeMem(0x7794, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf28a);
        EXPECT(gbc.pc(), 0x7796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0062
        gbc.setState(0x8efd, 0x7125, 0xa720, 0x1578, 0xfb7e, 0xee95, 0x0, 0x1);
        gbc.writeMem(0x8efd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x8eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efd), 0xcb);
        EXPECT(gbc.readMem(0x8efe), 0x67);
        // CB 67 0063
        gbc.setState(0x1c01, 0x9d85, 0x5370, 0x7a4b, 0x41b7, 0x1705, 0x0, 0x0);
        gbc.writeMem(0x1c01, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9d85);
        EXPECT(gbc.pc(), 0x1c03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0064
        gbc.setState(0x4d03, 0x8a69, 0x5620, 0x4fba, 0xb524, 0xe068, 0x1, 0x1);
        gbc.writeMem(0x4d03, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0x4d05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0065
        gbc.setState(0x9720, 0xe643, 0x6c80, 0xba1e, 0xd922, 0xad02, 0x0, 0x0);
        gbc.writeMem(0x9720, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe643);
        EXPECT(gbc.pc(), 0x9722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9720), 0xcb);
        EXPECT(gbc.readMem(0x9721), 0x67);
        // CB 67 0066
        gbc.setState(0x4883, 0x4e6f, 0xc300, 0xe280, 0xc39b, 0xdcb9, 0x0, 0x1);
        gbc.writeMem(0x4883, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x4e6f);
        EXPECT(gbc.pc(), 0x4885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0067
        gbc.setState(0xb307, 0xb487, 0xe7c0, 0xc0d5, 0x431a, 0xab4f, 0x1, 0x0);
        gbc.writeMem(0xb307, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb487);
        EXPECT(gbc.pc(), 0xb309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb307), 0xcb);
        EXPECT(gbc.readMem(0xb308), 0x67);
        // CB 67 0069
        gbc.setState(0xbd22, 0x50e3, 0x2590, 0x53bc, 0x7404, 0x4347, 0x1, 0x1);
        gbc.writeMem(0xbd22, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x50e3);
        EXPECT(gbc.pc(), 0xbd24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd22), 0xcb);
        EXPECT(gbc.readMem(0xbd23), 0x67);
        // CB 67 006A
        gbc.setState(0x3d8f, 0xda95, 0x980, 0xeaf7, 0xa633, 0x9a8d, 0x0, 0x0);
        gbc.writeMem(0x3d8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xda95);
        EXPECT(gbc.pc(), 0x3d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 006B
        gbc.setState(0x7bdf, 0xbd25, 0x8720, 0x99f0, 0xd5ac, 0xe65d, 0x0, 0x1);
        gbc.writeMem(0x7bdf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xbd25);
        EXPECT(gbc.pc(), 0x7be1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 006C
        gbc.setState(0x2ce2, 0x27b9, 0x7480, 0x2210, 0xe4c0, 0xa000, 0x1, 0x0);
        gbc.writeMem(0x2ce2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x27b9);
        EXPECT(gbc.pc(), 0x2ce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 006D
        gbc.setState(0x72ef, 0x63c7, 0x6360, 0xc908, 0xdaa9, 0xcff0, 0x1, 0x0);
        gbc.writeMem(0x72ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x63c7);
        EXPECT(gbc.pc(), 0x72f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 006E
        gbc.setState(0x92a7, 0x6857, 0xdf10, 0x4366, 0x1cb0, 0xc0b9, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6857);
        EXPECT(gbc.pc(), 0x92a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a7), 0xcb);
        EXPECT(gbc.readMem(0x92a8), 0x67);
        // CB 67 006F
        gbc.setState(0xa7bf, 0xf450, 0x80e0, 0x4d8e, 0x8de9, 0x8a6, 0x1, 0x0);
        gbc.writeMem(0xa7bf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf450);
        EXPECT(gbc.pc(), 0xa7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bf), 0xcb);
        EXPECT(gbc.readMem(0xa7c0), 0x67);
        // CB 67 0070
        gbc.setState(0xd827, 0x67dc, 0xa690, 0x8167, 0xd598, 0xfe8a, 0x0, 0x1);
        gbc.writeMem(0xd827, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x67dc);
        EXPECT(gbc.pc(), 0xd829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd827), 0xcb);
        EXPECT(gbc.readMem(0xd828), 0x67);
        // CB 67 0071
        gbc.setState(0xc41c, 0x9def, 0x9370, 0x183f, 0xc950, 0xc239, 0x1, 0x0);
        gbc.writeMem(0xc41c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9def);
        EXPECT(gbc.pc(), 0xc41e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc41c), 0xcb);
        EXPECT(gbc.readMem(0xc41d), 0x67);
        // CB 67 0072
        gbc.setState(0xe281, 0x5121, 0xe310, 0xa8a4, 0x8ab2, 0x80b4, 0x0, 0x1);
        gbc.writeMem(0xe281, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5121);
        EXPECT(gbc.pc(), 0xe283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe281), 0xcb);
        EXPECT(gbc.readMem(0xe282), 0x67);
        // CB 67 0073
        gbc.setState(0x3754, 0x6573, 0x6d90, 0xa5a4, 0xb6ab, 0x8d0, 0x0, 0x0);
        gbc.writeMem(0x3754, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6573);
        EXPECT(gbc.pc(), 0x3756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0074
        gbc.setState(0x79c7, 0x8e21, 0x6bd0, 0x97c1, 0x815c, 0xd99b, 0x0, 0x1);
        gbc.writeMem(0x79c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8e21);
        EXPECT(gbc.pc(), 0x79c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0075
        gbc.setState(0x6761, 0xfce0, 0x2c50, 0x4c67, 0x7269, 0x737f, 0x0, 0x1);
        gbc.writeMem(0x6761, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfce0);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0076
        gbc.setState(0xe2a6, 0xfe7d, 0x25a0, 0xf73f, 0x2ba9, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0xe2a6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0xe2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a6), 0xcb);
        EXPECT(gbc.readMem(0xe2a7), 0x67);
        // CB 67 0077
        gbc.setState(0xebf3, 0x6188, 0x5da0, 0xa624, 0x16a1, 0x112a, 0x0, 0x1);
        gbc.writeMem(0xebf3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x6188);
        EXPECT(gbc.pc(), 0xebf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf3), 0xcb);
        EXPECT(gbc.readMem(0xebf4), 0x67);
        // CB 67 0079
        gbc.setState(0xb383, 0x3e69, 0xa180, 0x3516, 0xcb8a, 0xbc7d, 0x0, 0x0);
        gbc.writeMem(0xb383, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3e69);
        EXPECT(gbc.pc(), 0xb385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb383), 0xcb);
        EXPECT(gbc.readMem(0xb384), 0x67);
        // CB 67 007A
        gbc.setState(0xb73e, 0x93e2, 0x51a0, 0x129f, 0x4de3, 0xce69, 0x1, 0x0);
        gbc.writeMem(0xb73e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x93e2);
        EXPECT(gbc.pc(), 0xb740);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73e), 0xcb);
        EXPECT(gbc.readMem(0xb73f), 0x67);
        // CB 67 007B
        gbc.setState(0x6664, 0x2e02, 0x8a20, 0xbaa2, 0xab0, 0x819e, 0x1, 0x0);
        gbc.writeMem(0x6664, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2e02);
        EXPECT(gbc.pc(), 0x6666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 007C
        gbc.setState(0x54cb, 0x59dd, 0x2f30, 0x4e37, 0x6623, 0x5e5f, 0x0, 0x0);
        gbc.writeMem(0x54cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x59dd);
        EXPECT(gbc.pc(), 0x54cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 007D
        gbc.setState(0xeaf9, 0x37b, 0x13d0, 0xdc5b, 0x147b, 0xcd29, 0x0, 0x1);
        gbc.writeMem(0xeaf9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x37b);
        EXPECT(gbc.pc(), 0xeafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf9), 0xcb);
        EXPECT(gbc.readMem(0xeafa), 0x67);
        // CB 67 007E
        gbc.setState(0xac05, 0x346e, 0x1b00, 0x84ca, 0xc482, 0xd0fd, 0x1, 0x1);
        gbc.writeMem(0xac05, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x346e);
        EXPECT(gbc.pc(), 0xac07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac05), 0xcb);
        EXPECT(gbc.readMem(0xac06), 0x67);
        // CB 67 007F
        gbc.setState(0x4121, 0x6456, 0x8ab0, 0x859f, 0xbd53, 0x29a6, 0x1, 0x0);
        gbc.writeMem(0x4121, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0x4123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0080
        gbc.setState(0x6baa, 0x9f03, 0xfe0, 0xafc5, 0x8ba, 0xba1b, 0x1, 0x0);
        gbc.writeMem(0x6baa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x9f03);
        EXPECT(gbc.pc(), 0x6bac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0081
        gbc.setState(0x7147, 0x7aaf, 0xae30, 0x8065, 0x9e4a, 0x8466, 0x0, 0x0);
        gbc.writeMem(0x7147, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7aaf);
        EXPECT(gbc.pc(), 0x7149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0082
        gbc.setState(0xb95e, 0xaab9, 0x880, 0xa305, 0x8774, 0x2ff7, 0x1, 0x0);
        gbc.writeMem(0xb95e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaab9);
        EXPECT(gbc.pc(), 0xb960);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb95e), 0xcb);
        EXPECT(gbc.readMem(0xb95f), 0x67);
        // CB 67 0083
        gbc.setState(0x938d, 0x83af, 0xf340, 0x7986, 0xc0b6, 0x1d35, 0x1, 0x1);
        gbc.writeMem(0x938d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x83af);
        EXPECT(gbc.pc(), 0x938f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938d), 0xcb);
        EXPECT(gbc.readMem(0x938e), 0x67);
        // CB 67 0084
        gbc.setState(0x7db4, 0x5598, 0xb090, 0x90b5, 0xbe27, 0x4098, 0x0, 0x0);
        gbc.writeMem(0x7db4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5598);
        EXPECT(gbc.pc(), 0x7db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0085
        gbc.setState(0xde3a, 0x1b20, 0x38f0, 0xcf96, 0xe355, 0xf782, 0x0, 0x0);
        gbc.writeMem(0xde3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x1b20);
        EXPECT(gbc.pc(), 0xde3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde3a), 0xcb);
        EXPECT(gbc.readMem(0xde3b), 0x67);
        // CB 67 0086
        gbc.setState(0x4627, 0x8a73, 0x8ec0, 0xc6a4, 0xcfce, 0x2c7f, 0x0, 0x0);
        gbc.writeMem(0x4627, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8a73);
        EXPECT(gbc.pc(), 0x4629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0087
        gbc.setState(0xc87a, 0x17e5, 0xaaf0, 0x3f6f, 0xe414, 0x155f, 0x0, 0x1);
        gbc.writeMem(0xc87a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x17e5);
        EXPECT(gbc.pc(), 0xc87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87a), 0xcb);
        EXPECT(gbc.readMem(0xc87b), 0x67);
        // CB 67 0088
        gbc.setState(0x8356, 0x69dd, 0xc90, 0xabbd, 0x1c18, 0x947f, 0x1, 0x0);
        gbc.writeMem(0x8356, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x69dd);
        EXPECT(gbc.pc(), 0x8358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8356), 0xcb);
        EXPECT(gbc.readMem(0x8357), 0x67);
        // CB 67 0089
        gbc.setState(0x2262, 0x83a1, 0x29b0, 0x332, 0xf29a, 0x72a7, 0x0, 0x0);
        gbc.writeMem(0x2262, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x83a1);
        EXPECT(gbc.pc(), 0x2264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 008A
        gbc.setState(0x5243, 0x28be, 0x45f0, 0xbfcd, 0x4b48, 0xb964, 0x0, 0x1);
        gbc.writeMem(0x5243, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x28be);
        EXPECT(gbc.pc(), 0x5245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 008B
        gbc.setState(0x4ea0, 0x558b, 0x8540, 0xa453, 0xe911, 0x7dd6, 0x0, 0x1);
        gbc.writeMem(0x4ea0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x558b);
        EXPECT(gbc.pc(), 0x4ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 008C
        gbc.setState(0xe883, 0xd044, 0xf670, 0x1698, 0x439f, 0x8289, 0x0, 0x1);
        gbc.writeMem(0xe883, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd044);
        EXPECT(gbc.pc(), 0xe885);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe883), 0xcb);
        EXPECT(gbc.readMem(0xe884), 0x67);
        // CB 67 008D
        gbc.setState(0x886a, 0xd51d, 0xf2e0, 0x557f, 0x6e51, 0x2f30, 0x1, 0x1);
        gbc.writeMem(0x886a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd51d);
        EXPECT(gbc.pc(), 0x886c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x886a), 0xcb);
        EXPECT(gbc.readMem(0x886b), 0x67);
        // CB 67 008E
        gbc.setState(0x20e, 0x3d85, 0xde20, 0x72d6, 0xcfb0, 0x44ec, 0x1, 0x1);
        gbc.writeMem(0x20e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3d85);
        EXPECT(gbc.pc(), 0x210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 008F
        gbc.setState(0xf4d, 0xfb3b, 0x5470, 0xd33, 0x5ebd, 0xa25e, 0x0, 0x1);
        gbc.writeMem(0xf4d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfb3b);
        EXPECT(gbc.pc(), 0xf4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0090
        gbc.setState(0xd808, 0xbaad, 0x8e80, 0x6ef5, 0x14bb, 0x7641, 0x0, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xbaad);
        EXPECT(gbc.pc(), 0xd80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd808), 0xcb);
        EXPECT(gbc.readMem(0xd809), 0x67);
        // CB 67 0092
        gbc.setState(0x1fe7, 0x2c80, 0x4360, 0x926f, 0x32a9, 0x80f6, 0x0, 0x0);
        gbc.writeMem(0x1fe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2c80);
        EXPECT(gbc.pc(), 0x1fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0093
        gbc.setState(0x4b8, 0xa983, 0x28f0, 0xf50d, 0xaf40, 0x3c60, 0x0, 0x1);
        gbc.writeMem(0x4b8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa983);
        EXPECT(gbc.pc(), 0x4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0094
        gbc.setState(0x3910, 0x6c67, 0x5760, 0x3700, 0x20a0, 0x985b, 0x1, 0x1);
        gbc.writeMem(0x3910, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6c67);
        EXPECT(gbc.pc(), 0x3912);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0095
        gbc.setState(0xbbed, 0x9074, 0xc770, 0x4f30, 0xf50c, 0x4cae, 0x0, 0x0);
        gbc.writeMem(0xbbed, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9074);
        EXPECT(gbc.pc(), 0xbbef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbed), 0xcb);
        EXPECT(gbc.readMem(0xbbee), 0x67);
        // CB 67 0096
        gbc.setState(0x58ad, 0x30a0, 0xc540, 0x8a1b, 0x2941, 0x1c8c, 0x1, 0x1);
        gbc.writeMem(0x58ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x30a0);
        EXPECT(gbc.pc(), 0x58af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0097
        gbc.setState(0x4f37, 0x51db, 0x7530, 0xc784, 0x86ae, 0x124c, 0x1, 0x1);
        gbc.writeMem(0x4f37, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x51db);
        EXPECT(gbc.pc(), 0x4f39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0098
        gbc.setState(0x71f, 0xaffe, 0x4320, 0x4098, 0x212, 0xeb1b, 0x0, 0x0);
        gbc.writeMem(0x71f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaffe);
        EXPECT(gbc.pc(), 0x721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0099
        gbc.setState(0xd2e3, 0xd543, 0x4000, 0x360c, 0x7cff, 0xf4b9, 0x0, 0x1);
        gbc.writeMem(0xd2e3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd543);
        EXPECT(gbc.pc(), 0xd2e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e3), 0xcb);
        EXPECT(gbc.readMem(0xd2e4), 0x67);
        // CB 67 009B
        gbc.setState(0x5bf1, 0x8ac6, 0x1c30, 0xc61e, 0x459c, 0x335e, 0x0, 0x1);
        gbc.writeMem(0x5bf1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8ac6);
        EXPECT(gbc.pc(), 0x5bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 009D
        gbc.setState(0x5673, 0x5266, 0x15a0, 0xcdce, 0x910a, 0x4eb4, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5266);
        EXPECT(gbc.pc(), 0x5675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 009E
        gbc.setState(0xcef5, 0xe9bf, 0x23c0, 0x2cd9, 0xd8ce, 0x2fd7, 0x0, 0x0);
        gbc.writeMem(0xcef5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe9bf);
        EXPECT(gbc.pc(), 0xcef7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef5), 0xcb);
        EXPECT(gbc.readMem(0xcef6), 0x67);
        // CB 67 009F
        gbc.setState(0x4e58, 0x7435, 0xc470, 0xd6f7, 0xb783, 0xcf05, 0x0, 0x0);
        gbc.writeMem(0x4e58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7435);
        EXPECT(gbc.pc(), 0x4e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00A0
        gbc.setState(0x9183, 0x668e, 0xc5e0, 0xee80, 0x64a2, 0x680a, 0x1, 0x0);
        gbc.writeMem(0x9183, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x668e);
        EXPECT(gbc.pc(), 0x9185);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9183), 0xcb);
        EXPECT(gbc.readMem(0x9184), 0x67);
        // CB 67 00A2
        gbc.setState(0xef1b, 0x4b88, 0x2b20, 0x6654, 0x550a, 0xb1dd, 0x0, 0x0);
        gbc.writeMem(0xef1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4b88);
        EXPECT(gbc.pc(), 0xef1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef1b), 0xcb);
        EXPECT(gbc.readMem(0xef1c), 0x67);
        // CB 67 00A3
        gbc.setState(0x8991, 0x646f, 0xe620, 0xecaf, 0x2b8b, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x8991, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x646f);
        EXPECT(gbc.pc(), 0x8993);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8991), 0xcb);
        EXPECT(gbc.readMem(0x8992), 0x67);
        // CB 67 00A4
        gbc.setState(0x3fa8, 0x3ec6, 0xd710, 0x660b, 0x975f, 0x3ea3, 0x0, 0x1);
        gbc.writeMem(0x3fa8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3ec6);
        EXPECT(gbc.pc(), 0x3faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00A5
        gbc.setState(0x7978, 0x7a5f, 0xba50, 0x97f1, 0x3448, 0x56f1, 0x0, 0x1);
        gbc.writeMem(0x7978, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7a5f);
        EXPECT(gbc.pc(), 0x797a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00A6
        gbc.setState(0xc3ef, 0x66, 0x9200, 0x16d4, 0x344f, 0xe393, 0x1, 0x0);
        gbc.writeMem(0xc3ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x66);
        EXPECT(gbc.pc(), 0xc3f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ef), 0xcb);
        EXPECT(gbc.readMem(0xc3f0), 0x67);
        // CB 67 00A7
        gbc.setState(0x6095, 0xf546, 0x1110, 0x36bb, 0xb78, 0x7f18, 0x1, 0x0);
        gbc.writeMem(0x6095, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf546);
        EXPECT(gbc.pc(), 0x6097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00A8
        gbc.setState(0x5ef3, 0xdc1f, 0xd900, 0x50e6, 0xc580, 0x9c7c, 0x0, 0x0);
        gbc.writeMem(0x5ef3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdc1f);
        EXPECT(gbc.pc(), 0x5ef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00A9
        gbc.setState(0x5c38, 0xf75c, 0x83d0, 0x1926, 0x7397, 0xac31, 0x1, 0x0);
        gbc.writeMem(0x5c38, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf75c);
        EXPECT(gbc.pc(), 0x5c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00AA
        gbc.setState(0xe1c8, 0xb3c6, 0xf4c0, 0x5850, 0xb1ab, 0xe904, 0x0, 0x0);
        gbc.writeMem(0xe1c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb3c6);
        EXPECT(gbc.pc(), 0xe1ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1c8), 0xcb);
        EXPECT(gbc.readMem(0xe1c9), 0x67);
        // CB 67 00AB
        gbc.setState(0x843b, 0xe8e6, 0xa50, 0x4ff9, 0x8686, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x843b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe8e6);
        EXPECT(gbc.pc(), 0x843d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843b), 0xcb);
        EXPECT(gbc.readMem(0x843c), 0x67);
        // CB 67 00AC
        gbc.setState(0xd252, 0xb5ea, 0xc880, 0x9f1, 0x70e6, 0xa6b1, 0x1, 0x1);
        gbc.writeMem(0xd252, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xb5ea);
        EXPECT(gbc.pc(), 0xd254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd252), 0xcb);
        EXPECT(gbc.readMem(0xd253), 0x67);
        // CB 67 00AD
        gbc.setState(0x4d3d, 0xfa54, 0x8940, 0x2884, 0xa386, 0xd48b, 0x1, 0x0);
        gbc.writeMem(0x4d3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xfa54);
        EXPECT(gbc.pc(), 0x4d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00AE
        gbc.setState(0xbee6, 0x9f25, 0x8b90, 0x996f, 0x524f, 0xd954, 0x1, 0x0);
        gbc.writeMem(0xbee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9f25);
        EXPECT(gbc.pc(), 0xbee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee6), 0xcb);
        EXPECT(gbc.readMem(0xbee7), 0x67);
        // CB 67 00AF
        gbc.setState(0x8132, 0xc9ff, 0x28f0, 0x8f30, 0xe547, 0xe938, 0x1, 0x1);
        gbc.writeMem(0x8132, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc9ff);
        EXPECT(gbc.pc(), 0x8134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8132), 0xcb);
        EXPECT(gbc.readMem(0x8133), 0x67);
        // CB 67 00B0
        gbc.setState(0x89b4, 0x80aa, 0x5280, 0xdba5, 0x246c, 0x515f, 0x1, 0x0);
        gbc.writeMem(0x89b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x80aa);
        EXPECT(gbc.pc(), 0x89b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b4), 0xcb);
        EXPECT(gbc.readMem(0x89b5), 0x67);
        // CB 67 00B1
        gbc.setState(0x6019, 0xd019, 0x6770, 0xf681, 0x4330, 0x489e, 0x1, 0x0);
        gbc.writeMem(0x6019, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd019);
        EXPECT(gbc.pc(), 0x601b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00B2
        gbc.setState(0x1d1f, 0xead1, 0x57d0, 0xde95, 0x717, 0xd7af, 0x1, 0x1);
        gbc.writeMem(0x1d1f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xead1);
        EXPECT(gbc.pc(), 0x1d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00B3
        gbc.setState(0x9d88, 0x9643, 0x4820, 0xfcfe, 0x7bbc, 0x7ad5, 0x0, 0x0);
        gbc.writeMem(0x9d88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x9643);
        EXPECT(gbc.pc(), 0x9d8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d88), 0xcb);
        EXPECT(gbc.readMem(0x9d89), 0x67);
        // CB 67 00B4
        gbc.setState(0xe856, 0x5b62, 0xdf20, 0x3b85, 0xb7b1, 0x98de, 0x0, 0x0);
        gbc.writeMem(0xe856, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5b62);
        EXPECT(gbc.pc(), 0xe858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe856), 0xcb);
        EXPECT(gbc.readMem(0xe857), 0x67);
        // CB 67 00B5
        gbc.setState(0xa874, 0x3d7e, 0x40c0, 0xcb22, 0xda27, 0xd2d7, 0x1, 0x0);
        gbc.writeMem(0xa874, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3d7e);
        EXPECT(gbc.pc(), 0xa876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa874), 0xcb);
        EXPECT(gbc.readMem(0xa875), 0x67);
        // CB 67 00B6
        gbc.setState(0xc954, 0xf48c, 0xb4e0, 0xaed, 0x4fe, 0x73db, 0x0, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xf48c);
        EXPECT(gbc.pc(), 0xc956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc954), 0xcb);
        EXPECT(gbc.readMem(0xc955), 0x67);
        // CB 67 00B7
        gbc.setState(0x69c1, 0xd23b, 0x33e0, 0xfecb, 0x20d0, 0x54b7, 0x0, 0x1);
        gbc.writeMem(0x69c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd23b);
        EXPECT(gbc.pc(), 0x69c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00B8
        gbc.setState(0x7ea8, 0x351, 0x4b60, 0x3b79, 0xe838, 0xa81f, 0x1, 0x1);
        gbc.writeMem(0x7ea8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x351);
        EXPECT(gbc.pc(), 0x7eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00B9
        gbc.setState(0x3d5e, 0x8fda, 0xa1e0, 0xf764, 0x1a6c, 0xd934, 0x1, 0x1);
        gbc.writeMem(0x3d5e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8fda);
        EXPECT(gbc.pc(), 0x3d60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00BA
        gbc.setState(0xf43, 0x802a, 0x36f0, 0x2c7b, 0x1ae7, 0xf0c6, 0x0, 0x1);
        gbc.writeMem(0xf43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x802a);
        EXPECT(gbc.pc(), 0xf45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00BC
        gbc.setState(0xdf6, 0x78e9, 0xd210, 0x2c8b, 0x2e25, 0x8444, 0x0, 0x0);
        gbc.writeMem(0xdf6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x78e9);
        EXPECT(gbc.pc(), 0xdf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00BD
        gbc.setState(0xbff0, 0xfda8, 0x9330, 0x8d16, 0x9dbe, 0xccda, 0x0, 0x0);
        gbc.writeMem(0xbff0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfda8);
        EXPECT(gbc.pc(), 0xbff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff0), 0xcb);
        EXPECT(gbc.readMem(0xbff1), 0x67);
        // CB 67 00BE
        gbc.setState(0x5fd2, 0x5825, 0xb050, 0x27ef, 0x8845, 0x88e4, 0x1, 0x1);
        gbc.writeMem(0x5fd2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00BF
        gbc.setState(0x425d, 0x7456, 0x7bc0, 0x1877, 0x14f5, 0xb80e, 0x0, 0x1);
        gbc.writeMem(0x425d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7456);
        EXPECT(gbc.pc(), 0x425f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00C0
        gbc.setState(0x5af9, 0x2c45, 0x7220, 0xd59a, 0x5161, 0x5268, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c45);
        EXPECT(gbc.pc(), 0x5afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00C1
        gbc.setState(0x447d, 0xdfb5, 0x4a0, 0x10bf, 0x66ab, 0x6459, 0x1, 0x1);
        gbc.writeMem(0x447d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xdfb5);
        EXPECT(gbc.pc(), 0x447f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00C2
        gbc.setState(0x5427, 0xd0a8, 0xb410, 0x92b, 0x1de5, 0x2c4b, 0x0, 0x0);
        gbc.writeMem(0x5427, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd0a8);
        EXPECT(gbc.pc(), 0x5429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00C3
        gbc.setState(0x8bb8, 0x1699, 0x6720, 0x9f82, 0x318c, 0x2317, 0x0, 0x0);
        gbc.writeMem(0x8bb8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1699);
        EXPECT(gbc.pc(), 0x8bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bb8), 0xcb);
        EXPECT(gbc.readMem(0x8bb9), 0x67);
        // CB 67 00C4
        gbc.setState(0x699b, 0x7783, 0x2df0, 0x8f12, 0x1a38, 0x750d, 0x0, 0x0);
        gbc.writeMem(0x699b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x7783);
        EXPECT(gbc.pc(), 0x699d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00C6
        gbc.setState(0xc2b3, 0xf400, 0x1bb0, 0x18f4, 0x162, 0xfa49, 0x1, 0x0);
        gbc.writeMem(0xc2b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0xc2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2b3), 0xcb);
        EXPECT(gbc.readMem(0xc2b4), 0x67);
        // CB 67 00C7
        gbc.setState(0xd31d, 0x3e8b, 0x8f50, 0x3e92, 0x5599, 0x573d, 0x0, 0x1);
        gbc.writeMem(0xd31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3e8b);
        EXPECT(gbc.pc(), 0xd31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd31d), 0xcb);
        EXPECT(gbc.readMem(0xd31e), 0x67);
        // CB 67 00C8
        gbc.setState(0x6d2e, 0x4cb7, 0xc1c0, 0x274f, 0x6c14, 0x6a27, 0x0, 0x1);
        gbc.writeMem(0x6d2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4cb7);
        EXPECT(gbc.pc(), 0x6d30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00C9
        gbc.setState(0xeee5, 0x15e6, 0x3b00, 0x81f7, 0xd79b, 0xde64, 0x0, 0x1);
        gbc.writeMem(0xeee5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x15e6);
        EXPECT(gbc.pc(), 0xeee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee5), 0xcb);
        EXPECT(gbc.readMem(0xeee6), 0x67);
        // CB 67 00CA
        gbc.setState(0x2b13, 0x8ca2, 0xf160, 0x8097, 0x6bed, 0x8152, 0x1, 0x1);
        gbc.writeMem(0x2b13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8ca2);
        EXPECT(gbc.pc(), 0x2b15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00CB
        gbc.setState(0xadd, 0xb38, 0x7120, 0x13eb, 0x7275, 0x9819, 0x0, 0x1);
        gbc.writeMem(0xadd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb38);
        EXPECT(gbc.pc(), 0xadf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00CC
        gbc.setState(0x9cf4, 0x5a7e, 0x25c0, 0xf68d, 0x70c0, 0xb4f4, 0x0, 0x0);
        gbc.writeMem(0x9cf4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5a7e);
        EXPECT(gbc.pc(), 0x9cf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cf4), 0xcb);
        EXPECT(gbc.readMem(0x9cf5), 0x67);
        // CB 67 00CD
        gbc.setState(0x33af, 0xf490, 0x72b0, 0x950e, 0x3e17, 0x14e2, 0x0, 0x0);
        gbc.writeMem(0x33af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xf490);
        EXPECT(gbc.pc(), 0x33b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00CE
        gbc.setState(0xd650, 0xa3a8, 0x15a0, 0x7243, 0xa6b9, 0x94ee, 0x0, 0x1);
        gbc.writeMem(0xd650, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xa3a8);
        EXPECT(gbc.pc(), 0xd652);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd650), 0xcb);
        EXPECT(gbc.readMem(0xd651), 0x67);
        // CB 67 00CF
        gbc.setState(0x51c5, 0xa6fa, 0xbeb0, 0x3091, 0xbd71, 0x6f28, 0x0, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa6fa);
        EXPECT(gbc.pc(), 0x51c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00D0
        gbc.setState(0xa0d7, 0x257f, 0x4250, 0x69ec, 0x5c7f, 0x58be, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x257f);
        EXPECT(gbc.pc(), 0xa0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0d7), 0xcb);
        EXPECT(gbc.readMem(0xa0d8), 0x67);
        // CB 67 00D1
        gbc.setState(0x7238, 0xf6b9, 0x6760, 0xdd70, 0xfad7, 0x55b0, 0x1, 0x1);
        gbc.writeMem(0x7238, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf6b9);
        EXPECT(gbc.pc(), 0x723a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00D2
        gbc.setState(0xee8f, 0x73f4, 0xf2f0, 0xfdc5, 0x5a12, 0x359a, 0x1, 0x0);
        gbc.writeMem(0xee8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x73f4);
        EXPECT(gbc.pc(), 0xee91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee8f), 0xcb);
        EXPECT(gbc.readMem(0xee90), 0x67);
        // CB 67 00D3
        gbc.setState(0x85f, 0xe239, 0xeb0, 0x522c, 0x98f3, 0xbeb6, 0x1, 0x0);
        gbc.writeMem(0x85f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe239);
        EXPECT(gbc.pc(), 0x861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00D4
        gbc.setState(0x98bf, 0x1d40, 0x9f70, 0x1bf4, 0x7312, 0xb17, 0x0, 0x0);
        gbc.writeMem(0x98bf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1d40);
        EXPECT(gbc.pc(), 0x98c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bf), 0xcb);
        EXPECT(gbc.readMem(0x98c0), 0x67);
        // CB 67 00D5
        gbc.setState(0x18bc, 0xae24, 0x6ac0, 0x819, 0x6ae, 0x845f, 0x0, 0x0);
        gbc.writeMem(0x18bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xae24);
        EXPECT(gbc.pc(), 0x18be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00D6
        gbc.setState(0x8b02, 0xb1b0, 0x7bb0, 0x6ab9, 0xa63f, 0x45a7, 0x0, 0x1);
        gbc.writeMem(0x8b02, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb1b0);
        EXPECT(gbc.pc(), 0x8b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b02), 0xcb);
        EXPECT(gbc.readMem(0x8b03), 0x67);
        // CB 67 00D7
        gbc.setState(0xaafe, 0x78c8, 0xe3e0, 0x4faf, 0xff35, 0x29c1, 0x1, 0x0);
        gbc.writeMem(0xaafe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x78c8);
        EXPECT(gbc.pc(), 0xab00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaafe), 0xcb);
        EXPECT(gbc.readMem(0xaaff), 0x67);
        // CB 67 00D8
        gbc.setState(0x3da9, 0x70da, 0xef30, 0x852c, 0xc17b, 0x751a, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x70da);
        EXPECT(gbc.pc(), 0x3dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00D9
        gbc.setState(0x90bb, 0xb95b, 0xca10, 0xddc9, 0xc78, 0xc802, 0x1, 0x0);
        gbc.writeMem(0x90bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb95b);
        EXPECT(gbc.pc(), 0x90bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90bb), 0xcb);
        EXPECT(gbc.readMem(0x90bc), 0x67);
        // CB 67 00DA
        gbc.setState(0xed9, 0xb566, 0xee80, 0xda7, 0x7f49, 0x6e20, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xb566);
        EXPECT(gbc.pc(), 0xedb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00DB
        gbc.setState(0xe36d, 0x677c, 0xc4e0, 0xb3ef, 0xd759, 0xafb9, 0x0, 0x0);
        gbc.writeMem(0xe36d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x677c);
        EXPECT(gbc.pc(), 0xe36f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe36d), 0xcb);
        EXPECT(gbc.readMem(0xe36e), 0x67);
        // CB 67 00DD
        gbc.setState(0x62, 0xe2b8, 0x7e20, 0x1f81, 0x8ddb, 0x20da, 0x1, 0x1);
        gbc.writeMem(0x62, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe2b8);
        EXPECT(gbc.pc(), 0x64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00DE
        gbc.setState(0xd863, 0xd66, 0x8ca0, 0xa044, 0x2e98, 0xed4, 0x0, 0x1);
        gbc.writeMem(0xd863, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd66);
        EXPECT(gbc.pc(), 0xd865);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd863), 0xcb);
        EXPECT(gbc.readMem(0xd864), 0x67);
        // CB 67 00DF
        gbc.setState(0x6434, 0xd5e6, 0xbf50, 0x33eb, 0x44af, 0xd4cc, 0x1, 0x1);
        gbc.writeMem(0x6434, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xd5e6);
        EXPECT(gbc.pc(), 0x6436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00E0
        gbc.setState(0xb4b3, 0x23e6, 0x75b0, 0x5881, 0x5b46, 0xacea, 0x0, 0x0);
        gbc.writeMem(0xb4b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x23e6);
        EXPECT(gbc.pc(), 0xb4b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b3), 0xcb);
        EXPECT(gbc.readMem(0xb4b4), 0x67);
        // CB 67 00E1
        gbc.setState(0xc5d0, 0x2625, 0x23b0, 0xd2ec, 0xd505, 0xc356, 0x0, 0x0);
        gbc.writeMem(0xc5d0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2625);
        EXPECT(gbc.pc(), 0xc5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d0), 0xcb);
        EXPECT(gbc.readMem(0xc5d1), 0x67);
        // CB 67 00E2
        gbc.setState(0x3ba7, 0xfa64, 0x36c0, 0x7295, 0xf814, 0x440f, 0x1, 0x1);
        gbc.writeMem(0x3ba7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xfa64);
        EXPECT(gbc.pc(), 0x3ba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00E3
        gbc.setState(0xccad, 0x1508, 0x25b0, 0xdd19, 0x2e12, 0xa6a8, 0x0, 0x0);
        gbc.writeMem(0xccad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1508);
        EXPECT(gbc.pc(), 0xccaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccad), 0xcb);
        EXPECT(gbc.readMem(0xccae), 0x67);
        // CB 67 00E4
        gbc.setState(0x5ce0, 0xc84, 0x1ba0, 0x40f5, 0xf7b8, 0x22d1, 0x0, 0x1);
        gbc.writeMem(0x5ce0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xc84);
        EXPECT(gbc.pc(), 0x5ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00E5
        gbc.setState(0x278f, 0xe3af, 0xc320, 0x735a, 0x65d, 0x939, 0x1, 0x1);
        gbc.writeMem(0x278f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xe3af);
        EXPECT(gbc.pc(), 0x2791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00E6
        gbc.setState(0xa58e, 0xadd0, 0x86f0, 0x9114, 0x37ac, 0xa9a8, 0x1, 0x1);
        gbc.writeMem(0xa58e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xadd0);
        EXPECT(gbc.pc(), 0xa590);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa58e), 0xcb);
        EXPECT(gbc.readMem(0xa58f), 0x67);
        // CB 67 00E7
        gbc.setState(0x93e, 0xed2e, 0x1380, 0x5a5e, 0xb142, 0x7cc5, 0x1, 0x1);
        gbc.writeMem(0x93e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xed2e);
        EXPECT(gbc.pc(), 0x940);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00E8
        gbc.setState(0x59b4, 0xd15f, 0x7940, 0x7918, 0xa2d, 0x10cb, 0x1, 0x1);
        gbc.writeMem(0x59b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd15f);
        EXPECT(gbc.pc(), 0x59b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00E9
        gbc.setState(0x4dac, 0xfceb, 0x56c0, 0x64f6, 0x27aa, 0x374f, 0x1, 0x0);
        gbc.writeMem(0x4dac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xfceb);
        EXPECT(gbc.pc(), 0x4dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00EA
        gbc.setState(0x3b, 0x2d45, 0x8aa0, 0xa880, 0x48ff, 0x1a7f, 0x1, 0x1);
        gbc.writeMem(0x3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2d45);
        EXPECT(gbc.pc(), 0x3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00EB
        gbc.setState(0xdb70, 0xc532, 0xffa0, 0x422f, 0x7d00, 0x34ab, 0x1, 0x0);
        gbc.writeMem(0xdb70, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xc532);
        EXPECT(gbc.pc(), 0xdb72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb70), 0xcb);
        EXPECT(gbc.readMem(0xdb71), 0x67);
        // CB 67 00EC
        gbc.setState(0x8c8c, 0xd531, 0xca0, 0xf60d, 0xb02b, 0x2542, 0x1, 0x0);
        gbc.writeMem(0x8c8c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd531);
        EXPECT(gbc.pc(), 0x8c8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c8c), 0xcb);
        EXPECT(gbc.readMem(0x8c8d), 0x67);
        // CB 67 00ED
        gbc.setState(0x108c, 0xd53d, 0x3c10, 0x90, 0xeaa4, 0xf28c, 0x1, 0x0);
        gbc.writeMem(0x108c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd53d);
        EXPECT(gbc.pc(), 0x108e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00EE
        gbc.setState(0xb65, 0xf747, 0xad80, 0xbad4, 0x4c6a, 0x84e9, 0x0, 0x1);
        gbc.writeMem(0xb65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0xb67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00EF
        gbc.setState(0x1adb, 0x5fd8, 0x28d0, 0x3914, 0x3481, 0xf5ba, 0x0, 0x1);
        gbc.writeMem(0x1adb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5fd8);
        EXPECT(gbc.pc(), 0x1add);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F0
        gbc.setState(0x3b00, 0xdea6, 0xcc70, 0x4d36, 0x3e66, 0xa16e, 0x0, 0x0);
        gbc.writeMem(0x3b00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xdea6);
        EXPECT(gbc.pc(), 0x3b02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F1
        gbc.setState(0x24ba, 0x69b1, 0x12c0, 0xba39, 0x3abe, 0x8b61, 0x1, 0x1);
        gbc.writeMem(0x24ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x69b1);
        EXPECT(gbc.pc(), 0x24bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00F2
        gbc.setState(0x56be, 0x8dcc, 0x8eb0, 0x353e, 0x59e2, 0xb1c, 0x0, 0x0);
        gbc.writeMem(0x56be, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x8dcc);
        EXPECT(gbc.pc(), 0x56c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F3
        gbc.setState(0x89ac, 0x8ae5, 0xed0, 0x18f0, 0x8a4b, 0x97ad, 0x1, 0x0);
        gbc.writeMem(0x89ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x8ae5);
        EXPECT(gbc.pc(), 0x89ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ac), 0xcb);
        EXPECT(gbc.readMem(0x89ad), 0x67);
        // CB 67 00F4
        gbc.setState(0x5efd, 0xa437, 0xfc30, 0x4c03, 0xea47, 0x64fc, 0x0, 0x0);
        gbc.writeMem(0x5efd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa437);
        EXPECT(gbc.pc(), 0x5eff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F5
        gbc.setState(0xa0f4, 0xfa3d, 0x6110, 0xd57c, 0xa923, 0x4f23, 0x0, 0x1);
        gbc.writeMem(0xa0f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xfa3d);
        EXPECT(gbc.pc(), 0xa0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f4), 0xcb);
        EXPECT(gbc.readMem(0xa0f5), 0x67);
        // CB 67 00F6
        gbc.setState(0x3543, 0x88a0, 0x7c90, 0x8e87, 0x9183, 0x1cff, 0x1, 0x0);
        gbc.writeMem(0x3543, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x88a0);
        EXPECT(gbc.pc(), 0x3545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F7
        gbc.setState(0x30dc, 0xb944, 0x9d30, 0x834, 0xd558, 0x902c, 0x0, 0x1);
        gbc.writeMem(0x30dc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xb944);
        EXPECT(gbc.pc(), 0x30de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00F8
        gbc.setState(0x5d3, 0x77ed, 0xf480, 0x7dfa, 0x6584, 0xfa7d, 0x0, 0x1);
        gbc.writeMem(0x5d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x77ed);
        EXPECT(gbc.pc(), 0x5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00F9
        gbc.setState(0x3770, 0x6317, 0xba70, 0xb527, 0x4887, 0x8536, 0x1, 0x0);
        gbc.writeMem(0x3770, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x6317);
        EXPECT(gbc.pc(), 0x3772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00FA
        gbc.setState(0x886f, 0x7ac5, 0x3cf0, 0xebed, 0x14e7, 0x7396, 0x0, 0x0);
        gbc.writeMem(0x886f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x7ac5);
        EXPECT(gbc.pc(), 0x8871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x886f), 0xcb);
        EXPECT(gbc.readMem(0x8870), 0x67);
        // CB 67 00FC
        gbc.setState(0x35c7, 0xb332, 0x9ce0, 0x2130, 0xa803, 0x4b17, 0x0, 0x0);
        gbc.writeMem(0x35c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb332);
        EXPECT(gbc.pc(), 0x35c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00FD
        gbc.setState(0x256, 0x986c, 0x56f0, 0x97c7, 0x1062, 0x138, 0x0, 0x1);
        gbc.writeMem(0x256, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x986c);
        EXPECT(gbc.pc(), 0x258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 00FE
        gbc.setState(0x3cf2, 0xe6f7, 0x1280, 0xfd52, 0xb192, 0xb8bc, 0x1, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe6f7);
        EXPECT(gbc.pc(), 0x3cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 00FF
        gbc.setState(0xd11b, 0x9e6, 0xef40, 0x2a3f, 0x4023, 0xbaab, 0x0, 0x1);
        gbc.writeMem(0xd11b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9e6);
        EXPECT(gbc.pc(), 0xd11d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd11b), 0xcb);
        EXPECT(gbc.readMem(0xd11c), 0x67);
        // CB 67 0100
        gbc.setState(0xa75, 0x4048, 0x8340, 0x8df1, 0xe2fc, 0xdb7b, 0x1, 0x0);
        gbc.writeMem(0xa75, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4048);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0101
        gbc.setState(0x2736, 0x781b, 0x4870, 0xdbf9, 0xf57b, 0xc703, 0x1, 0x0);
        gbc.writeMem(0x2736, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x781b);
        EXPECT(gbc.pc(), 0x2738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0102
        gbc.setState(0x2ed3, 0x466b, 0x1270, 0xee7f, 0x9975, 0x92b0, 0x1, 0x0);
        gbc.writeMem(0x2ed3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x466b);
        EXPECT(gbc.pc(), 0x2ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0104
        gbc.setState(0xe0bc, 0x9327, 0xcbc0, 0xa4f0, 0x2871, 0x379a, 0x1, 0x0);
        gbc.writeMem(0xe0bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9327);
        EXPECT(gbc.pc(), 0xe0be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bc), 0xcb);
        EXPECT(gbc.readMem(0xe0bd), 0x67);
        // CB 67 0105
        gbc.setState(0x47ad, 0x7c2f, 0xca80, 0xaa33, 0x561e, 0xe3ee, 0x0, 0x0);
        gbc.writeMem(0x47ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x7c2f);
        EXPECT(gbc.pc(), 0x47af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0106
        gbc.setState(0x502f, 0xd7c5, 0x3f90, 0xc61b, 0x8957, 0xc55d, 0x0, 0x1);
        gbc.writeMem(0x502f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd7c5);
        EXPECT(gbc.pc(), 0x5031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0107
        gbc.setState(0x3b38, 0xed1d, 0x1c70, 0x1f2a, 0xae6d, 0x8fc8, 0x1, 0x1);
        gbc.writeMem(0x3b38, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xed1d);
        EXPECT(gbc.pc(), 0x3b3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0108
        gbc.setState(0x9502, 0x936, 0x6c90, 0xcc21, 0x84, 0x57ab, 0x1, 0x0);
        gbc.writeMem(0x9502, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x936);
        EXPECT(gbc.pc(), 0x9504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9502), 0xcb);
        EXPECT(gbc.readMem(0x9503), 0x67);
        // CB 67 0109
        gbc.setState(0x43de, 0x9e4c, 0xd320, 0x1a9c, 0xd8e2, 0x31df, 0x0, 0x1);
        gbc.writeMem(0x43de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9e4c);
        EXPECT(gbc.pc(), 0x43e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 010A
        gbc.setState(0x349c, 0xe008, 0xf000, 0xc2fd, 0xeca8, 0x5a2d, 0x0, 0x0);
        gbc.writeMem(0x349c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe008);
        EXPECT(gbc.pc(), 0x349e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 010B
        gbc.setState(0xc058, 0x2466, 0x2da0, 0xff23, 0xc4c0, 0x73b6, 0x0, 0x1);
        gbc.writeMem(0xc058, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2466);
        EXPECT(gbc.pc(), 0xc05a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc058), 0xcb);
        EXPECT(gbc.readMem(0xc059), 0x67);
        // CB 67 010C
        gbc.setState(0x282f, 0xd819, 0x1710, 0x3411, 0x9037, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0x282f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd819);
        EXPECT(gbc.pc(), 0x2831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 010D
        gbc.setState(0x92a6, 0xaaf9, 0xfb60, 0x8809, 0x9701, 0xacb8, 0x1, 0x0);
        gbc.writeMem(0x92a6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xaaf9);
        EXPECT(gbc.pc(), 0x92a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a6), 0xcb);
        EXPECT(gbc.readMem(0x92a7), 0x67);
        // CB 67 010E
        gbc.setState(0xc6e6, 0x9547, 0xb7c0, 0x448e, 0x92ae, 0xa027, 0x0, 0x0);
        gbc.writeMem(0xc6e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9547);
        EXPECT(gbc.pc(), 0xc6e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e6), 0xcb);
        EXPECT(gbc.readMem(0xc6e7), 0x67);
        // CB 67 010F
        gbc.setState(0x1c6b, 0x97b5, 0xf450, 0xf4d1, 0x3bf0, 0x420d, 0x0, 0x0);
        gbc.writeMem(0x1c6b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x97b5);
        EXPECT(gbc.pc(), 0x1c6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0110
        gbc.setState(0xec31, 0x72af, 0xc540, 0x67e1, 0x47bb, 0x6c7a, 0x1, 0x0);
        gbc.writeMem(0xec31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x72af);
        EXPECT(gbc.pc(), 0xec33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec31), 0xcb);
        EXPECT(gbc.readMem(0xec32), 0x67);
        // CB 67 0111
        gbc.setState(0x9be7, 0x2182, 0xa780, 0x2880, 0x3858, 0x7db8, 0x0, 0x1);
        gbc.writeMem(0x9be7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2182);
        EXPECT(gbc.pc(), 0x9be9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9be7), 0xcb);
        EXPECT(gbc.readMem(0x9be8), 0x67);
        // CB 67 0112
        gbc.setState(0x5f2f, 0xe7df, 0xfb60, 0x551d, 0xc92e, 0xdce, 0x1, 0x1);
        gbc.writeMem(0x5f2f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe7df);
        EXPECT(gbc.pc(), 0x5f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0113
        gbc.setState(0xaa4, 0x92cf, 0x1ab0, 0xb15b, 0xd823, 0x2c6f, 0x1, 0x1);
        gbc.writeMem(0xaa4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x92cf);
        EXPECT(gbc.pc(), 0xaa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0114
        gbc.setState(0x5014, 0xf422, 0x2300, 0xd968, 0xed54, 0xf51f, 0x1, 0x0);
        gbc.writeMem(0x5014, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf422);
        EXPECT(gbc.pc(), 0x5016);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0116
        gbc.setState(0xaddf, 0x8456, 0x7ac0, 0x382c, 0xfccb, 0x7d3d, 0x1, 0x0);
        gbc.writeMem(0xaddf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8456);
        EXPECT(gbc.pc(), 0xade1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaddf), 0xcb);
        EXPECT(gbc.readMem(0xade0), 0x67);
        // CB 67 0117
        gbc.setState(0x4b5e, 0xd3c1, 0xc3b0, 0xf295, 0xabea, 0x884d, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd3c1);
        EXPECT(gbc.pc(), 0x4b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0118
        gbc.setState(0x4eee, 0xb372, 0x8b50, 0x2db3, 0x345b, 0xf709, 0x1, 0x0);
        gbc.writeMem(0x4eee, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb372);
        EXPECT(gbc.pc(), 0x4ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0119
        gbc.setState(0x6ae2, 0x36c8, 0x9b50, 0x935e, 0x11c1, 0x1152, 0x0, 0x0);
        gbc.writeMem(0x6ae2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x36c8);
        EXPECT(gbc.pc(), 0x6ae4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 011A
        gbc.setState(0x8166, 0xb7e, 0x90f0, 0xc5dd, 0x4ec0, 0xe9a2, 0x0, 0x0);
        gbc.writeMem(0x8166, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb7e);
        EXPECT(gbc.pc(), 0x8168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8166), 0xcb);
        EXPECT(gbc.readMem(0x8167), 0x67);
        // CB 67 011B
        gbc.setState(0x68d, 0x3c1f, 0x3fb0, 0xe120, 0xb523, 0x1acc, 0x0, 0x0);
        gbc.writeMem(0x68d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x3c1f);
        EXPECT(gbc.pc(), 0x68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 011C
        gbc.setState(0xafa0, 0x4f6a, 0xd400, 0x20a1, 0x856d, 0x886b, 0x0, 0x1);
        gbc.writeMem(0xafa0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4f6a);
        EXPECT(gbc.pc(), 0xafa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa0), 0xcb);
        EXPECT(gbc.readMem(0xafa1), 0x67);
        // CB 67 011D
        gbc.setState(0x56f6, 0xc15d, 0x9720, 0x6b5b, 0x5233, 0x3234, 0x0, 0x1);
        gbc.writeMem(0x56f6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc15d);
        EXPECT(gbc.pc(), 0x56f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 011E
        gbc.setState(0x761e, 0x756, 0xa90, 0xffcb, 0xdfa9, 0x7c8e, 0x0, 0x1);
        gbc.writeMem(0x761e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x756);
        EXPECT(gbc.pc(), 0x7620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 011F
        gbc.setState(0xc61a, 0x2e99, 0xbf90, 0x27e9, 0x93ac, 0x8a7c, 0x0, 0x1);
        gbc.writeMem(0xc61a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x2e99);
        EXPECT(gbc.pc(), 0xc61c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc61a), 0xcb);
        EXPECT(gbc.readMem(0xc61b), 0x67);
        // CB 67 0120
        gbc.setState(0x1601, 0xab1a, 0x3aa0, 0x2d6c, 0xaf66, 0x70d, 0x1, 0x1);
        gbc.writeMem(0x1601, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xab1a);
        EXPECT(gbc.pc(), 0x1603);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0121
        gbc.setState(0x7720, 0x513f, 0x1710, 0x9972, 0xb6ee, 0x1ab0, 0x1, 0x0);
        gbc.writeMem(0x7720, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x513f);
        EXPECT(gbc.pc(), 0x7722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0122
        gbc.setState(0x7fb3, 0xe99b, 0x5240, 0x637a, 0xa0ce, 0x4fe4, 0x0, 0x1);
        gbc.writeMem(0x7fb3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe99b);
        EXPECT(gbc.pc(), 0x7fb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0123
        gbc.setState(0x5e17, 0x262, 0x1830, 0xd3ca, 0xb1ad, 0xb731, 0x0, 0x1);
        gbc.writeMem(0x5e17, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x262);
        EXPECT(gbc.pc(), 0x5e19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0124
        gbc.setState(0xa58, 0x4559, 0x4ca0, 0x2e68, 0x4607, 0x14f6, 0x0, 0x0);
        gbc.writeMem(0xa58, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4559);
        EXPECT(gbc.pc(), 0xa5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0125
        gbc.setState(0xeaaa, 0x6ba2, 0xd8a0, 0xbdea, 0xe08f, 0x5031, 0x0, 0x0);
        gbc.writeMem(0xeaaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x6ba2);
        EXPECT(gbc.pc(), 0xeaac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaaa), 0xcb);
        EXPECT(gbc.readMem(0xeaab), 0x67);
        // CB 67 0126
        gbc.setState(0x9ae4, 0x204, 0x57d0, 0xe17f, 0x754e, 0x9ff8, 0x1, 0x0);
        gbc.writeMem(0x9ae4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0xcb);
        EXPECT(gbc.readMem(0x9ae5), 0x67);
        // CB 67 0127
        gbc.setState(0xb5aa, 0xb8ab, 0xf2c0, 0xbf0d, 0xa7bb, 0x8a21, 0x1, 0x0);
        gbc.writeMem(0xb5aa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb8ab);
        EXPECT(gbc.pc(), 0xb5ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5aa), 0xcb);
        EXPECT(gbc.readMem(0xb5ab), 0x67);
        // CB 67 0128
        gbc.setState(0x3e3f, 0xf1ab, 0xe1f0, 0xc7b3, 0xfce5, 0xe, 0x1, 0x1);
        gbc.writeMem(0x3e3f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf1ab);
        EXPECT(gbc.pc(), 0x3e41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0129
        gbc.setState(0x946a, 0x5d51, 0xeeb0, 0x3a2e, 0xb636, 0x40e1, 0x1, 0x0);
        gbc.writeMem(0x946a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5d51);
        EXPECT(gbc.pc(), 0x946c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946a), 0xcb);
        EXPECT(gbc.readMem(0x946b), 0x67);
        // CB 67 012A
        gbc.setState(0xc28c, 0x1a8e, 0xc6f0, 0xaaa7, 0x5e9d, 0xcd8f, 0x1, 0x0);
        gbc.writeMem(0xc28c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x1a8e);
        EXPECT(gbc.pc(), 0xc28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc28c), 0xcb);
        EXPECT(gbc.readMem(0xc28d), 0x67);
        // CB 67 012B
        gbc.setState(0x5fae, 0x2705, 0x8510, 0xc1ff, 0xa4ba, 0x9180, 0x1, 0x1);
        gbc.writeMem(0x5fae, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x2705);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 012C
        gbc.setState(0x542f, 0x5cbb, 0x2b10, 0x211a, 0xc5e3, 0x573c, 0x1, 0x0);
        gbc.writeMem(0x542f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x5cbb);
        EXPECT(gbc.pc(), 0x5431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 012D
        gbc.setState(0x82cf, 0xb624, 0x9b50, 0xc98a, 0x9a7d, 0xeb9f, 0x0, 0x0);
        gbc.writeMem(0x82cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb624);
        EXPECT(gbc.pc(), 0x82d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82cf), 0xcb);
        EXPECT(gbc.readMem(0x82d0), 0x67);
        // CB 67 012E
        gbc.setState(0xefc7, 0xb674, 0x6a50, 0xf2b0, 0x4475, 0x93c0, 0x1, 0x1);
        gbc.writeMem(0xefc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb674);
        EXPECT(gbc.pc(), 0xefc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefc7), 0xcb);
        EXPECT(gbc.readMem(0xefc8), 0x67);
        // CB 67 012F
        gbc.setState(0x91ac, 0x4aac, 0x5680, 0xa3af, 0xe06b, 0x6a76, 0x1, 0x0);
        gbc.writeMem(0x91ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4aac);
        EXPECT(gbc.pc(), 0x91ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ac), 0xcb);
        EXPECT(gbc.readMem(0x91ad), 0x67);
        // CB 67 0130
        gbc.setState(0x10d3, 0xa5b9, 0x3f0, 0xc7b7, 0xabfb, 0xe28, 0x1, 0x1);
        gbc.writeMem(0x10d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xa5b9);
        EXPECT(gbc.pc(), 0x10d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0131
        gbc.setState(0x48b6, 0x7461, 0x1870, 0xa9f1, 0xd37a, 0x745, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7461);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0132
        gbc.setState(0x7d89, 0xa739, 0x8c30, 0xd3e2, 0xdbc, 0xf57e, 0x1, 0x1);
        gbc.writeMem(0x7d89, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa739);
        EXPECT(gbc.pc(), 0x7d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0133
        gbc.setState(0x94d2, 0x13df, 0x3d0, 0xb6d8, 0xc5d9, 0x932e, 0x1, 0x1);
        gbc.writeMem(0x94d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x13df);
        EXPECT(gbc.pc(), 0x94d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d2), 0xcb);
        EXPECT(gbc.readMem(0x94d3), 0x67);
        // CB 67 0134
        gbc.setState(0x6f65, 0x47af, 0x3bc0, 0xa473, 0x17dd, 0x577f, 0x1, 0x1);
        gbc.writeMem(0x6f65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x47af);
        EXPECT(gbc.pc(), 0x6f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0135
        gbc.setState(0x14e6, 0xdfcc, 0x23d0, 0x63e9, 0xdf68, 0x4888, 0x1, 0x1);
        gbc.writeMem(0x14e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xdfcc);
        EXPECT(gbc.pc(), 0x14e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0136
        gbc.setState(0x4e8b, 0xb01f, 0x4de0, 0xf1a8, 0x43f4, 0x3ded, 0x1, 0x1);
        gbc.writeMem(0x4e8b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xb01f);
        EXPECT(gbc.pc(), 0x4e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0137
        gbc.setState(0x4ec, 0x4cc2, 0x7d30, 0x3082, 0xee3f, 0xd2b8, 0x1, 0x1);
        gbc.writeMem(0x4ec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4cc2);
        EXPECT(gbc.pc(), 0x4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0138
        gbc.setState(0xd5d8, 0x7dd9, 0x9ef0, 0xe41e, 0xc1cc, 0x2bcf, 0x0, 0x1);
        gbc.writeMem(0xd5d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7dd9);
        EXPECT(gbc.pc(), 0xd5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d8), 0xcb);
        EXPECT(gbc.readMem(0xd5d9), 0x67);
        // CB 67 0139
        gbc.setState(0x1175, 0x5644, 0x3d90, 0x4543, 0x6da3, 0xc3f4, 0x1, 0x0);
        gbc.writeMem(0x1175, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5644);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 013A
        gbc.setState(0x7634, 0x1f6c, 0x6f00, 0x85c6, 0x416d, 0x8a4d, 0x1, 0x1);
        gbc.writeMem(0x7634, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1f6c);
        EXPECT(gbc.pc(), 0x7636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 013B
        gbc.setState(0xe88d, 0x5b68, 0x8860, 0xa923, 0x22d3, 0xa73f, 0x1, 0x1);
        gbc.writeMem(0xe88d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5b68);
        EXPECT(gbc.pc(), 0xe88f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe88d), 0xcb);
        EXPECT(gbc.readMem(0xe88e), 0x67);
        // CB 67 013C
        gbc.setState(0x291e, 0xd2ea, 0xb770, 0xe011, 0x3e90, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x291e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd2ea);
        EXPECT(gbc.pc(), 0x2920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 013D
        gbc.setState(0xd6c8, 0x38df, 0x9670, 0x4d9b, 0x84cb, 0x1958, 0x1, 0x1);
        gbc.writeMem(0xd6c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x38df);
        EXPECT(gbc.pc(), 0xd6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6c8), 0xcb);
        EXPECT(gbc.readMem(0xd6c9), 0x67);
        // CB 67 013E
        gbc.setState(0x57ce, 0x2cb0, 0xa610, 0xd22c, 0x38d3, 0x1a47, 0x0, 0x0);
        gbc.writeMem(0x57ce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x2cb0);
        EXPECT(gbc.pc(), 0x57d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 013F
        gbc.setState(0x64fa, 0x7a9d, 0x7df0, 0xc1c9, 0xd4fa, 0x5b9e, 0x1, 0x1);
        gbc.writeMem(0x64fa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7a9d);
        EXPECT(gbc.pc(), 0x64fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0140
        gbc.setState(0x1b4d, 0x8746, 0xb5c0, 0x439d, 0x61e7, 0xac66, 0x1, 0x0);
        gbc.writeMem(0x1b4d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x8746);
        EXPECT(gbc.pc(), 0x1b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0141
        gbc.setState(0x6b33, 0xd15d, 0x63e0, 0x279, 0xdc80, 0x2445, 0x1, 0x0);
        gbc.writeMem(0x6b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd15d);
        EXPECT(gbc.pc(), 0x6b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0142
        gbc.setState(0x28fb, 0x891a, 0xeb30, 0x745d, 0x557e, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0x28fb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x891a);
        EXPECT(gbc.pc(), 0x28fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0143
        gbc.setState(0x318f, 0x6b28, 0xb920, 0x2bd2, 0x82b7, 0x1a60, 0x1, 0x1);
        gbc.writeMem(0x318f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6b28);
        EXPECT(gbc.pc(), 0x3191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0144
        gbc.setState(0xd6ae, 0x7e45, 0x3c50, 0x109d, 0x37e6, 0x3cd7, 0x0, 0x0);
        gbc.writeMem(0xd6ae, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7e45);
        EXPECT(gbc.pc(), 0xd6b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ae), 0xcb);
        EXPECT(gbc.readMem(0xd6af), 0x67);
        // CB 67 0145
        gbc.setState(0x7432, 0xcf9e, 0xb730, 0x99f4, 0xe3bd, 0xd3e2, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xcf9e);
        EXPECT(gbc.pc(), 0x7434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0146
        gbc.setState(0x8ac6, 0x3315, 0x4490, 0x4b80, 0x9c98, 0xdee6, 0x0, 0x0);
        gbc.writeMem(0x8ac6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3315);
        EXPECT(gbc.pc(), 0x8ac8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac6), 0xcb);
        EXPECT(gbc.readMem(0x8ac7), 0x67);
        // CB 67 0147
        gbc.setState(0x7a13, 0x8c22, 0xd1a0, 0xda84, 0xdc03, 0xc8dc, 0x0, 0x0);
        gbc.writeMem(0x7a13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8c22);
        EXPECT(gbc.pc(), 0x7a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0148
        gbc.setState(0x952b, 0x9775, 0x4a60, 0xd798, 0xa437, 0x975e, 0x1, 0x0);
        gbc.writeMem(0x952b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0x952d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x952b), 0xcb);
        EXPECT(gbc.readMem(0x952c), 0x67);
        // CB 67 0149
        gbc.setState(0xc54e, 0xc0fb, 0xe1e0, 0xc2d1, 0x1229, 0xb2da, 0x1, 0x1);
        gbc.writeMem(0xc54e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc0fb);
        EXPECT(gbc.pc(), 0xc550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc54e), 0xcb);
        EXPECT(gbc.readMem(0xc54f), 0x67);
        // CB 67 014A
        gbc.setState(0x11ba, 0xb2c4, 0x8a20, 0x1afe, 0x2e2, 0x60b2, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb2c4);
        EXPECT(gbc.pc(), 0x11bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 014B
        gbc.setState(0xbb41, 0x29f9, 0xafe0, 0xf918, 0x6740, 0xddc1, 0x1, 0x1);
        gbc.writeMem(0xbb41, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x29f9);
        EXPECT(gbc.pc(), 0xbb43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb41), 0xcb);
        EXPECT(gbc.readMem(0xbb42), 0x67);
        // CB 67 014C
        gbc.setState(0x7f9c, 0xfbe8, 0xb5a0, 0x2a8b, 0xfba1, 0xb552, 0x0, 0x1);
        gbc.writeMem(0x7f9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0x7f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 014D
        gbc.setState(0xe218, 0x9e47, 0x8d90, 0x5fa3, 0x6493, 0x1593, 0x0, 0x0);
        gbc.writeMem(0xe218, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x9e47);
        EXPECT(gbc.pc(), 0xe21a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe218), 0xcb);
        EXPECT(gbc.readMem(0xe219), 0x67);
        // CB 67 014E
        gbc.setState(0x3d6c, 0x337, 0x6c90, 0x4d59, 0xd16, 0x6915, 0x0, 0x0);
        gbc.writeMem(0x3d6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x337);
        EXPECT(gbc.pc(), 0x3d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 014F
        gbc.setState(0x6e31, 0xd3b4, 0x3430, 0x15ae, 0x83f1, 0xd459, 0x0, 0x0);
        gbc.writeMem(0x6e31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd3b4);
        EXPECT(gbc.pc(), 0x6e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0150
        gbc.setState(0x2573, 0x19cc, 0xb000, 0x8e4, 0x2a8c, 0xc051, 0x0, 0x0);
        gbc.writeMem(0x2573, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x19cc);
        EXPECT(gbc.pc(), 0x2575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0152
        gbc.setState(0x7441, 0xa4ee, 0x77b0, 0xefdd, 0x2e4a, 0x820c, 0x0, 0x0);
        gbc.writeMem(0x7441, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa4ee);
        EXPECT(gbc.pc(), 0x7443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0153
        gbc.setState(0x62c8, 0xc9f2, 0xa180, 0x5bd3, 0x8fc6, 0xf84f, 0x0, 0x0);
        gbc.writeMem(0x62c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc9f2);
        EXPECT(gbc.pc(), 0x62ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0154
        gbc.setState(0x448b, 0x97c4, 0xd3f0, 0x4243, 0x9ccb, 0xfe4, 0x1, 0x1);
        gbc.writeMem(0x448b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x97c4);
        EXPECT(gbc.pc(), 0x448d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0155
        gbc.setState(0x25b2, 0x38ac, 0x6e10, 0x8925, 0x37af, 0x4fed, 0x1, 0x1);
        gbc.writeMem(0x25b2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x38ac);
        EXPECT(gbc.pc(), 0x25b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0156
        gbc.setState(0xb08a, 0x190, 0x4dc0, 0x5d0e, 0x5283, 0x4fb8, 0x1, 0x0);
        gbc.writeMem(0xb08a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x190);
        EXPECT(gbc.pc(), 0xb08c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb08a), 0xcb);
        EXPECT(gbc.readMem(0xb08b), 0x67);
        // CB 67 0157
        gbc.setState(0x2eb8, 0x98ab, 0xa3a0, 0x45c0, 0xfc4a, 0xea71, 0x1, 0x1);
        gbc.writeMem(0x2eb8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x98ab);
        EXPECT(gbc.pc(), 0x2eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0158
        gbc.setState(0xb60f, 0x4e80, 0xfc00, 0x352f, 0x2f93, 0xe9ec, 0x0, 0x1);
        gbc.writeMem(0xb60f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4e80);
        EXPECT(gbc.pc(), 0xb611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60f), 0xcb);
        EXPECT(gbc.readMem(0xb610), 0x67);
        // CB 67 0159
        gbc.setState(0x6a13, 0x428e, 0x81a0, 0x6204, 0x4f36, 0x819c, 0x0, 0x0);
        gbc.writeMem(0x6a13, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x428e);
        EXPECT(gbc.pc(), 0x6a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 015A
        gbc.setState(0xef41, 0x2797, 0x890, 0x1d2e, 0x911e, 0x4ba0, 0x0, 0x0);
        gbc.writeMem(0xef41, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2797);
        EXPECT(gbc.pc(), 0xef43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef41), 0xcb);
        EXPECT(gbc.readMem(0xef42), 0x67);
        // CB 67 015B
        gbc.setState(0x61d8, 0xd341, 0x6d40, 0x885e, 0xa696, 0xfb9c, 0x0, 0x1);
        gbc.writeMem(0x61d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd341);
        EXPECT(gbc.pc(), 0x61da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 015C
        gbc.setState(0x526b, 0x8fc8, 0x3150, 0x4652, 0x1959, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0x526b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8fc8);
        EXPECT(gbc.pc(), 0x526d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 015D
        gbc.setState(0xd733, 0x9992, 0x2bb0, 0xf7d8, 0x1120, 0x8414, 0x1, 0x1);
        gbc.writeMem(0xd733, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9992);
        EXPECT(gbc.pc(), 0xd735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd733), 0xcb);
        EXPECT(gbc.readMem(0xd734), 0x67);
        // CB 67 015E
        gbc.setState(0x53cf, 0x41e2, 0xcca0, 0x6f4d, 0xe155, 0x6fa, 0x0, 0x1);
        gbc.writeMem(0x53cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x41e2);
        EXPECT(gbc.pc(), 0x53d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 015F
        gbc.setState(0x573, 0xe1ce, 0xff90, 0x892c, 0x10e5, 0xe4d7, 0x1, 0x1);
        gbc.writeMem(0x573, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xe1ce);
        EXPECT(gbc.pc(), 0x575);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0160
        gbc.setState(0x78e4, 0x8cb3, 0x2860, 0xb219, 0xc6f1, 0x6c0d, 0x1, 0x0);
        gbc.writeMem(0x78e4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x8cb3);
        EXPECT(gbc.pc(), 0x78e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0161
        gbc.setState(0xd9ec, 0x5641, 0xb140, 0x601c, 0x63f0, 0xbf1d, 0x1, 0x1);
        gbc.writeMem(0xd9ec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5641);
        EXPECT(gbc.pc(), 0xd9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ec), 0xcb);
        EXPECT(gbc.readMem(0xd9ed), 0x67);
        // CB 67 0162
        gbc.setState(0xcf6d, 0xb29d, 0xc270, 0x9cbb, 0x226d, 0x4cf3, 0x1, 0x0);
        gbc.writeMem(0xcf6d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xb29d);
        EXPECT(gbc.pc(), 0xcf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf6d), 0xcb);
        EXPECT(gbc.readMem(0xcf6e), 0x67);
        // CB 67 0163
        gbc.setState(0x7d8a, 0x98b3, 0x5c20, 0xbc9e, 0xea68, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0x7d8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x98b3);
        EXPECT(gbc.pc(), 0x7d8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0164
        gbc.setState(0x6ee2, 0xaf10, 0x1030, 0xc520, 0x9c18, 0x679e, 0x1, 0x1);
        gbc.writeMem(0x6ee2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xaf10);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0165
        gbc.setState(0xc20d, 0x5b15, 0x76c0, 0x72af, 0x818b, 0xa36, 0x1, 0x1);
        gbc.writeMem(0xc20d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x5b15);
        EXPECT(gbc.pc(), 0xc20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20d), 0xcb);
        EXPECT(gbc.readMem(0xc20e), 0x67);
        // CB 67 0166
        gbc.setState(0x5708, 0xf31, 0x93b0, 0x1aea, 0x2ad9, 0x1e8a, 0x1, 0x0);
        gbc.writeMem(0x5708, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf31);
        EXPECT(gbc.pc(), 0x570a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0167
        gbc.setState(0x4154, 0xd7bc, 0x4260, 0x687a, 0x2c54, 0x18a9, 0x1, 0x1);
        gbc.writeMem(0x4154, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd7bc);
        EXPECT(gbc.pc(), 0x4156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0168
        gbc.setState(0xdd64, 0x8bcb, 0x2210, 0x7b87, 0x325f, 0x46b2, 0x0, 0x0);
        gbc.writeMem(0xdd64, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8bcb);
        EXPECT(gbc.pc(), 0xdd66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd64), 0xcb);
        EXPECT(gbc.readMem(0xdd65), 0x67);
        // CB 67 0169
        gbc.setState(0x7e0, 0xf593, 0xab50, 0xf7a, 0xfd8a, 0xc1fb, 0x1, 0x1);
        gbc.writeMem(0x7e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf593);
        EXPECT(gbc.pc(), 0x7e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 016A
        gbc.setState(0x6a75, 0x5cfb, 0x9e0, 0x142a, 0x4e23, 0x1219, 0x1, 0x0);
        gbc.writeMem(0x6a75, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5cfb);
        EXPECT(gbc.pc(), 0x6a77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 016B
        gbc.setState(0x1697, 0xf3e2, 0x8740, 0x2f82, 0x1bdc, 0xd6c2, 0x0, 0x1);
        gbc.writeMem(0x1697, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf3e2);
        EXPECT(gbc.pc(), 0x1699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 016C
        gbc.setState(0x53b3, 0x40b3, 0x21b0, 0xea33, 0x84a1, 0x4b25, 0x0, 0x0);
        gbc.writeMem(0x53b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x40b3);
        EXPECT(gbc.pc(), 0x53b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 016D
        gbc.setState(0xb0a4, 0xddff, 0x6600, 0x770a, 0xbfc0, 0x8359, 0x1, 0x0);
        gbc.writeMem(0xb0a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xddff);
        EXPECT(gbc.pc(), 0xb0a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0a4), 0xcb);
        EXPECT(gbc.readMem(0xb0a5), 0x67);
        // CB 67 016E
        gbc.setState(0x81b3, 0xe254, 0x9dc0, 0x1d59, 0xee54, 0xde2c, 0x0, 0x1);
        gbc.writeMem(0x81b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe254);
        EXPECT(gbc.pc(), 0x81b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81b3), 0xcb);
        EXPECT(gbc.readMem(0x81b4), 0x67);
        // CB 67 016F
        gbc.setState(0xc86e, 0x9ca7, 0x3210, 0x6f60, 0x6052, 0xd6cb, 0x1, 0x1);
        gbc.writeMem(0xc86e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9ca7);
        EXPECT(gbc.pc(), 0xc870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86e), 0xcb);
        EXPECT(gbc.readMem(0xc86f), 0x67);
        // CB 67 0170
        gbc.setState(0xa3e2, 0x40b2, 0x2890, 0xa143, 0xdac3, 0x360d, 0x0, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x40b2);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e2), 0xcb);
        EXPECT(gbc.readMem(0xa3e3), 0x67);
        // CB 67 0171
        gbc.setState(0x2f90, 0xf73b, 0x6820, 0xf785, 0xcc28, 0xdce6, 0x1, 0x1);
        gbc.writeMem(0x2f90, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf73b);
        EXPECT(gbc.pc(), 0x2f92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0172
        gbc.setState(0x322e, 0xb464, 0xc630, 0xe62e, 0xcd24, 0x58d7, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb464);
        EXPECT(gbc.pc(), 0x3230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0174
        gbc.setState(0xcb53, 0xc951, 0xd900, 0x30d6, 0x6180, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0xcb53, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc951);
        EXPECT(gbc.pc(), 0xcb55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb53), 0xcb);
        EXPECT(gbc.readMem(0xcb54), 0x67);
        // CB 67 0175
        gbc.setState(0x8483, 0xa053, 0x74b0, 0x331d, 0x8262, 0xde2f, 0x1, 0x0);
        gbc.writeMem(0x8483, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa053);
        EXPECT(gbc.pc(), 0x8485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8483), 0xcb);
        EXPECT(gbc.readMem(0x8484), 0x67);
        // CB 67 0176
        gbc.setState(0x4e3e, 0x5a4, 0xb550, 0x589b, 0xaf25, 0x2f38, 0x0, 0x0);
        gbc.writeMem(0x4e3e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5a4);
        EXPECT(gbc.pc(), 0x4e40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0177
        gbc.setState(0xb2dc, 0x8797, 0x2f30, 0xed73, 0xc094, 0xcfa2, 0x0, 0x1);
        gbc.writeMem(0xb2dc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8797);
        EXPECT(gbc.pc(), 0xb2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2dc), 0xcb);
        EXPECT(gbc.readMem(0xb2dd), 0x67);
        // CB 67 0178
        gbc.setState(0x7dfe, 0xa795, 0x3d0, 0xe916, 0xefcf, 0x9634, 0x0, 0x0);
        gbc.writeMem(0x7dfe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xa795);
        EXPECT(gbc.pc(), 0x7e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0179
        gbc.setState(0xbce2, 0xeac0, 0xacf0, 0x928b, 0x196e, 0xbe7b, 0x1, 0x0);
        gbc.writeMem(0xbce2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeac0);
        EXPECT(gbc.pc(), 0xbce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbce2), 0xcb);
        EXPECT(gbc.readMem(0xbce3), 0x67);
        // CB 67 017A
        gbc.setState(0x933e, 0x8230, 0x9310, 0xed73, 0xcb9d, 0x9e8d, 0x1, 0x0);
        gbc.writeMem(0x933e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x8230);
        EXPECT(gbc.pc(), 0x9340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x933e), 0xcb);
        EXPECT(gbc.readMem(0x933f), 0x67);
        // CB 67 017B
        gbc.setState(0x2fd3, 0xe7d0, 0xcd40, 0xcc60, 0x326c, 0x5331, 0x0, 0x1);
        gbc.writeMem(0x2fd3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe7d0);
        EXPECT(gbc.pc(), 0x2fd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 017C
        gbc.setState(0x8263, 0x7644, 0x5830, 0xa2f3, 0xe61c, 0xed17, 0x0, 0x0);
        gbc.writeMem(0x8263, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7644);
        EXPECT(gbc.pc(), 0x8265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8263), 0xcb);
        EXPECT(gbc.readMem(0x8264), 0x67);
        // CB 67 017D
        gbc.setState(0x96ac, 0xab5c, 0x8680, 0xd85c, 0x89bd, 0xe8df, 0x1, 0x0);
        gbc.writeMem(0x96ac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xab5c);
        EXPECT(gbc.pc(), 0x96ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ac), 0xcb);
        EXPECT(gbc.readMem(0x96ad), 0x67);
        // CB 67 017E
        gbc.setState(0x451f, 0x13e6, 0x9200, 0x10dc, 0x5d38, 0x20fc, 0x0, 0x0);
        gbc.writeMem(0x451f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x13e6);
        EXPECT(gbc.pc(), 0x4521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 017F
        gbc.setState(0x1f2e, 0xbb3f, 0x5db0, 0x1650, 0xde87, 0x9969, 0x1, 0x0);
        gbc.writeMem(0x1f2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xbb3f);
        EXPECT(gbc.pc(), 0x1f30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0180
        gbc.setState(0xdef6, 0x4c46, 0xf6f0, 0xa814, 0xdb59, 0x4389, 0x1, 0x0);
        gbc.writeMem(0xdef6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x4c46);
        EXPECT(gbc.pc(), 0xdef8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdef6), 0xcb);
        EXPECT(gbc.readMem(0xdef7), 0x67);
        // CB 67 0181
        gbc.setState(0x540a, 0xb0f8, 0x2370, 0x134d, 0x970e, 0xa8ac, 0x1, 0x1);
        gbc.writeMem(0x540a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb0f8);
        EXPECT(gbc.pc(), 0x540c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0182
        gbc.setState(0x70e2, 0x3e45, 0x55f0, 0xd496, 0xf2b4, 0xb028, 0x1, 0x1);
        gbc.writeMem(0x70e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3e45);
        EXPECT(gbc.pc(), 0x70e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0183
        gbc.setState(0x5ac4, 0xd230, 0x1780, 0xed73, 0xecdd, 0x87ed, 0x0, 0x0);
        gbc.writeMem(0x5ac4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd230);
        EXPECT(gbc.pc(), 0x5ac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0184
        gbc.setState(0x678, 0x5953, 0x7ef0, 0x3de4, 0xd9a1, 0x8bbc, 0x0, 0x0);
        gbc.writeMem(0x678, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5953);
        EXPECT(gbc.pc(), 0x67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0185
        gbc.setState(0x9a31, 0x27db, 0x6c90, 0x9128, 0xf925, 0x98fa, 0x0, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x27db);
        EXPECT(gbc.pc(), 0x9a33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a31), 0xcb);
        EXPECT(gbc.readMem(0x9a32), 0x67);
        // CB 67 0186
        gbc.setState(0x7b28, 0x9c66, 0xc620, 0x43be, 0xd572, 0xf5a3, 0x1, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x9c66);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0187
        gbc.setState(0xc151, 0x61ec, 0x5000, 0x4b3b, 0xe0bf, 0x1322, 0x1, 0x1);
        gbc.writeMem(0xc151, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x61ec);
        EXPECT(gbc.pc(), 0xc153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc151), 0xcb);
        EXPECT(gbc.readMem(0xc152), 0x67);
        // CB 67 0188
        gbc.setState(0xc8a4, 0x96d7, 0x7f70, 0x22cf, 0xfa98, 0xf073, 0x1, 0x0);
        gbc.writeMem(0xc8a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x96d7);
        EXPECT(gbc.pc(), 0xc8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8a4), 0xcb);
        EXPECT(gbc.readMem(0xc8a5), 0x67);
        // CB 67 0189
        gbc.setState(0x8dbf, 0xf698, 0xb630, 0x4de4, 0x1d49, 0xc00, 0x0, 0x1);
        gbc.writeMem(0x8dbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf698);
        EXPECT(gbc.pc(), 0x8dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbf), 0xcb);
        EXPECT(gbc.readMem(0x8dc0), 0x67);
        // CB 67 018A
        gbc.setState(0x2b83, 0x9dab, 0x4ee0, 0xac52, 0xe19, 0xe0da, 0x0, 0x0);
        gbc.writeMem(0x2b83, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9dab);
        EXPECT(gbc.pc(), 0x2b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 018B
        gbc.setState(0x8962, 0xf71d, 0x4c0, 0xd1b5, 0xa725, 0xfbd, 0x0, 0x0);
        gbc.writeMem(0x8962, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf71d);
        EXPECT(gbc.pc(), 0x8964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8962), 0xcb);
        EXPECT(gbc.readMem(0x8963), 0x67);
        // CB 67 018C
        gbc.setState(0xdafa, 0x3de5, 0x5230, 0xc1f8, 0x71cc, 0x1c23, 0x1, 0x1);
        gbc.writeMem(0xdafa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x3de5);
        EXPECT(gbc.pc(), 0xdafc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafa), 0xcb);
        EXPECT(gbc.readMem(0xdafb), 0x67);
        // CB 67 018E
        gbc.setState(0xdd8f, 0x6bb4, 0x8ca0, 0xa27e, 0xc80d, 0x91f1, 0x0, 0x1);
        gbc.writeMem(0xdd8f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6bb4);
        EXPECT(gbc.pc(), 0xdd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd8f), 0xcb);
        EXPECT(gbc.readMem(0xdd90), 0x67);
        // CB 67 018F
        gbc.setState(0x3bef, 0x3fa1, 0x1220, 0xcf44, 0x38d9, 0xe6b9, 0x0, 0x0);
        gbc.writeMem(0x3bef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x3fa1);
        EXPECT(gbc.pc(), 0x3bf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0190
        gbc.setState(0x69ff, 0xbdd1, 0xba20, 0x4212, 0xbe80, 0x8611, 0x1, 0x1);
        gbc.writeMem(0x69ff, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbdd1);
        EXPECT(gbc.pc(), 0x6a01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0191
        gbc.setState(0x7b84, 0x485c, 0x5380, 0x11e9, 0x820d, 0x9427, 0x0, 0x1);
        gbc.writeMem(0x7b84, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x485c);
        EXPECT(gbc.pc(), 0x7b86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0192
        gbc.setState(0x49ce, 0x2785, 0x6f10, 0xd594, 0x569b, 0x3b6c, 0x1, 0x0);
        gbc.writeMem(0x49ce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2785);
        EXPECT(gbc.pc(), 0x49d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0193
        gbc.setState(0x8d86, 0x5ad8, 0xa410, 0xb0a5, 0x1ff6, 0xd46c, 0x0, 0x1);
        gbc.writeMem(0x8d86, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5ad8);
        EXPECT(gbc.pc(), 0x8d88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d86), 0xcb);
        EXPECT(gbc.readMem(0x8d87), 0x67);
        // CB 67 0194
        gbc.setState(0x5aa9, 0x4ce3, 0xb530, 0xfa8f, 0x2fec, 0x87d5, 0x1, 0x1);
        gbc.writeMem(0x5aa9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4ce3);
        EXPECT(gbc.pc(), 0x5aab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0195
        gbc.setState(0x3d80, 0xdd0a, 0x5af0, 0xc970, 0x3f6f, 0xee8f, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xdd0a);
        EXPECT(gbc.pc(), 0x3d82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0196
        gbc.setState(0x1131, 0xbd60, 0x1180, 0x32ab, 0x104a, 0xf82b, 0x1, 0x0);
        gbc.writeMem(0x1131, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbd60);
        EXPECT(gbc.pc(), 0x1133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0197
        gbc.setState(0xb209, 0x7e09, 0xc410, 0x8bc2, 0x28c, 0x10e8, 0x1, 0x0);
        gbc.writeMem(0xb209, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x7e09);
        EXPECT(gbc.pc(), 0xb20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb209), 0xcb);
        EXPECT(gbc.readMem(0xb20a), 0x67);
        // CB 67 0198
        gbc.setState(0x461e, 0x192e, 0x1b30, 0x4034, 0xa3e9, 0x96df, 0x0, 0x1);
        gbc.writeMem(0x461e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x192e);
        EXPECT(gbc.pc(), 0x4620);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0199
        gbc.setState(0x3903, 0x55f0, 0x6bd0, 0x41cb, 0xa27f, 0x488f, 0x1, 0x0);
        gbc.writeMem(0x3903, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x55f0);
        EXPECT(gbc.pc(), 0x3905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 019A
        gbc.setState(0x7697, 0xccb4, 0x38f0, 0xd803, 0xad3f, 0xbb9d, 0x0, 0x0);
        gbc.writeMem(0x7697, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xccb4);
        EXPECT(gbc.pc(), 0x7699);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 019B
        gbc.setState(0x7fe5, 0xfe41, 0x5df0, 0xada7, 0xac49, 0xdff1, 0x1, 0x1);
        gbc.writeMem(0x7fe5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfe41);
        EXPECT(gbc.pc(), 0x7fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 019C
        gbc.setState(0x2beb, 0x651, 0x79f0, 0xe20b, 0xa1e8, 0x4cf3, 0x0, 0x0);
        gbc.writeMem(0x2beb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x651);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 019D
        gbc.setState(0x859b, 0xa539, 0xe5c0, 0x45eb, 0x4a52, 0xcf6e, 0x0, 0x1);
        gbc.writeMem(0x859b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa539);
        EXPECT(gbc.pc(), 0x859d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859b), 0xcb);
        EXPECT(gbc.readMem(0x859c), 0x67);
        // CB 67 019E
        gbc.setState(0xecc7, 0xe259, 0x8ec0, 0xdac4, 0xae86, 0x9e79, 0x0, 0x0);
        gbc.writeMem(0xecc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe259);
        EXPECT(gbc.pc(), 0xecc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc7), 0xcb);
        EXPECT(gbc.readMem(0xecc8), 0x67);
        // CB 67 019F
        gbc.setState(0x4923, 0x9427, 0xd3c0, 0x54ac, 0xd1fc, 0x71e7, 0x0, 0x1);
        gbc.writeMem(0x4923, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9427);
        EXPECT(gbc.pc(), 0x4925);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01A0
        gbc.setState(0x39cc, 0x2832, 0x3080, 0x2a2, 0x1de1, 0x54b0, 0x1, 0x1);
        gbc.writeMem(0x39cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2832);
        EXPECT(gbc.pc(), 0x39ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01A1
        gbc.setState(0x4f87, 0x96eb, 0xc6e0, 0x35a3, 0x4c99, 0x985a, 0x0, 0x1);
        gbc.writeMem(0x4f87, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x96eb);
        EXPECT(gbc.pc(), 0x4f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01A2
        gbc.setState(0x811d, 0xa8d2, 0xa80, 0x6c1b, 0xb7f4, 0x1aa0, 0x0, 0x0);
        gbc.writeMem(0x811d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa8d2);
        EXPECT(gbc.pc(), 0x811f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811d), 0xcb);
        EXPECT(gbc.readMem(0x811e), 0x67);
        // CB 67 01A3
        gbc.setState(0xa10e, 0x7363, 0x6b10, 0xe71b, 0xe0cf, 0x6847, 0x0, 0x0);
        gbc.writeMem(0xa10e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7363);
        EXPECT(gbc.pc(), 0xa110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa10e), 0xcb);
        EXPECT(gbc.readMem(0xa10f), 0x67);
        // CB 67 01A4
        gbc.setState(0x224b, 0x443e, 0xd290, 0x1e1d, 0xb81d, 0x3551, 0x1, 0x1);
        gbc.writeMem(0x224b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x443e);
        EXPECT(gbc.pc(), 0x224d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01A5
        gbc.setState(0xe428, 0xb25d, 0x1c70, 0x3946, 0xa83a, 0x7c7c, 0x1, 0x1);
        gbc.writeMem(0xe428, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb25d);
        EXPECT(gbc.pc(), 0xe42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe428), 0xcb);
        EXPECT(gbc.readMem(0xe429), 0x67);
        // CB 67 01A6
        gbc.setState(0xa425, 0x9f, 0x1350, 0xe955, 0x5742, 0xa601, 0x0, 0x0);
        gbc.writeMem(0xa425, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9f);
        EXPECT(gbc.pc(), 0xa427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa425), 0xcb);
        EXPECT(gbc.readMem(0xa426), 0x67);
        // CB 67 01A7
        gbc.setState(0x22bc, 0x8bba, 0x2630, 0xbf54, 0x7700, 0xc190, 0x1, 0x0);
        gbc.writeMem(0x22bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8bba);
        EXPECT(gbc.pc(), 0x22be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01A8
        gbc.setState(0xcd32, 0xe59a, 0x2cf0, 0xfc7d, 0xc974, 0x8f31, 0x1, 0x0);
        gbc.writeMem(0xcd32, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe59a);
        EXPECT(gbc.pc(), 0xcd34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd32), 0xcb);
        EXPECT(gbc.readMem(0xcd33), 0x67);
        // CB 67 01A9
        gbc.setState(0x4ea1, 0x9c33, 0x2710, 0xfed4, 0xcc97, 0x837f, 0x1, 0x1);
        gbc.writeMem(0x4ea1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9c33);
        EXPECT(gbc.pc(), 0x4ea3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01AA
        gbc.setState(0xdcbb, 0x4742, 0x8380, 0xfe90, 0xd172, 0x9e62, 0x1, 0x1);
        gbc.writeMem(0xdcbb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4742);
        EXPECT(gbc.pc(), 0xdcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbb), 0xcb);
        EXPECT(gbc.readMem(0xdcbc), 0x67);
        // CB 67 01AB
        gbc.setState(0x5bc7, 0xa974, 0xc9f0, 0x2df3, 0xe7cf, 0xbd4f, 0x1, 0x1);
        gbc.writeMem(0x5bc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa974);
        EXPECT(gbc.pc(), 0x5bc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01AC
        gbc.setState(0x206, 0xe5b8, 0xfab0, 0xe4ec, 0x4e, 0xd8b4, 0x0, 0x1);
        gbc.writeMem(0x206, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe5b8);
        EXPECT(gbc.pc(), 0x208);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01AD
        gbc.setState(0x84e, 0xdf16, 0x2760, 0x9d67, 0x12e5, 0xaf8b, 0x1, 0x1);
        gbc.writeMem(0x84e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdf16);
        EXPECT(gbc.pc(), 0x850);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01AE
        gbc.setState(0x23e1, 0x5a13, 0xc970, 0xc442, 0x5a30, 0x906f, 0x1, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5a13);
        EXPECT(gbc.pc(), 0x23e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01AF
        gbc.setState(0x3ba6, 0xf472, 0x1920, 0x222d, 0xbec7, 0x5711, 0x1, 0x1);
        gbc.writeMem(0x3ba6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf472);
        EXPECT(gbc.pc(), 0x3ba8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01B0
        gbc.setState(0x1eb3, 0xf412, 0x7ce0, 0x3ef4, 0xd836, 0x7d58, 0x0, 0x1);
        gbc.writeMem(0x1eb3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xf412);
        EXPECT(gbc.pc(), 0x1eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01B1
        gbc.setState(0xecef, 0xa33f, 0x5e30, 0x101e, 0x70ab, 0xb3d9, 0x0, 0x1);
        gbc.writeMem(0xecef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa33f);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0x67);
        // CB 67 01B2
        gbc.setState(0xb976, 0x6e58, 0xc500, 0x950a, 0x7e98, 0xf8ed, 0x0, 0x0);
        gbc.writeMem(0xb976, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6e58);
        EXPECT(gbc.pc(), 0xb978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb976), 0xcb);
        EXPECT(gbc.readMem(0xb977), 0x67);
        // CB 67 01B3
        gbc.setState(0x40d3, 0xac82, 0x10e0, 0xa1fc, 0xc417, 0x7e75, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xac82);
        EXPECT(gbc.pc(), 0x40d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01B4
        gbc.setState(0x5871, 0xc658, 0x98d0, 0xb8b, 0xb610, 0xe987, 0x1, 0x0);
        gbc.writeMem(0x5871, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc658);
        EXPECT(gbc.pc(), 0x5873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01B5
        gbc.setState(0x1864, 0x4f76, 0x2e50, 0x42d8, 0x28cd, 0xaccd, 0x0, 0x0);
        gbc.writeMem(0x1864, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4f76);
        EXPECT(gbc.pc(), 0x1866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01B6
        gbc.setState(0xe4a8, 0xd043, 0x5750, 0x82f3, 0x63d0, 0x4ac3, 0x1, 0x0);
        gbc.writeMem(0xe4a8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd043);
        EXPECT(gbc.pc(), 0xe4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a8), 0xcb);
        EXPECT(gbc.readMem(0xe4a9), 0x67);
        // CB 67 01B7
        gbc.setState(0x5bf1, 0x8e3a, 0xb950, 0xd202, 0x91f1, 0xa1d2, 0x0, 0x1);
        gbc.writeMem(0x5bf1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8e3a);
        EXPECT(gbc.pc(), 0x5bf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01B8
        gbc.setState(0xbc6b, 0x847e, 0xb5f0, 0x55e6, 0x3a60, 0x3baa, 0x1, 0x1);
        gbc.writeMem(0xbc6b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x847e);
        EXPECT(gbc.pc(), 0xbc6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6b), 0xcb);
        EXPECT(gbc.readMem(0xbc6c), 0x67);
        // CB 67 01B9
        gbc.setState(0x5706, 0x850f, 0xcae0, 0xaba, 0x38c8, 0xa548, 0x0, 0x1);
        gbc.writeMem(0x5706, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x850f);
        EXPECT(gbc.pc(), 0x5708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01BA
        gbc.setState(0xdcb9, 0xd42c, 0xe010, 0x902d, 0x1e9e, 0x8e08, 0x0, 0x1);
        gbc.writeMem(0xdcb9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd42c);
        EXPECT(gbc.pc(), 0xdcbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb9), 0xcb);
        EXPECT(gbc.readMem(0xdcba), 0x67);
        // CB 67 01BB
        gbc.setState(0x82a, 0x7a32, 0x4d70, 0xf3f8, 0x24af, 0x36d0, 0x0, 0x1);
        gbc.writeMem(0x82a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7a32);
        EXPECT(gbc.pc(), 0x82c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01BD
        gbc.setState(0xc83c, 0x1126, 0x1450, 0x6494, 0x9f17, 0x86e1, 0x0, 0x0);
        gbc.writeMem(0xc83c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1126);
        EXPECT(gbc.pc(), 0xc83e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc83c), 0xcb);
        EXPECT(gbc.readMem(0xc83d), 0x67);
        // CB 67 01BE
        gbc.setState(0x8597, 0xc122, 0x2150, 0xedad, 0x2d6c, 0x6b0f, 0x1, 0x0);
        gbc.writeMem(0x8597, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc122);
        EXPECT(gbc.pc(), 0x8599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8597), 0xcb);
        EXPECT(gbc.readMem(0x8598), 0x67);
        // CB 67 01BF
        gbc.setState(0x69e4, 0x5270, 0x6890, 0x303a, 0x946, 0x9d23, 0x1, 0x0);
        gbc.writeMem(0x69e4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5270);
        EXPECT(gbc.pc(), 0x69e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01C0
        gbc.setState(0x49b5, 0xce9e, 0xfe10, 0x92e7, 0xfe9d, 0x4626, 0x0, 0x1);
        gbc.writeMem(0x49b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xce9e);
        EXPECT(gbc.pc(), 0x49b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01C1
        gbc.setState(0xe538, 0x5a6c, 0xd4f0, 0xf7d8, 0x8b36, 0x142e, 0x1, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5a6c);
        EXPECT(gbc.pc(), 0xe53a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe538), 0xcb);
        EXPECT(gbc.readMem(0xe539), 0x67);
        // CB 67 01C2
        gbc.setState(0xc718, 0xb53c, 0x3a10, 0x7200, 0xbe16, 0x4575, 0x1, 0x0);
        gbc.writeMem(0xc718, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xb53c);
        EXPECT(gbc.pc(), 0xc71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc718), 0xcb);
        EXPECT(gbc.readMem(0xc719), 0x67);
        // CB 67 01C3
        gbc.setState(0x2b14, 0x3715, 0x6bc0, 0x6b93, 0xada3, 0x54db, 0x1, 0x1);
        gbc.writeMem(0x2b14, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3715);
        EXPECT(gbc.pc(), 0x2b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01C5
        gbc.setState(0x51e6, 0x1cfe, 0x8e90, 0xa46, 0x73b5, 0x65f7, 0x1, 0x1);
        gbc.writeMem(0x51e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1cfe);
        EXPECT(gbc.pc(), 0x51e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01C7
        gbc.setState(0x5459, 0x81e3, 0x2c20, 0xfed6, 0x46ac, 0x4cde, 0x1, 0x0);
        gbc.writeMem(0x5459, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x81e3);
        EXPECT(gbc.pc(), 0x545b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01C8
        gbc.setState(0xd6df, 0x96fb, 0xee00, 0x1f2c, 0x730d, 0x9185, 0x0, 0x0);
        gbc.writeMem(0xd6df, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x96fb);
        EXPECT(gbc.pc(), 0xd6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6df), 0xcb);
        EXPECT(gbc.readMem(0xd6e0), 0x67);
        // CB 67 01C9
        gbc.setState(0x5a02, 0x26a1, 0x63a0, 0x583, 0xe82a, 0xd931, 0x0, 0x1);
        gbc.writeMem(0x5a02, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x26a1);
        EXPECT(gbc.pc(), 0x5a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01CA
        gbc.setState(0x79b1, 0xb937, 0xfa30, 0x546, 0x94d, 0x62c1, 0x1, 0x0);
        gbc.writeMem(0x79b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb937);
        EXPECT(gbc.pc(), 0x79b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01CB
        gbc.setState(0x73c2, 0xee92, 0xc870, 0x37aa, 0xa520, 0x8588, 0x1, 0x1);
        gbc.writeMem(0x73c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xee92);
        EXPECT(gbc.pc(), 0x73c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01CC
        gbc.setState(0xb76d, 0x8004, 0x56d0, 0x296d, 0xb3de, 0x75d6, 0x0, 0x0);
        gbc.writeMem(0xb76d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8004);
        EXPECT(gbc.pc(), 0xb76f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb76d), 0xcb);
        EXPECT(gbc.readMem(0xb76e), 0x67);
        // CB 67 01CD
        gbc.setState(0xba32, 0x8d01, 0x89c0, 0xb91c, 0x2390, 0x5695, 0x0, 0x0);
        gbc.writeMem(0xba32, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8d01);
        EXPECT(gbc.pc(), 0xba34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba32), 0xcb);
        EXPECT(gbc.readMem(0xba33), 0x67);
        // CB 67 01CE
        gbc.setState(0x2372, 0x634a, 0x1500, 0x1e77, 0x3b5f, 0x49ba, 0x1, 0x1);
        gbc.writeMem(0x2372, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x634a);
        EXPECT(gbc.pc(), 0x2374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01CF
        gbc.setState(0xe331, 0xcfb3, 0x40a0, 0xdc67, 0x2941, 0x9c60, 0x0, 0x0);
        gbc.writeMem(0xe331, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcfb3);
        EXPECT(gbc.pc(), 0xe333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe331), 0xcb);
        EXPECT(gbc.readMem(0xe332), 0x67);
        // CB 67 01D0
        gbc.setState(0xe31d, 0xb827, 0xe80, 0x89f8, 0xc6d3, 0x883, 0x0, 0x1);
        gbc.writeMem(0xe31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb827);
        EXPECT(gbc.pc(), 0xe31f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe31d), 0xcb);
        EXPECT(gbc.readMem(0xe31e), 0x67);
        // CB 67 01D1
        gbc.setState(0x6ab2, 0xce79, 0xe8f0, 0x5caa, 0x26b2, 0x4504, 0x1, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xce79);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01D2
        gbc.setState(0xddce, 0x390f, 0xd0e0, 0xb023, 0xd440, 0x520b, 0x0, 0x1);
        gbc.writeMem(0xddce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x390f);
        EXPECT(gbc.pc(), 0xddd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddce), 0xcb);
        EXPECT(gbc.readMem(0xddcf), 0x67);
        // CB 67 01D3
        gbc.setState(0x206e, 0x9e99, 0x4890, 0xfe11, 0xe60f, 0xf580, 0x1, 0x1);
        gbc.writeMem(0x206e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9e99);
        EXPECT(gbc.pc(), 0x2070);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01D4
        gbc.setState(0x5dec, 0x275a, 0x9910, 0xfa72, 0x30ba, 0x2c1c, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x275a);
        EXPECT(gbc.pc(), 0x5dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01D5
        gbc.setState(0x6e69, 0x8036, 0xd6e0, 0xedb7, 0x6b6a, 0x3ce, 0x0, 0x0);
        gbc.writeMem(0x6e69, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x8036);
        EXPECT(gbc.pc(), 0x6e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01D6
        gbc.setState(0x584e, 0x14ee, 0x20a0, 0x1671, 0x4569, 0x4e22, 0x0, 0x1);
        gbc.writeMem(0x584e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x14ee);
        EXPECT(gbc.pc(), 0x5850);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01D8
        gbc.setState(0xd50e, 0x5582, 0x7a90, 0xfe11, 0xba52, 0xeb7c, 0x0, 0x0);
        gbc.writeMem(0xd50e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5582);
        EXPECT(gbc.pc(), 0xd510);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd50e), 0xcb);
        EXPECT(gbc.readMem(0xd50f), 0x67);
        // CB 67 01D9
        gbc.setState(0x58e, 0x5bc3, 0xd3a0, 0x796f, 0x7d48, 0x3897, 0x0, 0x0);
        gbc.writeMem(0x58e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5bc3);
        EXPECT(gbc.pc(), 0x590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01DA
        gbc.setState(0xa43c, 0x5d53, 0x350, 0xc7a7, 0x4df7, 0xe1a, 0x1, 0x1);
        gbc.writeMem(0xa43c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x5d53);
        EXPECT(gbc.pc(), 0xa43e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa43c), 0xcb);
        EXPECT(gbc.readMem(0xa43d), 0x67);
        // CB 67 01DB
        gbc.setState(0x5f22, 0xa6f1, 0xa700, 0x64cb, 0x34d9, 0x42e8, 0x1, 0x1);
        gbc.writeMem(0x5f22, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xa6f1);
        EXPECT(gbc.pc(), 0x5f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01DC
        gbc.setState(0x8397, 0x670, 0xae80, 0x736f, 0x1368, 0x7a28, 0x1, 0x1);
        gbc.writeMem(0x8397, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x670);
        EXPECT(gbc.pc(), 0x8399);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8397), 0xcb);
        EXPECT(gbc.readMem(0x8398), 0x67);
        // CB 67 01DF
        gbc.setState(0x6dd3, 0xb407, 0x6670, 0x26e4, 0x3cd1, 0xb3bc, 0x0, 0x1);
        gbc.writeMem(0x6dd3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb407);
        EXPECT(gbc.pc(), 0x6dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01E0
        gbc.setState(0xc164, 0x822d, 0x1f60, 0x3046, 0x4ada, 0xc443, 0x1, 0x1);
        gbc.writeMem(0xc164, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x822d);
        EXPECT(gbc.pc(), 0xc166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc164), 0xcb);
        EXPECT(gbc.readMem(0xc165), 0x67);
        // CB 67 01E1
        gbc.setState(0xaf94, 0x4adc, 0x5d30, 0xf20, 0xadce, 0x97bd, 0x1, 0x1);
        gbc.writeMem(0xaf94, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4adc);
        EXPECT(gbc.pc(), 0xaf96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf94), 0xcb);
        EXPECT(gbc.readMem(0xaf95), 0x67);
        // CB 67 01E2
        gbc.setState(0x1f00, 0xb4c4, 0xf970, 0x326, 0x474e, 0x51e8, 0x1, 0x1);
        gbc.writeMem(0x1f00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb4c4);
        EXPECT(gbc.pc(), 0x1f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01E4
        gbc.setState(0x9dbc, 0x5a42, 0x1800, 0x3721, 0x1160, 0x6c2a, 0x1, 0x0);
        gbc.writeMem(0x9dbc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5a42);
        EXPECT(gbc.pc(), 0x9dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbc), 0xcb);
        EXPECT(gbc.readMem(0x9dbd), 0x67);
        // CB 67 01E5
        gbc.setState(0xb105, 0x4a96, 0xdc80, 0xfff0, 0xdadf, 0x3803, 0x1, 0x0);
        gbc.writeMem(0xb105, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4a96);
        EXPECT(gbc.pc(), 0xb107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb105), 0xcb);
        EXPECT(gbc.readMem(0xb106), 0x67);
        // CB 67 01E6
        gbc.setState(0xea79, 0xedf6, 0xe080, 0x84f1, 0xaf24, 0x8d2a, 0x1, 0x0);
        gbc.writeMem(0xea79, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xedf6);
        EXPECT(gbc.pc(), 0xea7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea79), 0xcb);
        EXPECT(gbc.readMem(0xea7a), 0x67);
        // CB 67 01E7
        gbc.setState(0xe11d, 0xa190, 0x3580, 0xa510, 0x919c, 0xb059, 0x1, 0x1);
        gbc.writeMem(0xe11d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xa190);
        EXPECT(gbc.pc(), 0xe11f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe11d), 0xcb);
        EXPECT(gbc.readMem(0xe11e), 0x67);
        // CB 67 01E8
        gbc.setState(0xa95d, 0x64fd, 0x5c00, 0x47a, 0xe659, 0x1c9b, 0x1, 0x0);
        gbc.writeMem(0xa95d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x64fd);
        EXPECT(gbc.pc(), 0xa95f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa95d), 0xcb);
        EXPECT(gbc.readMem(0xa95e), 0x67);
        // CB 67 01E9
        gbc.setState(0x938a, 0xbb1a, 0x37e0, 0x9063, 0xf99c, 0xcc18, 0x0, 0x1);
        gbc.writeMem(0x938a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbb1a);
        EXPECT(gbc.pc(), 0x938c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938a), 0xcb);
        EXPECT(gbc.readMem(0x938b), 0x67);
        // CB 67 01EA
        gbc.setState(0x7122, 0x6cd5, 0xb050, 0x549a, 0x4897, 0x6cd7, 0x0, 0x0);
        gbc.writeMem(0x7122, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6cd5);
        EXPECT(gbc.pc(), 0x7124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01EB
        gbc.setState(0x29e5, 0xc87c, 0x5630, 0xa31a, 0x368c, 0x5293, 0x0, 0x0);
        gbc.writeMem(0x29e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xc87c);
        EXPECT(gbc.pc(), 0x29e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01EC
        gbc.setState(0x647e, 0x934a, 0x5b30, 0xaf59, 0x30c1, 0x7ebd, 0x0, 0x0);
        gbc.writeMem(0x647e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x934a);
        EXPECT(gbc.pc(), 0x6480);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01ED
        gbc.setState(0xa22f, 0x8836, 0x50e0, 0xd89, 0x1f94, 0xf613, 0x0, 0x1);
        gbc.writeMem(0xa22f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8836);
        EXPECT(gbc.pc(), 0xa231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22f), 0xcb);
        EXPECT(gbc.readMem(0xa230), 0x67);
        // CB 67 01EE
        gbc.setState(0x1ea5, 0x12a8, 0xc20, 0xf6fa, 0xbbea, 0xd7c4, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x12a8);
        EXPECT(gbc.pc(), 0x1ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01EF
        gbc.setState(0xd9c0, 0xb819, 0xade0, 0x7673, 0x3d3d, 0xa2b5, 0x1, 0x0);
        gbc.writeMem(0xd9c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0xd9c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c0), 0xcb);
        EXPECT(gbc.readMem(0xd9c1), 0x67);
        // CB 67 01F0
        gbc.setState(0x306f, 0x2151, 0x5330, 0xd7db, 0xf27d, 0xda0a, 0x1, 0x1);
        gbc.writeMem(0x306f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x2151);
        EXPECT(gbc.pc(), 0x3071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01F1
        gbc.setState(0x147, 0xc685, 0xe040, 0x1053, 0x57af, 0x1c7f, 0x0, 0x0);
        gbc.writeMem(0x147, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc685);
        EXPECT(gbc.pc(), 0x149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01F2
        gbc.setState(0x8728, 0x4e01, 0x1ce0, 0xf1c7, 0xec9e, 0xa2, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4e01);
        EXPECT(gbc.pc(), 0x872a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8728), 0xcb);
        EXPECT(gbc.readMem(0x8729), 0x67);
        // CB 67 01F3
        gbc.setState(0x6c1b, 0xee9f, 0x48a0, 0x64f6, 0x18fc, 0x7993, 0x0, 0x0);
        gbc.writeMem(0x6c1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xee9f);
        EXPECT(gbc.pc(), 0x6c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01F4
        gbc.setState(0x9df7, 0x48ba, 0x84f0, 0x2ff5, 0x319c, 0xe1c2, 0x0, 0x0);
        gbc.writeMem(0x9df7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0x9df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df7), 0xcb);
        EXPECT(gbc.readMem(0x9df8), 0x67);
        // CB 67 01F5
        gbc.setState(0x1531, 0xa090, 0xa460, 0xd364, 0x96c0, 0xed7e, 0x0, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa090);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01F6
        gbc.setState(0x6a44, 0x2509, 0x3450, 0x4efd, 0xbf84, 0x3488, 0x0, 0x1);
        gbc.writeMem(0x6a44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2509);
        EXPECT(gbc.pc(), 0x6a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 01F7
        gbc.setState(0xb56f, 0xdd25, 0xa200, 0xf893, 0xe6cf, 0x37e9, 0x0, 0x1);
        gbc.writeMem(0xb56f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdd25);
        EXPECT(gbc.pc(), 0xb571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56f), 0xcb);
        EXPECT(gbc.readMem(0xb570), 0x67);
        // CB 67 01F8
        gbc.setState(0xcf4a, 0xe14f, 0xae20, 0x2c8e, 0xe400, 0xf365, 0x0, 0x1);
        gbc.writeMem(0xcf4a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe14f);
        EXPECT(gbc.pc(), 0xcf4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0xcb);
        EXPECT(gbc.readMem(0xcf4b), 0x67);
        // CB 67 01F9
        gbc.setState(0x3177, 0x41da, 0x6160, 0x52c9, 0x7f1f, 0xcdd7, 0x0, 0x0);
        gbc.writeMem(0x3177, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x41da);
        EXPECT(gbc.pc(), 0x3179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01FB
        gbc.setState(0x9577, 0xce89, 0x54f0, 0xd44, 0xdf2b, 0xb613, 0x1, 0x0);
        gbc.writeMem(0x9577, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xce89);
        EXPECT(gbc.pc(), 0x9579);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9577), 0xcb);
        EXPECT(gbc.readMem(0x9578), 0x67);
        // CB 67 01FC
        gbc.setState(0x50f3, 0x2764, 0xada0, 0x398e, 0x4f11, 0xaed, 0x1, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2764);
        EXPECT(gbc.pc(), 0x50f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 01FD
        gbc.setState(0x9984, 0x369a, 0xc270, 0x9d72, 0x5e0, 0xdf9, 0x0, 0x0);
        gbc.writeMem(0x9984, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x369a);
        EXPECT(gbc.pc(), 0x9986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9984), 0xcb);
        EXPECT(gbc.readMem(0x9985), 0x67);
        // CB 67 01FE
        gbc.setState(0xbab9, 0xa3, 0xc20, 0xfde0, 0x68c8, 0x1f8b, 0x1, 0x0);
        gbc.writeMem(0xbab9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xa3);
        EXPECT(gbc.pc(), 0xbabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab9), 0xcb);
        EXPECT(gbc.readMem(0xbaba), 0x67);
        // CB 67 01FF
        gbc.setState(0xe1f9, 0x353c, 0x87b0, 0x53a4, 0x7216, 0x65ce, 0x1, 0x0);
        gbc.writeMem(0xe1f9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x353c);
        EXPECT(gbc.pc(), 0xe1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1f9), 0xcb);
        EXPECT(gbc.readMem(0xe1fa), 0x67);
        // CB 67 0200
        gbc.setState(0x708f, 0x1e3b, 0x6ef0, 0x192f, 0x5e2c, 0xec1c, 0x0, 0x0);
        gbc.writeMem(0x708f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1e3b);
        EXPECT(gbc.pc(), 0x7091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0201
        gbc.setState(0x3a08, 0x49e5, 0x91a0, 0xe2f0, 0xb4fa, 0x3d2a, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x49e5);
        EXPECT(gbc.pc(), 0x3a0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0202
        gbc.setState(0x942f, 0xd4fe, 0x8290, 0xc5f6, 0x18d, 0x9b02, 0x0, 0x0);
        gbc.writeMem(0x942f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd4fe);
        EXPECT(gbc.pc(), 0x9431);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942f), 0xcb);
        EXPECT(gbc.readMem(0x9430), 0x67);
        // CB 67 0203
        gbc.setState(0xd4ee, 0x1351, 0xc730, 0x9a46, 0xafa3, 0x4383, 0x1, 0x1);
        gbc.writeMem(0xd4ee, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1351);
        EXPECT(gbc.pc(), 0xd4f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4ee), 0xcb);
        EXPECT(gbc.readMem(0xd4ef), 0x67);
        // CB 67 0204
        gbc.setState(0x22be, 0xff8c, 0x5b60, 0xb119, 0xc6e5, 0x50ba, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xff8c);
        EXPECT(gbc.pc(), 0x22c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0205
        gbc.setState(0x47b4, 0x2e6, 0xdd80, 0xd727, 0xdd55, 0xf607, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2e6);
        EXPECT(gbc.pc(), 0x47b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0206
        gbc.setState(0x2888, 0xff0c, 0x88b0, 0x6c0a, 0xb598, 0xba60, 0x0, 0x1);
        gbc.writeMem(0x2888, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xff0c);
        EXPECT(gbc.pc(), 0x288a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0207
        gbc.setState(0x675f, 0x5185, 0x68a0, 0xea3b, 0xea20, 0x2460, 0x1, 0x0);
        gbc.writeMem(0x675f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5185);
        EXPECT(gbc.pc(), 0x6761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0208
        gbc.setState(0x8721, 0xbc85, 0xc050, 0x82d4, 0x316a, 0xf62c, 0x1, 0x0);
        gbc.writeMem(0x8721, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbc85);
        EXPECT(gbc.pc(), 0x8723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8721), 0xcb);
        EXPECT(gbc.readMem(0x8722), 0x67);
        // CB 67 0209
        gbc.setState(0x2129, 0xb7ef, 0x7280, 0xec9d, 0x9697, 0xac42, 0x0, 0x0);
        gbc.writeMem(0x2129, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb7ef);
        EXPECT(gbc.pc(), 0x212b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 020A
        gbc.setState(0xccac, 0x4655, 0xce40, 0xab66, 0x396b, 0xa901, 0x1, 0x0);
        gbc.writeMem(0xccac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4655);
        EXPECT(gbc.pc(), 0xccae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccac), 0xcb);
        EXPECT(gbc.readMem(0xccad), 0x67);
        // CB 67 020B
        gbc.setState(0x872e, 0xc8d6, 0x98b0, 0x5e9c, 0xa8ca, 0x513d, 0x0, 0x1);
        gbc.writeMem(0x872e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xc8d6);
        EXPECT(gbc.pc(), 0x8730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872e), 0xcb);
        EXPECT(gbc.readMem(0x872f), 0x67);
        // CB 67 020C
        gbc.setState(0xb130, 0x5d0b, 0x6bf0, 0x54d2, 0x1e2a, 0x7a8d, 0x1, 0x1);
        gbc.writeMem(0xb130, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5d0b);
        EXPECT(gbc.pc(), 0xb132);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb130), 0xcb);
        EXPECT(gbc.readMem(0xb131), 0x67);
        // CB 67 020D
        gbc.setState(0x3102, 0x1bf2, 0x1fe0, 0xba24, 0x9237, 0x234b, 0x1, 0x1);
        gbc.writeMem(0x3102, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1bf2);
        EXPECT(gbc.pc(), 0x3104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 020E
        gbc.setState(0x20b5, 0x9e98, 0x12c0, 0x92f1, 0x5eda, 0xfa4c, 0x0, 0x1);
        gbc.writeMem(0x20b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9e98);
        EXPECT(gbc.pc(), 0x20b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0210
        gbc.setState(0xd0d9, 0x4043, 0xafd0, 0x889b, 0x8d0b, 0x3e2e, 0x0, 0x0);
        gbc.writeMem(0xd0d9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4043);
        EXPECT(gbc.pc(), 0xd0db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d9), 0xcb);
        EXPECT(gbc.readMem(0xd0da), 0x67);
        // CB 67 0211
        gbc.setState(0x9d34, 0x49d2, 0xb480, 0x644f, 0x6fe7, 0xd1e0, 0x1, 0x1);
        gbc.writeMem(0x9d34, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x49d2);
        EXPECT(gbc.pc(), 0x9d36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d34), 0xcb);
        EXPECT(gbc.readMem(0x9d35), 0x67);
        // CB 67 0212
        gbc.setState(0x3e40, 0xc8c, 0xc7f0, 0xefbe, 0xe4dc, 0x2796, 0x0, 0x0);
        gbc.writeMem(0x3e40, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc8c);
        EXPECT(gbc.pc(), 0x3e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0213
        gbc.setState(0x8531, 0x287b, 0x27b0, 0x1e17, 0xdd68, 0x2dc1, 0x0, 0x0);
        gbc.writeMem(0x8531, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x287b);
        EXPECT(gbc.pc(), 0x8533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8531), 0xcb);
        EXPECT(gbc.readMem(0x8532), 0x67);
        // CB 67 0214
        gbc.setState(0x152, 0x6049, 0x8150, 0x4cd2, 0xc944, 0x4f8b, 0x0, 0x1);
        gbc.writeMem(0x152, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6049);
        EXPECT(gbc.pc(), 0x154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0215
        gbc.setState(0x9dfb, 0x6171, 0x4520, 0x52e1, 0x1634, 0x2a17, 0x0, 0x0);
        gbc.writeMem(0x9dfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6171);
        EXPECT(gbc.pc(), 0x9dfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dfb), 0xcb);
        EXPECT(gbc.readMem(0x9dfc), 0x67);
        // CB 67 0216
        gbc.setState(0xb4b0, 0xe92, 0xe230, 0x77d9, 0x26f3, 0x87cd, 0x1, 0x0);
        gbc.writeMem(0xb4b0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe92);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x67);
        // CB 67 0217
        gbc.setState(0xe58f, 0x599, 0xd530, 0x28f5, 0x53c6, 0x862a, 0x1, 0x1);
        gbc.writeMem(0xe58f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x599);
        EXPECT(gbc.pc(), 0xe591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58f), 0xcb);
        EXPECT(gbc.readMem(0xe590), 0x67);
        // CB 67 0218
        gbc.setState(0x892d, 0xb882, 0xcf00, 0x5584, 0x10c4, 0x9844, 0x1, 0x1);
        gbc.writeMem(0x892d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb882);
        EXPECT(gbc.pc(), 0x892f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892d), 0xcb);
        EXPECT(gbc.readMem(0x892e), 0x67);
        // CB 67 0219
        gbc.setState(0xace7, 0x5c22, 0xf540, 0x45f7, 0xc9c9, 0x59a5, 0x1, 0x1);
        gbc.writeMem(0xace7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5c22);
        EXPECT(gbc.pc(), 0xace9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xace7), 0xcb);
        EXPECT(gbc.readMem(0xace8), 0x67);
        // CB 67 021A
        gbc.setState(0x39ca, 0xa834, 0x86f0, 0x10cb, 0x7925, 0x630a, 0x0, 0x1);
        gbc.writeMem(0x39ca, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xa834);
        EXPECT(gbc.pc(), 0x39cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 021B
        gbc.setState(0xaa7b, 0x484a, 0xb8d0, 0xa28a, 0xa770, 0xec56, 0x1, 0x0);
        gbc.writeMem(0xaa7b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x484a);
        EXPECT(gbc.pc(), 0xaa7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7b), 0xcb);
        EXPECT(gbc.readMem(0xaa7c), 0x67);
        // CB 67 021C
        gbc.setState(0x1f44, 0x31bb, 0xc890, 0xffd9, 0xa215, 0x278d, 0x0, 0x0);
        gbc.writeMem(0x1f44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x31bb);
        EXPECT(gbc.pc(), 0x1f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 021D
        gbc.setState(0x8bf7, 0x8df6, 0xed50, 0x1f9e, 0x9ce7, 0xc221, 0x0, 0x0);
        gbc.writeMem(0x8bf7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8df6);
        EXPECT(gbc.pc(), 0x8bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf7), 0xcb);
        EXPECT(gbc.readMem(0x8bf8), 0x67);
        // CB 67 021E
        gbc.setState(0x7b33, 0x2d0a, 0x71d0, 0x2c92, 0xaed3, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x2d0a);
        EXPECT(gbc.pc(), 0x7b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 021F
        gbc.setState(0x5a63, 0xb7de, 0x7ec0, 0x373b, 0x1a18, 0xba02, 0x0, 0x1);
        gbc.writeMem(0x5a63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb7de);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0220
        gbc.setState(0x3cf4, 0x432a, 0xaac0, 0xa9d2, 0xd744, 0xc5fa, 0x1, 0x1);
        gbc.writeMem(0x3cf4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x432a);
        EXPECT(gbc.pc(), 0x3cf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0221
        gbc.setState(0x675e, 0xed0f, 0xe580, 0xa766, 0x6ee5, 0xcf62, 0x1, 0x0);
        gbc.writeMem(0x675e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xed0f);
        EXPECT(gbc.pc(), 0x6760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0222
        gbc.setState(0xc5e5, 0x28be, 0x35d0, 0xa101, 0x97ef, 0x9a29, 0x0, 0x0);
        gbc.writeMem(0xc5e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x28be);
        EXPECT(gbc.pc(), 0xc5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5e5), 0xcb);
        EXPECT(gbc.readMem(0xc5e6), 0x67);
        // CB 67 0223
        gbc.setState(0xb7cd, 0xef96, 0x1db0, 0x78aa, 0xfe10, 0xf79d, 0x0, 0x0);
        gbc.writeMem(0xb7cd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xef96);
        EXPECT(gbc.pc(), 0xb7cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7cd), 0xcb);
        EXPECT(gbc.readMem(0xb7ce), 0x67);
        // CB 67 0224
        gbc.setState(0xa046, 0x2531, 0xe0c0, 0x4a4e, 0x57d8, 0x8c96, 0x1, 0x1);
        gbc.writeMem(0xa046, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2531);
        EXPECT(gbc.pc(), 0xa048);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa046), 0xcb);
        EXPECT(gbc.readMem(0xa047), 0x67);
        // CB 67 0225
        gbc.setState(0x960f, 0x5e84, 0x420, 0x2efb, 0xbdc0, 0x99f6, 0x1, 0x1);
        gbc.writeMem(0x960f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5e84);
        EXPECT(gbc.pc(), 0x9611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960f), 0xcb);
        EXPECT(gbc.readMem(0x9610), 0x67);
        // CB 67 0226
        gbc.setState(0xa076, 0xe430, 0xc2b0, 0x1b15, 0x2659, 0xce83, 0x1, 0x0);
        gbc.writeMem(0xa076, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe430);
        EXPECT(gbc.pc(), 0xa078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa076), 0xcb);
        EXPECT(gbc.readMem(0xa077), 0x67);
        // CB 67 0227
        gbc.setState(0xc2fe, 0xfafe, 0xcd80, 0x69dd, 0x6e2d, 0x5499, 0x1, 0x0);
        gbc.writeMem(0xc2fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xfafe);
        EXPECT(gbc.pc(), 0xc300);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2fe), 0xcb);
        EXPECT(gbc.readMem(0xc2ff), 0x67);
        // CB 67 0228
        gbc.setState(0xd21f, 0x5420, 0x3d30, 0xb07a, 0x859b, 0xe804, 0x1, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5420);
        EXPECT(gbc.pc(), 0xd221);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21f), 0xcb);
        EXPECT(gbc.readMem(0xd220), 0x67);
        // CB 67 0229
        gbc.setState(0x5a63, 0x7ca1, 0xf2e0, 0x3d5a, 0x597a, 0x7a3e, 0x0, 0x0);
        gbc.writeMem(0x5a63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0x5a65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 022A
        gbc.setState(0x5707, 0x89a5, 0xb1c0, 0x9ceb, 0x5f13, 0x86f, 0x1, 0x1);
        gbc.writeMem(0x5707, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x89a5);
        EXPECT(gbc.pc(), 0x5709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 022B
        gbc.setState(0x156a, 0x4a24, 0xeb70, 0x2a82, 0xca1b, 0xd809, 0x0, 0x0);
        gbc.writeMem(0x156a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4a24);
        EXPECT(gbc.pc(), 0x156c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 022D
        gbc.setState(0xefd9, 0x597c, 0x5320, 0xa69d, 0x3e11, 0x40d9, 0x1, 0x1);
        gbc.writeMem(0xefd9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x597c);
        EXPECT(gbc.pc(), 0xefdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd9), 0xcb);
        EXPECT(gbc.readMem(0xefda), 0x67);
        // CB 67 022E
        gbc.setState(0x7ff8, 0x7c7f, 0x3060, 0xcb9a, 0xf133, 0x5e42, 0x0, 0x1);
        gbc.writeMem(0x7ff8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7c7f);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 022F
        gbc.setState(0xabc8, 0xa7bc, 0xd090, 0x90, 0x7060, 0xb329, 0x0, 0x0);
        gbc.writeMem(0xabc8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa7bc);
        EXPECT(gbc.pc(), 0xabca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc8), 0xcb);
        EXPECT(gbc.readMem(0xabc9), 0x67);
        // CB 67 0230
        gbc.setState(0x2fe3, 0xe180, 0xdd0, 0x8f2c, 0xc3f8, 0x84ce, 0x1, 0x0);
        gbc.writeMem(0x2fe3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe180);
        EXPECT(gbc.pc(), 0x2fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0231
        gbc.setState(0x3e44, 0x6e5c, 0x610, 0xd750, 0x1742, 0xde6, 0x1, 0x0);
        gbc.writeMem(0x3e44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x6e5c);
        EXPECT(gbc.pc(), 0x3e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0233
        gbc.setState(0xd362, 0xa2f, 0xd350, 0x5924, 0x419, 0x7e7f, 0x0, 0x1);
        gbc.writeMem(0xd362, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa2f);
        EXPECT(gbc.pc(), 0xd364);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd362), 0xcb);
        EXPECT(gbc.readMem(0xd363), 0x67);
        // CB 67 0234
        gbc.setState(0x9ed7, 0x68e3, 0x94f0, 0x3951, 0xd19, 0xef1c, 0x0, 0x1);
        gbc.writeMem(0x9ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x68e3);
        EXPECT(gbc.pc(), 0x9ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ed7), 0xcb);
        EXPECT(gbc.readMem(0x9ed8), 0x67);
        // CB 67 0235
        gbc.setState(0xb12a, 0xb046, 0xc300, 0x9600, 0x7023, 0x3281, 0x1, 0x1);
        gbc.writeMem(0xb12a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb046);
        EXPECT(gbc.pc(), 0xb12c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb12a), 0xcb);
        EXPECT(gbc.readMem(0xb12b), 0x67);
        // CB 67 0236
        gbc.setState(0x7f6c, 0x1c63, 0x95e0, 0xe47, 0x642d, 0xeb59, 0x1, 0x1);
        gbc.writeMem(0x7f6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x1c63);
        EXPECT(gbc.pc(), 0x7f6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0237
        gbc.setState(0xc785, 0xf963, 0xe390, 0xd399, 0xe542, 0xb510, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf963);
        EXPECT(gbc.pc(), 0xc787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc785), 0xcb);
        EXPECT(gbc.readMem(0xc786), 0x67);
        // CB 67 0238
        gbc.setState(0xec3f, 0x86c8, 0x4640, 0x93de, 0x8e43, 0x2cd2, 0x0, 0x1);
        gbc.writeMem(0xec3f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x86c8);
        EXPECT(gbc.pc(), 0xec41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3f), 0xcb);
        EXPECT(gbc.readMem(0xec40), 0x67);
        // CB 67 0239
        gbc.setState(0x7bec, 0x2931, 0xfd20, 0xcd50, 0x214a, 0xc62b, 0x1, 0x0);
        gbc.writeMem(0x7bec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2931);
        EXPECT(gbc.pc(), 0x7bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 023A
        gbc.setState(0x2c0, 0x9055, 0x66d0, 0xf12c, 0xd595, 0x86d6, 0x1, 0x1);
        gbc.writeMem(0x2c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9055);
        EXPECT(gbc.pc(), 0x2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 023B
        gbc.setState(0x8888, 0xa6e6, 0x4300, 0x17f5, 0xb3a4, 0x741d, 0x1, 0x1);
        gbc.writeMem(0x8888, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa6e6);
        EXPECT(gbc.pc(), 0x888a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8888), 0xcb);
        EXPECT(gbc.readMem(0x8889), 0x67);
        // CB 67 023C
        gbc.setState(0x7107, 0xd671, 0xab40, 0xee92, 0xcd3e, 0x6b72, 0x0, 0x1);
        gbc.writeMem(0x7107, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd671);
        EXPECT(gbc.pc(), 0x7109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 023D
        gbc.setState(0xa085, 0xdf8f, 0x6cd0, 0xc0c, 0x52c7, 0xdc37, 0x0, 0x1);
        gbc.writeMem(0xa085, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xdf8f);
        EXPECT(gbc.pc(), 0xa087);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa085), 0xcb);
        EXPECT(gbc.readMem(0xa086), 0x67);
        // CB 67 023E
        gbc.setState(0x3c42, 0xb62e, 0x85e0, 0xacdf, 0x77d9, 0x4eaa, 0x0, 0x0);
        gbc.writeMem(0x3c42, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb62e);
        EXPECT(gbc.pc(), 0x3c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 023F
        gbc.setState(0x6742, 0x6701, 0xf0d0, 0x5ed8, 0x35e4, 0x4f6a, 0x0, 0x0);
        gbc.writeMem(0x6742, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6701);
        EXPECT(gbc.pc(), 0x6744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0240
        gbc.setState(0x4086, 0x65c3, 0x1ba0, 0xba0c, 0xe79, 0xd2fe, 0x1, 0x0);
        gbc.writeMem(0x4086, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x65c3);
        EXPECT(gbc.pc(), 0x4088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0241
        gbc.setState(0x20f1, 0x6d80, 0x7ce0, 0x540e, 0x3d7c, 0xffef, 0x0, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6d80);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0242
        gbc.setState(0x6ff1, 0x40de, 0xef00, 0xb27, 0xaa56, 0x73de, 0x0, 0x0);
        gbc.writeMem(0x6ff1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x40de);
        EXPECT(gbc.pc(), 0x6ff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0243
        gbc.setState(0x1a74, 0x459d, 0x4760, 0x2e9f, 0x7088, 0xc38, 0x1, 0x0);
        gbc.writeMem(0x1a74, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x459d);
        EXPECT(gbc.pc(), 0x1a76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0244
        gbc.setState(0x3290, 0x47f9, 0xb5b0, 0x8ae3, 0x3170, 0xf042, 0x0, 0x1);
        gbc.writeMem(0x3290, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x47f9);
        EXPECT(gbc.pc(), 0x3292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0245
        gbc.setState(0xab3d, 0xf7f, 0xe920, 0x129c, 0x97be, 0x6c9d, 0x0, 0x1);
        gbc.writeMem(0xab3d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf7f);
        EXPECT(gbc.pc(), 0xab3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab3d), 0xcb);
        EXPECT(gbc.readMem(0xab3e), 0x67);
        // CB 67 0246
        gbc.setState(0x96d9, 0x8442, 0x6cc0, 0x5165, 0x1a97, 0x95cc, 0x0, 0x1);
        gbc.writeMem(0x96d9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8442);
        EXPECT(gbc.pc(), 0x96db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d9), 0xcb);
        EXPECT(gbc.readMem(0x96da), 0x67);
        // CB 67 0247
        gbc.setState(0xea3b, 0x8040, 0xbb60, 0xa299, 0xfe91, 0x31ca, 0x1, 0x0);
        gbc.writeMem(0xea3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x8040);
        EXPECT(gbc.pc(), 0xea3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea3b), 0xcb);
        EXPECT(gbc.readMem(0xea3c), 0x67);
        // CB 67 0248
        gbc.setState(0xa032, 0x7651, 0x9c40, 0x4556, 0xfcb9, 0xf695, 0x1, 0x1);
        gbc.writeMem(0xa032, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7651);
        EXPECT(gbc.pc(), 0xa034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa032), 0xcb);
        EXPECT(gbc.readMem(0xa033), 0x67);
        // CB 67 0249
        gbc.setState(0x6316, 0x114d, 0x8ae0, 0xe28a, 0xa8df, 0xd321, 0x1, 0x1);
        gbc.writeMem(0x6316, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x114d);
        EXPECT(gbc.pc(), 0x6318);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 024A
        gbc.setState(0xa705, 0x59af, 0x6230, 0xf342, 0xa570, 0xf236, 0x0, 0x1);
        gbc.writeMem(0xa705, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x59af);
        EXPECT(gbc.pc(), 0xa707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa705), 0xcb);
        EXPECT(gbc.readMem(0xa706), 0x67);
        // CB 67 024B
        gbc.setState(0x9fdb, 0x138d, 0xb50, 0xd680, 0xcf5b, 0xf126, 0x1, 0x0);
        gbc.writeMem(0x9fdb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x138d);
        EXPECT(gbc.pc(), 0x9fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fdb), 0xcb);
        EXPECT(gbc.readMem(0x9fdc), 0x67);
        // CB 67 024C
        gbc.setState(0x5d9e, 0x76f4, 0x2490, 0xe092, 0x6226, 0xab7, 0x1, 0x1);
        gbc.writeMem(0x5d9e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x76f4);
        EXPECT(gbc.pc(), 0x5da0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 024D
        gbc.setState(0x82b2, 0x60e3, 0x6400, 0x7335, 0x819c, 0xc4ae, 0x1, 0x1);
        gbc.writeMem(0x82b2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x60e3);
        EXPECT(gbc.pc(), 0x82b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82b2), 0xcb);
        EXPECT(gbc.readMem(0x82b3), 0x67);
        // CB 67 024E
        gbc.setState(0xe446, 0x58b1, 0xcef0, 0xbd47, 0xea75, 0x9d5c, 0x0, 0x0);
        gbc.writeMem(0xe446, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x58b1);
        EXPECT(gbc.pc(), 0xe448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe446), 0xcb);
        EXPECT(gbc.readMem(0xe447), 0x67);
        // CB 67 024F
        gbc.setState(0x7a88, 0x56db, 0x770, 0xf870, 0x1360, 0xbc4e, 0x0, 0x1);
        gbc.writeMem(0x7a88, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x56db);
        EXPECT(gbc.pc(), 0x7a8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0250
        gbc.setState(0xd77f, 0xca8a, 0x9620, 0xcb1a, 0x4f0a, 0x60ee, 0x1, 0x0);
        gbc.writeMem(0xd77f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xca8a);
        EXPECT(gbc.pc(), 0xd781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd77f), 0xcb);
        EXPECT(gbc.readMem(0xd780), 0x67);
        // CB 67 0251
        gbc.setState(0x31e0, 0xbe75, 0x7ee0, 0xed7b, 0xdf8a, 0xb83b, 0x1, 0x0);
        gbc.writeMem(0x31e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbe75);
        EXPECT(gbc.pc(), 0x31e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0252
        gbc.setState(0x2336, 0x2b88, 0xb6a0, 0x9533, 0xd961, 0xc13e, 0x0, 0x1);
        gbc.writeMem(0x2336, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x2b88);
        EXPECT(gbc.pc(), 0x2338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0253
        gbc.setState(0x6fa2, 0x62a2, 0xb3f0, 0xb58e, 0x795a, 0x2aa0, 0x0, 0x0);
        gbc.writeMem(0x6fa2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x62a2);
        EXPECT(gbc.pc(), 0x6fa4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0254
        gbc.setState(0x7d0d, 0x8d2d, 0x21c0, 0x5f11, 0x2b6d, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0x7d0d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8d2d);
        EXPECT(gbc.pc(), 0x7d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0255
        gbc.setState(0x1955, 0x84cb, 0xc620, 0x57bf, 0xf0d5, 0x438e, 0x0, 0x0);
        gbc.writeMem(0x1955, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x84cb);
        EXPECT(gbc.pc(), 0x1957);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0256
        gbc.setState(0x82ab, 0xf09d, 0x3240, 0x4202, 0x650c, 0x541e, 0x1, 0x0);
        gbc.writeMem(0x82ab, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf09d);
        EXPECT(gbc.pc(), 0x82ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ab), 0xcb);
        EXPECT(gbc.readMem(0x82ac), 0x67);
        // CB 67 0258
        gbc.setState(0x2355, 0x53a1, 0x5880, 0x90a6, 0x1381, 0xb725, 0x0, 0x1);
        gbc.writeMem(0x2355, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x53a1);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0259
        gbc.setState(0x51e3, 0xa0f3, 0x75e0, 0x1f21, 0x15c5, 0x2a42, 0x1, 0x1);
        gbc.writeMem(0x51e3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa0f3);
        EXPECT(gbc.pc(), 0x51e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 025A
        gbc.setState(0x470, 0xbe53, 0x6990, 0x8556, 0x37aa, 0x537e, 0x1, 0x0);
        gbc.writeMem(0x470, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbe53);
        EXPECT(gbc.pc(), 0x472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 025B
        gbc.setState(0x5c80, 0x5110, 0x2210, 0x7459, 0x9184, 0x302e, 0x0, 0x1);
        gbc.writeMem(0x5c80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5110);
        EXPECT(gbc.pc(), 0x5c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 025C
        gbc.setState(0xb975, 0xf25d, 0xe5b0, 0xa72f, 0xd028, 0x1027, 0x1, 0x1);
        gbc.writeMem(0xb975, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf25d);
        EXPECT(gbc.pc(), 0xb977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb975), 0xcb);
        EXPECT(gbc.readMem(0xb976), 0x67);
        // CB 67 025D
        gbc.setState(0x709c, 0x8168, 0x9730, 0xc20e, 0x374c, 0x72f9, 0x0, 0x1);
        gbc.writeMem(0x709c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8168);
        EXPECT(gbc.pc(), 0x709e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 025E
        gbc.setState(0xaa2e, 0xfc50, 0xd680, 0xb5d1, 0xf0a6, 0x6167, 0x0, 0x1);
        gbc.writeMem(0xaa2e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfc50);
        EXPECT(gbc.pc(), 0xaa30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa2e), 0xcb);
        EXPECT(gbc.readMem(0xaa2f), 0x67);
        // CB 67 025F
        gbc.setState(0x53a, 0x9849, 0x61c0, 0x39aa, 0x467e, 0xa665, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x9849);
        EXPECT(gbc.pc(), 0x53c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0260
        gbc.setState(0xc42c, 0x234e, 0xa9a0, 0x9e3c, 0x7094, 0x19a1, 0x1, 0x1);
        gbc.writeMem(0xc42c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x234e);
        EXPECT(gbc.pc(), 0xc42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc42c), 0xcb);
        EXPECT(gbc.readMem(0xc42d), 0x67);
        // CB 67 0261
        gbc.setState(0x8d45, 0x1ce7, 0x2040, 0x4718, 0xbe05, 0x7f85, 0x1, 0x1);
        gbc.writeMem(0x8d45, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1ce7);
        EXPECT(gbc.pc(), 0x8d47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d45), 0xcb);
        EXPECT(gbc.readMem(0x8d46), 0x67);
        // CB 67 0262
        gbc.setState(0x3494, 0xf2f2, 0x3a90, 0xed06, 0xec37, 0x7e21, 0x0, 0x1);
        gbc.writeMem(0x3494, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf2f2);
        EXPECT(gbc.pc(), 0x3496);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0263
        gbc.setState(0x8919, 0x5205, 0x26e0, 0xc82f, 0x6bf3, 0x7868, 0x1, 0x0);
        gbc.writeMem(0x8919, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5205);
        EXPECT(gbc.pc(), 0x891b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8919), 0xcb);
        EXPECT(gbc.readMem(0x891a), 0x67);
        // CB 67 0264
        gbc.setState(0x7ee2, 0x83a6, 0x1720, 0x2b70, 0x409f, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0x7ee2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x83a6);
        EXPECT(gbc.pc(), 0x7ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0265
        gbc.setState(0xc482, 0x80e2, 0x3b20, 0x6214, 0xbff0, 0x6208, 0x1, 0x1);
        gbc.writeMem(0xc482, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x80e2);
        EXPECT(gbc.pc(), 0xc484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc482), 0xcb);
        EXPECT(gbc.readMem(0xc483), 0x67);
        // CB 67 0266
        gbc.setState(0xc87d, 0x234a, 0x8000, 0x918, 0xb5a4, 0x4f11, 0x1, 0x1);
        gbc.writeMem(0xc87d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x234a);
        EXPECT(gbc.pc(), 0xc87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc87d), 0xcb);
        EXPECT(gbc.readMem(0xc87e), 0x67);
        // CB 67 0267
        gbc.setState(0xe1e2, 0xd0e2, 0x92c0, 0x5938, 0x1a5a, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0xe1e2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd0e2);
        EXPECT(gbc.pc(), 0xe1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e2), 0xcb);
        EXPECT(gbc.readMem(0xe1e3), 0x67);
        // CB 67 0268
        gbc.setState(0x1263, 0xa95f, 0x7590, 0xf89d, 0x8d3a, 0xa279, 0x0, 0x0);
        gbc.writeMem(0x1263, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa95f);
        EXPECT(gbc.pc(), 0x1265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0269
        gbc.setState(0x842a, 0xa78, 0xf830, 0xcd09, 0x215c, 0xeb46, 0x1, 0x1);
        gbc.writeMem(0x842a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa78);
        EXPECT(gbc.pc(), 0x842c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x842a), 0xcb);
        EXPECT(gbc.readMem(0x842b), 0x67);
        // CB 67 026A
        gbc.setState(0x50f2, 0xb320, 0xc830, 0xaf82, 0xf5a1, 0x3500, 0x0, 0x0);
        gbc.writeMem(0x50f2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb320);
        EXPECT(gbc.pc(), 0x50f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 026B
        gbc.setState(0xddec, 0xfeed, 0x68c0, 0x95ec, 0x150, 0x325b, 0x1, 0x0);
        gbc.writeMem(0xddec, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xfeed);
        EXPECT(gbc.pc(), 0xddee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddec), 0xcb);
        EXPECT(gbc.readMem(0xdded), 0x67);
        // CB 67 026C
        gbc.setState(0x127a, 0x987c, 0x9f0, 0x856a, 0x55f8, 0xe2c6, 0x0, 0x0);
        gbc.writeMem(0x127a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x987c);
        EXPECT(gbc.pc(), 0x127c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 026D
        gbc.setState(0x1106, 0x869a, 0xb930, 0xb6a4, 0x4553, 0xe771, 0x0, 0x0);
        gbc.writeMem(0x1106, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x869a);
        EXPECT(gbc.pc(), 0x1108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 026E
        gbc.setState(0xba, 0x6d90, 0xead0, 0xec54, 0x74e5, 0xd8aa, 0x1, 0x1);
        gbc.writeMem(0xba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6d90);
        EXPECT(gbc.pc(), 0xbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 026F
        gbc.setState(0xde72, 0x89aa, 0x9f80, 0xbb4a, 0x936f, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0xde72, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x89aa);
        EXPECT(gbc.pc(), 0xde74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde72), 0xcb);
        EXPECT(gbc.readMem(0xde73), 0x67);
        // CB 67 0270
        gbc.setState(0x33c2, 0xa6ea, 0x2070, 0x61eb, 0xfd05, 0x3011, 0x1, 0x0);
        gbc.writeMem(0x33c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa6ea);
        EXPECT(gbc.pc(), 0x33c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0271
        gbc.setState(0xdb98, 0xa985, 0x430, 0x6a84, 0x41c3, 0x82b7, 0x0, 0x1);
        gbc.writeMem(0xdb98, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa985);
        EXPECT(gbc.pc(), 0xdb9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb98), 0xcb);
        EXPECT(gbc.readMem(0xdb99), 0x67);
        // CB 67 0272
        gbc.setState(0x2591, 0x5825, 0xaf90, 0x85dd, 0x3bc2, 0x60de, 0x0, 0x0);
        gbc.writeMem(0x2591, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x5825);
        EXPECT(gbc.pc(), 0x2593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0273
        gbc.setState(0x625a, 0x7d4c, 0x20, 0xc6dd, 0xf5a6, 0x609e, 0x1, 0x1);
        gbc.writeMem(0x625a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7d4c);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0274
        gbc.setState(0xcc36, 0x9cce, 0x98c0, 0x8e44, 0xe144, 0xe7a2, 0x0, 0x0);
        gbc.writeMem(0xcc36, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9cce);
        EXPECT(gbc.pc(), 0xcc38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc36), 0xcb);
        EXPECT(gbc.readMem(0xcc37), 0x67);
        // CB 67 0275
        gbc.setState(0xab55, 0xa2fd, 0x6790, 0x6819, 0xde0e, 0xa009, 0x0, 0x0);
        gbc.writeMem(0xab55, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa2fd);
        EXPECT(gbc.pc(), 0xab57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab55), 0xcb);
        EXPECT(gbc.readMem(0xab56), 0x67);
        // CB 67 0276
        gbc.setState(0xde20, 0x5b47, 0x1fb0, 0x4d1b, 0x3cd4, 0xbbb9, 0x1, 0x1);
        gbc.writeMem(0xde20, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5b47);
        EXPECT(gbc.pc(), 0xde22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde20), 0xcb);
        EXPECT(gbc.readMem(0xde21), 0x67);
        // CB 67 0277
        gbc.setState(0x570a, 0xeaf3, 0x8c60, 0xf722, 0xea8c, 0x7dfc, 0x0, 0x0);
        gbc.writeMem(0x570a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xeaf3);
        EXPECT(gbc.pc(), 0x570c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0278
        gbc.setState(0xe973, 0x5045, 0xa200, 0xf012, 0xd700, 0x9901, 0x1, 0x1);
        gbc.writeMem(0xe973, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x5045);
        EXPECT(gbc.pc(), 0xe975);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe973), 0xcb);
        EXPECT(gbc.readMem(0xe974), 0x67);
        // CB 67 0279
        gbc.setState(0x7d5d, 0xd7de, 0xc930, 0x8e0b, 0x81e2, 0x25ed, 0x0, 0x0);
        gbc.writeMem(0x7d5d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd7de);
        EXPECT(gbc.pc(), 0x7d5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 027A
        gbc.setState(0x10f1, 0x3c15, 0x5960, 0x469e, 0xd146, 0x3c0e, 0x1, 0x1);
        gbc.writeMem(0x10f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3c15);
        EXPECT(gbc.pc(), 0x10f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 027C
        gbc.setState(0xd000, 0xf44e, 0x9960, 0x2d48, 0xeffd, 0xb9ad, 0x0, 0x1);
        gbc.writeMem(0xd000, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf44e);
        EXPECT(gbc.pc(), 0xd002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd000), 0xcb);
        EXPECT(gbc.readMem(0xd001), 0x67);
        // CB 67 027D
        gbc.setState(0x14d3, 0xec14, 0xdb70, 0x385a, 0x82df, 0xd, 0x0, 0x1);
        gbc.writeMem(0x14d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xec14);
        EXPECT(gbc.pc(), 0x14d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 027E
        gbc.setState(0x1dce, 0x90a2, 0xe250, 0x1bf4, 0x8cc7, 0x3c3e, 0x1, 0x0);
        gbc.writeMem(0x1dce, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x90a2);
        EXPECT(gbc.pc(), 0x1dd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 027F
        gbc.setState(0xb079, 0xdb18, 0x6bf0, 0x8c14, 0x8913, 0x24f5, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdb18);
        EXPECT(gbc.pc(), 0xb07b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb079), 0xcb);
        EXPECT(gbc.readMem(0xb07a), 0x67);
        // CB 67 0280
        gbc.setState(0xaeb2, 0x4b2e, 0xeb60, 0x2bea, 0x8bf2, 0x409, 0x1, 0x0);
        gbc.writeMem(0xaeb2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4b2e);
        EXPECT(gbc.pc(), 0xaeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb2), 0xcb);
        EXPECT(gbc.readMem(0xaeb3), 0x67);
        // CB 67 0281
        gbc.setState(0xb5d, 0xe8ea, 0xde90, 0xe8bb, 0xb65, 0x9959, 0x0, 0x0);
        gbc.writeMem(0xb5d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe8ea);
        EXPECT(gbc.pc(), 0xb5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0282
        gbc.setState(0xe4fb, 0x89ce, 0xaba0, 0x1374, 0x8066, 0x2db9, 0x1, 0x1);
        gbc.writeMem(0xe4fb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x89ce);
        EXPECT(gbc.pc(), 0xe4fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4fb), 0xcb);
        EXPECT(gbc.readMem(0xe4fc), 0x67);
        // CB 67 0283
        gbc.setState(0xe446, 0xb2b8, 0x7340, 0xc4b4, 0xa782, 0xdf03, 0x1, 0x0);
        gbc.writeMem(0xe446, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb2b8);
        EXPECT(gbc.pc(), 0xe448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe446), 0xcb);
        EXPECT(gbc.readMem(0xe447), 0x67);
        // CB 67 0284
        gbc.setState(0xb406, 0xc95f, 0x9d50, 0xfcdf, 0x1826, 0xef68, 0x1, 0x0);
        gbc.writeMem(0xb406, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc95f);
        EXPECT(gbc.pc(), 0xb408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb406), 0xcb);
        EXPECT(gbc.readMem(0xb407), 0x67);
        // CB 67 0285
        gbc.setState(0xa302, 0xd5a5, 0xaa70, 0x3c38, 0xbb49, 0xd5be, 0x0, 0x0);
        gbc.writeMem(0xa302, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd5a5);
        EXPECT(gbc.pc(), 0xa304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa302), 0xcb);
        EXPECT(gbc.readMem(0xa303), 0x67);
        // CB 67 0287
        gbc.setState(0x6b23, 0x3750, 0x8590, 0x5916, 0x194c, 0xa98b, 0x0, 0x1);
        gbc.writeMem(0x6b23, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3750);
        EXPECT(gbc.pc(), 0x6b25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0288
        gbc.setState(0x94de, 0x20b4, 0xb3e0, 0xd6c4, 0x3dde, 0xe25, 0x0, 0x1);
        gbc.writeMem(0x94de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x20b4);
        EXPECT(gbc.pc(), 0x94e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94de), 0xcb);
        EXPECT(gbc.readMem(0x94df), 0x67);
        // CB 67 0289
        gbc.setState(0xdc9, 0xee33, 0x12a0, 0x7b4d, 0xa064, 0xf169, 0x1, 0x0);
        gbc.writeMem(0xdc9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xee33);
        EXPECT(gbc.pc(), 0xdcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 028A
        gbc.setState(0x4cd5, 0x3396, 0xe870, 0x4434, 0x59b7, 0x3d62, 0x1, 0x1);
        gbc.writeMem(0x4cd5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3396);
        EXPECT(gbc.pc(), 0x4cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 028B
        gbc.setState(0xc507, 0x10f7, 0x970, 0x9e97, 0x6699, 0x362f, 0x0, 0x1);
        gbc.writeMem(0xc507, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x10f7);
        EXPECT(gbc.pc(), 0xc509);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc507), 0xcb);
        EXPECT(gbc.readMem(0xc508), 0x67);
        // CB 67 028C
        gbc.setState(0x30e5, 0xeec1, 0xdb10, 0x1d29, 0x92da, 0x51e6, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeec1);
        EXPECT(gbc.pc(), 0x30e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 028E
        gbc.setState(0xa81, 0xa1d5, 0x9270, 0x5248, 0x9c1f, 0x37f6, 0x1, 0x0);
        gbc.writeMem(0xa81, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa1d5);
        EXPECT(gbc.pc(), 0xa83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 028F
        gbc.setState(0x26c9, 0xa3b4, 0xbf40, 0x4420, 0xeaf4, 0x29a1, 0x0, 0x1);
        gbc.writeMem(0x26c9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa3b4);
        EXPECT(gbc.pc(), 0x26cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0290
        gbc.setState(0x7c9f, 0x3e88, 0xe6e0, 0xa336, 0x5d32, 0xa17b, 0x0, 0x0);
        gbc.writeMem(0x7c9f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3e88);
        EXPECT(gbc.pc(), 0x7ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0291
        gbc.setState(0xcee6, 0xce8, 0x74f0, 0x17a4, 0x2972, 0x5b46, 0x0, 0x1);
        gbc.writeMem(0xcee6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xce8);
        EXPECT(gbc.pc(), 0xcee8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee6), 0xcb);
        EXPECT(gbc.readMem(0xcee7), 0x67);
        // CB 67 0292
        gbc.setState(0x444c, 0x70d9, 0xcb0, 0xb1ea, 0x8ab9, 0x2aa7, 0x0, 0x0);
        gbc.writeMem(0x444c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x70d9);
        EXPECT(gbc.pc(), 0x444e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0293
        gbc.setState(0x3477, 0x44bc, 0xea50, 0x9a9, 0xb491, 0xaa37, 0x0, 0x0);
        gbc.writeMem(0x3477, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x44bc);
        EXPECT(gbc.pc(), 0x3479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0294
        gbc.setState(0x2fd8, 0x5cb1, 0x4140, 0xdcf1, 0x1b05, 0xcc70, 0x0, 0x0);
        gbc.writeMem(0x2fd8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5cb1);
        EXPECT(gbc.pc(), 0x2fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0295
        gbc.setState(0xcd56, 0xb44b, 0x74c0, 0x8792, 0xd740, 0x1d0f, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xb44b);
        EXPECT(gbc.pc(), 0xcd58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd56), 0xcb);
        EXPECT(gbc.readMem(0xcd57), 0x67);
        // CB 67 0296
        gbc.setState(0xde78, 0x9814, 0xcc20, 0xb37e, 0x44e2, 0xf48c, 0x1, 0x0);
        gbc.writeMem(0xde78, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9814);
        EXPECT(gbc.pc(), 0xde7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde78), 0xcb);
        EXPECT(gbc.readMem(0xde79), 0x67);
        // CB 67 0297
        gbc.setState(0xb919, 0x303b, 0xecf0, 0x7a4, 0x506, 0x1d36, 0x1, 0x1);
        gbc.writeMem(0xb919, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x303b);
        EXPECT(gbc.pc(), 0xb91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb919), 0xcb);
        EXPECT(gbc.readMem(0xb91a), 0x67);
        // CB 67 0298
        gbc.setState(0x892a, 0x2e5f, 0x7d60, 0x32dc, 0x9494, 0x59f9, 0x0, 0x1);
        gbc.writeMem(0x892a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2e5f);
        EXPECT(gbc.pc(), 0x892c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x892a), 0xcb);
        EXPECT(gbc.readMem(0x892b), 0x67);
        // CB 67 0299
        gbc.setState(0xcaf5, 0xa516, 0xd720, 0xd8a1, 0x6984, 0x87cd, 0x0, 0x1);
        gbc.writeMem(0xcaf5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa516);
        EXPECT(gbc.pc(), 0xcaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcaf5), 0xcb);
        EXPECT(gbc.readMem(0xcaf6), 0x67);
        // CB 67 029A
        gbc.setState(0x1503, 0x5bba, 0xaf30, 0xd77, 0x2f6f, 0x7283, 0x1, 0x1);
        gbc.writeMem(0x1503, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5bba);
        EXPECT(gbc.pc(), 0x1505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 029B
        gbc.setState(0x7f15, 0xec6a, 0x250, 0x91f, 0x9c46, 0xe73a, 0x0, 0x0);
        gbc.writeMem(0x7f15, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xec6a);
        EXPECT(gbc.pc(), 0x7f17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 029C
        gbc.setState(0x83af, 0x61f6, 0x82f0, 0x9370, 0xf72d, 0x4a53, 0x1, 0x1);
        gbc.writeMem(0x83af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x61f6);
        EXPECT(gbc.pc(), 0x83b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83af), 0xcb);
        EXPECT(gbc.readMem(0x83b0), 0x67);
        // CB 67 029D
        gbc.setState(0xbaa, 0x3481, 0xb550, 0xcfc1, 0x49a5, 0x2f06, 0x0, 0x1);
        gbc.writeMem(0xbaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x3481);
        EXPECT(gbc.pc(), 0xbac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 029E
        gbc.setState(0xecfc, 0x4000, 0x45f0, 0x74c, 0x138e, 0xc397, 0x1, 0x0);
        gbc.writeMem(0xecfc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x4000);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecfc), 0xcb);
        EXPECT(gbc.readMem(0xecfd), 0x67);
        // CB 67 029F
        gbc.setState(0xb53c, 0x8fa8, 0x7ce0, 0xc210, 0x9e3d, 0x206a, 0x0, 0x1);
        gbc.writeMem(0xb53c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8fa8);
        EXPECT(gbc.pc(), 0xb53e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53c), 0xcb);
        EXPECT(gbc.readMem(0xb53d), 0x67);
        // CB 67 02A0
        gbc.setState(0x20bb, 0xf99b, 0xa10, 0xe2e3, 0x3cc7, 0xc1e, 0x0, 0x0);
        gbc.writeMem(0x20bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf99b);
        EXPECT(gbc.pc(), 0x20bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02A1
        gbc.setState(0xb3ea, 0xbf35, 0x6bf0, 0x2452, 0x4128, 0xab22, 0x1, 0x1);
        gbc.writeMem(0xb3ea, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbf35);
        EXPECT(gbc.pc(), 0xb3ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ea), 0xcb);
        EXPECT(gbc.readMem(0xb3eb), 0x67);
        // CB 67 02A2
        gbc.setState(0x8230, 0xc762, 0x5b20, 0x7519, 0x3aa0, 0xd5af, 0x0, 0x1);
        gbc.writeMem(0x8230, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc762);
        EXPECT(gbc.pc(), 0x8232);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8230), 0xcb);
        EXPECT(gbc.readMem(0x8231), 0x67);
        // CB 67 02A3
        gbc.setState(0x2b67, 0xf083, 0x58c0, 0x561, 0xb530, 0x932, 0x0, 0x0);
        gbc.writeMem(0x2b67, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xf083);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02A4
        gbc.setState(0x9ac3, 0x1803, 0xd8e0, 0x5212, 0x1a1, 0x7495, 0x1, 0x1);
        gbc.writeMem(0x9ac3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1803);
        EXPECT(gbc.pc(), 0x9ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac3), 0xcb);
        EXPECT(gbc.readMem(0x9ac4), 0x67);
        // CB 67 02A5
        gbc.setState(0x954e, 0xd4bb, 0xcd40, 0xd0a9, 0xb6ec, 0xb19d, 0x1, 0x0);
        gbc.writeMem(0x954e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd4bb);
        EXPECT(gbc.pc(), 0x9550);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x954e), 0xcb);
        EXPECT(gbc.readMem(0x954f), 0x67);
        // CB 67 02A6
        gbc.setState(0xeced, 0x8475, 0xc2e0, 0xcb34, 0x50dd, 0xf52f, 0x1, 0x0);
        gbc.writeMem(0xeced, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8475);
        EXPECT(gbc.pc(), 0xecef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeced), 0xcb);
        EXPECT(gbc.readMem(0xecee), 0x67);
        // CB 67 02A7
        gbc.setState(0x391b, 0x3f77, 0x3a00, 0x580a, 0x217e, 0xbd16, 0x1, 0x1);
        gbc.writeMem(0x391b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3f77);
        EXPECT(gbc.pc(), 0x391d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02A8
        gbc.setState(0x493, 0xcabc, 0x1510, 0x4913, 0xaa59, 0x7148, 0x1, 0x1);
        gbc.writeMem(0x493, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xcabc);
        EXPECT(gbc.pc(), 0x495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02A9
        gbc.setState(0xb3cb, 0x4058, 0x9aa0, 0x5372, 0x37a2, 0x62e8, 0x1, 0x0);
        gbc.writeMem(0xb3cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4058);
        EXPECT(gbc.pc(), 0xb3cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cb), 0xcb);
        EXPECT(gbc.readMem(0xb3cc), 0x67);
        // CB 67 02AA
        gbc.setState(0xad95, 0x6f15, 0x6d90, 0x35b1, 0x84b8, 0x7def, 0x0, 0x1);
        gbc.writeMem(0xad95, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6f15);
        EXPECT(gbc.pc(), 0xad97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad95), 0xcb);
        EXPECT(gbc.readMem(0xad96), 0x67);
        // CB 67 02AB
        gbc.setState(0xefbf, 0x44bf, 0x2e90, 0xf9d, 0x8a9, 0x49e0, 0x0, 0x1);
        gbc.writeMem(0xefbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x44bf);
        EXPECT(gbc.pc(), 0xefc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefbf), 0xcb);
        EXPECT(gbc.readMem(0xefc0), 0x67);
        // CB 67 02AC
        gbc.setState(0x3d8, 0x5f0f, 0xfd50, 0x592d, 0xa614, 0xcaed, 0x1, 0x0);
        gbc.writeMem(0x3d8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5f0f);
        EXPECT(gbc.pc(), 0x3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02AD
        gbc.setState(0x321d, 0x8b4c, 0xb020, 0xb027, 0x6ba7, 0xb99, 0x1, 0x0);
        gbc.writeMem(0x321d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8b4c);
        EXPECT(gbc.pc(), 0x321f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02AE
        gbc.setState(0x96c3, 0xcaeb, 0x8f30, 0x9206, 0x1492, 0x691d, 0x0, 0x0);
        gbc.writeMem(0x96c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xcaeb);
        EXPECT(gbc.pc(), 0x96c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c3), 0xcb);
        EXPECT(gbc.readMem(0x96c4), 0x67);
        // CB 67 02AF
        gbc.setState(0x53b3, 0xe9ae, 0xbf00, 0x51a5, 0x65ef, 0xedce, 0x0, 0x1);
        gbc.writeMem(0x53b3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe9ae);
        EXPECT(gbc.pc(), 0x53b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02B0
        gbc.setState(0x8078, 0x7965, 0x9750, 0x697c, 0x2cb8, 0x921d, 0x0, 0x0);
        gbc.writeMem(0x8078, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0x807a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8078), 0xcb);
        EXPECT(gbc.readMem(0x8079), 0x67);
        // CB 67 02B1
        gbc.setState(0x94cc, 0xbe07, 0x73b0, 0x925f, 0xbf6a, 0xd593, 0x1, 0x1);
        gbc.writeMem(0x94cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbe07);
        EXPECT(gbc.pc(), 0x94ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cc), 0xcb);
        EXPECT(gbc.readMem(0x94cd), 0x67);
        // CB 67 02B2
        gbc.setState(0x7e1b, 0x94de, 0x8f50, 0xac1b, 0x5fe9, 0xf12, 0x0, 0x0);
        gbc.writeMem(0x7e1b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x94de);
        EXPECT(gbc.pc(), 0x7e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02B3
        gbc.setState(0xd4f4, 0xcabd, 0x1540, 0xa8d3, 0xa33b, 0xa664, 0x1, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcabd);
        EXPECT(gbc.pc(), 0xd4f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4f4), 0xcb);
        EXPECT(gbc.readMem(0xd4f5), 0x67);
        // CB 67 02B4
        gbc.setState(0xbf95, 0x9f1e, 0x8000, 0x5023, 0xf8eb, 0x79a0, 0x0, 0x1);
        gbc.writeMem(0xbf95, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9f1e);
        EXPECT(gbc.pc(), 0xbf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf95), 0xcb);
        EXPECT(gbc.readMem(0xbf96), 0x67);
        // CB 67 02B5
        gbc.setState(0x26e1, 0x3956, 0x5970, 0x20f9, 0x7072, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x26e1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x3956);
        EXPECT(gbc.pc(), 0x26e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02B6
        gbc.setState(0xdf0, 0xfe28, 0x1040, 0xb8e2, 0xa5cc, 0x9eea, 0x1, 0x1);
        gbc.writeMem(0xdf0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xfe28);
        EXPECT(gbc.pc(), 0xdf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02B7
        gbc.setState(0x8288, 0xa5c3, 0xfe80, 0x5c65, 0x1626, 0x7655, 0x0, 0x1);
        gbc.writeMem(0x8288, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa5c3);
        EXPECT(gbc.pc(), 0x828a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8288), 0xcb);
        EXPECT(gbc.readMem(0x8289), 0x67);
        // CB 67 02B8
        gbc.setState(0xe176, 0xfd0d, 0x79a0, 0xa461, 0x3da7, 0x62df, 0x0, 0x1);
        gbc.writeMem(0xe176, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfd0d);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe176), 0xcb);
        EXPECT(gbc.readMem(0xe177), 0x67);
        // CB 67 02B9
        gbc.setState(0x8c43, 0xe32, 0x120, 0xdfc3, 0xd15b, 0xca84, 0x1, 0x1);
        gbc.writeMem(0x8c43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe32);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c43), 0xcb);
        EXPECT(gbc.readMem(0x8c44), 0x67);
        // CB 67 02BA
        gbc.setState(0x339d, 0x9094, 0x6de0, 0x3930, 0xb9f3, 0xf8e6, 0x0, 0x1);
        gbc.writeMem(0x339d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9094);
        EXPECT(gbc.pc(), 0x339f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02BB
        gbc.setState(0xa615, 0x196, 0xcda0, 0x593e, 0xd1dc, 0x6a3f, 0x0, 0x1);
        gbc.writeMem(0xa615, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x196);
        EXPECT(gbc.pc(), 0xa617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa615), 0xcb);
        EXPECT(gbc.readMem(0xa616), 0x67);
        // CB 67 02BC
        gbc.setState(0x5d39, 0x31f9, 0x4820, 0x11d3, 0x3536, 0xc012, 0x1, 0x1);
        gbc.writeMem(0x5d39, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x31f9);
        EXPECT(gbc.pc(), 0x5d3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02BD
        gbc.setState(0x92dd, 0xf913, 0x5110, 0x4b4f, 0x3568, 0x6f91, 0x1, 0x0);
        gbc.writeMem(0x92dd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf913);
        EXPECT(gbc.pc(), 0x92df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92dd), 0xcb);
        EXPECT(gbc.readMem(0x92de), 0x67);
        // CB 67 02BE
        gbc.setState(0x9e8a, 0x1a5d, 0x70b0, 0xbb0d, 0xd2cf, 0xad3, 0x0, 0x0);
        gbc.writeMem(0x9e8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x1a5d);
        EXPECT(gbc.pc(), 0x9e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e8a), 0xcb);
        EXPECT(gbc.readMem(0x9e8b), 0x67);
        // CB 67 02BF
        gbc.setState(0xd96c, 0x84a2, 0x97e0, 0x2610, 0xd79b, 0x44b7, 0x0, 0x0);
        gbc.writeMem(0xd96c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x84a2);
        EXPECT(gbc.pc(), 0xd96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd96c), 0xcb);
        EXPECT(gbc.readMem(0xd96d), 0x67);
        // CB 67 02C0
        gbc.setState(0x9504, 0x1247, 0xfef0, 0x8ec5, 0xf1d5, 0x4ac, 0x1, 0x0);
        gbc.writeMem(0x9504, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1247);
        EXPECT(gbc.pc(), 0x9506);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9504), 0xcb);
        EXPECT(gbc.readMem(0x9505), 0x67);
        // CB 67 02C1
        gbc.setState(0xd9c3, 0x326f, 0xd820, 0xd69a, 0x1102, 0x5124, 0x1, 0x1);
        gbc.writeMem(0xd9c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x326f);
        EXPECT(gbc.pc(), 0xd9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c3), 0xcb);
        EXPECT(gbc.readMem(0xd9c4), 0x67);
        // CB 67 02C2
        gbc.setState(0x1ebe, 0x2b9c, 0x2a90, 0x7860, 0x909e, 0xaf1d, 0x0, 0x0);
        gbc.writeMem(0x1ebe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2b9c);
        EXPECT(gbc.pc(), 0x1ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02C3
        gbc.setState(0x838, 0x2253, 0x9d10, 0xde01, 0x3661, 0xfb91, 0x0, 0x1);
        gbc.writeMem(0x838, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2253);
        EXPECT(gbc.pc(), 0x83a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02C4
        gbc.setState(0x6e7a, 0xa5de, 0x1ca0, 0xa147, 0xdc35, 0x19db, 0x1, 0x0);
        gbc.writeMem(0x6e7a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa5de);
        EXPECT(gbc.pc(), 0x6e7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02C5
        gbc.setState(0xac07, 0xa6d2, 0xfb00, 0x461b, 0x667c, 0xc968, 0x1, 0x1);
        gbc.writeMem(0xac07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa6d2);
        EXPECT(gbc.pc(), 0xac09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac07), 0xcb);
        EXPECT(gbc.readMem(0xac08), 0x67);
        // CB 67 02C6
        gbc.setState(0xb375, 0xc84d, 0xc970, 0xebc1, 0x1d9d, 0xb502, 0x1, 0x1);
        gbc.writeMem(0xb375, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc84d);
        EXPECT(gbc.pc(), 0xb377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb375), 0xcb);
        EXPECT(gbc.readMem(0xb376), 0x67);
        // CB 67 02C7
        gbc.setState(0xab00, 0x6fb2, 0x9430, 0x93e3, 0xf39c, 0x52d, 0x1, 0x1);
        gbc.writeMem(0xab00, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6fb2);
        EXPECT(gbc.pc(), 0xab02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab00), 0xcb);
        EXPECT(gbc.readMem(0xab01), 0x67);
        // CB 67 02C9
        gbc.setState(0x22a5, 0x4a0b, 0x1680, 0x2883, 0xa5cc, 0xc10d, 0x0, 0x0);
        gbc.writeMem(0x22a5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4a0b);
        EXPECT(gbc.pc(), 0x22a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02CA
        gbc.setState(0x4772, 0x6c03, 0x98a0, 0x8bc4, 0x2d49, 0x888b, 0x0, 0x0);
        gbc.writeMem(0x4772, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6c03);
        EXPECT(gbc.pc(), 0x4774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02CC
        gbc.setState(0x2154, 0x353e, 0x7f00, 0xb45b, 0x2838, 0x1845, 0x0, 0x1);
        gbc.writeMem(0x2154, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x353e);
        EXPECT(gbc.pc(), 0x2156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02CD
        gbc.setState(0x5da7, 0x5553, 0xc530, 0x4f5e, 0x2a1a, 0x5c8e, 0x0, 0x0);
        gbc.writeMem(0x5da7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5553);
        EXPECT(gbc.pc(), 0x5da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02CE
        gbc.setState(0x2edf, 0xdc94, 0x2fa0, 0x9d27, 0x676c, 0x6ebd, 0x1, 0x0);
        gbc.writeMem(0x2edf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xdc94);
        EXPECT(gbc.pc(), 0x2ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02CF
        gbc.setState(0xb305, 0x748, 0xbc30, 0x1ddc, 0xe60f, 0xb171, 0x1, 0x1);
        gbc.writeMem(0xb305, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x748);
        EXPECT(gbc.pc(), 0xb307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb305), 0xcb);
        EXPECT(gbc.readMem(0xb306), 0x67);
        // CB 67 02D0
        gbc.setState(0x5c6, 0x82d, 0x33a0, 0x76c4, 0xbae7, 0x504c, 0x1, 0x0);
        gbc.writeMem(0x5c6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x82d);
        EXPECT(gbc.pc(), 0x5c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02D1
        gbc.setState(0x801a, 0x79e5, 0xb600, 0xf0dc, 0xb79, 0x46dc, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x79e5);
        EXPECT(gbc.pc(), 0x801c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801a), 0xcb);
        EXPECT(gbc.readMem(0x801b), 0x67);
        // CB 67 02D2
        gbc.setState(0x6c5a, 0xb34d, 0xe110, 0x80b3, 0xef3f, 0xbb5f, 0x1, 0x0);
        gbc.writeMem(0x6c5a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb34d);
        EXPECT(gbc.pc(), 0x6c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02D3
        gbc.setState(0x53cf, 0xe9d8, 0x33e0, 0x6d7d, 0x7b5a, 0xd6cf, 0x1, 0x0);
        gbc.writeMem(0x53cf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe9d8);
        EXPECT(gbc.pc(), 0x53d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02D5
        gbc.setState(0xaeef, 0x3cd3, 0x1d60, 0x11de, 0x4eaf, 0xdfe4, 0x0, 0x1);
        gbc.writeMem(0xaeef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3cd3);
        EXPECT(gbc.pc(), 0xaef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeef), 0xcb);
        EXPECT(gbc.readMem(0xaef0), 0x67);
        // CB 67 02D6
        gbc.setState(0x6367, 0xc746, 0x2340, 0xa99f, 0x3176, 0x915e, 0x0, 0x0);
        gbc.writeMem(0x6367, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc746);
        EXPECT(gbc.pc(), 0x6369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02D8
        gbc.setState(0x153e, 0x4ff3, 0xbda0, 0x5c1, 0xe4f1, 0x6b37, 0x0, 0x0);
        gbc.writeMem(0x153e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4ff3);
        EXPECT(gbc.pc(), 0x1540);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02D9
        gbc.setState(0xdbc4, 0x8e66, 0x6a20, 0x92fc, 0x2587, 0xbc3c, 0x1, 0x0);
        gbc.writeMem(0xdbc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8e66);
        EXPECT(gbc.pc(), 0xdbc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc4), 0xcb);
        EXPECT(gbc.readMem(0xdbc5), 0x67);
        // CB 67 02DA
        gbc.setState(0xbbc7, 0x6f98, 0xd60, 0xc3d, 0x2095, 0xf7d6, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6f98);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc7), 0xcb);
        EXPECT(gbc.readMem(0xbbc8), 0x67);
        // CB 67 02DB
        gbc.setState(0xe958, 0x1c51, 0x9330, 0x2700, 0xa8d7, 0xcc8c, 0x1, 0x1);
        gbc.writeMem(0xe958, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1c51);
        EXPECT(gbc.pc(), 0xe95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe958), 0xcb);
        EXPECT(gbc.readMem(0xe959), 0x67);
        // CB 67 02DD
        gbc.setState(0xda1d, 0xd883, 0x6250, 0x6da7, 0x4de7, 0x8830, 0x1, 0x0);
        gbc.writeMem(0xda1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xd883);
        EXPECT(gbc.pc(), 0xda1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda1d), 0xcb);
        EXPECT(gbc.readMem(0xda1e), 0x67);
        // CB 67 02DE
        gbc.setState(0x37d2, 0xcd6, 0xa510, 0xec81, 0xb73f, 0xa4dc, 0x0, 0x1);
        gbc.writeMem(0x37d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xcd6);
        EXPECT(gbc.pc(), 0x37d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02DF
        gbc.setState(0x4db5, 0x71, 0x3d70, 0xd7f5, 0xc582, 0x3fcb, 0x1, 0x1);
        gbc.writeMem(0x4db5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x71);
        EXPECT(gbc.pc(), 0x4db7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02E0
        gbc.setState(0x49bb, 0xa26d, 0xe6a0, 0x504d, 0x6f24, 0x90b9, 0x1, 0x0);
        gbc.writeMem(0x49bb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa26d);
        EXPECT(gbc.pc(), 0x49bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02E1
        gbc.setState(0x765b, 0xef80, 0xca20, 0xfc37, 0x8c48, 0x9fd4, 0x0, 0x0);
        gbc.writeMem(0x765b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xef80);
        EXPECT(gbc.pc(), 0x765d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02E2
        gbc.setState(0x5259, 0xf00a, 0x9b60, 0xf060, 0x43f9, 0x33b1, 0x1, 0x1);
        gbc.writeMem(0x5259, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf00a);
        EXPECT(gbc.pc(), 0x525b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02E3
        gbc.setState(0x1f99, 0xfcdc, 0x1b50, 0x1f60, 0xee70, 0x41cc, 0x0, 0x1);
        gbc.writeMem(0x1f99, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfcdc);
        EXPECT(gbc.pc(), 0x1f9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02E4
        gbc.setState(0xd357, 0xc61e, 0xb1a0, 0x7db2, 0x1a23, 0x3816, 0x1, 0x1);
        gbc.writeMem(0xd357, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc61e);
        EXPECT(gbc.pc(), 0xd359);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd357), 0xcb);
        EXPECT(gbc.readMem(0xd358), 0x67);
        // CB 67 02E5
        gbc.setState(0x6db, 0x8a21, 0x7670, 0xcace, 0xee57, 0xbbf3, 0x0, 0x0);
        gbc.writeMem(0x6db, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8a21);
        EXPECT(gbc.pc(), 0x6dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02E6
        gbc.setState(0x7551, 0x293b, 0x6820, 0xebb8, 0x6bd9, 0x1c10, 0x1, 0x0);
        gbc.writeMem(0x7551, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x293b);
        EXPECT(gbc.pc(), 0x7553);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02E7
        gbc.setState(0x4e6c, 0xec43, 0xedf0, 0x694, 0xe780, 0x50f7, 0x1, 0x0);
        gbc.writeMem(0x4e6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xec43);
        EXPECT(gbc.pc(), 0x4e6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02E8
        gbc.setState(0xb309, 0xc2ae, 0x76d0, 0x8449, 0x1735, 0x135d, 0x0, 0x0);
        gbc.writeMem(0xb309, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc2ae);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb309), 0xcb);
        EXPECT(gbc.readMem(0xb30a), 0x67);
        // CB 67 02E9
        gbc.setState(0x1b25, 0xc6b8, 0xba30, 0x7121, 0x779e, 0x8ee5, 0x0, 0x0);
        gbc.writeMem(0x1b25, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc6b8);
        EXPECT(gbc.pc(), 0x1b27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02EA
        gbc.setState(0xc94a, 0xb408, 0x8fe0, 0x8058, 0xf7c7, 0xa007, 0x1, 0x1);
        gbc.writeMem(0xc94a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb408);
        EXPECT(gbc.pc(), 0xc94c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc94a), 0xcb);
        EXPECT(gbc.readMem(0xc94b), 0x67);
        // CB 67 02EB
        gbc.setState(0x31d3, 0xb662, 0xcdc0, 0x202, 0xbddc, 0xb1d8, 0x0, 0x1);
        gbc.writeMem(0x31d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb662);
        EXPECT(gbc.pc(), 0x31d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02EC
        gbc.setState(0x4f7f, 0x7a00, 0x9d30, 0xeaa5, 0xc807, 0x787c, 0x0, 0x1);
        gbc.writeMem(0x4f7f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x7a00);
        EXPECT(gbc.pc(), 0x4f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02ED
        gbc.setState(0x7bfb, 0xacb3, 0x4730, 0x3681, 0x282, 0x1693, 0x0, 0x1);
        gbc.writeMem(0x7bfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xacb3);
        EXPECT(gbc.pc(), 0x7bfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02EE
        gbc.setState(0xbd5f, 0xaaee, 0xad60, 0x52b3, 0x7909, 0x430a, 0x0, 0x0);
        gbc.writeMem(0xbd5f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaaee);
        EXPECT(gbc.pc(), 0xbd61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd5f), 0xcb);
        EXPECT(gbc.readMem(0xbd60), 0x67);
        // CB 67 02EF
        gbc.setState(0x93af, 0xe0d9, 0x3840, 0x171e, 0x898a, 0xe3a, 0x0, 0x1);
        gbc.writeMem(0x93af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe0d9);
        EXPECT(gbc.pc(), 0x93b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93af), 0xcb);
        EXPECT(gbc.readMem(0x93b0), 0x67);
        // CB 67 02F0
        gbc.setState(0x46d3, 0x1e32, 0x5ce0, 0xe862, 0x9ec5, 0x5e55, 0x0, 0x0);
        gbc.writeMem(0x46d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x1e32);
        EXPECT(gbc.pc(), 0x46d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02F1
        gbc.setState(0x40de, 0x622b, 0xfcf0, 0xa1bf, 0xe642, 0x6e7, 0x0, 0x0);
        gbc.writeMem(0x40de, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x622b);
        EXPECT(gbc.pc(), 0x40e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02F2
        gbc.setState(0xac3e, 0xff49, 0x7c30, 0xc0a5, 0x90a6, 0xcf38, 0x1, 0x0);
        gbc.writeMem(0xac3e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0xac40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac3e), 0xcb);
        EXPECT(gbc.readMem(0xac3f), 0x67);
        // CB 67 02F4
        gbc.setState(0x7f16, 0xecd5, 0xfe20, 0xd273, 0xdd0c, 0x964b, 0x1, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xecd5);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02F5
        gbc.setState(0x45cb, 0xabb4, 0xe530, 0x9486, 0xf5b8, 0x81c1, 0x0, 0x0);
        gbc.writeMem(0x45cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xabb4);
        EXPECT(gbc.pc(), 0x45cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02F6
        gbc.setState(0x2156, 0x95c3, 0xe280, 0xcb51, 0x509d, 0xc37, 0x0, 0x1);
        gbc.writeMem(0x2156, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x95c3);
        EXPECT(gbc.pc(), 0x2158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02F7
        gbc.setState(0xbf39, 0xd0e5, 0x9610, 0xdaf6, 0xa410, 0xf397, 0x1, 0x0);
        gbc.writeMem(0xbf39, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xd0e5);
        EXPECT(gbc.pc(), 0xbf3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf39), 0xcb);
        EXPECT(gbc.readMem(0xbf3a), 0x67);
        // CB 67 02F8
        gbc.setState(0x9dd7, 0xec26, 0xe730, 0xe9d0, 0x94fb, 0x7748, 0x1, 0x0);
        gbc.writeMem(0x9dd7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xec26);
        EXPECT(gbc.pc(), 0x9dd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd7), 0xcb);
        EXPECT(gbc.readMem(0x9dd8), 0x67);
        // CB 67 02FA
        gbc.setState(0x39f, 0xb8b2, 0xdd20, 0xc41c, 0x1df6, 0x18f4, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xb8b2);
        EXPECT(gbc.pc(), 0x3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02FB
        gbc.setState(0x67fe, 0xdb3, 0x44d0, 0x84f, 0xdf98, 0x2ae4, 0x0, 0x0);
        gbc.writeMem(0x67fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdb3);
        EXPECT(gbc.pc(), 0x6800);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02FC
        gbc.setState(0x319, 0xfef5, 0x3440, 0x73ba, 0x63d8, 0x6f74, 0x1, 0x1);
        gbc.writeMem(0x319, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xfef5);
        EXPECT(gbc.pc(), 0x31b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 02FD
        gbc.setState(0x18c6, 0xbbc7, 0x7f10, 0x5156, 0x975e, 0x5fbc, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbbc7);
        EXPECT(gbc.pc(), 0x18c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02FE
        gbc.setState(0x5f07, 0xf214, 0x6fd0, 0x752f, 0xb791, 0x966c, 0x1, 0x0);
        gbc.writeMem(0x5f07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf214);
        EXPECT(gbc.pc(), 0x5f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 02FF
        gbc.setState(0x9ed7, 0x33ff, 0xec00, 0xfd04, 0x184b, 0xd0d0, 0x1, 0x0);
        gbc.writeMem(0x9ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x33ff);
        EXPECT(gbc.pc(), 0x9ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed7), 0xcb);
        EXPECT(gbc.readMem(0x9ed8), 0x67);
        // CB 67 0300
        gbc.setState(0xdbe8, 0xa2b7, 0x92a0, 0xca25, 0x3ad2, 0xbfb0, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xa2b7);
        EXPECT(gbc.pc(), 0xdbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe8), 0xcb);
        EXPECT(gbc.readMem(0xdbe9), 0x67);
        // CB 67 0301
        gbc.setState(0x6a91, 0x2b08, 0xfd20, 0x1f1d, 0xcbef, 0xd6de, 0x1, 0x0);
        gbc.writeMem(0x6a91, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x2b08);
        EXPECT(gbc.pc(), 0x6a93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0302
        gbc.setState(0x9e44, 0x9040, 0x7b50, 0x524f, 0xd151, 0x4343, 0x0, 0x0);
        gbc.writeMem(0x9e44, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x9040);
        EXPECT(gbc.pc(), 0x9e46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e44), 0xcb);
        EXPECT(gbc.readMem(0x9e45), 0x67);
        // CB 67 0303
        gbc.setState(0xbd3a, 0xc6a7, 0x9cf0, 0x58fe, 0x23ab, 0x5c2c, 0x1, 0x0);
        gbc.writeMem(0xbd3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc6a7);
        EXPECT(gbc.pc(), 0xbd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd3a), 0xcb);
        EXPECT(gbc.readMem(0xbd3b), 0x67);
        // CB 67 0304
        gbc.setState(0x1462, 0xc30, 0x9480, 0x2091, 0x7435, 0x33ad, 0x0, 0x0);
        gbc.writeMem(0x1462, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc30);
        EXPECT(gbc.pc(), 0x1464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0305
        gbc.setState(0xc069, 0xeb1a, 0xc1b0, 0xf6ac, 0x3df5, 0xd8e3, 0x1, 0x0);
        gbc.writeMem(0xc069, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeb1a);
        EXPECT(gbc.pc(), 0xc06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc069), 0xcb);
        EXPECT(gbc.readMem(0xc06a), 0x67);
        // CB 67 0306
        gbc.setState(0x7fc4, 0x9706, 0x8de0, 0xbb98, 0x35e6, 0x7ff6, 0x0, 0x0);
        gbc.writeMem(0x7fc4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0x7fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0307
        gbc.setState(0xcac7, 0xa44, 0xe880, 0x28d7, 0xa79b, 0x79d6, 0x0, 0x1);
        gbc.writeMem(0xcac7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa44);
        EXPECT(gbc.pc(), 0xcac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcac7), 0xcb);
        EXPECT(gbc.readMem(0xcac8), 0x67);
        // CB 67 0308
        gbc.setState(0x1ee4, 0xb762, 0x51e0, 0xafca, 0x8380, 0x97ec, 0x1, 0x1);
        gbc.writeMem(0x1ee4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb762);
        EXPECT(gbc.pc(), 0x1ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0309
        gbc.setState(0xe7, 0x3d07, 0xfdc0, 0x3dfd, 0xc4b8, 0xd6ee, 0x1, 0x0);
        gbc.writeMem(0xe7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3d07);
        EXPECT(gbc.pc(), 0xe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 030A
        gbc.setState(0xf04, 0xb0a9, 0xadd0, 0x26a8, 0xae98, 0xc8d9, 0x0, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb0a9);
        EXPECT(gbc.pc(), 0xf06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 030B
        gbc.setState(0x7bd8, 0x172, 0x7d40, 0x90e6, 0x256, 0xe9af, 0x0, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x172);
        EXPECT(gbc.pc(), 0x7bda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 030C
        gbc.setState(0x207a, 0x1ae0, 0xfd50, 0x7517, 0x4b78, 0x339a, 0x0, 0x1);
        gbc.writeMem(0x207a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x1ae0);
        EXPECT(gbc.pc(), 0x207c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 030D
        gbc.setState(0x7f07, 0x86c8, 0x7a00, 0xe5b6, 0x74c7, 0x8764, 0x1, 0x1);
        gbc.writeMem(0x7f07, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x86c8);
        EXPECT(gbc.pc(), 0x7f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 030E
        gbc.setState(0x6c92, 0x1fb1, 0x5db0, 0x6e65, 0x13, 0x8ef2, 0x0, 0x1);
        gbc.writeMem(0x6c92, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1fb1);
        EXPECT(gbc.pc(), 0x6c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 030F
        gbc.setState(0xeb0a, 0x525d, 0x5240, 0xe769, 0x7df6, 0x96f7, 0x1, 0x1);
        gbc.writeMem(0xeb0a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x525d);
        EXPECT(gbc.pc(), 0xeb0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb0a), 0xcb);
        EXPECT(gbc.readMem(0xeb0b), 0x67);
        // CB 67 0310
        gbc.setState(0x58c0, 0x73e, 0x2a10, 0xabc4, 0xdb4e, 0xc40e, 0x0, 0x0);
        gbc.writeMem(0x58c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x73e);
        EXPECT(gbc.pc(), 0x58c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0311
        gbc.setState(0xa47a, 0xb16, 0xb710, 0x57ea, 0xa75f, 0xf30, 0x1, 0x0);
        gbc.writeMem(0xa47a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb16);
        EXPECT(gbc.pc(), 0xa47c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47a), 0xcb);
        EXPECT(gbc.readMem(0xa47b), 0x67);
        // CB 67 0312
        gbc.setState(0xb547, 0x926e, 0x1070, 0x8db7, 0x5b6e, 0xaae5, 0x0, 0x1);
        gbc.writeMem(0xb547, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x926e);
        EXPECT(gbc.pc(), 0xb549);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb547), 0xcb);
        EXPECT(gbc.readMem(0xb548), 0x67);
        // CB 67 0313
        gbc.setState(0xb6c, 0xeee4, 0xcd0, 0xb395, 0x90b5, 0xc734, 0x1, 0x1);
        gbc.writeMem(0xb6c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xeee4);
        EXPECT(gbc.pc(), 0xb6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0314
        gbc.setState(0xaa9b, 0x2abd, 0x5630, 0x7507, 0xcd6b, 0xe91b, 0x0, 0x0);
        gbc.writeMem(0xaa9b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x2abd);
        EXPECT(gbc.pc(), 0xaa9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9b), 0xcb);
        EXPECT(gbc.readMem(0xaa9c), 0x67);
        // CB 67 0315
        gbc.setState(0x4ba7, 0x59f4, 0xe680, 0xac1c, 0x4ec9, 0x8d9b, 0x0, 0x0);
        gbc.writeMem(0x4ba7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x59f4);
        EXPECT(gbc.pc(), 0x4ba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0316
        gbc.setState(0xb4ef, 0x1c90, 0x3f0, 0x94f2, 0xaca4, 0xd536, 0x0, 0x1);
        gbc.writeMem(0xb4ef, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x1c90);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0xcb);
        EXPECT(gbc.readMem(0xb4f0), 0x67);
        // CB 67 0317
        gbc.setState(0x93bd, 0xfb62, 0xa270, 0x3aa0, 0x2aa5, 0x617d, 0x1, 0x0);
        gbc.writeMem(0x93bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfb62);
        EXPECT(gbc.pc(), 0x93bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93bd), 0xcb);
        EXPECT(gbc.readMem(0x93be), 0x67);
        // CB 67 0318
        gbc.setState(0x6bf2, 0x1bf7, 0x3590, 0xdf3a, 0x7493, 0x6b86, 0x0, 0x0);
        gbc.writeMem(0x6bf2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1bf7);
        EXPECT(gbc.pc(), 0x6bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 031A
        gbc.setState(0xe0f3, 0x4fee, 0xfe20, 0xa3a4, 0x4faf, 0xfb8e, 0x0, 0x1);
        gbc.writeMem(0xe0f3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4fee);
        EXPECT(gbc.pc(), 0xe0f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f3), 0xcb);
        EXPECT(gbc.readMem(0xe0f4), 0x67);
        // CB 67 031B
        gbc.setState(0x3c80, 0xc403, 0x4490, 0xd482, 0x890b, 0x870c, 0x0, 0x0);
        gbc.writeMem(0x3c80, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc403);
        EXPECT(gbc.pc(), 0x3c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 031E
        gbc.setState(0xd981, 0x6a42, 0x8030, 0xa90f, 0x5a86, 0x1e8b, 0x0, 0x0);
        gbc.writeMem(0xd981, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6a42);
        EXPECT(gbc.pc(), 0xd983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd981), 0xcb);
        EXPECT(gbc.readMem(0xd982), 0x67);
        // CB 67 031F
        gbc.setState(0xa100, 0x82b2, 0x1f90, 0x2641, 0xf09f, 0xddac, 0x0, 0x0);
        gbc.writeMem(0xa100, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x82b2);
        EXPECT(gbc.pc(), 0xa102);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa100), 0xcb);
        EXPECT(gbc.readMem(0xa101), 0x67);
        // CB 67 0321
        gbc.setState(0x61c8, 0x9330, 0x4360, 0xfc93, 0xed60, 0x2e5f, 0x0, 0x0);
        gbc.writeMem(0x61c8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9330);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0322
        gbc.setState(0x3432, 0xc901, 0x4110, 0xb9dd, 0xd1c2, 0xa924, 0x0, 0x1);
        gbc.writeMem(0x3432, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc901);
        EXPECT(gbc.pc(), 0x3434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0323
        gbc.setState(0x9a85, 0x9751, 0xb880, 0x8cb1, 0x382a, 0x2935, 0x1, 0x1);
        gbc.writeMem(0x9a85, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9751);
        EXPECT(gbc.pc(), 0x9a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a85), 0xcb);
        EXPECT(gbc.readMem(0x9a86), 0x67);
        // CB 67 0324
        gbc.setState(0x2363, 0xd199, 0x5690, 0xa0e7, 0x5469, 0x96ea, 0x1, 0x1);
        gbc.writeMem(0x2363, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd199);
        EXPECT(gbc.pc(), 0x2365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0325
        gbc.setState(0x598c, 0x74ad, 0x20a0, 0x1b57, 0x5e7c, 0x9265, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x74ad);
        EXPECT(gbc.pc(), 0x598e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0326
        gbc.setState(0x94e0, 0xcc86, 0x3fc0, 0xd652, 0x17a4, 0xe998, 0x1, 0x0);
        gbc.writeMem(0x94e0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcc86);
        EXPECT(gbc.pc(), 0x94e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94e0), 0xcb);
        EXPECT(gbc.readMem(0x94e1), 0x67);
        // CB 67 0327
        gbc.setState(0x2487, 0x55c6, 0xcdf0, 0x5b11, 0xc3f9, 0xc9f3, 0x0, 0x0);
        gbc.writeMem(0x2487, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x55c6);
        EXPECT(gbc.pc(), 0x2489);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0328
        gbc.setState(0xaecc, 0xc4be, 0xcfc0, 0x8633, 0xda52, 0x3355, 0x0, 0x0);
        gbc.writeMem(0xaecc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc4be);
        EXPECT(gbc.pc(), 0xaece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaecc), 0xcb);
        EXPECT(gbc.readMem(0xaecd), 0x67);
        // CB 67 0329
        gbc.setState(0xcc0d, 0x5bda, 0x44d0, 0xf97c, 0x1c1a, 0x5bb1, 0x0, 0x1);
        gbc.writeMem(0xcc0d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5bda);
        EXPECT(gbc.pc(), 0xcc0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc0d), 0xcb);
        EXPECT(gbc.readMem(0xcc0e), 0x67);
        // CB 67 032A
        gbc.setState(0xbc76, 0x71aa, 0xd800, 0x2444, 0x2492, 0x3b02, 0x0, 0x0);
        gbc.writeMem(0xbc76, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x71aa);
        EXPECT(gbc.pc(), 0xbc78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc76), 0xcb);
        EXPECT(gbc.readMem(0xbc77), 0x67);
        // CB 67 032B
        gbc.setState(0x750a, 0xda1, 0x4c80, 0x4ce0, 0x8ff5, 0xd538, 0x0, 0x0);
        gbc.writeMem(0x750a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0x750c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 032C
        gbc.setState(0xcfcc, 0x563f, 0x9f80, 0x45fa, 0x5574, 0xdec8, 0x0, 0x1);
        gbc.writeMem(0xcfcc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x563f);
        EXPECT(gbc.pc(), 0xcfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfcc), 0xcb);
        EXPECT(gbc.readMem(0xcfcd), 0x67);
        // CB 67 032D
        gbc.setState(0x4b83, 0xb03b, 0x57c0, 0xc732, 0x9508, 0x2b18, 0x1, 0x0);
        gbc.writeMem(0x4b83, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xb03b);
        EXPECT(gbc.pc(), 0x4b85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 032E
        gbc.setState(0xa3c0, 0xc391, 0xa4f0, 0x696, 0xe1ac, 0xcb06, 0x0, 0x0);
        gbc.writeMem(0xa3c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc391);
        EXPECT(gbc.pc(), 0xa3c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c0), 0xcb);
        EXPECT(gbc.readMem(0xa3c1), 0x67);
        // CB 67 032F
        gbc.setState(0x8290, 0x3613, 0xbb0, 0xde3e, 0xd7dd, 0x328f, 0x0, 0x0);
        gbc.writeMem(0x8290, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3613);
        EXPECT(gbc.pc(), 0x8292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8290), 0xcb);
        EXPECT(gbc.readMem(0x8291), 0x67);
        // CB 67 0330
        gbc.setState(0xcbac, 0xf1b7, 0x1de0, 0x761c, 0x34fe, 0xc30a, 0x1, 0x1);
        gbc.writeMem(0xcbac, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xf1b7);
        EXPECT(gbc.pc(), 0xcbae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbac), 0xcb);
        EXPECT(gbc.readMem(0xcbad), 0x67);
        // CB 67 0331
        gbc.setState(0x4365, 0x45ed, 0x7140, 0xc429, 0xe746, 0x3f72, 0x0, 0x0);
        gbc.writeMem(0x4365, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x45ed);
        EXPECT(gbc.pc(), 0x4367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0332
        gbc.setState(0x778, 0xefe, 0xdb0, 0x7f88, 0x6630, 0xf474, 0x1, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xefe);
        EXPECT(gbc.pc(), 0x77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0333
        gbc.setState(0x1ed7, 0x5fae, 0xca90, 0xa207, 0x207f, 0xc752, 0x0, 0x0);
        gbc.writeMem(0x1ed7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5fae);
        EXPECT(gbc.pc(), 0x1ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0334
        gbc.setState(0xe45d, 0x7f5d, 0x49f0, 0x3b0e, 0xdde0, 0x57f6, 0x0, 0x0);
        gbc.writeMem(0xe45d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7f5d);
        EXPECT(gbc.pc(), 0xe45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe45d), 0xcb);
        EXPECT(gbc.readMem(0xe45e), 0x67);
        // CB 67 0335
        gbc.setState(0x4706, 0xebbf, 0xcb90, 0x8013, 0xd1dd, 0x515f, 0x0, 0x1);
        gbc.writeMem(0x4706, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xebbf);
        EXPECT(gbc.pc(), 0x4708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0336
        gbc.setState(0x690c, 0x3fb5, 0x590, 0x58e, 0xed96, 0xca58, 0x0, 0x1);
        gbc.writeMem(0x690c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3fb5);
        EXPECT(gbc.pc(), 0x690e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0337
        gbc.setState(0xbc09, 0xd4dd, 0x6500, 0x1339, 0x64e4, 0x2769, 0x1, 0x1);
        gbc.writeMem(0xbc09, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd4dd);
        EXPECT(gbc.pc(), 0xbc0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc09), 0xcb);
        EXPECT(gbc.readMem(0xbc0a), 0x67);
        // CB 67 0338
        gbc.setState(0xa4fe, 0xda49, 0x8510, 0xdab6, 0x2fec, 0x51dd, 0x1, 0x1);
        gbc.writeMem(0xa4fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xda49);
        EXPECT(gbc.pc(), 0xa500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4fe), 0xcb);
        EXPECT(gbc.readMem(0xa4ff), 0x67);
        // CB 67 0339
        gbc.setState(0x17a, 0xfc5c, 0x7a00, 0xe8e2, 0x94e0, 0xbb1f, 0x0, 0x0);
        gbc.writeMem(0x17a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfc5c);
        EXPECT(gbc.pc(), 0x17c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 033A
        gbc.setState(0x197a, 0x152e, 0xb6b0, 0x1b4d, 0xe3f7, 0x658f, 0x0, 0x1);
        gbc.writeMem(0x197a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x152e);
        EXPECT(gbc.pc(), 0x197c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 033B
        gbc.setState(0x23a8, 0x4321, 0xb590, 0xdf51, 0x3a68, 0xc7b5, 0x1, 0x0);
        gbc.writeMem(0x23a8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4321);
        EXPECT(gbc.pc(), 0x23aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 033C
        gbc.setState(0x9cd0, 0x3ff2, 0xf740, 0xb460, 0x88ba, 0x3ab1, 0x1, 0x0);
        gbc.writeMem(0x9cd0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3ff2);
        EXPECT(gbc.pc(), 0x9cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cd0), 0xcb);
        EXPECT(gbc.readMem(0x9cd1), 0x67);
        // CB 67 033D
        gbc.setState(0x146c, 0x3edc, 0xd3e0, 0xf804, 0x3e2f, 0x3aae, 0x0, 0x1);
        gbc.writeMem(0x146c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3edc);
        EXPECT(gbc.pc(), 0x146e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 033E
        gbc.setState(0xeea8, 0x337f, 0x3450, 0xe4fa, 0x7c35, 0x1960, 0x1, 0x0);
        gbc.writeMem(0xeea8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x337f);
        EXPECT(gbc.pc(), 0xeeaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea8), 0xcb);
        EXPECT(gbc.readMem(0xeea9), 0x67);
        // CB 67 033F
        gbc.setState(0xa8cc, 0x3558, 0xd550, 0xa3c4, 0x3e28, 0x7316, 0x1, 0x0);
        gbc.writeMem(0xa8cc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x3558);
        EXPECT(gbc.pc(), 0xa8ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8cc), 0xcb);
        EXPECT(gbc.readMem(0xa8cd), 0x67);
        // CB 67 0340
        gbc.setState(0x1414, 0xd87f, 0xa2c0, 0xf077, 0x5676, 0x8237, 0x0, 0x1);
        gbc.writeMem(0x1414, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd87f);
        EXPECT(gbc.pc(), 0x1416);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0341
        gbc.setState(0x7da7, 0x23fd, 0xe1f0, 0xe342, 0x596b, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0x7da7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x23fd);
        EXPECT(gbc.pc(), 0x7da9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0342
        gbc.setState(0xc823, 0x84c4, 0xab50, 0x24, 0x2da5, 0xbfea, 0x1, 0x1);
        gbc.writeMem(0xc823, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x84c4);
        EXPECT(gbc.pc(), 0xc825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc823), 0xcb);
        EXPECT(gbc.readMem(0xc824), 0x67);
        // CB 67 0343
        gbc.setState(0xb8c7, 0xba27, 0x5590, 0xdfe0, 0xd13d, 0x352, 0x0, 0x0);
        gbc.writeMem(0xb8c7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xba27);
        EXPECT(gbc.pc(), 0xb8c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c7), 0xcb);
        EXPECT(gbc.readMem(0xb8c8), 0x67);
        // CB 67 0344
        gbc.setState(0x7ba5, 0xb81d, 0xaa60, 0x63f2, 0x8bde, 0x2285, 0x1, 0x0);
        gbc.writeMem(0x7ba5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb81d);
        EXPECT(gbc.pc(), 0x7ba7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0345
        gbc.setState(0xba76, 0x45e7, 0xa390, 0xbb8c, 0xee38, 0x665f, 0x0, 0x0);
        gbc.writeMem(0xba76, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x45e7);
        EXPECT(gbc.pc(), 0xba78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba76), 0xcb);
        EXPECT(gbc.readMem(0xba77), 0x67);
        // CB 67 0346
        gbc.setState(0x4400, 0xc206, 0xe740, 0x3045, 0xcdaf, 0x1222, 0x1, 0x1);
        gbc.writeMem(0x4400, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc206);
        EXPECT(gbc.pc(), 0x4402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0347
        gbc.setState(0xb9b5, 0xa60c, 0xf730, 0x91be, 0x6f2b, 0xa22a, 0x0, 0x1);
        gbc.writeMem(0xb9b5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa60c);
        EXPECT(gbc.pc(), 0xb9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9b5), 0xcb);
        EXPECT(gbc.readMem(0xb9b6), 0x67);
        // CB 67 0348
        gbc.setState(0xa47d, 0x8aa1, 0xac30, 0xa502, 0x9c9, 0x15c2, 0x0, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0xa47f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47d), 0xcb);
        EXPECT(gbc.readMem(0xa47e), 0x67);
        // CB 67 0349
        gbc.setState(0x7619, 0x2d9a, 0xb430, 0x7f09, 0xe275, 0xd6a2, 0x0, 0x1);
        gbc.writeMem(0x7619, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x2d9a);
        EXPECT(gbc.pc(), 0x761b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 034A
        gbc.setState(0xe1a2, 0x44cd, 0x7780, 0x511b, 0xbcc0, 0xa056, 0x1, 0x0);
        gbc.writeMem(0xe1a2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x44cd);
        EXPECT(gbc.pc(), 0xe1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a2), 0xcb);
        EXPECT(gbc.readMem(0xe1a3), 0x67);
        // CB 67 034B
        gbc.setState(0x1903, 0xf4b6, 0xff20, 0xd7b3, 0x93db, 0xc5e5, 0x1, 0x0);
        gbc.writeMem(0x1903, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf4b6);
        EXPECT(gbc.pc(), 0x1905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 034C
        gbc.setState(0x485f, 0xf7ad, 0x7120, 0x6bfe, 0xed89, 0x913b, 0x1, 0x1);
        gbc.writeMem(0x485f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf7ad);
        EXPECT(gbc.pc(), 0x4861);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 034D
        gbc.setState(0x5e04, 0xe40, 0x7930, 0xe3ab, 0xd985, 0xd7de, 0x1, 0x0);
        gbc.writeMem(0x5e04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe40);
        EXPECT(gbc.pc(), 0x5e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 034E
        gbc.setState(0x6d, 0xb74f, 0xf700, 0xc9c0, 0xb2df, 0x31d2, 0x0, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb74f);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 034F
        gbc.setState(0x75cb, 0x4c34, 0xfa40, 0x758a, 0x2e7, 0xbac4, 0x0, 0x1);
        gbc.writeMem(0x75cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4c34);
        EXPECT(gbc.pc(), 0x75cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0350
        gbc.setState(0xeee9, 0x62d8, 0x2990, 0x66c7, 0x6788, 0xeaea, 0x1, 0x1);
        gbc.writeMem(0xeee9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x62d8);
        EXPECT(gbc.pc(), 0xeeeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee9), 0xcb);
        EXPECT(gbc.readMem(0xeeea), 0x67);
        // CB 67 0351
        gbc.setState(0x8e87, 0xd8c1, 0x46b0, 0x475e, 0x9afd, 0xc595, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd8c1);
        EXPECT(gbc.pc(), 0x8e89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e87), 0xcb);
        EXPECT(gbc.readMem(0x8e88), 0x67);
        // CB 67 0352
        gbc.setState(0x96bd, 0x615a, 0xdcf0, 0xf790, 0x5289, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x96bd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x615a);
        EXPECT(gbc.pc(), 0x96bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96bd), 0xcb);
        EXPECT(gbc.readMem(0x96be), 0x67);
        // CB 67 0353
        gbc.setState(0x8d2c, 0x5263, 0x150, 0xdb30, 0xd308, 0x72a3, 0x1, 0x1);
        gbc.writeMem(0x8d2c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x5263);
        EXPECT(gbc.pc(), 0x8d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d2c), 0xcb);
        EXPECT(gbc.readMem(0x8d2d), 0x67);
        // CB 67 0354
        gbc.setState(0x4391, 0x2605, 0xeb30, 0x897a, 0x5242, 0x6e5, 0x1, 0x0);
        gbc.writeMem(0x4391, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2605);
        EXPECT(gbc.pc(), 0x4393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0355
        gbc.setState(0x1fde, 0x25de, 0x5da0, 0x6055, 0x5052, 0x192e, 0x1, 0x0);
        gbc.writeMem(0x1fde, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x25de);
        EXPECT(gbc.pc(), 0x1fe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0356
        gbc.setState(0x633, 0x7334, 0xb2f0, 0x5112, 0x6119, 0xcfcf, 0x1, 0x0);
        gbc.writeMem(0x633, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7334);
        EXPECT(gbc.pc(), 0x635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0357
        gbc.setState(0x3c65, 0xd781, 0x6670, 0x35e5, 0x75ad, 0xcf6b, 0x0, 0x1);
        gbc.writeMem(0x3c65, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd781);
        EXPECT(gbc.pc(), 0x3c67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0358
        gbc.setState(0xaad1, 0x5538, 0xeda0, 0x7400, 0xead0, 0x68c2, 0x0, 0x1);
        gbc.writeMem(0xaad1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5538);
        EXPECT(gbc.pc(), 0xaad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad1), 0xcb);
        EXPECT(gbc.readMem(0xaad2), 0x67);
        // CB 67 0359
        gbc.setState(0x37cb, 0xa59, 0xfd70, 0x5251, 0x3941, 0xc839, 0x0, 0x1);
        gbc.writeMem(0x37cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa59);
        EXPECT(gbc.pc(), 0x37cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 035A
        gbc.setState(0x5f1d, 0x6dfa, 0xc3b0, 0x1c6a, 0xbe4, 0x970, 0x0, 0x1);
        gbc.writeMem(0x5f1d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x6dfa);
        EXPECT(gbc.pc(), 0x5f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 035B
        gbc.setState(0x3e37, 0xb44a, 0x9ae0, 0xd33f, 0x2205, 0xa753, 0x1, 0x1);
        gbc.writeMem(0x3e37, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb44a);
        EXPECT(gbc.pc(), 0x3e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 035C
        gbc.setState(0x897c, 0xe22e, 0xfaa0, 0x6f98, 0x85d1, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0x897c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe22e);
        EXPECT(gbc.pc(), 0x897e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x897c), 0xcb);
        EXPECT(gbc.readMem(0x897d), 0x67);
        // CB 67 035D
        gbc.setState(0x357d, 0x2dfc, 0x9320, 0xebe1, 0x398c, 0x37e6, 0x1, 0x1);
        gbc.writeMem(0x357d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2dfc);
        EXPECT(gbc.pc(), 0x357f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 035E
        gbc.setState(0xccb, 0x8448, 0x7a90, 0x4847, 0x8a44, 0x256b, 0x1, 0x0);
        gbc.writeMem(0xccb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8448);
        EXPECT(gbc.pc(), 0xccd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 035F
        gbc.setState(0x4185, 0xcf46, 0x990, 0xcd18, 0xbdd7, 0xd80, 0x0, 0x0);
        gbc.writeMem(0x4185, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcf46);
        EXPECT(gbc.pc(), 0x4187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0360
        gbc.setState(0x68bc, 0xae02, 0x87f0, 0xcbd7, 0x3139, 0x62a, 0x0, 0x0);
        gbc.writeMem(0x68bc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xae02);
        EXPECT(gbc.pc(), 0x68be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0361
        gbc.setState(0x401e, 0x2515, 0x35f0, 0x3b13, 0x2939, 0x4c20, 0x1, 0x0);
        gbc.writeMem(0x401e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x2515);
        EXPECT(gbc.pc(), 0x4020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0362
        gbc.setState(0xed7f, 0xcb54, 0xee90, 0x9d64, 0xe4e5, 0x5397, 0x0, 0x1);
        gbc.writeMem(0xed7f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcb54);
        EXPECT(gbc.pc(), 0xed81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed7f), 0xcb);
        EXPECT(gbc.readMem(0xed80), 0x67);
        // CB 67 0363
        gbc.setState(0x772d, 0xc7cc, 0x34a0, 0xf56, 0x359f, 0x2623, 0x0, 0x0);
        gbc.writeMem(0x772d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xc7cc);
        EXPECT(gbc.pc(), 0x772f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0364
        gbc.setState(0xe0e9, 0xfb93, 0x2980, 0xb279, 0x797, 0x61f3, 0x1, 0x1);
        gbc.writeMem(0xe0e9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfb93);
        EXPECT(gbc.pc(), 0xe0eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e9), 0xcb);
        EXPECT(gbc.readMem(0xe0ea), 0x67);
        // CB 67 0365
        gbc.setState(0xd403, 0xf535, 0xd750, 0x2082, 0xfde5, 0x19fe, 0x0, 0x1);
        gbc.writeMem(0xd403, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf535);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0x67);
        // CB 67 0366
        gbc.setState(0xdde4, 0x196d, 0x15f0, 0x6c80, 0xc158, 0x3fde, 0x0, 0x0);
        gbc.writeMem(0xdde4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0xdde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdde4), 0xcb);
        EXPECT(gbc.readMem(0xdde5), 0x67);
        // CB 67 0367
        gbc.setState(0xc15c, 0xfdfb, 0x3510, 0xe3b8, 0x7d3, 0x8504, 0x1, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xfdfb);
        EXPECT(gbc.pc(), 0xc15e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc15c), 0xcb);
        EXPECT(gbc.readMem(0xc15d), 0x67);
        // CB 67 0368
        gbc.setState(0xd7dd, 0x668e, 0x4eb0, 0xfa0e, 0x1f74, 0x8880, 0x1, 0x1);
        gbc.writeMem(0xd7dd, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x668e);
        EXPECT(gbc.pc(), 0xd7df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7dd), 0xcb);
        EXPECT(gbc.readMem(0xd7de), 0x67);
        // CB 67 0369
        gbc.setState(0xd9aa, 0x3d73, 0x63c0, 0x3647, 0x3d56, 0x934a, 0x1, 0x0);
        gbc.writeMem(0xd9aa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3d73);
        EXPECT(gbc.pc(), 0xd9ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9aa), 0xcb);
        EXPECT(gbc.readMem(0xd9ab), 0x67);
        // CB 67 036A
        gbc.setState(0x1de0, 0x71aa, 0x8690, 0x6212, 0x6372, 0x906, 0x1, 0x0);
        gbc.writeMem(0x1de0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x71aa);
        EXPECT(gbc.pc(), 0x1de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 036B
        gbc.setState(0xaee3, 0x99d8, 0xb140, 0xe185, 0xcd42, 0x6a68, 0x0, 0x1);
        gbc.writeMem(0xaee3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x99d8);
        EXPECT(gbc.pc(), 0xaee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaee3), 0xcb);
        EXPECT(gbc.readMem(0xaee4), 0x67);
        // CB 67 036C
        gbc.setState(0xc173, 0x3f4, 0x4b0, 0xb2c, 0x6656, 0x4c60, 0x1, 0x1);
        gbc.writeMem(0xc173, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3f4);
        EXPECT(gbc.pc(), 0xc175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc173), 0xcb);
        EXPECT(gbc.readMem(0xc174), 0x67);
        // CB 67 036E
        gbc.setState(0x1d98, 0xe94f, 0x78c0, 0x6071, 0xffbd, 0x32d1, 0x0, 0x0);
        gbc.writeMem(0x1d98, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe94f);
        EXPECT(gbc.pc(), 0x1d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 036F
        gbc.setState(0xccb7, 0xaa5e, 0x380, 0xd745, 0x28b3, 0x7eed, 0x1, 0x0);
        gbc.writeMem(0xccb7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xaa5e);
        EXPECT(gbc.pc(), 0xccb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccb7), 0xcb);
        EXPECT(gbc.readMem(0xccb8), 0x67);
        // CB 67 0370
        gbc.setState(0xa929, 0x267f, 0x9820, 0x8dad, 0x1e4c, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xa929, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x267f);
        EXPECT(gbc.pc(), 0xa92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa929), 0xcb);
        EXPECT(gbc.readMem(0xa92a), 0x67);
        // CB 67 0371
        gbc.setState(0x8ee3, 0x81a7, 0xa260, 0xdb7d, 0xfdcc, 0x5e63, 0x1, 0x1);
        gbc.writeMem(0x8ee3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x81a7);
        EXPECT(gbc.pc(), 0x8ee5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee3), 0xcb);
        EXPECT(gbc.readMem(0x8ee4), 0x67);
        // CB 67 0372
        gbc.setState(0xc83f, 0x67f8, 0x3a60, 0x294b, 0x1931, 0xf99d, 0x0, 0x1);
        gbc.writeMem(0xc83f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x67f8);
        EXPECT(gbc.pc(), 0xc841);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc83f), 0xcb);
        EXPECT(gbc.readMem(0xc840), 0x67);
        // CB 67 0373
        gbc.setState(0xde9e, 0xe034, 0x1b20, 0xb60, 0x5784, 0x2b24, 0x1, 0x0);
        gbc.writeMem(0xde9e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe034);
        EXPECT(gbc.pc(), 0xdea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9e), 0xcb);
        EXPECT(gbc.readMem(0xde9f), 0x67);
        // CB 67 0374
        gbc.setState(0x7b3b, 0xfaa1, 0x3a40, 0xbc7a, 0xd7ef, 0x94b8, 0x1, 0x0);
        gbc.writeMem(0x7b3b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfaa1);
        EXPECT(gbc.pc(), 0x7b3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0375
        gbc.setState(0x70e8, 0x7d30, 0x11e0, 0x84cd, 0x7974, 0xc2af, 0x0, 0x1);
        gbc.writeMem(0x70e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7d30);
        EXPECT(gbc.pc(), 0x70ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0376
        gbc.setState(0xa47d, 0xea3a, 0x9bf0, 0x4b9, 0xe606, 0x3b3d, 0x1, 0x0);
        gbc.writeMem(0xa47d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xea3a);
        EXPECT(gbc.pc(), 0xa47f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47d), 0xcb);
        EXPECT(gbc.readMem(0xa47e), 0x67);
        // CB 67 0377
        gbc.setState(0x76c3, 0x4293, 0xf6a0, 0x7184, 0xcbec, 0x2672, 0x1, 0x1);
        gbc.writeMem(0x76c3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4293);
        EXPECT(gbc.pc(), 0x76c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0378
        gbc.setState(0x90ad, 0x46c4, 0x2f80, 0xb48f, 0xd575, 0x700, 0x1, 0x0);
        gbc.writeMem(0x90ad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x46c4);
        EXPECT(gbc.pc(), 0x90af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90ad), 0xcb);
        EXPECT(gbc.readMem(0x90ae), 0x67);
        // CB 67 0379
        gbc.setState(0xb6e6, 0x9261, 0x7510, 0xfdc7, 0xab25, 0x3ba5, 0x1, 0x1);
        gbc.writeMem(0xb6e6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9261);
        EXPECT(gbc.pc(), 0xb6e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e6), 0xcb);
        EXPECT(gbc.readMem(0xb6e7), 0x67);
        // CB 67 037A
        gbc.setState(0x33d6, 0xaec6, 0xcf60, 0x5a07, 0x346e, 0x8a70, 0x0, 0x0);
        gbc.writeMem(0x33d6, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xaec6);
        EXPECT(gbc.pc(), 0x33d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 037B
        gbc.setState(0x43c1, 0xbb8d, 0xbb80, 0x9c4, 0x37c, 0xef05, 0x0, 0x0);
        gbc.writeMem(0x43c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb8d);
        EXPECT(gbc.pc(), 0x43c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 037C
        gbc.setState(0x58a4, 0x9128, 0x6c80, 0x19b3, 0x4eba, 0x4c2c, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x9128);
        EXPECT(gbc.pc(), 0x58a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 037D
        gbc.setState(0x6356, 0x7a2c, 0x4b40, 0x8d59, 0x3b8, 0x372f, 0x0, 0x1);
        gbc.writeMem(0x6356, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7a2c);
        EXPECT(gbc.pc(), 0x6358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 037E
        gbc.setState(0x7738, 0xaceb, 0x3f70, 0x1473, 0xa77d, 0x9beb, 0x0, 0x0);
        gbc.writeMem(0x7738, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xaceb);
        EXPECT(gbc.pc(), 0x773a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 037F
        gbc.setState(0x7f97, 0x27c9, 0x520, 0x6afd, 0x4288, 0xfa8a, 0x0, 0x1);
        gbc.writeMem(0x7f97, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x27c9);
        EXPECT(gbc.pc(), 0x7f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0380
        gbc.setState(0xc0c2, 0xa710, 0x52f0, 0x191b, 0xa3ab, 0xb1d5, 0x1, 0x0);
        gbc.writeMem(0xc0c2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xa710);
        EXPECT(gbc.pc(), 0xc0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c2), 0xcb);
        EXPECT(gbc.readMem(0xc0c3), 0x67);
        // CB 67 0381
        gbc.setState(0x889, 0xdd66, 0x32c0, 0x7ca5, 0x1aa3, 0x9ef4, 0x1, 0x0);
        gbc.writeMem(0x889, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdd66);
        EXPECT(gbc.pc(), 0x88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0382
        gbc.setState(0x7d5b, 0x6a5e, 0xcad0, 0x5a38, 0xc914, 0xc54c, 0x1, 0x0);
        gbc.writeMem(0x7d5b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x6a5e);
        EXPECT(gbc.pc(), 0x7d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0383
        gbc.setState(0xc628, 0x18fe, 0xe820, 0x1d70, 0x21bc, 0x9f9e, 0x1, 0x1);
        gbc.writeMem(0xc628, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x18fe);
        EXPECT(gbc.pc(), 0xc62a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc628), 0xcb);
        EXPECT(gbc.readMem(0xc629), 0x67);
        // CB 67 0384
        gbc.setState(0xe34e, 0x484, 0xb220, 0x326, 0x39a, 0x659a, 0x0, 0x1);
        gbc.writeMem(0xe34e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x484);
        EXPECT(gbc.pc(), 0xe350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe34e), 0xcb);
        EXPECT(gbc.readMem(0xe34f), 0x67);
        // CB 67 0385
        gbc.setState(0x86f0, 0x15f0, 0x58e0, 0x17e3, 0x271d, 0x9bb6, 0x0, 0x0);
        gbc.writeMem(0x86f0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x15f0);
        EXPECT(gbc.pc(), 0x86f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86f0), 0xcb);
        EXPECT(gbc.readMem(0x86f1), 0x67);
        // CB 67 0386
        gbc.setState(0xd755, 0xe6bb, 0x3a20, 0x362a, 0x6eaf, 0x9060, 0x0, 0x0);
        gbc.writeMem(0xd755, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe6bb);
        EXPECT(gbc.pc(), 0xd757);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd755), 0xcb);
        EXPECT(gbc.readMem(0xd756), 0x67);
        // CB 67 0387
        gbc.setState(0xddfb, 0xf56f, 0x4340, 0x7d3e, 0xb0b1, 0x34c4, 0x0, 0x1);
        gbc.writeMem(0xddfb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xf56f);
        EXPECT(gbc.pc(), 0xddfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddfb), 0xcb);
        EXPECT(gbc.readMem(0xddfc), 0x67);
        // CB 67 0388
        gbc.setState(0x88e8, 0x9bbb, 0x67d0, 0x77b6, 0x5082, 0xb348, 0x0, 0x0);
        gbc.writeMem(0x88e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9bbb);
        EXPECT(gbc.pc(), 0x88ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88e8), 0xcb);
        EXPECT(gbc.readMem(0x88e9), 0x67);
        // CB 67 0389
        gbc.setState(0xc31d, 0x97c1, 0x5f90, 0x5406, 0x89ef, 0x6280, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x97c1);
        EXPECT(gbc.pc(), 0xc31f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc31d), 0xcb);
        EXPECT(gbc.readMem(0xc31e), 0x67);
        // CB 67 038A
        gbc.setState(0xc2ba, 0x5821, 0x5890, 0x1ac9, 0x6e2f, 0xe3e1, 0x0, 0x1);
        gbc.writeMem(0xc2ba, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5821);
        EXPECT(gbc.pc(), 0xc2bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ba), 0xcb);
        EXPECT(gbc.readMem(0xc2bb), 0x67);
        // CB 67 038B
        gbc.setState(0xcbb1, 0xfcc7, 0x2340, 0xbdf8, 0x463e, 0x6128, 0x0, 0x1);
        gbc.writeMem(0xcbb1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xfcc7);
        EXPECT(gbc.pc(), 0xcbb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb1), 0xcb);
        EXPECT(gbc.readMem(0xcbb2), 0x67);
        // CB 67 038C
        gbc.setState(0x34a, 0xdf72, 0x92a0, 0x70a1, 0xcdc7, 0x7d5d, 0x1, 0x0);
        gbc.writeMem(0x34a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xdf72);
        EXPECT(gbc.pc(), 0x34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 038D
        gbc.setState(0x205f, 0x7598, 0x6f0, 0x133, 0x1f54, 0x84fb, 0x1, 0x1);
        gbc.writeMem(0x205f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7598);
        EXPECT(gbc.pc(), 0x2061);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 038E
        gbc.setState(0x602a, 0x38dd, 0x3f70, 0x9863, 0xc5b9, 0x241e, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x38dd);
        EXPECT(gbc.pc(), 0x602c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 038F
        gbc.setState(0x9e34, 0x8d26, 0x4eb0, 0x6403, 0x2b26, 0x3088, 0x0, 0x1);
        gbc.writeMem(0x9e34, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x8d26);
        EXPECT(gbc.pc(), 0x9e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e34), 0xcb);
        EXPECT(gbc.readMem(0x9e35), 0x67);
        // CB 67 0390
        gbc.setState(0x45b1, 0xe200, 0xa5e0, 0xc71d, 0x76a3, 0xeead, 0x1, 0x0);
        gbc.writeMem(0x45b1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe200);
        EXPECT(gbc.pc(), 0x45b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 0391
        gbc.setState(0x6f50, 0x8007, 0x38d0, 0x8803, 0xeff8, 0x2e8f, 0x1, 0x0);
        gbc.writeMem(0x6f50, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8007);
        EXPECT(gbc.pc(), 0x6f52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0392
        gbc.setState(0xd03c, 0x4950, 0xce40, 0xe68f, 0xeeb7, 0xad61, 0x0, 0x1);
        gbc.writeMem(0xd03c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4950);
        EXPECT(gbc.pc(), 0xd03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd03c), 0xcb);
        EXPECT(gbc.readMem(0xd03d), 0x67);
        // CB 67 0393
        gbc.setState(0x35b4, 0xf8b1, 0x8e50, 0xa94e, 0x1d51, 0xcb0b, 0x1, 0x1);
        gbc.writeMem(0x35b4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf8b1);
        EXPECT(gbc.pc(), 0x35b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0394
        gbc.setState(0x2ad3, 0x625f, 0x51b0, 0x8798, 0x87b5, 0x539, 0x0, 0x0);
        gbc.writeMem(0x2ad3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x625f);
        EXPECT(gbc.pc(), 0x2ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0395
        gbc.setState(0x17cb, 0x7a7c, 0x1950, 0x87f9, 0x4e08, 0x5fca, 0x0, 0x0);
        gbc.writeMem(0x17cb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7a7c);
        EXPECT(gbc.pc(), 0x17cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 0396
        gbc.setState(0x9fc5, 0x7b5a, 0x3660, 0x9120, 0xcb18, 0x7500, 0x0, 0x1);
        gbc.writeMem(0x9fc5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7b5a);
        EXPECT(gbc.pc(), 0x9fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc5), 0xcb);
        EXPECT(gbc.readMem(0x9fc6), 0x67);
        // CB 67 0397
        gbc.setState(0xe07a, 0xadb6, 0xd4d0, 0x9b5e, 0x8666, 0x2de5, 0x0, 0x0);
        gbc.writeMem(0xe07a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xadb6);
        EXPECT(gbc.pc(), 0xe07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe07a), 0xcb);
        EXPECT(gbc.readMem(0xe07b), 0x67);
        // CB 67 0398
        gbc.setState(0xda8d, 0xa35b, 0xf510, 0x6db6, 0xae56, 0x80f6, 0x1, 0x1);
        gbc.writeMem(0xda8d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa35b);
        EXPECT(gbc.pc(), 0xda8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda8d), 0xcb);
        EXPECT(gbc.readMem(0xda8e), 0x67);
        // CB 67 0399
        gbc.setState(0x5a0f, 0x4a7b, 0x1880, 0xc899, 0xf511, 0x5eb7, 0x0, 0x1);
        gbc.writeMem(0x5a0f, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x4a7b);
        EXPECT(gbc.pc(), 0x5a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 039A
        gbc.setState(0x6e73, 0x1926, 0x4550, 0x7e97, 0x2dda, 0x4b99, 0x0, 0x1);
        gbc.writeMem(0x6e73, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1926);
        EXPECT(gbc.pc(), 0x6e75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 039B
        gbc.setState(0x20e8, 0xcaa5, 0xd060, 0x1710, 0xae91, 0x8bd2, 0x0, 0x0);
        gbc.writeMem(0x20e8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xcaa5);
        EXPECT(gbc.pc(), 0x20ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 039C
        gbc.setState(0x4d3a, 0xf41a, 0x1a30, 0x30b3, 0x8936, 0xdead, 0x0, 0x1);
        gbc.writeMem(0x4d3a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xf41a);
        EXPECT(gbc.pc(), 0x4d3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 039D
        gbc.setState(0x86af, 0x409c, 0xe200, 0xf218, 0x444e, 0x7195, 0x1, 0x1);
        gbc.writeMem(0x86af, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x409c);
        EXPECT(gbc.pc(), 0x86b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86af), 0xcb);
        EXPECT(gbc.readMem(0x86b0), 0x67);
        // CB 67 039E
        gbc.setState(0xc732, 0x28e3, 0xdce0, 0x65fb, 0x7242, 0xf93d, 0x0, 0x1);
        gbc.writeMem(0xc732, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x28e3);
        EXPECT(gbc.pc(), 0xc734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc732), 0xcb);
        EXPECT(gbc.readMem(0xc733), 0x67);
        // CB 67 039F
        gbc.setState(0xda2c, 0x5d38, 0x9a0, 0x94e7, 0x90b6, 0x949b, 0x0, 0x1);
        gbc.writeMem(0xda2c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5d38);
        EXPECT(gbc.pc(), 0xda2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2c), 0xcb);
        EXPECT(gbc.readMem(0xda2d), 0x67);
        // CB 67 03A0
        gbc.setState(0xca04, 0x1663, 0xa380, 0xcaa, 0x46ff, 0x8910, 0x0, 0x1);
        gbc.writeMem(0xca04, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x1663);
        EXPECT(gbc.pc(), 0xca06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca04), 0xcb);
        EXPECT(gbc.readMem(0xca05), 0x67);
        // CB 67 03A1
        gbc.setState(0x300e, 0xcdec, 0x9ff0, 0x5779, 0x585d, 0x1102, 0x0, 0x1);
        gbc.writeMem(0x300e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xcdec);
        EXPECT(gbc.pc(), 0x3010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03A3
        gbc.setState(0xac2d, 0xe110, 0x6280, 0x8d7b, 0x3be1, 0x1b5e, 0x1, 0x0);
        gbc.writeMem(0xac2d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe110);
        EXPECT(gbc.pc(), 0xac2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac2d), 0xcb);
        EXPECT(gbc.readMem(0xac2e), 0x67);
        // CB 67 03A4
        gbc.setState(0x90fe, 0x67d3, 0x80d0, 0x3fac, 0xae40, 0xbae9, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x67d3);
        EXPECT(gbc.pc(), 0x9100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fe), 0xcb);
        EXPECT(gbc.readMem(0x90ff), 0x67);
        // CB 67 03A5
        gbc.setState(0x1602, 0x8ccd, 0xc1b0, 0x4855, 0x3db4, 0xb5df, 0x0, 0x0);
        gbc.writeMem(0x1602, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8ccd);
        EXPECT(gbc.pc(), 0x1604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03A6
        gbc.setState(0xe9b8, 0xf052, 0x9b20, 0xb0ec, 0xc6a2, 0x3e3d, 0x0, 0x0);
        gbc.writeMem(0xe9b8, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf052);
        EXPECT(gbc.pc(), 0xe9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b8), 0xcb);
        EXPECT(gbc.readMem(0xe9b9), 0x67);
        // CB 67 03A7
        gbc.setState(0xe848, 0xec3f, 0x5a90, 0xe2a, 0xfb17, 0xbaf0, 0x1, 0x1);
        gbc.writeMem(0xe848, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xec3f);
        EXPECT(gbc.pc(), 0xe84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe848), 0xcb);
        EXPECT(gbc.readMem(0xe849), 0x67);
        // CB 67 03A8
        gbc.setState(0x6ab2, 0x268e, 0x8b70, 0x6f13, 0x5014, 0x16bc, 0x0, 0x1);
        gbc.writeMem(0x6ab2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x268e);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03A9
        gbc.setState(0xd272, 0xca00, 0x1f80, 0x350f, 0xb2a5, 0xeb5e, 0x1, 0x0);
        gbc.writeMem(0xd272, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xca00);
        EXPECT(gbc.pc(), 0xd274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd272), 0xcb);
        EXPECT(gbc.readMem(0xd273), 0x67);
        // CB 67 03AB
        gbc.setState(0x90f4, 0x3fe9, 0x6fd0, 0xb4e5, 0x913b, 0xeaac, 0x1, 0x1);
        gbc.writeMem(0x90f4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3fe9);
        EXPECT(gbc.pc(), 0x90f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f4), 0xcb);
        EXPECT(gbc.readMem(0x90f5), 0x67);
        // CB 67 03AC
        gbc.setState(0xdd9c, 0x3e46, 0xb030, 0xbb99, 0xc902, 0x4733, 0x1, 0x1);
        gbc.writeMem(0xdd9c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3e46);
        EXPECT(gbc.pc(), 0xdd9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9c), 0xcb);
        EXPECT(gbc.readMem(0xdd9d), 0x67);
        // CB 67 03AD
        gbc.setState(0xa1fc, 0x4042, 0x5350, 0xfec6, 0x7117, 0xe6dc, 0x0, 0x0);
        gbc.writeMem(0xa1fc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4042);
        EXPECT(gbc.pc(), 0xa1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fc), 0xcb);
        EXPECT(gbc.readMem(0xa1fd), 0x67);
        // CB 67 03AE
        gbc.setState(0xe9b0, 0xb6d8, 0x1bc0, 0x2303, 0x9b97, 0x2c2a, 0x1, 0x0);
        gbc.writeMem(0xe9b0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb6d8);
        EXPECT(gbc.pc(), 0xe9b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b0), 0xcb);
        EXPECT(gbc.readMem(0xe9b1), 0x67);
        // CB 67 03AF
        gbc.setState(0x1cbf, 0x264b, 0xa620, 0x4f1, 0xa0c, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0x1cbf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x264b);
        EXPECT(gbc.pc(), 0x1cc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03B1
        gbc.setState(0x86d2, 0x16da, 0x3660, 0xa0bf, 0xcce4, 0x5bad, 0x0, 0x0);
        gbc.writeMem(0x86d2, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x16da);
        EXPECT(gbc.pc(), 0x86d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d2), 0xcb);
        EXPECT(gbc.readMem(0x86d3), 0x67);
        // CB 67 03B2
        gbc.setState(0x81a4, 0xd7fe, 0x8440, 0x8956, 0x151f, 0x5dbd, 0x0, 0x0);
        gbc.writeMem(0x81a4, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd7fe);
        EXPECT(gbc.pc(), 0x81a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a4), 0xcb);
        EXPECT(gbc.readMem(0x81a5), 0x67);
        // CB 67 03B4
        gbc.setState(0x1eb1, 0x35fa, 0x8050, 0x5600, 0xfe05, 0x5692, 0x1, 0x1);
        gbc.writeMem(0x1eb1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x35fa);
        EXPECT(gbc.pc(), 0x1eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03B5
        gbc.setState(0xdc66, 0xd2a1, 0xa520, 0xc6b4, 0x15c2, 0x79ea, 0x1, 0x1);
        gbc.writeMem(0xdc66, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd2a1);
        EXPECT(gbc.pc(), 0xdc68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc66), 0xcb);
        EXPECT(gbc.readMem(0xdc67), 0x67);
        // CB 67 03B6
        gbc.setState(0xebc, 0xb11a, 0x5d70, 0xdd26, 0x2eb, 0xb9db, 0x1, 0x0);
        gbc.writeMem(0xebc, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb11a);
        EXPECT(gbc.pc(), 0xebe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03B7
        gbc.setState(0x6b64, 0x27e3, 0x8a30, 0xfc5a, 0x8a91, 0x2e44, 0x0, 0x1);
        gbc.writeMem(0x6b64, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x27e3);
        EXPECT(gbc.pc(), 0x6b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03B8
        gbc.setState(0xea43, 0xf488, 0xa940, 0x442b, 0x16c6, 0xc81, 0x0, 0x1);
        gbc.writeMem(0xea43, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xf488);
        EXPECT(gbc.pc(), 0xea45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea43), 0xcb);
        EXPECT(gbc.readMem(0xea44), 0x67);
        // CB 67 03B9
        gbc.setState(0x9b9, 0xd404, 0x2f0, 0x8893, 0x74a0, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0x9b9, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd404);
        EXPECT(gbc.pc(), 0x9bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03BA
        gbc.setState(0x719b, 0x707f, 0x4170, 0x6e43, 0x5894, 0xf807, 0x0, 0x1);
        gbc.writeMem(0x719b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x707f);
        EXPECT(gbc.pc(), 0x719d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03BB
        gbc.setState(0x2726, 0x7c06, 0x5420, 0xfeec, 0x3e47, 0x40c4, 0x0, 0x1);
        gbc.writeMem(0x2726, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x7c06);
        EXPECT(gbc.pc(), 0x2728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03BC
        gbc.setState(0xca8a, 0x9f98, 0xc590, 0xb4b9, 0x6630, 0x28a7, 0x0, 0x0);
        gbc.writeMem(0xca8a, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9f98);
        EXPECT(gbc.pc(), 0xca8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca8a), 0xcb);
        EXPECT(gbc.readMem(0xca8b), 0x67);
        // CB 67 03BD
        gbc.setState(0xbc30, 0xb386, 0x5e40, 0xd27e, 0x2d1b, 0x9b53, 0x0, 0x0);
        gbc.writeMem(0xbc30, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb386);
        EXPECT(gbc.pc(), 0xbc32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc30), 0xcb);
        EXPECT(gbc.readMem(0xbc31), 0x67);
        // CB 67 03BE
        gbc.setState(0xa96c, 0x470b, 0x21d0, 0xc05d, 0x420c, 0x21db, 0x0, 0x1);
        gbc.writeMem(0xa96c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x470b);
        EXPECT(gbc.pc(), 0xa96e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa96c), 0xcb);
        EXPECT(gbc.readMem(0xa96d), 0x67);
        // CB 67 03BF
        gbc.setState(0xe7d3, 0x20c4, 0x6a0, 0x2fef, 0xb5bc, 0x9ca2, 0x1, 0x0);
        gbc.writeMem(0xe7d3, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x20c4);
        EXPECT(gbc.pc(), 0xe7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7d3), 0xcb);
        EXPECT(gbc.readMem(0xe7d4), 0x67);
        // CB 67 03C0
        gbc.setState(0x5877, 0x41d, 0xb1f0, 0xc375, 0x5cbf, 0x171, 0x1, 0x0);
        gbc.writeMem(0x5877, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x41d);
        EXPECT(gbc.pc(), 0x5879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03C2
        gbc.setState(0xb078, 0x268a, 0x6d40, 0x5b86, 0x3336, 0x3307, 0x1, 0x0);
        gbc.writeMem(0xb078, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x268a);
        EXPECT(gbc.pc(), 0xb07a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb078), 0xcb);
        EXPECT(gbc.readMem(0xb079), 0x67);
        // CB 67 03C3
        gbc.setState(0x4baf, 0x1197, 0x29c0, 0x67fe, 0x637f, 0x836e, 0x0, 0x0);
        gbc.writeMem(0x4baf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x1197);
        EXPECT(gbc.pc(), 0x4bb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03C4
        gbc.setState(0x8fad, 0xd967, 0xbd10, 0xab0a, 0x9f09, 0xd257, 0x1, 0x0);
        gbc.writeMem(0x8fad, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd967);
        EXPECT(gbc.pc(), 0x8faf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fad), 0xcb);
        EXPECT(gbc.readMem(0x8fae), 0x67);
        // CB 67 03C5
        gbc.setState(0x40d, 0x7e43, 0x1a80, 0x362f, 0xc9dd, 0xddbb, 0x1, 0x1);
        gbc.writeMem(0x40d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7e43);
        EXPECT(gbc.pc(), 0x40f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03C7
        gbc.setState(0x7bd7, 0x540c, 0x2b70, 0xb074, 0x1f07, 0x9d27, 0x1, 0x1);
        gbc.writeMem(0x7bd7, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x540c);
        EXPECT(gbc.pc(), 0x7bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03C8
        gbc.setState(0xcd63, 0x4a86, 0x6310, 0x510e, 0xd517, 0x53ab, 0x1, 0x0);
        gbc.writeMem(0xcd63, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4a86);
        EXPECT(gbc.pc(), 0xcd65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd63), 0xcb);
        EXPECT(gbc.readMem(0xcd64), 0x67);
        // CB 67 03C9
        gbc.setState(0x4ca5, 0x1f1a, 0x9190, 0xd1d0, 0x9a44, 0x1b13, 0x1, 0x1);
        gbc.writeMem(0x4ca5, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0x4ca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03CA
        gbc.setState(0x5b94, 0x629e, 0x32a0, 0x62b6, 0x842, 0x6f1, 0x0, 0x0);
        gbc.writeMem(0x5b94, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x629e);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03CB
        gbc.setState(0x20f1, 0xf1f8, 0x3420, 0xb7b9, 0x77d6, 0x3054, 0x1, 0x1);
        gbc.writeMem(0x20f1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf1f8);
        EXPECT(gbc.pc(), 0x20f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03CC
        gbc.setState(0x3ddb, 0xcfe0, 0xf430, 0xe820, 0x8451, 0xfa07, 0x1, 0x1);
        gbc.writeMem(0x3ddb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0x3ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03CD
        gbc.setState(0x9a3c, 0xcbe8, 0xf5b0, 0x89df, 0x75b8, 0x2021, 0x1, 0x1);
        gbc.writeMem(0x9a3c, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xcbe8);
        EXPECT(gbc.pc(), 0x9a3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a3c), 0xcb);
        EXPECT(gbc.readMem(0x9a3d), 0x67);
        // CB 67 03CE
        gbc.setState(0x3444, 0x61d7, 0xed40, 0x1540, 0xa22d, 0x8df9, 0x1, 0x0);
        gbc.writeMem(0x3444, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0x3446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03D0
        gbc.setState(0x286d, 0xa729, 0x11a0, 0xbee8, 0x1fe5, 0xc5e7, 0x0, 0x1);
        gbc.writeMem(0x286d, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa729);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03D1
        gbc.setState(0x91c0, 0xe6c7, 0x60d0, 0xb538, 0x74b3, 0xbda5, 0x1, 0x1);
        gbc.writeMem(0x91c0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe6c7);
        EXPECT(gbc.pc(), 0x91c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c0), 0xcb);
        EXPECT(gbc.readMem(0x91c1), 0x67);
        // CB 67 03D2
        gbc.setState(0xa23, 0x2c0, 0x2a40, 0xf77c, 0x124b, 0xa272, 0x1, 0x1);
        gbc.writeMem(0xa23, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x2c0);
        EXPECT(gbc.pc(), 0xa25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03D3
        gbc.setState(0x7788, 0x379f, 0xdd30, 0x90bc, 0xfca9, 0xa021, 0x0, 0x0);
        gbc.writeMem(0x7788, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x379f);
        EXPECT(gbc.pc(), 0x778a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03D4
        gbc.setState(0x5904, 0x6556, 0x7e0, 0x41e, 0xb951, 0x19ea, 0x1, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6556);
        EXPECT(gbc.pc(), 0x5906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03D5
        gbc.setState(0x6486, 0x547, 0xe4f0, 0xa63a, 0x80b8, 0x9538, 0x0, 0x0);
        gbc.writeMem(0x6486, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x547);
        EXPECT(gbc.pc(), 0x6488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03D6
        gbc.setState(0xbccb, 0x9059, 0x8890, 0x5888, 0xb63c, 0xa5c, 0x0, 0x0);
        gbc.writeMem(0xbccb, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9059);
        EXPECT(gbc.pc(), 0xbccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbccb), 0xcb);
        EXPECT(gbc.readMem(0xbccc), 0x67);
        // CB 67 03D7
        gbc.setState(0xad24, 0xee1f, 0xf1b0, 0x4bc8, 0x5b59, 0xf27, 0x0, 0x1);
        gbc.writeMem(0xad24, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xee1f);
        EXPECT(gbc.pc(), 0xad26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad24), 0xcb);
        EXPECT(gbc.readMem(0xad25), 0x67);
        // CB 67 03D8
        gbc.setState(0xae91, 0x48ff, 0x1d50, 0xe733, 0xc414, 0x5cd9, 0x0, 0x0);
        gbc.writeMem(0xae91, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0xae93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae91), 0xcb);
        EXPECT(gbc.readMem(0xae92), 0x67);
        // CB 67 03D9
        gbc.setState(0x387b, 0xf5b, 0x5ad0, 0x55c4, 0x2571, 0x44af, 0x1, 0x1);
        gbc.writeMem(0x387b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf5b);
        EXPECT(gbc.pc(), 0x387d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03DA
        gbc.setState(0x6a1, 0xfa79, 0xc3d0, 0x76ba, 0x2c21, 0x8037, 0x0, 0x0);
        gbc.writeMem(0x6a1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xfa79);
        EXPECT(gbc.pc(), 0x6a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03DB
        gbc.setState(0x7eaa, 0x7fba, 0x370, 0xdede, 0xdad6, 0xca13, 0x0, 0x0);
        gbc.writeMem(0x7eaa, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x7fba);
        EXPECT(gbc.pc(), 0x7eac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 67 03DC
        gbc.setState(0x1e24, 0x5ea5, 0xc920, 0xc9a, 0xc289, 0x8e0f, 0x0, 0x0);
        gbc.writeMem(0x1e24, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5ea5);
        EXPECT(gbc.pc(), 0x1e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03DD
        gbc.setState(0x7278, 0x1dc4, 0x1140, 0x93a2, 0x9319, 0x696, 0x1, 0x0);
        gbc.writeMem(0x7278, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1dc4);
        EXPECT(gbc.pc(), 0x727a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03DE
        gbc.setState(0x8f26, 0xfb82, 0x3c50, 0x734f, 0xd87e, 0x768e, 0x1, 0x1);
        gbc.writeMem(0x8f26, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xfb82);
        EXPECT(gbc.pc(), 0x8f28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f26), 0xcb);
        EXPECT(gbc.readMem(0x8f27), 0x67);
        // CB 67 03DF
        gbc.setState(0x8802, 0xd5f4, 0xe100, 0xccfc, 0x7aff, 0x28b8, 0x1, 0x1);
        gbc.writeMem(0x8802, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd5f4);
        EXPECT(gbc.pc(), 0x8804);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8802), 0xcb);
        EXPECT(gbc.readMem(0x8803), 0x67);
        // CB 67 03E0
        gbc.setState(0xc124, 0x902f, 0xf790, 0x9a7, 0xb1fb, 0x2892, 0x0, 0x1);
        gbc.writeMem(0xc124, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x902f);
        EXPECT(gbc.pc(), 0xc126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc124), 0xcb);
        EXPECT(gbc.readMem(0xc125), 0x67);
        // CB 67 03E2
        gbc.setState(0xabaf, 0xa4c1, 0x7490, 0xff99, 0xa643, 0x643f, 0x1, 0x0);
        gbc.writeMem(0xabaf, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa4c1);
        EXPECT(gbc.pc(), 0xabb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabaf), 0xcb);
        EXPECT(gbc.readMem(0xabb0), 0x67);
        // CB 67 03E3
        gbc.setState(0xbcf0, 0x3fd2, 0x8b40, 0x4f6b, 0xad21, 0x4a6b, 0x1, 0x0);
        gbc.writeMem(0xbcf0, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3fd2);
        EXPECT(gbc.pc(), 0xbcf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcf0), 0xcb);
        EXPECT(gbc.readMem(0xbcf1), 0x67);
        // CB 67 03E4
        gbc.setState(0x897e, 0xeeff, 0xf450, 0x6658, 0x6b2f, 0x648a, 0x0, 0x1);
        gbc.writeMem(0x897e, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeeff);
        EXPECT(gbc.pc(), 0x8980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x897e), 0xcb);
        EXPECT(gbc.readMem(0x897f), 0x67);
        // CB 67 03E5
        gbc.setState(0x2954, 0x9e1c, 0xbf40, 0xc6e4, 0xac8d, 0x672e, 0x1, 0x0);
        gbc.writeMem(0x2954, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x9e1c);
        EXPECT(gbc.pc(), 0x2956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 67 03E6
        gbc.setState(0xa3c1, 0x6d8e, 0x9ae0, 0xa990, 0x3c1c, 0x6284, 0x1, 0x0);
        gbc.writeMem(0xa3c1, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6d8e);
        EXPECT(gbc.pc(), 0xa3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3c1), 0xcb);
        EXPECT(gbc.readMem(0xa3c2), 0x67);
        // CB 67 03E7
        gbc.setState(0x659b, 0x5300, 0x7120, 0x775e, 0x73ce, 0xc19f, 0x1, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5300);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
    }
}
#endif
