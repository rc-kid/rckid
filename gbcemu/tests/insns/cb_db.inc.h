    TEST(gbcemu, opcode_cb_db) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB DB 0000
        gbc.setState(0x76a3, 0x5eb1, 0x68a0, 0xe1d0, 0x39ed, 0xf23a, 0x1, 0x1);
        gbc.writeMem(0x76a3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5eb1, gbc.sp());
        EXPECT(0x76a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0001
        gbc.setState(0xb4df, 0x1fb1, 0x11c0, 0xaa1, 0x9785, 0x412b, 0x1, 0x0);
        gbc.writeMem(0xb4df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1fb1, gbc.sp());
        EXPECT(0xb4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4df));
        EXPECT(0xdb, gbc.readMem(0xb4e0));
        // CB DB 0002
        gbc.setState(0x64f0, 0x299c, 0xa3b0, 0x424, 0xc148, 0x962c, 0x0, 0x0);
        gbc.writeMem(0x64f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0003
        gbc.setState(0x82aa, 0x1b24, 0xc850, 0x14b0, 0x622e, 0xc05e, 0x0, 0x0);
        gbc.writeMem(0x82aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1b24, gbc.sp());
        EXPECT(0x82ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82aa));
        EXPECT(0xdb, gbc.readMem(0x82ab));
        // CB DB 0004
        gbc.setState(0xe568, 0x6faf, 0xcf70, 0x21eb, 0xf373, 0x1366, 0x1, 0x1);
        gbc.writeMem(0xe568, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6faf, gbc.sp());
        EXPECT(0xe56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe568));
        EXPECT(0xdb, gbc.readMem(0xe569));
        // CB DB 0005
        gbc.setState(0xeb, 0x312d, 0xfe30, 0x361f, 0x7f85, 0xba24, 0x0, 0x0);
        gbc.writeMem(0xeb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x312d, gbc.sp());
        EXPECT(0xed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0006
        gbc.setState(0xd2ef, 0x8647, 0xbbe0, 0x6f43, 0x2a55, 0x2119, 0x1, 0x1);
        gbc.writeMem(0xd2ef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0xd2f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2ef));
        EXPECT(0xdb, gbc.readMem(0xd2f0));
        // CB DB 0007
        gbc.setState(0x1103, 0xfa7, 0xf960, 0x9506, 0x67db, 0x2856, 0x0, 0x1);
        gbc.writeMem(0x1103, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfa7, gbc.sp());
        EXPECT(0x1105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0008
        gbc.setState(0xe491, 0xc8c, 0x5cb0, 0xe39f, 0xdc, 0x7524, 0x1, 0x0);
        gbc.writeMem(0xe491, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc8c, gbc.sp());
        EXPECT(0xe493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe491));
        EXPECT(0xdb, gbc.readMem(0xe492));
        // CB DB 0009
        gbc.setState(0x464d, 0x2189, 0x7bb0, 0x599a, 0x5fbf, 0xb8ec, 0x0, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2189, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 000A
        gbc.setState(0xdcf7, 0x513d, 0xb200, 0x8c96, 0x9196, 0xfe84, 0x1, 0x1);
        gbc.writeMem(0xdcf7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x513d, gbc.sp());
        EXPECT(0xdcf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf7));
        EXPECT(0xdb, gbc.readMem(0xdcf8));
        // CB DB 000B
        gbc.setState(0xa67c, 0x3317, 0x69f0, 0xe40, 0x6fa3, 0xa097, 0x0, 0x1);
        gbc.writeMem(0xa67c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3317, gbc.sp());
        EXPECT(0xa67e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67c));
        EXPECT(0xdb, gbc.readMem(0xa67d));
        // CB DB 000C
        gbc.setState(0xcbea, 0xfca0, 0x5550, 0x953, 0x6737, 0xfbec, 0x1, 0x0);
        gbc.writeMem(0xcbea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfca0, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbea));
        EXPECT(0xdb, gbc.readMem(0xcbeb));
        // CB DB 000D
        gbc.setState(0xe15f, 0x6eab, 0x8210, 0xb90a, 0x9b81, 0x104c, 0x0, 0x1);
        gbc.writeMem(0xe15f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6eab, gbc.sp());
        EXPECT(0xe161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15f));
        EXPECT(0xdb, gbc.readMem(0xe160));
        // CB DB 000E
        gbc.setState(0x5baf, 0xd7c8, 0x1fc0, 0x3d52, 0x7e5b, 0xf0f1, 0x1, 0x1);
        gbc.writeMem(0x5baf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd7c8, gbc.sp());
        EXPECT(0x5bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 000F
        gbc.setState(0xd143, 0x6d66, 0xc590, 0x1023, 0xd833, 0x8c6a, 0x0, 0x1);
        gbc.writeMem(0xd143, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6d66, gbc.sp());
        EXPECT(0xd145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd143));
        EXPECT(0xdb, gbc.readMem(0xd144));
        // CB DB 0010
        gbc.setState(0x250b, 0x4063, 0xd600, 0xacbd, 0x683d, 0xaaaf, 0x1, 0x0);
        gbc.writeMem(0x250b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x4063, gbc.sp());
        EXPECT(0x250d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0011
        gbc.setState(0x4c34, 0x14cf, 0x27b0, 0xf64c, 0x5630, 0x160b, 0x1, 0x0);
        gbc.writeMem(0x4c34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x14cf, gbc.sp());
        EXPECT(0x4c36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0012
        gbc.setState(0xc27b, 0x7e4f, 0xaac0, 0x7a14, 0x3f0, 0xd67f, 0x0, 0x0);
        gbc.writeMem(0xc27b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7e4f, gbc.sp());
        EXPECT(0xc27d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc27b));
        EXPECT(0xdb, gbc.readMem(0xc27c));
        // CB DB 0013
        gbc.setState(0x3dfe, 0x6c31, 0x3050, 0xbb80, 0x418b, 0x7ba, 0x0, 0x1);
        gbc.writeMem(0x3dfe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x6c31, gbc.sp());
        EXPECT(0x3e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0014
        gbc.setState(0x6f29, 0xa08b, 0xf320, 0x61ac, 0xa62a, 0x40af, 0x0, 0x1);
        gbc.writeMem(0x6f29, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa08b, gbc.sp());
        EXPECT(0x6f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0015
        gbc.setState(0xd681, 0xa7cb, 0xa1e0, 0x20e0, 0xf115, 0x7051, 0x0, 0x0);
        gbc.writeMem(0xd681, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa7cb, gbc.sp());
        EXPECT(0xd683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd681));
        EXPECT(0xdb, gbc.readMem(0xd682));
        // CB DB 0016
        gbc.setState(0x78b0, 0xc388, 0x9f70, 0xa7bd, 0x33b0, 0xe2e0, 0x1, 0x1);
        gbc.writeMem(0x78b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc388, gbc.sp());
        EXPECT(0x78b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0017
        gbc.setState(0xcfb7, 0xad8c, 0xd030, 0xf668, 0xb2a0, 0x7039, 0x1, 0x1);
        gbc.writeMem(0xcfb7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0xcfb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb7));
        EXPECT(0xdb, gbc.readMem(0xcfb8));
        // CB DB 0018
        gbc.setState(0x54ff, 0xab54, 0xd1c0, 0x6d7, 0xd13f, 0x2727, 0x1, 0x0);
        gbc.writeMem(0x54ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xab54, gbc.sp());
        EXPECT(0x5501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 001A
        gbc.setState(0xa496, 0xfd03, 0x1540, 0xd737, 0x408f, 0xe60c, 0x0, 0x1);
        gbc.writeMem(0xa496, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfd03, gbc.sp());
        EXPECT(0xa498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa496));
        EXPECT(0xdb, gbc.readMem(0xa497));
        // CB DB 001B
        gbc.setState(0xd2e0, 0x7fd, 0x4e50, 0x5080, 0x79d4, 0x7034, 0x0, 0x1);
        gbc.writeMem(0xd2e0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7fd, gbc.sp());
        EXPECT(0xd2e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2e0));
        EXPECT(0xdb, gbc.readMem(0xd2e1));
        // CB DB 001C
        gbc.setState(0xb2a1, 0x7d47, 0xdb20, 0x40b0, 0xe0c7, 0x9804, 0x1, 0x1);
        gbc.writeMem(0xb2a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7d47, gbc.sp());
        EXPECT(0xb2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a1));
        EXPECT(0xdb, gbc.readMem(0xb2a2));
        // CB DB 001E
        gbc.setState(0xb800, 0xe874, 0x2e90, 0xa7c4, 0xdf7c, 0x9846, 0x1, 0x0);
        gbc.writeMem(0xb800, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe874, gbc.sp());
        EXPECT(0xb802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb800));
        EXPECT(0xdb, gbc.readMem(0xb801));
        // CB DB 001F
        gbc.setState(0xacc9, 0xe879, 0x2a00, 0x4910, 0xb72e, 0xced7, 0x0, 0x0);
        gbc.writeMem(0xacc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xe879, gbc.sp());
        EXPECT(0xaccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc9));
        EXPECT(0xdb, gbc.readMem(0xacca));
        // CB DB 0020
        gbc.setState(0xd11d, 0xc3ad, 0x870, 0xb81b, 0xbd87, 0xe835, 0x0, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc3ad, gbc.sp());
        EXPECT(0xd11f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11d));
        EXPECT(0xdb, gbc.readMem(0xd11e));
        // CB DB 0021
        gbc.setState(0x4eab, 0x6ab5, 0xf760, 0xe6ef, 0xb406, 0x1e87, 0x0, 0x0);
        gbc.writeMem(0x4eab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6ab5, gbc.sp());
        EXPECT(0x4ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0022
        gbc.setState(0xd4f4, 0x504, 0x55e0, 0x6e6a, 0x57b4, 0x6cf6, 0x1, 0x0);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f4));
        EXPECT(0xdb, gbc.readMem(0xd4f5));
        // CB DB 0023
        gbc.setState(0x7bcc, 0xfce2, 0x8960, 0x77f5, 0x32dc, 0xa4e4, 0x1, 0x0);
        gbc.writeMem(0x7bcc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfce2, gbc.sp());
        EXPECT(0x7bce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0024
        gbc.setState(0x7af3, 0x3ecd, 0x2390, 0xe5fa, 0x42c1, 0xe9f6, 0x1, 0x1);
        gbc.writeMem(0x7af3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3ecd, gbc.sp());
        EXPECT(0x7af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0025
        gbc.setState(0xe10d, 0x7d7c, 0xf3d0, 0xd4bc, 0x5120, 0x1adc, 0x0, 0x1);
        gbc.writeMem(0xe10d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7d7c, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0xdb, gbc.readMem(0xe10e));
        // CB DB 0026
        gbc.setState(0xbc3f, 0x9ca2, 0xa140, 0x921d, 0xdacc, 0x5392, 0x1, 0x1);
        gbc.writeMem(0xbc3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9ca2, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3f));
        EXPECT(0xdb, gbc.readMem(0xbc40));
        // CB DB 0027
        gbc.setState(0xb7a8, 0x60a2, 0x7670, 0x9036, 0xdc49, 0x1ddf, 0x0, 0x0);
        gbc.writeMem(0xb7a8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x60a2, gbc.sp());
        EXPECT(0xb7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a8));
        EXPECT(0xdb, gbc.readMem(0xb7a9));
        // CB DB 0028
        gbc.setState(0x3b78, 0x76e7, 0xf6c0, 0x89bc, 0xb3a, 0x5dce, 0x1, 0x0);
        gbc.writeMem(0x3b78, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x76e7, gbc.sp());
        EXPECT(0x3b7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0029
        gbc.setState(0xd713, 0x46e5, 0x29c0, 0x1b80, 0xc20c, 0xb182, 0x1, 0x0);
        gbc.writeMem(0xd713, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0xd715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd713));
        EXPECT(0xdb, gbc.readMem(0xd714));
        // CB DB 002A
        gbc.setState(0x5819, 0xd71e, 0x8010, 0xc929, 0xc2ac, 0x84ba, 0x1, 0x0);
        gbc.writeMem(0x5819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd71e, gbc.sp());
        EXPECT(0x581b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 002B
        gbc.setState(0x30de, 0x6670, 0xf9e0, 0x1fe4, 0x3fce, 0xb5a9, 0x1, 0x1);
        gbc.writeMem(0x30de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6670, gbc.sp());
        EXPECT(0x30e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 002C
        gbc.setState(0xa32b, 0x139d, 0xaef0, 0xdeca, 0x8c20, 0x9c09, 0x1, 0x1);
        gbc.writeMem(0xa32b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xa32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa32b));
        EXPECT(0xdb, gbc.readMem(0xa32c));
        // CB DB 002D
        gbc.setState(0x7046, 0xc94a, 0xa8f0, 0x9ef0, 0x50f4, 0xa8ce, 0x1, 0x0);
        gbc.writeMem(0x7046, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0x7048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 002E
        gbc.setState(0x8847, 0x7dc5, 0x8700, 0x464f, 0xd2a5, 0xcfc0, 0x1, 0x1);
        gbc.writeMem(0x8847, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7dc5, gbc.sp());
        EXPECT(0x8849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8847));
        EXPECT(0xdb, gbc.readMem(0x8848));
        // CB DB 002F
        gbc.setState(0xd87f, 0x37a, 0x7fd0, 0xce78, 0x19d, 0x24bf, 0x1, 0x1);
        gbc.writeMem(0xd87f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x37a, gbc.sp());
        EXPECT(0xd881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd87f));
        EXPECT(0xdb, gbc.readMem(0xd880));
        // CB DB 0030
        gbc.setState(0x7be0, 0x314a, 0x3d50, 0x2373, 0x485, 0x24b5, 0x0, 0x1);
        gbc.writeMem(0x7be0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0x7be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0031
        gbc.setState(0x47c0, 0xde4b, 0x7540, 0x4c65, 0xbcc4, 0x51bb, 0x1, 0x1);
        gbc.writeMem(0x47c0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0x47c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0032
        gbc.setState(0x3f67, 0xaf99, 0x3730, 0x7ce7, 0x39f6, 0xd674, 0x1, 0x1);
        gbc.writeMem(0x3f67, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaf99, gbc.sp());
        EXPECT(0x3f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0033
        gbc.setState(0xaed9, 0xc215, 0x90d0, 0x277d, 0xc3fe, 0xd0ab, 0x1, 0x1);
        gbc.writeMem(0xaed9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc215, gbc.sp());
        EXPECT(0xaedb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed9));
        EXPECT(0xdb, gbc.readMem(0xaeda));
        // CB DB 0034
        gbc.setState(0x90df, 0xefa1, 0xf1f0, 0x2e05, 0x136d, 0x90a0, 0x1, 0x1);
        gbc.writeMem(0x90df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xefa1, gbc.sp());
        EXPECT(0x90e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90df));
        EXPECT(0xdb, gbc.readMem(0x90e0));
        // CB DB 0035
        gbc.setState(0xae3c, 0x5a14, 0x8520, 0x2c64, 0x81f8, 0xb9ef, 0x0, 0x0);
        gbc.writeMem(0xae3c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5a14, gbc.sp());
        EXPECT(0xae3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae3c));
        EXPECT(0xdb, gbc.readMem(0xae3d));
        // CB DB 0036
        gbc.setState(0x5258, 0xf172, 0xf00, 0xab54, 0x6af, 0x9c23, 0x0, 0x0);
        gbc.writeMem(0x5258, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0x525a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0037
        gbc.setState(0x61e, 0x62db, 0x4060, 0x9c94, 0x34f9, 0x30f7, 0x1, 0x0);
        gbc.writeMem(0x61e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x62db, gbc.sp());
        EXPECT(0x620, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0038
        gbc.setState(0xaa9f, 0x6806, 0x1070, 0x97a6, 0xefea, 0xe35, 0x0, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x6806, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9f));
        EXPECT(0xdb, gbc.readMem(0xaaa0));
        // CB DB 0039
        gbc.setState(0xa80b, 0x235e, 0xa730, 0xae9e, 0x9cc, 0xe3f5, 0x1, 0x0);
        gbc.writeMem(0xa80b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x235e, gbc.sp());
        EXPECT(0xa80d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80b));
        EXPECT(0xdb, gbc.readMem(0xa80c));
        // CB DB 003A
        gbc.setState(0x2da1, 0x189, 0xead0, 0x9ce1, 0x3309, 0xe449, 0x0, 0x0);
        gbc.writeMem(0x2da1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0x2da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 003B
        gbc.setState(0x947d, 0x85b1, 0xb3e0, 0x9356, 0x9fd0, 0xe41e, 0x1, 0x0);
        gbc.writeMem(0x947d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x85b1, gbc.sp());
        EXPECT(0x947f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947d));
        EXPECT(0xdb, gbc.readMem(0x947e));
        // CB DB 003D
        gbc.setState(0x3872, 0x2624, 0x3590, 0xcb17, 0x7dcf, 0xe476, 0x1, 0x1);
        gbc.writeMem(0x3872, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2624, gbc.sp());
        EXPECT(0x3874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 003E
        gbc.setState(0x2cad, 0xae07, 0x76b0, 0x6d6b, 0x4e8a, 0xb8ff, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xae07, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0040
        gbc.setState(0xe16e, 0x44f4, 0x2d20, 0xdae6, 0x1107, 0x8bde, 0x0, 0x0);
        gbc.writeMem(0xe16e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x44f4, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16e));
        EXPECT(0xdb, gbc.readMem(0xe16f));
        // CB DB 0041
        gbc.setState(0x6b0e, 0xbe02, 0x7650, 0x622b, 0xb16d, 0x4bd2, 0x1, 0x1);
        gbc.writeMem(0x6b0e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbe02, gbc.sp());
        EXPECT(0x6b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0042
        gbc.setState(0x3920, 0xfc61, 0x8ef0, 0x3990, 0x4a85, 0x9d1f, 0x1, 0x1);
        gbc.writeMem(0x3920, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0x3922, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0043
        gbc.setState(0x76b2, 0x5c0, 0xd280, 0x6b09, 0x8842, 0x7818, 0x1, 0x1);
        gbc.writeMem(0x76b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5c0, gbc.sp());
        EXPECT(0x76b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0044
        gbc.setState(0xd59b, 0x94ed, 0x69e0, 0xd00d, 0x35e9, 0xbd4f, 0x1, 0x0);
        gbc.writeMem(0xd59b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x94ed, gbc.sp());
        EXPECT(0xd59d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd59b));
        EXPECT(0xdb, gbc.readMem(0xd59c));
        // CB DB 0045
        gbc.setState(0xd4f4, 0x9c1a, 0xef90, 0x80de, 0x3d18, 0x5479, 0x0, 0x1);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9c1a, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f4));
        EXPECT(0xdb, gbc.readMem(0xd4f5));
        // CB DB 0046
        gbc.setState(0x2831, 0xc41a, 0xd0b0, 0xcfd1, 0x47b, 0x109f, 0x0, 0x0);
        gbc.writeMem(0x2831, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc41a, gbc.sp());
        EXPECT(0x2833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0047
        gbc.setState(0x4422, 0x3e04, 0x5930, 0xdbac, 0x31d3, 0x29c5, 0x1, 0x0);
        gbc.writeMem(0x4422, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0x4424, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0048
        gbc.setState(0x4d50, 0xd079, 0xe930, 0x71fa, 0x9c9d, 0x8c17, 0x1, 0x1);
        gbc.writeMem(0x4d50, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd079, gbc.sp());
        EXPECT(0x4d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0049
        gbc.setState(0x76d8, 0x32aa, 0xbd0, 0xe0d9, 0x259, 0xfee2, 0x1, 0x1);
        gbc.writeMem(0x76d8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x32aa, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 004A
        gbc.setState(0xc902, 0xaae5, 0xd790, 0x4e2, 0x1372, 0xb406, 0x1, 0x1);
        gbc.writeMem(0xc902, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaae5, gbc.sp());
        EXPECT(0xc904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc902));
        EXPECT(0xdb, gbc.readMem(0xc903));
        // CB DB 004B
        gbc.setState(0x6e48, 0x92f6, 0x4d20, 0xe95, 0xcca6, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x92f6, gbc.sp());
        EXPECT(0x6e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 004C
        gbc.setState(0xb57a, 0x7f9, 0x5a10, 0x332c, 0xb941, 0x2718, 0x0, 0x1);
        gbc.writeMem(0xb57a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7f9, gbc.sp());
        EXPECT(0xb57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb57a));
        EXPECT(0xdb, gbc.readMem(0xb57b));
        // CB DB 004D
        gbc.setState(0x9609, 0x2611, 0x2e60, 0xbff4, 0x8df7, 0xd8b6, 0x0, 0x0);
        gbc.writeMem(0x9609, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2611, gbc.sp());
        EXPECT(0x960b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9609));
        EXPECT(0xdb, gbc.readMem(0x960a));
        // CB DB 004E
        gbc.setState(0x6d66, 0xe6ec, 0x8830, 0x39e, 0x9cb4, 0x6e7, 0x1, 0x1);
        gbc.writeMem(0x6d66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe6ec, gbc.sp());
        EXPECT(0x6d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 004F
        gbc.setState(0x4212, 0x2809, 0x36c0, 0x9691, 0x784d, 0x487e, 0x0, 0x0);
        gbc.writeMem(0x4212, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0050
        gbc.setState(0x8fe, 0xb5d1, 0x9e90, 0xae95, 0x4282, 0x6459, 0x1, 0x0);
        gbc.writeMem(0x8fe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb5d1, gbc.sp());
        EXPECT(0x900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0051
        gbc.setState(0xb5b3, 0xf571, 0x6260, 0xe954, 0x69db, 0x7d3c, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0xb5b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5b3));
        EXPECT(0xdb, gbc.readMem(0xb5b4));
        // CB DB 0052
        gbc.setState(0x4b79, 0x552f, 0x3410, 0x19fb, 0xa410, 0x72cd, 0x1, 0x1);
        gbc.writeMem(0x4b79, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x552f, gbc.sp());
        EXPECT(0x4b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0053
        gbc.setState(0xeb7f, 0xf365, 0x530, 0xa9b2, 0xd349, 0x5cc3, 0x0, 0x0);
        gbc.writeMem(0xeb7f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf365, gbc.sp());
        EXPECT(0xeb81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb7f));
        EXPECT(0xdb, gbc.readMem(0xeb80));
        // CB DB 0054
        gbc.setState(0xad30, 0x9409, 0xe940, 0x32d0, 0x3a7, 0x24, 0x0, 0x0);
        gbc.writeMem(0xad30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9409, gbc.sp());
        EXPECT(0xad32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad30));
        EXPECT(0xdb, gbc.readMem(0xad31));
        // CB DB 0055
        gbc.setState(0x5480, 0x5856, 0xf510, 0xae72, 0x2b63, 0x2dd7, 0x0, 0x0);
        gbc.writeMem(0x5480, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5856, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0056
        gbc.setState(0xdb4d, 0xf5f0, 0x7360, 0xc7f1, 0xa9f5, 0xaf3e, 0x0, 0x0);
        gbc.writeMem(0xdb4d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5f0, gbc.sp());
        EXPECT(0xdb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4d));
        EXPECT(0xdb, gbc.readMem(0xdb4e));
        // CB DB 0057
        gbc.setState(0x5f90, 0x1d1, 0x6860, 0xf441, 0x7a22, 0xfaa4, 0x1, 0x0);
        gbc.writeMem(0x5f90, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1d1, gbc.sp());
        EXPECT(0x5f92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0058
        gbc.setState(0x12f8, 0x9ea7, 0x78a0, 0x4cd6, 0x117d, 0x6132, 0x0, 0x1);
        gbc.writeMem(0x12f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9ea7, gbc.sp());
        EXPECT(0x12fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0059
        gbc.setState(0x1ae3, 0x2add, 0x8a50, 0xe975, 0x7fb6, 0xdbd9, 0x0, 0x0);
        gbc.writeMem(0x1ae3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2add, gbc.sp());
        EXPECT(0x1ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 005A
        gbc.setState(0x576b, 0xe3c8, 0xe8b0, 0x18a4, 0x3244, 0xa1cb, 0x0, 0x0);
        gbc.writeMem(0x576b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe3c8, gbc.sp());
        EXPECT(0x576d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 005B
        gbc.setState(0x9943, 0x1116, 0x3bd0, 0x36d5, 0x2fd5, 0x47ea, 0x0, 0x0);
        gbc.writeMem(0x9943, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1116, gbc.sp());
        EXPECT(0x9945, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9943));
        EXPECT(0xdb, gbc.readMem(0x9944));
        // CB DB 005D
        gbc.setState(0x9431, 0x4be, 0xdb10, 0x11f4, 0x8b18, 0x1527, 0x0, 0x0);
        gbc.writeMem(0x9431, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4be, gbc.sp());
        EXPECT(0x9433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9431));
        EXPECT(0xdb, gbc.readMem(0x9432));
        // CB DB 005E
        gbc.setState(0x88cb, 0xb93, 0x4c00, 0xb159, 0x55c3, 0x2c9a, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb93, gbc.sp());
        EXPECT(0x88cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88cb));
        EXPECT(0xdb, gbc.readMem(0x88cc));
        // CB DB 005F
        gbc.setState(0x5260, 0xbc63, 0xcc20, 0xe01c, 0x714b, 0xcb22, 0x1, 0x0);
        gbc.writeMem(0x5260, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbc63, gbc.sp());
        EXPECT(0x5262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0060
        gbc.setState(0x5a88, 0x3b5d, 0xedc0, 0xac4b, 0xdcfd, 0xaafe, 0x0, 0x0);
        gbc.writeMem(0x5a88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3b5d, gbc.sp());
        EXPECT(0x5a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0061
        gbc.setState(0xd047, 0xf985, 0x4310, 0x9dc, 0x4cab, 0x8d63, 0x1, 0x1);
        gbc.writeMem(0xd047, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf985, gbc.sp());
        EXPECT(0xd049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd047));
        EXPECT(0xdb, gbc.readMem(0xd048));
        // CB DB 0062
        gbc.setState(0x2211, 0x6cc2, 0x7af0, 0x3691, 0xe3b, 0xa9f8, 0x1, 0x0);
        gbc.writeMem(0x2211, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6cc2, gbc.sp());
        EXPECT(0x2213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0063
        gbc.setState(0x9e47, 0xd257, 0x4b80, 0x7847, 0x226c, 0x4ac0, 0x1, 0x0);
        gbc.writeMem(0x9e47, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd257, gbc.sp());
        EXPECT(0x9e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e47));
        EXPECT(0xdb, gbc.readMem(0x9e48));
        // CB DB 0064
        gbc.setState(0x3ee1, 0xdf3f, 0xe2a0, 0x2540, 0xe8ac, 0xbb5a, 0x0, 0x1);
        gbc.writeMem(0x3ee1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdf3f, gbc.sp());
        EXPECT(0x3ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0065
        gbc.setState(0x1493, 0x587d, 0xd5d0, 0x9c5, 0xb434, 0x68c4, 0x1, 0x0);
        gbc.writeMem(0x1493, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x587d, gbc.sp());
        EXPECT(0x1495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0066
        gbc.setState(0x1fe8, 0x2c91, 0x43e0, 0xa513, 0x96c, 0xe04a, 0x0, 0x1);
        gbc.writeMem(0x1fe8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2c91, gbc.sp());
        EXPECT(0x1fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0067
        gbc.setState(0x867c, 0xd093, 0x6d30, 0x79f9, 0xe3d6, 0x94d, 0x0, 0x0);
        gbc.writeMem(0x867c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd093, gbc.sp());
        EXPECT(0x867e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x867c));
        EXPECT(0xdb, gbc.readMem(0x867d));
        // CB DB 0069
        gbc.setState(0xe768, 0xbd1b, 0xd090, 0xdffb, 0xb9c7, 0x3035, 0x0, 0x0);
        gbc.writeMem(0xe768, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbd1b, gbc.sp());
        EXPECT(0xe76a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe768));
        EXPECT(0xdb, gbc.readMem(0xe769));
        // CB DB 006A
        gbc.setState(0x6fc6, 0x8229, 0x62f0, 0xb2ec, 0x71a2, 0x2c01, 0x1, 0x1);
        gbc.writeMem(0x6fc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8229, gbc.sp());
        EXPECT(0x6fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 006B
        gbc.setState(0x8230, 0xded0, 0x7140, 0x75ba, 0x9440, 0xce58, 0x0, 0x0);
        gbc.writeMem(0x8230, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0x8232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8230));
        EXPECT(0xdb, gbc.readMem(0x8231));
        // CB DB 006C
        gbc.setState(0xbab5, 0x7944, 0x5320, 0x3be3, 0x3f02, 0x200d, 0x1, 0x0);
        gbc.writeMem(0xbab5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7944, gbc.sp());
        EXPECT(0xbab7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbab5));
        EXPECT(0xdb, gbc.readMem(0xbab6));
        // CB DB 006D
        gbc.setState(0x5f7c, 0xb6ca, 0xe1c0, 0x79f5, 0xd579, 0x1b82, 0x1, 0x1);
        gbc.writeMem(0x5f7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb6ca, gbc.sp());
        EXPECT(0x5f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 006E
        gbc.setState(0xab40, 0x2825, 0x4b50, 0x4960, 0xbcc4, 0x1b48, 0x0, 0x1);
        gbc.writeMem(0xab40, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0xab42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab40));
        EXPECT(0xdb, gbc.readMem(0xab41));
        // CB DB 006F
        gbc.setState(0xad78, 0xc414, 0x2d70, 0x6a1b, 0xbea4, 0xa52f, 0x0, 0x1);
        gbc.writeMem(0xad78, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc414, gbc.sp());
        EXPECT(0xad7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad78));
        EXPECT(0xdb, gbc.readMem(0xad79));
        // CB DB 0070
        gbc.setState(0x9926, 0xff8f, 0x7920, 0xc07e, 0x990a, 0xfb97, 0x0, 0x0);
        gbc.writeMem(0x9926, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xff8f, gbc.sp());
        EXPECT(0x9928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9926));
        EXPECT(0xdb, gbc.readMem(0x9927));
        // CB DB 0071
        gbc.setState(0x54ab, 0xcd2b, 0x78a0, 0xfd1, 0xccfa, 0xe608, 0x1, 0x1);
        gbc.writeMem(0x54ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xcd2b, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0072
        gbc.setState(0xa14c, 0x7dcf, 0x1df0, 0xe92e, 0x58cb, 0x128c, 0x0, 0x0);
        gbc.writeMem(0xa14c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7dcf, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14c));
        EXPECT(0xdb, gbc.readMem(0xa14d));
        // CB DB 0073
        gbc.setState(0x2237, 0xc85a, 0xcd0, 0xaf44, 0xb302, 0x55ad, 0x0, 0x1);
        gbc.writeMem(0x2237, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc85a, gbc.sp());
        EXPECT(0x2239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0074
        gbc.setState(0xbb3b, 0x64fd, 0xcd40, 0x1599, 0xf69e, 0xb658, 0x1, 0x1);
        gbc.writeMem(0xbb3b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x64fd, gbc.sp());
        EXPECT(0xbb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb3b));
        EXPECT(0xdb, gbc.readMem(0xbb3c));
        // CB DB 0075
        gbc.setState(0x1e32, 0xeac5, 0x8fa0, 0xa5, 0xa28f, 0xf0a6, 0x1, 0x0);
        gbc.writeMem(0x1e32, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xeac5, gbc.sp());
        EXPECT(0x1e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0076
        gbc.setState(0x809c, 0x98c, 0x2a30, 0xced6, 0x4c85, 0x1284, 0x0, 0x1);
        gbc.writeMem(0x809c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x98c, gbc.sp());
        EXPECT(0x809e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809c));
        EXPECT(0xdb, gbc.readMem(0x809d));
        // CB DB 0077
        gbc.setState(0xb268, 0x69b0, 0x8ae0, 0x1889, 0x1d64, 0x554d, 0x1, 0x1);
        gbc.writeMem(0xb268, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x69b0, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb268));
        EXPECT(0xdb, gbc.readMem(0xb269));
        // CB DB 0078
        gbc.setState(0xd546, 0x4008, 0xf3b0, 0xc3d2, 0xbcbd, 0xaa2a, 0x1, 0x1);
        gbc.writeMem(0xd546, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x4008, gbc.sp());
        EXPECT(0xd548, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd546));
        EXPECT(0xdb, gbc.readMem(0xd547));
        // CB DB 0079
        gbc.setState(0x976d, 0x2b2f, 0xe100, 0x447, 0xf7c2, 0xd645, 0x1, 0x1);
        gbc.writeMem(0x976d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2b2f, gbc.sp());
        EXPECT(0x976f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x976d));
        EXPECT(0xdb, gbc.readMem(0x976e));
        // CB DB 007A
        gbc.setState(0x144, 0xd891, 0xe030, 0x7323, 0xc4e6, 0x4d03, 0x1, 0x1);
        gbc.writeMem(0x144, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd891, gbc.sp());
        EXPECT(0x146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 007B
        gbc.setState(0x91a6, 0x38aa, 0x74a0, 0x236f, 0x4d68, 0x69e6, 0x1, 0x0);
        gbc.writeMem(0x91a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x38aa, gbc.sp());
        EXPECT(0x91a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a6));
        EXPECT(0xdb, gbc.readMem(0x91a7));
        // CB DB 007C
        gbc.setState(0xa97f, 0x41f1, 0xd480, 0x6ca, 0xf5af, 0x54fd, 0x1, 0x0);
        gbc.writeMem(0xa97f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x41f1, gbc.sp());
        EXPECT(0xa981, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa97f));
        EXPECT(0xdb, gbc.readMem(0xa980));
        // CB DB 007E
        gbc.setState(0x8510, 0xecf2, 0xba0, 0x3da8, 0xe679, 0x1999, 0x0, 0x0);
        gbc.writeMem(0x8510, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xecf2, gbc.sp());
        EXPECT(0x8512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8510));
        EXPECT(0xdb, gbc.readMem(0x8511));
        // CB DB 007F
        gbc.setState(0x7193, 0x55b7, 0x9930, 0xab16, 0x93f5, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0x7193, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x55b7, gbc.sp());
        EXPECT(0x7195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0080
        gbc.setState(0x8f12, 0x143f, 0x4d70, 0xec14, 0xbe1c, 0x5777, 0x1, 0x1);
        gbc.writeMem(0x8f12, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x143f, gbc.sp());
        EXPECT(0x8f14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f12));
        EXPECT(0xdb, gbc.readMem(0x8f13));
        // CB DB 0081
        gbc.setState(0x493b, 0x7d7d, 0x8ac0, 0x5acf, 0x149d, 0x6b4, 0x0, 0x1);
        gbc.writeMem(0x493b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7d7d, gbc.sp());
        EXPECT(0x493d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0082
        gbc.setState(0x82d0, 0x1899, 0x9140, 0xce67, 0xcc78, 0x691d, 0x1, 0x1);
        gbc.writeMem(0x82d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1899, gbc.sp());
        EXPECT(0x82d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d0));
        EXPECT(0xdb, gbc.readMem(0x82d1));
        // CB DB 0083
        gbc.setState(0xc083, 0xb986, 0xac00, 0x27, 0xe080, 0x6426, 0x0, 0x0);
        gbc.writeMem(0xc083, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb986, gbc.sp());
        EXPECT(0xc085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc083));
        EXPECT(0xdb, gbc.readMem(0xc084));
        // CB DB 0084
        gbc.setState(0xc95a, 0x8675, 0x1400, 0x5fbb, 0xfe1b, 0xd381, 0x0, 0x0);
        gbc.writeMem(0xc95a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0xc95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc95a));
        EXPECT(0xdb, gbc.readMem(0xc95b));
        // CB DB 0085
        gbc.setState(0x97db, 0x9c16, 0xecc0, 0x84d6, 0xbdad, 0x295b, 0x1, 0x0);
        gbc.writeMem(0x97db, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9c16, gbc.sp());
        EXPECT(0x97dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97db));
        EXPECT(0xdb, gbc.readMem(0x97dc));
        // CB DB 0086
        gbc.setState(0xa930, 0x79ef, 0xa940, 0x9fe9, 0x6374, 0x4dbd, 0x1, 0x0);
        gbc.writeMem(0xa930, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x79ef, gbc.sp());
        EXPECT(0xa932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa930));
        EXPECT(0xdb, gbc.readMem(0xa931));
        // CB DB 0087
        gbc.setState(0xd07e, 0xa9d9, 0x9f70, 0xca73, 0xfaef, 0x5df4, 0x0, 0x0);
        gbc.writeMem(0xd07e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0xd080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd07e));
        EXPECT(0xdb, gbc.readMem(0xd07f));
        // CB DB 0088
        gbc.setState(0xa1af, 0xd6f4, 0xe3a0, 0xb9cf, 0x6f1, 0xd4c9, 0x0, 0x0);
        gbc.writeMem(0xa1af, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0xa1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1af));
        EXPECT(0xdb, gbc.readMem(0xa1b0));
        // CB DB 0089
        gbc.setState(0x23d2, 0x6b42, 0xfce0, 0xc1e8, 0xee11, 0x1163, 0x0, 0x0);
        gbc.writeMem(0x23d2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6b42, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 008A
        gbc.setState(0x9c1d, 0xeb28, 0x7b0, 0x545b, 0xff26, 0xf47a, 0x1, 0x1);
        gbc.writeMem(0x9c1d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xeb28, gbc.sp());
        EXPECT(0x9c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c1d));
        EXPECT(0xdb, gbc.readMem(0x9c1e));
        // CB DB 008B
        gbc.setState(0x3d45, 0x1269, 0x4280, 0x72a3, 0xe714, 0xa4cf, 0x1, 0x1);
        gbc.writeMem(0x3d45, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 008C
        gbc.setState(0xc31d, 0x1ab4, 0xb3e0, 0x1c43, 0x90be, 0xfee, 0x1, 0x1);
        gbc.writeMem(0xc31d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1ab4, gbc.sp());
        EXPECT(0xc31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31d));
        EXPECT(0xdb, gbc.readMem(0xc31e));
        // CB DB 008D
        gbc.setState(0x7e48, 0x65f3, 0x2440, 0xf318, 0xaa98, 0xe1a7, 0x0, 0x1);
        gbc.writeMem(0x7e48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x65f3, gbc.sp());
        EXPECT(0x7e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 008E
        gbc.setState(0xb4e3, 0x7cbe, 0xbac0, 0x5f38, 0x583e, 0xcd12, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7cbe, gbc.sp());
        EXPECT(0xb4e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4e3));
        EXPECT(0xdb, gbc.readMem(0xb4e4));
        // CB DB 0091
        gbc.setState(0x3cd9, 0x5f8, 0x4450, 0x31ac, 0x513b, 0x7c86, 0x0, 0x1);
        gbc.writeMem(0x3cd9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5f8, gbc.sp());
        EXPECT(0x3cdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0092
        gbc.setState(0x858e, 0xa4e8, 0xb550, 0xd8a0, 0xc064, 0xf19e, 0x1, 0x0);
        gbc.writeMem(0x858e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa4e8, gbc.sp());
        EXPECT(0x8590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858e));
        EXPECT(0xdb, gbc.readMem(0x858f));
        // CB DB 0093
        gbc.setState(0x7c5, 0xa427, 0xc210, 0x2518, 0xd92c, 0xb182, 0x1, 0x1);
        gbc.writeMem(0x7c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa427, gbc.sp());
        EXPECT(0x7c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0094
        gbc.setState(0x4400, 0x668, 0xdee0, 0x77a0, 0x77d9, 0xb899, 0x1, 0x0);
        gbc.writeMem(0x4400, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x668, gbc.sp());
        EXPECT(0x4402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0095
        gbc.setState(0x3e53, 0x6d2b, 0xf750, 0x7a5c, 0x480e, 0xd64f, 0x0, 0x0);
        gbc.writeMem(0x3e53, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x6d2b, gbc.sp());
        EXPECT(0x3e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0096
        gbc.setState(0xbcbb, 0x2b21, 0x6610, 0xc88, 0xc7b, 0x443c, 0x1, 0x0);
        gbc.writeMem(0xbcbb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2b21, gbc.sp());
        EXPECT(0xbcbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcbb));
        EXPECT(0xdb, gbc.readMem(0xbcbc));
        // CB DB 0097
        gbc.setState(0xe18c, 0xc550, 0xbf00, 0x10c6, 0x34f5, 0x759, 0x1, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18c));
        EXPECT(0xdb, gbc.readMem(0xe18d));
        // CB DB 0098
        gbc.setState(0x610b, 0xf60b, 0xcf80, 0xf87e, 0x69d, 0x1d63, 0x0, 0x0);
        gbc.writeMem(0x610b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x610d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0099
        gbc.setState(0x2278, 0x2e93, 0xc1f0, 0xdef9, 0x75b3, 0x7911, 0x0, 0x1);
        gbc.writeMem(0x2278, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2e93, gbc.sp());
        EXPECT(0x227a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 009A
        gbc.setState(0x7a33, 0xed32, 0x4230, 0x993, 0x529c, 0x4fa5, 0x1, 0x0);
        gbc.writeMem(0x7a33, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed32, gbc.sp());
        EXPECT(0x7a35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 009B
        gbc.setState(0xefea, 0xc672, 0xc180, 0x652a, 0x9b65, 0x401f, 0x0, 0x0);
        gbc.writeMem(0xefea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc672, gbc.sp());
        EXPECT(0xefec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefea));
        EXPECT(0xdb, gbc.readMem(0xefeb));
        // CB DB 009C
        gbc.setState(0x8c25, 0xb0c8, 0xefd0, 0xdc98, 0x9c39, 0x9d, 0x1, 0x1);
        gbc.writeMem(0x8c25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb0c8, gbc.sp());
        EXPECT(0x8c27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c25));
        EXPECT(0xdb, gbc.readMem(0x8c26));
        // CB DB 009D
        gbc.setState(0x147e, 0x607, 0x8950, 0x18a3, 0x6ecb, 0x571e, 0x0, 0x1);
        gbc.writeMem(0x147e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x607, gbc.sp());
        EXPECT(0x1480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 009F
        gbc.setState(0x6e36, 0x6acf, 0xda40, 0x4202, 0x37fd, 0x9843, 0x0, 0x0);
        gbc.writeMem(0x6e36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0x6e38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00A0
        gbc.setState(0xa6b4, 0x35d1, 0x2cb0, 0x72fe, 0xe097, 0x7c57, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x35d1, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0xdb, gbc.readMem(0xa6b5));
        // CB DB 00A1
        gbc.setState(0xb1c7, 0x135d, 0xb6d0, 0x6255, 0xcdce, 0xb45e, 0x0, 0x0);
        gbc.writeMem(0xb1c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x135d, gbc.sp());
        EXPECT(0xb1c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c7));
        EXPECT(0xdb, gbc.readMem(0xb1c8));
        // CB DB 00A2
        gbc.setState(0x4ac2, 0x979d, 0x6190, 0x2e4d, 0x8e09, 0x89e5, 0x0, 0x1);
        gbc.writeMem(0x4ac2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x979d, gbc.sp());
        EXPECT(0x4ac4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00A3
        gbc.setState(0x359a, 0x8b52, 0x7dc0, 0x39b5, 0x3355, 0x1a10, 0x1, 0x0);
        gbc.writeMem(0x359a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8b52, gbc.sp());
        EXPECT(0x359c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00A4
        gbc.setState(0xe276, 0x4bda, 0xa420, 0xab05, 0x7fc2, 0x2eea, 0x1, 0x0);
        gbc.writeMem(0xe276, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4bda, gbc.sp());
        EXPECT(0xe278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe276));
        EXPECT(0xdb, gbc.readMem(0xe277));
        // CB DB 00A5
        gbc.setState(0x79b2, 0x9711, 0x2520, 0x2d3c, 0x2f52, 0x1301, 0x0, 0x0);
        gbc.writeMem(0x79b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9711, gbc.sp());
        EXPECT(0x79b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00A6
        gbc.setState(0x896b, 0x1f18, 0x9090, 0xe781, 0x841e, 0xf994, 0x0, 0x1);
        gbc.writeMem(0x896b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1f18, gbc.sp());
        EXPECT(0x896d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896b));
        EXPECT(0xdb, gbc.readMem(0x896c));
        // CB DB 00A7
        gbc.setState(0x29d, 0xbc0, 0x230, 0x1621, 0xb45f, 0xdcc3, 0x0, 0x1);
        gbc.writeMem(0x29d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xbc0, gbc.sp());
        EXPECT(0x29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00A8
        gbc.setState(0x23e4, 0x2afa, 0x1330, 0x376c, 0x1913, 0x4f95, 0x1, 0x0);
        gbc.writeMem(0x23e4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2afa, gbc.sp());
        EXPECT(0x23e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00A9
        gbc.setState(0xcc7b, 0xe9dd, 0xb8e0, 0xead, 0xb8c, 0x3363, 0x0, 0x0);
        gbc.writeMem(0xcc7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe9dd, gbc.sp());
        EXPECT(0xcc7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7b));
        EXPECT(0xdb, gbc.readMem(0xcc7c));
        // CB DB 00AA
        gbc.setState(0xd939, 0x9d96, 0xccb0, 0xde0f, 0x49be, 0xb325, 0x1, 0x0);
        gbc.writeMem(0xd939, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9d96, gbc.sp());
        EXPECT(0xd93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd939));
        EXPECT(0xdb, gbc.readMem(0xd93a));
        // CB DB 00AB
        gbc.setState(0x1c01, 0xdcf1, 0x6fa0, 0x2bdb, 0x8c23, 0x7e46, 0x0, 0x1);
        gbc.writeMem(0x1c01, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdcf1, gbc.sp());
        EXPECT(0x1c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00AC
        gbc.setState(0xdfb0, 0xae5a, 0xaf10, 0xf950, 0x172e, 0xb1fa, 0x1, 0x0);
        gbc.writeMem(0xdfb0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xae5a, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb0));
        EXPECT(0xdb, gbc.readMem(0xdfb1));
        // CB DB 00AD
        gbc.setState(0x3ad, 0x2ab2, 0xe2a0, 0xec58, 0xdddc, 0xdc84, 0x1, 0x1);
        gbc.writeMem(0x3ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2ab2, gbc.sp());
        EXPECT(0x3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00AE
        gbc.setState(0x2a70, 0x8251, 0xe250, 0x9559, 0x29a6, 0x9a2, 0x0, 0x1);
        gbc.writeMem(0x2a70, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8251, gbc.sp());
        EXPECT(0x2a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00AF
        gbc.setState(0x7992, 0x1cdd, 0xaf70, 0x55c4, 0xfa30, 0x49df, 0x0, 0x0);
        gbc.writeMem(0x7992, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1cdd, gbc.sp());
        EXPECT(0x7994, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00B0
        gbc.setState(0xcaed, 0xda5a, 0x3710, 0xb0cc, 0x44ef, 0x9769, 0x1, 0x0);
        gbc.writeMem(0xcaed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xda5a, gbc.sp());
        EXPECT(0xcaef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaed));
        EXPECT(0xdb, gbc.readMem(0xcaee));
        // CB DB 00B1
        gbc.setState(0x897d, 0xaf1, 0xb9f0, 0xb694, 0x2fa6, 0xac4f, 0x1, 0x0);
        gbc.writeMem(0x897d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xaf1, gbc.sp());
        EXPECT(0x897f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x897d));
        EXPECT(0xdb, gbc.readMem(0x897e));
        // CB DB 00B2
        gbc.setState(0x29ed, 0x2df8, 0xcf50, 0x5acc, 0x8df, 0x6d3b, 0x1, 0x1);
        gbc.writeMem(0x29ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2df8, gbc.sp());
        EXPECT(0x29ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00B3
        gbc.setState(0x528, 0xe48, 0x49d0, 0xab14, 0x847c, 0x2e51, 0x1, 0x1);
        gbc.writeMem(0x528, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe48, gbc.sp());
        EXPECT(0x52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00B4
        gbc.setState(0x3b87, 0x1d8e, 0xc5f0, 0xf7ea, 0xa819, 0xba34, 0x1, 0x1);
        gbc.writeMem(0x3b87, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1d8e, gbc.sp());
        EXPECT(0x3b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00B5
        gbc.setState(0xbae2, 0x249d, 0x1d70, 0x3a81, 0x1cfd, 0x5832, 0x0, 0x1);
        gbc.writeMem(0xbae2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x249d, gbc.sp());
        EXPECT(0xbae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae2));
        EXPECT(0xdb, gbc.readMem(0xbae3));
        // CB DB 00B6
        gbc.setState(0x3e63, 0x559b, 0x45e0, 0x95cd, 0xc12, 0x7cfc, 0x1, 0x1);
        gbc.writeMem(0x3e63, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x559b, gbc.sp());
        EXPECT(0x3e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00B7
        gbc.setState(0xb195, 0xe4dc, 0xdfa0, 0x5d3e, 0xfd73, 0xcc08, 0x1, 0x0);
        gbc.writeMem(0xb195, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe4dc, gbc.sp());
        EXPECT(0xb197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb195));
        EXPECT(0xdb, gbc.readMem(0xb196));
        // CB DB 00B8
        gbc.setState(0x1bd1, 0xfb56, 0x5440, 0x41c, 0xe8fd, 0x4f12, 0x1, 0x0);
        gbc.writeMem(0x1bd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfb56, gbc.sp());
        EXPECT(0x1bd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00B9
        gbc.setState(0x7dbd, 0x9568, 0xabc0, 0x4be3, 0x3ff1, 0xa691, 0x1, 0x0);
        gbc.writeMem(0x7dbd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9568, gbc.sp());
        EXPECT(0x7dbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00BA
        gbc.setState(0x178, 0x2206, 0xa4a0, 0x3a58, 0x6386, 0x957d, 0x1, 0x0);
        gbc.writeMem(0x178, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x2206, gbc.sp());
        EXPECT(0x17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00BB
        gbc.setState(0x22ee, 0xa6eb, 0x3db0, 0x6836, 0x3138, 0x5609, 0x1, 0x1);
        gbc.writeMem(0x22ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa6eb, gbc.sp());
        EXPECT(0x22f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00BC
        gbc.setState(0x8e91, 0x1362, 0xd170, 0xd4a3, 0x664f, 0xf2f1, 0x1, 0x0);
        gbc.writeMem(0x8e91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1362, gbc.sp());
        EXPECT(0x8e93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e91));
        EXPECT(0xdb, gbc.readMem(0x8e92));
        // CB DB 00BD
        gbc.setState(0xb3f3, 0x81c0, 0x500, 0xbd46, 0x4f64, 0x6566, 0x1, 0x1);
        gbc.writeMem(0xb3f3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x81c0, gbc.sp());
        EXPECT(0xb3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f3));
        EXPECT(0xdb, gbc.readMem(0xb3f4));
        // CB DB 00BE
        gbc.setState(0xda4a, 0xa0b7, 0x51a0, 0x6001, 0x7a82, 0xaa99, 0x1, 0x0);
        gbc.writeMem(0xda4a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa0b7, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4a));
        EXPECT(0xdb, gbc.readMem(0xda4b));
        // CB DB 00BF
        gbc.setState(0xdae5, 0x1dca, 0x7dd0, 0x3744, 0xcd, 0xa504, 0x0, 0x1);
        gbc.writeMem(0xdae5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xdae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdae5));
        EXPECT(0xdb, gbc.readMem(0xdae6));
        // CB DB 00C0
        gbc.setState(0xc80a, 0xa253, 0xf660, 0x50f8, 0xdbd9, 0xf11c, 0x1, 0x0);
        gbc.writeMem(0xc80a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa253, gbc.sp());
        EXPECT(0xc80c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc80a));
        EXPECT(0xdb, gbc.readMem(0xc80b));
        // CB DB 00C1
        gbc.setState(0x4080, 0xd81e, 0xeba0, 0x509b, 0xa41d, 0x1988, 0x1, 0x1);
        gbc.writeMem(0x4080, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd81e, gbc.sp());
        EXPECT(0x4082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00C2
        gbc.setState(0x5ff7, 0x6aa7, 0x4ee0, 0xad87, 0x413a, 0x4a84, 0x0, 0x0);
        gbc.writeMem(0x5ff7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6aa7, gbc.sp());
        EXPECT(0x5ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00C3
        gbc.setState(0x3d34, 0x742a, 0x4ab0, 0x6aa5, 0xdce5, 0x3b1, 0x0, 0x0);
        gbc.writeMem(0x3d34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x742a, gbc.sp());
        EXPECT(0x3d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00C4
        gbc.setState(0x9fc4, 0x4500, 0xd480, 0x555, 0xf1f1, 0xc09d, 0x0, 0x1);
        gbc.writeMem(0x9fc4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4500, gbc.sp());
        EXPECT(0x9fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc4));
        EXPECT(0xdb, gbc.readMem(0x9fc5));
        // CB DB 00C5
        gbc.setState(0xd331, 0xe953, 0x3350, 0x3afc, 0xe021, 0xcfeb, 0x1, 0x0);
        gbc.writeMem(0xd331, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe953, gbc.sp());
        EXPECT(0xd333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd331));
        EXPECT(0xdb, gbc.readMem(0xd332));
        // CB DB 00C6
        gbc.setState(0xd3c5, 0xeb5f, 0x5480, 0x54f3, 0xd3d8, 0x58ba, 0x1, 0x1);
        gbc.writeMem(0xd3c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xeb5f, gbc.sp());
        EXPECT(0xd3c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c5));
        EXPECT(0xdb, gbc.readMem(0xd3c6));
        // CB DB 00C7
        gbc.setState(0x8bea, 0xfb24, 0xb490, 0x406a, 0xaf6a, 0xcc0b, 0x0, 0x1);
        gbc.writeMem(0x8bea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0x8bec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bea));
        EXPECT(0xdb, gbc.readMem(0x8beb));
        // CB DB 00C8
        gbc.setState(0x91a, 0x2c53, 0xb030, 0x1a61, 0xf800, 0x10fb, 0x1, 0x0);
        gbc.writeMem(0x91a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2c53, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00C9
        gbc.setState(0xbd8, 0x18ea, 0xf6f0, 0xc41d, 0xe4fb, 0xbfcc, 0x0, 0x1);
        gbc.writeMem(0xbd8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x18ea, gbc.sp());
        EXPECT(0xbda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00CA
        gbc.setState(0x6885, 0x3211, 0xa9a0, 0x4c2, 0x17d4, 0xe0af, 0x0, 0x0);
        gbc.writeMem(0x6885, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3211, gbc.sp());
        EXPECT(0x6887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00CB
        gbc.setState(0x1eac, 0x8dab, 0x4b0, 0x3692, 0x4453, 0xe1ee, 0x0, 0x0);
        gbc.writeMem(0x1eac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8dab, gbc.sp());
        EXPECT(0x1eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00CC
        gbc.setState(0x2980, 0x69b4, 0xb130, 0x1187, 0x5472, 0x9ca9, 0x0, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x69b4, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00CD
        gbc.setState(0x9ec9, 0x2f5e, 0x1070, 0x707, 0xd2fb, 0x1780, 0x0, 0x0);
        gbc.writeMem(0x9ec9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2f5e, gbc.sp());
        EXPECT(0x9ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec9));
        EXPECT(0xdb, gbc.readMem(0x9eca));
        // CB DB 00CE
        gbc.setState(0xdbd3, 0xd220, 0x7950, 0x524f, 0x3e54, 0xee68, 0x0, 0x1);
        gbc.writeMem(0xdbd3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xd220, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0xdb, gbc.readMem(0xdbd4));
        // CB DB 00CF
        gbc.setState(0xbd44, 0x95b0, 0x6340, 0x4e43, 0x8e42, 0x78cf, 0x0, 0x0);
        gbc.writeMem(0xbd44, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0xdb, gbc.readMem(0xbd45));
        // CB DB 00D0
        gbc.setState(0xd5ca, 0x96a3, 0xec70, 0x4eef, 0x8d57, 0xef61, 0x1, 0x1);
        gbc.writeMem(0xd5ca, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x96a3, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ca));
        EXPECT(0xdb, gbc.readMem(0xd5cb));
        // CB DB 00D1
        gbc.setState(0x5d6, 0x13e, 0x7530, 0x1e13, 0xd6a2, 0xada9, 0x1, 0x0);
        gbc.writeMem(0x5d6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x13e, gbc.sp());
        EXPECT(0x5d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00D2
        gbc.setState(0x1a2c, 0x8843, 0x4f00, 0x3f25, 0x9a35, 0xa7c7, 0x0, 0x1);
        gbc.writeMem(0x1a2c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8843, gbc.sp());
        EXPECT(0x1a2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00D3
        gbc.setState(0x376b, 0x6f50, 0x8a90, 0x1ac7, 0x38f9, 0xe5ab, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f50, gbc.sp());
        EXPECT(0x376d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00D5
        gbc.setState(0x6643, 0x20c, 0x9b50, 0xe119, 0x4dbe, 0x10, 0x1, 0x1);
        gbc.writeMem(0x6643, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x20c, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00D6
        gbc.setState(0x1da1, 0x67a9, 0x8050, 0xcb54, 0x8f8b, 0x7982, 0x0, 0x0);
        gbc.writeMem(0x1da1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x67a9, gbc.sp());
        EXPECT(0x1da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00D7
        gbc.setState(0x43ba, 0xbd7e, 0x18a0, 0xa70, 0x6dd2, 0x8705, 0x1, 0x1);
        gbc.writeMem(0x43ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0x43bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00D8
        gbc.setState(0x2402, 0xacca, 0xe030, 0xa8a0, 0x89f6, 0x6eda, 0x0, 0x0);
        gbc.writeMem(0x2402, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xacca, gbc.sp());
        EXPECT(0x2404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00DA
        gbc.setState(0xac0c, 0x493a, 0xc3a0, 0x27c1, 0x28a, 0x98e2, 0x1, 0x0);
        gbc.writeMem(0xac0c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x493a, gbc.sp());
        EXPECT(0xac0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0c));
        EXPECT(0xdb, gbc.readMem(0xac0d));
        // CB DB 00DB
        gbc.setState(0xa4d9, 0x5e64, 0xf070, 0x8a12, 0x9f68, 0x4462, 0x1, 0x0);
        gbc.writeMem(0xa4d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5e64, gbc.sp());
        EXPECT(0xa4db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4d9));
        EXPECT(0xdb, gbc.readMem(0xa4da));
        // CB DB 00DC
        gbc.setState(0xedb7, 0xdbfe, 0xaf10, 0x3a03, 0xcf20, 0x509, 0x0, 0x0);
        gbc.writeMem(0xedb7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0xedb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb7));
        EXPECT(0xdb, gbc.readMem(0xedb8));
        // CB DB 00DD
        gbc.setState(0x54ba, 0x5d14, 0xd280, 0x9222, 0x3bb0, 0xddf7, 0x1, 0x0);
        gbc.writeMem(0x54ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x5d14, gbc.sp());
        EXPECT(0x54bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00DE
        gbc.setState(0xede2, 0x3920, 0x8410, 0xdb4a, 0x7f50, 0x2c02, 0x0, 0x1);
        gbc.writeMem(0xede2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x3920, gbc.sp());
        EXPECT(0xede4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede2));
        EXPECT(0xdb, gbc.readMem(0xede3));
        // CB DB 00DF
        gbc.setState(0x887c, 0x4e5f, 0xf9c0, 0x1a2f, 0xfb8f, 0x4dac, 0x0, 0x1);
        gbc.writeMem(0x887c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4e5f, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x887c));
        EXPECT(0xdb, gbc.readMem(0x887d));
        // CB DB 00E0
        gbc.setState(0x23ef, 0x8675, 0xafb0, 0x28e1, 0xfcda, 0x1097, 0x0, 0x0);
        gbc.writeMem(0x23ef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8675, gbc.sp());
        EXPECT(0x23f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00E1
        gbc.setState(0x7530, 0x120e, 0xb290, 0xad7a, 0xe284, 0xb704, 0x1, 0x1);
        gbc.writeMem(0x7530, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x120e, gbc.sp());
        EXPECT(0x7532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00E2
        gbc.setState(0x2ee0, 0xe76f, 0xbd00, 0xd50d, 0x86d4, 0x6112, 0x0, 0x0);
        gbc.writeMem(0x2ee0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe76f, gbc.sp());
        EXPECT(0x2ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00E3
        gbc.setState(0x5d28, 0xd8ff, 0xd000, 0x331, 0x7c0f, 0xba7d, 0x0, 0x0);
        gbc.writeMem(0x5d28, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd8ff, gbc.sp());
        EXPECT(0x5d2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00E5
        gbc.setState(0x882c, 0x872, 0x9ce0, 0xbdf5, 0xa357, 0x6f, 0x0, 0x1);
        gbc.writeMem(0x882c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x872, gbc.sp());
        EXPECT(0x882e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x882c));
        EXPECT(0xdb, gbc.readMem(0x882d));
        // CB DB 00E6
        gbc.setState(0xc7eb, 0xbf74, 0x9a30, 0x851c, 0x241a, 0xcfc6, 0x1, 0x1);
        gbc.writeMem(0xc7eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xbf74, gbc.sp());
        EXPECT(0xc7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7eb));
        EXPECT(0xdb, gbc.readMem(0xc7ec));
        // CB DB 00E7
        gbc.setState(0xc215, 0xc3da, 0xb440, 0x22f4, 0xf397, 0xf700, 0x1, 0x1);
        gbc.writeMem(0xc215, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0xc217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc215));
        EXPECT(0xdb, gbc.readMem(0xc216));
        // CB DB 00E8
        gbc.setState(0x463e, 0x4bf0, 0xe5e0, 0x987f, 0x7701, 0x5b8, 0x0, 0x1);
        gbc.writeMem(0x463e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4bf0, gbc.sp());
        EXPECT(0x4640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00EA
        gbc.setState(0xdf75, 0x7f62, 0xb800, 0xf7ba, 0x5f41, 0x9324, 0x1, 0x1);
        gbc.writeMem(0xdf75, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7f62, gbc.sp());
        EXPECT(0xdf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf75));
        EXPECT(0xdb, gbc.readMem(0xdf76));
        // CB DB 00EB
        gbc.setState(0x172d, 0x9c05, 0xa5f0, 0xa177, 0xecfb, 0x2f24, 0x0, 0x1);
        gbc.writeMem(0x172d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9c05, gbc.sp());
        EXPECT(0x172f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00EC
        gbc.setState(0xd1b4, 0x8709, 0x3210, 0x4ecc, 0xe99e, 0xb92c, 0x1, 0x1);
        gbc.writeMem(0xd1b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8709, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b4));
        EXPECT(0xdb, gbc.readMem(0xd1b5));
        // CB DB 00ED
        gbc.setState(0x52a, 0xaf80, 0x9e10, 0xe658, 0xc362, 0x275, 0x1, 0x1);
        gbc.writeMem(0x52a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xaf80, gbc.sp());
        EXPECT(0x52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00EE
        gbc.setState(0xb712, 0xac7f, 0xc6a0, 0x3a51, 0x9b2e, 0xe7d1, 0x1, 0x0);
        gbc.writeMem(0xb712, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xac7f, gbc.sp());
        EXPECT(0xb714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb712));
        EXPECT(0xdb, gbc.readMem(0xb713));
        // CB DB 00EF
        gbc.setState(0x3f36, 0x2624, 0xde70, 0xbb83, 0x2d77, 0x9d11, 0x0, 0x1);
        gbc.writeMem(0x3f36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2624, gbc.sp());
        EXPECT(0x3f38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00F0
        gbc.setState(0xd4d, 0x5ff6, 0x5ce0, 0x5462, 0xe661, 0xc7d0, 0x0, 0x1);
        gbc.writeMem(0xd4d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5ff6, gbc.sp());
        EXPECT(0xd4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00F1
        gbc.setState(0xb33e, 0xb5db, 0xfda0, 0x37d0, 0x8a3c, 0xa90, 0x1, 0x0);
        gbc.writeMem(0xb33e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb5db, gbc.sp());
        EXPECT(0xb340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33e));
        EXPECT(0xdb, gbc.readMem(0xb33f));
        // CB DB 00F2
        gbc.setState(0x1abb, 0xef77, 0x3080, 0x76d8, 0xe05f, 0xdfb6, 0x0, 0x0);
        gbc.writeMem(0x1abb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x1abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 00F3
        gbc.setState(0x51d5, 0xe7cd, 0x55d0, 0xaf3f, 0x5f02, 0xace8, 0x0, 0x1);
        gbc.writeMem(0x51d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xe7cd, gbc.sp());
        EXPECT(0x51d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00F4
        gbc.setState(0x5588, 0x98fb, 0x4190, 0xb6cd, 0xe8bf, 0x848d, 0x0, 0x0);
        gbc.writeMem(0x5588, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x98fb, gbc.sp());
        EXPECT(0x558a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00F5
        gbc.setState(0xcc58, 0xc8b8, 0xcd10, 0x6349, 0xea89, 0xbf09, 0x0, 0x1);
        gbc.writeMem(0xcc58, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc8b8, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc58));
        EXPECT(0xdb, gbc.readMem(0xcc59));
        // CB DB 00F6
        gbc.setState(0x3b2a, 0xb36c, 0x5ad0, 0xa489, 0x5f0, 0xc0d0, 0x0, 0x0);
        gbc.writeMem(0x3b2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb36c, gbc.sp());
        EXPECT(0x3b2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 00F7
        gbc.setState(0xd9d3, 0xca13, 0xbbf0, 0xaf45, 0x2129, 0x6b60, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xca13, gbc.sp());
        EXPECT(0xd9d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d3));
        EXPECT(0xdb, gbc.readMem(0xd9d4));
        // CB DB 00F8
        gbc.setState(0xaa9f, 0xe918, 0x5670, 0xc6b3, 0x4af5, 0x2582, 0x0, 0x0);
        gbc.writeMem(0xaa9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa9f));
        EXPECT(0xdb, gbc.readMem(0xaaa0));
        // CB DB 00F9
        gbc.setState(0x8cb4, 0x3f63, 0xa070, 0xdd31, 0x26d5, 0x54d3, 0x1, 0x1);
        gbc.writeMem(0x8cb4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3f63, gbc.sp());
        EXPECT(0x8cb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cb4));
        EXPECT(0xdb, gbc.readMem(0x8cb5));
        // CB DB 00FA
        gbc.setState(0xcda2, 0xf21a, 0x7060, 0x817f, 0x794b, 0xab5b, 0x1, 0x0);
        gbc.writeMem(0xcda2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf21a, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda2));
        EXPECT(0xdb, gbc.readMem(0xcda3));
        // CB DB 00FB
        gbc.setState(0xaae3, 0x6b41, 0x32c0, 0x4ad7, 0x6c8c, 0xbd9b, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6b41, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae3));
        EXPECT(0xdb, gbc.readMem(0xaae4));
        // CB DB 00FC
        gbc.setState(0xc717, 0xb4ad, 0x3850, 0x8ce8, 0x8b91, 0xd79e, 0x0, 0x1);
        gbc.writeMem(0xc717, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb4ad, gbc.sp());
        EXPECT(0xc719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc717));
        EXPECT(0xdb, gbc.readMem(0xc718));
        // CB DB 00FD
        gbc.setState(0xa52f, 0x407d, 0x7160, 0xf039, 0xb17d, 0x3eb6, 0x1, 0x0);
        gbc.writeMem(0xa52f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x407d, gbc.sp());
        EXPECT(0xa531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52f));
        EXPECT(0xdb, gbc.readMem(0xa530));
        // CB DB 00FE
        gbc.setState(0xad55, 0x87cf, 0xaaa0, 0x6882, 0x2c04, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0xad55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x87cf, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad55));
        EXPECT(0xdb, gbc.readMem(0xad56));
        // CB DB 0100
        gbc.setState(0x40b1, 0x4905, 0x3fa0, 0xb0e8, 0xb789, 0x98a6, 0x0, 0x0);
        gbc.writeMem(0x40b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4905, gbc.sp());
        EXPECT(0x40b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0102
        gbc.setState(0xb069, 0x51ce, 0xe540, 0xa5f4, 0x385f, 0x1c58, 0x1, 0x1);
        gbc.writeMem(0xb069, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x51ce, gbc.sp());
        EXPECT(0xb06b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb069));
        EXPECT(0xdb, gbc.readMem(0xb06a));
        // CB DB 0103
        gbc.setState(0x399b, 0xabf1, 0xd2d0, 0xd3cf, 0xdd43, 0x9ae7, 0x1, 0x0);
        gbc.writeMem(0x399b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xabf1, gbc.sp());
        EXPECT(0x399d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0104
        gbc.setState(0xa61a, 0x7cf8, 0xa590, 0x6640, 0xb4d4, 0x10af, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7cf8, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61a));
        EXPECT(0xdb, gbc.readMem(0xa61b));
        // CB DB 0105
        gbc.setState(0x8786, 0x832f, 0x92d0, 0x34f9, 0xb0a1, 0xe104, 0x1, 0x1);
        gbc.writeMem(0x8786, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x832f, gbc.sp());
        EXPECT(0x8788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8786));
        EXPECT(0xdb, gbc.readMem(0x8787));
        // CB DB 0106
        gbc.setState(0xed8c, 0xe2d2, 0xad40, 0xa557, 0xc4b4, 0x62b6, 0x0, 0x0);
        gbc.writeMem(0xed8c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe2d2, gbc.sp());
        EXPECT(0xed8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8c));
        EXPECT(0xdb, gbc.readMem(0xed8d));
        // CB DB 0107
        gbc.setState(0x608c, 0xb95a, 0xbbd0, 0xcd14, 0x256, 0x7342, 0x0, 0x1);
        gbc.writeMem(0x608c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb95a, gbc.sp());
        EXPECT(0x608e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0108
        gbc.setState(0x54f2, 0x80b7, 0xc470, 0xa535, 0x58f1, 0xe2bf, 0x0, 0x1);
        gbc.writeMem(0x54f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x80b7, gbc.sp());
        EXPECT(0x54f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0109
        gbc.setState(0x31ed, 0xdf1a, 0xf210, 0xb58d, 0x4db1, 0x7001, 0x1, 0x0);
        gbc.writeMem(0x31ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x31ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 010A
        gbc.setState(0x5865, 0x3c98, 0xe100, 0xfc84, 0x540, 0x6ed, 0x1, 0x0);
        gbc.writeMem(0x5865, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3c98, gbc.sp());
        EXPECT(0x5867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 010B
        gbc.setState(0x4c2c, 0x2fc4, 0xe540, 0x54db, 0x7506, 0xcef9, 0x1, 0x1);
        gbc.writeMem(0x4c2c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x2fc4, gbc.sp());
        EXPECT(0x4c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 010C
        gbc.setState(0x548c, 0xb0f9, 0xb350, 0x9bce, 0x39bf, 0x1302, 0x1, 0x1);
        gbc.writeMem(0x548c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb0f9, gbc.sp());
        EXPECT(0x548e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 010E
        gbc.setState(0xb0ba, 0x2f8, 0x1910, 0xb5d1, 0xaa4f, 0xcf19, 0x1, 0x0);
        gbc.writeMem(0xb0ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2f8, gbc.sp());
        EXPECT(0xb0bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0ba));
        EXPECT(0xdb, gbc.readMem(0xb0bb));
        // CB DB 010F
        gbc.setState(0x11de, 0xf86f, 0xecb0, 0x7a30, 0x7eef, 0x39fb, 0x1, 0x1);
        gbc.writeMem(0x11de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf86f, gbc.sp());
        EXPECT(0x11e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0110
        gbc.setState(0x5afa, 0x79c6, 0x6ca0, 0xde15, 0xb9ce, 0xf80e, 0x0, 0x0);
        gbc.writeMem(0x5afa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0x5afc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0111
        gbc.setState(0x9b30, 0x2453, 0x24e0, 0xad21, 0x2ede, 0xae1f, 0x0, 0x1);
        gbc.writeMem(0x9b30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0x9b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b30));
        EXPECT(0xdb, gbc.readMem(0x9b31));
        // CB DB 0112
        gbc.setState(0x782c, 0xa7e3, 0xddf0, 0x9bb2, 0x766b, 0xf5ff, 0x1, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa7e3, gbc.sp());
        EXPECT(0x782e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0113
        gbc.setState(0x5a3f, 0xe05a, 0xfa40, 0x13e4, 0x7c74, 0xc75a, 0x1, 0x0);
        gbc.writeMem(0x5a3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe05a, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0114
        gbc.setState(0x8ec0, 0xd492, 0xed0, 0xe98f, 0xf229, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0x8ec0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xd492, gbc.sp());
        EXPECT(0x8ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec0));
        EXPECT(0xdb, gbc.readMem(0x8ec1));
        // CB DB 0116
        gbc.setState(0xa053, 0x3eb3, 0x4930, 0x9e2f, 0xc6fd, 0x1fd1, 0x1, 0x0);
        gbc.writeMem(0xa053, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3eb3, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa053));
        EXPECT(0xdb, gbc.readMem(0xa054));
        // CB DB 0117
        gbc.setState(0xeb92, 0x8873, 0xcf30, 0x4b46, 0x563c, 0xf1bd, 0x0, 0x1);
        gbc.writeMem(0xeb92, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8873, gbc.sp());
        EXPECT(0xeb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb92));
        EXPECT(0xdb, gbc.readMem(0xeb93));
        // CB DB 0118
        gbc.setState(0xaee, 0x218c, 0x5960, 0x1048, 0xd6b9, 0xc655, 0x0, 0x1);
        gbc.writeMem(0xaee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x218c, gbc.sp());
        EXPECT(0xaf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0119
        gbc.setState(0xd0e8, 0x504, 0x32f0, 0x4e68, 0x2651, 0xa8ef, 0x0, 0x0);
        gbc.writeMem(0xd0e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x504, gbc.sp());
        EXPECT(0xd0ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e8));
        EXPECT(0xdb, gbc.readMem(0xd0e9));
        // CB DB 011A
        gbc.setState(0xba1b, 0x7a76, 0x8e50, 0xd47a, 0xf9a3, 0x5f18, 0x1, 0x1);
        gbc.writeMem(0xba1b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7a76, gbc.sp());
        EXPECT(0xba1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1b));
        EXPECT(0xdb, gbc.readMem(0xba1c));
        // CB DB 011B
        gbc.setState(0xedb3, 0xd189, 0xdde0, 0x88cf, 0x6f52, 0x902d, 0x0, 0x0);
        gbc.writeMem(0xedb3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd189, gbc.sp());
        EXPECT(0xedb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb3));
        EXPECT(0xdb, gbc.readMem(0xedb4));
        // CB DB 011D
        gbc.setState(0xb327, 0x9e1c, 0xe880, 0x6310, 0xbbb5, 0x36cc, 0x0, 0x0);
        gbc.writeMem(0xb327, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9e1c, gbc.sp());
        EXPECT(0xb329, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb327));
        EXPECT(0xdb, gbc.readMem(0xb328));
        // CB DB 011E
        gbc.setState(0xe6fd, 0x2384, 0xbe70, 0xfdda, 0x9044, 0xe4a6, 0x0, 0x1);
        gbc.writeMem(0xe6fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2384, gbc.sp());
        EXPECT(0xe6ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6fd));
        EXPECT(0xdb, gbc.readMem(0xe6fe));
        // CB DB 011F
        gbc.setState(0x1aed, 0xc971, 0xa860, 0x1aa3, 0xad19, 0x27da, 0x0, 0x0);
        gbc.writeMem(0x1aed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc971, gbc.sp());
        EXPECT(0x1aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0120
        gbc.setState(0x5f87, 0x60f3, 0xd460, 0xd4f, 0x4a36, 0xdd34, 0x0, 0x0);
        gbc.writeMem(0x5f87, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x60f3, gbc.sp());
        EXPECT(0x5f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0121
        gbc.setState(0x7edb, 0xc550, 0x2ec0, 0xb7a4, 0x710, 0x9166, 0x1, 0x0);
        gbc.writeMem(0x7edb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc550, gbc.sp());
        EXPECT(0x7edd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0122
        gbc.setState(0x1d88, 0x44b5, 0xdb0, 0xa07c, 0x9abd, 0x1a88, 0x1, 0x1);
        gbc.writeMem(0x1d88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x1d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0123
        gbc.setState(0xbfc2, 0xb8ff, 0x1750, 0x917, 0x202, 0x36e6, 0x1, 0x0);
        gbc.writeMem(0xbfc2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb8ff, gbc.sp());
        EXPECT(0xbfc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc2));
        EXPECT(0xdb, gbc.readMem(0xbfc3));
        // CB DB 0124
        gbc.setState(0x411e, 0xc7d8, 0xf990, 0xa24e, 0xe7b4, 0x1498, 0x0, 0x0);
        gbc.writeMem(0x411e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0x4120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0125
        gbc.setState(0x286c, 0x737a, 0xba00, 0xc13a, 0xf13c, 0x7010, 0x1, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x737a, gbc.sp());
        EXPECT(0x286e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0126
        gbc.setState(0x7ec5, 0xc37d, 0x83c0, 0x6367, 0x11c2, 0x489c, 0x1, 0x1);
        gbc.writeMem(0x7ec5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x7ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0127
        gbc.setState(0xe742, 0x5dcb, 0x3c10, 0x975a, 0xaf4d, 0x51b2, 0x1, 0x0);
        gbc.writeMem(0xe742, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5dcb, gbc.sp());
        EXPECT(0xe744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe742));
        EXPECT(0xdb, gbc.readMem(0xe743));
        // CB DB 0129
        gbc.setState(0x11a9, 0x1981, 0xdba0, 0xaa05, 0xe8, 0x612c, 0x0, 0x1);
        gbc.writeMem(0x11a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1981, gbc.sp());
        EXPECT(0x11ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 012A
        gbc.setState(0xbd5c, 0x2722, 0xbbc0, 0xe3e9, 0x1e48, 0xe516, 0x0, 0x1);
        gbc.writeMem(0xbd5c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2722, gbc.sp());
        EXPECT(0xbd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5c));
        EXPECT(0xdb, gbc.readMem(0xbd5d));
        // CB DB 012B
        gbc.setState(0xeecc, 0x999c, 0x1b80, 0x363, 0xefc2, 0x8f40, 0x1, 0x0);
        gbc.writeMem(0xeecc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecc));
        EXPECT(0xdb, gbc.readMem(0xeecd));
        // CB DB 012C
        gbc.setState(0x460f, 0xbb13, 0xa3e0, 0x803, 0xfd85, 0xd581, 0x1, 0x0);
        gbc.writeMem(0x460f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0x4611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 012D
        gbc.setState(0x35f0, 0x537e, 0x53b0, 0xd2bc, 0xe245, 0x1cc3, 0x0, 0x0);
        gbc.writeMem(0x35f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x537e, gbc.sp());
        EXPECT(0x35f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 012E
        gbc.setState(0x9b4f, 0x9da6, 0xb5f0, 0xd772, 0x3a68, 0xa9ef, 0x1, 0x1);
        gbc.writeMem(0x9b4f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x9b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b4f));
        EXPECT(0xdb, gbc.readMem(0x9b50));
        // CB DB 012F
        gbc.setState(0x1cf9, 0xeaf8, 0x3670, 0xe5e3, 0x650e, 0x852d, 0x0, 0x0);
        gbc.writeMem(0x1cf9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0x1cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0130
        gbc.setState(0xdf09, 0xdf1f, 0x3330, 0xcd23, 0xdf40, 0xaa88, 0x0, 0x1);
        gbc.writeMem(0xdf09, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xdf1f, gbc.sp());
        EXPECT(0xdf0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf09));
        EXPECT(0xdb, gbc.readMem(0xdf0a));
        // CB DB 0131
        gbc.setState(0x7e7c, 0xe918, 0x5c20, 0x897e, 0xbf9d, 0x252f, 0x0, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe918, gbc.sp());
        EXPECT(0x7e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0132
        gbc.setState(0x5ceb, 0x522e, 0xe990, 0xc8b9, 0xe5f2, 0x284f, 0x0, 0x0);
        gbc.writeMem(0x5ceb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x522e, gbc.sp());
        EXPECT(0x5ced, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0133
        gbc.setState(0xada5, 0x549e, 0xd80, 0x4abc, 0x4f1b, 0xd554, 0x1, 0x1);
        gbc.writeMem(0xada5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x549e, gbc.sp());
        EXPECT(0xada7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xada5));
        EXPECT(0xdb, gbc.readMem(0xada6));
        // CB DB 0134
        gbc.setState(0x91f0, 0x45e1, 0x81b0, 0x5015, 0xce5e, 0x9f1a, 0x0, 0x1);
        gbc.writeMem(0x91f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x45e1, gbc.sp());
        EXPECT(0x91f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f0));
        EXPECT(0xdb, gbc.readMem(0x91f1));
        // CB DB 0135
        gbc.setState(0x463b, 0xdb54, 0x9da0, 0xc299, 0x4f45, 0x61cb, 0x0, 0x0);
        gbc.writeMem(0x463b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdb54, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0136
        gbc.setState(0x9819, 0x9744, 0x45f0, 0x9b06, 0xaa88, 0x4c8, 0x1, 0x1);
        gbc.writeMem(0x9819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9744, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9819));
        EXPECT(0xdb, gbc.readMem(0x981a));
        // CB DB 0137
        gbc.setState(0x3078, 0xb18, 0xb790, 0xc778, 0x43ed, 0x3afb, 0x1, 0x0);
        gbc.writeMem(0x3078, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0138
        gbc.setState(0x143f, 0x90f0, 0x7e70, 0x8ded, 0x3f39, 0x7367, 0x0, 0x0);
        gbc.writeMem(0x143f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x90f0, gbc.sp());
        EXPECT(0x1441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0139
        gbc.setState(0xcd80, 0x179c, 0x650, 0x164a, 0xa727, 0x89da, 0x1, 0x1);
        gbc.writeMem(0xcd80, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x179c, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd80));
        EXPECT(0xdb, gbc.readMem(0xcd81));
        // CB DB 013A
        gbc.setState(0xa47e, 0xa214, 0x6850, 0x27ca, 0x5d87, 0xd1f4, 0x1, 0x0);
        gbc.writeMem(0xa47e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xa214, gbc.sp());
        EXPECT(0xa480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47e));
        EXPECT(0xdb, gbc.readMem(0xa47f));
        // CB DB 013B
        gbc.setState(0xe9dc, 0xca00, 0x91a0, 0xd4f3, 0x8d3a, 0x8990, 0x1, 0x1);
        gbc.writeMem(0xe9dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xca00, gbc.sp());
        EXPECT(0xe9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9dc));
        EXPECT(0xdb, gbc.readMem(0xe9dd));
        // CB DB 013C
        gbc.setState(0x9e1, 0x7649, 0xde10, 0xde49, 0xb3b2, 0x268a, 0x1, 0x0);
        gbc.writeMem(0x9e1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7649, gbc.sp());
        EXPECT(0x9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 013D
        gbc.setState(0xc19a, 0xa9d9, 0x2290, 0x98a1, 0x97d4, 0x6183, 0x1, 0x0);
        gbc.writeMem(0xc19a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0xc19c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc19a));
        EXPECT(0xdb, gbc.readMem(0xc19b));
        // CB DB 013E
        gbc.setState(0xb2a2, 0xc81e, 0x67e0, 0x61ab, 0x2e4, 0xe974, 0x1, 0x0);
        gbc.writeMem(0xb2a2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc81e, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2a2));
        EXPECT(0xdb, gbc.readMem(0xb2a3));
        // CB DB 0140
        gbc.setState(0xac12, 0xaaf9, 0x22b0, 0xecd3, 0x6a61, 0xb025, 0x1, 0x1);
        gbc.writeMem(0xac12, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xaaf9, gbc.sp());
        EXPECT(0xac14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac12));
        EXPECT(0xdb, gbc.readMem(0xac13));
        // CB DB 0141
        gbc.setState(0x403f, 0x2eec, 0xb40, 0x22b1, 0x1691, 0xbb98, 0x0, 0x1);
        gbc.writeMem(0x403f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2eec, gbc.sp());
        EXPECT(0x4041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0142
        gbc.setState(0xe63b, 0xe7a2, 0x74a0, 0xb9cf, 0xe4b5, 0x1b16, 0x0, 0x0);
        gbc.writeMem(0xe63b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe7a2, gbc.sp());
        EXPECT(0xe63d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63b));
        EXPECT(0xdb, gbc.readMem(0xe63c));
        // CB DB 0143
        gbc.setState(0x4af2, 0xf150, 0xea30, 0x7b11, 0x90ff, 0xf69a, 0x1, 0x1);
        gbc.writeMem(0x4af2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf150, gbc.sp());
        EXPECT(0x4af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0144
        gbc.setState(0x9bef, 0x812c, 0x8070, 0xe8a6, 0x5119, 0x8194, 0x1, 0x0);
        gbc.writeMem(0x9bef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x812c, gbc.sp());
        EXPECT(0x9bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bef));
        EXPECT(0xdb, gbc.readMem(0x9bf0));
        // CB DB 0145
        gbc.setState(0x629, 0xbdf5, 0x9330, 0x1a1, 0x3037, 0xc9b7, 0x1, 0x1);
        gbc.writeMem(0x629, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xbdf5, gbc.sp());
        EXPECT(0x62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0146
        gbc.setState(0x6e45, 0xb8cb, 0x8820, 0x8bf6, 0x562b, 0x184b, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb8cb, gbc.sp());
        EXPECT(0x6e47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0147
        gbc.setState(0xe102, 0xe556, 0x1250, 0xf7a6, 0x8e36, 0x6946, 0x1, 0x1);
        gbc.writeMem(0xe102, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0xe104, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe102));
        EXPECT(0xdb, gbc.readMem(0xe103));
        // CB DB 0148
        gbc.setState(0x32b0, 0xbb01, 0x520, 0xd39b, 0x4180, 0xd9ff, 0x1, 0x1);
        gbc.writeMem(0x32b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbb01, gbc.sp());
        EXPECT(0x32b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0149
        gbc.setState(0x9ff, 0xdb8b, 0xab40, 0xd8e, 0x68d1, 0xcbe1, 0x1, 0x1);
        gbc.writeMem(0x9ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdb8b, gbc.sp());
        EXPECT(0xa01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 014A
        gbc.setState(0x2461, 0xb176, 0x4790, 0x22e6, 0x1aeb, 0xfefb, 0x0, 0x1);
        gbc.writeMem(0x2461, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb176, gbc.sp());
        EXPECT(0x2463, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 014B
        gbc.setState(0x792f, 0x13c2, 0xc540, 0x7f99, 0x788b, 0xeca3, 0x0, 0x0);
        gbc.writeMem(0x792f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x13c2, gbc.sp());
        EXPECT(0x7931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 014C
        gbc.setState(0xe8ee, 0x5d87, 0x9560, 0x4b19, 0xecbe, 0x3854, 0x0, 0x0);
        gbc.writeMem(0xe8ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5d87, gbc.sp());
        EXPECT(0xe8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ee));
        EXPECT(0xdb, gbc.readMem(0xe8ef));
        // CB DB 014D
        gbc.setState(0xaf80, 0x981b, 0x9a90, 0x5baf, 0x96a6, 0x11a7, 0x1, 0x1);
        gbc.writeMem(0xaf80, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x981b, gbc.sp());
        EXPECT(0xaf82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf80));
        EXPECT(0xdb, gbc.readMem(0xaf81));
        // CB DB 014E
        gbc.setState(0xd793, 0x9b91, 0xa080, 0x52a5, 0xd88d, 0x4a7d, 0x1, 0x1);
        gbc.writeMem(0xd793, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x9b91, gbc.sp());
        EXPECT(0xd795, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd793));
        EXPECT(0xdb, gbc.readMem(0xd794));
        // CB DB 014F
        gbc.setState(0x5da4, 0x510e, 0xba70, 0x724a, 0xc744, 0xea38, 0x1, 0x0);
        gbc.writeMem(0x5da4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0x5da6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0150
        gbc.setState(0x5ca3, 0x73a5, 0xfd90, 0x213d, 0x2641, 0xe0ef, 0x1, 0x0);
        gbc.writeMem(0x5ca3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x73a5, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0151
        gbc.setState(0x32aa, 0xe2dd, 0xfa70, 0x8069, 0x4518, 0xcb6e, 0x0, 0x0);
        gbc.writeMem(0x32aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe2dd, gbc.sp());
        EXPECT(0x32ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0152
        gbc.setState(0xe942, 0xf95b, 0x6b60, 0xcb32, 0xabb5, 0x7aca, 0x1, 0x1);
        gbc.writeMem(0xe942, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe942));
        EXPECT(0xdb, gbc.readMem(0xe943));
        // CB DB 0153
        gbc.setState(0xc75c, 0x34fd, 0x4b40, 0xea94, 0xc5fc, 0xbac4, 0x1, 0x1);
        gbc.writeMem(0xc75c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0xc75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75c));
        EXPECT(0xdb, gbc.readMem(0xc75d));
        // CB DB 0154
        gbc.setState(0x1768, 0xf487, 0x5390, 0x949f, 0x33a1, 0x4b4a, 0x0, 0x1);
        gbc.writeMem(0x1768, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf487, gbc.sp());
        EXPECT(0x176a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0155
        gbc.setState(0x84b9, 0x12af, 0x6c70, 0x86fa, 0xf24, 0xac36, 0x0, 0x1);
        gbc.writeMem(0x84b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x12af, gbc.sp());
        EXPECT(0x84bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84b9));
        EXPECT(0xdb, gbc.readMem(0x84ba));
        // CB DB 0156
        gbc.setState(0x7a58, 0x5d1e, 0x9ef0, 0x8f43, 0x7475, 0xbf25, 0x0, 0x1);
        gbc.writeMem(0x7a58, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5d1e, gbc.sp());
        EXPECT(0x7a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0157
        gbc.setState(0xc765, 0x6edb, 0xbac0, 0x7a4, 0x86d0, 0x5d06, 0x0, 0x1);
        gbc.writeMem(0xc765, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6edb, gbc.sp());
        EXPECT(0xc767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc765));
        EXPECT(0xdb, gbc.readMem(0xc766));
        // CB DB 0158
        gbc.setState(0xba10, 0xc72e, 0x5990, 0xc0a9, 0x9191, 0x978e, 0x1, 0x0);
        gbc.writeMem(0xba10, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc72e, gbc.sp());
        EXPECT(0xba12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba10));
        EXPECT(0xdb, gbc.readMem(0xba11));
        // CB DB 0159
        gbc.setState(0x9f56, 0x4c5, 0x37a0, 0x5228, 0xfbfb, 0x3068, 0x0, 0x1);
        gbc.writeMem(0x9f56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x9f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f56));
        EXPECT(0xdb, gbc.readMem(0x9f57));
        // CB DB 015A
        gbc.setState(0x3c36, 0x3428, 0xda10, 0xbaad, 0xc6a8, 0x88c9, 0x0, 0x1);
        gbc.writeMem(0x3c36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x3428, gbc.sp());
        EXPECT(0x3c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 015B
        gbc.setState(0x53c1, 0x96ad, 0xce70, 0x661b, 0xffce, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x53c1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x96ad, gbc.sp());
        EXPECT(0x53c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 015C
        gbc.setState(0xaf2e, 0x1176, 0x46b0, 0x7da3, 0x8f39, 0x4c43, 0x1, 0x1);
        gbc.writeMem(0xaf2e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1176, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf2e));
        EXPECT(0xdb, gbc.readMem(0xaf2f));
        // CB DB 015D
        gbc.setState(0x7ac6, 0xf3d8, 0x8ba0, 0x1acd, 0x5c4, 0xcba6, 0x1, 0x0);
        gbc.writeMem(0x7ac6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xf3d8, gbc.sp());
        EXPECT(0x7ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 015E
        gbc.setState(0xebc, 0xb7f9, 0x2370, 0xbcf1, 0x5b0e, 0xa4d7, 0x1, 0x1);
        gbc.writeMem(0xebc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb7f9, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 015F
        gbc.setState(0x758f, 0xeebb, 0x5d60, 0x98a6, 0x69fb, 0x97ad, 0x0, 0x1);
        gbc.writeMem(0x758f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xeebb, gbc.sp());
        EXPECT(0x7591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0160
        gbc.setState(0xab38, 0xde5a, 0xb6d0, 0x1af0, 0x3999, 0x812, 0x0, 0x0);
        gbc.writeMem(0xab38, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xde5a, gbc.sp());
        EXPECT(0xab3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab38));
        EXPECT(0xdb, gbc.readMem(0xab39));
        // CB DB 0161
        gbc.setState(0x7cc9, 0x977, 0x3740, 0x1d02, 0xef95, 0xb811, 0x0, 0x1);
        gbc.writeMem(0x7cc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x7ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0162
        gbc.setState(0x1371, 0xd77f, 0x4f00, 0x2b5e, 0xb70c, 0x49cf, 0x0, 0x0);
        gbc.writeMem(0x1371, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd77f, gbc.sp());
        EXPECT(0x1373, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0163
        gbc.setState(0x7294, 0xd069, 0xaf80, 0x62f2, 0xf0e8, 0x1ef1, 0x1, 0x1);
        gbc.writeMem(0x7294, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0x7296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0164
        gbc.setState(0xde6c, 0xe777, 0xbf60, 0xc955, 0xdabb, 0xfe6c, 0x0, 0x1);
        gbc.writeMem(0xde6c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6c));
        EXPECT(0xdb, gbc.readMem(0xde6d));
        // CB DB 0165
        gbc.setState(0x2c4, 0x3f12, 0xf690, 0x7177, 0xb21a, 0xdf5f, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3f12, gbc.sp());
        EXPECT(0x2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0166
        gbc.setState(0x72b4, 0x60a8, 0x6850, 0x3c74, 0xa5f9, 0x34d8, 0x0, 0x1);
        gbc.writeMem(0x72b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x60a8, gbc.sp());
        EXPECT(0x72b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0167
        gbc.setState(0x41d5, 0x680e, 0x5150, 0x3e55, 0x3d62, 0x606, 0x0, 0x1);
        gbc.writeMem(0x41d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x680e, gbc.sp());
        EXPECT(0x41d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0168
        gbc.setState(0x4fea, 0x1b40, 0x3080, 0x318c, 0x9fa9, 0x88a9, 0x0, 0x1);
        gbc.writeMem(0x4fea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1b40, gbc.sp());
        EXPECT(0x4fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 016A
        gbc.setState(0x50cc, 0xc39f, 0x8c40, 0xbe86, 0x793, 0xd8ba, 0x1, 0x1);
        gbc.writeMem(0x50cc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc39f, gbc.sp());
        EXPECT(0x50ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 016C
        gbc.setState(0x97d0, 0x46c6, 0x4800, 0x74e0, 0x8fa0, 0xd6a7, 0x1, 0x0);
        gbc.writeMem(0x97d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0x97d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d0));
        EXPECT(0xdb, gbc.readMem(0x97d1));
        // CB DB 016D
        gbc.setState(0x53f0, 0x8c8d, 0xd000, 0x596, 0x8e3, 0x37c7, 0x1, 0x0);
        gbc.writeMem(0x53f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8c8d, gbc.sp());
        EXPECT(0x53f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 016E
        gbc.setState(0xa0eb, 0x506f, 0x4320, 0x9d21, 0x6552, 0x6e60, 0x0, 0x0);
        gbc.writeMem(0xa0eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x506f, gbc.sp());
        EXPECT(0xa0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0eb));
        EXPECT(0xdb, gbc.readMem(0xa0ec));
        // CB DB 016F
        gbc.setState(0x4707, 0x49b, 0x7d10, 0x3bff, 0x93d8, 0x89c5, 0x0, 0x0);
        gbc.writeMem(0x4707, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0x4709, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0170
        gbc.setState(0x4034, 0x36bc, 0x2b70, 0xcdfb, 0xb7ba, 0xb194, 0x1, 0x0);
        gbc.writeMem(0x4034, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x36bc, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0171
        gbc.setState(0x87f2, 0xa2ab, 0x4940, 0xe357, 0xb3e1, 0x57f8, 0x0, 0x0);
        gbc.writeMem(0x87f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa2ab, gbc.sp());
        EXPECT(0x87f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f2));
        EXPECT(0xdb, gbc.readMem(0x87f3));
        // CB DB 0172
        gbc.setState(0x6426, 0xb12, 0x9b30, 0xf6c4, 0xf841, 0x5863, 0x1, 0x1);
        gbc.writeMem(0x6426, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb12, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0173
        gbc.setState(0x579b, 0x619, 0xc550, 0xa86, 0x5ef0, 0x51b5, 0x1, 0x0);
        gbc.writeMem(0x579b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x619, gbc.sp());
        EXPECT(0x579d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0174
        gbc.setState(0xacc, 0x819d, 0xc3e0, 0xe007, 0x5510, 0x7368, 0x1, 0x1);
        gbc.writeMem(0xacc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x819d, gbc.sp());
        EXPECT(0xace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0175
        gbc.setState(0x5904, 0x6e78, 0x4c10, 0xed59, 0xa67e, 0x8ec4, 0x0, 0x1);
        gbc.writeMem(0x5904, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0x5906, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0176
        gbc.setState(0x8eba, 0xb2a8, 0x9770, 0x88bb, 0xa6c5, 0xafd4, 0x0, 0x1);
        gbc.writeMem(0x8eba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb2a8, gbc.sp());
        EXPECT(0x8ebc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eba));
        EXPECT(0xdb, gbc.readMem(0x8ebb));
        // CB DB 0177
        gbc.setState(0xc228, 0x3598, 0xc6b0, 0x6374, 0x319e, 0xcf18, 0x1, 0x0);
        gbc.writeMem(0xc228, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3598, gbc.sp());
        EXPECT(0xc22a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc228));
        EXPECT(0xdb, gbc.readMem(0xc229));
        // CB DB 0178
        gbc.setState(0x8315, 0x6ac5, 0x5120, 0x234a, 0xe74, 0x5ee3, 0x1, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6ac5, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0xdb, gbc.readMem(0x8316));
        // CB DB 0179
        gbc.setState(0x6cd6, 0xc81, 0xfad0, 0xb9ec, 0x580d, 0xd091, 0x1, 0x1);
        gbc.writeMem(0x6cd6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc81, gbc.sp());
        EXPECT(0x6cd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 017A
        gbc.setState(0x78e8, 0x5402, 0x94c0, 0x19f5, 0x1b8f, 0x5775, 0x0, 0x0);
        gbc.writeMem(0x78e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5402, gbc.sp());
        EXPECT(0x78ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 017B
        gbc.setState(0x978d, 0x201c, 0x26c0, 0x9ba0, 0xde7a, 0xf067, 0x0, 0x1);
        gbc.writeMem(0x978d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x201c, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x978d));
        EXPECT(0xdb, gbc.readMem(0x978e));
        // CB DB 017C
        gbc.setState(0xc1eb, 0x1aab, 0x7440, 0xc2e9, 0xd194, 0x2f88, 0x1, 0x0);
        gbc.writeMem(0xc1eb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1aab, gbc.sp());
        EXPECT(0xc1ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1eb));
        EXPECT(0xdb, gbc.readMem(0xc1ec));
        // CB DB 017D
        gbc.setState(0x5db4, 0x8ff3, 0x1ed0, 0xd9df, 0x19a5, 0xc8a, 0x1, 0x0);
        gbc.writeMem(0x5db4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8ff3, gbc.sp());
        EXPECT(0x5db6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 017E
        gbc.setState(0xe6bf, 0xf592, 0xad70, 0x1d34, 0xd059, 0x9b0a, 0x1, 0x1);
        gbc.writeMem(0xe6bf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf592, gbc.sp());
        EXPECT(0xe6c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6bf));
        EXPECT(0xdb, gbc.readMem(0xe6c0));
        // CB DB 017F
        gbc.setState(0x51d9, 0xd7ec, 0x18f0, 0xd9f3, 0x327f, 0x86c8, 0x1, 0x1);
        gbc.writeMem(0x51d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd7ec, gbc.sp());
        EXPECT(0x51db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0180
        gbc.setState(0xaf71, 0xc86, 0x100, 0x9c66, 0xd1a8, 0x2a7d, 0x0, 0x1);
        gbc.writeMem(0xaf71, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc86, gbc.sp());
        EXPECT(0xaf73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf71));
        EXPECT(0xdb, gbc.readMem(0xaf72));
        // CB DB 0182
        gbc.setState(0x1c66, 0xc661, 0x87c0, 0x4b0e, 0xc967, 0xc14, 0x0, 0x1);
        gbc.writeMem(0x1c66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc661, gbc.sp());
        EXPECT(0x1c68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0184
        gbc.setState(0x75ba, 0x43db, 0x6720, 0xb876, 0xccc0, 0xca71, 0x1, 0x0);
        gbc.writeMem(0x75ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x43db, gbc.sp());
        EXPECT(0x75bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0185
        gbc.setState(0xd4f4, 0xc0cf, 0x8470, 0x1264, 0x76c, 0xf352, 0x1, 0x1);
        gbc.writeMem(0xd4f4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc0cf, gbc.sp());
        EXPECT(0xd4f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4f4));
        EXPECT(0xdb, gbc.readMem(0xd4f5));
        // CB DB 0186
        gbc.setState(0x5ae8, 0xbecc, 0xebd0, 0xccc3, 0x1bcd, 0xc655, 0x0, 0x1);
        gbc.writeMem(0x5ae8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0x5aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0187
        gbc.setState(0xe37a, 0xf575, 0xea0, 0xb72, 0x1de2, 0x6a06, 0x1, 0x1);
        gbc.writeMem(0xe37a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf575, gbc.sp());
        EXPECT(0xe37c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe37a));
        EXPECT(0xdb, gbc.readMem(0xe37b));
        // CB DB 0188
        gbc.setState(0x9c7c, 0x5c2, 0x5690, 0x79d2, 0x4b60, 0x9d89, 0x0, 0x0);
        gbc.writeMem(0x9c7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5c2, gbc.sp());
        EXPECT(0x9c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7c));
        EXPECT(0xdb, gbc.readMem(0x9c7d));
        // CB DB 0189
        gbc.setState(0x5b25, 0xcc54, 0x47e0, 0xbb4a, 0x5c60, 0xfcb0, 0x1, 0x0);
        gbc.writeMem(0x5b25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xcc54, gbc.sp());
        EXPECT(0x5b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 018A
        gbc.setState(0xe47a, 0x87ad, 0xf400, 0x8531, 0xb63f, 0xbbd9, 0x1, 0x0);
        gbc.writeMem(0xe47a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x87ad, gbc.sp());
        EXPECT(0xe47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47a));
        EXPECT(0xdb, gbc.readMem(0xe47b));
        // CB DB 018B
        gbc.setState(0x24c2, 0xb34d, 0x4730, 0x4e08, 0x3d23, 0xa43c, 0x0, 0x0);
        gbc.writeMem(0x24c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xb34d, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 018C
        gbc.setState(0x3aab, 0x550c, 0x6c40, 0x8443, 0xda43, 0x57a8, 0x1, 0x0);
        gbc.writeMem(0x3aab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x550c, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 018D
        gbc.setState(0xc90c, 0x15e6, 0x89d0, 0xdb83, 0x21ab, 0x7c58, 0x1, 0x1);
        gbc.writeMem(0xc90c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x15e6, gbc.sp());
        EXPECT(0xc90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc90c));
        EXPECT(0xdb, gbc.readMem(0xc90d));
        // CB DB 018E
        gbc.setState(0x1ceb, 0x5482, 0xb800, 0x84f3, 0xc9be, 0x18ad, 0x1, 0x0);
        gbc.writeMem(0x1ceb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5482, gbc.sp());
        EXPECT(0x1ced, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 018F
        gbc.setState(0x38bb, 0xa99f, 0x29d0, 0xdc44, 0xed52, 0x63b8, 0x1, 0x0);
        gbc.writeMem(0x38bb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa99f, gbc.sp());
        EXPECT(0x38bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0190
        gbc.setState(0xbc84, 0xd2c9, 0xd690, 0x5b63, 0xacc6, 0x4b94, 0x1, 0x0);
        gbc.writeMem(0xbc84, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd2c9, gbc.sp());
        EXPECT(0xbc86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc84));
        EXPECT(0xdb, gbc.readMem(0xbc85));
        // CB DB 0191
        gbc.setState(0x9ad8, 0x360, 0xa890, 0x5c4, 0xff76, 0xfa6, 0x0, 0x0);
        gbc.writeMem(0x9ad8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x360, gbc.sp());
        EXPECT(0x9ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad8));
        EXPECT(0xdb, gbc.readMem(0x9ad9));
        // CB DB 0192
        gbc.setState(0xefd5, 0x2ef9, 0x34a0, 0x95aa, 0x8115, 0xc374, 0x0, 0x1);
        gbc.writeMem(0xefd5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ef9, gbc.sp());
        EXPECT(0xefd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd5));
        EXPECT(0xdb, gbc.readMem(0xefd6));
        // CB DB 0193
        gbc.setState(0xe31a, 0x4cde, 0xfb0, 0x447b, 0x2783, 0x17f3, 0x1, 0x0);
        gbc.writeMem(0xe31a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4cde, gbc.sp());
        EXPECT(0xe31c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31a));
        EXPECT(0xdb, gbc.readMem(0xe31b));
        // CB DB 0194
        gbc.setState(0x354f, 0xd00f, 0x9410, 0x5d9f, 0x1c0c, 0x4670, 0x1, 0x0);
        gbc.writeMem(0x354f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd00f, gbc.sp());
        EXPECT(0x3551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0195
        gbc.setState(0x36ee, 0x1cba, 0x990, 0xda57, 0x97e8, 0x87cf, 0x1, 0x0);
        gbc.writeMem(0x36ee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1cba, gbc.sp());
        EXPECT(0x36f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0196
        gbc.setState(0x1866, 0xe4b, 0x4b0, 0xad82, 0x2545, 0x9942, 0x0, 0x1);
        gbc.writeMem(0x1866, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe4b, gbc.sp());
        EXPECT(0x1868, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0197
        gbc.setState(0x151e, 0x5b5, 0x7c90, 0xff87, 0x117, 0x93ac, 0x1, 0x1);
        gbc.writeMem(0x151e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5b5, gbc.sp());
        EXPECT(0x1520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0198
        gbc.setState(0x3e01, 0x49a5, 0x4e20, 0x1b3, 0x7b6c, 0x8fb7, 0x1, 0x1);
        gbc.writeMem(0x3e01, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x49a5, gbc.sp());
        EXPECT(0x3e03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0199
        gbc.setState(0xaf8b, 0x87e3, 0xfe40, 0x8ba0, 0x490a, 0x82a2, 0x0, 0x1);
        gbc.writeMem(0xaf8b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x87e3, gbc.sp());
        EXPECT(0xaf8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8b));
        EXPECT(0xdb, gbc.readMem(0xaf8c));
        // CB DB 019A
        gbc.setState(0x8422, 0x9063, 0xfda0, 0x6013, 0xa9b2, 0x8c45, 0x0, 0x0);
        gbc.writeMem(0x8422, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9063, gbc.sp());
        EXPECT(0x8424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8422));
        EXPECT(0xdb, gbc.readMem(0x8423));
        // CB DB 019B
        gbc.setState(0x3113, 0x4768, 0xe8a0, 0xfc30, 0xc94c, 0x6d6e, 0x1, 0x1);
        gbc.writeMem(0x3113, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4768, gbc.sp());
        EXPECT(0x3115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 019C
        gbc.setState(0xafaa, 0xbaef, 0x5890, 0xeeff, 0x24b4, 0x8282, 0x1, 0x0);
        gbc.writeMem(0xafaa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbaef, gbc.sp());
        EXPECT(0xafac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafaa));
        EXPECT(0xdb, gbc.readMem(0xafab));
        // CB DB 019D
        gbc.setState(0x3926, 0x46c6, 0x8410, 0x8783, 0x155f, 0x809e, 0x0, 0x1);
        gbc.writeMem(0x3926, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0x3928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 019E
        gbc.setState(0x6789, 0x3b46, 0x78f0, 0x48c8, 0x18b3, 0xcf6b, 0x1, 0x0);
        gbc.writeMem(0x6789, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3b46, gbc.sp());
        EXPECT(0x678b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 019F
        gbc.setState(0xbf03, 0x1d3d, 0x95a0, 0xb727, 0x4eb1, 0x84e9, 0x1, 0x0);
        gbc.writeMem(0xbf03, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1d3d, gbc.sp());
        EXPECT(0xbf05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf03));
        EXPECT(0xdb, gbc.readMem(0xbf04));
        // CB DB 01A0
        gbc.setState(0xdaf, 0x314a, 0x4630, 0x42ff, 0xdb55, 0x2d8c, 0x1, 0x0);
        gbc.writeMem(0xdaf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x314a, gbc.sp());
        EXPECT(0xdb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01A1
        gbc.setState(0xce11, 0xbdf, 0xf600, 0x784d, 0xa15e, 0x573e, 0x1, 0x0);
        gbc.writeMem(0xce11, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbdf, gbc.sp());
        EXPECT(0xce13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce11));
        EXPECT(0xdb, gbc.readMem(0xce12));
        // CB DB 01A2
        gbc.setState(0x170d, 0xe08a, 0x9620, 0xe16c, 0xa6b9, 0xe57a, 0x1, 0x1);
        gbc.writeMem(0x170d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0x170f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01A3
        gbc.setState(0xd02e, 0x2418, 0x2660, 0xeec3, 0xd5a, 0xe8ce, 0x1, 0x0);
        gbc.writeMem(0xd02e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2418, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02e));
        EXPECT(0xdb, gbc.readMem(0xd02f));
        // CB DB 01A4
        gbc.setState(0x64c1, 0x459d, 0x1c80, 0x469b, 0x3f84, 0x5b20, 0x1, 0x1);
        gbc.writeMem(0x64c1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x459d, gbc.sp());
        EXPECT(0x64c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01A5
        gbc.setState(0xabeb, 0x31c2, 0xab20, 0x7d4a, 0x7b00, 0x5e23, 0x0, 0x1);
        gbc.writeMem(0xabeb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x31c2, gbc.sp());
        EXPECT(0xabed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabeb));
        EXPECT(0xdb, gbc.readMem(0xabec));
        // CB DB 01A6
        gbc.setState(0xd333, 0xc643, 0x8020, 0x8aa3, 0x98a1, 0xa02d, 0x1, 0x1);
        gbc.writeMem(0xd333, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc643, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd333));
        EXPECT(0xdb, gbc.readMem(0xd334));
        // CB DB 01A7
        gbc.setState(0x8ce3, 0xbe7f, 0x8250, 0x505c, 0xc953, 0x1d84, 0x1, 0x1);
        gbc.writeMem(0x8ce3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbe7f, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ce3));
        EXPECT(0xdb, gbc.readMem(0x8ce4));
        // CB DB 01A8
        gbc.setState(0x7b43, 0x4a70, 0x3b10, 0xf89, 0x79dd, 0xf2c1, 0x0, 0x1);
        gbc.writeMem(0x7b43, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a70, gbc.sp());
        EXPECT(0x7b45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01A9
        gbc.setState(0xdaf1, 0x2dcf, 0xfbd0, 0x5915, 0x7c29, 0x793e, 0x0, 0x1);
        gbc.writeMem(0xdaf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0xdaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf1));
        EXPECT(0xdb, gbc.readMem(0xdaf2));
        // CB DB 01AA
        gbc.setState(0x85ed, 0xf41c, 0x5bd0, 0x9879, 0x6033, 0xffcf, 0x0, 0x1);
        gbc.writeMem(0x85ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf41c, gbc.sp());
        EXPECT(0x85ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ed));
        EXPECT(0xdb, gbc.readMem(0x85ee));
        // CB DB 01AB
        gbc.setState(0x7e68, 0x8ff8, 0x9a50, 0x4b3, 0x3a95, 0x9b64, 0x0, 0x1);
        gbc.writeMem(0x7e68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8ff8, gbc.sp());
        EXPECT(0x7e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01AC
        gbc.setState(0x6526, 0x376a, 0xd120, 0x8848, 0x3d5a, 0xf0c9, 0x0, 0x0);
        gbc.writeMem(0x6526, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x376a, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01AD
        gbc.setState(0x88b9, 0xd9ca, 0xbe70, 0x8bf5, 0xc9df, 0x3239, 0x1, 0x1);
        gbc.writeMem(0x88b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd9ca, gbc.sp());
        EXPECT(0x88bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b9));
        EXPECT(0xdb, gbc.readMem(0x88ba));
        // CB DB 01AE
        gbc.setState(0x9572, 0xa3, 0xce50, 0xd515, 0x7a75, 0x4809, 0x0, 0x1);
        gbc.writeMem(0x9572, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa3, gbc.sp());
        EXPECT(0x9574, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9572));
        EXPECT(0xdb, gbc.readMem(0x9573));
        // CB DB 01AF
        gbc.setState(0x8d3c, 0x273, 0xbfa0, 0x83d0, 0xfbad, 0xbd57, 0x1, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x8d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d3c));
        EXPECT(0xdb, gbc.readMem(0x8d3d));
        // CB DB 01B0
        gbc.setState(0x718b, 0x9fe2, 0x2e10, 0xb0d4, 0x1321, 0x4964, 0x0, 0x1);
        gbc.writeMem(0x718b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9fe2, gbc.sp());
        EXPECT(0x718d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01B1
        gbc.setState(0x23f3, 0x3572, 0x7d40, 0xad97, 0x9e14, 0xa7b9, 0x0, 0x1);
        gbc.writeMem(0x23f3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01B2
        gbc.setState(0x97c9, 0x559f, 0xbd70, 0x9462, 0x92e5, 0x2b3, 0x0, 0x1);
        gbc.writeMem(0x97c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x559f, gbc.sp());
        EXPECT(0x97cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c9));
        EXPECT(0xdb, gbc.readMem(0x97ca));
        // CB DB 01B3
        gbc.setState(0x6408, 0x852d, 0x1c40, 0xfa7c, 0x539f, 0xa271, 0x0, 0x1);
        gbc.writeMem(0x6408, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x852d, gbc.sp());
        EXPECT(0x640a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01B4
        gbc.setState(0x5391, 0xd67b, 0x3950, 0x65c7, 0xfc7b, 0xf84b, 0x1, 0x1);
        gbc.writeMem(0x5391, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd67b, gbc.sp());
        EXPECT(0x5393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01B5
        gbc.setState(0xcd5f, 0xd8dc, 0x5090, 0x32f4, 0x6fad, 0x76fb, 0x0, 0x0);
        gbc.writeMem(0xcd5f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd8dc, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5f));
        EXPECT(0xdb, gbc.readMem(0xcd60));
        // CB DB 01B6
        gbc.setState(0x717d, 0x8ad, 0xb660, 0xb250, 0x591c, 0xebba, 0x1, 0x1);
        gbc.writeMem(0x717d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8ad, gbc.sp());
        EXPECT(0x717f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01B7
        gbc.setState(0xc761, 0x54d1, 0x94a0, 0xd319, 0xc8e8, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0xc761, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc761));
        EXPECT(0xdb, gbc.readMem(0xc762));
        // CB DB 01B8
        gbc.setState(0x4aa1, 0x3cb4, 0x7c50, 0xddfc, 0xd1ba, 0x874b, 0x0, 0x1);
        gbc.writeMem(0x4aa1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3cb4, gbc.sp());
        EXPECT(0x4aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01B9
        gbc.setState(0x9f08, 0x5778, 0xf5e0, 0x7724, 0x85f7, 0xeca1, 0x0, 0x0);
        gbc.writeMem(0x9f08, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5778, gbc.sp());
        EXPECT(0x9f0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f08));
        EXPECT(0xdb, gbc.readMem(0x9f09));
        // CB DB 01BA
        gbc.setState(0x3ac4, 0x12c2, 0x2810, 0x2613, 0x2185, 0x34be, 0x1, 0x0);
        gbc.writeMem(0x3ac4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x12c2, gbc.sp());
        EXPECT(0x3ac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01BB
        gbc.setState(0x2efc, 0x3a10, 0xbcc0, 0xfae, 0xa08e, 0x92cb, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3a10, gbc.sp());
        EXPECT(0x2efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01BC
        gbc.setState(0xc527, 0x4090, 0x6aa0, 0x549b, 0xea1, 0x5dd3, 0x0, 0x0);
        gbc.writeMem(0xc527, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4090, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc527));
        EXPECT(0xdb, gbc.readMem(0xc528));
        // CB DB 01BD
        gbc.setState(0x952c, 0xc236, 0x5610, 0x3c30, 0xf918, 0xcb9b, 0x0, 0x1);
        gbc.writeMem(0x952c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc236, gbc.sp());
        EXPECT(0x952e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952c));
        EXPECT(0xdb, gbc.readMem(0x952d));
        // CB DB 01BE
        gbc.setState(0xe06f, 0x7a6d, 0x48e0, 0xc34b, 0xa1a1, 0x3d9f, 0x1, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x7a6d, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06f));
        EXPECT(0xdb, gbc.readMem(0xe070));
        // CB DB 01BF
        gbc.setState(0x9e65, 0x801e, 0x2e70, 0xab80, 0x77fa, 0x6025, 0x0, 0x0);
        gbc.writeMem(0x9e65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x801e, gbc.sp());
        EXPECT(0x9e67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e65));
        EXPECT(0xdb, gbc.readMem(0x9e66));
        // CB DB 01C0
        gbc.setState(0xa0da, 0x21ac, 0xa030, 0xc530, 0xb3, 0x2613, 0x0, 0x0);
        gbc.writeMem(0xa0da, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x21ac, gbc.sp());
        EXPECT(0xa0dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0da));
        EXPECT(0xdb, gbc.readMem(0xa0db));
        // CB DB 01C1
        gbc.setState(0x4f68, 0x686f, 0x2c60, 0x6f8a, 0xbc17, 0xf353, 0x0, 0x0);
        gbc.writeMem(0x4f68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x686f, gbc.sp());
        EXPECT(0x4f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01C2
        gbc.setState(0xbbbe, 0xfb2f, 0x5080, 0xc24b, 0x99e4, 0xbd05, 0x1, 0x1);
        gbc.writeMem(0xbbbe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfb2f, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbe));
        EXPECT(0xdb, gbc.readMem(0xbbbf));
        // CB DB 01C3
        gbc.setState(0x7a91, 0x49f, 0xd160, 0x9439, 0xfdfc, 0x8da2, 0x0, 0x0);
        gbc.writeMem(0x7a91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x49f, gbc.sp());
        EXPECT(0x7a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01C4
        gbc.setState(0x17e2, 0xc350, 0x9b90, 0xde91, 0x7da3, 0x2ee4, 0x1, 0x0);
        gbc.writeMem(0x17e2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x17e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01C5
        gbc.setState(0xf83, 0xb068, 0x6d20, 0x1e3a, 0x6470, 0x2a11, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb068, gbc.sp());
        EXPECT(0xf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01C6
        gbc.setState(0x273d, 0x2ff5, 0x53d0, 0x8231, 0x3b1f, 0x8bc3, 0x1, 0x1);
        gbc.writeMem(0x273d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2ff5, gbc.sp());
        EXPECT(0x273f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01C7
        gbc.setState(0xb02f, 0xd979, 0xaa90, 0x5722, 0x1809, 0x66a2, 0x1, 0x1);
        gbc.writeMem(0xb02f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd979, gbc.sp());
        EXPECT(0xb031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02f));
        EXPECT(0xdb, gbc.readMem(0xb030));
        // CB DB 01C8
        gbc.setState(0x2fc4, 0x80f2, 0x64b0, 0x9928, 0xddd3, 0x57a7, 0x0, 0x1);
        gbc.writeMem(0x2fc4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x80f2, gbc.sp());
        EXPECT(0x2fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01C9
        gbc.setState(0x5d9c, 0x73d5, 0x4ab0, 0xc4e3, 0xa3f0, 0x6629, 0x1, 0x1);
        gbc.writeMem(0x5d9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x73d5, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01CA
        gbc.setState(0x6935, 0x9757, 0xcce0, 0x6ac5, 0x589a, 0xa055, 0x0, 0x0);
        gbc.writeMem(0x6935, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9757, gbc.sp());
        EXPECT(0x6937, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01CB
        gbc.setState(0x2204, 0xf42d, 0xe3e0, 0x630b, 0xa5a, 0x1fee, 0x0, 0x0);
        gbc.writeMem(0x2204, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf42d, gbc.sp());
        EXPECT(0x2206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01CC
        gbc.setState(0x8cdd, 0x4c50, 0x4aa0, 0x8c4e, 0x982b, 0xd3f8, 0x1, 0x0);
        gbc.writeMem(0x8cdd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4c50, gbc.sp());
        EXPECT(0x8cdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cdd));
        EXPECT(0xdb, gbc.readMem(0x8cde));
        // CB DB 01CD
        gbc.setState(0x44f0, 0xb812, 0xa6f0, 0x4a50, 0x5ba6, 0x8ee6, 0x1, 0x1);
        gbc.writeMem(0x44f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb812, gbc.sp());
        EXPECT(0x44f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01CE
        gbc.setState(0xd5c9, 0xc606, 0xc70, 0x5b54, 0x2cdd, 0x498, 0x0, 0x1);
        gbc.writeMem(0xd5c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc606, gbc.sp());
        EXPECT(0xd5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c9));
        EXPECT(0xdb, gbc.readMem(0xd5ca));
        // CB DB 01D0
        gbc.setState(0xedc5, 0x231b, 0xbe20, 0xfbb1, 0x23c3, 0xc115, 0x1, 0x0);
        gbc.writeMem(0xedc5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x231b, gbc.sp());
        EXPECT(0xedc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedc5));
        EXPECT(0xdb, gbc.readMem(0xedc6));
        // CB DB 01D1
        gbc.setState(0xa7fb, 0x919c, 0xba60, 0xfa44, 0xd64d, 0x632, 0x1, 0x0);
        gbc.writeMem(0xa7fb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x919c, gbc.sp());
        EXPECT(0xa7fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fb));
        EXPECT(0xdb, gbc.readMem(0xa7fc));
        // CB DB 01D2
        gbc.setState(0x59fe, 0xb974, 0xb4c0, 0xfa2, 0xc323, 0xceed, 0x1, 0x0);
        gbc.writeMem(0x59fe, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb974, gbc.sp());
        EXPECT(0x5a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01D3
        gbc.setState(0xb544, 0x6d33, 0x4ae0, 0x5699, 0xa2c8, 0x9d06, 0x0, 0x0);
        gbc.writeMem(0xb544, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6d33, gbc.sp());
        EXPECT(0xb546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb544));
        EXPECT(0xdb, gbc.readMem(0xb545));
        // CB DB 01D4
        gbc.setState(0x32c9, 0x2ff3, 0x4ff0, 0x9763, 0xdbd1, 0x5956, 0x1, 0x0);
        gbc.writeMem(0x32c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2ff3, gbc.sp());
        EXPECT(0x32cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01D7
        gbc.setState(0x10ad, 0xeea3, 0x4ee0, 0xce1e, 0xfd94, 0x40d9, 0x1, 0x1);
        gbc.writeMem(0x10ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xeea3, gbc.sp());
        EXPECT(0x10af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01D8
        gbc.setState(0x342a, 0xe61, 0xf120, 0x37bd, 0xc89c, 0x162, 0x1, 0x0);
        gbc.writeMem(0x342a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe61, gbc.sp());
        EXPECT(0x342c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01DA
        gbc.setState(0x877, 0x4fcb, 0xe80, 0x6512, 0x2630, 0x1d9e, 0x1, 0x0);
        gbc.writeMem(0x877, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4fcb, gbc.sp());
        EXPECT(0x879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01DB
        gbc.setState(0x537b, 0xc5d8, 0xca70, 0xa89, 0xc8fa, 0xac74, 0x0, 0x0);
        gbc.writeMem(0x537b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xc5d8, gbc.sp());
        EXPECT(0x537d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01DC
        gbc.setState(0xb71e, 0x7cc4, 0x3530, 0x8c64, 0x8bdb, 0xea67, 0x0, 0x1);
        gbc.writeMem(0xb71e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7cc4, gbc.sp());
        EXPECT(0xb720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71e));
        EXPECT(0xdb, gbc.readMem(0xb71f));
        // CB DB 01DD
        gbc.setState(0x4277, 0x34f, 0x6690, 0x2945, 0xd4e5, 0xae8a, 0x0, 0x0);
        gbc.writeMem(0x4277, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34f, gbc.sp());
        EXPECT(0x4279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01DE
        gbc.setState(0x48d7, 0x51c0, 0xc710, 0x225f, 0xa496, 0xdb85, 0x0, 0x0);
        gbc.writeMem(0x48d7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x51c0, gbc.sp());
        EXPECT(0x48d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01DF
        gbc.setState(0x5591, 0xa050, 0x75e0, 0xe604, 0xebc9, 0xf59d, 0x1, 0x1);
        gbc.writeMem(0x5591, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xa050, gbc.sp());
        EXPECT(0x5593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01E0
        gbc.setState(0x4494, 0xd26b, 0x4540, 0x5fb0, 0x180d, 0x23b1, 0x1, 0x1);
        gbc.writeMem(0x4494, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd26b, gbc.sp());
        EXPECT(0x4496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01E1
        gbc.setState(0x7b0c, 0xd46f, 0x4e40, 0xb841, 0xefa6, 0xb027, 0x0, 0x0);
        gbc.writeMem(0x7b0c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd46f, gbc.sp());
        EXPECT(0x7b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01E2
        gbc.setState(0x9095, 0x870c, 0x57b0, 0xa072, 0x7461, 0xe294, 0x0, 0x0);
        gbc.writeMem(0x9095, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x870c, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9095));
        EXPECT(0xdb, gbc.readMem(0x9096));
        // CB DB 01E3
        gbc.setState(0x4507, 0x2d21, 0x1170, 0x8328, 0x36e1, 0xcaaa, 0x1, 0x1);
        gbc.writeMem(0x4507, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2d21, gbc.sp());
        EXPECT(0x4509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01E4
        gbc.setState(0x81b9, 0x328b, 0x1e30, 0x3e82, 0x3d8f, 0x2223, 0x1, 0x0);
        gbc.writeMem(0x81b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x328b, gbc.sp());
        EXPECT(0x81bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b9));
        EXPECT(0xdb, gbc.readMem(0x81ba));
        // CB DB 01E5
        gbc.setState(0x3534, 0xf1e6, 0xf290, 0x3cff, 0x8be3, 0x5811, 0x0, 0x0);
        gbc.writeMem(0x3534, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf1e6, gbc.sp());
        EXPECT(0x3536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01E6
        gbc.setState(0x1168, 0x22c7, 0xa670, 0x28d, 0x9336, 0x80fc, 0x0, 0x0);
        gbc.writeMem(0x1168, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x22c7, gbc.sp());
        EXPECT(0x116a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01E7
        gbc.setState(0x79aa, 0x39d9, 0x1c70, 0x6ebb, 0x442c, 0x3200, 0x1, 0x0);
        gbc.writeMem(0x79aa, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x39d9, gbc.sp());
        EXPECT(0x79ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01E8
        gbc.setState(0xb143, 0xbb13, 0xc00, 0xb82e, 0xa1e0, 0x1d0a, 0x1, 0x0);
        gbc.writeMem(0xb143, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0xb145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb143));
        EXPECT(0xdb, gbc.readMem(0xb144));
        // CB DB 01E9
        gbc.setState(0x5215, 0x8a67, 0x2d10, 0x91c, 0xb5ec, 0x87b5, 0x1, 0x1);
        gbc.writeMem(0x5215, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8a67, gbc.sp());
        EXPECT(0x5217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01EA
        gbc.setState(0xa777, 0xb0eb, 0xdea0, 0x6b63, 0xaf8, 0x6443, 0x0, 0x1);
        gbc.writeMem(0xa777, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb0eb, gbc.sp());
        EXPECT(0xa779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa777));
        EXPECT(0xdb, gbc.readMem(0xa778));
        // CB DB 01EB
        gbc.setState(0xd1a5, 0x60cb, 0xe0a0, 0x747b, 0x8c69, 0xe7bd, 0x0, 0x1);
        gbc.writeMem(0xd1a5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x60cb, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0xdb, gbc.readMem(0xd1a6));
        // CB DB 01EC
        gbc.setState(0x60dc, 0xe467, 0x56f0, 0xbbac, 0x8c3b, 0x98ab, 0x0, 0x0);
        gbc.writeMem(0x60dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe467, gbc.sp());
        EXPECT(0x60de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01ED
        gbc.setState(0xa10f, 0x3fcb, 0x3780, 0x17a6, 0xd6e7, 0x718e, 0x1, 0x1);
        gbc.writeMem(0xa10f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3fcb, gbc.sp());
        EXPECT(0xa111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10f));
        EXPECT(0xdb, gbc.readMem(0xa110));
        // CB DB 01EE
        gbc.setState(0xae53, 0x8095, 0xa4a0, 0xfb57, 0xa7b9, 0xcd31, 0x1, 0x0);
        gbc.writeMem(0xae53, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8095, gbc.sp());
        EXPECT(0xae55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae53));
        EXPECT(0xdb, gbc.readMem(0xae54));
        // CB DB 01EF
        gbc.setState(0x7993, 0xf87a, 0x52f0, 0xb9d, 0xcdf4, 0x58a1, 0x0, 0x0);
        gbc.writeMem(0x7993, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf87a, gbc.sp());
        EXPECT(0x7995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01F0
        gbc.setState(0x5659, 0xa48b, 0x4d10, 0x2dce, 0x3e58, 0xd559, 0x0, 0x1);
        gbc.writeMem(0x5659, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa48b, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01F1
        gbc.setState(0x166f, 0xb59d, 0x36b0, 0x24a, 0xbfa2, 0xea1a, 0x1, 0x1);
        gbc.writeMem(0x166f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb59d, gbc.sp());
        EXPECT(0x1671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01F2
        gbc.setState(0xc, 0x1cb5, 0x2560, 0x3f63, 0xe9f4, 0xbda3, 0x1, 0x0);
        gbc.writeMem(0xc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1cb5, gbc.sp());
        EXPECT(0xe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01F3
        gbc.setState(0x962a, 0x6c3b, 0xc0d0, 0x1ea8, 0x259d, 0xceef, 0x0, 0x0);
        gbc.writeMem(0x962a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6c3b, gbc.sp());
        EXPECT(0x962c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962a));
        EXPECT(0xdb, gbc.readMem(0x962b));
        // CB DB 01F4
        gbc.setState(0xcf65, 0xad9f, 0xda40, 0x2e7f, 0xb690, 0xe4c3, 0x1, 0x1);
        gbc.writeMem(0xcf65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xad9f, gbc.sp());
        EXPECT(0xcf67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf65));
        EXPECT(0xdb, gbc.readMem(0xcf66));
        // CB DB 01F5
        gbc.setState(0x5308, 0xab2c, 0xcd0, 0x4a7e, 0x4854, 0x4b51, 0x1, 0x1);
        gbc.writeMem(0x5308, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xab2c, gbc.sp());
        EXPECT(0x530a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01F6
        gbc.setState(0xdb88, 0xff47, 0xbbb0, 0x92aa, 0xc8bb, 0xef5, 0x0, 0x0);
        gbc.writeMem(0xdb88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xff47, gbc.sp());
        EXPECT(0xdb8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb88));
        EXPECT(0xdb, gbc.readMem(0xdb89));
        // CB DB 01F7
        gbc.setState(0x9c06, 0x6ea6, 0xb0d0, 0x2f22, 0x6d35, 0xfdcf, 0x0, 0x1);
        gbc.writeMem(0x9c06, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ea6, gbc.sp());
        EXPECT(0x9c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c06));
        EXPECT(0xdb, gbc.readMem(0x9c07));
        // CB DB 01F8
        gbc.setState(0xdf48, 0xa309, 0x58e0, 0x34f9, 0xdfe0, 0xba17, 0x1, 0x0);
        gbc.writeMem(0xdf48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa309, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf48));
        EXPECT(0xdb, gbc.readMem(0xdf49));
        // CB DB 01FA
        gbc.setState(0x474, 0xc1f0, 0xcc00, 0x7f0, 0x1e2b, 0x1d2b, 0x0, 0x1);
        gbc.writeMem(0x474, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc1f0, gbc.sp());
        EXPECT(0x476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01FB
        gbc.setState(0xc788, 0x9950, 0x4c50, 0x30cf, 0x5c5c, 0x4fe4, 0x1, 0x0);
        gbc.writeMem(0xc788, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0xc78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc788));
        EXPECT(0xdb, gbc.readMem(0xc789));
        // CB DB 01FC
        gbc.setState(0xb96, 0xe635, 0xe110, 0xf495, 0xad82, 0xbff6, 0x0, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe635, gbc.sp());
        EXPECT(0xb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 01FD
        gbc.setState(0xd5c5, 0x5923, 0x4fb0, 0x328c, 0xa784, 0xc79, 0x0, 0x0);
        gbc.writeMem(0xd5c5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5923, gbc.sp());
        EXPECT(0xd5c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5c5));
        EXPECT(0xdb, gbc.readMem(0xd5c6));
        // CB DB 01FE
        gbc.setState(0x45cb, 0x3452, 0x27a0, 0xda3, 0xa3b4, 0xd536, 0x0, 0x1);
        gbc.writeMem(0x45cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0x45cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 01FF
        gbc.setState(0x8586, 0x96d7, 0xe860, 0xe81f, 0xd83d, 0xa40a, 0x0, 0x1);
        gbc.writeMem(0x8586, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x8588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8586));
        EXPECT(0xdb, gbc.readMem(0x8587));
        // CB DB 0200
        gbc.setState(0xdd07, 0x3024, 0xdd0, 0x5730, 0xfd50, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0xdd07, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3024, gbc.sp());
        EXPECT(0xdd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd07));
        EXPECT(0xdb, gbc.readMem(0xdd08));
        // CB DB 0201
        gbc.setState(0x8254, 0x955c, 0x5020, 0xad7b, 0xd534, 0x40b6, 0x1, 0x1);
        gbc.writeMem(0x8254, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x955c, gbc.sp());
        EXPECT(0x8256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8254));
        EXPECT(0xdb, gbc.readMem(0x8255));
        // CB DB 0202
        gbc.setState(0x46f8, 0xa96e, 0x3980, 0x2fb, 0x2de6, 0x8485, 0x1, 0x0);
        gbc.writeMem(0x46f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa96e, gbc.sp());
        EXPECT(0x46fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0203
        gbc.setState(0xc8df, 0xafeb, 0x5a90, 0x9abe, 0xa600, 0x90aa, 0x1, 0x1);
        gbc.writeMem(0xc8df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xafeb, gbc.sp());
        EXPECT(0xc8e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8df));
        EXPECT(0xdb, gbc.readMem(0xc8e0));
        // CB DB 0204
        gbc.setState(0xe9b, 0x9150, 0xccd0, 0xe708, 0xabbd, 0xaa22, 0x1, 0x0);
        gbc.writeMem(0xe9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0xe9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0205
        gbc.setState(0xc550, 0xe18e, 0x4540, 0x10d, 0x773e, 0xaf54, 0x0, 0x0);
        gbc.writeMem(0xc550, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xe18e, gbc.sp());
        EXPECT(0xc552, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc550));
        EXPECT(0xdb, gbc.readMem(0xc551));
        // CB DB 0206
        gbc.setState(0x501f, 0x8a26, 0x4e90, 0xeba9, 0xc51b, 0x7921, 0x0, 0x0);
        gbc.writeMem(0x501f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8a26, gbc.sp());
        EXPECT(0x5021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0207
        gbc.setState(0x27e4, 0x801b, 0xde40, 0xa82e, 0x8245, 0x132, 0x0, 0x0);
        gbc.writeMem(0x27e4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x801b, gbc.sp());
        EXPECT(0x27e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0208
        gbc.setState(0x84af, 0xb78a, 0x2fa0, 0x6ad, 0x99ef, 0x24a8, 0x1, 0x0);
        gbc.writeMem(0x84af, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb78a, gbc.sp());
        EXPECT(0x84b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84af));
        EXPECT(0xdb, gbc.readMem(0x84b0));
        // CB DB 0209
        gbc.setState(0xaa5c, 0xeb0b, 0x72f0, 0xb279, 0xd3b1, 0xc4e8, 0x0, 0x0);
        gbc.writeMem(0xaa5c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xeb0b, gbc.sp());
        EXPECT(0xaa5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa5c));
        EXPECT(0xdb, gbc.readMem(0xaa5d));
        // CB DB 020A
        gbc.setState(0xcb7c, 0x614c, 0x8e00, 0x19ea, 0xf2c3, 0xa2c0, 0x0, 0x1);
        gbc.writeMem(0xcb7c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x614c, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7c));
        EXPECT(0xdb, gbc.readMem(0xcb7d));
        // CB DB 020B
        gbc.setState(0x8043, 0x8b45, 0xacf0, 0x16df, 0x4f9b, 0xd390, 0x0, 0x0);
        gbc.writeMem(0x8043, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8b45, gbc.sp());
        EXPECT(0x8045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8043));
        EXPECT(0xdb, gbc.readMem(0x8044));
        // CB DB 020C
        gbc.setState(0xd02e, 0x8954, 0xcfc0, 0x1805, 0xb61e, 0xda60, 0x1, 0x1);
        gbc.writeMem(0xd02e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8954, gbc.sp());
        EXPECT(0xd030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd02e));
        EXPECT(0xdb, gbc.readMem(0xd02f));
        // CB DB 020D
        gbc.setState(0x25de, 0xbb76, 0xb9a0, 0xc630, 0x6afa, 0x31, 0x1, 0x0);
        gbc.writeMem(0x25de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbb76, gbc.sp());
        EXPECT(0x25e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 020E
        gbc.setState(0x550b, 0x2a0c, 0x5f70, 0xa542, 0x48a9, 0x5bb, 0x1, 0x0);
        gbc.writeMem(0x550b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2a0c, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 020F
        gbc.setState(0x6c7, 0x8648, 0xf8c0, 0xc53a, 0x697a, 0x92a1, 0x0, 0x1);
        gbc.writeMem(0x6c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8648, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0210
        gbc.setState(0x4ecb, 0x4d3d, 0xd360, 0xb95c, 0x206e, 0x806f, 0x1, 0x1);
        gbc.writeMem(0x4ecb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4d3d, gbc.sp());
        EXPECT(0x4ecd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0211
        gbc.setState(0x2ed4, 0x7c6a, 0x1ed0, 0x62fb, 0x391b, 0xdc1f, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7c6a, gbc.sp());
        EXPECT(0x2ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0212
        gbc.setState(0x74bc, 0xeb86, 0x3d50, 0x1220, 0xc35a, 0xfc90, 0x1, 0x0);
        gbc.writeMem(0x74bc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeb86, gbc.sp());
        EXPECT(0x74be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0213
        gbc.setState(0xc1d5, 0x554b, 0xf620, 0xfa00, 0xccc0, 0xe234, 0x0, 0x1);
        gbc.writeMem(0xc1d5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x554b, gbc.sp());
        EXPECT(0xc1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1d5));
        EXPECT(0xdb, gbc.readMem(0xc1d6));
        // CB DB 0214
        gbc.setState(0x7d9f, 0xc199, 0xd050, 0x6a6e, 0x7fbe, 0x581, 0x1, 0x1);
        gbc.writeMem(0x7d9f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc199, gbc.sp());
        EXPECT(0x7da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0215
        gbc.setState(0x2167, 0x2a47, 0x7e60, 0x73d7, 0x2d96, 0x3e82, 0x0, 0x1);
        gbc.writeMem(0x2167, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2a47, gbc.sp());
        EXPECT(0x2169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0216
        gbc.setState(0x6cad, 0xab39, 0x560, 0xf190, 0xeed5, 0x528f, 0x1, 0x1);
        gbc.writeMem(0x6cad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xab39, gbc.sp());
        EXPECT(0x6caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0217
        gbc.setState(0xd0be, 0xc2c8, 0x9b60, 0xb2da, 0xa5b3, 0x58ab, 0x1, 0x0);
        gbc.writeMem(0xd0be, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0be));
        EXPECT(0xdb, gbc.readMem(0xd0bf));
        // CB DB 0218
        gbc.setState(0x4660, 0x170f, 0x64a0, 0x8ea2, 0x2f89, 0xe94b, 0x1, 0x0);
        gbc.writeMem(0x4660, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x170f, gbc.sp());
        EXPECT(0x4662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0219
        gbc.setState(0xefc0, 0x581c, 0xd020, 0x96c4, 0x90c3, 0xc47b, 0x1, 0x1);
        gbc.writeMem(0xefc0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x581c, gbc.sp());
        EXPECT(0xefc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefc0));
        EXPECT(0xdb, gbc.readMem(0xefc1));
        // CB DB 021A
        gbc.setState(0xc6d9, 0x3a32, 0x4c0, 0x7f0e, 0xb03b, 0x2bea, 0x0, 0x1);
        gbc.writeMem(0xc6d9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3a32, gbc.sp());
        EXPECT(0xc6db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d9));
        EXPECT(0xdb, gbc.readMem(0xc6da));
        // CB DB 021C
        gbc.setState(0xcf37, 0x3ae4, 0xb410, 0xaa0e, 0xc9c2, 0xaabe, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ae4, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf37));
        EXPECT(0xdb, gbc.readMem(0xcf38));
        // CB DB 021D
        gbc.setState(0xc090, 0x9345, 0x4240, 0xb54, 0xd7e6, 0x6f57, 0x1, 0x1);
        gbc.writeMem(0xc090, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9345, gbc.sp());
        EXPECT(0xc092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc090));
        EXPECT(0xdb, gbc.readMem(0xc091));
        // CB DB 021E
        gbc.setState(0xb05d, 0xc0a4, 0x8150, 0xeb8, 0xb131, 0x5b0e, 0x1, 0x1);
        gbc.writeMem(0xb05d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc0a4, gbc.sp());
        EXPECT(0xb05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05d));
        EXPECT(0xdb, gbc.readMem(0xb05e));
        // CB DB 021F
        gbc.setState(0xa11f, 0xe7df, 0xfab0, 0xfeb4, 0x8160, 0x855, 0x1, 0x0);
        gbc.writeMem(0xa11f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe7df, gbc.sp());
        EXPECT(0xa121, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa11f));
        EXPECT(0xdb, gbc.readMem(0xa120));
        // CB DB 0220
        gbc.setState(0x2add, 0x2ae0, 0x710, 0x1891, 0x1bc, 0xa2d2, 0x0, 0x1);
        gbc.writeMem(0x2add, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2ae0, gbc.sp());
        EXPECT(0x2adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0221
        gbc.setState(0x6fb9, 0xae6f, 0x6b80, 0x29f9, 0x5f36, 0xa6fa, 0x0, 0x0);
        gbc.writeMem(0x6fb9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xae6f, gbc.sp());
        EXPECT(0x6fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0222
        gbc.setState(0xd7db, 0x449e, 0xe1a0, 0xa343, 0xf8f, 0x749b, 0x1, 0x1);
        gbc.writeMem(0xd7db, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x449e, gbc.sp());
        EXPECT(0xd7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7db));
        EXPECT(0xdb, gbc.readMem(0xd7dc));
        // CB DB 0223
        gbc.setState(0x8809, 0x2fd5, 0xd6d0, 0xb244, 0xe90d, 0xd3ae, 0x1, 0x1);
        gbc.writeMem(0x8809, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2fd5, gbc.sp());
        EXPECT(0x880b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8809));
        EXPECT(0xdb, gbc.readMem(0x880a));
        // CB DB 0224
        gbc.setState(0x1b2a, 0xbef, 0xf8e0, 0x25e5, 0x79d2, 0xc52d, 0x1, 0x0);
        gbc.writeMem(0x1b2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbef, gbc.sp());
        EXPECT(0x1b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0225
        gbc.setState(0x9fa4, 0x407e, 0x950, 0x9dd0, 0x5701, 0x764f, 0x1, 0x1);
        gbc.writeMem(0x9fa4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x407e, gbc.sp());
        EXPECT(0x9fa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa4));
        EXPECT(0xdb, gbc.readMem(0x9fa5));
        // CB DB 0226
        gbc.setState(0x7a2b, 0x611a, 0x18a0, 0x5154, 0xa4aa, 0x7aaf, 0x1, 0x1);
        gbc.writeMem(0x7a2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x611a, gbc.sp());
        EXPECT(0x7a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0227
        gbc.setState(0x96b1, 0x9413, 0xd750, 0x4d6a, 0xb8a1, 0x7066, 0x1, 0x1);
        gbc.writeMem(0x96b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9413, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b1));
        EXPECT(0xdb, gbc.readMem(0x96b2));
        // CB DB 0228
        gbc.setState(0x46d8, 0xfe6a, 0xf80, 0xbe0d, 0xbda3, 0x6e36, 0x0, 0x1);
        gbc.writeMem(0x46d8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe6a, gbc.sp());
        EXPECT(0x46da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0229
        gbc.setState(0x208f, 0x8255, 0x5610, 0x7c32, 0x8403, 0x7ac4, 0x0, 0x1);
        gbc.writeMem(0x208f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8255, gbc.sp());
        EXPECT(0x2091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 022A
        gbc.setState(0x9bcb, 0x6fda, 0xc10, 0x3848, 0xde40, 0xfabb, 0x0, 0x0);
        gbc.writeMem(0x9bcb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6fda, gbc.sp());
        EXPECT(0x9bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bcb));
        EXPECT(0xdb, gbc.readMem(0x9bcc));
        // CB DB 022B
        gbc.setState(0x365f, 0x40f7, 0x8100, 0xe483, 0x33d3, 0x71a5, 0x0, 0x1);
        gbc.writeMem(0x365f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x40f7, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 022C
        gbc.setState(0x3ac, 0xac3a, 0x9300, 0x2f58, 0x4714, 0x7f1e, 0x1, 0x0);
        gbc.writeMem(0x3ac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xac3a, gbc.sp());
        EXPECT(0x3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 022D
        gbc.setState(0x6cd1, 0x9894, 0x9230, 0x494d, 0xb58d, 0x8b59, 0x0, 0x0);
        gbc.writeMem(0x6cd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9894, gbc.sp());
        EXPECT(0x6cd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 022E
        gbc.setState(0xec50, 0x4e97, 0xafc0, 0xe242, 0xfc6a, 0x4d3b, 0x0, 0x1);
        gbc.writeMem(0xec50, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4e97, gbc.sp());
        EXPECT(0xec52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec50));
        EXPECT(0xdb, gbc.readMem(0xec51));
        // CB DB 022F
        gbc.setState(0x153, 0x598d, 0xbb40, 0xa1e1, 0xf58, 0x2772, 0x1, 0x1);
        gbc.writeMem(0x153, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x598d, gbc.sp());
        EXPECT(0x155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0232
        gbc.setState(0xba3e, 0x8e1a, 0xf1d0, 0x825e, 0x3bf6, 0x569a, 0x1, 0x1);
        gbc.writeMem(0xba3e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8e1a, gbc.sp());
        EXPECT(0xba40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3e));
        EXPECT(0xdb, gbc.readMem(0xba3f));
        // CB DB 0233
        gbc.setState(0x34f2, 0xc2d9, 0xd830, 0x2118, 0x4777, 0x9be0, 0x0, 0x0);
        gbc.writeMem(0x34f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc2d9, gbc.sp());
        EXPECT(0x34f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0234
        gbc.setState(0x79c6, 0xdf1a, 0xfa00, 0xe255, 0x98ae, 0xb280, 0x0, 0x0);
        gbc.writeMem(0x79c6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdf1a, gbc.sp());
        EXPECT(0x79c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0235
        gbc.setState(0x7f74, 0xa09b, 0x9580, 0xcf43, 0x89ef, 0x4969, 0x0, 0x1);
        gbc.writeMem(0x7f74, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa09b, gbc.sp());
        EXPECT(0x7f76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0236
        gbc.setState(0x3ade, 0x5ef0, 0xaa70, 0x2fd1, 0x1d08, 0xa7e9, 0x1, 0x0);
        gbc.writeMem(0x3ade, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5ef0, gbc.sp());
        EXPECT(0x3ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0237
        gbc.setState(0x23e1, 0x153f, 0x4520, 0x1ac9, 0xeafa, 0xa065, 0x0, 0x1);
        gbc.writeMem(0x23e1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x153f, gbc.sp());
        EXPECT(0x23e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0238
        gbc.setState(0x7769, 0xc410, 0xf7a0, 0x8ce1, 0xb3a5, 0xe146, 0x0, 0x1);
        gbc.writeMem(0x7769, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0x776b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0239
        gbc.setState(0x1ca8, 0x99c, 0x6fa0, 0x743e, 0xa1c4, 0xc477, 0x1, 0x0);
        gbc.writeMem(0x1ca8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x99c, gbc.sp());
        EXPECT(0x1caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 023A
        gbc.setState(0xa5a1, 0x6473, 0x4840, 0xbc56, 0xffe4, 0x2450, 0x1, 0x0);
        gbc.writeMem(0xa5a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6473, gbc.sp());
        EXPECT(0xa5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a1));
        EXPECT(0xdb, gbc.readMem(0xa5a2));
        // CB DB 023B
        gbc.setState(0x5b00, 0xaf56, 0xddf0, 0x1d63, 0x8a5d, 0x65fc, 0x0, 0x1);
        gbc.writeMem(0x5b00, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xaf56, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 023C
        gbc.setState(0x4c9, 0xcf5d, 0x56a0, 0xf504, 0x566b, 0x5d59, 0x0, 0x0);
        gbc.writeMem(0x4c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcf5d, gbc.sp());
        EXPECT(0x4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 023D
        gbc.setState(0xee6, 0x8376, 0xedd0, 0x56d5, 0x7359, 0xe8ed, 0x0, 0x1);
        gbc.writeMem(0xee6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8376, gbc.sp());
        EXPECT(0xee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 023E
        gbc.setState(0xc02c, 0x995c, 0x1f30, 0xfdea, 0xd926, 0x7fcf, 0x0, 0x0);
        gbc.writeMem(0xc02c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0xc02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02c));
        EXPECT(0xdb, gbc.readMem(0xc02d));
        // CB DB 023F
        gbc.setState(0x13ba, 0xe5e8, 0x890, 0x97d9, 0xfe05, 0x8da1, 0x0, 0x0);
        gbc.writeMem(0x13ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe5e8, gbc.sp());
        EXPECT(0x13bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0240
        gbc.setState(0xd504, 0x235f, 0xdf00, 0x76c6, 0x7ea4, 0x184, 0x1, 0x1);
        gbc.writeMem(0xd504, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x235f, gbc.sp());
        EXPECT(0xd506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd504));
        EXPECT(0xdb, gbc.readMem(0xd505));
        // CB DB 0241
        gbc.setState(0xe70e, 0x4e95, 0xb950, 0x3f41, 0x8e76, 0x2d2f, 0x1, 0x1);
        gbc.writeMem(0xe70e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4e95, gbc.sp());
        EXPECT(0xe710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70e));
        EXPECT(0xdb, gbc.readMem(0xe70f));
        // CB DB 0242
        gbc.setState(0xc09f, 0xde15, 0xbb60, 0xd8e8, 0x93e7, 0xe8cf, 0x0, 0x1);
        gbc.writeMem(0xc09f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xde15, gbc.sp());
        EXPECT(0xc0a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09f));
        EXPECT(0xdb, gbc.readMem(0xc0a0));
        // CB DB 0243
        gbc.setState(0x5b24, 0x7062, 0x9dd0, 0x18f0, 0xf6dd, 0xb0e7, 0x1, 0x1);
        gbc.writeMem(0x5b24, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7062, gbc.sp());
        EXPECT(0x5b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0245
        gbc.setState(0x5e1f, 0x7127, 0x19e0, 0xf2d1, 0x832d, 0x4187, 0x1, 0x1);
        gbc.writeMem(0x5e1f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7127, gbc.sp());
        EXPECT(0x5e21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0246
        gbc.setState(0xbf90, 0xe29d, 0xc520, 0x37bb, 0x833d, 0x5ddd, 0x0, 0x0);
        gbc.writeMem(0xbf90, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe29d, gbc.sp());
        EXPECT(0xbf92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf90));
        EXPECT(0xdb, gbc.readMem(0xbf91));
        // CB DB 0247
        gbc.setState(0xe660, 0x3732, 0xa30, 0xbd99, 0x5c00, 0x5f96, 0x0, 0x1);
        gbc.writeMem(0xe660, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3732, gbc.sp());
        EXPECT(0xe662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe660));
        EXPECT(0xdb, gbc.readMem(0xe661));
        // CB DB 0248
        gbc.setState(0x6275, 0xea01, 0x7e20, 0x5df4, 0xfe5, 0xcebe, 0x1, 0x0);
        gbc.writeMem(0x6275, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xea01, gbc.sp());
        EXPECT(0x6277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0249
        gbc.setState(0x663, 0xb6cf, 0xce30, 0xd4ca, 0xd200, 0x31ab, 0x0, 0x1);
        gbc.writeMem(0x663, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb6cf, gbc.sp());
        EXPECT(0x665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 024A
        gbc.setState(0xa3bc, 0xe739, 0x4c60, 0xcd45, 0xe83e, 0x8111, 0x1, 0x0);
        gbc.writeMem(0xa3bc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe739, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bc));
        EXPECT(0xdb, gbc.readMem(0xa3bd));
        // CB DB 024B
        gbc.setState(0xa10c, 0x949a, 0x4180, 0x9fdc, 0xb9ed, 0x7052, 0x0, 0x0);
        gbc.writeMem(0xa10c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0xa10e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa10c));
        EXPECT(0xdb, gbc.readMem(0xa10d));
        // CB DB 024C
        gbc.setState(0xd010, 0x80fb, 0x34a0, 0x553a, 0xe935, 0x3d7e, 0x0, 0x0);
        gbc.writeMem(0xd010, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x80fb, gbc.sp());
        EXPECT(0xd012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd010));
        EXPECT(0xdb, gbc.readMem(0xd011));
        // CB DB 024D
        gbc.setState(0xd269, 0x632, 0x6330, 0x7f69, 0x6359, 0x3b9d, 0x0, 0x1);
        gbc.writeMem(0xd269, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0xd26b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd269));
        EXPECT(0xdb, gbc.readMem(0xd26a));
        // CB DB 024E
        gbc.setState(0xda3f, 0x1c9d, 0x6820, 0xd92d, 0x6068, 0x3782, 0x1, 0x0);
        gbc.writeMem(0xda3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1c9d, gbc.sp());
        EXPECT(0xda41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3f));
        EXPECT(0xdb, gbc.readMem(0xda40));
        // CB DB 0250
        gbc.setState(0x8563, 0x10ca, 0x6990, 0x9146, 0x7434, 0x5be0, 0x1, 0x1);
        gbc.writeMem(0x8563, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x10ca, gbc.sp());
        EXPECT(0x8565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8563));
        EXPECT(0xdb, gbc.readMem(0x8564));
        // CB DB 0251
        gbc.setState(0xce8e, 0x919b, 0x9fd0, 0x8513, 0x193e, 0x9aeb, 0x0, 0x1);
        gbc.writeMem(0xce8e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x919b, gbc.sp());
        EXPECT(0xce90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8e));
        EXPECT(0xdb, gbc.readMem(0xce8f));
        // CB DB 0252
        gbc.setState(0x63ed, 0x1271, 0x3560, 0xd6b7, 0xfede, 0x84de, 0x1, 0x1);
        gbc.writeMem(0x63ed, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1271, gbc.sp());
        EXPECT(0x63ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0253
        gbc.setState(0x1041, 0x1259, 0x7220, 0x674f, 0xccc7, 0x9d02, 0x1, 0x0);
        gbc.writeMem(0x1041, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1259, gbc.sp());
        EXPECT(0x1043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0254
        gbc.setState(0x7f5d, 0x24a7, 0xe440, 0xdae0, 0x5b4, 0x9096, 0x0, 0x1);
        gbc.writeMem(0x7f5d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x24a7, gbc.sp());
        EXPECT(0x7f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0256
        gbc.setState(0x1620, 0xd7bb, 0x4160, 0x79b6, 0xe12b, 0x7914, 0x0, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xd7bb, gbc.sp());
        EXPECT(0x1622, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0257
        gbc.setState(0xe238, 0x8d03, 0xdf70, 0x3966, 0x4e76, 0x7bbe, 0x1, 0x1);
        gbc.writeMem(0xe238, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8d03, gbc.sp());
        EXPECT(0xe23a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe238));
        EXPECT(0xdb, gbc.readMem(0xe239));
        // CB DB 0258
        gbc.setState(0x9b34, 0x7cbe, 0xea10, 0x3ad8, 0xfd4f, 0x38be, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7cbe, gbc.sp());
        EXPECT(0x9b36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b34));
        EXPECT(0xdb, gbc.readMem(0x9b35));
        // CB DB 0259
        gbc.setState(0xed9, 0xca88, 0xf850, 0x38e, 0x603e, 0x6339, 0x0, 0x0);
        gbc.writeMem(0xed9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xca88, gbc.sp());
        EXPECT(0xedb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 025A
        gbc.setState(0x8893, 0xb63c, 0x2d40, 0x9956, 0xbc28, 0x98fe, 0x0, 0x0);
        gbc.writeMem(0x8893, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0x8895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8893));
        EXPECT(0xdb, gbc.readMem(0x8894));
        // CB DB 025B
        gbc.setState(0x60c2, 0x53e2, 0xf780, 0x272a, 0xc471, 0xcb02, 0x0, 0x0);
        gbc.writeMem(0x60c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x53e2, gbc.sp());
        EXPECT(0x60c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 025C
        gbc.setState(0xd093, 0x2427, 0xcd10, 0x5b83, 0xbf1a, 0xec31, 0x1, 0x1);
        gbc.writeMem(0xd093, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2427, gbc.sp());
        EXPECT(0xd095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd093));
        EXPECT(0xdb, gbc.readMem(0xd094));
        // CB DB 025D
        gbc.setState(0x487a, 0x7b36, 0xc9e0, 0x1584, 0xc243, 0xf99c, 0x1, 0x0);
        gbc.writeMem(0x487a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7b36, gbc.sp());
        EXPECT(0x487c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 025E
        gbc.setState(0x3061, 0xd7fb, 0x9170, 0x1a4f, 0x3bab, 0x91b4, 0x1, 0x1);
        gbc.writeMem(0x3061, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd7fb, gbc.sp());
        EXPECT(0x3063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 025F
        gbc.setState(0xe693, 0xb9c8, 0xcf0, 0xefb3, 0xf28d, 0x1106, 0x0, 0x0);
        gbc.writeMem(0xe693, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb9c8, gbc.sp());
        EXPECT(0xe695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe693));
        EXPECT(0xdb, gbc.readMem(0xe694));
        // CB DB 0261
        gbc.setState(0x13fd, 0x8017, 0x3d80, 0xe204, 0xbf3a, 0x4fab, 0x0, 0x0);
        gbc.writeMem(0x13fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x8017, gbc.sp());
        EXPECT(0x13ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0262
        gbc.setState(0xa8f1, 0x1e86, 0x9eb0, 0x7584, 0x274, 0x7e4a, 0x0, 0x1);
        gbc.writeMem(0xa8f1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1e86, gbc.sp());
        EXPECT(0xa8f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f1));
        EXPECT(0xdb, gbc.readMem(0xa8f2));
        // CB DB 0263
        gbc.setState(0x898e, 0x5672, 0x39d0, 0x519, 0x2a41, 0xf320, 0x0, 0x1);
        gbc.writeMem(0x898e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5672, gbc.sp());
        EXPECT(0x8990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898e));
        EXPECT(0xdb, gbc.readMem(0x898f));
        // CB DB 0264
        gbc.setState(0x65e8, 0x2790, 0x7f80, 0xbb6b, 0x55c3, 0x5957, 0x0, 0x0);
        gbc.writeMem(0x65e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2790, gbc.sp());
        EXPECT(0x65ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0265
        gbc.setState(0xb043, 0xf171, 0x72a0, 0x1b1, 0x15f3, 0xdc73, 0x1, 0x1);
        gbc.writeMem(0xb043, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf171, gbc.sp());
        EXPECT(0xb045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb043));
        EXPECT(0xdb, gbc.readMem(0xb044));
        // CB DB 0266
        gbc.setState(0x98e8, 0x9e78, 0x1190, 0x8d0f, 0x4456, 0xf42, 0x1, 0x1);
        gbc.writeMem(0x98e8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x98ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e8));
        EXPECT(0xdb, gbc.readMem(0x98e9));
        // CB DB 0267
        gbc.setState(0x1ea5, 0xb682, 0x3d60, 0xc47d, 0x68e4, 0xb57c, 0x0, 0x0);
        gbc.writeMem(0x1ea5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb682, gbc.sp());
        EXPECT(0x1ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0268
        gbc.setState(0xcbe5, 0x16eb, 0xea40, 0x321e, 0x586b, 0x7b44, 0x0, 0x1);
        gbc.writeMem(0xcbe5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x16eb, gbc.sp());
        EXPECT(0xcbe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe5));
        EXPECT(0xdb, gbc.readMem(0xcbe6));
        // CB DB 0269
        gbc.setState(0x6796, 0xf954, 0xccc0, 0x785, 0x3e9d, 0xc6a2, 0x0, 0x0);
        gbc.writeMem(0x6796, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf954, gbc.sp());
        EXPECT(0x6798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 026A
        gbc.setState(0xe497, 0x43e9, 0x59c0, 0xb5b8, 0xa1bf, 0x7ac7, 0x1, 0x1);
        gbc.writeMem(0xe497, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x43e9, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe497));
        EXPECT(0xdb, gbc.readMem(0xe498));
        // CB DB 026B
        gbc.setState(0xdacb, 0x7870, 0xe1e0, 0x8ada, 0xd4d, 0xc645, 0x1, 0x0);
        gbc.writeMem(0xdacb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0xdacd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdacb));
        EXPECT(0xdb, gbc.readMem(0xdacc));
        // CB DB 026C
        gbc.setState(0xdc40, 0xf7c0, 0xa670, 0x3700, 0x79f4, 0x75a, 0x0, 0x0);
        gbc.writeMem(0xdc40, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf7c0, gbc.sp());
        EXPECT(0xdc42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc40));
        EXPECT(0xdb, gbc.readMem(0xdc41));
        // CB DB 026D
        gbc.setState(0xb765, 0x185, 0x7700, 0x9cb1, 0x8d82, 0x9790, 0x0, 0x0);
        gbc.writeMem(0xb765, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x185, gbc.sp());
        EXPECT(0xb767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb765));
        EXPECT(0xdb, gbc.readMem(0xb766));
        // CB DB 026E
        gbc.setState(0x54b2, 0xb5aa, 0xc60, 0x7835, 0x32a4, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb5aa, gbc.sp());
        EXPECT(0x54b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 026F
        gbc.setState(0xf16, 0xc73c, 0xaf80, 0x2883, 0x67be, 0xf4f, 0x0, 0x0);
        gbc.writeMem(0xf16, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc73c, gbc.sp());
        EXPECT(0xf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0270
        gbc.setState(0x7883, 0x1f76, 0xf440, 0xa0fa, 0x395b, 0xbef1, 0x1, 0x1);
        gbc.writeMem(0x7883, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1f76, gbc.sp());
        EXPECT(0x7885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0271
        gbc.setState(0x1d7b, 0x3b80, 0xf30, 0x9c5, 0x3bf3, 0x2284, 0x1, 0x0);
        gbc.writeMem(0x1d7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3b80, gbc.sp());
        EXPECT(0x1d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0273
        gbc.setState(0x60f0, 0x749e, 0x7220, 0x512, 0x9704, 0xe991, 0x0, 0x1);
        gbc.writeMem(0x60f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x749e, gbc.sp());
        EXPECT(0x60f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0274
        gbc.setState(0x49cd, 0xb8bc, 0x6b70, 0x8746, 0x54e2, 0xf6e6, 0x0, 0x1);
        gbc.writeMem(0x49cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb8bc, gbc.sp());
        EXPECT(0x49cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0275
        gbc.setState(0xae2, 0x593f, 0xf530, 0xf6d1, 0x2b40, 0x4234, 0x0, 0x0);
        gbc.writeMem(0xae2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x593f, gbc.sp());
        EXPECT(0xae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0276
        gbc.setState(0xb1da, 0xefd3, 0xaeb0, 0x87fc, 0x8a55, 0xa196, 0x0, 0x0);
        gbc.writeMem(0xb1da, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xb1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1da));
        EXPECT(0xdb, gbc.readMem(0xb1db));
        // CB DB 0277
        gbc.setState(0x5b0a, 0x5499, 0x8fc0, 0x5986, 0xd42f, 0xc574, 0x0, 0x0);
        gbc.writeMem(0x5b0a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5499, gbc.sp());
        EXPECT(0x5b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0278
        gbc.setState(0xe013, 0xb4dc, 0x3560, 0x483f, 0xda8d, 0x8d44, 0x1, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0xe015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe013));
        EXPECT(0xdb, gbc.readMem(0xe014));
        // CB DB 0279
        gbc.setState(0x7f1a, 0xacde, 0x39e0, 0xb6f5, 0x8ee6, 0x8041, 0x0, 0x1);
        gbc.writeMem(0x7f1a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x7f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 027B
        gbc.setState(0x8a9b, 0xf4d3, 0xbf40, 0x55fa, 0x4957, 0x6816, 0x1, 0x1);
        gbc.writeMem(0x8a9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf4d3, gbc.sp());
        EXPECT(0x8a9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a9b));
        EXPECT(0xdb, gbc.readMem(0x8a9c));
        // CB DB 027C
        gbc.setState(0xd1f9, 0xfed6, 0xd6e0, 0x6a4d, 0x9f75, 0x6219, 0x1, 0x0);
        gbc.writeMem(0xd1f9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfed6, gbc.sp());
        EXPECT(0xd1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f9));
        EXPECT(0xdb, gbc.readMem(0xd1fa));
        // CB DB 027D
        gbc.setState(0xae26, 0x3e8b, 0x8770, 0x73e8, 0xd505, 0x9042, 0x0, 0x1);
        gbc.writeMem(0xae26, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0xae28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae26));
        EXPECT(0xdb, gbc.readMem(0xae27));
        // CB DB 027E
        gbc.setState(0x7bf1, 0x393e, 0xd240, 0xc50a, 0x9729, 0xa2b, 0x0, 0x0);
        gbc.writeMem(0x7bf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x393e, gbc.sp());
        EXPECT(0x7bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 027F
        gbc.setState(0x5a74, 0x9425, 0xbeb0, 0x326e, 0xd6ea, 0x2b75, 0x0, 0x0);
        gbc.writeMem(0x5a74, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9425, gbc.sp());
        EXPECT(0x5a76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0280
        gbc.setState(0x4761, 0x8cc7, 0xe500, 0x94cf, 0xa89f, 0x1454, 0x1, 0x0);
        gbc.writeMem(0x4761, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8cc7, gbc.sp());
        EXPECT(0x4763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0281
        gbc.setState(0x39b0, 0x404e, 0xbb50, 0x8d00, 0xe364, 0xb428, 0x1, 0x0);
        gbc.writeMem(0x39b0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x404e, gbc.sp());
        EXPECT(0x39b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0282
        gbc.setState(0x30f0, 0x563, 0x1040, 0x43ad, 0x76b0, 0x8994, 0x0, 0x0);
        gbc.writeMem(0x30f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x563, gbc.sp());
        EXPECT(0x30f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0283
        gbc.setState(0x851d, 0xbfb0, 0x35a0, 0xbdbe, 0x5177, 0xac07, 0x1, 0x0);
        gbc.writeMem(0x851d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbfb0, gbc.sp());
        EXPECT(0x851f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851d));
        EXPECT(0xdb, gbc.readMem(0x851e));
        // CB DB 0284
        gbc.setState(0x7a51, 0x8c80, 0x6290, 0xe22, 0x12bf, 0x261, 0x1, 0x1);
        gbc.writeMem(0x7a51, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8c80, gbc.sp());
        EXPECT(0x7a53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0285
        gbc.setState(0x259c, 0x3dc3, 0x80d0, 0xcec4, 0x663a, 0x5730, 0x1, 0x0);
        gbc.writeMem(0x259c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3dc3, gbc.sp());
        EXPECT(0x259e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0286
        gbc.setState(0x8002, 0xc0f3, 0xb4d0, 0x7d2d, 0x1302, 0x9292, 0x1, 0x1);
        gbc.writeMem(0x8002, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc0f3, gbc.sp());
        EXPECT(0x8004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8002));
        EXPECT(0xdb, gbc.readMem(0x8003));
        // CB DB 0287
        gbc.setState(0xa088, 0x1f7c, 0x72a0, 0x7c1a, 0xb90a, 0x6fbd, 0x1, 0x0);
        gbc.writeMem(0xa088, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x1f7c, gbc.sp());
        EXPECT(0xa08a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa088));
        EXPECT(0xdb, gbc.readMem(0xa089));
        // CB DB 0288
        gbc.setState(0xd8b8, 0x49b4, 0xe250, 0x80fc, 0xba1d, 0xd3fd, 0x1, 0x1);
        gbc.writeMem(0xd8b8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x49b4, gbc.sp());
        EXPECT(0xd8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b8));
        EXPECT(0xdb, gbc.readMem(0xd8b9));
        // CB DB 0289
        gbc.setState(0x1d55, 0x6638, 0x4680, 0xa7e6, 0x3b46, 0x81c4, 0x0, 0x1);
        gbc.writeMem(0x1d55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x1d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 028A
        gbc.setState(0x88b2, 0xa4f9, 0xc060, 0x817, 0xbe8c, 0x5d5c, 0x0, 0x0);
        gbc.writeMem(0x88b2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa4f9, gbc.sp());
        EXPECT(0x88b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b2));
        EXPECT(0xdb, gbc.readMem(0x88b3));
        // CB DB 028B
        gbc.setState(0xc04a, 0x1e9a, 0x23c0, 0x7294, 0x157e, 0x60ee, 0x0, 0x0);
        gbc.writeMem(0xc04a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x1e9a, gbc.sp());
        EXPECT(0xc04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04a));
        EXPECT(0xdb, gbc.readMem(0xc04b));
        // CB DB 028C
        gbc.setState(0x55b5, 0x62d0, 0xeb70, 0x4cc2, 0x6d0a, 0x5474, 0x0, 0x0);
        gbc.writeMem(0x55b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x62d0, gbc.sp());
        EXPECT(0x55b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 028D
        gbc.setState(0x1b3, 0xb7, 0x5100, 0x5878, 0x64c2, 0x27cf, 0x0, 0x0);
        gbc.writeMem(0x1b3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb7, gbc.sp());
        EXPECT(0x1b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 028E
        gbc.setState(0xd428, 0x75de, 0x8260, 0x9866, 0xf84b, 0x911d, 0x1, 0x0);
        gbc.writeMem(0xd428, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0xd42a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd428));
        EXPECT(0xdb, gbc.readMem(0xd429));
        // CB DB 028F
        gbc.setState(0x72d, 0x3000, 0x790, 0x29ae, 0x5341, 0x23b, 0x0, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3000, gbc.sp());
        EXPECT(0x72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0290
        gbc.setState(0xf7a, 0x793d, 0xc740, 0xe344, 0xf12d, 0x69b6, 0x1, 0x0);
        gbc.writeMem(0xf7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0xf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0291
        gbc.setState(0xc6dc, 0x91f0, 0xa780, 0xfb8f, 0xab2f, 0x2927, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x91f0, gbc.sp());
        EXPECT(0xc6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dc));
        EXPECT(0xdb, gbc.readMem(0xc6dd));
        // CB DB 0292
        gbc.setState(0xf56, 0x6c77, 0xa7f0, 0x27cf, 0x8b5, 0x1a8a, 0x0, 0x0);
        gbc.writeMem(0xf56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6c77, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0293
        gbc.setState(0xc11e, 0xfa0, 0x2970, 0x3712, 0xdccc, 0xb358, 0x1, 0x1);
        gbc.writeMem(0xc11e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfa0, gbc.sp());
        EXPECT(0xc120, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc11e));
        EXPECT(0xdb, gbc.readMem(0xc11f));
        // CB DB 0294
        gbc.setState(0x9f23, 0x5631, 0x1500, 0x1b77, 0x7f50, 0x1c9d, 0x1, 0x1);
        gbc.writeMem(0x9f23, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5631, gbc.sp());
        EXPECT(0x9f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f23));
        EXPECT(0xdb, gbc.readMem(0x9f24));
        // CB DB 0295
        gbc.setState(0x1f56, 0xfbef, 0x2300, 0x9372, 0xcd4, 0xaf90, 0x0, 0x1);
        gbc.writeMem(0x1f56, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x1f58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0296
        gbc.setState(0x60f8, 0xcfc8, 0xd8b0, 0x3f67, 0xbafd, 0x7294, 0x1, 0x1);
        gbc.writeMem(0x60f8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcfc8, gbc.sp());
        EXPECT(0x60fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0297
        gbc.setState(0xc9c9, 0xf823, 0xb5e0, 0x6a7f, 0xa1df, 0xb52f, 0x1, 0x0);
        gbc.writeMem(0xc9c9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf823, gbc.sp());
        EXPECT(0xc9cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c9));
        EXPECT(0xdb, gbc.readMem(0xc9ca));
        // CB DB 0298
        gbc.setState(0x1335, 0xbb3f, 0xbbb0, 0x3286, 0xd562, 0xb3f9, 0x0, 0x0);
        gbc.writeMem(0x1335, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbb3f, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0299
        gbc.setState(0x6a4b, 0xcd13, 0x1ec0, 0x293e, 0xa2d5, 0xb23b, 0x0, 0x1);
        gbc.writeMem(0x6a4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0x6a4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 029A
        gbc.setState(0x4ff6, 0x53c9, 0xd710, 0x4cac, 0x117a, 0x264c, 0x0, 0x1);
        gbc.writeMem(0x4ff6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x53c9, gbc.sp());
        EXPECT(0x4ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 029B
        gbc.setState(0xfab, 0x83f6, 0xa9b0, 0xde3d, 0x40d4, 0x8e9e, 0x0, 0x1);
        gbc.writeMem(0xfab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0xfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 029C
        gbc.setState(0xb729, 0xb986, 0x7300, 0x60b1, 0xe907, 0x2281, 0x1, 0x1);
        gbc.writeMem(0xb729, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb986, gbc.sp());
        EXPECT(0xb72b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb729));
        EXPECT(0xdb, gbc.readMem(0xb72a));
        // CB DB 029D
        gbc.setState(0xd61a, 0xd2e5, 0x83d0, 0x9b5a, 0xe6a0, 0x1728, 0x0, 0x1);
        gbc.writeMem(0xd61a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd2e5, gbc.sp());
        EXPECT(0xd61c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd61a));
        EXPECT(0xdb, gbc.readMem(0xd61b));
        // CB DB 029E
        gbc.setState(0x4c91, 0xb820, 0xfe20, 0x5fe4, 0xaee, 0x164b, 0x1, 0x1);
        gbc.writeMem(0x4c91, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x4c93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 029F
        gbc.setState(0x8265, 0x468c, 0xe230, 0x46a, 0x37, 0x3ebc, 0x1, 0x0);
        gbc.writeMem(0x8265, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x468c, gbc.sp());
        EXPECT(0x8267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8265));
        EXPECT(0xdb, gbc.readMem(0x8266));
        // CB DB 02A0
        gbc.setState(0x979c, 0x6677, 0x3ab0, 0x552b, 0x88f, 0x3410, 0x1, 0x0);
        gbc.writeMem(0x979c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6677, gbc.sp());
        EXPECT(0x979e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x979c));
        EXPECT(0xdb, gbc.readMem(0x979d));
        // CB DB 02A1
        gbc.setState(0xccae, 0xbeb, 0x15d0, 0x9ff3, 0x54d1, 0xa7bf, 0x1, 0x0);
        gbc.writeMem(0xccae, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xbeb, gbc.sp());
        EXPECT(0xccb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccae));
        EXPECT(0xdb, gbc.readMem(0xccaf));
        // CB DB 02A2
        gbc.setState(0x38a6, 0xf23, 0xf9b0, 0xfb61, 0xa412, 0xc32b, 0x1, 0x0);
        gbc.writeMem(0x38a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf23, gbc.sp());
        EXPECT(0x38a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02A3
        gbc.setState(0x9144, 0xc2c5, 0x3090, 0xc6a8, 0xcb72, 0x2a, 0x1, 0x0);
        gbc.writeMem(0x9144, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc2c5, gbc.sp());
        EXPECT(0x9146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9144));
        EXPECT(0xdb, gbc.readMem(0x9145));
        // CB DB 02A4
        gbc.setState(0xb15a, 0x9932, 0x6e30, 0x664a, 0x760e, 0x5b78, 0x0, 0x0);
        gbc.writeMem(0xb15a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0xb15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb15a));
        EXPECT(0xdb, gbc.readMem(0xb15b));
        // CB DB 02A5
        gbc.setState(0xb2cf, 0xe4e9, 0xcd50, 0x4bf8, 0xba33, 0x34, 0x1, 0x0);
        gbc.writeMem(0xb2cf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe4e9, gbc.sp());
        EXPECT(0xb2d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2cf));
        EXPECT(0xdb, gbc.readMem(0xb2d0));
        // CB DB 02A6
        gbc.setState(0x114b, 0xc591, 0xbb70, 0xd1c1, 0xb62c, 0xaeb8, 0x1, 0x1);
        gbc.writeMem(0x114b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc591, gbc.sp());
        EXPECT(0x114d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02A7
        gbc.setState(0x7da3, 0xef46, 0x3f0, 0x2f8d, 0xc07, 0xd865, 0x0, 0x0);
        gbc.writeMem(0x7da3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xef46, gbc.sp());
        EXPECT(0x7da5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02A8
        gbc.setState(0xed4a, 0x428, 0xa3e0, 0x33bb, 0x9f90, 0xf520, 0x0, 0x1);
        gbc.writeMem(0xed4a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x428, gbc.sp());
        EXPECT(0xed4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4a));
        EXPECT(0xdb, gbc.readMem(0xed4b));
        // CB DB 02A9
        gbc.setState(0x71b7, 0x88d8, 0x55a0, 0x5201, 0x69be, 0x53b5, 0x1, 0x0);
        gbc.writeMem(0x71b7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x88d8, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02AA
        gbc.setState(0x12c, 0x5fb9, 0xbb90, 0x70ff, 0xa1d4, 0x7e82, 0x1, 0x1);
        gbc.writeMem(0x12c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x5fb9, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02AB
        gbc.setState(0xbf1c, 0xf647, 0xec50, 0x91ff, 0xe3fc, 0x91b2, 0x1, 0x1);
        gbc.writeMem(0xbf1c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf647, gbc.sp());
        EXPECT(0xbf1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf1c));
        EXPECT(0xdb, gbc.readMem(0xbf1d));
        // CB DB 02AC
        gbc.setState(0x7536, 0x3bcf, 0x4770, 0xd9f2, 0x8e35, 0xac0c, 0x1, 0x1);
        gbc.writeMem(0x7536, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3bcf, gbc.sp());
        EXPECT(0x7538, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02AD
        gbc.setState(0x8c21, 0x37ae, 0xe070, 0xecd0, 0x937f, 0xdd01, 0x0, 0x0);
        gbc.writeMem(0x8c21, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x37ae, gbc.sp());
        EXPECT(0x8c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c21));
        EXPECT(0xdb, gbc.readMem(0x8c22));
        // CB DB 02AE
        gbc.setState(0x36dc, 0x73, 0x6d20, 0xd41c, 0xef4e, 0x8626, 0x1, 0x0);
        gbc.writeMem(0x36dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x73, gbc.sp());
        EXPECT(0x36de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02AF
        gbc.setState(0x58c2, 0x1fe5, 0xf2c0, 0xffbf, 0x8eae, 0x1d21, 0x1, 0x1);
        gbc.writeMem(0x58c2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1fe5, gbc.sp());
        EXPECT(0x58c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02B0
        gbc.setState(0x74a7, 0x73d, 0xce00, 0x3f0, 0x4a3f, 0x6e1, 0x1, 0x1);
        gbc.writeMem(0x74a7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x73d, gbc.sp());
        EXPECT(0x74a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02B1
        gbc.setState(0xeac6, 0x3f8f, 0xc1d0, 0x25b0, 0xbd0f, 0x13a2, 0x0, 0x1);
        gbc.writeMem(0xeac6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3f8f, gbc.sp());
        EXPECT(0xeac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeac6));
        EXPECT(0xdb, gbc.readMem(0xeac7));
        // CB DB 02B2
        gbc.setState(0xea68, 0x632, 0x57d0, 0x1f99, 0x328d, 0xc323, 0x1, 0x0);
        gbc.writeMem(0xea68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x632, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea68));
        EXPECT(0xdb, gbc.readMem(0xea69));
        // CB DB 02B3
        gbc.setState(0xef9b, 0xcf0f, 0xbe70, 0x90ab, 0x944d, 0xa1e7, 0x1, 0x0);
        gbc.writeMem(0xef9b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xcf0f, gbc.sp());
        EXPECT(0xef9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9b));
        EXPECT(0xdb, gbc.readMem(0xef9c));
        // CB DB 02B4
        gbc.setState(0xbe55, 0xed7f, 0xc620, 0x45bd, 0x1041, 0x53c, 0x1, 0x0);
        gbc.writeMem(0xbe55, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xed7f, gbc.sp());
        EXPECT(0xbe57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe55));
        EXPECT(0xdb, gbc.readMem(0xbe56));
        // CB DB 02B5
        gbc.setState(0x10fc, 0xeecc, 0x96d0, 0x3c4d, 0xf45, 0x4b5d, 0x1, 0x1);
        gbc.writeMem(0x10fc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xeecc, gbc.sp());
        EXPECT(0x10fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02B7
        gbc.setState(0x9e2f, 0x9933, 0x7ad0, 0xfce3, 0x5065, 0x7c3d, 0x1, 0x0);
        gbc.writeMem(0x9e2f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9933, gbc.sp());
        EXPECT(0x9e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2f));
        EXPECT(0xdb, gbc.readMem(0x9e30));
        // CB DB 02B8
        gbc.setState(0x9606, 0xeec3, 0x9d10, 0xc5e, 0xa547, 0x15e2, 0x1, 0x1);
        gbc.writeMem(0x9606, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xeec3, gbc.sp());
        EXPECT(0x9608, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9606));
        EXPECT(0xdb, gbc.readMem(0x9607));
        // CB DB 02B9
        gbc.setState(0xb258, 0x8964, 0xe890, 0x8d7c, 0x702, 0xbfd0, 0x1, 0x0);
        gbc.writeMem(0xb258, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8964, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb258));
        EXPECT(0xdb, gbc.readMem(0xb259));
        // CB DB 02BA
        gbc.setState(0xd65d, 0x75de, 0xb460, 0x8be4, 0x64a6, 0x9ba7, 0x0, 0x0);
        gbc.writeMem(0xd65d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0xd65f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd65d));
        EXPECT(0xdb, gbc.readMem(0xd65e));
        // CB DB 02BB
        gbc.setState(0x71a8, 0x31a2, 0xa830, 0x593d, 0x255d, 0x5fda, 0x1, 0x0);
        gbc.writeMem(0x71a8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x31a2, gbc.sp());
        EXPECT(0x71aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02BC
        gbc.setState(0xecd1, 0x9978, 0xf120, 0x782, 0x35ce, 0xa3c8, 0x1, 0x1);
        gbc.writeMem(0xecd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9978, gbc.sp());
        EXPECT(0xecd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecd1));
        EXPECT(0xdb, gbc.readMem(0xecd2));
        // CB DB 02BD
        gbc.setState(0x5e66, 0xeac7, 0xcf60, 0xade2, 0x1b76, 0x1d19, 0x1, 0x1);
        gbc.writeMem(0x5e66, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeac7, gbc.sp());
        EXPECT(0x5e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02BE
        gbc.setState(0xd185, 0xe8ce, 0xf930, 0xe9a9, 0x465b, 0x388f, 0x0, 0x0);
        gbc.writeMem(0xd185, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd185));
        EXPECT(0xdb, gbc.readMem(0xd186));
        // CB DB 02BF
        gbc.setState(0xb703, 0x4352, 0xbfd0, 0xff6b, 0x5a84, 0x569e, 0x1, 0x1);
        gbc.writeMem(0xb703, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4352, gbc.sp());
        EXPECT(0xb705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb703));
        EXPECT(0xdb, gbc.readMem(0xb704));
        // CB DB 02C0
        gbc.setState(0x3fb0, 0x17df, 0x4f40, 0x94ba, 0xe3b, 0x7fb0, 0x1, 0x1);
        gbc.writeMem(0x3fb0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x3fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02C1
        gbc.setState(0x8ac0, 0xd250, 0x1260, 0x45ae, 0x9ffc, 0x3d58, 0x0, 0x0);
        gbc.writeMem(0x8ac0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd250, gbc.sp());
        EXPECT(0x8ac2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac0));
        EXPECT(0xdb, gbc.readMem(0x8ac1));
        // CB DB 02C2
        gbc.setState(0xde8f, 0x4f94, 0x4bc0, 0xf13, 0x1791, 0x3507, 0x0, 0x1);
        gbc.writeMem(0xde8f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4f94, gbc.sp());
        EXPECT(0xde91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde8f));
        EXPECT(0xdb, gbc.readMem(0xde90));
        // CB DB 02C3
        gbc.setState(0xc910, 0xe8ce, 0xebb0, 0xac7a, 0xf23b, 0xc556, 0x1, 0x1);
        gbc.writeMem(0xc910, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe8ce, gbc.sp());
        EXPECT(0xc912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc910));
        EXPECT(0xdb, gbc.readMem(0xc911));
        // CB DB 02C4
        gbc.setState(0xc719, 0x76ee, 0x82c0, 0x1b4f, 0x6bfd, 0xf826, 0x0, 0x1);
        gbc.writeMem(0xc719, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0xc71b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc719));
        EXPECT(0xdb, gbc.readMem(0xc71a));
        // CB DB 02C5
        gbc.setState(0xd7b5, 0x7e17, 0xe9e0, 0xae70, 0x8b01, 0xdda9, 0x0, 0x0);
        gbc.writeMem(0xd7b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0xd7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b5));
        EXPECT(0xdb, gbc.readMem(0xd7b6));
        // CB DB 02C6
        gbc.setState(0x8c65, 0xdf24, 0x83c0, 0xa810, 0xf970, 0xba8a, 0x0, 0x0);
        gbc.writeMem(0x8c65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdf24, gbc.sp());
        EXPECT(0x8c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c65));
        EXPECT(0xdb, gbc.readMem(0x8c66));
        // CB DB 02C7
        gbc.setState(0x54ad, 0xc17a, 0x94b0, 0xe693, 0x6b53, 0x1832, 0x1, 0x0);
        gbc.writeMem(0x54ad, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc17a, gbc.sp());
        EXPECT(0x54af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02C8
        gbc.setState(0x9f48, 0x62b8, 0x56d0, 0xb06a, 0x299d, 0x78a2, 0x1, 0x0);
        gbc.writeMem(0x9f48, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x62b8, gbc.sp());
        EXPECT(0x9f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f48));
        EXPECT(0xdb, gbc.readMem(0x9f49));
        // CB DB 02C9
        gbc.setState(0xe99b, 0x7089, 0x6be0, 0x3074, 0x35ab, 0xadab, 0x0, 0x0);
        gbc.writeMem(0xe99b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7089, gbc.sp());
        EXPECT(0xe99d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99b));
        EXPECT(0xdb, gbc.readMem(0xe99c));
        // CB DB 02CA
        gbc.setState(0x1fa6, 0xc0b8, 0x98f0, 0xcdb7, 0x5827, 0x793c, 0x1, 0x0);
        gbc.writeMem(0x1fa6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc0b8, gbc.sp());
        EXPECT(0x1fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02CB
        gbc.setState(0x9867, 0x4d87, 0xacc0, 0x136f, 0x9b08, 0x50e2, 0x0, 0x0);
        gbc.writeMem(0x9867, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4d87, gbc.sp());
        EXPECT(0x9869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9867));
        EXPECT(0xdb, gbc.readMem(0x9868));
        // CB DB 02CC
        gbc.setState(0x8c82, 0x1eaa, 0xe310, 0x7ab5, 0xc55f, 0xfa5a, 0x1, 0x1);
        gbc.writeMem(0x8c82, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1eaa, gbc.sp());
        EXPECT(0x8c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c82));
        EXPECT(0xdb, gbc.readMem(0x8c83));
        // CB DB 02CD
        gbc.setState(0x854e, 0xf34, 0x29b0, 0xac44, 0x1d83, 0x783e, 0x1, 0x1);
        gbc.writeMem(0x854e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf34, gbc.sp());
        EXPECT(0x8550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854e));
        EXPECT(0xdb, gbc.readMem(0x854f));
        // CB DB 02CF
        gbc.setState(0xd12a, 0x4d93, 0x8820, 0x5f6f, 0x2dc0, 0x39c2, 0x0, 0x0);
        gbc.writeMem(0xd12a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4d93, gbc.sp());
        EXPECT(0xd12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12a));
        EXPECT(0xdb, gbc.readMem(0xd12b));
        // CB DB 02D1
        gbc.setState(0xd2a9, 0x7ae1, 0x78f0, 0x572b, 0xeee3, 0xc0ce, 0x0, 0x0);
        gbc.writeMem(0xd2a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7ae1, gbc.sp());
        EXPECT(0xd2ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a9));
        EXPECT(0xdb, gbc.readMem(0xd2aa));
        // CB DB 02D2
        gbc.setState(0xd664, 0xbc2f, 0xf300, 0xc045, 0x2b01, 0xa565, 0x0, 0x0);
        gbc.writeMem(0xd664, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0xd666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd664));
        EXPECT(0xdb, gbc.readMem(0xd665));
        // CB DB 02D3
        gbc.setState(0x84dc, 0xbd50, 0xcd0, 0x91c2, 0x57fb, 0x34f9, 0x1, 0x0);
        gbc.writeMem(0x84dc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0x84de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84dc));
        EXPECT(0xdb, gbc.readMem(0x84dd));
        // CB DB 02D4
        gbc.setState(0xb0a9, 0x2fda, 0x5ff0, 0xa447, 0xd919, 0x63d9, 0x1, 0x0);
        gbc.writeMem(0xb0a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2fda, gbc.sp());
        EXPECT(0xb0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a9));
        EXPECT(0xdb, gbc.readMem(0xb0aa));
        // CB DB 02D5
        gbc.setState(0x2d86, 0xd555, 0xae20, 0x39b6, 0x5ae4, 0xdcce, 0x1, 0x1);
        gbc.writeMem(0x2d86, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd555, gbc.sp());
        EXPECT(0x2d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02D7
        gbc.setState(0xa6b6, 0x6f38, 0xb50, 0x6993, 0x55b, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0xa6b6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f38, gbc.sp());
        EXPECT(0xa6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b6));
        EXPECT(0xdb, gbc.readMem(0xa6b7));
        // CB DB 02D8
        gbc.setState(0xcecf, 0x2227, 0x2250, 0x5c7f, 0xfa21, 0x9c35, 0x0, 0x1);
        gbc.writeMem(0xcecf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2227, gbc.sp());
        EXPECT(0xced1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcecf));
        EXPECT(0xdb, gbc.readMem(0xced0));
        // CB DB 02D9
        gbc.setState(0x1eea, 0x66e2, 0x5b60, 0x3d07, 0x87f, 0xf145, 0x1, 0x0);
        gbc.writeMem(0x1eea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x66e2, gbc.sp());
        EXPECT(0x1eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02DB
        gbc.setState(0x1c2d, 0xee71, 0x6e30, 0xa1c2, 0x6392, 0x7981, 0x1, 0x0);
        gbc.writeMem(0x1c2d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xee71, gbc.sp());
        EXPECT(0x1c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02DC
        gbc.setState(0x6343, 0x65f9, 0x7220, 0x2b30, 0x99c3, 0x6dad, 0x0, 0x1);
        gbc.writeMem(0x6343, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x65f9, gbc.sp());
        EXPECT(0x6345, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02DD
        gbc.setState(0x82df, 0xc3af, 0xb1f0, 0xb8f0, 0x9b94, 0xe883, 0x0, 0x1);
        gbc.writeMem(0x82df, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc3af, gbc.sp());
        EXPECT(0x82e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82df));
        EXPECT(0xdb, gbc.readMem(0x82e0));
        // CB DB 02DE
        gbc.setState(0x835b, 0xca28, 0x4ec0, 0x3020, 0x5735, 0x97e7, 0x1, 0x0);
        gbc.writeMem(0x835b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xca28, gbc.sp());
        EXPECT(0x835d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x835b));
        EXPECT(0xdb, gbc.readMem(0x835c));
        // CB DB 02DF
        gbc.setState(0x373f, 0x838d, 0xc100, 0x407c, 0xa26f, 0x8cec, 0x0, 0x1);
        gbc.writeMem(0x373f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x838d, gbc.sp());
        EXPECT(0x3741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02E0
        gbc.setState(0x965f, 0x7e2a, 0xa600, 0xbe88, 0x9de6, 0x35fa, 0x1, 0x1);
        gbc.writeMem(0x965f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e2a, gbc.sp());
        EXPECT(0x9661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965f));
        EXPECT(0xdb, gbc.readMem(0x9660));
        // CB DB 02E1
        gbc.setState(0x7e25, 0xde7d, 0x1950, 0x12fd, 0xbce6, 0x44c1, 0x1, 0x1);
        gbc.writeMem(0x7e25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xde7d, gbc.sp());
        EXPECT(0x7e27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02E2
        gbc.setState(0xddcf, 0x480f, 0xbbe0, 0xf02b, 0x6eba, 0xdf6e, 0x1, 0x0);
        gbc.writeMem(0xddcf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x480f, gbc.sp());
        EXPECT(0xddd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcf));
        EXPECT(0xdb, gbc.readMem(0xddd0));
        // CB DB 02E3
        gbc.setState(0x3a9c, 0x6c6a, 0x4930, 0xfcfd, 0xf253, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0x3a9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6c6a, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02E4
        gbc.setState(0x948e, 0x3194, 0xdd30, 0x3b98, 0x306a, 0xaf73, 0x0, 0x0);
        gbc.writeMem(0x948e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3194, gbc.sp());
        EXPECT(0x9490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x948e));
        EXPECT(0xdb, gbc.readMem(0x948f));
        // CB DB 02E5
        gbc.setState(0x746d, 0x6d0d, 0x7d00, 0x8ac2, 0xbffd, 0xc003, 0x0, 0x1);
        gbc.writeMem(0x746d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6d0d, gbc.sp());
        EXPECT(0x746f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02E7
        gbc.setState(0x6945, 0xaf25, 0xaa90, 0x8687, 0x33fc, 0x6d2c, 0x1, 0x1);
        gbc.writeMem(0x6945, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0x6947, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02E8
        gbc.setState(0xca77, 0x4da4, 0xc630, 0x912f, 0x9d6, 0xbd65, 0x1, 0x1);
        gbc.writeMem(0xca77, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4da4, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca77));
        EXPECT(0xdb, gbc.readMem(0xca78));
        // CB DB 02EA
        gbc.setState(0xcd0f, 0x6fcd, 0x5200, 0x1ce, 0xc81b, 0xc586, 0x0, 0x0);
        gbc.writeMem(0xcd0f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6fcd, gbc.sp());
        EXPECT(0xcd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd0f));
        EXPECT(0xdb, gbc.readMem(0xcd10));
        // CB DB 02EB
        gbc.setState(0x303, 0x4c8d, 0x8ef0, 0xa3ea, 0xf0ad, 0x50d7, 0x0, 0x0);
        gbc.writeMem(0x303, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4c8d, gbc.sp());
        EXPECT(0x305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02EC
        gbc.setState(0xde9c, 0xef2a, 0xc2f0, 0xadca, 0x8078, 0xbdec, 0x1, 0x0);
        gbc.writeMem(0xde9c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xef2a, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9c));
        EXPECT(0xdb, gbc.readMem(0xde9d));
        // CB DB 02ED
        gbc.setState(0x3cf1, 0xb65b, 0x4470, 0xbd94, 0x314c, 0xa4c1, 0x0, 0x0);
        gbc.writeMem(0x3cf1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0x3cf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02EE
        gbc.setState(0x75ea, 0x487f, 0xf160, 0x63e1, 0x2577, 0xe256, 0x1, 0x0);
        gbc.writeMem(0x75ea, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x487f, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02EF
        gbc.setState(0xdb67, 0xfb0, 0xc6b0, 0x9d53, 0x3b96, 0xa0be, 0x0, 0x0);
        gbc.writeMem(0xdb67, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfb0, gbc.sp());
        EXPECT(0xdb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb67));
        EXPECT(0xdb, gbc.readMem(0xdb68));
        // CB DB 02F0
        gbc.setState(0xe49, 0xc397, 0x4020, 0x8ae0, 0x9d41, 0xda7, 0x1, 0x0);
        gbc.writeMem(0xe49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc397, gbc.sp());
        EXPECT(0xe4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02F1
        gbc.setState(0xf18, 0xb0fa, 0xc040, 0x9b6c, 0x4458, 0x71c9, 0x0, 0x0);
        gbc.writeMem(0xf18, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb0fa, gbc.sp());
        EXPECT(0xf1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 02F2
        gbc.setState(0xbf25, 0x3bd2, 0x63d0, 0x1c88, 0x2db4, 0x7edd, 0x0, 0x0);
        gbc.writeMem(0xbf25, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3bd2, gbc.sp());
        EXPECT(0xbf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf25));
        EXPECT(0xdb, gbc.readMem(0xbf26));
        // CB DB 02F3
        gbc.setState(0xb6e6, 0x9b27, 0x2d50, 0xaf42, 0x254b, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xb6e6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9b27, gbc.sp());
        EXPECT(0xb6e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e6));
        EXPECT(0xdb, gbc.readMem(0xb6e7));
        // CB DB 02F4
        gbc.setState(0xa6e3, 0xc3d1, 0x9090, 0xb81, 0xb800, 0x4585, 0x1, 0x1);
        gbc.writeMem(0xa6e3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc3d1, gbc.sp());
        EXPECT(0xa6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e3));
        EXPECT(0xdb, gbc.readMem(0xa6e4));
        // CB DB 02F5
        gbc.setState(0xa235, 0xa733, 0x1ec0, 0xd8e1, 0xa57e, 0xb296, 0x1, 0x1);
        gbc.writeMem(0xa235, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa733, gbc.sp());
        EXPECT(0xa237, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa235));
        EXPECT(0xdb, gbc.readMem(0xa236));
        // CB DB 02F6
        gbc.setState(0xa5b4, 0xa8f8, 0xd2e0, 0x5e4, 0x486, 0x8189, 0x1, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa8f8, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0xdb, gbc.readMem(0xa5b5));
        // CB DB 02F7
        gbc.setState(0x9213, 0x4fff, 0x4e0, 0x2ee4, 0x4d8b, 0xe78d, 0x0, 0x0);
        gbc.writeMem(0x9213, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4fff, gbc.sp());
        EXPECT(0x9215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9213));
        EXPECT(0xdb, gbc.readMem(0x9214));
        // CB DB 02F8
        gbc.setState(0x2059, 0xf341, 0xe510, 0x4f8b, 0xe1a5, 0xee4d, 0x0, 0x1);
        gbc.writeMem(0x2059, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf341, gbc.sp());
        EXPECT(0x205b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02F9
        gbc.setState(0x5d30, 0x8bec, 0xec70, 0x8979, 0xd71b, 0x18c, 0x1, 0x0);
        gbc.writeMem(0x5d30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8bec, gbc.sp());
        EXPECT(0x5d32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02FA
        gbc.setState(0x9fc3, 0xae9f, 0x4ab0, 0xbd8e, 0xad28, 0xcb75, 0x0, 0x1);
        gbc.writeMem(0x9fc3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xae9f, gbc.sp());
        EXPECT(0x9fc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fc3));
        EXPECT(0xdb, gbc.readMem(0x9fc4));
        // CB DB 02FC
        gbc.setState(0x8a1e, 0xfb89, 0x8130, 0x8d86, 0xa398, 0x84d0, 0x0, 0x0);
        gbc.writeMem(0x8a1e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfb89, gbc.sp());
        EXPECT(0x8a20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a1e));
        EXPECT(0xdb, gbc.readMem(0x8a1f));
        // CB DB 02FD
        gbc.setState(0x2579, 0xe9f0, 0xb4f0, 0xaa09, 0xb4dc, 0x9fb7, 0x1, 0x0);
        gbc.writeMem(0x2579, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x257b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 02FE
        gbc.setState(0xd657, 0x47ee, 0xd6f0, 0x5284, 0x44db, 0x26ff, 0x1, 0x1);
        gbc.writeMem(0xd657, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x47ee, gbc.sp());
        EXPECT(0xd659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd657));
        EXPECT(0xdb, gbc.readMem(0xd658));
        // CB DB 02FF
        gbc.setState(0xede4, 0xb2b4, 0x27f0, 0xa1b, 0x636, 0xf29f, 0x0, 0x0);
        gbc.writeMem(0xede4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb2b4, gbc.sp());
        EXPECT(0xede6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xede4));
        EXPECT(0xdb, gbc.readMem(0xede5));
        // CB DB 0300
        gbc.setState(0x6dee, 0x3765, 0xd820, 0x3f89, 0x2a07, 0x8d34, 0x0, 0x0);
        gbc.writeMem(0x6dee, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3765, gbc.sp());
        EXPECT(0x6df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0301
        gbc.setState(0x54c8, 0xb185, 0xd050, 0x7e90, 0x2ffa, 0x1b65, 0x0, 0x1);
        gbc.writeMem(0x54c8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb185, gbc.sp());
        EXPECT(0x54ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0303
        gbc.setState(0xa4, 0x4f6, 0x73d0, 0x177e, 0x97a4, 0x794e, 0x0, 0x1);
        gbc.writeMem(0xa4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4f6, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0304
        gbc.setState(0x9ec6, 0x74da, 0xd820, 0x7f81, 0x3e13, 0xd231, 0x0, 0x0);
        gbc.writeMem(0x9ec6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x74da, gbc.sp());
        EXPECT(0x9ec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec6));
        EXPECT(0xdb, gbc.readMem(0x9ec7));
        // CB DB 0305
        gbc.setState(0xaf8d, 0x3b5f, 0x5c20, 0x8d4e, 0xb9ec, 0xb58b, 0x0, 0x1);
        gbc.writeMem(0xaf8d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3b5f, gbc.sp());
        EXPECT(0xaf8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf8d));
        EXPECT(0xdb, gbc.readMem(0xaf8e));
        // CB DB 0306
        gbc.setState(0x9df8, 0xde2c, 0x9070, 0x96ca, 0x8159, 0x4282, 0x0, 0x1);
        gbc.writeMem(0x9df8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xde2c, gbc.sp());
        EXPECT(0x9dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df8));
        EXPECT(0xdb, gbc.readMem(0x9df9));
        // CB DB 0307
        gbc.setState(0x4c41, 0x939b, 0xf190, 0xd1f0, 0x6b98, 0xb87d, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x939b, gbc.sp());
        EXPECT(0x4c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0308
        gbc.setState(0x70f6, 0xb93b, 0xc10, 0x4cc7, 0xd25b, 0x7811, 0x1, 0x1);
        gbc.writeMem(0x70f6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb93b, gbc.sp());
        EXPECT(0x70f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 030A
        gbc.setState(0x87f0, 0xf65a, 0x7950, 0x50b3, 0x726d, 0xd47c, 0x1, 0x1);
        gbc.writeMem(0x87f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf65a, gbc.sp());
        EXPECT(0x87f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87f0));
        EXPECT(0xdb, gbc.readMem(0x87f1));
        // CB DB 030B
        gbc.setState(0x774c, 0x9e65, 0x8950, 0xb8a8, 0x8d10, 0x2ac7, 0x0, 0x0);
        gbc.writeMem(0x774c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9e65, gbc.sp());
        EXPECT(0x774e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 030C
        gbc.setState(0xc819, 0x711, 0xdf10, 0x3056, 0x9d62, 0x75ff, 0x0, 0x1);
        gbc.writeMem(0xc819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x711, gbc.sp());
        EXPECT(0xc81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc819));
        EXPECT(0xdb, gbc.readMem(0xc81a));
        // CB DB 030D
        gbc.setState(0x791e, 0x79a2, 0x6060, 0xc8de, 0x5f1f, 0x2589, 0x1, 0x1);
        gbc.writeMem(0x791e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x79a2, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 030E
        gbc.setState(0xb897, 0x101b, 0x7260, 0xacd8, 0x8a7c, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0xb897, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x101b, gbc.sp());
        EXPECT(0xb899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb897));
        EXPECT(0xdb, gbc.readMem(0xb898));
        // CB DB 030F
        gbc.setState(0xec24, 0xd3bf, 0xe7b0, 0xc70c, 0x8c0, 0x5cab, 0x1, 0x0);
        gbc.writeMem(0xec24, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd3bf, gbc.sp());
        EXPECT(0xec26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec24));
        EXPECT(0xdb, gbc.readMem(0xec25));
        // CB DB 0310
        gbc.setState(0x3d7a, 0x4d5c, 0x5750, 0x2fcc, 0x86e6, 0x8c98, 0x0, 0x1);
        gbc.writeMem(0x3d7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4d5c, gbc.sp());
        EXPECT(0x3d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0311
        gbc.setState(0x9977, 0x5649, 0x930, 0x62e2, 0x156e, 0x3e45, 0x1, 0x1);
        gbc.writeMem(0x9977, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5649, gbc.sp());
        EXPECT(0x9979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9977));
        EXPECT(0xdb, gbc.readMem(0x9978));
        // CB DB 0312
        gbc.setState(0x825, 0x8a1d, 0x5fc0, 0x2e0e, 0x5b11, 0xb418, 0x1, 0x1);
        gbc.writeMem(0x825, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8a1d, gbc.sp());
        EXPECT(0x827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0313
        gbc.setState(0xe979, 0x5c31, 0xe7b0, 0x821c, 0x8845, 0x77a4, 0x1, 0x1);
        gbc.writeMem(0xe979, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c31, gbc.sp());
        EXPECT(0xe97b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe979));
        EXPECT(0xdb, gbc.readMem(0xe97a));
        // CB DB 0314
        gbc.setState(0xd76f, 0x2843, 0x74c0, 0x6726, 0xf4a0, 0xd050, 0x0, 0x1);
        gbc.writeMem(0xd76f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x2843, gbc.sp());
        EXPECT(0xd771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd76f));
        EXPECT(0xdb, gbc.readMem(0xd770));
        // CB DB 0315
        gbc.setState(0xba21, 0x53d2, 0x51b0, 0x4d89, 0x34b7, 0x78a3, 0x0, 0x0);
        gbc.writeMem(0xba21, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0xba23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba21));
        EXPECT(0xdb, gbc.readMem(0xba22));
        // CB DB 0316
        gbc.setState(0x30fd, 0x61f3, 0xbc90, 0x8e7a, 0x5a65, 0xe534, 0x0, 0x0);
        gbc.writeMem(0x30fd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x61f3, gbc.sp());
        EXPECT(0x30ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0318
        gbc.setState(0xe83d, 0xe2d2, 0x5180, 0x1c97, 0x45a7, 0xbf40, 0x1, 0x1);
        gbc.writeMem(0xe83d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe2d2, gbc.sp());
        EXPECT(0xe83f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe83d));
        EXPECT(0xdb, gbc.readMem(0xe83e));
        // CB DB 0319
        gbc.setState(0xb33c, 0xf6fc, 0xbfc0, 0x1c1, 0xfc29, 0x5454, 0x0, 0x0);
        gbc.writeMem(0xb33c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf6fc, gbc.sp());
        EXPECT(0xb33e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33c));
        EXPECT(0xdb, gbc.readMem(0xb33d));
        // CB DB 031A
        gbc.setState(0xdeef, 0x21af, 0x76c0, 0x3fe9, 0xeb5c, 0xf79d, 0x1, 0x0);
        gbc.writeMem(0xdeef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x21af, gbc.sp());
        EXPECT(0xdef1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeef));
        EXPECT(0xdb, gbc.readMem(0xdef0));
        // CB DB 031B
        gbc.setState(0xc87c, 0x8893, 0x2b20, 0x2452, 0xc705, 0xcb9d, 0x1, 0x0);
        gbc.writeMem(0xc87c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8893, gbc.sp());
        EXPECT(0xc87e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc87c));
        EXPECT(0xdb, gbc.readMem(0xc87d));
        // CB DB 031D
        gbc.setState(0x890f, 0x8bb8, 0x1fe0, 0xaaae, 0x6dca, 0x771a, 0x0, 0x1);
        gbc.writeMem(0x890f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x8bb8, gbc.sp());
        EXPECT(0x8911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x890f));
        EXPECT(0xdb, gbc.readMem(0x8910));
        // CB DB 031E
        gbc.setState(0x777b, 0x171a, 0x5ad0, 0x383f, 0x68c7, 0xdd8f, 0x1, 0x0);
        gbc.writeMem(0x777b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x171a, gbc.sp());
        EXPECT(0x777d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 031F
        gbc.setState(0x9c7b, 0xb95c, 0x1f80, 0xa095, 0x7727, 0x1ca4, 0x0, 0x0);
        gbc.writeMem(0x9c7b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xb95c, gbc.sp());
        EXPECT(0x9c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7b));
        EXPECT(0xdb, gbc.readMem(0x9c7c));
        // CB DB 0320
        gbc.setState(0xa375, 0xaf51, 0xd160, 0x2bfe, 0x5261, 0xa64d, 0x0, 0x1);
        gbc.writeMem(0xa375, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaf51, gbc.sp());
        EXPECT(0xa377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa375));
        EXPECT(0xdb, gbc.readMem(0xa376));
        // CB DB 0321
        gbc.setState(0x9e4b, 0x82c0, 0xb1e0, 0x8b74, 0x2, 0xf33, 0x0, 0x1);
        gbc.writeMem(0x9e4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x82c0, gbc.sp());
        EXPECT(0x9e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4b));
        EXPECT(0xdb, gbc.readMem(0x9e4c));
        // CB DB 0322
        gbc.setState(0x21f5, 0x2ac6, 0x9800, 0x4f6e, 0x26d6, 0xc182, 0x1, 0x0);
        gbc.writeMem(0x21f5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x2ac6, gbc.sp());
        EXPECT(0x21f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0323
        gbc.setState(0x1f30, 0x2241, 0xe2b0, 0x64f0, 0xdef7, 0xc99d, 0x1, 0x1);
        gbc.writeMem(0x1f30, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0x1f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0324
        gbc.setState(0x3680, 0xc11, 0xc5d0, 0x5a70, 0xe6e8, 0x9712, 0x1, 0x1);
        gbc.writeMem(0x3680, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc11, gbc.sp());
        EXPECT(0x3682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0325
        gbc.setState(0xdbd1, 0x348f, 0x6c0, 0xf890, 0x1ef6, 0x545e, 0x0, 0x0);
        gbc.writeMem(0xdbd1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x348f, gbc.sp());
        EXPECT(0xdbd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd1));
        EXPECT(0xdb, gbc.readMem(0xdbd2));
        // CB DB 0326
        gbc.setState(0xd9ab, 0xd181, 0xad00, 0x800, 0xdd92, 0x413f, 0x0, 0x0);
        gbc.writeMem(0xd9ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd181, gbc.sp());
        EXPECT(0xd9ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ab));
        EXPECT(0xdb, gbc.readMem(0xd9ac));
        // CB DB 0327
        gbc.setState(0xdca3, 0x60ca, 0xcff0, 0xdf84, 0x16d1, 0x77af, 0x1, 0x0);
        gbc.writeMem(0xdca3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x60ca, gbc.sp());
        EXPECT(0xdca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdca3));
        EXPECT(0xdb, gbc.readMem(0xdca4));
        // CB DB 0328
        gbc.setState(0xb95e, 0x3e35, 0x99e0, 0x2e96, 0x4885, 0x13e2, 0x1, 0x1);
        gbc.writeMem(0xb95e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3e35, gbc.sp());
        EXPECT(0xb960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95e));
        EXPECT(0xdb, gbc.readMem(0xb95f));
        // CB DB 0329
        gbc.setState(0xabca, 0x9835, 0x1a10, 0x1bf, 0x1578, 0x2abe, 0x1, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9835, gbc.sp());
        EXPECT(0xabcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabca));
        EXPECT(0xdb, gbc.readMem(0xabcb));
        // CB DB 032A
        gbc.setState(0xc7b9, 0x36c6, 0xaf70, 0xa8cf, 0x9ef, 0x52d6, 0x1, 0x0);
        gbc.writeMem(0xc7b9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x36c6, gbc.sp());
        EXPECT(0xc7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b9));
        EXPECT(0xdb, gbc.readMem(0xc7ba));
        // CB DB 032B
        gbc.setState(0xc0de, 0xcdf6, 0x8060, 0x6719, 0xb9a0, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0xc0de, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xcdf6, gbc.sp());
        EXPECT(0xc0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0de));
        EXPECT(0xdb, gbc.readMem(0xc0df));
        // CB DB 032C
        gbc.setState(0x2be0, 0xabb3, 0xba00, 0x6cb6, 0x1450, 0x70c1, 0x0, 0x1);
        gbc.writeMem(0x2be0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xabb3, gbc.sp());
        EXPECT(0x2be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 032D
        gbc.setState(0xa053, 0xae4b, 0xff20, 0x62f9, 0xc813, 0x599c, 0x0, 0x0);
        gbc.writeMem(0xa053, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xae4b, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa053));
        EXPECT(0xdb, gbc.readMem(0xa054));
        // CB DB 032E
        gbc.setState(0x2c2e, 0x81a9, 0x5d30, 0x8155, 0x5f74, 0xf738, 0x1, 0x0);
        gbc.writeMem(0x2c2e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x81a9, gbc.sp());
        EXPECT(0x2c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 032F
        gbc.setState(0x9071, 0x3c49, 0x9370, 0xde24, 0x370, 0x8419, 0x1, 0x1);
        gbc.writeMem(0x9071, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3c49, gbc.sp());
        EXPECT(0x9073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9071));
        EXPECT(0xdb, gbc.readMem(0x9072));
        // CB DB 0332
        gbc.setState(0x25b8, 0xfbce, 0x9be0, 0x45c6, 0x626d, 0x1f99, 0x1, 0x0);
        gbc.writeMem(0x25b8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xfbce, gbc.sp());
        EXPECT(0x25ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0333
        gbc.setState(0x5cc9, 0x24e3, 0xdcb0, 0x1a6d, 0x508c, 0x178b, 0x0, 0x0);
        gbc.writeMem(0x5cc9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x24e3, gbc.sp());
        EXPECT(0x5ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0334
        gbc.setState(0xd04d, 0xe102, 0x52f0, 0xcf52, 0x6eec, 0xf049, 0x0, 0x0);
        gbc.writeMem(0xd04d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0xd04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04d));
        EXPECT(0xdb, gbc.readMem(0xd04e));
        // CB DB 0335
        gbc.setState(0xbb2f, 0x1e6c, 0x1cc0, 0x2c9a, 0xb5d6, 0xcbe9, 0x1, 0x0);
        gbc.writeMem(0xbb2f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1e6c, gbc.sp());
        EXPECT(0xbb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb2f));
        EXPECT(0xdb, gbc.readMem(0xbb30));
        // CB DB 0336
        gbc.setState(0x7264, 0x919, 0xa1d0, 0x8800, 0x1408, 0x53e, 0x1, 0x0);
        gbc.writeMem(0x7264, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x919, gbc.sp());
        EXPECT(0x7266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0337
        gbc.setState(0xa46d, 0x881d, 0x7e20, 0x1af5, 0x3512, 0xaa14, 0x0, 0x0);
        gbc.writeMem(0xa46d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x881d, gbc.sp());
        EXPECT(0xa46f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46d));
        EXPECT(0xdb, gbc.readMem(0xa46e));
        // CB DB 0338
        gbc.setState(0xc0ff, 0xfd3e, 0xd520, 0x29eb, 0x66ee, 0xbbeb, 0x0, 0x0);
        gbc.writeMem(0xc0ff, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfd3e, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ff));
        EXPECT(0xdb, gbc.readMem(0xc100));
        // CB DB 0339
        gbc.setState(0x5f5b, 0x8680, 0xc820, 0xa082, 0x35f2, 0xa5b6, 0x1, 0x1);
        gbc.writeMem(0x5f5b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8680, gbc.sp());
        EXPECT(0x5f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 033A
        gbc.setState(0x7f07, 0xe7ac, 0x8a70, 0xb17d, 0x96b2, 0x41ac, 0x1, 0x0);
        gbc.writeMem(0x7f07, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe7ac, gbc.sp());
        EXPECT(0x7f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 033B
        gbc.setState(0x3309, 0xe33e, 0x3810, 0x856e, 0x6b2c, 0x26c8, 0x0, 0x0);
        gbc.writeMem(0x3309, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe33e, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 033C
        gbc.setState(0x8fc6, 0x3e50, 0xaf60, 0x40fa, 0xc886, 0x4692, 0x0, 0x0);
        gbc.writeMem(0x8fc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3e50, gbc.sp());
        EXPECT(0x8fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fc6));
        EXPECT(0xdb, gbc.readMem(0x8fc7));
        // CB DB 033D
        gbc.setState(0xc76e, 0xc52e, 0xfe0, 0xd5b0, 0xf591, 0x98b5, 0x1, 0x0);
        gbc.writeMem(0xc76e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc52e, gbc.sp());
        EXPECT(0xc770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc76e));
        EXPECT(0xdb, gbc.readMem(0xc76f));
        // CB DB 033E
        gbc.setState(0xb645, 0x4a6d, 0xe520, 0x4434, 0xff59, 0x6801, 0x0, 0x0);
        gbc.writeMem(0xb645, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a6d, gbc.sp());
        EXPECT(0xb647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb645));
        EXPECT(0xdb, gbc.readMem(0xb646));
        // CB DB 033F
        gbc.setState(0xaac, 0x3b82, 0xdb50, 0xe8a4, 0xb737, 0x96b0, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3b82, gbc.sp());
        EXPECT(0xaae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0340
        gbc.setState(0x3ce5, 0xdae8, 0x7320, 0x2a5d, 0xfb94, 0x17c2, 0x1, 0x0);
        gbc.writeMem(0x3ce5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdae8, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0341
        gbc.setState(0x597e, 0x204, 0x3530, 0x8ad3, 0xdd67, 0x17dc, 0x0, 0x1);
        gbc.writeMem(0x597e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0x5980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0342
        gbc.setState(0x809a, 0x841b, 0xa2e0, 0x280b, 0x19f1, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x809a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x841b, gbc.sp());
        EXPECT(0x809c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x809a));
        EXPECT(0xdb, gbc.readMem(0x809b));
        // CB DB 0343
        gbc.setState(0xac46, 0xf805, 0x3320, 0xbe85, 0xe78b, 0x5a99, 0x1, 0x1);
        gbc.writeMem(0xac46, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf805, gbc.sp());
        EXPECT(0xac48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac46));
        EXPECT(0xdb, gbc.readMem(0xac47));
        // CB DB 0344
        gbc.setState(0x685f, 0x8a5a, 0xac0, 0xc074, 0x7890, 0x2f9c, 0x0, 0x1);
        gbc.writeMem(0x685f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8a5a, gbc.sp());
        EXPECT(0x6861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0345
        gbc.setState(0x8638, 0xe139, 0xb050, 0x7eff, 0x54b0, 0xbac1, 0x1, 0x1);
        gbc.writeMem(0x8638, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe139, gbc.sp());
        EXPECT(0x863a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8638));
        EXPECT(0xdb, gbc.readMem(0x8639));
        // CB DB 0346
        gbc.setState(0xab3a, 0xa925, 0xc720, 0xbfaf, 0x36b2, 0x3da8, 0x0, 0x0);
        gbc.writeMem(0xab3a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa925, gbc.sp());
        EXPECT(0xab3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3a));
        EXPECT(0xdb, gbc.readMem(0xab3b));
        // CB DB 0347
        gbc.setState(0xc294, 0x98c6, 0xf1f0, 0xccae, 0x6490, 0xf308, 0x0, 0x1);
        gbc.writeMem(0xc294, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x98c6, gbc.sp());
        EXPECT(0xc296, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc294));
        EXPECT(0xdb, gbc.readMem(0xc295));
        // CB DB 0348
        gbc.setState(0xe277, 0x64ca, 0x7d40, 0x6bf4, 0x14b6, 0x973b, 0x1, 0x1);
        gbc.writeMem(0xe277, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x64ca, gbc.sp());
        EXPECT(0xe279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe277));
        EXPECT(0xdb, gbc.readMem(0xe278));
        // CB DB 0349
        gbc.setState(0x7a49, 0xbef3, 0x94e0, 0x6597, 0xb791, 0x67f9, 0x0, 0x1);
        gbc.writeMem(0x7a49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbef3, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 034A
        gbc.setState(0x536d, 0x748c, 0xbfc0, 0xe057, 0x5dc7, 0x4af6, 0x1, 0x0);
        gbc.writeMem(0x536d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x748c, gbc.sp());
        EXPECT(0x536f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 034B
        gbc.setState(0xcb43, 0x2bb9, 0x5fd0, 0x4fb6, 0x34e, 0x41d5, 0x1, 0x1);
        gbc.writeMem(0xcb43, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bb9, gbc.sp());
        EXPECT(0xcb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb43));
        EXPECT(0xdb, gbc.readMem(0xcb44));
        // CB DB 034C
        gbc.setState(0x3107, 0x3aa, 0x8ac0, 0xaaec, 0xb1e, 0x4e15, 0x1, 0x0);
        gbc.writeMem(0x3107, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3aa, gbc.sp());
        EXPECT(0x3109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 034E
        gbc.setState(0x7ef2, 0x3936, 0xcb30, 0x97a5, 0xa8c4, 0xc809, 0x0, 0x1);
        gbc.writeMem(0x7ef2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3936, gbc.sp());
        EXPECT(0x7ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 034F
        gbc.setState(0x272e, 0x9ff6, 0xb5b0, 0x6d87, 0x1b31, 0xff56, 0x0, 0x0);
        gbc.writeMem(0x272e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9ff6, gbc.sp());
        EXPECT(0x2730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0350
        gbc.setState(0xbbfb, 0xd8bb, 0xcbf0, 0x55fd, 0x82d0, 0x951, 0x0, 0x0);
        gbc.writeMem(0xbbfb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd8bb, gbc.sp());
        EXPECT(0xbbfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfb));
        EXPECT(0xdb, gbc.readMem(0xbbfc));
        // CB DB 0351
        gbc.setState(0x212d, 0xf493, 0xf250, 0xf710, 0xa405, 0x50dd, 0x0, 0x0);
        gbc.writeMem(0x212d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf493, gbc.sp());
        EXPECT(0x212f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0352
        gbc.setState(0xe267, 0x40a5, 0xfc80, 0x65b8, 0xa495, 0x192, 0x0, 0x1);
        gbc.writeMem(0xe267, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x40a5, gbc.sp());
        EXPECT(0xe269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe267));
        EXPECT(0xdb, gbc.readMem(0xe268));
        // CB DB 0353
        gbc.setState(0x9008, 0x9254, 0xad80, 0x8048, 0xf143, 0x4f36, 0x1, 0x0);
        gbc.writeMem(0x9008, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9254, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9008));
        EXPECT(0xdb, gbc.readMem(0x9009));
        // CB DB 0354
        gbc.setState(0xed28, 0x1fc5, 0xf530, 0x9e2c, 0x89b2, 0xd743, 0x1, 0x1);
        gbc.writeMem(0xed28, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0xed2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed28));
        EXPECT(0xdb, gbc.readMem(0xed29));
        // CB DB 0355
        gbc.setState(0x134a, 0xfc0b, 0x4ba0, 0x3704, 0xd08b, 0x2238, 0x1, 0x0);
        gbc.writeMem(0x134a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfc0b, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0356
        gbc.setState(0x9c7e, 0x1c03, 0x4590, 0x8ab7, 0x5189, 0x5d40, 0x0, 0x0);
        gbc.writeMem(0x9c7e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1c03, gbc.sp());
        EXPECT(0x9c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7e));
        EXPECT(0xdb, gbc.readMem(0x9c7f));
        // CB DB 0357
        gbc.setState(0x7e7a, 0xf907, 0x9f20, 0xcdb6, 0x43e4, 0x9495, 0x0, 0x0);
        gbc.writeMem(0x7e7a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf907, gbc.sp());
        EXPECT(0x7e7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0358
        gbc.setState(0xaaa2, 0x3d89, 0x58e0, 0x35b0, 0xa7f5, 0xc880, 0x0, 0x0);
        gbc.writeMem(0xaaa2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0xaaa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa2));
        EXPECT(0xdb, gbc.readMem(0xaaa3));
        // CB DB 0359
        gbc.setState(0x26a, 0xdba1, 0x7600, 0x7ff0, 0xfb1, 0x5f4, 0x0, 0x1);
        gbc.writeMem(0x26a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xdba1, gbc.sp());
        EXPECT(0x26c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 035A
        gbc.setState(0x9662, 0xa4f4, 0x1650, 0x94c6, 0x2e74, 0xe39a, 0x1, 0x1);
        gbc.writeMem(0x9662, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa4f4, gbc.sp());
        EXPECT(0x9664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9662));
        EXPECT(0xdb, gbc.readMem(0x9663));
        // CB DB 035B
        gbc.setState(0x9348, 0xb786, 0x4420, 0xff5f, 0x3cca, 0x6cbf, 0x0, 0x1);
        gbc.writeMem(0x9348, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xb786, gbc.sp());
        EXPECT(0x934a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9348));
        EXPECT(0xdb, gbc.readMem(0x9349));
        // CB DB 035C
        gbc.setState(0x8015, 0xb603, 0x8f0, 0xf156, 0xb16c, 0xb93b, 0x1, 0x0);
        gbc.writeMem(0x8015, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb603, gbc.sp());
        EXPECT(0x8017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8015));
        EXPECT(0xdb, gbc.readMem(0x8016));
        // CB DB 035D
        gbc.setState(0xbafc, 0xea44, 0x3de0, 0x90f0, 0x1f84, 0x43a0, 0x1, 0x0);
        gbc.writeMem(0xbafc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xea44, gbc.sp());
        EXPECT(0xbafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbafc));
        EXPECT(0xdb, gbc.readMem(0xbafd));
        // CB DB 035E
        gbc.setState(0x8a20, 0x5243, 0xd830, 0x9c24, 0xcf2c, 0x2eac, 0x0, 0x1);
        gbc.writeMem(0x8a20, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5243, gbc.sp());
        EXPECT(0x8a22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a20));
        EXPECT(0xdb, gbc.readMem(0x8a21));
        // CB DB 035F
        gbc.setState(0x5fae, 0xbfc9, 0xca60, 0xfb56, 0x31e3, 0x10f5, 0x0, 0x0);
        gbc.writeMem(0x5fae, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbfc9, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0360
        gbc.setState(0xa7a6, 0x9545, 0xd1a0, 0x3b23, 0x3c55, 0x516c, 0x1, 0x1);
        gbc.writeMem(0xa7a6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9545, gbc.sp());
        EXPECT(0xa7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a6));
        EXPECT(0xdb, gbc.readMem(0xa7a7));
        // CB DB 0361
        gbc.setState(0xab7d, 0x8130, 0xfa60, 0x82f8, 0xcb31, 0xbd19, 0x1, 0x0);
        gbc.writeMem(0xab7d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8130, gbc.sp());
        EXPECT(0xab7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab7d));
        EXPECT(0xdb, gbc.readMem(0xab7e));
        // CB DB 0362
        gbc.setState(0xe916, 0xdfd6, 0xc140, 0x9ecd, 0x90d5, 0x5e8b, 0x0, 0x1);
        gbc.writeMem(0xe916, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdfd6, gbc.sp());
        EXPECT(0xe918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe916));
        EXPECT(0xdb, gbc.readMem(0xe917));
        // CB DB 0363
        gbc.setState(0xe6cd, 0xbbfc, 0xfc10, 0x945e, 0x9a9c, 0x33cb, 0x0, 0x0);
        gbc.writeMem(0xe6cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbbfc, gbc.sp());
        EXPECT(0xe6cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6cd));
        EXPECT(0xdb, gbc.readMem(0xe6ce));
        // CB DB 0364
        gbc.setState(0x8dfd, 0x3ae6, 0xe8d0, 0xa4f3, 0x617f, 0x6d32, 0x1, 0x1);
        gbc.writeMem(0x8dfd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x3ae6, gbc.sp());
        EXPECT(0x8dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfd));
        EXPECT(0xdb, gbc.readMem(0x8dfe));
        // CB DB 0365
        gbc.setState(0xe647, 0xdf46, 0xa950, 0x9a6, 0x5bbb, 0x31ae, 0x0, 0x0);
        gbc.writeMem(0xe647, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xdf46, gbc.sp());
        EXPECT(0xe649, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe647));
        EXPECT(0xdb, gbc.readMem(0xe648));
        // CB DB 0366
        gbc.setState(0x192, 0x75a, 0xc6f0, 0xc759, 0xbec9, 0x61cc, 0x1, 0x0);
        gbc.writeMem(0x192, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x75a, gbc.sp());
        EXPECT(0x194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0367
        gbc.setState(0xe971, 0x35da, 0xd660, 0x79d6, 0x3071, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0xe971, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0xe973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe971));
        EXPECT(0xdb, gbc.readMem(0xe972));
        // CB DB 0368
        gbc.setState(0x2e88, 0x6537, 0x5e00, 0x2a1d, 0x3fd7, 0x3685, 0x1, 0x0);
        gbc.writeMem(0x2e88, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6537, gbc.sp());
        EXPECT(0x2e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0369
        gbc.setState(0x709d, 0x8860, 0x9070, 0xb90f, 0x3970, 0xd8ba, 0x0, 0x0);
        gbc.writeMem(0x709d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8860, gbc.sp());
        EXPECT(0x709f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 036A
        gbc.setState(0x36a, 0x626a, 0x37e0, 0x8e24, 0x465f, 0x7a13, 0x1, 0x1);
        gbc.writeMem(0x36a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x626a, gbc.sp());
        EXPECT(0x36c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 036C
        gbc.setState(0x703c, 0x3f41, 0x650, 0xa588, 0xe76a, 0x8871, 0x1, 0x0);
        gbc.writeMem(0x703c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3f41, gbc.sp());
        EXPECT(0x703e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 036D
        gbc.setState(0x3bf9, 0x1809, 0xfdf0, 0x72a2, 0x1e3, 0x7a54, 0x1, 0x0);
        gbc.writeMem(0x3bf9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1809, gbc.sp());
        EXPECT(0x3bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 036E
        gbc.setState(0x5c11, 0x4c4f, 0x4990, 0x20e0, 0x8952, 0x3c3b, 0x1, 0x1);
        gbc.writeMem(0x5c11, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4c4f, gbc.sp());
        EXPECT(0x5c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 036F
        gbc.setState(0x960c, 0xcc26, 0x2220, 0x88e9, 0x7d5f, 0x808e, 0x0, 0x0);
        gbc.writeMem(0x960c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xcc26, gbc.sp());
        EXPECT(0x960e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x960c));
        EXPECT(0xdb, gbc.readMem(0x960d));
        // CB DB 0370
        gbc.setState(0x4f76, 0x28e7, 0x6b20, 0x5911, 0x8a67, 0xd0d0, 0x0, 0x1);
        gbc.writeMem(0x4f76, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x28e7, gbc.sp());
        EXPECT(0x4f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0371
        gbc.setState(0x3d93, 0x92f4, 0x48b0, 0x60ee, 0xf779, 0xb19c, 0x1, 0x0);
        gbc.writeMem(0x3d93, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0372
        gbc.setState(0x4f44, 0x7fb6, 0xadb0, 0xcdf6, 0x699a, 0xeea6, 0x0, 0x0);
        gbc.writeMem(0x4f44, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x4f46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0373
        gbc.setState(0x147a, 0xab9c, 0x4d30, 0xd364, 0x4b44, 0x3b07, 0x1, 0x1);
        gbc.writeMem(0x147a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xab9c, gbc.sp());
        EXPECT(0x147c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0374
        gbc.setState(0x7b71, 0xa98c, 0x2990, 0x138a, 0x13db, 0xc7a1, 0x1, 0x0);
        gbc.writeMem(0x7b71, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa98c, gbc.sp());
        EXPECT(0x7b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0375
        gbc.setState(0x3c0b, 0x9e68, 0xe60, 0xf5c4, 0x9c76, 0x880c, 0x1, 0x1);
        gbc.writeMem(0x3c0b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9e68, gbc.sp());
        EXPECT(0x3c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0376
        gbc.setState(0x59b1, 0x3243, 0x33b0, 0x9c32, 0x99fb, 0x30a8, 0x0, 0x0);
        gbc.writeMem(0x59b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3243, gbc.sp());
        EXPECT(0x59b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0377
        gbc.setState(0xba8c, 0x9c77, 0x6a70, 0x867f, 0x4b7, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0xba8c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c77, gbc.sp());
        EXPECT(0xba8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba8c));
        EXPECT(0xdb, gbc.readMem(0xba8d));
        // CB DB 0378
        gbc.setState(0xd4d3, 0x5272, 0x4400, 0xd9a1, 0x6be5, 0x6f99, 0x1, 0x0);
        gbc.writeMem(0xd4d3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0xd4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4d3));
        EXPECT(0xdb, gbc.readMem(0xd4d4));
        // CB DB 0379
        gbc.setState(0x5d2b, 0x715f, 0x5f10, 0x5000, 0x6466, 0x9714, 0x1, 0x0);
        gbc.writeMem(0x5d2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x715f, gbc.sp());
        EXPECT(0x5d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 037A
        gbc.setState(0xdbe6, 0xc424, 0xbd10, 0x9650, 0x222d, 0xd6c7, 0x1, 0x0);
        gbc.writeMem(0xdbe6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc424, gbc.sp());
        EXPECT(0xdbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe6));
        EXPECT(0xdb, gbc.readMem(0xdbe7));
        // CB DB 037B
        gbc.setState(0xb543, 0x5d3e, 0xebc0, 0x24eb, 0x6c6c, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0xb543, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5d3e, gbc.sp());
        EXPECT(0xb545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb543));
        EXPECT(0xdb, gbc.readMem(0xb544));
        // CB DB 037C
        gbc.setState(0xcc5f, 0x28e0, 0x9310, 0xcaa9, 0x9f0f, 0x8c79, 0x0, 0x0);
        gbc.writeMem(0xcc5f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x28e0, gbc.sp());
        EXPECT(0xcc61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc5f));
        EXPECT(0xdb, gbc.readMem(0xcc60));
        // CB DB 037D
        gbc.setState(0xbe17, 0xac19, 0x47a0, 0x3005, 0x95e2, 0x41da, 0x0, 0x0);
        gbc.writeMem(0xbe17, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xac19, gbc.sp());
        EXPECT(0xbe19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe17));
        EXPECT(0xdb, gbc.readMem(0xbe18));
        // CB DB 037E
        gbc.setState(0x8fd6, 0x35d1, 0xfc0, 0xbdc2, 0x5a83, 0x784d, 0x1, 0x0);
        gbc.writeMem(0x8fd6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x35d1, gbc.sp());
        EXPECT(0x8fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd6));
        EXPECT(0xdb, gbc.readMem(0x8fd7));
        // CB DB 037F
        gbc.setState(0x70b5, 0x6e4a, 0xd330, 0x4108, 0x1ab8, 0xde89, 0x0, 0x1);
        gbc.writeMem(0x70b5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6e4a, gbc.sp());
        EXPECT(0x70b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0380
        gbc.setState(0x5b52, 0x89cf, 0xc370, 0xe442, 0xa701, 0x87d2, 0x0, 0x1);
        gbc.writeMem(0x5b52, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x89cf, gbc.sp());
        EXPECT(0x5b54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0381
        gbc.setState(0xebc6, 0xe9fe, 0x4ee0, 0x7801, 0x89ed, 0x9de0, 0x1, 0x1);
        gbc.writeMem(0xebc6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe9fe, gbc.sp());
        EXPECT(0xebc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc6));
        EXPECT(0xdb, gbc.readMem(0xebc7));
        // CB DB 0382
        gbc.setState(0x149c, 0x6cee, 0x5c70, 0x7a1a, 0xbfdc, 0x5e61, 0x1, 0x0);
        gbc.writeMem(0x149c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6cee, gbc.sp());
        EXPECT(0x149e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0383
        gbc.setState(0x73a2, 0xcff5, 0xba0, 0xce42, 0xb801, 0xb035, 0x1, 0x1);
        gbc.writeMem(0x73a2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0x73a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0384
        gbc.setState(0x799b, 0xfbef, 0xa8b0, 0xac73, 0x69e9, 0x6c48, 0x1, 0x0);
        gbc.writeMem(0x799b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x799d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0385
        gbc.setState(0xe242, 0xf10c, 0x8340, 0xf9d9, 0xd7b5, 0x52ad, 0x1, 0x0);
        gbc.writeMem(0xe242, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf10c, gbc.sp());
        EXPECT(0xe244, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe242));
        EXPECT(0xdb, gbc.readMem(0xe243));
        // CB DB 0386
        gbc.setState(0x95a9, 0x86a3, 0xf370, 0x54b5, 0xca07, 0x3c, 0x0, 0x0);
        gbc.writeMem(0x95a9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x86a3, gbc.sp());
        EXPECT(0x95ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95a9));
        EXPECT(0xdb, gbc.readMem(0x95aa));
        // CB DB 0387
        gbc.setState(0xbf8a, 0x4ced, 0x5a70, 0x639a, 0xe518, 0xf417, 0x0, 0x1);
        gbc.writeMem(0xbf8a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4ced, gbc.sp());
        EXPECT(0xbf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf8a));
        EXPECT(0xdb, gbc.readMem(0xbf8b));
        // CB DB 0388
        gbc.setState(0x7a09, 0xb83c, 0x3570, 0x8925, 0x7c54, 0x4e5c, 0x1, 0x1);
        gbc.writeMem(0x7a09, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb83c, gbc.sp());
        EXPECT(0x7a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0389
        gbc.setState(0x46f2, 0x9449, 0x5790, 0xb9bf, 0x20ea, 0xb4f5, 0x1, 0x0);
        gbc.writeMem(0x46f2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9449, gbc.sp());
        EXPECT(0x46f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 038B
        gbc.setState(0x6217, 0x91af, 0x9180, 0xbb82, 0x120c, 0x8254, 0x0, 0x1);
        gbc.writeMem(0x6217, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x91af, gbc.sp());
        EXPECT(0x6219, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 038C
        gbc.setState(0xaedf, 0x66e9, 0x8dd0, 0x1dd8, 0x2212, 0xb66b, 0x1, 0x1);
        gbc.writeMem(0xaedf, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x66e9, gbc.sp());
        EXPECT(0xaee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaedf));
        EXPECT(0xdb, gbc.readMem(0xaee0));
        // CB DB 038D
        gbc.setState(0x3eb8, 0x7589, 0x2960, 0x44d8, 0x6f77, 0x14ca, 0x1, 0x0);
        gbc.writeMem(0x3eb8, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7589, gbc.sp());
        EXPECT(0x3eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 038E
        gbc.setState(0x5741, 0x266e, 0x5c80, 0xe60, 0x4160, 0x1e00, 0x0, 0x1);
        gbc.writeMem(0x5741, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0x5743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 038F
        gbc.setState(0x1055, 0xbe0d, 0x1d90, 0x997c, 0xf9e7, 0xb6b6, 0x0, 0x0);
        gbc.writeMem(0x1055, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x1057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0390
        gbc.setState(0xa8ce, 0xfc17, 0xa9f0, 0xf119, 0x545e, 0x8597, 0x0, 0x0);
        gbc.writeMem(0xa8ce, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xfc17, gbc.sp());
        EXPECT(0xa8d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8ce));
        EXPECT(0xdb, gbc.readMem(0xa8cf));
        // CB DB 0391
        gbc.setState(0xa68, 0x515d, 0x9e40, 0x6020, 0x2d0a, 0x40eb, 0x0, 0x0);
        gbc.writeMem(0xa68, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x515d, gbc.sp());
        EXPECT(0xa6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0392
        gbc.setState(0xb7c7, 0x8110, 0xa40, 0x85a7, 0xfbd1, 0xe38a, 0x1, 0x1);
        gbc.writeMem(0xb7c7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8110, gbc.sp());
        EXPECT(0xb7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c7));
        EXPECT(0xdb, gbc.readMem(0xb7c8));
        // CB DB 0393
        gbc.setState(0xb629, 0x8921, 0x4d90, 0xbac0, 0x8fc9, 0xb4b2, 0x0, 0x0);
        gbc.writeMem(0xb629, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8921, gbc.sp());
        EXPECT(0xb62b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb629));
        EXPECT(0xdb, gbc.readMem(0xb62a));
        // CB DB 0394
        gbc.setState(0x5de3, 0x4793, 0x1180, 0x80e4, 0x30b2, 0x1b40, 0x1, 0x0);
        gbc.writeMem(0x5de3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4793, gbc.sp());
        EXPECT(0x5de5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0395
        gbc.setState(0xbfc1, 0x3660, 0x7000, 0x452a, 0x9147, 0xee46, 0x1, 0x1);
        gbc.writeMem(0xbfc1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0xbfc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc1));
        EXPECT(0xdb, gbc.readMem(0xbfc2));
        // CB DB 0396
        gbc.setState(0xcc7, 0xae7b, 0xf4c0, 0xeda7, 0x133c, 0x6dd9, 0x0, 0x0);
        gbc.writeMem(0xcc7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xae7b, gbc.sp());
        EXPECT(0xcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 0397
        gbc.setState(0xa1ba, 0x8922, 0x19e0, 0xb849, 0x5cef, 0x1331, 0x0, 0x0);
        gbc.writeMem(0xa1ba, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0xa1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ba));
        EXPECT(0xdb, gbc.readMem(0xa1bb));
        // CB DB 0398
        gbc.setState(0x3d65, 0x82ff, 0x5b90, 0x6d58, 0x4d5c, 0xd00e, 0x1, 0x0);
        gbc.writeMem(0x3d65, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x82ff, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 0399
        gbc.setState(0x79a4, 0x8b9f, 0x40c0, 0xa6b5, 0x1f64, 0x3f37, 0x0, 0x1);
        gbc.writeMem(0x79a4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8b9f, gbc.sp());
        EXPECT(0x79a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 039A
        gbc.setState(0x491b, 0x5411, 0xb5e0, 0x9f25, 0x7f8d, 0x53c2, 0x1, 0x1);
        gbc.writeMem(0x491b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5411, gbc.sp());
        EXPECT(0x491d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 039B
        gbc.setState(0x8970, 0x34ae, 0x6090, 0x3820, 0xdfa8, 0x4472, 0x1, 0x1);
        gbc.writeMem(0x8970, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x34ae, gbc.sp());
        EXPECT(0x8972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8970));
        EXPECT(0xdb, gbc.readMem(0x8971));
        // CB DB 039C
        gbc.setState(0x546a, 0x153b, 0xc4a0, 0x8df6, 0x4328, 0x1fa4, 0x1, 0x1);
        gbc.writeMem(0x546a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x153b, gbc.sp());
        EXPECT(0x546c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 039D
        gbc.setState(0x245f, 0x6a92, 0xba80, 0xdaea, 0x97f1, 0xd9c9, 0x1, 0x1);
        gbc.writeMem(0x245f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6a92, gbc.sp());
        EXPECT(0x2461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 039E
        gbc.setState(0xb193, 0x3325, 0xdde0, 0xf1b3, 0xb97f, 0xa85c, 0x1, 0x1);
        gbc.writeMem(0xb193, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3325, gbc.sp());
        EXPECT(0xb195, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb193));
        EXPECT(0xdb, gbc.readMem(0xb194));
        // CB DB 039F
        gbc.setState(0x35a1, 0x31aa, 0x60e0, 0xc138, 0x98cf, 0xa15d, 0x1, 0x1);
        gbc.writeMem(0x35a1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x31aa, gbc.sp());
        EXPECT(0x35a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03A0
        gbc.setState(0xb1ab, 0xf99c, 0x4670, 0xa84e, 0xf2be, 0x13df, 0x1, 0x1);
        gbc.writeMem(0xb1ab, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf99c, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ab));
        EXPECT(0xdb, gbc.readMem(0xb1ac));
        // CB DB 03A1
        gbc.setState(0xdd8d, 0x7f76, 0x9e50, 0x6fb4, 0xaa77, 0xb0dc, 0x1, 0x1);
        gbc.writeMem(0xdd8d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7f76, gbc.sp());
        EXPECT(0xdd8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd8d));
        EXPECT(0xdb, gbc.readMem(0xdd8e));
        // CB DB 03A2
        gbc.setState(0x3bb6, 0x36ae, 0x3c80, 0xde58, 0xd54, 0xc6ca, 0x1, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x36ae, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03A3
        gbc.setState(0xdb33, 0x8674, 0xe7d0, 0x904f, 0x5d6c, 0x8361, 0x1, 0x1);
        gbc.writeMem(0xdb33, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0xdb35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb33));
        EXPECT(0xdb, gbc.readMem(0xdb34));
        // CB DB 03A4
        gbc.setState(0x4ac4, 0x579d, 0x9c00, 0x9f0, 0xdf0c, 0x4f41, 0x0, 0x1);
        gbc.writeMem(0x4ac4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x579d, gbc.sp());
        EXPECT(0x4ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03A5
        gbc.setState(0x8176, 0x176f, 0xba10, 0x420d, 0x681d, 0xfa0b, 0x1, 0x1);
        gbc.writeMem(0x8176, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x176f, gbc.sp());
        EXPECT(0x8178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8176));
        EXPECT(0xdb, gbc.readMem(0x8177));
        // CB DB 03A6
        gbc.setState(0x458b, 0x2126, 0x3a40, 0xbc87, 0x11be, 0x50ac, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2126, gbc.sp());
        EXPECT(0x458d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03A7
        gbc.setState(0x4e60, 0x3ffd, 0xbd50, 0xb714, 0x6d47, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0x4e60, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3ffd, gbc.sp());
        EXPECT(0x4e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03A8
        gbc.setState(0x5ff3, 0xc334, 0xdf40, 0xe985, 0xf92f, 0x770e, 0x0, 0x0);
        gbc.writeMem(0x5ff3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc334, gbc.sp());
        EXPECT(0x5ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03A9
        gbc.setState(0xce15, 0x5cab, 0x5880, 0x22b4, 0x480b, 0x854e, 0x1, 0x0);
        gbc.writeMem(0xce15, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5cab, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce15));
        EXPECT(0xdb, gbc.readMem(0xce16));
        // CB DB 03AA
        gbc.setState(0x94f, 0x279e, 0xb5a0, 0x496, 0x1242, 0x8e1e, 0x0, 0x1);
        gbc.writeMem(0x94f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03AB
        gbc.setState(0x27c3, 0x77eb, 0x3e70, 0xa297, 0x4c13, 0x9eab, 0x1, 0x1);
        gbc.writeMem(0x27c3, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x77eb, gbc.sp());
        EXPECT(0x27c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03AC
        gbc.setState(0xe32a, 0xd228, 0x8660, 0x3bec, 0x32d9, 0xc012, 0x0, 0x0);
        gbc.writeMem(0xe32a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd228, gbc.sp());
        EXPECT(0xe32c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe32a));
        EXPECT(0xdb, gbc.readMem(0xe32b));
        // CB DB 03AD
        gbc.setState(0x799f, 0xeab7, 0x7c90, 0x6bb0, 0x51d8, 0x93a5, 0x1, 0x1);
        gbc.writeMem(0x799f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xeab7, gbc.sp());
        EXPECT(0x79a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03AE
        gbc.setState(0x856a, 0x8167, 0x4fd0, 0xe810, 0x7301, 0x417e, 0x1, 0x1);
        gbc.writeMem(0x856a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8167, gbc.sp());
        EXPECT(0x856c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856a));
        EXPECT(0xdb, gbc.readMem(0x856b));
        // CB DB 03AF
        gbc.setState(0xc3b1, 0x12d9, 0x33c0, 0x4a3d, 0xfe05, 0xb6bf, 0x1, 0x1);
        gbc.writeMem(0xc3b1, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x12d9, gbc.sp());
        EXPECT(0xc3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b1));
        EXPECT(0xdb, gbc.readMem(0xc3b2));
        // CB DB 03B0
        gbc.setState(0x8d51, 0xb0ab, 0x9080, 0xd02e, 0x2cde, 0x9a87, 0x0, 0x1);
        gbc.writeMem(0x8d51, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0x8d53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d51));
        EXPECT(0xdb, gbc.readMem(0x8d52));
        // CB DB 03B1
        gbc.setState(0xe227, 0xd8ba, 0x5fa0, 0x8974, 0x658f, 0x7618, 0x1, 0x0);
        gbc.writeMem(0xe227, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd8ba, gbc.sp());
        EXPECT(0xe229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe227));
        EXPECT(0xdb, gbc.readMem(0xe228));
        // CB DB 03B2
        gbc.setState(0x803e, 0xea5, 0xd630, 0x5625, 0xd100, 0xfec0, 0x1, 0x0);
        gbc.writeMem(0x803e, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xea5, gbc.sp());
        EXPECT(0x8040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x803e));
        EXPECT(0xdb, gbc.readMem(0x803f));
        // CB DB 03B3
        gbc.setState(0xcac2, 0xce95, 0x9f50, 0x89c5, 0x9733, 0xc4c3, 0x1, 0x0);
        gbc.writeMem(0xcac2, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xce95, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0xdb, gbc.readMem(0xcac3));
        // CB DB 03B4
        gbc.setState(0xd3e9, 0xb1b8, 0xc080, 0x13d8, 0x43ad, 0xff34, 0x1, 0x1);
        gbc.writeMem(0xd3e9, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb1b8, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e9));
        EXPECT(0xdb, gbc.readMem(0xd3ea));
        // CB DB 03B5
        gbc.setState(0xd261, 0x9205, 0xeab0, 0xd813, 0x538e, 0x137e, 0x1, 0x1);
        gbc.writeMem(0xd261, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9205, gbc.sp());
        EXPECT(0xd263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd261));
        EXPECT(0xdb, gbc.readMem(0xd262));
        // CB DB 03B6
        gbc.setState(0xcc4b, 0xa9f7, 0xec60, 0xc430, 0x3067, 0x3abd, 0x1, 0x1);
        gbc.writeMem(0xcc4b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa9f7, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc4b));
        EXPECT(0xdb, gbc.readMem(0xcc4c));
        // CB DB 03B7
        gbc.setState(0x6819, 0xa372, 0x39e0, 0x6272, 0xaa0, 0xd24f, 0x0, 0x0);
        gbc.writeMem(0x6819, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa372, gbc.sp());
        EXPECT(0x681b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03B8
        gbc.setState(0x8a2b, 0xb117, 0xba30, 0x75f7, 0x44d1, 0xebd7, 0x0, 0x0);
        gbc.writeMem(0x8a2b, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb117, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2b));
        EXPECT(0xdb, gbc.readMem(0x8a2c));
        // CB DB 03B9
        gbc.setState(0x49f0, 0x5703, 0xe80, 0xbd58, 0xf736, 0x1ed0, 0x0, 0x1);
        gbc.writeMem(0x49f0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5703, gbc.sp());
        EXPECT(0x49f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03BA
        gbc.setState(0x2c79, 0x7e, 0xdd70, 0xe775, 0x3e6, 0xe963, 0x1, 0x0);
        gbc.writeMem(0x2c79, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7e, gbc.sp());
        EXPECT(0x2c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03BB
        gbc.setState(0xace6, 0x6149, 0x9080, 0x4d17, 0xcffa, 0xc309, 0x1, 0x1);
        gbc.writeMem(0xace6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6149, gbc.sp());
        EXPECT(0xace8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace6));
        EXPECT(0xdb, gbc.readMem(0xace7));
        // CB DB 03BC
        gbc.setState(0x93cb, 0x28ec, 0xe820, 0xec70, 0x161b, 0x549b, 0x1, 0x0);
        gbc.writeMem(0x93cb, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x28ec, gbc.sp());
        EXPECT(0x93cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93cb));
        EXPECT(0xdb, gbc.readMem(0x93cc));
        // CB DB 03BD
        gbc.setState(0x61d0, 0xed35, 0xf440, 0xf9f7, 0xdcd5, 0x336e, 0x0, 0x0);
        gbc.writeMem(0x61d0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xed35, gbc.sp());
        EXPECT(0x61d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03BE
        gbc.setState(0x796f, 0x4abd, 0x4900, 0x3372, 0xa23f, 0xfe4, 0x0, 0x0);
        gbc.writeMem(0x796f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4abd, gbc.sp());
        EXPECT(0x7971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03BF
        gbc.setState(0xb36, 0x3609, 0x5cd0, 0xb14e, 0x1845, 0x22df, 0x0, 0x1);
        gbc.writeMem(0xb36, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3609, gbc.sp());
        EXPECT(0xb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03C0
        gbc.setState(0x6780, 0x184d, 0x6630, 0xda04, 0x1a05, 0xb8e5, 0x1, 0x1);
        gbc.writeMem(0x6780, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x184d, gbc.sp());
        EXPECT(0x6782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03C1
        gbc.setState(0xe5d7, 0xe2d1, 0xb6c0, 0x78e9, 0xd991, 0x4a0c, 0x1, 0x1);
        gbc.writeMem(0xe5d7, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe2d1, gbc.sp());
        EXPECT(0xe5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5d7));
        EXPECT(0xdb, gbc.readMem(0xe5d8));
        // CB DB 03C3
        gbc.setState(0x8020, 0x7ecb, 0x82c0, 0x2431, 0xbfca, 0x4e72, 0x0, 0x1);
        gbc.writeMem(0x8020, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x7ecb, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8020));
        EXPECT(0xdb, gbc.readMem(0x8021));
        // CB DB 03C4
        gbc.setState(0xe508, 0xc61a, 0xcb90, 0x9e9c, 0x8be5, 0x126d, 0x0, 0x0);
        gbc.writeMem(0xe508, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc61a, gbc.sp());
        EXPECT(0xe50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe508));
        EXPECT(0xdb, gbc.readMem(0xe509));
        // CB DB 03C5
        gbc.setState(0x3610, 0x9bfc, 0x1ba0, 0x586c, 0x9e88, 0x2224, 0x1, 0x1);
        gbc.writeMem(0x3610, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9bfc, gbc.sp());
        EXPECT(0x3612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03C6
        gbc.setState(0x45d6, 0x9fd6, 0xfc60, 0x7161, 0x53c4, 0xa8d1, 0x1, 0x1);
        gbc.writeMem(0x45d6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0x45d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03C7
        gbc.setState(0xd111, 0xfa7f, 0x6260, 0x6b22, 0x9b90, 0x78c5, 0x0, 0x0);
        gbc.writeMem(0xd111, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfa7f, gbc.sp());
        EXPECT(0xd113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd111));
        EXPECT(0xdb, gbc.readMem(0xd112));
        // CB DB 03C8
        gbc.setState(0x5826, 0x8335, 0xf230, 0xf1eb, 0x5ce4, 0xc93e, 0x1, 0x1);
        gbc.writeMem(0x5826, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8335, gbc.sp());
        EXPECT(0x5828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03C9
        gbc.setState(0x4530, 0xbbb, 0x18d0, 0x68de, 0xfa7, 0xcc29, 0x1, 0x1);
        gbc.writeMem(0x4530, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbbb, gbc.sp());
        EXPECT(0x4532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03CA
        gbc.setState(0x11ac, 0x5807, 0x8070, 0x9aca, 0xd11a, 0xccd5, 0x1, 0x1);
        gbc.writeMem(0x11ac, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5807, gbc.sp());
        EXPECT(0x11ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03CB
        gbc.setState(0x47a0, 0x7499, 0x1dd0, 0xc4ee, 0x6547, 0xc945, 0x1, 0x1);
        gbc.writeMem(0x47a0, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7499, gbc.sp());
        EXPECT(0x47a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03CD
        gbc.setState(0xb590, 0xc91f, 0xe280, 0xbce4, 0x37e0, 0x6b72, 0x1, 0x0);
        gbc.writeMem(0xb590, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0xb592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb590));
        EXPECT(0xdb, gbc.readMem(0xb591));
        // CB DB 03CE
        gbc.setState(0x5c2a, 0xb817, 0x5c90, 0x4508, 0xe7b8, 0xe4e3, 0x1, 0x1);
        gbc.writeMem(0x5c2a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb817, gbc.sp());
        EXPECT(0x5c2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03CF
        gbc.setState(0x23c4, 0xcd31, 0x53a0, 0x3130, 0x831b, 0x304a, 0x0, 0x0);
        gbc.writeMem(0x23c4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xcd31, gbc.sp());
        EXPECT(0x23c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03D0
        gbc.setState(0x2b4, 0xa3a9, 0x7b90, 0xeb5d, 0x677b, 0xd42d, 0x1, 0x0);
        gbc.writeMem(0x2b4, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa3a9, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03D1
        gbc.setState(0x9b3f, 0xa22f, 0x800, 0x7e, 0x8cd1, 0x8bd5, 0x1, 0x1);
        gbc.writeMem(0x9b3f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa22f, gbc.sp());
        EXPECT(0x9b41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b3f));
        EXPECT(0xdb, gbc.readMem(0x9b40));
        // CB DB 03D2
        gbc.setState(0x1e5, 0x74a, 0x3ed0, 0xb398, 0x1ec, 0x4d2c, 0x0, 0x1);
        gbc.writeMem(0x1e5, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x74a, gbc.sp());
        EXPECT(0x1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03D3
        gbc.setState(0x1c49, 0xc1c1, 0x2f00, 0x3b8f, 0x1583, 0x7192, 0x1, 0x1);
        gbc.writeMem(0x1c49, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc1c1, gbc.sp());
        EXPECT(0x1c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03D4
        gbc.setState(0xb7cc, 0xa2a9, 0xd090, 0x7c0e, 0x3a62, 0xe093, 0x1, 0x0);
        gbc.writeMem(0xb7cc, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xa2a9, gbc.sp());
        EXPECT(0xb7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7cc));
        EXPECT(0xdb, gbc.readMem(0xb7cd));
        // CB DB 03D5
        gbc.setState(0xd212, 0xfe30, 0xa960, 0x6a9e, 0x3625, 0xb8e0, 0x1, 0x1);
        gbc.writeMem(0xd212, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfe30, gbc.sp());
        EXPECT(0xd214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd212));
        EXPECT(0xdb, gbc.readMem(0xd213));
        // CB DB 03D6
        gbc.setState(0x456d, 0xeedf, 0x1bf0, 0x70d8, 0x9bf7, 0xd7f, 0x1, 0x1);
        gbc.writeMem(0x456d, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xeedf, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03D7
        gbc.setState(0x2d16, 0xad02, 0x4020, 0xfc4d, 0x8454, 0x1659, 0x0, 0x0);
        gbc.writeMem(0x2d16, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03D8
        gbc.setState(0x5695, 0x4bd3, 0x53f0, 0x74bd, 0xc77c, 0xd73a, 0x0, 0x0);
        gbc.writeMem(0x5695, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4bd3, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03D9
        gbc.setState(0x89cd, 0xd4a, 0x8070, 0xe38b, 0x6d00, 0x717a, 0x1, 0x1);
        gbc.writeMem(0x89cd, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd4a, gbc.sp());
        EXPECT(0x89cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89cd));
        EXPECT(0xdb, gbc.readMem(0x89ce));
        // CB DB 03DA
        gbc.setState(0x752, 0xc9d7, 0xda60, 0xc450, 0xa93d, 0x6bdf, 0x1, 0x0);
        gbc.writeMem(0x752, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc9d7, gbc.sp());
        EXPECT(0x754, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03DB
        gbc.setState(0x1d6f, 0x34e5, 0xbd00, 0xe5f5, 0x177e, 0xef5a, 0x0, 0x1);
        gbc.writeMem(0x1d6f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x34e5, gbc.sp());
        EXPECT(0x1d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB DB 03DC
        gbc.setState(0x7286, 0x6a81, 0xe690, 0xbda6, 0x3071, 0x123f, 0x0, 0x0);
        gbc.writeMem(0x7286, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6a81, gbc.sp());
        EXPECT(0x7288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03DD
        gbc.setState(0x8020, 0xc726, 0xb0f0, 0xfb68, 0xe54a, 0x55de, 0x0, 0x0);
        gbc.writeMem(0x8020, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc726, gbc.sp());
        EXPECT(0x8022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8020));
        EXPECT(0xdb, gbc.readMem(0x8021));
        // CB DB 03DE
        gbc.setState(0xeec, 0xf9d3, 0x5d0, 0xee91, 0x7256, 0x4f91, 0x1, 0x0);
        gbc.writeMem(0xeec, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf9d3, gbc.sp());
        EXPECT(0xeee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03DF
        gbc.setState(0x354c, 0x51b3, 0xcfd0, 0xaa05, 0xe9c8, 0x498f, 0x1, 0x0);
        gbc.writeMem(0x354c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0x354e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03E0
        gbc.setState(0xe2c6, 0x93d0, 0xfbc0, 0x32e3, 0x3ef7, 0xcd7b, 0x1, 0x0);
        gbc.writeMem(0xe2c6, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x93d0, gbc.sp());
        EXPECT(0xe2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2c6));
        EXPECT(0xdb, gbc.readMem(0xe2c7));
        // CB DB 03E1
        gbc.setState(0xd562, 0x892c, 0x6db0, 0xce4, 0xdffd, 0x6623, 0x0, 0x1);
        gbc.writeMem(0xd562, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x892c, gbc.sp());
        EXPECT(0xd564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd562));
        EXPECT(0xdb, gbc.readMem(0xd563));
        // CB DB 03E2
        gbc.setState(0x5424, 0xbe45, 0xfc30, 0xcb74, 0xc5e3, 0xcf63, 0x0, 0x1);
        gbc.writeMem(0x5424, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xbe45, gbc.sp());
        EXPECT(0x5426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03E4
        gbc.setState(0x6d4f, 0x40d2, 0xe290, 0x6970, 0x916c, 0x1345, 0x1, 0x0);
        gbc.writeMem(0x6d4f, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x40d2, gbc.sp());
        EXPECT(0x6d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03E5
        gbc.setState(0x4a6c, 0x2be9, 0x1390, 0x270, 0x59c6, 0x12af, 0x0, 0x1);
        gbc.writeMem(0x4a6c, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x2be9, gbc.sp());
        EXPECT(0x4a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB DB 03E6
        gbc.setState(0xed3a, 0x358c, 0xe650, 0x8e80, 0x6fa8, 0xcd6a, 0x0, 0x0);
        gbc.writeMem(0xed3a, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x358c, gbc.sp());
        EXPECT(0xed3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed3a));
        EXPECT(0xdb, gbc.readMem(0xed3b));
        // CB DB 03E7
        gbc.setState(0xaef, 0xe1bc, 0x65f0, 0xe65, 0xf79b, 0xc611, 0x0, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0xdb });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe1bc, gbc.sp());
        EXPECT(0xaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
