    TEST(gbcemu, opcode_65) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 65 0000
        gbc.setState(0x309d, 0xc4be, 0x7520, 0xdaf6, 0x926b, 0x32d3, 0x1, 0x1);
        gbc.writeMem(0x309d, { 0x65 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0x309e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0001
        gbc.setState(0xb8a9, 0xccb8, 0xa4a0, 0x7773, 0x8809, 0x7303, 0x1, 0x1);
        gbc.writeMem(0xb8a9, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xccb8, gbc.sp());
        EXPECT(0xb8aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb8a9));
        // 65 0003
        gbc.setState(0xdd0c, 0x156a, 0x9d70, 0xa238, 0xe4ba, 0xa3d1, 0x1, 0x1);
        gbc.writeMem(0xdd0c, { 0x65 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x156a, gbc.sp());
        EXPECT(0xdd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdd0c));
        // 65 0004
        gbc.setState(0x6e6a, 0x8227, 0x76a0, 0xb1a0, 0x5acf, 0x7615, 0x1, 0x1);
        gbc.writeMem(0x6e6a, { 0x65 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8227, gbc.sp());
        EXPECT(0x6e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0005
        gbc.setState(0x4a80, 0xabfe, 0xbe40, 0x14a4, 0xd81d, 0x4f7f, 0x0, 0x0);
        gbc.writeMem(0x4a80, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xabfe, gbc.sp());
        EXPECT(0x4a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0006
        gbc.setState(0x72a1, 0xa718, 0xd30, 0xe1c9, 0x32a2, 0xc562, 0x1, 0x0);
        gbc.writeMem(0x72a1, { 0x65 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xa718, gbc.sp());
        EXPECT(0x72a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0007
        gbc.setState(0x43e3, 0xd345, 0x9200, 0x3330, 0x99e3, 0x5ea9, 0x0, 0x0);
        gbc.writeMem(0x43e3, { 0x65 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd345, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0008
        gbc.setState(0x35f5, 0x4733, 0x2340, 0x969f, 0xeb3f, 0xeed2, 0x1, 0x0);
        gbc.writeMem(0x35f5, { 0x65 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4733, gbc.sp());
        EXPECT(0x35f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0009
        gbc.setState(0xa6fb, 0x1d87, 0xacd0, 0xbeb1, 0x301c, 0x8325, 0x0, 0x1);
        gbc.writeMem(0xa6fb, { 0x65 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0xa6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa6fb));
        // 65 000A
        gbc.setState(0x8bc9, 0x6272, 0xce00, 0x6a14, 0x9118, 0xc16a, 0x1, 0x1);
        gbc.writeMem(0x8bc9, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6272, gbc.sp());
        EXPECT(0x8bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8bc9));
        // 65 000B
        gbc.setState(0x178f, 0x1cb1, 0xb3f0, 0x4368, 0x7de4, 0x5221, 0x0, 0x1);
        gbc.writeMem(0x178f, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1cb1, gbc.sp());
        EXPECT(0x1790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 000C
        gbc.setState(0x93dd, 0x6965, 0x7950, 0x6570, 0xf014, 0x3009, 0x1, 0x0);
        gbc.writeMem(0x93dd, { 0x65 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6965, gbc.sp());
        EXPECT(0x93de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x93dd));
        // 65 000D
        gbc.setState(0x8926, 0x9ad9, 0x4e10, 0x87f2, 0xa4e5, 0x41eb, 0x0, 0x1);
        gbc.writeMem(0x8926, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9ad9, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8926));
        // 65 000E
        gbc.setState(0xb22f, 0x1a93, 0x630, 0xd91e, 0xa427, 0x6e33, 0x0, 0x0);
        gbc.writeMem(0xb22f, { 0x65 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1a93, gbc.sp());
        EXPECT(0xb230, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb22f));
        // 65 000F
        gbc.setState(0x309a, 0xdad8, 0x7160, 0xaa7a, 0xe0f5, 0xa29d, 0x1, 0x0);
        gbc.writeMem(0x309a, { 0x65 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0x309b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0010
        gbc.setState(0x76fd, 0x19ac, 0xe200, 0x7b88, 0x84a5, 0x2e9d, 0x1, 0x0);
        gbc.writeMem(0x76fd, { 0x65 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x19ac, gbc.sp());
        EXPECT(0x76fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0011
        gbc.setState(0x2177, 0x201f, 0xa530, 0x8c32, 0x6773, 0xf6b5, 0x0, 0x0);
        gbc.writeMem(0x2177, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x201f, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0012
        gbc.setState(0xabe2, 0x6b47, 0x8870, 0xf98e, 0x1209, 0xfbff, 0x0, 0x0);
        gbc.writeMem(0xabe2, { 0x65 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6b47, gbc.sp());
        EXPECT(0xabe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xabe2));
        // 65 0013
        gbc.setState(0x811f, 0x8e3b, 0xf410, 0x7833, 0xb184, 0xd24b, 0x0, 0x1);
        gbc.writeMem(0x811f, { 0x65 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8e3b, gbc.sp());
        EXPECT(0x8120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x811f));
        // 65 0014
        gbc.setState(0x47e, 0xc44d, 0x920, 0xaff, 0x8fff, 0x2fb, 0x1, 0x0);
        gbc.writeMem(0x47e, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc44d, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0015
        gbc.setState(0x40b, 0x805c, 0xe830, 0xd6f7, 0xaddd, 0x2e83, 0x1, 0x1);
        gbc.writeMem(0x40b, { 0x65 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x805c, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0016
        gbc.setState(0x61af, 0x7a80, 0x1430, 0x38f1, 0xbb84, 0xace6, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7a80, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0018
        gbc.setState(0x640d, 0x5d5, 0xfcd0, 0xaba8, 0x3122, 0x5654, 0x0, 0x0);
        gbc.writeMem(0x640d, { 0x65 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5d5, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0019
        gbc.setState(0x3ada, 0x7027, 0x5d80, 0xd9ed, 0xe6d6, 0x7054, 0x1, 0x0);
        gbc.writeMem(0x3ada, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7027, gbc.sp());
        EXPECT(0x3adb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 001A
        gbc.setState(0xed24, 0xe91e, 0xee80, 0x7604, 0x1ff8, 0x7057, 0x0, 0x1);
        gbc.writeMem(0xed24, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe91e, gbc.sp());
        EXPECT(0xed25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xed24));
        // 65 001B
        gbc.setState(0x3e6a, 0xd424, 0x9fd0, 0x8759, 0x373f, 0xeece, 0x0, 0x0);
        gbc.writeMem(0x3e6a, { 0x65 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd424, gbc.sp());
        EXPECT(0x3e6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 001C
        gbc.setState(0x5539, 0xd62c, 0xb220, 0xff48, 0x347b, 0xf234, 0x1, 0x0);
        gbc.writeMem(0x5539, { 0x65 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd62c, gbc.sp());
        EXPECT(0x553a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 001D
        gbc.setState(0x222, 0x5b96, 0x5530, 0x95b4, 0x67e, 0x32e5, 0x0, 0x1);
        gbc.writeMem(0x222, { 0x65 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5b96, gbc.sp());
        EXPECT(0x223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 001E
        gbc.setState(0x4ea5, 0xaa62, 0x10c0, 0xdb18, 0xba30, 0xb96a, 0x0, 0x0);
        gbc.writeMem(0x4ea5, { 0x65 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xaa62, gbc.sp());
        EXPECT(0x4ea6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 001F
        gbc.setState(0x9973, 0x215f, 0xeb00, 0x3097, 0xb943, 0x7518, 0x0, 0x1);
        gbc.writeMem(0x9973, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0x9974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9973));
        // 65 0020
        gbc.setState(0x548f, 0xd887, 0x8c0, 0x6eb4, 0xfde8, 0x9e6d, 0x1, 0x1);
        gbc.writeMem(0x548f, { 0x65 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd887, gbc.sp());
        EXPECT(0x5490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0021
        gbc.setState(0xe8e, 0x4747, 0x3e30, 0xb9ca, 0xda68, 0x80d9, 0x0, 0x0);
        gbc.writeMem(0xe8e, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x4747, gbc.sp());
        EXPECT(0xe8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0022
        gbc.setState(0xa077, 0x4942, 0x2b90, 0x408b, 0x16ef, 0xf054, 0x0, 0x1);
        gbc.writeMem(0xa077, { 0x65 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4942, gbc.sp());
        EXPECT(0xa078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa077));
        // 65 0023
        gbc.setState(0xd3ea, 0x73aa, 0x2dc0, 0x461f, 0x97dd, 0xd079, 0x1, 0x0);
        gbc.writeMem(0xd3ea, { 0x65 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x73aa, gbc.sp());
        EXPECT(0xd3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd3ea));
        // 65 0025
        gbc.setState(0xd48e, 0x33c6, 0x8440, 0x24e5, 0xfe08, 0xf9d4, 0x1, 0x1);
        gbc.writeMem(0xd48e, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x33c6, gbc.sp());
        EXPECT(0xd48f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd48e));
        // 65 0026
        gbc.setState(0xa690, 0xf6f0, 0x2b80, 0xc2ed, 0x808e, 0xd93f, 0x0, 0x0);
        gbc.writeMem(0xa690, { 0x65 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xf6f0, gbc.sp());
        EXPECT(0xa691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa690));
        // 65 0027
        gbc.setState(0x72c, 0xc289, 0xdc0, 0x775a, 0x929f, 0x6940, 0x0, 0x0);
        gbc.writeMem(0x72c, { 0x65 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc289, gbc.sp());
        EXPECT(0x72d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0029
        gbc.setState(0x7289, 0x5c72, 0x5a50, 0xd116, 0xf3c3, 0xe44b, 0x1, 0x0);
        gbc.writeMem(0x7289, { 0x65 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5c72, gbc.sp());
        EXPECT(0x728a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 002B
        gbc.setState(0x298, 0x1a19, 0xe850, 0x3cce, 0x978b, 0xf049, 0x1, 0x1);
        gbc.writeMem(0x298, { 0x65 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1a19, gbc.sp());
        EXPECT(0x299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 002C
        gbc.setState(0xd7cd, 0x48f0, 0x1380, 0x6ad0, 0xb8df, 0x882c, 0x0, 0x0);
        gbc.writeMem(0xd7cd, { 0x65 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x48f0, gbc.sp());
        EXPECT(0xd7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd7cd));
        // 65 002D
        gbc.setState(0x2246, 0xf1d3, 0x6470, 0xbdfa, 0x31ef, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x2246, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf1d3, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 002E
        gbc.setState(0x8e81, 0x4756, 0x16a0, 0xb2f8, 0x91cb, 0xf003, 0x1, 0x1);
        gbc.writeMem(0x8e81, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4756, gbc.sp());
        EXPECT(0x8e82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8e81));
        // 65 002F
        gbc.setState(0x6dce, 0xdb51, 0xbd70, 0x46d6, 0xf72d, 0xcfa9, 0x1, 0x1);
        gbc.writeMem(0x6dce, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdb51, gbc.sp());
        EXPECT(0x6dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0030
        gbc.setState(0xe904, 0x62e1, 0xd0b0, 0x307f, 0xe1f, 0x4da0, 0x1, 0x1);
        gbc.writeMem(0xe904, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x62e1, gbc.sp());
        EXPECT(0xe905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe904));
        // 65 0031
        gbc.setState(0xb766, 0x908e, 0x3640, 0x4be4, 0x43ac, 0xd4f1, 0x1, 0x0);
        gbc.writeMem(0xb766, { 0x65 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x908e, gbc.sp());
        EXPECT(0xb767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb766));
        // 65 0032
        gbc.setState(0x44c, 0x72ae, 0x4920, 0x6818, 0x33de, 0xb0e0, 0x1, 0x1);
        gbc.writeMem(0x44c, { 0x65 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x72ae, gbc.sp());
        EXPECT(0x44d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0033
        gbc.setState(0x5967, 0xad7e, 0xe580, 0xd603, 0x4afa, 0x8e01, 0x0, 0x1);
        gbc.writeMem(0x5967, { 0x65 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xad7e, gbc.sp());
        EXPECT(0x5968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0034
        gbc.setState(0x25a6, 0xbc93, 0xca20, 0x5171, 0x8650, 0x3cc4, 0x0, 0x0);
        gbc.writeMem(0x25a6, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbc93, gbc.sp());
        EXPECT(0x25a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0035
        gbc.setState(0xcece, 0xaf1a, 0x8b90, 0xecc1, 0x7d06, 0x8e63, 0x1, 0x0);
        gbc.writeMem(0xcece, { 0x65 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xaf1a, gbc.sp());
        EXPECT(0xcecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcece));
        // 65 0036
        gbc.setState(0x128, 0xe531, 0x2a90, 0xc025, 0xcabc, 0x10d9, 0x1, 0x0);
        gbc.writeMem(0x128, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe531, gbc.sp());
        EXPECT(0x129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0037
        gbc.setState(0x29a6, 0x9dea, 0x4820, 0xf9ff, 0x6979, 0x410d, 0x0, 0x0);
        gbc.writeMem(0x29a6, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x29a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0038
        gbc.setState(0x71b9, 0x6015, 0x8b0, 0x7bc4, 0x1f4b, 0xeb14, 0x0, 0x0);
        gbc.writeMem(0x71b9, { 0x65 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6015, gbc.sp());
        EXPECT(0x71ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0039
        gbc.setState(0xd5d5, 0x4dab, 0xe100, 0xf1d9, 0x892f, 0xc682, 0x1, 0x1);
        gbc.writeMem(0xd5d5, { 0x65 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4dab, gbc.sp());
        EXPECT(0xd5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd5d5));
        // 65 003A
        gbc.setState(0x39a4, 0x4d1, 0x960, 0x142e, 0xe92c, 0xaff4, 0x1, 0x0);
        gbc.writeMem(0x39a4, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4d1, gbc.sp());
        EXPECT(0x39a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 003B
        gbc.setState(0x9809, 0x12ce, 0x58f0, 0x45f4, 0x15e7, 0x1db7, 0x0, 0x0);
        gbc.writeMem(0x9809, { 0x65 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x980a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9809));
        // 65 003C
        gbc.setState(0x253c, 0x45, 0x3120, 0xaaa, 0xd9cf, 0x8913, 0x0, 0x0);
        gbc.writeMem(0x253c, { 0x65 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x45, gbc.sp());
        EXPECT(0x253d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 003D
        gbc.setState(0xc778, 0xf4d, 0xd100, 0x954, 0xfc53, 0xb494, 0x1, 0x1);
        gbc.writeMem(0xc778, { 0x65 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf4d, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc778));
        // 65 003E
        gbc.setState(0x525f, 0xdfb1, 0x52c0, 0x1602, 0x404f, 0xdca, 0x0, 0x0);
        gbc.writeMem(0x525f, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdfb1, gbc.sp());
        EXPECT(0x5260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 003F
        gbc.setState(0x25bf, 0x9051, 0xd30, 0xf844, 0xffc6, 0x75c9, 0x0, 0x0);
        gbc.writeMem(0x25bf, { 0x65 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9051, gbc.sp());
        EXPECT(0x25c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0040
        gbc.setState(0x8e9c, 0x66e, 0xeff0, 0x815a, 0x57d0, 0x65aa, 0x1, 0x0);
        gbc.writeMem(0x8e9c, { 0x65 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x66e, gbc.sp());
        EXPECT(0x8e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8e9c));
        // 65 0041
        gbc.setState(0xb0c2, 0xfb51, 0x4e30, 0x46ad, 0x4762, 0xc6d9, 0x1, 0x1);
        gbc.writeMem(0xb0c2, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfb51, gbc.sp());
        EXPECT(0xb0c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb0c2));
        // 65 0042
        gbc.setState(0xbcfb, 0x510e, 0xecb0, 0xce63, 0x9432, 0x4a91, 0x0, 0x0);
        gbc.writeMem(0xbcfb, { 0x65 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x510e, gbc.sp());
        EXPECT(0xbcfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbcfb));
        // 65 0044
        gbc.setState(0x8e3e, 0x5224, 0xe700, 0x437a, 0x45ab, 0xa038, 0x1, 0x0);
        gbc.writeMem(0x8e3e, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5224, gbc.sp());
        EXPECT(0x8e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8e3e));
        // 65 0045
        gbc.setState(0x4631, 0xda1, 0xe4c0, 0xa186, 0xa03d, 0x1ea7, 0x1, 0x0);
        gbc.writeMem(0x4631, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xda1, gbc.sp());
        EXPECT(0x4632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0046
        gbc.setState(0x7933, 0xc3da, 0x2260, 0xf66, 0x6f1e, 0x7284, 0x1, 0x0);
        gbc.writeMem(0x7933, { 0x65 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc3da, gbc.sp());
        EXPECT(0x7934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0047
        gbc.setState(0xd5ae, 0xf289, 0x3770, 0x3bd7, 0xf0e7, 0x4dae, 0x0, 0x0);
        gbc.writeMem(0xd5ae, { 0x65 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf289, gbc.sp());
        EXPECT(0xd5af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd5ae));
        // 65 0048
        gbc.setState(0xe10a, 0xdb0a, 0x9310, 0xa99a, 0xd59f, 0xf077, 0x1, 0x1);
        gbc.writeMem(0xe10a, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdb0a, gbc.sp());
        EXPECT(0xe10b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe10a));
        // 65 0049
        gbc.setState(0xb4d1, 0x8e76, 0xbc90, 0x1dbe, 0xb9c, 0x1b00, 0x1, 0x0);
        gbc.writeMem(0xb4d1, { 0x65 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8e76, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb4d1));
        // 65 004A
        gbc.setState(0x29ed, 0xd30e, 0x9eb0, 0x9828, 0xcbd, 0x257d, 0x1, 0x0);
        gbc.writeMem(0x29ed, { 0x65 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd30e, gbc.sp());
        EXPECT(0x29ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 004B
        gbc.setState(0x582f, 0xbcd1, 0xc220, 0xce4d, 0xae2f, 0xeddc, 0x0, 0x0);
        gbc.writeMem(0x582f, { 0x65 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbcd1, gbc.sp());
        EXPECT(0x5830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 004C
        gbc.setState(0x2ce1, 0xdaac, 0x27b0, 0x9385, 0x1f58, 0xa6ff, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xdaac, gbc.sp());
        EXPECT(0x2ce2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 004D
        gbc.setState(0x24a8, 0xa323, 0x1d10, 0x1073, 0xd417, 0xcd37, 0x0, 0x1);
        gbc.writeMem(0x24a8, { 0x65 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa323, gbc.sp());
        EXPECT(0x24a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 004E
        gbc.setState(0x7fee, 0x3bd2, 0xbc60, 0xa7c8, 0x3573, 0x5f80, 0x1, 0x0);
        gbc.writeMem(0x7fee, { 0x65 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3bd2, gbc.sp());
        EXPECT(0x7fef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 004F
        gbc.setState(0x97be, 0x55ca, 0x95e0, 0xb43a, 0xcfa6, 0x7c2, 0x0, 0x1);
        gbc.writeMem(0x97be, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x55ca, gbc.sp());
        EXPECT(0x97bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x97be));
        // 65 0050
        gbc.setState(0xd718, 0xf74e, 0x4890, 0xfe5, 0x8890, 0xb620, 0x0, 0x1);
        gbc.writeMem(0xd718, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf74e, gbc.sp());
        EXPECT(0xd719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd718));
        // 65 0051
        gbc.setState(0x9a7f, 0x93e8, 0x4c0, 0xd549, 0x127d, 0xf302, 0x1, 0x1);
        gbc.writeMem(0x9a7f, { 0x65 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x93e8, gbc.sp());
        EXPECT(0x9a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9a7f));
        // 65 0052
        gbc.setState(0x9f4b, 0x8d86, 0x9e10, 0xc8a5, 0x4fa5, 0x94c2, 0x1, 0x0);
        gbc.writeMem(0x9f4b, { 0x65 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8d86, gbc.sp());
        EXPECT(0x9f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9f4b));
        // 65 0053
        gbc.setState(0xe42e, 0x7c88, 0x7250, 0xf74f, 0x8256, 0x5507, 0x1, 0x0);
        gbc.writeMem(0xe42e, { 0x65 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7c88, gbc.sp());
        EXPECT(0xe42f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe42e));
        // 65 0054
        gbc.setState(0x92fa, 0x4bb, 0x72c0, 0xda00, 0xad06, 0xcc59, 0x1, 0x0);
        gbc.writeMem(0x92fa, { 0x65 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4bb, gbc.sp());
        EXPECT(0x92fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x92fa));
        // 65 0055
        gbc.setState(0xdd7b, 0x1612, 0x2ad0, 0xf0c8, 0xe6e6, 0xc47b, 0x0, 0x0);
        gbc.writeMem(0xdd7b, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1612, gbc.sp());
        EXPECT(0xdd7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdd7b));
        // 65 0056
        gbc.setState(0xb7f0, 0x69c9, 0x7a00, 0xfc0, 0x6222, 0xd852, 0x0, 0x1);
        gbc.writeMem(0xb7f0, { 0x65 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x69c9, gbc.sp());
        EXPECT(0xb7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb7f0));
        // 65 0057
        gbc.setState(0x2b2f, 0xc93c, 0xe0a0, 0xe287, 0xc0f1, 0x938b, 0x1, 0x0);
        gbc.writeMem(0x2b2f, { 0x65 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc93c, gbc.sp());
        EXPECT(0x2b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0058
        gbc.setState(0x77d8, 0xbcb, 0x5d60, 0x5ecf, 0xe41a, 0x3c88, 0x0, 0x1);
        gbc.writeMem(0x77d8, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xbcb, gbc.sp());
        EXPECT(0x77d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0059
        gbc.setState(0x882a, 0xa4a2, 0x8210, 0x9901, 0x3fd8, 0x670f, 0x0, 0x1);
        gbc.writeMem(0x882a, { 0x65 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa4a2, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x882a));
        // 65 005A
        gbc.setState(0x1d2c, 0xc7db, 0x1aa0, 0xe425, 0xa147, 0x5984, 0x1, 0x0);
        gbc.writeMem(0x1d2c, { 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc7db, gbc.sp());
        EXPECT(0x1d2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 005B
        gbc.setState(0x8b72, 0x2fcc, 0xb630, 0x25d9, 0x4e4b, 0xd70e, 0x0, 0x0);
        gbc.writeMem(0x8b72, { 0x65 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2fcc, gbc.sp());
        EXPECT(0x8b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b72));
        // 65 005C
        gbc.setState(0x1080, 0x185c, 0xafe0, 0xffc9, 0xb870, 0x953a, 0x1, 0x1);
        gbc.writeMem(0x1080, { 0x65 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x185c, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 005D
        gbc.setState(0xe6b7, 0xbb28, 0x3070, 0x4cab, 0x88cf, 0x702d, 0x1, 0x0);
        gbc.writeMem(0xe6b7, { 0x65 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbb28, gbc.sp());
        EXPECT(0xe6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe6b7));
        // 65 005E
        gbc.setState(0xa49e, 0x4a5e, 0x83c0, 0x7f7d, 0xecb9, 0x1d3, 0x1, 0x1);
        gbc.writeMem(0xa49e, { 0x65 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4a5e, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa49e));
        // 65 005F
        gbc.setState(0xa4bd, 0x919e, 0x5f10, 0x4495, 0xfc5f, 0x1d68, 0x1, 0x0);
        gbc.writeMem(0xa4bd, { 0x65 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x919e, gbc.sp());
        EXPECT(0xa4be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa4bd));
        // 65 0060
        gbc.setState(0xa50c, 0x99c1, 0x2f0, 0x62e2, 0x808c, 0xbc83, 0x1, 0x0);
        gbc.writeMem(0xa50c, { 0x65 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x99c1, gbc.sp());
        EXPECT(0xa50d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa50c));
        // 65 0061
        gbc.setState(0x6a46, 0xdada, 0xafa0, 0x439c, 0xd945, 0xb90a, 0x0, 0x0);
        gbc.writeMem(0x6a46, { 0x65 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0062
        gbc.setState(0xda28, 0xd717, 0x4460, 0x2e, 0x86db, 0x6dac, 0x0, 0x1);
        gbc.writeMem(0xda28, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd717, gbc.sp());
        EXPECT(0xda29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xda28));
        // 65 0063
        gbc.setState(0xcc55, 0x2968, 0xc870, 0x6946, 0x792b, 0x8736, 0x1, 0x0);
        gbc.writeMem(0xcc55, { 0x65 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2968, gbc.sp());
        EXPECT(0xcc56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcc55));
        // 65 0064
        gbc.setState(0x58b8, 0xd676, 0xc940, 0x5113, 0x1850, 0x9592, 0x1, 0x1);
        gbc.writeMem(0x58b8, { 0x65 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd676, gbc.sp());
        EXPECT(0x58b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0066
        gbc.setState(0x3e5, 0xc0f4, 0x6960, 0xea18, 0x9b13, 0xf780, 0x1, 0x0);
        gbc.writeMem(0x3e5, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc0f4, gbc.sp());
        EXPECT(0x3e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0067
        gbc.setState(0xbe57, 0x5faa, 0x4880, 0x320d, 0x82b1, 0xc26b, 0x1, 0x1);
        gbc.writeMem(0xbe57, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0xbe58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbe57));
        // 65 0068
        gbc.setState(0xd15a, 0x1828, 0x2270, 0xd135, 0xf24c, 0x5da, 0x0, 0x1);
        gbc.writeMem(0xd15a, { 0x65 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0xd15b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd15a));
        // 65 0069
        gbc.setState(0x5289, 0x78a4, 0xbd40, 0xe53, 0x1611, 0x6856, 0x1, 0x0);
        gbc.writeMem(0x5289, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x78a4, gbc.sp());
        EXPECT(0x528a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 006A
        gbc.setState(0x74f, 0x7e, 0x3450, 0x74a, 0x933f, 0x514e, 0x1, 0x1);
        gbc.writeMem(0x74f, { 0x65 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7e, gbc.sp());
        EXPECT(0x750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 006B
        gbc.setState(0xea06, 0xa4bd, 0x5d20, 0xc49e, 0xe911, 0x32e3, 0x1, 0x0);
        gbc.writeMem(0xea06, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa4bd, gbc.sp());
        EXPECT(0xea07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xea06));
        // 65 006C
        gbc.setState(0x9a10, 0x9810, 0xcec0, 0x1aa7, 0xb4d1, 0x97c9, 0x0, 0x0);
        gbc.writeMem(0x9a10, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9810, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9a10));
        // 65 006D
        gbc.setState(0xd864, 0x6776, 0x76d0, 0x3f12, 0x42de, 0xa75d, 0x1, 0x0);
        gbc.writeMem(0xd864, { 0x65 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6776, gbc.sp());
        EXPECT(0xd865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd864));
        // 65 006E
        gbc.setState(0x4a07, 0x741f, 0x6040, 0x9250, 0x5d75, 0xe251, 0x1, 0x1);
        gbc.writeMem(0x4a07, { 0x65 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x741f, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0070
        gbc.setState(0x3777, 0x3268, 0xdbc0, 0x7ce5, 0x2ae, 0x280, 0x1, 0x0);
        gbc.writeMem(0x3777, { 0x65 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3268, gbc.sp());
        EXPECT(0x3778, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0071
        gbc.setState(0x9852, 0x84cb, 0xde30, 0xa965, 0x9d28, 0x8bf9, 0x1, 0x1);
        gbc.writeMem(0x9852, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x84cb, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9852));
        // 65 0072
        gbc.setState(0x96e1, 0x3f2a, 0xf7e0, 0xfd2f, 0xa85e, 0x3b5e, 0x0, 0x0);
        gbc.writeMem(0x96e1, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3f2a, gbc.sp());
        EXPECT(0x96e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x96e1));
        // 65 0073
        gbc.setState(0xaebb, 0xf0c5, 0x4f70, 0x2603, 0x96d9, 0xedec, 0x1, 0x1);
        gbc.writeMem(0xaebb, { 0x65 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf0c5, gbc.sp());
        EXPECT(0xaebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaebb));
        // 65 0074
        gbc.setState(0x12a7, 0x2662, 0xeac0, 0x2f3a, 0x2b6, 0xe2e9, 0x0, 0x1);
        gbc.writeMem(0x12a7, { 0x65 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2662, gbc.sp());
        EXPECT(0x12a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0075
        gbc.setState(0x647c, 0xd97a, 0xcbc0, 0xa6a0, 0xc3e8, 0x2ec4, 0x0, 0x1);
        gbc.writeMem(0x647c, { 0x65 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd97a, gbc.sp());
        EXPECT(0x647d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0076
        gbc.setState(0x933c, 0x80f6, 0xca70, 0x7eb0, 0x3a76, 0x18a0, 0x0, 0x1);
        gbc.writeMem(0x933c, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x80f6, gbc.sp());
        EXPECT(0x933d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x933c));
        // 65 0077
        gbc.setState(0x85eb, 0xf007, 0x4b00, 0xff61, 0xf0e3, 0x699a, 0x1, 0x0);
        gbc.writeMem(0x85eb, { 0x65 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf007, gbc.sp());
        EXPECT(0x85ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x85eb));
        // 65 0079
        gbc.setState(0xa67a, 0x64c3, 0x8b60, 0x8369, 0x3f88, 0xcf84, 0x1, 0x1);
        gbc.writeMem(0xa67a, { 0x65 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x64c3, gbc.sp());
        EXPECT(0xa67b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa67a));
        // 65 007A
        gbc.setState(0x54b8, 0xe941, 0x70c0, 0xea06, 0xc09f, 0x6277, 0x0, 0x0);
        gbc.writeMem(0x54b8, { 0x65 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 007B
        gbc.setState(0xa44d, 0xe4eb, 0x6380, 0x629a, 0x92fa, 0x3035, 0x1, 0x0);
        gbc.writeMem(0xa44d, { 0x65 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe4eb, gbc.sp());
        EXPECT(0xa44e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa44d));
        // 65 007C
        gbc.setState(0x109, 0xc29d, 0x43c0, 0x55a2, 0xe73a, 0x48, 0x1, 0x0);
        gbc.writeMem(0x109, { 0x65 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc29d, gbc.sp());
        EXPECT(0x10a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 007D
        gbc.setState(0x4a90, 0x2f77, 0x1550, 0x18eb, 0x8d12, 0x6418, 0x0, 0x0);
        gbc.writeMem(0x4a90, { 0x65 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2f77, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 007E
        gbc.setState(0x6f31, 0x85af, 0x2940, 0xcb03, 0xaf74, 0xec97, 0x1, 0x0);
        gbc.writeMem(0x6f31, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0x6f32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 007F
        gbc.setState(0x66a9, 0x6d78, 0x3a10, 0x6a81, 0x7caf, 0xbeed, 0x0, 0x0);
        gbc.writeMem(0x66a9, { 0x65 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6d78, gbc.sp());
        EXPECT(0x66aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0080
        gbc.setState(0x9b0d, 0xe81b, 0xb010, 0x577d, 0x8984, 0xab12, 0x0, 0x1);
        gbc.writeMem(0x9b0d, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xe81b, gbc.sp());
        EXPECT(0x9b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9b0d));
        // 65 0081
        gbc.setState(0xbb6a, 0xfe8d, 0x8440, 0x157f, 0x5af6, 0x97a2, 0x0, 0x0);
        gbc.writeMem(0xbb6a, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfe8d, gbc.sp());
        EXPECT(0xbb6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbb6a));
        // 65 0082
        gbc.setState(0xd9be, 0x3615, 0xc510, 0x989, 0x8534, 0xe356, 0x0, 0x1);
        gbc.writeMem(0xd9be, { 0x65 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3615, gbc.sp());
        EXPECT(0xd9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd9be));
        // 65 0084
        gbc.setState(0x824f, 0xd518, 0x32c0, 0x3e01, 0xb5c7, 0x3ea, 0x0, 0x1);
        gbc.writeMem(0x824f, { 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd518, gbc.sp());
        EXPECT(0x8250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x824f));
        // 65 0085
        gbc.setState(0x8645, 0xa832, 0x27c0, 0x3ce9, 0xa715, 0x6642, 0x1, 0x0);
        gbc.writeMem(0x8645, { 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa832, gbc.sp());
        EXPECT(0x8646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8645));
        // 65 0086
        gbc.setState(0xd96c, 0x4fec, 0xe370, 0xe630, 0x16e4, 0x945e, 0x0, 0x0);
        gbc.writeMem(0xd96c, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4fec, gbc.sp());
        EXPECT(0xd96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd96c));
        // 65 0087
        gbc.setState(0x451d, 0xc244, 0xcc60, 0x14b2, 0x850b, 0x2b90, 0x1, 0x0);
        gbc.writeMem(0x451d, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc244, gbc.sp());
        EXPECT(0x451e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0088
        gbc.setState(0xb085, 0xa813, 0x42e0, 0x7e5, 0xf063, 0x6522, 0x0, 0x1);
        gbc.writeMem(0xb085, { 0x65 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xa813, gbc.sp());
        EXPECT(0xb086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb085));
        // 65 0089
        gbc.setState(0x3584, 0x8826, 0x2210, 0x200a, 0x1470, 0x3f72, 0x0, 0x0);
        gbc.writeMem(0x3584, { 0x65 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8826, gbc.sp());
        EXPECT(0x3585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 008A
        gbc.setState(0x1e93, 0xfdc3, 0xccb0, 0x25ab, 0x6195, 0xd4d5, 0x0, 0x1);
        gbc.writeMem(0x1e93, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfdc3, gbc.sp());
        EXPECT(0x1e94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 008B
        gbc.setState(0x14b6, 0xd5d8, 0xc5e0, 0x1d50, 0x94ee, 0x7160, 0x1, 0x0);
        gbc.writeMem(0x14b6, { 0x65 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd5d8, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 008C
        gbc.setState(0x64e6, 0x9206, 0x90e0, 0x8d5e, 0x7a36, 0x4956, 0x0, 0x0);
        gbc.writeMem(0x64e6, { 0x65 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9206, gbc.sp());
        EXPECT(0x64e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 008D
        gbc.setState(0x4c3d, 0x8a62, 0xb510, 0x972a, 0x5e4f, 0x7f5c, 0x1, 0x1);
        gbc.writeMem(0x4c3d, { 0x65 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8a62, gbc.sp());
        EXPECT(0x4c3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 008E
        gbc.setState(0xe902, 0xc1e9, 0xce60, 0x913a, 0x758c, 0x7469, 0x1, 0x0);
        gbc.writeMem(0xe902, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc1e9, gbc.sp());
        EXPECT(0xe903, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe902));
        // 65 008F
        gbc.setState(0xe7ac, 0x10ec, 0x2ab0, 0x6f2c, 0x92d3, 0xd0d4, 0x1, 0x1);
        gbc.writeMem(0xe7ac, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x10ec, gbc.sp());
        EXPECT(0xe7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe7ac));
        // 65 0090
        gbc.setState(0xb00d, 0xb4da, 0x8b80, 0x4ead, 0xf681, 0x9436, 0x1, 0x1);
        gbc.writeMem(0xb00d, { 0x65 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb4da, gbc.sp());
        EXPECT(0xb00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb00d));
        // 65 0091
        gbc.setState(0x91e9, 0x2ebb, 0xaf0, 0x4240, 0x8809, 0xd505, 0x0, 0x1);
        gbc.writeMem(0x91e9, { 0x65 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2ebb, gbc.sp());
        EXPECT(0x91ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x91e9));
        // 65 0092
        gbc.setState(0xca05, 0xb366, 0x2ae0, 0x6792, 0xc177, 0x4386, 0x1, 0x1);
        gbc.writeMem(0xca05, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb366, gbc.sp());
        EXPECT(0xca06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xca05));
        // 65 0093
        gbc.setState(0x979a, 0x7774, 0xe9e0, 0xc597, 0xda1e, 0x3ab4, 0x0, 0x0);
        gbc.writeMem(0x979a, { 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x7774, gbc.sp());
        EXPECT(0x979b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x979a));
        // 65 0094
        gbc.setState(0x26c2, 0x1e3d, 0xc90, 0x2e07, 0x464a, 0x246b, 0x1, 0x0);
        gbc.writeMem(0x26c2, { 0x65 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1e3d, gbc.sp());
        EXPECT(0x26c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0095
        gbc.setState(0x96b7, 0xb8f6, 0x5e60, 0x4ee2, 0x88c, 0xd0a2, 0x1, 0x0);
        gbc.writeMem(0x96b7, { 0x65 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb8f6, gbc.sp());
        EXPECT(0x96b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x96b7));
        // 65 0096
        gbc.setState(0xabc9, 0xf903, 0x6b00, 0x7bea, 0x483d, 0xd812, 0x0, 0x1);
        gbc.writeMem(0xabc9, { 0x65 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf903, gbc.sp());
        EXPECT(0xabca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xabc9));
        // 65 0097
        gbc.setState(0xb689, 0xc18e, 0x5dd0, 0xc6df, 0xfc23, 0x483c, 0x0, 0x1);
        gbc.writeMem(0xb689, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc18e, gbc.sp());
        EXPECT(0xb68a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb689));
        // 65 0099
        gbc.setState(0x741a, 0x3ac9, 0x51e0, 0x5523, 0xcdbb, 0xe14f, 0x0, 0x1);
        gbc.writeMem(0x741a, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3ac9, gbc.sp());
        EXPECT(0x741b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 009A
        gbc.setState(0xb74, 0x5d21, 0x8d20, 0x2158, 0x23be, 0x31d3, 0x1, 0x1);
        gbc.writeMem(0xb74, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5d21, gbc.sp());
        EXPECT(0xb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 009B
        gbc.setState(0x2219, 0xb3c8, 0x6740, 0x53ca, 0x77e4, 0x190a, 0x1, 0x1);
        gbc.writeMem(0x2219, { 0x65 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb3c8, gbc.sp());
        EXPECT(0x221a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 009C
        gbc.setState(0x166f, 0x65ee, 0xe5e0, 0x376, 0x8707, 0xc97d, 0x0, 0x0);
        gbc.writeMem(0x166f, { 0x65 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x65ee, gbc.sp());
        EXPECT(0x1670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 009D
        gbc.setState(0x168a, 0xaf05, 0x26d0, 0x18a0, 0xfac9, 0x8251, 0x0, 0x1);
        gbc.writeMem(0x168a, { 0x65 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaf05, gbc.sp());
        EXPECT(0x168b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 009E
        gbc.setState(0x15ea, 0xcfeb, 0xd380, 0x6e00, 0xc658, 0x9ea6, 0x1, 0x1);
        gbc.writeMem(0x15ea, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcfeb, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 009F
        gbc.setState(0x547f, 0x49af, 0x21b0, 0xb03d, 0xdb19, 0x20d2, 0x0, 0x1);
        gbc.writeMem(0x547f, { 0x65 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x49af, gbc.sp());
        EXPECT(0x5480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00A0
        gbc.setState(0x782f, 0xa6b1, 0x9920, 0xd5c9, 0xaff1, 0x5574, 0x0, 0x1);
        gbc.writeMem(0x782f, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa6b1, gbc.sp());
        EXPECT(0x7830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00A1
        gbc.setState(0xc807, 0x75fd, 0x180, 0x9062, 0x325c, 0x8033, 0x0, 0x0);
        gbc.writeMem(0xc807, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0xc808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc807));
        // 65 00A2
        gbc.setState(0x8069, 0x534c, 0x5fc0, 0xddf1, 0x9b79, 0xe1d6, 0x0, 0x0);
        gbc.writeMem(0x8069, { 0x65 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x534c, gbc.sp());
        EXPECT(0x806a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8069));
        // 65 00A3
        gbc.setState(0x5c02, 0xf037, 0x43c0, 0x9bf3, 0xf4b0, 0x3680, 0x0, 0x0);
        gbc.writeMem(0x5c02, { 0x65 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf037, gbc.sp());
        EXPECT(0x5c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00A5
        gbc.setState(0xe96, 0xff21, 0xbc40, 0xf36d, 0xf7b2, 0xa2e5, 0x0, 0x1);
        gbc.writeMem(0xe96, { 0x65 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xff21, gbc.sp());
        EXPECT(0xe97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00A6
        gbc.setState(0x4b66, 0xfaba, 0x1cf0, 0xea37, 0xb705, 0x2389, 0x0, 0x0);
        gbc.writeMem(0x4b66, { 0x65 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfaba, gbc.sp());
        EXPECT(0x4b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00A7
        gbc.setState(0x1799, 0xade5, 0xfb60, 0xad2, 0xbadb, 0x6b2, 0x1, 0x0);
        gbc.writeMem(0x1799, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00A8
        gbc.setState(0x56f9, 0xf235, 0x9150, 0xa3da, 0xed3f, 0x7f40, 0x1, 0x0);
        gbc.writeMem(0x56f9, { 0x65 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf235, gbc.sp());
        EXPECT(0x56fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00A9
        gbc.setState(0x8ce4, 0x3ee6, 0x6cb0, 0xf110, 0x178f, 0x9603, 0x0, 0x0);
        gbc.writeMem(0x8ce4, { 0x65 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3ee6, gbc.sp());
        EXPECT(0x8ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8ce4));
        // 65 00AA
        gbc.setState(0xb222, 0xb2dc, 0x1660, 0x7c9c, 0x18b8, 0x296a, 0x1, 0x0);
        gbc.writeMem(0xb222, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb2dc, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb222));
        // 65 00AB
        gbc.setState(0xe36d, 0x37a0, 0xf780, 0x817e, 0x2c7a, 0x9899, 0x0, 0x0);
        gbc.writeMem(0xe36d, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x37a0, gbc.sp());
        EXPECT(0xe36e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe36d));
        // 65 00AC
        gbc.setState(0x65bc, 0x151d, 0x67a0, 0x21a1, 0xf150, 0x3145, 0x1, 0x1);
        gbc.writeMem(0x65bc, { 0x65 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x151d, gbc.sp());
        EXPECT(0x65bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00AD
        gbc.setState(0x6b86, 0x4c9d, 0xc8c0, 0x37f1, 0xc0ec, 0x58ea, 0x0, 0x1);
        gbc.writeMem(0x6b86, { 0x65 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4c9d, gbc.sp());
        EXPECT(0x6b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00AE
        gbc.setState(0x314b, 0x3449, 0x72b0, 0xbbec, 0x3b7c, 0xc663, 0x0, 0x0);
        gbc.writeMem(0x314b, { 0x65 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3449, gbc.sp());
        EXPECT(0x314c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00AF
        gbc.setState(0x5b92, 0x1d4a, 0x8990, 0x45ea, 0xf18b, 0x6b6e, 0x1, 0x1);
        gbc.writeMem(0x5b92, { 0x65 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1d4a, gbc.sp());
        EXPECT(0x5b93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00B0
        gbc.setState(0x1734, 0x1e9e, 0x6b00, 0x23e5, 0x540, 0xfbb3, 0x0, 0x1);
        gbc.writeMem(0x1734, { 0x65 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1e9e, gbc.sp());
        EXPECT(0x1735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00B1
        gbc.setState(0x53d7, 0xbb5a, 0x3f40, 0x251f, 0xba2b, 0xccf0, 0x0, 0x0);
        gbc.writeMem(0x53d7, { 0x65 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xbb5a, gbc.sp());
        EXPECT(0x53d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00B2
        gbc.setState(0xae5c, 0x4667, 0x16b0, 0xea15, 0xfaf4, 0x67b9, 0x0, 0x0);
        gbc.writeMem(0xae5c, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4667, gbc.sp());
        EXPECT(0xae5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xae5c));
        // 65 00B3
        gbc.setState(0x1d11, 0x9a7c, 0xdda0, 0xe61b, 0x8e58, 0xf0c2, 0x1, 0x1);
        gbc.writeMem(0x1d11, { 0x65 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9a7c, gbc.sp());
        EXPECT(0x1d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00B4
        gbc.setState(0x29f, 0xdd78, 0x8cc0, 0x2118, 0xe05e, 0xe0b5, 0x0, 0x1);
        gbc.writeMem(0x29f, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xdd78, gbc.sp());
        EXPECT(0x2a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00B5
        gbc.setState(0x8432, 0xe0fb, 0xd980, 0x9f03, 0x3abe, 0x46c2, 0x0, 0x0);
        gbc.writeMem(0x8432, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe0fb, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8432));
        // 65 00B6
        gbc.setState(0x489a, 0xfbcd, 0x5e40, 0xee72, 0x96bb, 0xab, 0x1, 0x0);
        gbc.writeMem(0x489a, { 0x65 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfbcd, gbc.sp());
        EXPECT(0x489b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00B7
        gbc.setState(0xd6c9, 0xf972, 0xa750, 0x3b7c, 0x7102, 0x8210, 0x1, 0x1);
        gbc.writeMem(0xd6c9, { 0x65 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf972, gbc.sp());
        EXPECT(0xd6ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd6c9));
        // 65 00B8
        gbc.setState(0xeff8, 0xa4d6, 0x4000, 0x6e11, 0xbd35, 0x385f, 0x0, 0x1);
        gbc.writeMem(0xeff8, { 0x65 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa4d6, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xeff8));
        // 65 00B9
        gbc.setState(0xdc23, 0x29e8, 0x36a0, 0x56ed, 0x6a5a, 0x248d, 0x1, 0x0);
        gbc.writeMem(0xdc23, { 0x65 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x29e8, gbc.sp());
        EXPECT(0xdc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdc23));
        // 65 00BA
        gbc.setState(0xcefb, 0x483, 0x99b0, 0xf102, 0xd2e7, 0x61be, 0x1, 0x0);
        gbc.writeMem(0xcefb, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x483, gbc.sp());
        EXPECT(0xcefc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcefb));
        // 65 00BC
        gbc.setState(0x9449, 0xcd0d, 0x8c60, 0x13b2, 0xb815, 0x9174, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xcd0d, gbc.sp());
        EXPECT(0x944a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9449));
        // 65 00BD
        gbc.setState(0x418f, 0xc63d, 0x3a0, 0x58f7, 0xb7ef, 0x45e0, 0x1, 0x1);
        gbc.writeMem(0x418f, { 0x65 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc63d, gbc.sp());
        EXPECT(0x4190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00BE
        gbc.setState(0x71d7, 0xdf4, 0x7cd0, 0x7691, 0x61aa, 0x4a54, 0x0, 0x0);
        gbc.writeMem(0x71d7, { 0x65 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdf4, gbc.sp());
        EXPECT(0x71d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00BF
        gbc.setState(0x70e6, 0x6c10, 0xe50, 0x1b08, 0xf406, 0x54ed, 0x1, 0x1);
        gbc.writeMem(0x70e6, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6c10, gbc.sp());
        EXPECT(0x70e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00C0
        gbc.setState(0xd3d1, 0x48d8, 0x7b0, 0xa0dc, 0x1458, 0xd05e, 0x0, 0x1);
        gbc.writeMem(0xd3d1, { 0x65 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x48d8, gbc.sp());
        EXPECT(0xd3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd3d1));
        // 65 00C1
        gbc.setState(0xe09, 0x952d, 0xdaf0, 0x7e2f, 0x5db2, 0x22d8, 0x1, 0x0);
        gbc.writeMem(0xe09, { 0x65 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x952d, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00C2
        gbc.setState(0xb260, 0x4fc0, 0x8c70, 0x421c, 0xbbc2, 0xb6c1, 0x0, 0x0);
        gbc.writeMem(0xb260, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4fc0, gbc.sp());
        EXPECT(0xb261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb260));
        // 65 00C3
        gbc.setState(0x69ba, 0x1f41, 0x3ca0, 0xb0ac, 0x2e33, 0xc858, 0x0, 0x0);
        gbc.writeMem(0x69ba, { 0x65 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1f41, gbc.sp());
        EXPECT(0x69bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00C4
        gbc.setState(0x1476, 0x3ebf, 0x9c30, 0x24e7, 0x132e, 0x8596, 0x1, 0x0);
        gbc.writeMem(0x1476, { 0x65 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3ebf, gbc.sp());
        EXPECT(0x1477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00C5
        gbc.setState(0x4a07, 0x5365, 0xab80, 0x9367, 0xd78f, 0x6769, 0x1, 0x0);
        gbc.writeMem(0x4a07, { 0x65 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5365, gbc.sp());
        EXPECT(0x4a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00C6
        gbc.setState(0x3fec, 0x4417, 0x1dc0, 0x426a, 0xb63d, 0x17c3, 0x1, 0x1);
        gbc.writeMem(0x3fec, { 0x65 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4417, gbc.sp());
        EXPECT(0x3fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00C7
        gbc.setState(0xcf3, 0x7b3c, 0x28c0, 0x927e, 0x4b48, 0x4be2, 0x1, 0x0);
        gbc.writeMem(0xcf3, { 0x65 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7b3c, gbc.sp());
        EXPECT(0xcf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00C8
        gbc.setState(0xca89, 0xd90e, 0x2c00, 0xb233, 0x817, 0xbd37, 0x0, 0x0);
        gbc.writeMem(0xca89, { 0x65 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd90e, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xca89));
        // 65 00C9
        gbc.setState(0x18e0, 0x3f5f, 0x9e60, 0xfc95, 0x368f, 0x4c0, 0x0, 0x1);
        gbc.writeMem(0x18e0, { 0x65 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0x18e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00CA
        gbc.setState(0x67a0, 0x1886, 0xe6b0, 0x92bd, 0xfbe4, 0xdd36, 0x1, 0x0);
        gbc.writeMem(0x67a0, { 0x65 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1886, gbc.sp());
        EXPECT(0x67a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00CB
        gbc.setState(0xf28, 0xb500, 0x3d50, 0xcc99, 0xd2a3, 0xcd37, 0x1, 0x0);
        gbc.writeMem(0xf28, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb500, gbc.sp());
        EXPECT(0xf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00CC
        gbc.setState(0xd0a4, 0xf40c, 0x97f0, 0xf365, 0x9343, 0xd97, 0x1, 0x0);
        gbc.writeMem(0xd0a4, { 0x65 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf40c, gbc.sp());
        EXPECT(0xd0a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd0a4));
        // 65 00CD
        gbc.setState(0xcac4, 0x867c, 0x3440, 0x5fe5, 0xad72, 0x9f09, 0x0, 0x0);
        gbc.writeMem(0xcac4, { 0x65 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x867c, gbc.sp());
        EXPECT(0xcac5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcac4));
        // 65 00CE
        gbc.setState(0x2c04, 0x520e, 0x66c0, 0xff61, 0xcf5c, 0xc67, 0x0, 0x1);
        gbc.writeMem(0x2c04, { 0x65 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x520e, gbc.sp());
        EXPECT(0x2c05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00CF
        gbc.setState(0x87fe, 0xbfac, 0x6920, 0xd148, 0x72a, 0x7a37, 0x1, 0x1);
        gbc.writeMem(0x87fe, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbfac, gbc.sp());
        EXPECT(0x87ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x87fe));
        // 65 00D0
        gbc.setState(0x265a, 0x8c2b, 0x4670, 0x28ec, 0xf3a0, 0xae76, 0x1, 0x1);
        gbc.writeMem(0x265a, { 0x65 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8c2b, gbc.sp());
        EXPECT(0x265b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00D1
        gbc.setState(0x6bdd, 0x183f, 0x7fc0, 0x521e, 0x868b, 0x1a07, 0x0, 0x0);
        gbc.writeMem(0x6bdd, { 0x65 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x183f, gbc.sp());
        EXPECT(0x6bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00D2
        gbc.setState(0x84c2, 0x433d, 0xf5d0, 0x9c97, 0xb78e, 0x9703, 0x0, 0x0);
        gbc.writeMem(0x84c2, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x433d, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x84c2));
        // 65 00D3
        gbc.setState(0xbaeb, 0x384d, 0xea40, 0x3919, 0x94df, 0x54a, 0x1, 0x0);
        gbc.writeMem(0xbaeb, { 0x65 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x384d, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbaeb));
        // 65 00D4
        gbc.setState(0x9960, 0x77c8, 0xc6e0, 0xcd80, 0x1578, 0x1851, 0x1, 0x0);
        gbc.writeMem(0x9960, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x77c8, gbc.sp());
        EXPECT(0x9961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9960));
        // 65 00D5
        gbc.setState(0xe0ee, 0xb563, 0x7a90, 0x2329, 0x13ee, 0xe98d, 0x0, 0x1);
        gbc.writeMem(0xe0ee, { 0x65 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb563, gbc.sp());
        EXPECT(0xe0ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe0ee));
        // 65 00D6
        gbc.setState(0x7928, 0x42a2, 0x44c0, 0xc30b, 0x5f87, 0x8816, 0x0, 0x1);
        gbc.writeMem(0x7928, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x42a2, gbc.sp());
        EXPECT(0x7929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00D7
        gbc.setState(0x912b, 0xea21, 0xbb50, 0x9827, 0x31f5, 0xc79e, 0x1, 0x0);
        gbc.writeMem(0x912b, { 0x65 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea21, gbc.sp());
        EXPECT(0x912c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x912b));
        // 65 00D8
        gbc.setState(0x7379, 0xea2f, 0xd060, 0x5648, 0x737e, 0xa9e, 0x0, 0x1);
        gbc.writeMem(0x7379, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea2f, gbc.sp());
        EXPECT(0x737a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00D9
        gbc.setState(0xcaa6, 0xbdf9, 0xd030, 0x342d, 0x5bc2, 0xaf78, 0x1, 0x0);
        gbc.writeMem(0xcaa6, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbdf9, gbc.sp());
        EXPECT(0xcaa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcaa6));
        // 65 00DA
        gbc.setState(0x2def, 0x21a0, 0x7e50, 0x702, 0xcbe4, 0xb9, 0x0, 0x1);
        gbc.writeMem(0x2def, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x21a0, gbc.sp());
        EXPECT(0x2df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00DB
        gbc.setState(0x543, 0xdcc3, 0x50, 0x6c2e, 0x21e5, 0x4215, 0x0, 0x1);
        gbc.writeMem(0x543, { 0x65 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xdcc3, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00DC
        gbc.setState(0xcf83, 0x68cd, 0x4370, 0x8a36, 0x810e, 0xcdd2, 0x0, 0x1);
        gbc.writeMem(0xcf83, { 0x65 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x68cd, gbc.sp());
        EXPECT(0xcf84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcf83));
        // 65 00DD
        gbc.setState(0x4670, 0x2934, 0xfe30, 0xea71, 0x3d94, 0xacfe, 0x0, 0x1);
        gbc.writeMem(0x4670, { 0x65 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2934, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00DE
        gbc.setState(0x8383, 0x7f46, 0x8590, 0x9c87, 0x4bae, 0x82c5, 0x1, 0x1);
        gbc.writeMem(0x8383, { 0x65 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7f46, gbc.sp());
        EXPECT(0x8384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8383));
        // 65 00DF
        gbc.setState(0x9a2b, 0xb044, 0x21f0, 0xdd77, 0xa4b6, 0xcb73, 0x1, 0x1);
        gbc.writeMem(0x9a2b, { 0x65 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb044, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9a2b));
        // 65 00E0
        gbc.setState(0x961d, 0x86c2, 0xad80, 0xa519, 0x3c6d, 0xbc7c, 0x0, 0x0);
        gbc.writeMem(0x961d, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x86c2, gbc.sp());
        EXPECT(0x961e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x961d));
        // 65 00E1
        gbc.setState(0xaaef, 0x2aeb, 0xf770, 0xb107, 0x46a4, 0xe98b, 0x1, 0x0);
        gbc.writeMem(0xaaef, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2aeb, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaaef));
        // 65 00E2
        gbc.setState(0xb42a, 0x3b38, 0x1ec0, 0xc7b0, 0x184a, 0xaf99, 0x1, 0x1);
        gbc.writeMem(0xb42a, { 0x65 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3b38, gbc.sp());
        EXPECT(0xb42b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb42a));
        // 65 00E3
        gbc.setState(0xec48, 0x1157, 0xed0, 0x4d52, 0x8e58, 0x3e55, 0x1, 0x0);
        gbc.writeMem(0xec48, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1157, gbc.sp());
        EXPECT(0xec49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xec48));
        // 65 00E4
        gbc.setState(0x8b8f, 0xcca9, 0x64d0, 0xfab9, 0xccf8, 0x3177, 0x0, 0x0);
        gbc.writeMem(0x8b8f, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xcca9, gbc.sp());
        EXPECT(0x8b90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b8f));
        // 65 00E5
        gbc.setState(0xcb6f, 0xf542, 0x5ac0, 0x9ba4, 0xd5db, 0x5091, 0x0, 0x0);
        gbc.writeMem(0xcb6f, { 0x65 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf542, gbc.sp());
        EXPECT(0xcb70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcb6f));
        // 65 00E6
        gbc.setState(0x96c7, 0x6d94, 0x5280, 0x26ce, 0x25a9, 0x63fe, 0x1, 0x0);
        gbc.writeMem(0x96c7, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6d94, gbc.sp());
        EXPECT(0x96c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x96c7));
        // 65 00E7
        gbc.setState(0xd2b4, 0xc71b, 0x70a0, 0x80a8, 0x31a1, 0xbc10, 0x1, 0x1);
        gbc.writeMem(0xd2b4, { 0x65 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc71b, gbc.sp());
        EXPECT(0xd2b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd2b4));
        // 65 00E8
        gbc.setState(0xa65a, 0xe2c2, 0x5470, 0xf362, 0x942c, 0x7088, 0x1, 0x1);
        gbc.writeMem(0xa65a, { 0x65 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe2c2, gbc.sp());
        EXPECT(0xa65b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa65a));
        // 65 00E9
        gbc.setState(0x382f, 0x2c49, 0x8190, 0x3928, 0x3133, 0xe449, 0x1, 0x1);
        gbc.writeMem(0x382f, { 0x65 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0x3830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00EA
        gbc.setState(0x1057, 0x3788, 0xce60, 0x3180, 0x325f, 0x69a5, 0x1, 0x1);
        gbc.writeMem(0x1057, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3788, gbc.sp());
        EXPECT(0x1058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00EB
        gbc.setState(0x4091, 0x17a3, 0xf00, 0xb9d3, 0xc0e5, 0xf753, 0x0, 0x1);
        gbc.writeMem(0x4091, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00EC
        gbc.setState(0x1956, 0x61a6, 0x4d40, 0x78fc, 0x8954, 0xcb69, 0x0, 0x1);
        gbc.writeMem(0x1956, { 0x65 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x61a6, gbc.sp());
        EXPECT(0x1957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00ED
        gbc.setState(0x6002, 0xd6f2, 0x45c0, 0x2f43, 0xb3d4, 0xa079, 0x1, 0x0);
        gbc.writeMem(0x6002, { 0x65 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd6f2, gbc.sp());
        EXPECT(0x6003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00EE
        gbc.setState(0xc646, 0xe59e, 0x3c00, 0xdf70, 0xa87e, 0x7c0f, 0x0, 0x0);
        gbc.writeMem(0xc646, { 0x65 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe59e, gbc.sp());
        EXPECT(0xc647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc646));
        // 65 00EF
        gbc.setState(0x90d5, 0xa82b, 0xba10, 0x77d1, 0x6265, 0x569, 0x0, 0x0);
        gbc.writeMem(0x90d5, { 0x65 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa82b, gbc.sp());
        EXPECT(0x90d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x90d5));
        // 65 00F0
        gbc.setState(0xb80c, 0x4d95, 0xff90, 0xb347, 0x1bdc, 0xeb65, 0x0, 0x1);
        gbc.writeMem(0xb80c, { 0x65 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x4d95, gbc.sp());
        EXPECT(0xb80d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb80c));
        // 65 00F2
        gbc.setState(0x20be, 0x1440, 0xf9c0, 0xaf42, 0x5722, 0x2f72, 0x1, 0x0);
        gbc.writeMem(0x20be, { 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1440, gbc.sp());
        EXPECT(0x20bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00F3
        gbc.setState(0x6842, 0xaa1a, 0x48f0, 0xf65a, 0xed2b, 0xefed, 0x0, 0x1);
        gbc.writeMem(0x6842, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaa1a, gbc.sp());
        EXPECT(0x6843, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00F4
        gbc.setState(0x7894, 0xabd6, 0xbc90, 0xe16, 0x15ce, 0xe3a3, 0x0, 0x0);
        gbc.writeMem(0x7894, { 0x65 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xabd6, gbc.sp());
        EXPECT(0x7895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00F5
        gbc.setState(0xa048, 0xe464, 0xe80, 0x1e5c, 0x93ee, 0x3e94, 0x0, 0x0);
        gbc.writeMem(0xa048, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe464, gbc.sp());
        EXPECT(0xa049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa048));
        // 65 00F6
        gbc.setState(0x57e3, 0x20, 0x3000, 0x41db, 0xc5c4, 0xd66e, 0x1, 0x1);
        gbc.writeMem(0x57e3, { 0x65 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x20, gbc.sp());
        EXPECT(0x57e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00F7
        gbc.setState(0xb2e, 0xe9ea, 0xa500, 0xd0e1, 0xc003, 0xf865, 0x1, 0x1);
        gbc.writeMem(0xb2e, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe9ea, gbc.sp());
        EXPECT(0xb2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 00F8
        gbc.setState(0xa8e7, 0x5a1f, 0x86b0, 0x5f05, 0x6e97, 0x1088, 0x0, 0x1);
        gbc.writeMem(0xa8e7, { 0x65 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5a1f, gbc.sp());
        EXPECT(0xa8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa8e7));
        // 65 00F9
        gbc.setState(0xa406, 0x65f9, 0xb7e0, 0x4b48, 0xc5dd, 0x9ce5, 0x1, 0x0);
        gbc.writeMem(0xa406, { 0x65 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x65f9, gbc.sp());
        EXPECT(0xa407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa406));
        // 65 00FA
        gbc.setState(0xc616, 0x84df, 0xd010, 0xb339, 0x6e21, 0xbea7, 0x0, 0x0);
        gbc.writeMem(0xc616, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0xc617, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc616));
        // 65 00FB
        gbc.setState(0x798a, 0x4843, 0x51f0, 0x773f, 0x6ada, 0xaf7f, 0x1, 0x0);
        gbc.writeMem(0x798a, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4843, gbc.sp());
        EXPECT(0x798b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00FC
        gbc.setState(0xb100, 0xf436, 0xcab0, 0x24f1, 0xada1, 0xe580, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0xb101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb100));
        // 65 00FD
        gbc.setState(0x660, 0x1099, 0x9850, 0x2904, 0x259a, 0x4754, 0x1, 0x1);
        gbc.writeMem(0x660, { 0x65 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x1099, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00FE
        gbc.setState(0x450d, 0xacd3, 0xd930, 0x17e, 0xdba7, 0x2e0, 0x1, 0x1);
        gbc.writeMem(0x450d, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xacd3, gbc.sp());
        EXPECT(0x450e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 00FF
        gbc.setState(0x49f4, 0x2640, 0xf0f0, 0x7e0b, 0xca65, 0x8f11, 0x0, 0x0);
        gbc.writeMem(0x49f4, { 0x65 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2640, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0100
        gbc.setState(0x58e7, 0xb785, 0x2a60, 0xdcda, 0x34b2, 0xe562, 0x1, 0x0);
        gbc.writeMem(0x58e7, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb785, gbc.sp());
        EXPECT(0x58e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0101
        gbc.setState(0xe5e8, 0x3f5e, 0x9440, 0x9dcb, 0xc6f5, 0xdb97, 0x0, 0x1);
        gbc.writeMem(0xe5e8, { 0x65 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3f5e, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe5e8));
        // 65 0102
        gbc.setState(0x2d04, 0x21b0, 0x4420, 0x4a70, 0x5f02, 0x85a6, 0x1, 0x0);
        gbc.writeMem(0x2d04, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x21b0, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0103
        gbc.setState(0x8e, 0x360c, 0x710, 0x5740, 0x2397, 0x7653, 0x1, 0x1);
        gbc.writeMem(0x8e, { 0x65 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0x8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0104
        gbc.setState(0x4cb3, 0x63aa, 0x22f0, 0xb655, 0xf9b, 0xf337, 0x1, 0x1);
        gbc.writeMem(0x4cb3, { 0x65 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x63aa, gbc.sp());
        EXPECT(0x4cb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0106
        gbc.setState(0x58ac, 0x52bc, 0xde10, 0xa44d, 0xefad, 0x8692, 0x0, 0x1);
        gbc.writeMem(0x58ac, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x52bc, gbc.sp());
        EXPECT(0x58ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0108
        gbc.setState(0x5359, 0x140a, 0x3d40, 0x3870, 0x6207, 0xf757, 0x0, 0x1);
        gbc.writeMem(0x5359, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x140a, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0109
        gbc.setState(0xa345, 0xadb9, 0xeb20, 0xf40a, 0x1ad1, 0xbcb, 0x1, 0x0);
        gbc.writeMem(0xa345, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xadb9, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa345));
        // 65 010A
        gbc.setState(0x984b, 0x8d3b, 0xe820, 0x15ae, 0x8d15, 0x9f42, 0x1, 0x0);
        gbc.writeMem(0x984b, { 0x65 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8d3b, gbc.sp());
        EXPECT(0x984c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x984b));
        // 65 010B
        gbc.setState(0x5b7e, 0x229d, 0x36e0, 0x9c40, 0x63c4, 0x6061, 0x1, 0x1);
        gbc.writeMem(0x5b7e, { 0x65 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x229d, gbc.sp());
        EXPECT(0x5b7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 010C
        gbc.setState(0x6ce4, 0x485a, 0x9ad0, 0x18d5, 0x9e60, 0x6261, 0x0, 0x0);
        gbc.writeMem(0x6ce4, { 0x65 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0x6ce5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 010D
        gbc.setState(0x1cc6, 0x1e57, 0xb040, 0x6972, 0x3a4a, 0x999, 0x1, 0x0);
        gbc.writeMem(0x1cc6, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1e57, gbc.sp());
        EXPECT(0x1cc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 010E
        gbc.setState(0xe2d7, 0xf6ed, 0xbe00, 0xc955, 0xa1f0, 0x7db1, 0x0, 0x0);
        gbc.writeMem(0xe2d7, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf6ed, gbc.sp());
        EXPECT(0xe2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe2d7));
        // 65 010F
        gbc.setState(0x479, 0xbaa7, 0x2f80, 0xd18a, 0x33c5, 0x3ac, 0x1, 0x1);
        gbc.writeMem(0x479, { 0x65 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbaa7, gbc.sp());
        EXPECT(0x47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0110
        gbc.setState(0xd6de, 0x31fd, 0xc930, 0xac50, 0xfabe, 0xa341, 0x0, 0x0);
        gbc.writeMem(0xd6de, { 0x65 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd6de));
        // 65 0111
        gbc.setState(0xb93c, 0x1446, 0x550, 0x2b47, 0x4da1, 0x71fc, 0x1, 0x1);
        gbc.writeMem(0xb93c, { 0x65 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1446, gbc.sp());
        EXPECT(0xb93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb93c));
        // 65 0112
        gbc.setState(0xccae, 0xe8b8, 0x8470, 0x2f0a, 0x667, 0xf7, 0x1, 0x1);
        gbc.writeMem(0xccae, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0xccaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xccae));
        // 65 0113
        gbc.setState(0xdbe1, 0x2a2b, 0xc570, 0xaa31, 0xf96e, 0x7271, 0x0, 0x0);
        gbc.writeMem(0xdbe1, { 0x65 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2a2b, gbc.sp());
        EXPECT(0xdbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdbe1));
        // 65 0114
        gbc.setState(0x87ce, 0xa937, 0x180, 0xa151, 0xe3cd, 0xf238, 0x0, 0x0);
        gbc.writeMem(0x87ce, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa937, gbc.sp());
        EXPECT(0x87cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x87ce));
        // 65 0115
        gbc.setState(0x7b84, 0xcd55, 0x8a70, 0x3127, 0x9a18, 0xa42c, 0x1, 0x0);
        gbc.writeMem(0x7b84, { 0x65 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcd55, gbc.sp());
        EXPECT(0x7b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0116
        gbc.setState(0xc983, 0xae17, 0xca40, 0xafb4, 0x3d8d, 0xde8d, 0x0, 0x0);
        gbc.writeMem(0xc983, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xae17, gbc.sp());
        EXPECT(0xc984, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc983));
        // 65 0117
        gbc.setState(0x845e, 0x366b, 0x1ef0, 0xceac, 0xa6bc, 0x6033, 0x1, 0x1);
        gbc.writeMem(0x845e, { 0x65 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x366b, gbc.sp());
        EXPECT(0x845f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x845e));
        // 65 0118
        gbc.setState(0x59b4, 0x3d9f, 0xedc0, 0x5cea, 0xa06b, 0x2f5c, 0x0, 0x1);
        gbc.writeMem(0x59b4, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3d9f, gbc.sp());
        EXPECT(0x59b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0119
        gbc.setState(0xc528, 0xc491, 0xfbe0, 0x870a, 0x6628, 0xa1c8, 0x0, 0x1);
        gbc.writeMem(0xc528, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc528));
        // 65 011A
        gbc.setState(0x6fb0, 0xeae1, 0xec60, 0x731b, 0x31ef, 0x1096, 0x1, 0x1);
        gbc.writeMem(0x6fb0, { 0x65 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xeae1, gbc.sp());
        EXPECT(0x6fb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 011B
        gbc.setState(0x4a83, 0x9852, 0x3ef0, 0xf915, 0xeabf, 0xfd5f, 0x0, 0x1);
        gbc.writeMem(0x4a83, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x9852, gbc.sp());
        EXPECT(0x4a84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 011C
        gbc.setState(0xcbed, 0x763a, 0x64d0, 0x1b47, 0xefd5, 0x29a4, 0x0, 0x0);
        gbc.writeMem(0xcbed, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x763a, gbc.sp());
        EXPECT(0xcbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcbed));
        // 65 011D
        gbc.setState(0x73fb, 0xb27c, 0x69a0, 0x10b1, 0xa805, 0xf845, 0x0, 0x1);
        gbc.writeMem(0x73fb, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb27c, gbc.sp());
        EXPECT(0x73fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 011E
        gbc.setState(0xc96b, 0xcf23, 0x8040, 0x2695, 0x6896, 0x3d3c, 0x0, 0x0);
        gbc.writeMem(0xc96b, { 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xcf23, gbc.sp());
        EXPECT(0xc96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc96b));
        // 65 011F
        gbc.setState(0x24c3, 0xa950, 0xf90, 0xe1b4, 0xdb84, 0x85a4, 0x0, 0x1);
        gbc.writeMem(0x24c3, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa950, gbc.sp());
        EXPECT(0x24c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0120
        gbc.setState(0xc905, 0xc76b, 0xa070, 0x1f7e, 0x20ff, 0x3ce7, 0x1, 0x1);
        gbc.writeMem(0xc905, { 0x65 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc76b, gbc.sp());
        EXPECT(0xc906, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc905));
        // 65 0121
        gbc.setState(0xebcc, 0xedd1, 0xad80, 0xd2a9, 0x232a, 0x934d, 0x0, 0x0);
        gbc.writeMem(0xebcc, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xedd1, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xebcc));
        // 65 0122
        gbc.setState(0xbc4b, 0x556d, 0xdc40, 0xad25, 0x587f, 0x4ce4, 0x1, 0x1);
        gbc.writeMem(0xbc4b, { 0x65 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x556d, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbc4b));
        // 65 0123
        gbc.setState(0x355, 0x6752, 0xd190, 0x313d, 0xe1dc, 0xa34e, 0x1, 0x0);
        gbc.writeMem(0x355, { 0x65 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0124
        gbc.setState(0xbda7, 0x5009, 0x2530, 0x951e, 0x4895, 0x4001, 0x0, 0x1);
        gbc.writeMem(0xbda7, { 0x65 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5009, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbda7));
        // 65 0125
        gbc.setState(0xd60a, 0xacfb, 0xeb90, 0xbd, 0x2ee3, 0xd6d2, 0x1, 0x1);
        gbc.writeMem(0xd60a, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0xd60b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd60a));
        // 65 0126
        gbc.setState(0x5e73, 0xc16, 0x2a10, 0x1073, 0x7591, 0xe27c, 0x0, 0x1);
        gbc.writeMem(0x5e73, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc16, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0127
        gbc.setState(0x3995, 0xfc05, 0x5350, 0xe523, 0xa2cb, 0xb3ea, 0x0, 0x0);
        gbc.writeMem(0x3995, { 0x65 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0x3996, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0128
        gbc.setState(0x4fe9, 0x4662, 0x69a0, 0x1c05, 0x858a, 0xfee1, 0x0, 0x0);
        gbc.writeMem(0x4fe9, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x4662, gbc.sp());
        EXPECT(0x4fea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0129
        gbc.setState(0x6b70, 0x3aeb, 0x2ef0, 0x6732, 0xc27c, 0x1c9e, 0x0, 0x1);
        gbc.writeMem(0x6b70, { 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3aeb, gbc.sp());
        EXPECT(0x6b71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 012A
        gbc.setState(0x6ef8, 0xef41, 0x3c20, 0xf82b, 0xcd9f, 0x91b8, 0x1, 0x1);
        gbc.writeMem(0x6ef8, { 0x65 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xef41, gbc.sp());
        EXPECT(0x6ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 012C
        gbc.setState(0x5359, 0x2cfe, 0x1c0, 0xf3df, 0xfaa2, 0xf214, 0x1, 0x0);
        gbc.writeMem(0x5359, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2cfe, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 012E
        gbc.setState(0xcd56, 0x2f7a, 0x3c40, 0x8799, 0x5e91, 0xf2e1, 0x0, 0x1);
        gbc.writeMem(0xcd56, { 0x65 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2f7a, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcd56));
        // 65 012F
        gbc.setState(0x8541, 0xf3c2, 0x17e0, 0x1bdf, 0xdd29, 0xfc5a, 0x1, 0x1);
        gbc.writeMem(0x8541, { 0x65 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf3c2, gbc.sp());
        EXPECT(0x8542, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8541));
        // 65 0130
        gbc.setState(0x1756, 0x626e, 0xeeb0, 0x6816, 0x7049, 0xa984, 0x1, 0x1);
        gbc.writeMem(0x1756, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x626e, gbc.sp());
        EXPECT(0x1757, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0131
        gbc.setState(0xdf63, 0xaf0f, 0xc180, 0xcfb9, 0x906f, 0xf3c2, 0x0, 0x1);
        gbc.writeMem(0xdf63, { 0x65 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xaf0f, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdf63));
        // 65 0132
        gbc.setState(0x8801, 0x287f, 0x340, 0xd73d, 0xf5a9, 0xc418, 0x0, 0x1);
        gbc.writeMem(0x8801, { 0x65 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x287f, gbc.sp());
        EXPECT(0x8802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8801));
        // 65 0133
        gbc.setState(0x70e2, 0x4d6a, 0xbd60, 0x7c23, 0x38f8, 0x5f64, 0x0, 0x1);
        gbc.writeMem(0x70e2, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4d6a, gbc.sp());
        EXPECT(0x70e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0134
        gbc.setState(0x2ef6, 0x80a8, 0xcd10, 0x609a, 0x4175, 0x2147, 0x1, 0x1);
        gbc.writeMem(0x2ef6, { 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x80a8, gbc.sp());
        EXPECT(0x2ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0135
        gbc.setState(0x93ab, 0x8cc1, 0xa490, 0xc137, 0x2a47, 0x834f, 0x0, 0x1);
        gbc.writeMem(0x93ab, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0x93ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x93ab));
        // 65 0136
        gbc.setState(0x67ed, 0x8911, 0x4a10, 0x9b08, 0x7d6e, 0xaa66, 0x0, 0x1);
        gbc.writeMem(0x67ed, { 0x65 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8911, gbc.sp());
        EXPECT(0x67ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0137
        gbc.setState(0xa4ef, 0xef72, 0x7c00, 0xa888, 0xe6a5, 0x930e, 0x0, 0x1);
        gbc.writeMem(0xa4ef, { 0x65 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef72, gbc.sp());
        EXPECT(0xa4f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa4ef));
        // 65 0138
        gbc.setState(0x17e6, 0x1785, 0xf70, 0xc6cd, 0x5ed2, 0xa1e8, 0x0, 0x1);
        gbc.writeMem(0x17e6, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1785, gbc.sp());
        EXPECT(0x17e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0139
        gbc.setState(0x1722, 0xa23c, 0x57c0, 0xf768, 0x7d53, 0xfdb4, 0x0, 0x0);
        gbc.writeMem(0x1722, { 0x65 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa23c, gbc.sp());
        EXPECT(0x1723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 013A
        gbc.setState(0x8397, 0xc4e1, 0xd9c0, 0xe4af, 0x8163, 0x671, 0x1, 0x0);
        gbc.writeMem(0x8397, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc4e1, gbc.sp());
        EXPECT(0x8398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8397));
        // 65 013B
        gbc.setState(0x19d5, 0xda7f, 0xeab0, 0x6bc6, 0xcecd, 0x7407, 0x1, 0x0);
        gbc.writeMem(0x19d5, { 0x65 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xda7f, gbc.sp());
        EXPECT(0x19d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 013C
        gbc.setState(0x382d, 0x2888, 0xe430, 0xce49, 0xb345, 0x5a1d, 0x1, 0x0);
        gbc.writeMem(0x382d, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2888, gbc.sp());
        EXPECT(0x382e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 013D
        gbc.setState(0xd14c, 0x6228, 0x1330, 0xd1cc, 0x7ca5, 0xd451, 0x0, 0x1);
        gbc.writeMem(0xd14c, { 0x65 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x6228, gbc.sp());
        EXPECT(0xd14d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd14c));
        // 65 013E
        gbc.setState(0xc4cb, 0x62b7, 0x2040, 0x77, 0x6e4e, 0x82ff, 0x0, 0x1);
        gbc.writeMem(0xc4cb, { 0x65 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x62b7, gbc.sp());
        EXPECT(0xc4cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc4cb));
        // 65 013F
        gbc.setState(0x35c0, 0x7182, 0xa4f0, 0xb888, 0xe040, 0xa77c, 0x1, 0x0);
        gbc.writeMem(0x35c0, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7182, gbc.sp());
        EXPECT(0x35c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0140
        gbc.setState(0x1916, 0x89d4, 0x7530, 0x337f, 0x1a3c, 0xa508, 0x0, 0x1);
        gbc.writeMem(0x1916, { 0x65 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x89d4, gbc.sp());
        EXPECT(0x1917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0141
        gbc.setState(0x2315, 0xbaf2, 0xfb50, 0x32ce, 0x544a, 0xb606, 0x0, 0x0);
        gbc.writeMem(0x2315, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbaf2, gbc.sp());
        EXPECT(0x2316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0142
        gbc.setState(0xbbeb, 0xe490, 0x3d40, 0x52ee, 0x97aa, 0x9fba, 0x0, 0x1);
        gbc.writeMem(0xbbeb, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe490, gbc.sp());
        EXPECT(0xbbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbbeb));
        // 65 0143
        gbc.setState(0x59b5, 0xd6bf, 0x1f60, 0xd229, 0x499b, 0x9a3d, 0x0, 0x1);
        gbc.writeMem(0x59b5, { 0x65 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd6bf, gbc.sp());
        EXPECT(0x59b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0144
        gbc.setState(0x204, 0xac7a, 0xd9f0, 0x2777, 0xc28, 0xa40d, 0x1, 0x0);
        gbc.writeMem(0x204, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xac7a, gbc.sp());
        EXPECT(0x205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0145
        gbc.setState(0x5315, 0x92f2, 0xd390, 0x2e46, 0x6409, 0xa961, 0x1, 0x0);
        gbc.writeMem(0x5315, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x92f2, gbc.sp());
        EXPECT(0x5316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0146
        gbc.setState(0x6470, 0x460c, 0xa3a0, 0xa7ae, 0xb46b, 0x4898, 0x0, 0x0);
        gbc.writeMem(0x6470, { 0x65 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x460c, gbc.sp());
        EXPECT(0x6471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0147
        gbc.setState(0x7f56, 0xc377, 0x4ba0, 0x85d6, 0x5d5a, 0xa98, 0x1, 0x1);
        gbc.writeMem(0x7f56, { 0x65 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0x7f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0148
        gbc.setState(0xaa52, 0x2330, 0x6790, 0x37df, 0x5e76, 0x8e04, 0x0, 0x1);
        gbc.writeMem(0xaa52, { 0x65 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2330, gbc.sp());
        EXPECT(0xaa53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaa52));
        // 65 0149
        gbc.setState(0xb7a2, 0x954, 0x6030, 0x9fdd, 0xb84e, 0x5dfd, 0x1, 0x0);
        gbc.writeMem(0xb7a2, { 0x65 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x954, gbc.sp());
        EXPECT(0xb7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb7a2));
        // 65 014A
        gbc.setState(0x132e, 0x32b7, 0xf3a0, 0x42c2, 0x81a2, 0x6aed, 0x1, 0x1);
        gbc.writeMem(0x132e, { 0x65 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x32b7, gbc.sp());
        EXPECT(0x132f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 014B
        gbc.setState(0xcf93, 0x497, 0x80c0, 0x7b84, 0x6ed3, 0x27bc, 0x1, 0x1);
        gbc.writeMem(0xcf93, { 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x497, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcf93));
        // 65 014C
        gbc.setState(0x5ef, 0x5128, 0x3e40, 0x7aff, 0x6e07, 0xd44b, 0x1, 0x0);
        gbc.writeMem(0x5ef, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x5f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 014D
        gbc.setState(0x32f8, 0x899b, 0xf110, 0x88fd, 0x1de, 0x7dab, 0x1, 0x1);
        gbc.writeMem(0x32f8, { 0x65 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x899b, gbc.sp());
        EXPECT(0x32f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 014E
        gbc.setState(0x5c70, 0x9cf7, 0x3e50, 0x554d, 0xd49, 0xa082, 0x0, 0x1);
        gbc.writeMem(0x5c70, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0x5c71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 014F
        gbc.setState(0x61e4, 0xc029, 0xb090, 0x1af9, 0xb37e, 0x2a80, 0x0, 0x1);
        gbc.writeMem(0x61e4, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc029, gbc.sp());
        EXPECT(0x61e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0150
        gbc.setState(0x657b, 0x5468, 0xedc0, 0xe513, 0x187d, 0x63f6, 0x1, 0x0);
        gbc.writeMem(0x657b, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5468, gbc.sp());
        EXPECT(0x657c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0151
        gbc.setState(0xd141, 0x99b9, 0x4d60, 0x85b9, 0x408, 0x9451, 0x0, 0x1);
        gbc.writeMem(0xd141, { 0x65 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x99b9, gbc.sp());
        EXPECT(0xd142, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd141));
        // 65 0152
        gbc.setState(0x660, 0xf63c, 0x6540, 0x42b0, 0x33f9, 0x2df3, 0x1, 0x0);
        gbc.writeMem(0x660, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf63c, gbc.sp());
        EXPECT(0x661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0153
        gbc.setState(0x3542, 0xb4c8, 0x5bb0, 0xa513, 0x6021, 0x7306, 0x1, 0x1);
        gbc.writeMem(0x3542, { 0x65 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xb4c8, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0154
        gbc.setState(0x426e, 0x6529, 0x9980, 0xd449, 0x4a6, 0xfa16, 0x0, 0x0);
        gbc.writeMem(0x426e, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6529, gbc.sp());
        EXPECT(0x426f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0155
        gbc.setState(0x45de, 0x6a14, 0xebc0, 0xab7c, 0x15d2, 0x9041, 0x1, 0x0);
        gbc.writeMem(0x45de, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6a14, gbc.sp());
        EXPECT(0x45df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0158
        gbc.setState(0x14d6, 0x9148, 0xe410, 0xe43c, 0x2f81, 0x43be, 0x0, 0x1);
        gbc.writeMem(0x14d6, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9148, gbc.sp());
        EXPECT(0x14d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0159
        gbc.setState(0x6754, 0x3764, 0xdf70, 0x2ba9, 0xbf0, 0x9765, 0x1, 0x1);
        gbc.writeMem(0x6754, { 0x65 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3764, gbc.sp());
        EXPECT(0x6755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 015A
        gbc.setState(0x3574, 0x93de, 0x4890, 0x2f0, 0x8b97, 0xfe2a, 0x0, 0x1);
        gbc.writeMem(0x3574, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x93de, gbc.sp());
        EXPECT(0x3575, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 015B
        gbc.setState(0x27e7, 0xa5d1, 0x4660, 0x5773, 0x84e5, 0xaf95, 0x0, 0x0);
        gbc.writeMem(0x27e7, { 0x65 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa5d1, gbc.sp());
        EXPECT(0x27e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 015C
        gbc.setState(0xefa6, 0xbfdf, 0x5ff0, 0xeefa, 0xb7d2, 0x886c, 0x1, 0x0);
        gbc.writeMem(0xefa6, { 0x65 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbfdf, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xefa6));
        // 65 015D
        gbc.setState(0x7220, 0xa3c4, 0x4ef0, 0xe476, 0x3e55, 0x69aa, 0x1, 0x0);
        gbc.writeMem(0x7220, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa3c4, gbc.sp());
        EXPECT(0x7221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 015E
        gbc.setState(0x9409, 0x4d28, 0xcc0, 0x2e65, 0x307f, 0xf5f8, 0x0, 0x1);
        gbc.writeMem(0x9409, { 0x65 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x4d28, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9409));
        // 65 015F
        gbc.setState(0x9ab4, 0xe5c4, 0x9f30, 0x357, 0xd987, 0xed4f, 0x0, 0x0);
        gbc.writeMem(0x9ab4, { 0x65 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe5c4, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9ab4));
        // 65 0160
        gbc.setState(0xb1e4, 0xa3a7, 0xad90, 0x2f66, 0xb8d6, 0xeb60, 0x0, 0x1);
        gbc.writeMem(0xb1e4, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa3a7, gbc.sp());
        EXPECT(0xb1e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb1e4));
        // 65 0161
        gbc.setState(0x42db, 0xeead, 0x2ef0, 0xd6aa, 0xc713, 0x267c, 0x0, 0x1);
        gbc.writeMem(0x42db, { 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xeead, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0162
        gbc.setState(0x991d, 0x8387, 0x4880, 0xd80e, 0x8d6d, 0x636c, 0x0, 0x1);
        gbc.writeMem(0x991d, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8387, gbc.sp());
        EXPECT(0x991e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x991d));
        // 65 0163
        gbc.setState(0x23e8, 0x59bb, 0x6580, 0xb466, 0x5eb9, 0x6be1, 0x0, 0x0);
        gbc.writeMem(0x23e8, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x59bb, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0164
        gbc.setState(0x4910, 0xb9dd, 0xd7c0, 0x3b29, 0x3843, 0x6a8d, 0x0, 0x1);
        gbc.writeMem(0x4910, { 0x65 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb9dd, gbc.sp());
        EXPECT(0x4911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0167
        gbc.setState(0xc95, 0x78b2, 0x8d90, 0x9353, 0xcc7d, 0x2940, 0x1, 0x0);
        gbc.writeMem(0xc95, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x78b2, gbc.sp());
        EXPECT(0xc96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0168
        gbc.setState(0xdc4b, 0xe8, 0x16e0, 0xa20, 0xf4e8, 0xd576, 0x0, 0x0);
        gbc.writeMem(0xdc4b, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe8, gbc.sp());
        EXPECT(0xdc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdc4b));
        // 65 0169
        gbc.setState(0xdb09, 0xfad7, 0xfd0, 0xacb2, 0x5aef, 0x54f0, 0x0, 0x1);
        gbc.writeMem(0xdb09, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfad7, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdb09));
        // 65 016A
        gbc.setState(0x7549, 0xe313, 0xbeb0, 0x5434, 0xa6cc, 0xfe18, 0x1, 0x1);
        gbc.writeMem(0x7549, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe313, gbc.sp());
        EXPECT(0x754a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 016B
        gbc.setState(0xe65a, 0xaedc, 0x3e60, 0x2165, 0x29ab, 0xa57d, 0x0, 0x0);
        gbc.writeMem(0xe65a, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xaedc, gbc.sp());
        EXPECT(0xe65b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe65a));
        // 65 016C
        gbc.setState(0xa674, 0xae3e, 0x6100, 0x8cbe, 0x43b8, 0xc2e7, 0x0, 0x0);
        gbc.writeMem(0xa674, { 0x65 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0xa675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa674));
        // 65 016D
        gbc.setState(0x9778, 0x6a67, 0x4510, 0x36c7, 0xfa2, 0x80f8, 0x1, 0x1);
        gbc.writeMem(0x9778, { 0x65 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6a67, gbc.sp());
        EXPECT(0x9779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9778));
        // 65 016E
        gbc.setState(0x5c7c, 0x2ee2, 0xe400, 0xebe9, 0xbd42, 0x2945, 0x1, 0x1);
        gbc.writeMem(0x5c7c, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2ee2, gbc.sp());
        EXPECT(0x5c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 016F
        gbc.setState(0x5ab0, 0x2f3, 0x5b80, 0x1ae5, 0xbe9c, 0xbf76, 0x1, 0x1);
        gbc.writeMem(0x5ab0, { 0x65 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2f3, gbc.sp());
        EXPECT(0x5ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0170
        gbc.setState(0xcc49, 0x3957, 0x2a80, 0xda0c, 0x484e, 0xe4a6, 0x1, 0x1);
        gbc.writeMem(0xcc49, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0xcc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcc49));
        // 65 0171
        gbc.setState(0x2b4, 0xf930, 0xd7c0, 0xe034, 0x5581, 0x8ffa, 0x0, 0x0);
        gbc.writeMem(0x2b4, { 0x65 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf930, gbc.sp());
        EXPECT(0x2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0172
        gbc.setState(0x6f3, 0x9109, 0x61e0, 0x6d7e, 0x6d61, 0x853b, 0x0, 0x0);
        gbc.writeMem(0x6f3, { 0x65 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0x6f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0173
        gbc.setState(0x60ca, 0x50ec, 0xc1e0, 0x93ab, 0xc89b, 0xfdaf, 0x1, 0x1);
        gbc.writeMem(0x60ca, { 0x65 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0174
        gbc.setState(0xe973, 0x4e2d, 0x50d0, 0x6c40, 0x91cd, 0x5ca, 0x0, 0x1);
        gbc.writeMem(0xe973, { 0x65 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4e2d, gbc.sp());
        EXPECT(0xe974, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe973));
        // 65 0175
        gbc.setState(0x9b2, 0xc2b6, 0x3240, 0x4c48, 0x5dfc, 0xad4d, 0x0, 0x0);
        gbc.writeMem(0x9b2, { 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc2b6, gbc.sp());
        EXPECT(0x9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0176
        gbc.setState(0xb513, 0x2adc, 0xded0, 0xca8c, 0x3e68, 0xfdb8, 0x0, 0x0);
        gbc.writeMem(0xb513, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0xb514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb513));
        // 65 0178
        gbc.setState(0x49f4, 0x3fa8, 0x3430, 0xd5c4, 0x69bb, 0x35be, 0x0, 0x0);
        gbc.writeMem(0x49f4, { 0x65 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3fa8, gbc.sp());
        EXPECT(0x49f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 017A
        gbc.setState(0x3054, 0x155b, 0x32a0, 0x717f, 0xe64, 0x97f2, 0x0, 0x1);
        gbc.writeMem(0x3054, { 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x155b, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 017B
        gbc.setState(0x7cf0, 0xfbec, 0xdd80, 0x63c1, 0x81a0, 0xe591, 0x1, 0x1);
        gbc.writeMem(0x7cf0, { 0x65 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfbec, gbc.sp());
        EXPECT(0x7cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 017C
        gbc.setState(0x59d, 0x4a5a, 0x7970, 0xbf1d, 0x4f6, 0x3326, 0x0, 0x1);
        gbc.writeMem(0x59d, { 0x65 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4a5a, gbc.sp());
        EXPECT(0x59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 017D
        gbc.setState(0x4aa3, 0x2eb2, 0x8b40, 0x1a2e, 0x28a9, 0x55fa, 0x0, 0x0);
        gbc.writeMem(0x4aa3, { 0x65 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2eb2, gbc.sp());
        EXPECT(0x4aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 017E
        gbc.setState(0xb06, 0x4773, 0xd7a0, 0x31a0, 0x89ec, 0x5eb6, 0x1, 0x0);
        gbc.writeMem(0xb06, { 0x65 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4773, gbc.sp());
        EXPECT(0xb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 017F
        gbc.setState(0xbdc9, 0x8288, 0x1f20, 0x8b5c, 0x2f9d, 0xd0a2, 0x0, 0x1);
        gbc.writeMem(0xbdc9, { 0x65 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8288, gbc.sp());
        EXPECT(0xbdca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbdc9));
        // 65 0180
        gbc.setState(0xb9ec, 0xfea8, 0x51f0, 0x3e26, 0x92a1, 0x26cc, 0x0, 0x1);
        gbc.writeMem(0xb9ec, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xfea8, gbc.sp());
        EXPECT(0xb9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb9ec));
        // 65 0181
        gbc.setState(0x34c0, 0x4641, 0xf450, 0xd590, 0x5450, 0x88e3, 0x0, 0x1);
        gbc.writeMem(0x34c0, { 0x65 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4641, gbc.sp());
        EXPECT(0x34c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0182
        gbc.setState(0x9e1c, 0xe94c, 0x5670, 0x2fd, 0xf52b, 0xd75e, 0x1, 0x0);
        gbc.writeMem(0x9e1c, { 0x65 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe94c, gbc.sp());
        EXPECT(0x9e1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9e1c));
        // 65 0183
        gbc.setState(0x1ae3, 0x2c0e, 0xc620, 0x4958, 0x56f2, 0x320b, 0x1, 0x0);
        gbc.writeMem(0x1ae3, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2c0e, gbc.sp());
        EXPECT(0x1ae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0184
        gbc.setState(0x3a28, 0x1e45, 0x4700, 0xecc6, 0xdd45, 0xaf3d, 0x1, 0x1);
        gbc.writeMem(0x3a28, { 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1e45, gbc.sp());
        EXPECT(0x3a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0185
        gbc.setState(0xa57, 0xd98b, 0x27f0, 0x33bb, 0x4176, 0xb020, 0x0, 0x0);
        gbc.writeMem(0xa57, { 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd98b, gbc.sp());
        EXPECT(0xa58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0186
        gbc.setState(0x5902, 0x92d3, 0xdaa0, 0xf5c5, 0xbc1f, 0xc885, 0x0, 0x1);
        gbc.writeMem(0x5902, { 0x65 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x92d3, gbc.sp());
        EXPECT(0x5903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0187
        gbc.setState(0x765c, 0x8771, 0x9360, 0xca7b, 0xd6a0, 0x9abb, 0x1, 0x1);
        gbc.writeMem(0x765c, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x8771, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0188
        gbc.setState(0xa5d6, 0x98ac, 0xf0a0, 0x55ee, 0xbe42, 0x652a, 0x0, 0x1);
        gbc.writeMem(0xa5d6, { 0x65 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x98ac, gbc.sp());
        EXPECT(0xa5d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa5d6));
        // 65 0189
        gbc.setState(0x2f16, 0x54d6, 0x7490, 0xa594, 0x6953, 0xbce0, 0x0, 0x1);
        gbc.writeMem(0x2f16, { 0x65 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x54d6, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 018A
        gbc.setState(0x9c97, 0x2ac, 0xd6b0, 0x544, 0x6d40, 0xc6bd, 0x1, 0x0);
        gbc.writeMem(0x9c97, { 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x2ac, gbc.sp());
        EXPECT(0x9c98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9c97));
        // 65 018B
        gbc.setState(0x5f0, 0x8f82, 0x9280, 0xe18d, 0x6498, 0xcfe6, 0x0, 0x0);
        gbc.writeMem(0x5f0, { 0x65 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0x5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 018C
        gbc.setState(0x88e9, 0xd825, 0x1b20, 0x305f, 0x3aed, 0xf1c8, 0x1, 0x1);
        gbc.writeMem(0x88e9, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd825, gbc.sp());
        EXPECT(0x88ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x88e9));
        // 65 018D
        gbc.setState(0x624d, 0x3b8f, 0x7f50, 0xb816, 0x88dd, 0x7f77, 0x0, 0x1);
        gbc.writeMem(0x624d, { 0x65 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3b8f, gbc.sp());
        EXPECT(0x624e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 018E
        gbc.setState(0x8b8, 0x6e0e, 0xf9c0, 0x9146, 0x7bfe, 0x23d9, 0x1, 0x0);
        gbc.writeMem(0x8b8, { 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6e0e, gbc.sp());
        EXPECT(0x8b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0190
        gbc.setState(0x3acd, 0xad44, 0x8c20, 0xa296, 0x5ea0, 0xd881, 0x1, 0x0);
        gbc.writeMem(0x3acd, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xad44, gbc.sp());
        EXPECT(0x3ace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0191
        gbc.setState(0x4f3f, 0xcca8, 0xb780, 0xb3a7, 0x4585, 0x7aeb, 0x0, 0x1);
        gbc.writeMem(0x4f3f, { 0x65 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0x4f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0192
        gbc.setState(0xe656, 0x62c1, 0x6980, 0x9a07, 0xbd35, 0x7dbc, 0x0, 0x1);
        gbc.writeMem(0xe656, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x62c1, gbc.sp());
        EXPECT(0xe657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe656));
        // 65 0193
        gbc.setState(0xdd5f, 0x2717, 0x99c0, 0xfd7e, 0x1575, 0x2d06, 0x1, 0x1);
        gbc.writeMem(0xdd5f, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2717, gbc.sp());
        EXPECT(0xdd60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdd5f));
        // 65 0194
        gbc.setState(0x2a36, 0x1737, 0xdaf0, 0x8c69, 0x90d, 0x956c, 0x1, 0x0);
        gbc.writeMem(0x2a36, { 0x65 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x1737, gbc.sp());
        EXPECT(0x2a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0195
        gbc.setState(0xc741, 0xbcca, 0xfb60, 0xa0a9, 0x8386, 0xff19, 0x0, 0x0);
        gbc.writeMem(0xc741, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbcca, gbc.sp());
        EXPECT(0xc742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc741));
        // 65 0196
        gbc.setState(0x79b6, 0xaef8, 0xd7e0, 0x4f07, 0x5f43, 0xd528, 0x0, 0x1);
        gbc.writeMem(0x79b6, { 0x65 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaef8, gbc.sp());
        EXPECT(0x79b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0197
        gbc.setState(0x8d8d, 0xad6c, 0x90d0, 0xeb9b, 0x83e5, 0xf146, 0x0, 0x1);
        gbc.writeMem(0x8d8d, { 0x65 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xad6c, gbc.sp());
        EXPECT(0x8d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8d8d));
        // 65 0198
        gbc.setState(0xef4f, 0xcdc8, 0xc690, 0xa1b6, 0xcf25, 0xdc6, 0x1, 0x1);
        gbc.writeMem(0xef4f, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0xef50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xef4f));
        // 65 0199
        gbc.setState(0x8c00, 0x1494, 0x9660, 0xc299, 0xeb43, 0xb29, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0x65 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1494, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8c00));
        // 65 019A
        gbc.setState(0xeabf, 0x4a5c, 0x8630, 0x7167, 0x1402, 0x3082, 0x0, 0x1);
        gbc.writeMem(0xeabf, { 0x65 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4a5c, gbc.sp());
        EXPECT(0xeac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xeabf));
        // 65 019C
        gbc.setState(0xa6e0, 0x156e, 0x1c10, 0xbb56, 0xe6cb, 0x610e, 0x1, 0x0);
        gbc.writeMem(0xa6e0, { 0x65 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x156e, gbc.sp());
        EXPECT(0xa6e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa6e0));
        // 65 019D
        gbc.setState(0x417a, 0x5cdc, 0xc730, 0xa29f, 0x3e59, 0x9725, 0x1, 0x0);
        gbc.writeMem(0x417a, { 0x65 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5cdc, gbc.sp());
        EXPECT(0x417b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 019E
        gbc.setState(0x5168, 0x9459, 0xc820, 0xedc8, 0x4f97, 0x995b, 0x1, 0x1);
        gbc.writeMem(0x5168, { 0x65 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9459, gbc.sp());
        EXPECT(0x5169, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 019F
        gbc.setState(0x8dbc, 0x6752, 0xa830, 0x7f1e, 0x9707, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x8dbc, { 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6752, gbc.sp());
        EXPECT(0x8dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8dbc));
        // 65 01A0
        gbc.setState(0x9adb, 0xdb15, 0x12b0, 0x3a67, 0x9c84, 0x9065, 0x0, 0x1);
        gbc.writeMem(0x9adb, { 0x65 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xdb15, gbc.sp());
        EXPECT(0x9adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9adb));
        // 65 01A1
        gbc.setState(0x8325, 0xf7f1, 0xb90, 0x877, 0x9424, 0xd0a, 0x1, 0x1);
        gbc.writeMem(0x8325, { 0x65 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf7f1, gbc.sp());
        EXPECT(0x8326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8325));
        // 65 01A2
        gbc.setState(0x84cc, 0x101f, 0x1d20, 0x86f1, 0xc1fb, 0xe5e7, 0x0, 0x1);
        gbc.writeMem(0x84cc, { 0x65 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x101f, gbc.sp());
        EXPECT(0x84cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x84cc));
        // 65 01A5
        gbc.setState(0x1e5f, 0x5f14, 0xe760, 0x701f, 0x6f9a, 0xa39, 0x0, 0x1);
        gbc.writeMem(0x1e5f, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5f14, gbc.sp());
        EXPECT(0x1e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01A6
        gbc.setState(0xc57d, 0x9a99, 0x4930, 0x33dc, 0xf776, 0x496d, 0x1, 0x1);
        gbc.writeMem(0xc57d, { 0x65 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9a99, gbc.sp());
        EXPECT(0xc57e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc57d));
        // 65 01A7
        gbc.setState(0x1123, 0x50d7, 0xcbe0, 0xab77, 0xa8ae, 0xe85e, 0x1, 0x1);
        gbc.writeMem(0x1123, { 0x65 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x50d7, gbc.sp());
        EXPECT(0x1124, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01A8
        gbc.setState(0x46c, 0x2cfa, 0x1920, 0x75a1, 0x6a77, 0x289c, 0x0, 0x1);
        gbc.writeMem(0x46c, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2cfa, gbc.sp());
        EXPECT(0x46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01A9
        gbc.setState(0xad42, 0x6bdd, 0xeea0, 0x9a12, 0xfcbb, 0x1343, 0x0, 0x1);
        gbc.writeMem(0xad42, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6bdd, gbc.sp());
        EXPECT(0xad43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xad42));
        // 65 01AA
        gbc.setState(0x8924, 0x755c, 0x4470, 0x6512, 0x5dfd, 0x9bf9, 0x1, 0x0);
        gbc.writeMem(0x8924, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x755c, gbc.sp());
        EXPECT(0x8925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8924));
        // 65 01AB
        gbc.setState(0xa7be, 0x1f4b, 0x80d0, 0xd72c, 0x90b9, 0xb2, 0x1, 0x1);
        gbc.writeMem(0xa7be, { 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1f4b, gbc.sp());
        EXPECT(0xa7bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa7be));
        // 65 01AC
        gbc.setState(0x2dc8, 0x463a, 0x4220, 0xf28c, 0x4bed, 0x52b4, 0x1, 0x1);
        gbc.writeMem(0x2dc8, { 0x65 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x463a, gbc.sp());
        EXPECT(0x2dc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01AD
        gbc.setState(0x92e8, 0x6ad6, 0xcf20, 0x622c, 0x70a0, 0x5036, 0x0, 0x0);
        gbc.writeMem(0x92e8, { 0x65 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x92e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x92e8));
        // 65 01AE
        gbc.setState(0x6a5d, 0x1c70, 0x1ac0, 0x1968, 0xb70e, 0x4255, 0x1, 0x1);
        gbc.writeMem(0x6a5d, { 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1c70, gbc.sp());
        EXPECT(0x6a5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01AF
        gbc.setState(0xbe6a, 0xaf0d, 0xfa10, 0x809e, 0xfe2c, 0xb974, 0x0, 0x0);
        gbc.writeMem(0xbe6a, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xaf0d, gbc.sp());
        EXPECT(0xbe6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbe6a));
        // 65 01B0
        gbc.setState(0xac4f, 0xa1, 0x14f0, 0x8c34, 0x4877, 0x1c44, 0x0, 0x1);
        gbc.writeMem(0xac4f, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa1, gbc.sp());
        EXPECT(0xac50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xac4f));
        // 65 01B1
        gbc.setState(0x8f4d, 0xa66b, 0xfd70, 0x28ee, 0x5196, 0xbaf8, 0x1, 0x0);
        gbc.writeMem(0x8f4d, { 0x65 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa66b, gbc.sp());
        EXPECT(0x8f4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8f4d));
        // 65 01B2
        gbc.setState(0xca2c, 0x73b4, 0xee30, 0xe23, 0x97a5, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0xca2c, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x73b4, gbc.sp());
        EXPECT(0xca2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xca2c));
        // 65 01B3
        gbc.setState(0x4f59, 0xdbbe, 0x7040, 0xa23a, 0x7513, 0x344d, 0x1, 0x1);
        gbc.writeMem(0x4f59, { 0x65 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xdbbe, gbc.sp());
        EXPECT(0x4f5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01B4
        gbc.setState(0xbc3c, 0x2825, 0xee30, 0x13d9, 0x61f5, 0x5d9b, 0x1, 0x1);
        gbc.writeMem(0xbc3c, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x2825, gbc.sp());
        EXPECT(0xbc3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbc3c));
        // 65 01B5
        gbc.setState(0x17aa, 0xb5b6, 0x1b30, 0xeab4, 0x9be0, 0xdf44, 0x0, 0x1);
        gbc.writeMem(0x17aa, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb5b6, gbc.sp());
        EXPECT(0x17ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01B6
        gbc.setState(0x73ab, 0xa7ed, 0x12f0, 0xd7c3, 0x38e1, 0x20cc, 0x0, 0x1);
        gbc.writeMem(0x73ab, { 0x65 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x73ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01B7
        gbc.setState(0xc070, 0xb257, 0xd0b0, 0x787d, 0x2452, 0x2556, 0x0, 0x1);
        gbc.writeMem(0xc070, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb257, gbc.sp());
        EXPECT(0xc071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc070));
        // 65 01B8
        gbc.setState(0xac10, 0x1eb4, 0x4de0, 0x86f, 0xcc13, 0x6874, 0x0, 0x0);
        gbc.writeMem(0xac10, { 0x65 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1eb4, gbc.sp());
        EXPECT(0xac11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xac10));
        // 65 01B9
        gbc.setState(0x37e, 0x1555, 0xfe20, 0x238c, 0xfa35, 0xd6a6, 0x1, 0x1);
        gbc.writeMem(0x37e, { 0x65 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0x37f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01BB
        gbc.setState(0x3592, 0xf89e, 0xfa10, 0xe992, 0x975f, 0x28b5, 0x1, 0x0);
        gbc.writeMem(0x3592, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf89e, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01BD
        gbc.setState(0x265, 0xff94, 0xdec0, 0xf497, 0xab14, 0xa5ad, 0x1, 0x1);
        gbc.writeMem(0x265, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xff94, gbc.sp());
        EXPECT(0x266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01BE
        gbc.setState(0x533b, 0xa14c, 0x7ec0, 0x8680, 0x2841, 0xed34, 0x0, 0x1);
        gbc.writeMem(0x533b, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa14c, gbc.sp());
        EXPECT(0x533c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01BF
        gbc.setState(0x76e9, 0xd038, 0x83a0, 0x8f02, 0x1fd5, 0xbacd, 0x1, 0x0);
        gbc.writeMem(0x76e9, { 0x65 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd038, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01C1
        gbc.setState(0xd60f, 0xa0e4, 0xfb00, 0x549, 0x62f8, 0xd499, 0x0, 0x1);
        gbc.writeMem(0xd60f, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa0e4, gbc.sp());
        EXPECT(0xd610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd60f));
        // 65 01C2
        gbc.setState(0xee1a, 0xba10, 0xa2d0, 0xfd9b, 0x546d, 0xde37, 0x1, 0x0);
        gbc.writeMem(0xee1a, { 0x65 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xba10, gbc.sp());
        EXPECT(0xee1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xee1a));
        // 65 01C3
        gbc.setState(0xbf64, 0xf44c, 0x9dd0, 0x5409, 0x4315, 0x3258, 0x1, 0x0);
        gbc.writeMem(0xbf64, { 0x65 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xf44c, gbc.sp());
        EXPECT(0xbf65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbf64));
        // 65 01C4
        gbc.setState(0x154f, 0xd834, 0xffa0, 0x862a, 0x47d1, 0xa7c, 0x1, 0x0);
        gbc.writeMem(0x154f, { 0x65 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0x1550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01C5
        gbc.setState(0xea93, 0x9fa7, 0xd7c0, 0x690b, 0x1916, 0x4902, 0x1, 0x1);
        gbc.writeMem(0xea93, { 0x65 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9fa7, gbc.sp());
        EXPECT(0xea94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xea93));
        // 65 01C6
        gbc.setState(0x8855, 0xc0eb, 0xa4a0, 0xce9e, 0x15b2, 0xf0b3, 0x1, 0x0);
        gbc.writeMem(0x8855, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc0eb, gbc.sp());
        EXPECT(0x8856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8855));
        // 65 01C7
        gbc.setState(0x833b, 0x5952, 0x25b0, 0x8031, 0xc1fe, 0xdff6, 0x1, 0x1);
        gbc.writeMem(0x833b, { 0x65 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5952, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x833b));
        // 65 01C9
        gbc.setState(0xae52, 0xaa19, 0xadc0, 0xf1e6, 0xcbc, 0xc00, 0x1, 0x0);
        gbc.writeMem(0xae52, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaa19, gbc.sp());
        EXPECT(0xae53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xae52));
        // 65 01CA
        gbc.setState(0xa04, 0x1aae, 0xe230, 0x96c3, 0x4212, 0x6d1d, 0x1, 0x0);
        gbc.writeMem(0xa04, { 0x65 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1aae, gbc.sp());
        EXPECT(0xa05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01CB
        gbc.setState(0x4fc6, 0x6e11, 0x7fe0, 0x1da8, 0x31df, 0xc68a, 0x0, 0x0);
        gbc.writeMem(0x4fc6, { 0x65 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6e11, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01CC
        gbc.setState(0xaa17, 0xe33b, 0x8330, 0x4e71, 0xa0d3, 0xce92, 0x1, 0x1);
        gbc.writeMem(0xaa17, { 0x65 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe33b, gbc.sp());
        EXPECT(0xaa18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaa17));
        // 65 01CD
        gbc.setState(0x6ad, 0x6f91, 0x2950, 0x81f9, 0xb3aa, 0x3cb5, 0x1, 0x0);
        gbc.writeMem(0x6ad, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x6ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01CE
        gbc.setState(0x8a20, 0x9ddd, 0x1a70, 0xba29, 0x27bd, 0x40e9, 0x1, 0x1);
        gbc.writeMem(0x8a20, { 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0x8a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8a20));
        // 65 01CF
        gbc.setState(0x1b5b, 0x5e9f, 0xbdb0, 0x6db8, 0xd541, 0x7a70, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5e9f, gbc.sp());
        EXPECT(0x1b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01D0
        gbc.setState(0xe208, 0xbe08, 0x38a0, 0x3507, 0xc526, 0xe560, 0x1, 0x1);
        gbc.writeMem(0xe208, { 0x65 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbe08, gbc.sp());
        EXPECT(0xe209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe208));
        // 65 01D2
        gbc.setState(0xb1a9, 0x898e, 0x11a0, 0xbcb5, 0xf84c, 0xbca5, 0x1, 0x1);
        gbc.writeMem(0xb1a9, { 0x65 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x898e, gbc.sp());
        EXPECT(0xb1aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb1a9));
        // 65 01D3
        gbc.setState(0x9949, 0xd4b5, 0xdf0, 0x1c29, 0x5df1, 0x7a87, 0x0, 0x0);
        gbc.writeMem(0x9949, { 0x65 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd4b5, gbc.sp());
        EXPECT(0x994a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9949));
        // 65 01D4
        gbc.setState(0x59be, 0x8b9, 0x6f0, 0x28c1, 0x4528, 0xfb47, 0x1, 0x1);
        gbc.writeMem(0x59be, { 0x65 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0x59bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01D5
        gbc.setState(0x3025, 0x16b4, 0xe380, 0xa959, 0x4458, 0x67dc, 0x0, 0x1);
        gbc.writeMem(0x3025, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x16b4, gbc.sp());
        EXPECT(0x3026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01D6
        gbc.setState(0xd843, 0xb0a9, 0xb50, 0x3c7f, 0xeabc, 0x1eee, 0x1, 0x0);
        gbc.writeMem(0xd843, { 0x65 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb0a9, gbc.sp());
        EXPECT(0xd844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd843));
        // 65 01D7
        gbc.setState(0x7fab, 0x5663, 0xa670, 0x64a9, 0xb481, 0xa4b4, 0x0, 0x0);
        gbc.writeMem(0x7fab, { 0x65 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0x7fac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01D8
        gbc.setState(0x5d14, 0x227c, 0xc1a0, 0x377a, 0x2746, 0xe218, 0x0, 0x0);
        gbc.writeMem(0x5d14, { 0x65 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x227c, gbc.sp());
        EXPECT(0x5d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01D9
        gbc.setState(0x5b49, 0x7c6e, 0x6f80, 0x5c7c, 0x84c2, 0x98a6, 0x0, 0x1);
        gbc.writeMem(0x5b49, { 0x65 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x5b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01DA
        gbc.setState(0x439e, 0x896e, 0xda20, 0x15df, 0xa3d7, 0xe3ed, 0x1, 0x1);
        gbc.writeMem(0x439e, { 0x65 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x896e, gbc.sp());
        EXPECT(0x439f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01DC
        gbc.setState(0xa103, 0x43d1, 0xa2f0, 0x18e0, 0xaab5, 0xe70b, 0x0, 0x1);
        gbc.writeMem(0xa103, { 0x65 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0xa104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa103));
        // 65 01DD
        gbc.setState(0x95ec, 0x6fb3, 0xb300, 0x815b, 0x3f45, 0xc414, 0x1, 0x1);
        gbc.writeMem(0x95ec, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6fb3, gbc.sp());
        EXPECT(0x95ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x95ec));
        // 65 01DE
        gbc.setState(0x90e, 0x880d, 0xc210, 0xaba, 0xfc6e, 0x7f1a, 0x1, 0x1);
        gbc.writeMem(0x90e, { 0x65 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x90f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01DF
        gbc.setState(0xae97, 0x685, 0x5810, 0x382c, 0x8f83, 0x663e, 0x1, 0x0);
        gbc.writeMem(0xae97, { 0x65 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0xae98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xae97));
        // 65 01E0
        gbc.setState(0x2892, 0x2aeb, 0xc4b0, 0x4db6, 0xe005, 0xf0d4, 0x0, 0x0);
        gbc.writeMem(0x2892, { 0x65 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2aeb, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01E1
        gbc.setState(0x72cc, 0x6319, 0x38e0, 0xb8c7, 0x6654, 0xc5fe, 0x1, 0x1);
        gbc.writeMem(0x72cc, { 0x65 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x6319, gbc.sp());
        EXPECT(0x72cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01E2
        gbc.setState(0xe206, 0xd602, 0xd930, 0x7c2a, 0x4c45, 0x84ab, 0x1, 0x1);
        gbc.writeMem(0xe206, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd602, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe206));
        // 65 01E3
        gbc.setState(0x8fd, 0xf00c, 0x2b30, 0xa17c, 0xb161, 0xea73, 0x1, 0x0);
        gbc.writeMem(0x8fd, { 0x65 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf00c, gbc.sp());
        EXPECT(0x8fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01E4
        gbc.setState(0x414a, 0x6be5, 0x8dc0, 0xdea1, 0x344a, 0x5bcd, 0x1, 0x0);
        gbc.writeMem(0x414a, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6be5, gbc.sp());
        EXPECT(0x414b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01E5
        gbc.setState(0xd50, 0xab2d, 0xb3c0, 0x469c, 0xdfeb, 0x6278, 0x0, 0x0);
        gbc.writeMem(0xd50, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xab2d, gbc.sp());
        EXPECT(0xd51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01E6
        gbc.setState(0x3c14, 0xa4f, 0xd9a0, 0x87c7, 0xcb5b, 0x8736, 0x0, 0x0);
        gbc.writeMem(0x3c14, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xa4f, gbc.sp());
        EXPECT(0x3c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01E7
        gbc.setState(0x32b8, 0xe5f9, 0xc690, 0xb060, 0x9e03, 0x7cf0, 0x0, 0x1);
        gbc.writeMem(0x32b8, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe5f9, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01E8
        gbc.setState(0x153d, 0x1eac, 0x3900, 0x6849, 0x6e8b, 0xec7e, 0x1, 0x0);
        gbc.writeMem(0x153d, { 0x65 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1eac, gbc.sp());
        EXPECT(0x153e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01E9
        gbc.setState(0x7720, 0xd62a, 0xee50, 0x1780, 0x598, 0x7d06, 0x0, 0x0);
        gbc.writeMem(0x7720, { 0x65 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd62a, gbc.sp());
        EXPECT(0x7721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01EA
        gbc.setState(0x9595, 0xf9a6, 0x26e0, 0x30a9, 0xb86b, 0x2a26, 0x1, 0x1);
        gbc.writeMem(0x9595, { 0x65 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x9596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9595));
        // 65 01EB
        gbc.setState(0x53da, 0x47f2, 0x4960, 0x9f16, 0x45a8, 0xecc5, 0x1, 0x1);
        gbc.writeMem(0x53da, { 0x65 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x47f2, gbc.sp());
        EXPECT(0x53db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01ED
        gbc.setState(0x1407, 0x3f3f, 0x38b0, 0xbfc8, 0xdf7f, 0xbf54, 0x1, 0x1);
        gbc.writeMem(0x1407, { 0x65 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3f3f, gbc.sp());
        EXPECT(0x1408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01EE
        gbc.setState(0xa322, 0xfa57, 0xf860, 0xea93, 0x480e, 0x7e0c, 0x1, 0x1);
        gbc.writeMem(0xa322, { 0x65 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xfa57, gbc.sp());
        EXPECT(0xa323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa322));
        // 65 01EF
        gbc.setState(0x349c, 0x875f, 0x8ab0, 0xb125, 0x4a40, 0xcc88, 0x1, 0x1);
        gbc.writeMem(0x349c, { 0x65 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x875f, gbc.sp());
        EXPECT(0x349d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01F0
        gbc.setState(0x5e2d, 0x5119, 0xf730, 0xe20a, 0x31f0, 0xdac4, 0x0, 0x1);
        gbc.writeMem(0x5e2d, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5119, gbc.sp());
        EXPECT(0x5e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01F1
        gbc.setState(0x844a, 0xfe66, 0x4ea0, 0x2add, 0x30d, 0x5b43, 0x1, 0x1);
        gbc.writeMem(0x844a, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfe66, gbc.sp());
        EXPECT(0x844b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x844a));
        // 65 01F2
        gbc.setState(0x4ca, 0xe609, 0x1af0, 0x94e1, 0x953, 0x3985, 0x0, 0x0);
        gbc.writeMem(0x4ca, { 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe609, gbc.sp());
        EXPECT(0x4cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01F3
        gbc.setState(0x77c2, 0xd26e, 0x8fa0, 0xfe8d, 0xaad3, 0x3a67, 0x1, 0x0);
        gbc.writeMem(0x77c2, { 0x65 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd26e, gbc.sp());
        EXPECT(0x77c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01F4
        gbc.setState(0xb1b1, 0x99d8, 0xf4b0, 0xb056, 0xa0b9, 0x42e5, 0x1, 0x0);
        gbc.writeMem(0xb1b1, { 0x65 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x99d8, gbc.sp());
        EXPECT(0xb1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb1b1));
        // 65 01F5
        gbc.setState(0x3c76, 0x3e5b, 0xf580, 0x3a1e, 0x2ded, 0x5e68, 0x0, 0x0);
        gbc.writeMem(0x3c76, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3e5b, gbc.sp());
        EXPECT(0x3c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 01F6
        gbc.setState(0x221b, 0x8cef, 0x4eb0, 0x868a, 0x66fd, 0x60b6, 0x1, 0x0);
        gbc.writeMem(0x221b, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8cef, gbc.sp());
        EXPECT(0x221c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01F7
        gbc.setState(0xc094, 0xd7ce, 0xcf00, 0xdb5f, 0x9aa1, 0x5e9c, 0x0, 0x1);
        gbc.writeMem(0xc094, { 0x65 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xd7ce, gbc.sp());
        EXPECT(0xc095, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc094));
        // 65 01F9
        gbc.setState(0x13d5, 0xd4d4, 0x8dd0, 0xadcd, 0xb784, 0xaf2e, 0x0, 0x0);
        gbc.writeMem(0x13d5, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xd4d4, gbc.sp());
        EXPECT(0x13d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01FA
        gbc.setState(0xa815, 0xc439, 0xa1f0, 0x547a, 0x136e, 0x5b34, 0x1, 0x1);
        gbc.writeMem(0xa815, { 0x65 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa815));
        // 65 01FB
        gbc.setState(0xe1f, 0xacd9, 0x84b0, 0x9feb, 0xe55e, 0xa718, 0x0, 0x1);
        gbc.writeMem(0xe1f, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xacd9, gbc.sp());
        EXPECT(0xe20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01FC
        gbc.setState(0x6338, 0x9665, 0x96f0, 0xa183, 0xdb81, 0x2b8e, 0x1, 0x1);
        gbc.writeMem(0x6338, { 0x65 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9665, gbc.sp());
        EXPECT(0x6339, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01FD
        gbc.setState(0x7796, 0xbbd1, 0x6970, 0xf62c, 0x49fc, 0xad28, 0x0, 0x0);
        gbc.writeMem(0x7796, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbbd1, gbc.sp());
        EXPECT(0x7797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 01FE
        gbc.setState(0xdaa2, 0x3404, 0xfe60, 0x95b2, 0x487, 0x9eed, 0x0, 0x0);
        gbc.writeMem(0xdaa2, { 0x65 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x3404, gbc.sp());
        EXPECT(0xdaa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdaa2));
        // 65 01FF
        gbc.setState(0xa699, 0x88dd, 0xe30, 0xbdc2, 0x50e4, 0x932c, 0x0, 0x1);
        gbc.writeMem(0xa699, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0xa69a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa699));
        // 65 0200
        gbc.setState(0x9f1f, 0xea94, 0x8e00, 0x839a, 0x6c1, 0x1a15, 0x0, 0x1);
        gbc.writeMem(0x9f1f, { 0x65 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xea94, gbc.sp());
        EXPECT(0x9f20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9f1f));
        // 65 0201
        gbc.setState(0x8ca3, 0x62e0, 0x65b0, 0xf51f, 0x8597, 0x87d4, 0x0, 0x1);
        gbc.writeMem(0x8ca3, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x62e0, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8ca3));
        // 65 0202
        gbc.setState(0x103c, 0x9ab9, 0xefb0, 0x52ee, 0x7e6b, 0xa5ce, 0x0, 0x0);
        gbc.writeMem(0x103c, { 0x65 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9ab9, gbc.sp());
        EXPECT(0x103d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0203
        gbc.setState(0xe2c2, 0xa566, 0x8260, 0x6bb1, 0xdb6d, 0x35fe, 0x1, 0x1);
        gbc.writeMem(0xe2c2, { 0x65 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa566, gbc.sp());
        EXPECT(0xe2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe2c2));
        // 65 0204
        gbc.setState(0x8dfa, 0xd326, 0xff40, 0xbebc, 0xbc09, 0x41db, 0x0, 0x1);
        gbc.writeMem(0x8dfa, { 0x65 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd326, gbc.sp());
        EXPECT(0x8dfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8dfa));
        // 65 0205
        gbc.setState(0xd9d0, 0x4354, 0x2330, 0x49fe, 0x6193, 0x809f, 0x0, 0x0);
        gbc.writeMem(0xd9d0, { 0x65 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4354, gbc.sp());
        EXPECT(0xd9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd9d0));
        // 65 0206
        gbc.setState(0xd86c, 0x1131, 0x6d60, 0x9ff6, 0x637f, 0x862a, 0x0, 0x1);
        gbc.writeMem(0xd86c, { 0x65 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0xd86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd86c));
        // 65 0207
        gbc.setState(0xa1c2, 0x97de, 0x4ef0, 0x8560, 0x6906, 0xdb70, 0x0, 0x1);
        gbc.writeMem(0xa1c2, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0xa1c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa1c2));
        // 65 0208
        gbc.setState(0x30b2, 0xf98e, 0xac0, 0xe6ae, 0xe159, 0x41c9, 0x0, 0x1);
        gbc.writeMem(0x30b2, { 0x65 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf98e, gbc.sp());
        EXPECT(0x30b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0209
        gbc.setState(0x9886, 0xc23d, 0x2ab0, 0x2d06, 0xcf08, 0x1e44, 0x0, 0x1);
        gbc.writeMem(0x9886, { 0x65 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xc23d, gbc.sp());
        EXPECT(0x9887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9886));
        // 65 020A
        gbc.setState(0x6c77, 0x849b, 0xdf20, 0x7230, 0x91b1, 0x17f7, 0x0, 0x1);
        gbc.writeMem(0x6c77, { 0x65 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x849b, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 020B
        gbc.setState(0x51c8, 0xeb6a, 0xb610, 0x834a, 0x1489, 0x2a60, 0x0, 0x1);
        gbc.writeMem(0x51c8, { 0x65 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xeb6a, gbc.sp());
        EXPECT(0x51c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 020C
        gbc.setState(0x8d39, 0x1ec0, 0x35e0, 0xf294, 0x4243, 0xdb79, 0x1, 0x1);
        gbc.writeMem(0x8d39, { 0x65 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x1ec0, gbc.sp());
        EXPECT(0x8d3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8d39));
        // 65 020D
        gbc.setState(0xef43, 0xc488, 0x48f0, 0x6c49, 0xc47d, 0x20a6, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc488, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xef43));
        // 65 020E
        gbc.setState(0x8f85, 0xd08a, 0x1920, 0x7ee0, 0xcabb, 0x45fb, 0x0, 0x1);
        gbc.writeMem(0x8f85, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd08a, gbc.sp());
        EXPECT(0x8f86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8f85));
        // 65 020F
        gbc.setState(0xaae4, 0x6cdb, 0x3fc0, 0x4513, 0x8c90, 0x81f3, 0x0, 0x0);
        gbc.writeMem(0xaae4, { 0x65 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6cdb, gbc.sp());
        EXPECT(0xaae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaae4));
        // 65 0210
        gbc.setState(0x24be, 0xca62, 0x2910, 0xb259, 0xa004, 0x2188, 0x0, 0x1);
        gbc.writeMem(0x24be, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xca62, gbc.sp());
        EXPECT(0x24bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0211
        gbc.setState(0xa24c, 0x13c, 0xbd00, 0x5aba, 0xabb7, 0xfeec, 0x0, 0x1);
        gbc.writeMem(0xa24c, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x13c, gbc.sp());
        EXPECT(0xa24d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa24c));
        // 65 0212
        gbc.setState(0x9f44, 0xd0e9, 0x6b90, 0xbeea, 0xa91a, 0xf27d, 0x0, 0x0);
        gbc.writeMem(0x9f44, { 0x65 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd0e9, gbc.sp());
        EXPECT(0x9f45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9f44));
        // 65 0213
        gbc.setState(0x6351, 0x1434, 0xb980, 0x2052, 0xc003, 0xadfc, 0x0, 0x0);
        gbc.writeMem(0x6351, { 0x65 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1434, gbc.sp());
        EXPECT(0x6352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0214
        gbc.setState(0xc623, 0x4d75, 0x4c00, 0x9171, 0x493a, 0x2480, 0x1, 0x0);
        gbc.writeMem(0xc623, { 0x65 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4d75, gbc.sp());
        EXPECT(0xc624, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc623));
        // 65 0215
        gbc.setState(0xddb9, 0xbb32, 0x5ae0, 0xcfcb, 0xfedf, 0x5b7f, 0x0, 0x0);
        gbc.writeMem(0xddb9, { 0x65 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbb32, gbc.sp());
        EXPECT(0xddba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xddb9));
        // 65 0216
        gbc.setState(0xc4ba, 0xe6c8, 0x1b90, 0xa8ba, 0x2e44, 0xd657, 0x1, 0x1);
        gbc.writeMem(0xc4ba, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe6c8, gbc.sp());
        EXPECT(0xc4bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc4ba));
        // 65 0217
        gbc.setState(0x2568, 0xa16d, 0xd260, 0x2943, 0xc54a, 0xdfaa, 0x1, 0x1);
        gbc.writeMem(0x2568, { 0x65 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xa16d, gbc.sp());
        EXPECT(0x2569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0218
        gbc.setState(0x7a75, 0x34c1, 0xdfe0, 0xa003, 0x2784, 0x44fa, 0x1, 0x0);
        gbc.writeMem(0x7a75, { 0x65 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x34c1, gbc.sp());
        EXPECT(0x7a76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0219
        gbc.setState(0x94ab, 0x9b08, 0xa1f0, 0x83a8, 0xf760, 0x3c07, 0x0, 0x0);
        gbc.writeMem(0x94ab, { 0x65 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9b08, gbc.sp());
        EXPECT(0x94ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x94ab));
        // 65 021A
        gbc.setState(0x1c8d, 0xad38, 0x4120, 0x6ccd, 0xfaa3, 0x3f75, 0x1, 0x1);
        gbc.writeMem(0x1c8d, { 0x65 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xad38, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 021B
        gbc.setState(0x1ad2, 0xf9a6, 0x8c80, 0xe5f6, 0x97bb, 0xd915, 0x1, 0x1);
        gbc.writeMem(0x1ad2, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf9a6, gbc.sp());
        EXPECT(0x1ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 021C
        gbc.setState(0xb2b3, 0x5be8, 0x6220, 0x7c60, 0x95a5, 0x89f1, 0x1, 0x0);
        gbc.writeMem(0xb2b3, { 0x65 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5be8, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb2b3));
        // 65 021D
        gbc.setState(0x40d, 0x5e39, 0x1730, 0x89eb, 0x7c4, 0x25cd, 0x0, 0x0);
        gbc.writeMem(0x40d, { 0x65 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x5e39, gbc.sp());
        EXPECT(0x40e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 021F
        gbc.setState(0x9c09, 0x8ba, 0x8be0, 0xd893, 0x35fe, 0x6ee7, 0x0, 0x0);
        gbc.writeMem(0x9c09, { 0x65 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x9c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9c09));
        // 65 0220
        gbc.setState(0xdb3b, 0x9c50, 0x8910, 0x3cbe, 0x9143, 0x1e00, 0x1, 0x1);
        gbc.writeMem(0xdb3b, { 0x65 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9c50, gbc.sp());
        EXPECT(0xdb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdb3b));
        // 65 0221
        gbc.setState(0x8b67, 0x48d, 0xf100, 0x6d2a, 0x2308, 0x6e71, 0x0, 0x1);
        gbc.writeMem(0x8b67, { 0x65 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x48d, gbc.sp());
        EXPECT(0x8b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8b67));
        // 65 0222
        gbc.setState(0x5d53, 0x2def, 0xed10, 0xa1d7, 0xd8e9, 0xd04, 0x1, 0x1);
        gbc.writeMem(0x5d53, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2def, gbc.sp());
        EXPECT(0x5d54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0223
        gbc.setState(0xbff6, 0x2264, 0xac90, 0xc6d5, 0xb94f, 0xaa9, 0x0, 0x0);
        gbc.writeMem(0xbff6, { 0x65 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2264, gbc.sp());
        EXPECT(0xbff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbff6));
        // 65 0224
        gbc.setState(0xdad1, 0x9f86, 0x4d10, 0xc86b, 0xa3ad, 0x2b67, 0x1, 0x1);
        gbc.writeMem(0xdad1, { 0x65 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9f86, gbc.sp());
        EXPECT(0xdad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdad1));
        // 65 0225
        gbc.setState(0x9009, 0x58c8, 0x8c20, 0x27ed, 0x11b3, 0x35b8, 0x0, 0x1);
        gbc.writeMem(0x9009, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x58c8, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9009));
        // 65 0226
        gbc.setState(0xd084, 0x8f5f, 0x7a60, 0xa862, 0xb5d8, 0xba1, 0x1, 0x1);
        gbc.writeMem(0xd084, { 0x65 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8f5f, gbc.sp());
        EXPECT(0xd085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd084));
        // 65 0227
        gbc.setState(0xe2e1, 0x55f0, 0xe3e0, 0xae83, 0x4efc, 0x5053, 0x1, 0x0);
        gbc.writeMem(0xe2e1, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x55f0, gbc.sp());
        EXPECT(0xe2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe2e1));
        // 65 0228
        gbc.setState(0x6176, 0xcee8, 0x8d80, 0xcc09, 0xdbe2, 0x89de, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcee8, gbc.sp());
        EXPECT(0x6177, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0229
        gbc.setState(0x3610, 0xf59b, 0x9390, 0x1ca, 0xf888, 0x20d9, 0x1, 0x1);
        gbc.writeMem(0x3610, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf59b, gbc.sp());
        EXPECT(0x3611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 022A
        gbc.setState(0xe540, 0x99e6, 0xd330, 0xeb08, 0xb678, 0xac36, 0x1, 0x1);
        gbc.writeMem(0xe540, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x99e6, gbc.sp());
        EXPECT(0xe541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe540));
        // 65 022B
        gbc.setState(0x96b5, 0xce29, 0x2e90, 0x14bf, 0xbe5, 0x2c92, 0x1, 0x1);
        gbc.writeMem(0x96b5, { 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xce29, gbc.sp());
        EXPECT(0x96b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x96b5));
        // 65 022C
        gbc.setState(0x49ca, 0x9715, 0x6300, 0xcf1, 0xf504, 0x654a, 0x0, 0x1);
        gbc.writeMem(0x49ca, { 0x65 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9715, gbc.sp());
        EXPECT(0x49cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 022D
        gbc.setState(0x1a48, 0xb3bc, 0xd850, 0xbefa, 0x7b71, 0xcd6d, 0x0, 0x1);
        gbc.writeMem(0x1a48, { 0x65 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb3bc, gbc.sp());
        EXPECT(0x1a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 022E
        gbc.setState(0x8729, 0x67f6, 0xc330, 0x585a, 0xe533, 0x35f4, 0x1, 0x1);
        gbc.writeMem(0x8729, { 0x65 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8729));
        // 65 022F
        gbc.setState(0xb3b, 0x57e9, 0x5c60, 0x8ee4, 0x80be, 0x3a68, 0x1, 0x1);
        gbc.writeMem(0xb3b, { 0x65 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0xb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0230
        gbc.setState(0x109d, 0x902f, 0x2040, 0xdacb, 0x4693, 0x3840, 0x0, 0x1);
        gbc.writeMem(0x109d, { 0x65 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0x109e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0231
        gbc.setState(0x7b89, 0xacd6, 0x9b20, 0x8eb, 0x2a81, 0x406a, 0x1, 0x0);
        gbc.writeMem(0x7b89, { 0x65 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xacd6, gbc.sp());
        EXPECT(0x7b8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0232
        gbc.setState(0xd6f3, 0x9b30, 0xaa80, 0x7523, 0x4445, 0xfc3f, 0x1, 0x0);
        gbc.writeMem(0xd6f3, { 0x65 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9b30, gbc.sp());
        EXPECT(0xd6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd6f3));
        // 65 0233
        gbc.setState(0xa267, 0xa532, 0x12f0, 0x92c, 0x1a65, 0xe483, 0x0, 0x0);
        gbc.writeMem(0xa267, { 0x65 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xa532, gbc.sp());
        EXPECT(0xa268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa267));
        // 65 0234
        gbc.setState(0x1a6f, 0x8312, 0xb690, 0x67a0, 0x4cc2, 0xbc37, 0x0, 0x1);
        gbc.writeMem(0x1a6f, { 0x65 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8312, gbc.sp());
        EXPECT(0x1a70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0235
        gbc.setState(0x76ee, 0x1828, 0x4970, 0xc63, 0x9a67, 0x2dd5, 0x0, 0x1);
        gbc.writeMem(0x76ee, { 0x65 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x1828, gbc.sp());
        EXPECT(0x76ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0236
        gbc.setState(0x647, 0xb8b, 0xc980, 0x5bb6, 0x2cbc, 0x5a22, 0x1, 0x1);
        gbc.writeMem(0x647, { 0x65 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb8b, gbc.sp());
        EXPECT(0x648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0237
        gbc.setState(0xc651, 0x325, 0xf790, 0xc480, 0x5586, 0x6414, 0x0, 0x1);
        gbc.writeMem(0xc651, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x325, gbc.sp());
        EXPECT(0xc652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc651));
        // 65 0238
        gbc.setState(0x9f29, 0xc80c, 0x2960, 0xe43a, 0xeaa1, 0x3ab4, 0x0, 0x1);
        gbc.writeMem(0x9f29, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc80c, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9f29));
        // 65 0239
        gbc.setState(0x656, 0xd01f, 0x140, 0x6133, 0xfd79, 0xa1ff, 0x0, 0x1);
        gbc.writeMem(0x656, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xd01f, gbc.sp());
        EXPECT(0x657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 023A
        gbc.setState(0xa803, 0x2cd7, 0xe670, 0x2b96, 0x9531, 0xf04c, 0x0, 0x0);
        gbc.writeMem(0xa803, { 0x65 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2cd7, gbc.sp());
        EXPECT(0xa804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa803));
        // 65 023B
        gbc.setState(0x669d, 0xab1d, 0x28d0, 0x67a2, 0xfac, 0x51d6, 0x1, 0x0);
        gbc.writeMem(0x669d, { 0x65 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xab1d, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 023C
        gbc.setState(0x326b, 0x6914, 0xf980, 0xbdd1, 0xa1ed, 0xcb59, 0x0, 0x1);
        gbc.writeMem(0x326b, { 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6914, gbc.sp());
        EXPECT(0x326c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 023D
        gbc.setState(0xbaa0, 0x31cb, 0xea70, 0x4a28, 0x34a4, 0xb1b6, 0x0, 0x0);
        gbc.writeMem(0xbaa0, { 0x65 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x31cb, gbc.sp());
        EXPECT(0xbaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbaa0));
        // 65 023E
        gbc.setState(0x5684, 0x8de4, 0xe3e0, 0x2a12, 0xf771, 0xa946, 0x1, 0x0);
        gbc.writeMem(0x5684, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8de4, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 023F
        gbc.setState(0xbc79, 0x535f, 0xabf0, 0xea5c, 0x90a4, 0xeb09, 0x1, 0x0);
        gbc.writeMem(0xbc79, { 0x65 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x535f, gbc.sp());
        EXPECT(0xbc7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbc79));
        // 65 0240
        gbc.setState(0xb341, 0xd567, 0xde10, 0xe11, 0xaa02, 0xe4ec, 0x0, 0x1);
        gbc.writeMem(0xb341, { 0x65 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd567, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb341));
        // 65 0241
        gbc.setState(0x6fe5, 0x9e69, 0x8f90, 0x7181, 0x9898, 0x487a, 0x0, 0x0);
        gbc.writeMem(0x6fe5, { 0x65 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x6fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0242
        gbc.setState(0x6c2a, 0xce68, 0xcfa0, 0x7a96, 0x9b3b, 0xb3a4, 0x0, 0x1);
        gbc.writeMem(0x6c2a, { 0x65 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xce68, gbc.sp());
        EXPECT(0x6c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0243
        gbc.setState(0x566e, 0x7aab, 0xec0, 0x35e, 0x7989, 0x7385, 0x1, 0x1);
        gbc.writeMem(0x566e, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7aab, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0244
        gbc.setState(0xb444, 0x52a1, 0xf7e0, 0x444, 0x2731, 0xd3b0, 0x1, 0x1);
        gbc.writeMem(0xb444, { 0x65 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x52a1, gbc.sp());
        EXPECT(0xb445, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb444));
        // 65 0245
        gbc.setState(0x7835, 0x106c, 0x87c0, 0x2638, 0xa554, 0x32ec, 0x0, 0x0);
        gbc.writeMem(0x7835, { 0x65 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x106c, gbc.sp());
        EXPECT(0x7836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0246
        gbc.setState(0xa8d5, 0xd6a8, 0x3960, 0x6483, 0x7e3f, 0x5077, 0x0, 0x1);
        gbc.writeMem(0xa8d5, { 0x65 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd6a8, gbc.sp());
        EXPECT(0xa8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa8d5));
        // 65 0247
        gbc.setState(0xb5b7, 0xd554, 0x3d50, 0x1199, 0xb46b, 0x6b4c, 0x0, 0x1);
        gbc.writeMem(0xb5b7, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd554, gbc.sp());
        EXPECT(0xb5b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb5b7));
        // 65 0248
        gbc.setState(0x8ce3, 0xab4f, 0x9040, 0x3b11, 0xe72b, 0x50cd, 0x0, 0x1);
        gbc.writeMem(0x8ce3, { 0x65 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xab4f, gbc.sp());
        EXPECT(0x8ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8ce3));
        // 65 0249
        gbc.setState(0x5954, 0xfc38, 0x4ef0, 0x91f6, 0x8bce, 0x951b, 0x0, 0x1);
        gbc.writeMem(0x5954, { 0x65 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfc38, gbc.sp());
        EXPECT(0x5955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 024A
        gbc.setState(0xe156, 0x9849, 0x250, 0x1a10, 0x38a, 0x966e, 0x0, 0x1);
        gbc.writeMem(0xe156, { 0x65 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0xe157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe156));
        // 65 024B
        gbc.setState(0x41cd, 0xcd74, 0xede0, 0x1b7d, 0xfa84, 0x8b93, 0x0, 0x0);
        gbc.writeMem(0x41cd, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcd74, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 024C
        gbc.setState(0x81c6, 0x8d88, 0x740, 0xe520, 0x3f94, 0xcb0c, 0x0, 0x1);
        gbc.writeMem(0x81c6, { 0x65 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8d88, gbc.sp());
        EXPECT(0x81c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x81c6));
        // 65 024D
        gbc.setState(0x8334, 0x3612, 0xa8a0, 0xb4f8, 0x9f5, 0x8d1e, 0x1, 0x0);
        gbc.writeMem(0x8334, { 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3612, gbc.sp());
        EXPECT(0x8335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8334));
        // 65 024F
        gbc.setState(0x3ebb, 0x2389, 0xfb40, 0x217e, 0xd88a, 0x1556, 0x1, 0x1);
        gbc.writeMem(0x3ebb, { 0x65 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2389, gbc.sp());
        EXPECT(0x3ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0250
        gbc.setState(0x62be, 0xcb4e, 0xfc40, 0xfe5a, 0xd092, 0xdef3, 0x1, 0x0);
        gbc.writeMem(0x62be, { 0x65 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0x62bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0251
        gbc.setState(0x48e1, 0x2980, 0x5310, 0x71c6, 0x3fbe, 0x75d1, 0x0, 0x1);
        gbc.writeMem(0x48e1, { 0x65 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0252
        gbc.setState(0x84f, 0xb9b6, 0x3210, 0x46cd, 0x55c, 0xcecd, 0x1, 0x1);
        gbc.writeMem(0x84f, { 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb9b6, gbc.sp());
        EXPECT(0x850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0253
        gbc.setState(0xea68, 0xcdbc, 0x5300, 0xac72, 0x3ba2, 0x8986, 0x1, 0x1);
        gbc.writeMem(0xea68, { 0x65 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcdbc, gbc.sp());
        EXPECT(0xea69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xea68));
        // 65 0254
        gbc.setState(0xe117, 0x50f8, 0xc0, 0x98ac, 0x47ee, 0xbec3, 0x1, 0x1);
        gbc.writeMem(0xe117, { 0x65 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x50f8, gbc.sp());
        EXPECT(0xe118, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe117));
        // 65 0255
        gbc.setState(0x2f1b, 0xe95d, 0x95b0, 0x567e, 0xd231, 0xeb87, 0x1, 0x0);
        gbc.writeMem(0x2f1b, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe95d, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0256
        gbc.setState(0xc382, 0xb9d2, 0x8b0, 0x6576, 0x7a03, 0xc656, 0x0, 0x1);
        gbc.writeMem(0xc382, { 0x65 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb9d2, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc382));
        // 65 0257
        gbc.setState(0x7dc, 0x58af, 0xe50, 0x5b43, 0xf9f9, 0xef8b, 0x1, 0x1);
        gbc.writeMem(0x7dc, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x58af, gbc.sp());
        EXPECT(0x7dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0258
        gbc.setState(0x315d, 0x850e, 0x56e0, 0x8093, 0x7cfe, 0xcedf, 0x1, 0x0);
        gbc.writeMem(0x315d, { 0x65 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x850e, gbc.sp());
        EXPECT(0x315e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0259
        gbc.setState(0x4f07, 0x54f5, 0xe70, 0x59c0, 0x6fae, 0x41dc, 0x1, 0x0);
        gbc.writeMem(0x4f07, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0x4f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 025A
        gbc.setState(0xddc3, 0x17d, 0x6130, 0x7834, 0x1cdc, 0xf1b2, 0x0, 0x0);
        gbc.writeMem(0xddc3, { 0x65 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x17d, gbc.sp());
        EXPECT(0xddc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xddc3));
        // 65 025B
        gbc.setState(0xced9, 0x5edc, 0xa4b0, 0x8989, 0xe71e, 0xa310, 0x1, 0x1);
        gbc.writeMem(0xced9, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x5edc, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xced9));
        // 65 025C
        gbc.setState(0xebf2, 0x71c6, 0x990, 0x68a9, 0xb51c, 0x4829, 0x1, 0x0);
        gbc.writeMem(0xebf2, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71c6, gbc.sp());
        EXPECT(0xebf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xebf2));
        // 65 025D
        gbc.setState(0x88a, 0x53d0, 0xaeb0, 0xac83, 0xc38c, 0x7871, 0x1, 0x0);
        gbc.writeMem(0x88a, { 0x65 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x53d0, gbc.sp());
        EXPECT(0x88b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 025E
        gbc.setState(0x7f1d, 0x7f03, 0xeb30, 0x1772, 0x60e8, 0x7d7, 0x1, 0x0);
        gbc.writeMem(0x7f1d, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x7f03, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 025F
        gbc.setState(0x4b65, 0xe57, 0xf910, 0x505b, 0xfba8, 0xacf5, 0x0, 0x1);
        gbc.writeMem(0x4b65, { 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe57, gbc.sp());
        EXPECT(0x4b66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0260
        gbc.setState(0x7edd, 0xbfe, 0x9e50, 0x5311, 0xcaf1, 0x5760, 0x0, 0x1);
        gbc.writeMem(0x7edd, { 0x65 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbfe, gbc.sp());
        EXPECT(0x7ede, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0261
        gbc.setState(0xab8f, 0xf4b5, 0x2cd0, 0xb688, 0x21f4, 0x557c, 0x0, 0x1);
        gbc.writeMem(0xab8f, { 0x65 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf4b5, gbc.sp());
        EXPECT(0xab90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xab8f));
        // 65 0262
        gbc.setState(0x23d3, 0xc5de, 0x39e0, 0xf8f4, 0x6cce, 0x3afa, 0x0, 0x1);
        gbc.writeMem(0x23d3, { 0x65 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc5de, gbc.sp());
        EXPECT(0x23d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0263
        gbc.setState(0xad3b, 0x383e, 0xb200, 0x7ffb, 0x21d3, 0x610e, 0x0, 0x0);
        gbc.writeMem(0xad3b, { 0x65 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x383e, gbc.sp());
        EXPECT(0xad3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xad3b));
        // 65 0264
        gbc.setState(0x9734, 0x5de9, 0x2dc0, 0xe107, 0x2f4c, 0x5b89, 0x0, 0x1);
        gbc.writeMem(0x9734, { 0x65 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5de9, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9734));
        // 65 0265
        gbc.setState(0xa4a9, 0xe700, 0xc6d0, 0x2e97, 0x581c, 0x6f5, 0x1, 0x1);
        gbc.writeMem(0xa4a9, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe700, gbc.sp());
        EXPECT(0xa4aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa4a9));
        // 65 0266
        gbc.setState(0x3a4d, 0x55bc, 0x74e0, 0x5456, 0xc4ef, 0x49bd, 0x1, 0x1);
        gbc.writeMem(0x3a4d, { 0x65 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x55bc, gbc.sp());
        EXPECT(0x3a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0267
        gbc.setState(0x3e74, 0x1f1d, 0x5c60, 0xb356, 0xcf03, 0xba04, 0x0, 0x0);
        gbc.writeMem(0x3e74, { 0x65 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1f1d, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0268
        gbc.setState(0x5a58, 0x2925, 0x19a0, 0xba68, 0xa258, 0x77a1, 0x1, 0x0);
        gbc.writeMem(0x5a58, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2925, gbc.sp());
        EXPECT(0x5a59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0269
        gbc.setState(0xe588, 0xbbbe, 0x64d0, 0xc538, 0x78, 0xb3b3, 0x0, 0x1);
        gbc.writeMem(0xe588, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbbbe, gbc.sp());
        EXPECT(0xe589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe588));
        // 65 026A
        gbc.setState(0x4f7f, 0xee3c, 0xbb50, 0x11c2, 0x7df4, 0x4e9f, 0x1, 0x1);
        gbc.writeMem(0x4f7f, { 0x65 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xee3c, gbc.sp());
        EXPECT(0x4f80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 026B
        gbc.setState(0xb2a7, 0xf3d3, 0xb050, 0x3600, 0x43db, 0xae99, 0x1, 0x1);
        gbc.writeMem(0xb2a7, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf3d3, gbc.sp());
        EXPECT(0xb2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb2a7));
        // 65 026C
        gbc.setState(0x3483, 0x95de, 0xa2b0, 0xdf90, 0x9d6f, 0x38d3, 0x0, 0x1);
        gbc.writeMem(0x3483, { 0x65 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x95de, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 026D
        gbc.setState(0x14d9, 0x4406, 0x7650, 0x2c3f, 0xff19, 0x37ac, 0x0, 0x0);
        gbc.writeMem(0x14d9, { 0x65 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4406, gbc.sp());
        EXPECT(0x14da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 026E
        gbc.setState(0x16e2, 0x1357, 0x1940, 0x7917, 0xee18, 0x6e09, 0x1, 0x0);
        gbc.writeMem(0x16e2, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1357, gbc.sp());
        EXPECT(0x16e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 026F
        gbc.setState(0x770f, 0xdc06, 0xd190, 0x68f1, 0x5bee, 0xdbf7, 0x1, 0x1);
        gbc.writeMem(0x770f, { 0x65 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdc06, gbc.sp());
        EXPECT(0x7710, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0270
        gbc.setState(0x992b, 0x469a, 0xb090, 0xfd69, 0xc5ec, 0x487, 0x1, 0x0);
        gbc.writeMem(0x992b, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x469a, gbc.sp());
        EXPECT(0x992c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x992b));
        // 65 0271
        gbc.setState(0x72b4, 0x4e13, 0x8730, 0x5219, 0x9607, 0xbd4, 0x0, 0x0);
        gbc.writeMem(0x72b4, { 0x65 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e13, gbc.sp());
        EXPECT(0x72b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0272
        gbc.setState(0x28d0, 0xbe41, 0x5410, 0x9ecd, 0x9821, 0xdf0a, 0x1, 0x1);
        gbc.writeMem(0x28d0, { 0x65 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbe41, gbc.sp());
        EXPECT(0x28d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0273
        gbc.setState(0xaae6, 0xf2a7, 0xd220, 0x8202, 0x46a9, 0x1cf4, 0x0, 0x1);
        gbc.writeMem(0xaae6, { 0x65 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf2a7, gbc.sp());
        EXPECT(0xaae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaae6));
        // 65 0274
        gbc.setState(0x13e, 0xd81a, 0xc8f0, 0x88a8, 0xfc4c, 0x7d9b, 0x1, 0x0);
        gbc.writeMem(0x13e, { 0x65 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd81a, gbc.sp());
        EXPECT(0x13f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0275
        gbc.setState(0x10b4, 0x1e3a, 0xb300, 0xc79b, 0x8edc, 0xfdec, 0x0, 0x1);
        gbc.writeMem(0x10b4, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1e3a, gbc.sp());
        EXPECT(0x10b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0276
        gbc.setState(0x9d1, 0xe5a, 0x4720, 0x88ec, 0x4157, 0x5dbf, 0x0, 0x0);
        gbc.writeMem(0x9d1, { 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe5a, gbc.sp());
        EXPECT(0x9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0277
        gbc.setState(0x728b, 0x41f4, 0x2780, 0x3935, 0x9af2, 0xe9a4, 0x0, 0x0);
        gbc.writeMem(0x728b, { 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x41f4, gbc.sp());
        EXPECT(0x728c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0278
        gbc.setState(0xb213, 0x7ef6, 0x17c0, 0xff98, 0x281c, 0xa866, 0x1, 0x0);
        gbc.writeMem(0xb213, { 0x65 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7ef6, gbc.sp());
        EXPECT(0xb214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb213));
        // 65 0279
        gbc.setState(0xa586, 0x4cb3, 0x7b00, 0x582d, 0x7bad, 0x5c3e, 0x1, 0x0);
        gbc.writeMem(0xa586, { 0x65 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4cb3, gbc.sp());
        EXPECT(0xa587, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa586));
        // 65 027A
        gbc.setState(0x73a, 0x8c29, 0x3f00, 0xcdaf, 0x64cd, 0xea16, 0x1, 0x0);
        gbc.writeMem(0x73a, { 0x65 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8c29, gbc.sp());
        EXPECT(0x73b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 027B
        gbc.setState(0x2679, 0xc012, 0x91e0, 0xfe9b, 0x314e, 0xe70e, 0x1, 0x0);
        gbc.writeMem(0x2679, { 0x65 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc012, gbc.sp());
        EXPECT(0x267a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 027C
        gbc.setState(0xc471, 0x3a53, 0x5ee0, 0x59b7, 0x4dcf, 0xc5c7, 0x0, 0x1);
        gbc.writeMem(0xc471, { 0x65 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3a53, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc471));
        // 65 027D
        gbc.setState(0x1249, 0x7591, 0x14f0, 0xf53d, 0x9c6, 0xe047, 0x0, 0x1);
        gbc.writeMem(0x1249, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7591, gbc.sp());
        EXPECT(0x124a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 027F
        gbc.setState(0x7e83, 0x7859, 0x9d00, 0x9dcc, 0xe14d, 0x591c, 0x1, 0x0);
        gbc.writeMem(0x7e83, { 0x65 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7859, gbc.sp());
        EXPECT(0x7e84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0280
        gbc.setState(0xdb7a, 0xfe2f, 0x9d60, 0x313, 0x6171, 0x4b76, 0x1, 0x1);
        gbc.writeMem(0xdb7a, { 0x65 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfe2f, gbc.sp());
        EXPECT(0xdb7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdb7a));
        // 65 0281
        gbc.setState(0x3463, 0x269, 0xc440, 0x6070, 0xa6bd, 0x79ab, 0x0, 0x0);
        gbc.writeMem(0x3463, { 0x65 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x269, gbc.sp());
        EXPECT(0x3464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0282
        gbc.setState(0x673e, 0xe3e, 0xa4a0, 0x3e54, 0x8e33, 0xbfd2, 0x1, 0x1);
        gbc.writeMem(0x673e, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xe3e, gbc.sp());
        EXPECT(0x673f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0283
        gbc.setState(0x8c8f, 0x3f58, 0xd970, 0x36d2, 0x2e69, 0xad40, 0x0, 0x0);
        gbc.writeMem(0x8c8f, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3f58, gbc.sp());
        EXPECT(0x8c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8c8f));
        // 65 0284
        gbc.setState(0xb034, 0x158c, 0x3180, 0x8fc8, 0xcc5c, 0xdb75, 0x0, 0x0);
        gbc.writeMem(0xb034, { 0x65 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x158c, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb034));
        // 65 0285
        gbc.setState(0x462e, 0xb434, 0x920, 0xf816, 0x320d, 0x9880, 0x0, 0x1);
        gbc.writeMem(0x462e, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb434, gbc.sp());
        EXPECT(0x462f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0287
        gbc.setState(0x2ec1, 0xeac2, 0xb180, 0x7ae5, 0xf999, 0x4947, 0x1, 0x1);
        gbc.writeMem(0x2ec1, { 0x65 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xeac2, gbc.sp());
        EXPECT(0x2ec2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0288
        gbc.setState(0xf50, 0x113b, 0x6f80, 0xf1fc, 0xb447, 0x6023, 0x1, 0x1);
        gbc.writeMem(0xf50, { 0x65 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x113b, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0289
        gbc.setState(0xea58, 0x3eb1, 0xb320, 0x7b02, 0x27fd, 0xca99, 0x0, 0x0);
        gbc.writeMem(0xea58, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3eb1, gbc.sp());
        EXPECT(0xea59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xea58));
        // 65 028A
        gbc.setState(0xd83, 0xcf8b, 0xe400, 0x4682, 0x3560, 0x1815, 0x0, 0x0);
        gbc.writeMem(0xd83, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcf8b, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 028B
        gbc.setState(0xc992, 0xa27c, 0x12b0, 0xdf32, 0xd5cd, 0x3dbe, 0x0, 0x0);
        gbc.writeMem(0xc992, { 0x65 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xa27c, gbc.sp());
        EXPECT(0xc993, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc992));
        // 65 028C
        gbc.setState(0xdf0e, 0x413f, 0x9c40, 0xb055, 0x6420, 0x88f9, 0x1, 0x0);
        gbc.writeMem(0xdf0e, { 0x65 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x413f, gbc.sp());
        EXPECT(0xdf0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdf0e));
        // 65 028D
        gbc.setState(0xc793, 0x91b5, 0x6cd0, 0x996, 0x430f, 0xa1b5, 0x0, 0x1);
        gbc.writeMem(0xc793, { 0x65 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0xc794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc793));
        // 65 028E
        gbc.setState(0xdc7e, 0xdd23, 0x3020, 0xee8, 0x7288, 0xb810, 0x1, 0x1);
        gbc.writeMem(0xdc7e, { 0x65 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdd23, gbc.sp());
        EXPECT(0xdc7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdc7e));
        // 65 028F
        gbc.setState(0xb6b8, 0xc7b3, 0x39c0, 0x362a, 0xc1c5, 0x5f7d, 0x1, 0x1);
        gbc.writeMem(0xb6b8, { 0x65 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xc7b3, gbc.sp());
        EXPECT(0xb6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb6b8));
        // 65 0290
        gbc.setState(0xd630, 0x8f67, 0xe6b0, 0x1b7a, 0x4ab5, 0xdda9, 0x1, 0x0);
        gbc.writeMem(0xd630, { 0x65 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8f67, gbc.sp());
        EXPECT(0xd631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd630));
        // 65 0291
        gbc.setState(0xd7e5, 0x2207, 0x1ba0, 0x63e9, 0xfbad, 0xeb05, 0x0, 0x1);
        gbc.writeMem(0xd7e5, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0xd7e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd7e5));
        // 65 0292
        gbc.setState(0x77f9, 0x2ede, 0xa0e0, 0x12da, 0x8133, 0x87dc, 0x1, 0x1);
        gbc.writeMem(0x77f9, { 0x65 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2ede, gbc.sp());
        EXPECT(0x77fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0293
        gbc.setState(0x86af, 0x1569, 0x2520, 0x9bff, 0xd413, 0xf624, 0x1, 0x0);
        gbc.writeMem(0x86af, { 0x65 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1569, gbc.sp());
        EXPECT(0x86b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x86af));
        // 65 0294
        gbc.setState(0x50c1, 0xe632, 0xa2d0, 0xc0e4, 0xe23e, 0x3be0, 0x1, 0x1);
        gbc.writeMem(0x50c1, { 0x65 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe632, gbc.sp());
        EXPECT(0x50c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0295
        gbc.setState(0xe4c6, 0xc46b, 0x7340, 0xcc2e, 0x61dc, 0xc280, 0x0, 0x1);
        gbc.writeMem(0xe4c6, { 0x65 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc46b, gbc.sp());
        EXPECT(0xe4c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe4c6));
        // 65 0296
        gbc.setState(0xcc4f, 0xde3c, 0x1630, 0x3bdb, 0xe015, 0x485, 0x1, 0x1);
        gbc.writeMem(0xcc4f, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xde3c, gbc.sp());
        EXPECT(0xcc50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcc4f));
        // 65 0297
        gbc.setState(0xb068, 0xa737, 0xdc90, 0x847d, 0x1a53, 0xd123, 0x1, 0x0);
        gbc.writeMem(0xb068, { 0x65 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa737, gbc.sp());
        EXPECT(0xb069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb068));
        // 65 0298
        gbc.setState(0xd184, 0x3279, 0x36f0, 0x90e9, 0x3bc, 0x82c6, 0x0, 0x0);
        gbc.writeMem(0xd184, { 0x65 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3279, gbc.sp());
        EXPECT(0xd185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd184));
        // 65 0299
        gbc.setState(0xe90b, 0xcf0d, 0x8df0, 0xadc4, 0x2b6e, 0x902a, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcf0d, gbc.sp());
        EXPECT(0xe90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe90b));
        // 65 029A
        gbc.setState(0xabf, 0xdd4f, 0x4a60, 0x9708, 0x3bf3, 0x516d, 0x0, 0x0);
        gbc.writeMem(0xabf, { 0x65 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xdd4f, gbc.sp());
        EXPECT(0xac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 029B
        gbc.setState(0xeef2, 0x1dad, 0x3e40, 0xc738, 0xbf0c, 0x364d, 0x1, 0x0);
        gbc.writeMem(0xeef2, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1dad, gbc.sp());
        EXPECT(0xeef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xeef2));
        // 65 029C
        gbc.setState(0x87f3, 0x412e, 0x6dd0, 0x617d, 0x9ca5, 0xa558, 0x1, 0x1);
        gbc.writeMem(0x87f3, { 0x65 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x412e, gbc.sp());
        EXPECT(0x87f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x87f3));
        // 65 029D
        gbc.setState(0xc773, 0x6558, 0x48b0, 0xe314, 0x10e9, 0x1943, 0x1, 0x1);
        gbc.writeMem(0xc773, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6558, gbc.sp());
        EXPECT(0xc774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc773));
        // 65 029E
        gbc.setState(0xbd47, 0x6ba9, 0x4060, 0x5db7, 0xafc4, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0xbd47, { 0x65 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6ba9, gbc.sp());
        EXPECT(0xbd48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbd47));
        // 65 029F
        gbc.setState(0x78f1, 0xc6b, 0xbf90, 0x9184, 0x4770, 0xd910, 0x1, 0x0);
        gbc.writeMem(0x78f1, { 0x65 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc6b, gbc.sp());
        EXPECT(0x78f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02A0
        gbc.setState(0xb93b, 0x54ee, 0x6ad0, 0x76bc, 0xe370, 0x67d5, 0x1, 0x1);
        gbc.writeMem(0xb93b, { 0x65 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x54ee, gbc.sp());
        EXPECT(0xb93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb93b));
        // 65 02A1
        gbc.setState(0x5773, 0xf2f8, 0xb1f0, 0xa91e, 0xd91d, 0xd37d, 0x0, 0x0);
        gbc.writeMem(0x5773, { 0x65 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf2f8, gbc.sp());
        EXPECT(0x5774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02A2
        gbc.setState(0xa101, 0xb5b6, 0xfa90, 0xa5bd, 0xfe72, 0x2050, 0x0, 0x1);
        gbc.writeMem(0xa101, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xb5b6, gbc.sp());
        EXPECT(0xa102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa101));
        // 65 02A3
        gbc.setState(0xc55b, 0x2c65, 0x9340, 0xa75d, 0xbce9, 0x2463, 0x0, 0x0);
        gbc.writeMem(0xc55b, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2c65, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc55b));
        // 65 02A4
        gbc.setState(0x7a44, 0x662c, 0x9120, 0x8395, 0x6581, 0x62f5, 0x1, 0x1);
        gbc.writeMem(0x7a44, { 0x65 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x662c, gbc.sp());
        EXPECT(0x7a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02A6
        gbc.setState(0xde3c, 0xde78, 0x6310, 0x6275, 0xe397, 0xad02, 0x0, 0x1);
        gbc.writeMem(0xde3c, { 0x65 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xde78, gbc.sp());
        EXPECT(0xde3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xde3c));
        // 65 02A7
        gbc.setState(0xb823, 0x2cd8, 0x59d0, 0xc819, 0x58e1, 0x83e1, 0x1, 0x1);
        gbc.writeMem(0xb823, { 0x65 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2cd8, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb823));
        // 65 02A8
        gbc.setState(0x69fb, 0x3a6c, 0xed50, 0x9f8f, 0x6a79, 0x7948, 0x1, 0x0);
        gbc.writeMem(0x69fb, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x69fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02A9
        gbc.setState(0xe9d1, 0xede6, 0xd570, 0x875d, 0xb4eb, 0x5703, 0x0, 0x1);
        gbc.writeMem(0xe9d1, { 0x65 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xede6, gbc.sp());
        EXPECT(0xe9d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe9d1));
        // 65 02AA
        gbc.setState(0x6c71, 0x8cc1, 0x9d0, 0xdc66, 0x6602, 0xfe8f, 0x1, 0x0);
        gbc.writeMem(0x6c71, { 0x65 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8cc1, gbc.sp());
        EXPECT(0x6c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02AB
        gbc.setState(0x1b09, 0x2c78, 0x2080, 0xb1c8, 0x409, 0xd18f, 0x0, 0x1);
        gbc.writeMem(0x1b09, { 0x65 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2c78, gbc.sp());
        EXPECT(0x1b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02AC
        gbc.setState(0x1c99, 0x5106, 0xa980, 0xc2df, 0x13ee, 0xf45c, 0x0, 0x1);
        gbc.writeMem(0x1c99, { 0x65 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5106, gbc.sp());
        EXPECT(0x1c9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02AD
        gbc.setState(0x1a03, 0xa4d1, 0x16b0, 0x5d82, 0xa04d, 0x7211, 0x0, 0x1);
        gbc.writeMem(0x1a03, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa4d1, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02AE
        gbc.setState(0x26dd, 0x481a, 0xd350, 0xcd33, 0x7c11, 0xb94f, 0x0, 0x1);
        gbc.writeMem(0x26dd, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x26de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02AF
        gbc.setState(0x90de, 0xf6fe, 0xd00, 0xb07e, 0xddef, 0xc028, 0x1, 0x1);
        gbc.writeMem(0x90de, { 0x65 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf6fe, gbc.sp());
        EXPECT(0x90df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x90de));
        // 65 02B0
        gbc.setState(0xcc6f, 0x4034, 0xd3d0, 0xe37c, 0x9067, 0x29db, 0x0, 0x0);
        gbc.writeMem(0xcc6f, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4034, gbc.sp());
        EXPECT(0xcc70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcc6f));
        // 65 02B1
        gbc.setState(0x55b7, 0x11e7, 0x2b0, 0xcebe, 0xa45, 0x312e, 0x0, 0x0);
        gbc.writeMem(0x55b7, { 0x65 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x11e7, gbc.sp());
        EXPECT(0x55b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02B2
        gbc.setState(0xe70c, 0x350a, 0xf850, 0x17ba, 0xd6d3, 0x3a72, 0x1, 0x1);
        gbc.writeMem(0xe70c, { 0x65 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x350a, gbc.sp());
        EXPECT(0xe70d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe70c));
        // 65 02B3
        gbc.setState(0x5d9f, 0xb484, 0x4640, 0x92d7, 0xbb74, 0x8478, 0x1, 0x0);
        gbc.writeMem(0x5d9f, { 0x65 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb484, gbc.sp());
        EXPECT(0x5da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02B4
        gbc.setState(0xe29e, 0x9c16, 0xddc0, 0x9111, 0x1385, 0x7e68, 0x1, 0x1);
        gbc.writeMem(0xe29e, { 0x65 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9c16, gbc.sp());
        EXPECT(0xe29f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe29e));
        // 65 02B5
        gbc.setState(0x5fb6, 0xdb61, 0x7480, 0xa742, 0x1a1f, 0x7fd8, 0x1, 0x0);
        gbc.writeMem(0x5fb6, { 0x65 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xdb61, gbc.sp());
        EXPECT(0x5fb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02B7
        gbc.setState(0x32fd, 0xc158, 0x47a0, 0xfa95, 0xa8f1, 0x26f4, 0x1, 0x0);
        gbc.writeMem(0x32fd, { 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc158, gbc.sp());
        EXPECT(0x32fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02B8
        gbc.setState(0x9dec, 0xecae, 0x6580, 0xb30, 0x268b, 0x8cf1, 0x0, 0x0);
        gbc.writeMem(0x9dec, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xecae, gbc.sp());
        EXPECT(0x9ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9dec));
        // 65 02BA
        gbc.setState(0x4a18, 0xf305, 0x8a10, 0xf37e, 0x5c6c, 0xe47, 0x1, 0x0);
        gbc.writeMem(0x4a18, { 0x65 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf305, gbc.sp());
        EXPECT(0x4a19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02BB
        gbc.setState(0x3fd2, 0xe94b, 0x88d0, 0x718e, 0x63b0, 0xc625, 0x0, 0x1);
        gbc.writeMem(0x3fd2, { 0x65 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe94b, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02BC
        gbc.setState(0x909b, 0x9360, 0xa70, 0x39d5, 0xee44, 0x2c64, 0x1, 0x0);
        gbc.writeMem(0x909b, { 0x65 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9360, gbc.sp());
        EXPECT(0x909c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x909b));
        // 65 02BD
        gbc.setState(0x3296, 0x30ff, 0x5dd0, 0xb620, 0x70ca, 0xa299, 0x0, 0x0);
        gbc.writeMem(0x3296, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x3297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02BE
        gbc.setState(0xa704, 0x5440, 0xd6c0, 0x1eb1, 0x8193, 0x17a, 0x1, 0x1);
        gbc.writeMem(0xa704, { 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5440, gbc.sp());
        EXPECT(0xa705, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa704));
        // 65 02C0
        gbc.setState(0xe76e, 0x5523, 0x99a0, 0x8593, 0x340d, 0x48d3, 0x1, 0x0);
        gbc.writeMem(0xe76e, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5523, gbc.sp());
        EXPECT(0xe76f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe76e));
        // 65 02C2
        gbc.setState(0x4803, 0x4fbc, 0xe720, 0x8317, 0x4110, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0x4803, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4fbc, gbc.sp());
        EXPECT(0x4804, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02C3
        gbc.setState(0x56bc, 0xbdd3, 0xebd0, 0xfe02, 0xceb8, 0x86b3, 0x0, 0x1);
        gbc.writeMem(0x56bc, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbdd3, gbc.sp());
        EXPECT(0x56bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02C4
        gbc.setState(0x9870, 0x3077, 0x3e40, 0xd17e, 0x3a20, 0xcfcd, 0x0, 0x0);
        gbc.writeMem(0x9870, { 0x65 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3077, gbc.sp());
        EXPECT(0x9871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9870));
        // 65 02C5
        gbc.setState(0x7066, 0x8321, 0xd080, 0xcc57, 0x7de7, 0x933f, 0x0, 0x1);
        gbc.writeMem(0x7066, { 0x65 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8321, gbc.sp());
        EXPECT(0x7067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02C6
        gbc.setState(0x99f2, 0xf897, 0xf560, 0x8869, 0x4389, 0x755f, 0x0, 0x0);
        gbc.writeMem(0x99f2, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf897, gbc.sp());
        EXPECT(0x99f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x99f2));
        // 65 02C7
        gbc.setState(0xbc4a, 0x5fa1, 0xbaf0, 0xb57c, 0x7101, 0x6304, 0x1, 0x0);
        gbc.writeMem(0xbc4a, { 0x65 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5fa1, gbc.sp());
        EXPECT(0xbc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbc4a));
        // 65 02C8
        gbc.setState(0x9289, 0x3a59, 0x3f90, 0x41c7, 0x3c5c, 0x773a, 0x1, 0x1);
        gbc.writeMem(0x9289, { 0x65 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3a59, gbc.sp());
        EXPECT(0x928a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9289));
        // 65 02CA
        gbc.setState(0xa3ed, 0x322b, 0xbf80, 0xc94a, 0xcae5, 0x922d, 0x1, 0x1);
        gbc.writeMem(0xa3ed, { 0x65 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x322b, gbc.sp());
        EXPECT(0xa3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa3ed));
        // 65 02CB
        gbc.setState(0x1ae9, 0x2250, 0xce00, 0x5c81, 0x6c3b, 0xbc84, 0x0, 0x1);
        gbc.writeMem(0x1ae9, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x2250, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02CC
        gbc.setState(0x1c4e, 0xd94, 0x22c0, 0x2f74, 0x9a84, 0x90d7, 0x1, 0x1);
        gbc.writeMem(0x1c4e, { 0x65 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd94, gbc.sp());
        EXPECT(0x1c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02CD
        gbc.setState(0x2d1b, 0xda45, 0xa8f0, 0x4e61, 0x19ff, 0xbc9f, 0x0, 0x1);
        gbc.writeMem(0x2d1b, { 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xda45, gbc.sp());
        EXPECT(0x2d1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02CE
        gbc.setState(0xe193, 0x7ba5, 0x23f0, 0x4d1c, 0x1290, 0x2ada, 0x1, 0x1);
        gbc.writeMem(0xe193, { 0x65 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7ba5, gbc.sp());
        EXPECT(0xe194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe193));
        // 65 02CF
        gbc.setState(0xf1c, 0x6558, 0x8c10, 0xa2b8, 0xb8bd, 0x8d7, 0x0, 0x1);
        gbc.writeMem(0xf1c, { 0x65 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6558, gbc.sp());
        EXPECT(0xf1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D0
        gbc.setState(0x5dac, 0xe8ff, 0xeb50, 0xe8d5, 0xabda, 0x550d, 0x1, 0x0);
        gbc.writeMem(0x5dac, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe8ff, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D1
        gbc.setState(0x126b, 0x8888, 0x9150, 0x3aee, 0x4c86, 0x4d0c, 0x1, 0x1);
        gbc.writeMem(0x126b, { 0x65 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8888, gbc.sp());
        EXPECT(0x126c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D2
        gbc.setState(0x1748, 0x8319, 0x5150, 0x6d42, 0xf20d, 0xd409, 0x0, 0x1);
        gbc.writeMem(0x1748, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8319, gbc.sp());
        EXPECT(0x1749, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D3
        gbc.setState(0xc6fa, 0x4b0f, 0xe5a0, 0x941d, 0xe8e2, 0xae79, 0x1, 0x1);
        gbc.writeMem(0xc6fa, { 0x65 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4b0f, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc6fa));
        // 65 02D4
        gbc.setState(0xc1e3, 0x5183, 0xbec0, 0x83b0, 0x8cf0, 0x7d3, 0x0, 0x1);
        gbc.writeMem(0xc1e3, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0xc1e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc1e3));
        // 65 02D5
        gbc.setState(0x1dcc, 0x270b, 0x3d90, 0x5980, 0xda21, 0x4075, 0x1, 0x1);
        gbc.writeMem(0x1dcc, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x270b, gbc.sp());
        EXPECT(0x1dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D6
        gbc.setState(0xe7db, 0x2d38, 0x9270, 0xb16d, 0xf781, 0x74fe, 0x1, 0x0);
        gbc.writeMem(0xe7db, { 0x65 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2d38, gbc.sp());
        EXPECT(0xe7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe7db));
        // 65 02D7
        gbc.setState(0x678e, 0x4ab8, 0xea10, 0x83fa, 0x17d, 0xdf44, 0x1, 0x1);
        gbc.writeMem(0x678e, { 0x65 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4ab8, gbc.sp());
        EXPECT(0x678f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02D8
        gbc.setState(0xc690, 0x290d, 0x5280, 0x51fb, 0xaf6a, 0x74d, 0x0, 0x0);
        gbc.writeMem(0xc690, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x290d, gbc.sp());
        EXPECT(0xc691, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc690));
        // 65 02D9
        gbc.setState(0xc53d, 0xcc6c, 0x84c0, 0x4f1d, 0x1134, 0xfce4, 0x1, 0x0);
        gbc.writeMem(0xc53d, { 0x65 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xcc6c, gbc.sp());
        EXPECT(0xc53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc53d));
        // 65 02DA
        gbc.setState(0x7ba2, 0xcef9, 0x1f40, 0x4c1b, 0x4c1f, 0xcdb2, 0x1, 0x1);
        gbc.writeMem(0x7ba2, { 0x65 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xcef9, gbc.sp());
        EXPECT(0x7ba3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02DB
        gbc.setState(0x16da, 0xb1b3, 0xed00, 0x8db5, 0x555f, 0xc1a2, 0x1, 0x0);
        gbc.writeMem(0x16da, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb1b3, gbc.sp());
        EXPECT(0x16db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02DC
        gbc.setState(0x3ad3, 0x1ad3, 0xe9c0, 0x9e58, 0x889a, 0x4fac, 0x1, 0x0);
        gbc.writeMem(0x3ad3, { 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1ad3, gbc.sp());
        EXPECT(0x3ad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02DD
        gbc.setState(0x9f76, 0xb40a, 0x11f0, 0x768e, 0xfc55, 0xfed7, 0x1, 0x0);
        gbc.writeMem(0x9f76, { 0x65 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb40a, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9f76));
        // 65 02DE
        gbc.setState(0x765d, 0xf4b1, 0x9320, 0xc88b, 0x233b, 0x5cb3, 0x1, 0x0);
        gbc.writeMem(0x765d, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf4b1, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02DF
        gbc.setState(0xb773, 0xb3d2, 0xe9c0, 0x5709, 0xa4ec, 0xcadd, 0x0, 0x1);
        gbc.writeMem(0xb773, { 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0xb774, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb773));
        // 65 02E0
        gbc.setState(0x1eb8, 0x63e5, 0xc840, 0xe88b, 0xeb6b, 0xe401, 0x0, 0x1);
        gbc.writeMem(0x1eb8, { 0x65 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x63e5, gbc.sp());
        EXPECT(0x1eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02E1
        gbc.setState(0x3cd8, 0x9822, 0xf280, 0x7b4f, 0xe4d4, 0xd5f2, 0x0, 0x1);
        gbc.writeMem(0x3cd8, { 0x65 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9822, gbc.sp());
        EXPECT(0x3cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02E2
        gbc.setState(0x7b2f, 0x969e, 0x5a90, 0xb9af, 0xed60, 0xb423, 0x1, 0x0);
        gbc.writeMem(0x7b2f, { 0x65 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x969e, gbc.sp());
        EXPECT(0x7b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02E3
        gbc.setState(0x98e4, 0xc350, 0xb2c0, 0xae1f, 0xf029, 0xabbb, 0x0, 0x0);
        gbc.writeMem(0x98e4, { 0x65 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc350, gbc.sp());
        EXPECT(0x98e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x98e4));
        // 65 02E4
        gbc.setState(0x1450, 0x9862, 0xab00, 0x22c9, 0xbd9a, 0xf9e5, 0x0, 0x0);
        gbc.writeMem(0x1450, { 0x65 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9862, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02E5
        gbc.setState(0xb17, 0xd3b2, 0x9b10, 0x41d3, 0x3949, 0xcd01, 0x1, 0x1);
        gbc.writeMem(0xb17, { 0x65 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd3b2, gbc.sp());
        EXPECT(0xb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02E6
        gbc.setState(0x9e49, 0x8a3c, 0xc7b0, 0xf48a, 0xe3aa, 0xddae, 0x0, 0x0);
        gbc.writeMem(0x9e49, { 0x65 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8a3c, gbc.sp());
        EXPECT(0x9e4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9e49));
        // 65 02E7
        gbc.setState(0xdfff, 0xf2d4, 0xa7c0, 0xfd23, 0xd551, 0xabcf, 0x1, 0x1);
        gbc.writeMem(0xdfff, { 0x65 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf2d4, gbc.sp());
        EXPECT(0xe000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdfff));
        // 65 02E8
        gbc.setState(0x41d9, 0xd8cd, 0xe3a0, 0xe4b6, 0x101d, 0xc973, 0x0, 0x1);
        gbc.writeMem(0x41d9, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd8cd, gbc.sp());
        EXPECT(0x41da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02E9
        gbc.setState(0x3c2a, 0xf2e3, 0x7db0, 0xcc83, 0x2018, 0x45d8, 0x1, 0x1);
        gbc.writeMem(0x3c2a, { 0x65 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf2e3, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02EA
        gbc.setState(0x625a, 0xfaa1, 0xed60, 0x98dd, 0x2a9a, 0xfb53, 0x1, 0x0);
        gbc.writeMem(0x625a, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x625b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02EB
        gbc.setState(0x8540, 0x4ca9, 0xa830, 0xb7f, 0xce32, 0x5c2, 0x0, 0x0);
        gbc.writeMem(0x8540, { 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4ca9, gbc.sp());
        EXPECT(0x8541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8540));
        // 65 02EC
        gbc.setState(0xa7b4, 0x973e, 0x1d20, 0xb2bf, 0xc127, 0x2543, 0x0, 0x1);
        gbc.writeMem(0xa7b4, { 0x65 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x973e, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa7b4));
        // 65 02ED
        gbc.setState(0x445, 0x2903, 0x2710, 0x6bd0, 0x7def, 0x6903, 0x1, 0x0);
        gbc.writeMem(0x445, { 0x65 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2903, gbc.sp());
        EXPECT(0x446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02EE
        gbc.setState(0x1b14, 0x36bf, 0xcb10, 0xf11e, 0x991a, 0x159, 0x1, 0x0);
        gbc.writeMem(0x1b14, { 0x65 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x36bf, gbc.sp());
        EXPECT(0x1b15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02EF
        gbc.setState(0x65a1, 0x3dc3, 0x44f0, 0xf51b, 0x2999, 0x40ee, 0x0, 0x1);
        gbc.writeMem(0x65a1, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3dc3, gbc.sp());
        EXPECT(0x65a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02F0
        gbc.setState(0x78ba, 0x5633, 0x8a90, 0x1858, 0xe803, 0xf0b4, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0x65 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5633, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02F1
        gbc.setState(0xaecb, 0x6a8b, 0xfae0, 0x2e48, 0x3e9b, 0x8d7c, 0x1, 0x0);
        gbc.writeMem(0xaecb, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6a8b, gbc.sp());
        EXPECT(0xaecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaecb));
        // 65 02F2
        gbc.setState(0xe2f, 0x3c55, 0x9590, 0xbe28, 0xf1f8, 0x8979, 0x0, 0x0);
        gbc.writeMem(0xe2f, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3c55, gbc.sp());
        EXPECT(0xe30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02F3
        gbc.setState(0xaba4, 0x410b, 0x38f0, 0x95ef, 0x953f, 0xb18, 0x1, 0x0);
        gbc.writeMem(0xaba4, { 0x65 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaba4));
        // 65 02F4
        gbc.setState(0x43ef, 0xfdaf, 0x6c20, 0x2dc7, 0xdf7f, 0xe7ff, 0x1, 0x0);
        gbc.writeMem(0x43ef, { 0x65 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfdaf, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 02F5
        gbc.setState(0xb78d, 0x1e84, 0xabf0, 0xb675, 0x26c5, 0xb334, 0x1, 0x1);
        gbc.writeMem(0xb78d, { 0x65 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb78d));
        // 65 02F6
        gbc.setState(0xe73e, 0xad4d, 0x7780, 0xbc66, 0xca2d, 0xd430, 0x1, 0x1);
        gbc.writeMem(0xe73e, { 0x65 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xad4d, gbc.sp());
        EXPECT(0xe73f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe73e));
        // 65 02F7
        gbc.setState(0x3330, 0xadee, 0x7290, 0xef53, 0xbbf9, 0x93ce, 0x1, 0x0);
        gbc.writeMem(0x3330, { 0x65 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xadee, gbc.sp());
        EXPECT(0x3331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02F8
        gbc.setState(0xb926, 0xdd8, 0x4b90, 0x8b25, 0xefb9, 0x29ce, 0x1, 0x1);
        gbc.writeMem(0xb926, { 0x65 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdd8, gbc.sp());
        EXPECT(0xb927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb926));
        // 65 02F9
        gbc.setState(0x1e96, 0x97de, 0xedd0, 0xa528, 0x8616, 0xc3a0, 0x0, 0x0);
        gbc.writeMem(0x1e96, { 0x65 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x97de, gbc.sp());
        EXPECT(0x1e97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02FA
        gbc.setState(0x531, 0x7f4c, 0x1bf0, 0xe448, 0x9ac1, 0xde4, 0x0, 0x1);
        gbc.writeMem(0x531, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7f4c, gbc.sp());
        EXPECT(0x532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02FB
        gbc.setState(0x5698, 0xab03, 0x7770, 0xbd3e, 0x4231, 0x8386, 0x1, 0x0);
        gbc.writeMem(0x5698, { 0x65 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xab03, gbc.sp());
        EXPECT(0x5699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02FD
        gbc.setState(0xab80, 0xbf51, 0x1b10, 0xce58, 0x6d55, 0x9a03, 0x0, 0x0);
        gbc.writeMem(0xab80, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xbf51, gbc.sp());
        EXPECT(0xab81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xab80));
        // 65 02FE
        gbc.setState(0x115c, 0xbcd3, 0xd870, 0x4e4e, 0x375f, 0x63e6, 0x0, 0x1);
        gbc.writeMem(0x115c, { 0x65 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xbcd3, gbc.sp());
        EXPECT(0x115d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 02FF
        gbc.setState(0xecd6, 0x4f8d, 0xf370, 0xb729, 0xcf62, 0x7197, 0x1, 0x0);
        gbc.writeMem(0xecd6, { 0x65 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x4f8d, gbc.sp());
        EXPECT(0xecd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xecd6));
        // 65 0300
        gbc.setState(0x8aa5, 0xf9ef, 0x5260, 0x599f, 0x882a, 0xf561, 0x1, 0x1);
        gbc.writeMem(0x8aa5, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf9ef, gbc.sp());
        EXPECT(0x8aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8aa5));
        // 65 0301
        gbc.setState(0xc78b, 0x1855, 0x8d80, 0x620e, 0xf0ff, 0xe788, 0x1, 0x0);
        gbc.writeMem(0xc78b, { 0x65 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1855, gbc.sp());
        EXPECT(0xc78c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc78b));
        // 65 0302
        gbc.setState(0x6be4, 0x1f0c, 0xf5f0, 0x24e3, 0x7573, 0xfc4, 0x1, 0x0);
        gbc.writeMem(0x6be4, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1f0c, gbc.sp());
        EXPECT(0x6be5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0303
        gbc.setState(0x7c26, 0x8a1f, 0xc290, 0x8927, 0xbaf8, 0x1baa, 0x0, 0x0);
        gbc.writeMem(0x7c26, { 0x65 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8a1f, gbc.sp());
        EXPECT(0x7c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0304
        gbc.setState(0x13da, 0x41e5, 0x26d0, 0xad5f, 0xa9a7, 0xd219, 0x1, 0x0);
        gbc.writeMem(0x13da, { 0x65 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x41e5, gbc.sp());
        EXPECT(0x13db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0305
        gbc.setState(0x9a61, 0xb2bf, 0x62b0, 0x5798, 0x377, 0x7eba, 0x0, 0x1);
        gbc.writeMem(0x9a61, { 0x65 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0x9a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9a61));
        // 65 0307
        gbc.setState(0x268a, 0x232e, 0xf530, 0x8b2b, 0x7011, 0x1fb, 0x1, 0x0);
        gbc.writeMem(0x268a, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x232e, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0308
        gbc.setState(0x968f, 0xb605, 0xc470, 0x7e2, 0x1d07, 0xcd77, 0x0, 0x0);
        gbc.writeMem(0x968f, { 0x65 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb605, gbc.sp());
        EXPECT(0x9690, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x968f));
        // 65 0309
        gbc.setState(0xe645, 0xa220, 0x44d0, 0x8dd, 0x13b5, 0x1244, 0x1, 0x0);
        gbc.writeMem(0xe645, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa220, gbc.sp());
        EXPECT(0xe646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe645));
        // 65 030A
        gbc.setState(0xa585, 0xd197, 0xd370, 0x3648, 0x9d48, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0xa585, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd197, gbc.sp());
        EXPECT(0xa586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa585));
        // 65 030B
        gbc.setState(0xb7f7, 0xc438, 0xbbf0, 0x572a, 0xc736, 0x7232, 0x1, 0x1);
        gbc.writeMem(0xb7f7, { 0x65 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc438, gbc.sp());
        EXPECT(0xb7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb7f7));
        // 65 030C
        gbc.setState(0x2649, 0xa0d7, 0x3b10, 0x32c7, 0x692c, 0x2988, 0x0, 0x1);
        gbc.writeMem(0x2649, { 0x65 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x264a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 030D
        gbc.setState(0x7b, 0xfbe0, 0xa10, 0x75ac, 0x19bd, 0x7ae4, 0x0, 0x1);
        gbc.writeMem(0x7b, { 0x65 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xfbe0, gbc.sp());
        EXPECT(0x7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 030E
        gbc.setState(0x83bf, 0x51b6, 0x9920, 0xce75, 0xb526, 0xad40, 0x0, 0x1);
        gbc.writeMem(0x83bf, { 0x65 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x51b6, gbc.sp());
        EXPECT(0x83c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x83bf));
        // 65 0310
        gbc.setState(0x2b5d, 0xaae7, 0xe740, 0x1598, 0xdf6a, 0x1642, 0x0, 0x0);
        gbc.writeMem(0x2b5d, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xaae7, gbc.sp());
        EXPECT(0x2b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0311
        gbc.setState(0xa96c, 0x9878, 0x34c0, 0x7ec6, 0xafca, 0xa12, 0x0, 0x1);
        gbc.writeMem(0xa96c, { 0x65 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9878, gbc.sp());
        EXPECT(0xa96d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa96c));
        // 65 0312
        gbc.setState(0x9b21, 0x1fc5, 0x55a0, 0x55e6, 0x1d44, 0xdef9, 0x1, 0x0);
        gbc.writeMem(0x9b21, { 0x65 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0x9b22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9b21));
        // 65 0313
        gbc.setState(0x1fa4, 0xd5d5, 0x16a0, 0x7341, 0xdd44, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0x1fa4, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0314
        gbc.setState(0x7986, 0xc368, 0x29c0, 0xdab5, 0xe41b, 0x163e, 0x0, 0x1);
        gbc.writeMem(0x7986, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc368, gbc.sp());
        EXPECT(0x7987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0315
        gbc.setState(0xcc46, 0xc8cc, 0xab70, 0x7418, 0x831f, 0x8d93, 0x0, 0x1);
        gbc.writeMem(0xcc46, { 0x65 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc8cc, gbc.sp());
        EXPECT(0xcc47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcc46));
        // 65 0316
        gbc.setState(0x69fc, 0xa375, 0x1590, 0xe50d, 0xf187, 0x1a6f, 0x1, 0x0);
        gbc.writeMem(0x69fc, { 0x65 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa375, gbc.sp());
        EXPECT(0x69fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0317
        gbc.setState(0xa92c, 0xbadd, 0xfb0, 0xd7f2, 0xe861, 0x4d6c, 0x1, 0x1);
        gbc.writeMem(0xa92c, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbadd, gbc.sp());
        EXPECT(0xa92d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa92c));
        // 65 0318
        gbc.setState(0x15a5, 0x6fbd, 0xf160, 0x720d, 0xac91, 0x6410, 0x0, 0x1);
        gbc.writeMem(0x15a5, { 0x65 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6fbd, gbc.sp());
        EXPECT(0x15a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0319
        gbc.setState(0x9cdf, 0x37b8, 0xdb50, 0xbc64, 0x7df5, 0x76c5, 0x1, 0x0);
        gbc.writeMem(0x9cdf, { 0x65 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x37b8, gbc.sp());
        EXPECT(0x9ce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9cdf));
        // 65 031A
        gbc.setState(0x1142, 0xb899, 0x24b0, 0x982c, 0xe1f6, 0x2d3b, 0x0, 0x1);
        gbc.writeMem(0x1142, { 0x65 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb899, gbc.sp());
        EXPECT(0x1143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 031B
        gbc.setState(0x37f3, 0x6ad6, 0x9a60, 0xdc29, 0x27b0, 0x843d, 0x1, 0x1);
        gbc.writeMem(0x37f3, { 0x65 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 031C
        gbc.setState(0xcb1c, 0x1f40, 0x6140, 0x5777, 0xd0b7, 0x9965, 0x1, 0x0);
        gbc.writeMem(0xcb1c, { 0x65 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x1f40, gbc.sp());
        EXPECT(0xcb1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcb1c));
        // 65 031D
        gbc.setState(0x537, 0xc1a4, 0xd630, 0x62e0, 0x15be, 0xde9a, 0x0, 0x1);
        gbc.writeMem(0x537, { 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc1a4, gbc.sp());
        EXPECT(0x538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 031E
        gbc.setState(0xaff5, 0xe7dd, 0x6930, 0xd408, 0x1ca4, 0x9ccc, 0x1, 0x0);
        gbc.writeMem(0xaff5, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe7dd, gbc.sp());
        EXPECT(0xaff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaff5));
        // 65 031F
        gbc.setState(0xbff3, 0x21bc, 0xd1f0, 0xd3f1, 0xe2e5, 0x5abd, 0x0, 0x0);
        gbc.writeMem(0xbff3, { 0x65 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x21bc, gbc.sp());
        EXPECT(0xbff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbff3));
        // 65 0320
        gbc.setState(0x2cf5, 0xd269, 0x32a0, 0x775b, 0x56bf, 0x448f, 0x0, 0x0);
        gbc.writeMem(0x2cf5, { 0x65 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0x2cf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0322
        gbc.setState(0x54c8, 0xef2d, 0x9310, 0x7e5d, 0x530, 0x3c7, 0x1, 0x1);
        gbc.writeMem(0x54c8, { 0x65 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xef2d, gbc.sp());
        EXPECT(0x54c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0323
        gbc.setState(0x27, 0x5f48, 0x9790, 0xeb83, 0x4832, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x27, { 0x65 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0324
        gbc.setState(0xa93d, 0xcc53, 0xd640, 0xae1d, 0xc5ca, 0xd292, 0x1, 0x1);
        gbc.writeMem(0xa93d, { 0x65 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcc53, gbc.sp());
        EXPECT(0xa93e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa93d));
        // 65 0325
        gbc.setState(0xa31a, 0x1680, 0xeca0, 0x388, 0xcd08, 0xee1, 0x1, 0x0);
        gbc.writeMem(0xa31a, { 0x65 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x1680, gbc.sp());
        EXPECT(0xa31b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa31a));
        // 65 0326
        gbc.setState(0x6189, 0xccb0, 0xcc30, 0x8540, 0xe0bb, 0x907b, 0x1, 0x1);
        gbc.writeMem(0x6189, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xccb0, gbc.sp());
        EXPECT(0x618a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0327
        gbc.setState(0xad03, 0xcd13, 0xac10, 0x7d31, 0x9529, 0xef2a, 0x0, 0x1);
        gbc.writeMem(0xad03, { 0x65 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0xad04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xad03));
        // 65 0328
        gbc.setState(0xde43, 0x2030, 0x4fb0, 0xfd36, 0x376b, 0x35c5, 0x1, 0x0);
        gbc.writeMem(0xde43, { 0x65 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2030, gbc.sp());
        EXPECT(0xde44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xde43));
        // 65 0329
        gbc.setState(0x2cd9, 0x7922, 0xb900, 0x7be0, 0xd63b, 0x7e0b, 0x0, 0x0);
        gbc.writeMem(0x2cd9, { 0x65 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7922, gbc.sp());
        EXPECT(0x2cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 032A
        gbc.setState(0x1fad, 0x8d67, 0x1920, 0xced9, 0x5e56, 0x6bbc, 0x1, 0x1);
        gbc.writeMem(0x1fad, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8d67, gbc.sp());
        EXPECT(0x1fae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 032B
        gbc.setState(0x5cea, 0xdb06, 0x9260, 0x8f95, 0x1adb, 0x1098, 0x1, 0x1);
        gbc.writeMem(0x5cea, { 0x65 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdb06, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 032C
        gbc.setState(0x3793, 0x75c5, 0xe130, 0x8ba8, 0x6e2e, 0x149d, 0x0, 0x0);
        gbc.writeMem(0x3793, { 0x65 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x75c5, gbc.sp());
        EXPECT(0x3794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 032D
        gbc.setState(0xeb66, 0xde85, 0x95b0, 0xd300, 0x2d32, 0x238b, 0x0, 0x1);
        gbc.writeMem(0xeb66, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xde85, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xeb66));
        // 65 032F
        gbc.setState(0xb55e, 0xa44e, 0xae20, 0x4085, 0xfda2, 0xaf90, 0x1, 0x0);
        gbc.writeMem(0xb55e, { 0x65 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa44e, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb55e));
        // 65 0330
        gbc.setState(0x61a0, 0x5019, 0xb130, 0x9182, 0x1e50, 0x4ed2, 0x0, 0x0);
        gbc.writeMem(0x61a0, { 0x65 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5019, gbc.sp());
        EXPECT(0x61a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0331
        gbc.setState(0xb46f, 0x7e0a, 0x6500, 0x95ab, 0x3ed9, 0xddc3, 0x1, 0x1);
        gbc.writeMem(0xb46f, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7e0a, gbc.sp());
        EXPECT(0xb470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb46f));
        // 65 0332
        gbc.setState(0x14dd, 0xaa40, 0x150, 0x3690, 0x4f5e, 0x57ef, 0x0, 0x1);
        gbc.writeMem(0x14dd, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xaa40, gbc.sp());
        EXPECT(0x14de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0333
        gbc.setState(0x85ff, 0xe208, 0xbe80, 0x2e2d, 0x8327, 0xa665, 0x1, 0x1);
        gbc.writeMem(0x85ff, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe208, gbc.sp());
        EXPECT(0x8600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x85ff));
        // 65 0334
        gbc.setState(0x7a87, 0x5484, 0xc4c0, 0x8d0f, 0x368b, 0x439a, 0x1, 0x0);
        gbc.writeMem(0x7a87, { 0x65 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5484, gbc.sp());
        EXPECT(0x7a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0335
        gbc.setState(0xe423, 0x4d5, 0x4410, 0x78f0, 0x51ec, 0xe47c, 0x0, 0x1);
        gbc.writeMem(0xe423, { 0x65 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4d5, gbc.sp());
        EXPECT(0xe424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe423));
        // 65 0336
        gbc.setState(0xe66c, 0x3d9e, 0x5270, 0x690b, 0x91fa, 0xfd53, 0x0, 0x0);
        gbc.writeMem(0xe66c, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3d9e, gbc.sp());
        EXPECT(0xe66d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe66c));
        // 65 0337
        gbc.setState(0xa34e, 0x6cfa, 0x5c80, 0xc074, 0xd6ac, 0xcfa2, 0x0, 0x1);
        gbc.writeMem(0xa34e, { 0x65 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x6cfa, gbc.sp());
        EXPECT(0xa34f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa34e));
        // 65 0338
        gbc.setState(0x9fc6, 0xc12f, 0x4c80, 0x7051, 0xd9af, 0xd595, 0x0, 0x0);
        gbc.writeMem(0x9fc6, { 0x65 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc12f, gbc.sp());
        EXPECT(0x9fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9fc6));
        // 65 0339
        gbc.setState(0xe046, 0xdfb5, 0x7360, 0x2546, 0x1dea, 0x34b1, 0x1, 0x1);
        gbc.writeMem(0xe046, { 0x65 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xdfb5, gbc.sp());
        EXPECT(0xe047, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe046));
        // 65 033A
        gbc.setState(0x6940, 0xd88c, 0x6920, 0x2447, 0x2f62, 0x8084, 0x1, 0x1);
        gbc.writeMem(0x6940, { 0x65 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd88c, gbc.sp());
        EXPECT(0x6941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 033B
        gbc.setState(0xb434, 0x1082, 0xcd60, 0x3541, 0x7fea, 0xd4c6, 0x0, 0x1);
        gbc.writeMem(0xb434, { 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1082, gbc.sp());
        EXPECT(0xb435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb434));
        // 65 033C
        gbc.setState(0x10aa, 0xb09a, 0xc310, 0x4ff7, 0xb41a, 0xd4ae, 0x0, 0x0);
        gbc.writeMem(0x10aa, { 0x65 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb09a, gbc.sp());
        EXPECT(0x10ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 033D
        gbc.setState(0x2fae, 0x6916, 0xff00, 0x328f, 0x90fe, 0x3477, 0x0, 0x1);
        gbc.writeMem(0x2fae, { 0x65 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6916, gbc.sp());
        EXPECT(0x2faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 033E
        gbc.setState(0x45e2, 0xb019, 0x8ff0, 0xb570, 0xa949, 0xbda3, 0x0, 0x1);
        gbc.writeMem(0x45e2, { 0x65 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb019, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 033F
        gbc.setState(0x52c9, 0xf475, 0x19f0, 0x6496, 0x29e2, 0x1bda, 0x1, 0x1);
        gbc.writeMem(0x52c9, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf475, gbc.sp());
        EXPECT(0x52ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0340
        gbc.setState(0xb103, 0x9942, 0xbe20, 0xe638, 0x4469, 0xabe5, 0x0, 0x1);
        gbc.writeMem(0xb103, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9942, gbc.sp());
        EXPECT(0xb104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb103));
        // 65 0341
        gbc.setState(0x6281, 0x5d37, 0xb130, 0x5a82, 0x4337, 0x2d4e, 0x0, 0x0);
        gbc.writeMem(0x6281, { 0x65 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5d37, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0342
        gbc.setState(0xe757, 0x276e, 0x3de0, 0x1832, 0x6f09, 0x6701, 0x0, 0x0);
        gbc.writeMem(0xe757, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x276e, gbc.sp());
        EXPECT(0xe758, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe757));
        // 65 0343
        gbc.setState(0x4b5e, 0x5157, 0x1050, 0xd4d3, 0x8fd2, 0x9b47, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0x65 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5157, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0344
        gbc.setState(0x7a02, 0x7192, 0xfc50, 0xb5f7, 0x104e, 0xcca8, 0x1, 0x1);
        gbc.writeMem(0x7a02, { 0x65 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x7a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0345
        gbc.setState(0x19cd, 0x902, 0xcc60, 0xfd08, 0xbaa7, 0x5d0, 0x1, 0x0);
        gbc.writeMem(0x19cd, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x902, gbc.sp());
        EXPECT(0x19ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0346
        gbc.setState(0x998c, 0xc73d, 0xa8e0, 0xe081, 0xdc31, 0x8e97, 0x0, 0x0);
        gbc.writeMem(0x998c, { 0x65 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc73d, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x998c));
        // 65 0347
        gbc.setState(0xb9dc, 0x9ef4, 0xc670, 0xb7f9, 0x2ce1, 0x9b4f, 0x1, 0x0);
        gbc.writeMem(0xb9dc, { 0x65 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9ef4, gbc.sp());
        EXPECT(0xb9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb9dc));
        // 65 0348
        gbc.setState(0x95f8, 0x5525, 0x21d0, 0xb819, 0x7381, 0xe77c, 0x0, 0x1);
        gbc.writeMem(0x95f8, { 0x65 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5525, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x95f8));
        // 65 0349
        gbc.setState(0xa996, 0xdab, 0xdca0, 0x9eb8, 0x8554, 0x988e, 0x1, 0x0);
        gbc.writeMem(0xa996, { 0x65 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdab, gbc.sp());
        EXPECT(0xa997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa996));
        // 65 034A
        gbc.setState(0xe349, 0xba77, 0x9ac0, 0x64eb, 0x6a1d, 0xf37b, 0x1, 0x1);
        gbc.writeMem(0xe349, { 0x65 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xba77, gbc.sp());
        EXPECT(0xe34a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe349));
        // 65 034B
        gbc.setState(0x93ea, 0x12e5, 0x52c0, 0x6594, 0xb573, 0x342d, 0x1, 0x1);
        gbc.writeMem(0x93ea, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x12e5, gbc.sp());
        EXPECT(0x93eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x93ea));
        // 65 034C
        gbc.setState(0x1f1, 0x865d, 0x3730, 0x1ca, 0x4e76, 0x8084, 0x0, 0x0);
        gbc.writeMem(0x1f1, { 0x65 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x865d, gbc.sp());
        EXPECT(0x1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 034D
        gbc.setState(0x7451, 0xa3c7, 0x3a40, 0x905d, 0x5814, 0xa9d6, 0x1, 0x1);
        gbc.writeMem(0x7451, { 0x65 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa3c7, gbc.sp());
        EXPECT(0x7452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 034E
        gbc.setState(0xe52d, 0x1486, 0x5d00, 0x59ed, 0x699e, 0xa7d7, 0x1, 0x1);
        gbc.writeMem(0xe52d, { 0x65 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1486, gbc.sp());
        EXPECT(0xe52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe52d));
        // 65 034F
        gbc.setState(0xdea8, 0x3bad, 0xcab0, 0xf9aa, 0x8325, 0xfe97, 0x1, 0x0);
        gbc.writeMem(0xdea8, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3bad, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xdea8));
        // 65 0350
        gbc.setState(0x3632, 0x8e97, 0xfa20, 0xe96f, 0x119, 0x5e06, 0x0, 0x1);
        gbc.writeMem(0x3632, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0351
        gbc.setState(0x57de, 0x858, 0xf9d0, 0xa58b, 0x7008, 0xcbe, 0x0, 0x1);
        gbc.writeMem(0x57de, { 0x65 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x858, gbc.sp());
        EXPECT(0x57df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0352
        gbc.setState(0xa5f5, 0xc4ea, 0x3190, 0x9cc0, 0x6241, 0x207e, 0x0, 0x1);
        gbc.writeMem(0xa5f5, { 0x65 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc4ea, gbc.sp());
        EXPECT(0xa5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa5f5));
        // 65 0354
        gbc.setState(0xbffa, 0x5cc3, 0xe040, 0xb39, 0x3e45, 0xf970, 0x0, 0x1);
        gbc.writeMem(0xbffa, { 0x65 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0xbffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbffa));
        // 65 0355
        gbc.setState(0x1cc, 0x4f40, 0x5f60, 0xfc7b, 0x6099, 0x2016, 0x0, 0x1);
        gbc.writeMem(0x1cc, { 0x65 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4f40, gbc.sp());
        EXPECT(0x1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0356
        gbc.setState(0xca8, 0x21d0, 0x7080, 0xcca9, 0x6ad7, 0x5ce, 0x0, 0x1);
        gbc.writeMem(0xca8, { 0x65 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x21d0, gbc.sp());
        EXPECT(0xca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0357
        gbc.setState(0x7cd8, 0xcf8c, 0x6d30, 0xba9d, 0xf82b, 0xfa97, 0x1, 0x1);
        gbc.writeMem(0x7cd8, { 0x65 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcf8c, gbc.sp());
        EXPECT(0x7cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0358
        gbc.setState(0x3586, 0x51e1, 0x6d50, 0xdd9f, 0x8f7a, 0x5eb1, 0x0, 0x0);
        gbc.writeMem(0x3586, { 0x65 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x51e1, gbc.sp());
        EXPECT(0x3587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0359
        gbc.setState(0x1bcf, 0xb4d0, 0x9510, 0x4d65, 0xaaad, 0xbd9, 0x1, 0x0);
        gbc.writeMem(0x1bcf, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb4d0, gbc.sp());
        EXPECT(0x1bd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 035A
        gbc.setState(0xed03, 0xe6a2, 0x4c70, 0xa105, 0xff6a, 0xb856, 0x1, 0x1);
        gbc.writeMem(0xed03, { 0x65 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xe6a2, gbc.sp());
        EXPECT(0xed04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xed03));
        // 65 035B
        gbc.setState(0xe2af, 0xf664, 0xf030, 0xdf9f, 0xfba5, 0xa495, 0x1, 0x1);
        gbc.writeMem(0xe2af, { 0x65 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf664, gbc.sp());
        EXPECT(0xe2b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe2af));
        // 65 035C
        gbc.setState(0xd4de, 0x8cde, 0xad80, 0x72b, 0xaed8, 0xd5aa, 0x0, 0x1);
        gbc.writeMem(0xd4de, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8cde, gbc.sp());
        EXPECT(0xd4df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd4de));
        // 65 035D
        gbc.setState(0xa3ae, 0xe207, 0xe5a0, 0xf9b8, 0x9e33, 0x2c84, 0x0, 0x0);
        gbc.writeMem(0xa3ae, { 0x65 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xe207, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa3ae));
        // 65 035E
        gbc.setState(0x5c75, 0x30b1, 0x7dc0, 0x681, 0x3410, 0xe119, 0x0, 0x1);
        gbc.writeMem(0x5c75, { 0x65 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x30b1, gbc.sp());
        EXPECT(0x5c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 035F
        gbc.setState(0x68b6, 0xadb2, 0x29b0, 0x4947, 0x68c2, 0x1b43, 0x0, 0x1);
        gbc.writeMem(0x68b6, { 0x65 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xadb2, gbc.sp());
        EXPECT(0x68b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0360
        gbc.setState(0x1ff0, 0xfdaa, 0x2830, 0xf0da, 0xaf49, 0x35d2, 0x0, 0x0);
        gbc.writeMem(0x1ff0, { 0x65 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfdaa, gbc.sp());
        EXPECT(0x1ff1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0361
        gbc.setState(0x1e10, 0x44d, 0x3d70, 0x755c, 0x5127, 0xb493, 0x1, 0x1);
        gbc.writeMem(0x1e10, { 0x65 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x44d, gbc.sp());
        EXPECT(0x1e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0362
        gbc.setState(0x1efd, 0x6cda, 0x6ad0, 0xabce, 0x3b6c, 0x54aa, 0x0, 0x1);
        gbc.writeMem(0x1efd, { 0x65 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6cda, gbc.sp());
        EXPECT(0x1efe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0363
        gbc.setState(0x8528, 0x60e2, 0x9ce0, 0x531e, 0x7acc, 0x8e92, 0x1, 0x1);
        gbc.writeMem(0x8528, { 0x65 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x60e2, gbc.sp());
        EXPECT(0x8529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8528));
        // 65 0364
        gbc.setState(0x2f17, 0x9939, 0x3590, 0x35d0, 0x730f, 0xb3d3, 0x0, 0x0);
        gbc.writeMem(0x2f17, { 0x65 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x2f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0365
        gbc.setState(0x97d8, 0x4094, 0xf10, 0x66b6, 0x8709, 0x7ed, 0x1, 0x1);
        gbc.writeMem(0x97d8, { 0x65 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4094, gbc.sp());
        EXPECT(0x97d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x97d8));
        // 65 0366
        gbc.setState(0xaf9b, 0x7155, 0xb070, 0x632a, 0x9d55, 0x97d1, 0x0, 0x0);
        gbc.writeMem(0xaf9b, { 0x65 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7155, gbc.sp());
        EXPECT(0xaf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xaf9b));
        // 65 0367
        gbc.setState(0xc049, 0x876b, 0xd950, 0xda9d, 0xdd8d, 0xf239, 0x1, 0x0);
        gbc.writeMem(0xc049, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x876b, gbc.sp());
        EXPECT(0xc04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc049));
        // 65 0368
        gbc.setState(0x15eb, 0x12e1, 0x97c0, 0x644f, 0xbdaf, 0x71db, 0x0, 0x0);
        gbc.writeMem(0x15eb, { 0x65 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x12e1, gbc.sp());
        EXPECT(0x15ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0369
        gbc.setState(0x7dce, 0x36af, 0x2880, 0x917b, 0x80bb, 0xb08f, 0x1, 0x0);
        gbc.writeMem(0x7dce, { 0x65 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x36af, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 036A
        gbc.setState(0xe8a0, 0x3187, 0x5d0, 0xca62, 0x8efe, 0x888a, 0x1, 0x0);
        gbc.writeMem(0xe8a0, { 0x65 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe8a0));
        // 65 036B
        gbc.setState(0x48b5, 0x7401, 0x8e60, 0x736e, 0x17d5, 0x61bb, 0x0, 0x1);
        gbc.writeMem(0x48b5, { 0x65 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7401, gbc.sp());
        EXPECT(0x48b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 036C
        gbc.setState(0x6f4c, 0xb426, 0xcd70, 0x4589, 0x4459, 0x795f, 0x0, 0x1);
        gbc.writeMem(0x6f4c, { 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb426, gbc.sp());
        EXPECT(0x6f4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 036D
        gbc.setState(0xce80, 0x5ab3, 0xd3c0, 0x427a, 0x579d, 0xdd8, 0x1, 0x0);
        gbc.writeMem(0xce80, { 0x65 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5ab3, gbc.sp());
        EXPECT(0xce81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xce80));
        // 65 036E
        gbc.setState(0x8e09, 0x1815, 0x95c0, 0x5ba7, 0x3b02, 0x5097, 0x1, 0x0);
        gbc.writeMem(0x8e09, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0x8e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8e09));
        // 65 036F
        gbc.setState(0xd7ba, 0x151a, 0xe5e0, 0x124, 0x1b31, 0x602a, 0x1, 0x0);
        gbc.writeMem(0xd7ba, { 0x65 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x151a, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd7ba));
        // 65 0370
        gbc.setState(0xa7e8, 0x7377, 0x43c0, 0xa60, 0xca21, 0x1e8d, 0x0, 0x1);
        gbc.writeMem(0xa7e8, { 0x65 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7377, gbc.sp());
        EXPECT(0xa7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa7e8));
        // 65 0371
        gbc.setState(0x20eb, 0x83eb, 0xda10, 0x6494, 0x77c6, 0xfdbc, 0x1, 0x0);
        gbc.writeMem(0x20eb, { 0x65 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0x20ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0372
        gbc.setState(0x704c, 0xc945, 0x1230, 0xdef3, 0xb486, 0x6e6b, 0x0, 0x1);
        gbc.writeMem(0x704c, { 0x65 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x704d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0373
        gbc.setState(0x95f8, 0xc874, 0x47d0, 0x6b99, 0xa978, 0x43b7, 0x1, 0x1);
        gbc.writeMem(0x95f8, { 0x65 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc874, gbc.sp());
        EXPECT(0x95f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x95f8));
        // 65 0374
        gbc.setState(0xeca, 0xd007, 0x7690, 0xed1a, 0x2bb2, 0x2a98, 0x0, 0x1);
        gbc.writeMem(0xeca, { 0x65 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd007, gbc.sp());
        EXPECT(0xecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0375
        gbc.setState(0xa942, 0x6ec5, 0x8f60, 0x88f9, 0x1de6, 0x6df9, 0x1, 0x1);
        gbc.writeMem(0xa942, { 0x65 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6ec5, gbc.sp());
        EXPECT(0xa943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa942));
        // 65 0376
        gbc.setState(0x7415, 0xa225, 0x160, 0x5f0e, 0xa9c3, 0xe695, 0x0, 0x0);
        gbc.writeMem(0x7415, { 0x65 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa225, gbc.sp());
        EXPECT(0x7416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0377
        gbc.setState(0x7086, 0x6f1b, 0xfc90, 0xd503, 0x2238, 0x919c, 0x1, 0x1);
        gbc.writeMem(0x7086, { 0x65 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6f1b, gbc.sp());
        EXPECT(0x7087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0378
        gbc.setState(0x7f85, 0xc5f0, 0xa540, 0x1bda, 0xf7dd, 0xcf93, 0x1, 0x1);
        gbc.writeMem(0x7f85, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xc5f0, gbc.sp());
        EXPECT(0x7f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0379
        gbc.setState(0xa572, 0x4f56, 0x5170, 0xb978, 0x1303, 0x9f2, 0x0, 0x0);
        gbc.writeMem(0xa572, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4f56, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa572));
        // 65 037A
        gbc.setState(0x4020, 0xeb34, 0xa5c0, 0x16ca, 0x5b4f, 0x5594, 0x0, 0x1);
        gbc.writeMem(0x4020, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeb34, gbc.sp());
        EXPECT(0x4021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 037B
        gbc.setState(0x3db7, 0xc936, 0xf330, 0xad6e, 0xc407, 0x9c0a, 0x1, 0x0);
        gbc.writeMem(0x3db7, { 0x65 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc936, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 037C
        gbc.setState(0x5e10, 0x5f67, 0xcc20, 0xb959, 0x92dc, 0x60d2, 0x0, 0x1);
        gbc.writeMem(0x5e10, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5f67, gbc.sp());
        EXPECT(0x5e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 037D
        gbc.setState(0x94fe, 0xa1a8, 0xf260, 0x6cfa, 0x3282, 0xf9ca, 0x0, 0x1);
        gbc.writeMem(0x94fe, { 0x65 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa1a8, gbc.sp());
        EXPECT(0x94ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x94fe));
        // 65 037E
        gbc.setState(0x900f, 0x166b, 0xb130, 0x8425, 0xf9ca, 0x42d6, 0x1, 0x1);
        gbc.writeMem(0x900f, { 0x65 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x166b, gbc.sp());
        EXPECT(0x9010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x900f));
        // 65 037F
        gbc.setState(0xcd65, 0x4def, 0x6f50, 0x4a62, 0x504c, 0xe74c, 0x0, 0x1);
        gbc.writeMem(0xcd65, { 0x65 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4def, gbc.sp());
        EXPECT(0xcd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcd65));
        // 65 0380
        gbc.setState(0x104a, 0x9430, 0xcdc0, 0xa743, 0x7e56, 0xd491, 0x0, 0x0);
        gbc.writeMem(0x104a, { 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0x104b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0381
        gbc.setState(0x8a88, 0x36a4, 0x9ba0, 0xf28d, 0x1d92, 0x6059, 0x0, 0x0);
        gbc.writeMem(0x8a88, { 0x65 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x36a4, gbc.sp());
        EXPECT(0x8a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8a88));
        // 65 0382
        gbc.setState(0x1e95, 0xdcef, 0xc3d0, 0x7ca4, 0x6242, 0x9dc1, 0x1, 0x1);
        gbc.writeMem(0x1e95, { 0x65 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xdcef, gbc.sp());
        EXPECT(0x1e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0383
        gbc.setState(0xe116, 0xd104, 0x7980, 0x20a5, 0xd07a, 0x70bc, 0x0, 0x1);
        gbc.writeMem(0xe116, { 0x65 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd104, gbc.sp());
        EXPECT(0xe117, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe116));
        // 65 0384
        gbc.setState(0x841e, 0xd1d9, 0x95e0, 0xbf2c, 0x42f6, 0x68b, 0x1, 0x0);
        gbc.writeMem(0x841e, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd1d9, gbc.sp());
        EXPECT(0x841f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x841e));
        // 65 0385
        gbc.setState(0x3da2, 0xba77, 0x3cc0, 0xbe3, 0x8ddd, 0xbfbb, 0x0, 0x1);
        gbc.writeMem(0x3da2, { 0x65 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xba77, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0386
        gbc.setState(0x60a, 0xbf61, 0x2f20, 0x65a6, 0x6c5d, 0x5321, 0x0, 0x0);
        gbc.writeMem(0x60a, { 0x65 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbf61, gbc.sp());
        EXPECT(0x60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0387
        gbc.setState(0x6d2a, 0xabd7, 0x8e20, 0x3224, 0x6b34, 0xa83a, 0x0, 0x0);
        gbc.writeMem(0x6d2a, { 0x65 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0x6d2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0388
        gbc.setState(0x13d7, 0x4c5b, 0xc80, 0x12b9, 0x68af, 0xac7f, 0x1, 0x0);
        gbc.writeMem(0x13d7, { 0x65 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4c5b, gbc.sp());
        EXPECT(0x13d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 0389
        gbc.setState(0x6505, 0xbf32, 0x9aa0, 0x75dc, 0x5699, 0xb3fc, 0x0, 0x1);
        gbc.writeMem(0x6505, { 0x65 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbf32, gbc.sp());
        EXPECT(0x6506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 038A
        gbc.setState(0xa036, 0xfd37, 0x7e50, 0x1430, 0x1dc3, 0x5fb0, 0x1, 0x1);
        gbc.writeMem(0xa036, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfd37, gbc.sp());
        EXPECT(0xa037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa036));
        // 65 038B
        gbc.setState(0x4aa7, 0x6558, 0x9540, 0x6e7e, 0x29ab, 0xb19f, 0x1, 0x1);
        gbc.writeMem(0x4aa7, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6558, gbc.sp());
        EXPECT(0x4aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 038C
        gbc.setState(0x5e9c, 0x7ed0, 0xbd00, 0x70dd, 0x9d3e, 0x9553, 0x0, 0x0);
        gbc.writeMem(0x5e9c, { 0x65 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7ed0, gbc.sp());
        EXPECT(0x5e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 038D
        gbc.setState(0xafe8, 0xd24c, 0xf520, 0xacb4, 0xfd72, 0x69c0, 0x1, 0x0);
        gbc.writeMem(0xafe8, { 0x65 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd24c, gbc.sp());
        EXPECT(0xafe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xafe8));
        // 65 038E
        gbc.setState(0xb693, 0xf73, 0x80f0, 0x2f9a, 0xd5fd, 0x6f43, 0x1, 0x0);
        gbc.writeMem(0xb693, { 0x65 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf73, gbc.sp());
        EXPECT(0xb694, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb693));
        // 65 038F
        gbc.setState(0xd422, 0xcb8d, 0x8590, 0xbdc6, 0xe98e, 0x3b25, 0x1, 0x1);
        gbc.writeMem(0xd422, { 0x65 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xcb8d, gbc.sp());
        EXPECT(0xd423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd422));
        // 65 0390
        gbc.setState(0x9c08, 0xec95, 0x64f0, 0xa183, 0xf00a, 0xe7b7, 0x1, 0x0);
        gbc.writeMem(0x9c08, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xec95, gbc.sp());
        EXPECT(0x9c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9c08));
        // 65 0391
        gbc.setState(0xa172, 0x3248, 0xa430, 0x7841, 0x1b23, 0x5027, 0x1, 0x1);
        gbc.writeMem(0xa172, { 0x65 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0xa173, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa172));
        // 65 0392
        gbc.setState(0xccfc, 0x4439, 0xa550, 0xa3e2, 0xa0a3, 0x68a1, 0x0, 0x0);
        gbc.writeMem(0xccfc, { 0x65 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x4439, gbc.sp());
        EXPECT(0xccfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xccfc));
        // 65 0393
        gbc.setState(0xc94b, 0x3770, 0x3530, 0x1fea, 0x3214, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0xc94b, { 0x65 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3770, gbc.sp());
        EXPECT(0xc94c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc94b));
        // 65 0394
        gbc.setState(0x282f, 0xdc1c, 0x8270, 0x934d, 0x91c5, 0xdc80, 0x1, 0x1);
        gbc.writeMem(0x282f, { 0x65 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdc1c, gbc.sp());
        EXPECT(0x2830, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 0395
        gbc.setState(0xa15f, 0x91c6, 0xccd0, 0x6adc, 0x9b50, 0xfb6, 0x0, 0x0);
        gbc.writeMem(0xa15f, { 0x65 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0xa160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa15f));
        // 65 0396
        gbc.setState(0xa976, 0x4a22, 0xdf90, 0x1da6, 0x5475, 0x7cd1, 0x0, 0x1);
        gbc.writeMem(0xa976, { 0x65 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x4a22, gbc.sp());
        EXPECT(0xa977, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa976));
        // 65 0398
        gbc.setState(0xba5c, 0xe1b1, 0x75b0, 0x3b8c, 0x677b, 0x65ae, 0x1, 0x0);
        gbc.writeMem(0xba5c, { 0x65 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe1b1, gbc.sp());
        EXPECT(0xba5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xba5c));
        // 65 0399
        gbc.setState(0xebd7, 0xc65c, 0x75c0, 0xdd00, 0xec9c, 0x64f3, 0x1, 0x1);
        gbc.writeMem(0xebd7, { 0x65 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xc65c, gbc.sp());
        EXPECT(0xebd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xebd7));
        // 65 039A
        gbc.setState(0xa1b8, 0x53c7, 0x2f80, 0xdeec, 0x9d5d, 0x3d4d, 0x1, 0x1);
        gbc.writeMem(0xa1b8, { 0x65 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x53c7, gbc.sp());
        EXPECT(0xa1b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa1b8));
        // 65 039B
        gbc.setState(0x3b74, 0x1fa2, 0x220, 0x7760, 0xf2c8, 0x8c6, 0x0, 0x0);
        gbc.writeMem(0x3b74, { 0x65 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1fa2, gbc.sp());
        EXPECT(0x3b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 039D
        gbc.setState(0x4caa, 0x5a4a, 0xac30, 0x8989, 0xcc8a, 0x78c8, 0x0, 0x1);
        gbc.writeMem(0x4caa, { 0x65 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5a4a, gbc.sp());
        EXPECT(0x4cab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 039E
        gbc.setState(0x8c16, 0xae3f, 0xcea0, 0x6d3a, 0x9dff, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x8c16, { 0x65 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xae3f, gbc.sp());
        EXPECT(0x8c17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8c16));
        // 65 039F
        gbc.setState(0x98d3, 0x68d1, 0x66c0, 0xde8d, 0x3a93, 0x673c, 0x0, 0x0);
        gbc.writeMem(0x98d3, { 0x65 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x68d1, gbc.sp());
        EXPECT(0x98d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x98d3));
        // 65 03A0
        gbc.setState(0xa25e, 0x2872, 0x5b00, 0xaa8c, 0x1f04, 0x29a6, 0x0, 0x1);
        gbc.writeMem(0xa25e, { 0x65 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0xa25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa25e));
        // 65 03A1
        gbc.setState(0xcf5e, 0x2d2c, 0x9d50, 0xad13, 0x742f, 0xb112, 0x1, 0x1);
        gbc.writeMem(0xcf5e, { 0x65 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2d2c, gbc.sp());
        EXPECT(0xcf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcf5e));
        // 65 03A2
        gbc.setState(0xac40, 0xc05a, 0x2e00, 0x98d7, 0xa6af, 0x328e, 0x1, 0x1);
        gbc.writeMem(0xac40, { 0x65 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0xac41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xac40));
        // 65 03A3
        gbc.setState(0x4023, 0x8c75, 0x1360, 0x5e2b, 0xc67f, 0xa9cc, 0x1, 0x1);
        gbc.writeMem(0x4023, { 0x65 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8c75, gbc.sp());
        EXPECT(0x4024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03A4
        gbc.setState(0xe051, 0x1016, 0x1bf0, 0x6ef, 0xc5f4, 0x6129, 0x0, 0x0);
        gbc.writeMem(0xe051, { 0x65 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1016, gbc.sp());
        EXPECT(0xe052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe051));
        // 65 03A5
        gbc.setState(0x7c8d, 0x6e9f, 0xba20, 0xf436, 0x23ce, 0x5c04, 0x1, 0x0);
        gbc.writeMem(0x7c8d, { 0x65 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6e9f, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03A7
        gbc.setState(0xc9d7, 0xa9cb, 0x6470, 0x7f19, 0xb9e6, 0x37f8, 0x0, 0x0);
        gbc.writeMem(0xc9d7, { 0x65 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa9cb, gbc.sp());
        EXPECT(0xc9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc9d7));
        // 65 03A8
        gbc.setState(0xd390, 0x43e5, 0xbea0, 0x6e4b, 0x3532, 0x220f, 0x0, 0x0);
        gbc.writeMem(0xd390, { 0x65 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x43e5, gbc.sp());
        EXPECT(0xd391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd390));
        // 65 03A9
        gbc.setState(0x1ae9, 0x8459, 0x7e10, 0x78b, 0x5e8b, 0xa0cf, 0x0, 0x1);
        gbc.writeMem(0x1ae9, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0x1aea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03AA
        gbc.setState(0x37c9, 0x35bb, 0xd510, 0x1fbb, 0x9e4e, 0x1ccc, 0x0, 0x1);
        gbc.writeMem(0x37c9, { 0x65 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x35bb, gbc.sp());
        EXPECT(0x37ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03AB
        gbc.setState(0x66f3, 0xf65, 0x48f0, 0xa9cc, 0xb874, 0x6608, 0x1, 0x0);
        gbc.writeMem(0x66f3, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf65, gbc.sp());
        EXPECT(0x66f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03AC
        gbc.setState(0x8ebf, 0x4b07, 0x2b50, 0x1d3e, 0x36bb, 0xee3a, 0x1, 0x0);
        gbc.writeMem(0x8ebf, { 0x65 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b07, gbc.sp());
        EXPECT(0x8ec0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8ebf));
        // 65 03AD
        gbc.setState(0xce66, 0x72ba, 0x6c90, 0x44c4, 0x6b7d, 0x4bb9, 0x0, 0x1);
        gbc.writeMem(0xce66, { 0x65 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x72ba, gbc.sp());
        EXPECT(0xce67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xce66));
        // 65 03AE
        gbc.setState(0x3b97, 0xdacc, 0xe940, 0xc2e5, 0xb69c, 0x93d0, 0x1, 0x1);
        gbc.writeMem(0x3b97, { 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xdacc, gbc.sp());
        EXPECT(0x3b98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03AF
        gbc.setState(0x3ee3, 0xc903, 0x15f0, 0x2c65, 0x5a92, 0xa3e6, 0x0, 0x1);
        gbc.writeMem(0x3ee3, { 0x65 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc903, gbc.sp());
        EXPECT(0x3ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03B0
        gbc.setState(0xa721, 0x69a3, 0x9c50, 0x7cdf, 0xa5ea, 0xb7cb, 0x0, 0x0);
        gbc.writeMem(0xa721, { 0x65 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x69a3, gbc.sp());
        EXPECT(0xa722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa721));
        // 65 03B1
        gbc.setState(0x3b50, 0x93f8, 0x4660, 0xe2de, 0x941c, 0x6ba, 0x1, 0x0);
        gbc.writeMem(0x3b50, { 0x65 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x93f8, gbc.sp());
        EXPECT(0x3b51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03B2
        gbc.setState(0x7456, 0x58b0, 0xe1a0, 0x13ad, 0x798e, 0x1372, 0x1, 0x0);
        gbc.writeMem(0x7456, { 0x65 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x58b0, gbc.sp());
        EXPECT(0x7457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03B3
        gbc.setState(0x4b68, 0x4235, 0x6b60, 0x330e, 0x10fd, 0x62fa, 0x1, 0x1);
        gbc.writeMem(0x4b68, { 0x65 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4235, gbc.sp());
        EXPECT(0x4b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03B4
        gbc.setState(0xa48b, 0xc8b2, 0x7ef0, 0x4f14, 0x7f6a, 0xcf45, 0x0, 0x1);
        gbc.writeMem(0xa48b, { 0x65 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0xa48c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa48b));
        // 65 03B5
        gbc.setState(0xeab5, 0x96ab, 0xe7c0, 0x1c05, 0x90a, 0x6740, 0x0, 0x1);
        gbc.writeMem(0xeab5, { 0x65 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x96ab, gbc.sp());
        EXPECT(0xeab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xeab5));
        // 65 03B6
        gbc.setState(0x2d04, 0x7d98, 0x5170, 0x84e5, 0xec2c, 0xe710, 0x0, 0x1);
        gbc.writeMem(0x2d04, { 0x65 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7d98, gbc.sp());
        EXPECT(0x2d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03B7
        gbc.setState(0x3ccb, 0xdaf8, 0x7bc0, 0x31db, 0x60d2, 0x8c02, 0x0, 0x0);
        gbc.writeMem(0x3ccb, { 0x65 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdaf8, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03B8
        gbc.setState(0x2dd6, 0x4e5a, 0xe2a0, 0x2b86, 0x1e80, 0x6ae4, 0x0, 0x1);
        gbc.writeMem(0x2dd6, { 0x65 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0x2dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03B9
        gbc.setState(0x5dd5, 0xfea5, 0x4820, 0xd8f0, 0x73c1, 0xc8d7, 0x0, 0x1);
        gbc.writeMem(0x5dd5, { 0x65 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfea5, gbc.sp());
        EXPECT(0x5dd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03BA
        gbc.setState(0x407f, 0xb0e8, 0x1910, 0xbd3b, 0xfe97, 0x38f2, 0x0, 0x0);
        gbc.writeMem(0x407f, { 0x65 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb0e8, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03BB
        gbc.setState(0x2b7d, 0xc9d3, 0x6ad0, 0xff41, 0x8fe8, 0x6f9a, 0x1, 0x1);
        gbc.writeMem(0x2b7d, { 0x65 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc9d3, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03BC
        gbc.setState(0xb2da, 0xf40e, 0xc120, 0xe540, 0x9934, 0x885b, 0x1, 0x1);
        gbc.writeMem(0xb2da, { 0x65 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf40e, gbc.sp());
        EXPECT(0xb2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb2da));
        // 65 03BD
        gbc.setState(0x8899, 0x2b89, 0x7d50, 0x33f2, 0x2ae0, 0xd93, 0x1, 0x1);
        gbc.writeMem(0x8899, { 0x65 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0x889a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8899));
        // 65 03BE
        gbc.setState(0x3dd1, 0xdd37, 0x3670, 0xfbe5, 0xdfbb, 0x83b2, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0x65 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xdd37, gbc.sp());
        EXPECT(0x3dd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03BF
        gbc.setState(0xb8cc, 0xf7c7, 0x1650, 0xea96, 0x9afc, 0x26ea, 0x0, 0x1);
        gbc.writeMem(0xb8cc, { 0x65 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0xb8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xb8cc));
        // 65 03C0
        gbc.setState(0x5671, 0x1a8c, 0xf2f0, 0x6d0b, 0x4767, 0x1f9f, 0x1, 0x1);
        gbc.writeMem(0x5671, { 0x65 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x1a8c, gbc.sp());
        EXPECT(0x5672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03C1
        gbc.setState(0x30fd, 0x2907, 0xca10, 0x3fcb, 0xcbbd, 0xc7ff, 0x1, 0x0);
        gbc.writeMem(0x30fd, { 0x65 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2907, gbc.sp());
        EXPECT(0x30fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03C2
        gbc.setState(0xc45f, 0x7c0a, 0x5e30, 0x36b, 0xb634, 0xdce3, 0x1, 0x1);
        gbc.writeMem(0xc45f, { 0x65 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7c0a, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc45f));
        // 65 03C3
        gbc.setState(0xa45d, 0x3cfd, 0x7b20, 0xad6f, 0x7664, 0x739d, 0x1, 0x0);
        gbc.writeMem(0xa45d, { 0x65 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3cfd, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa45d));
        // 65 03C4
        gbc.setState(0x9ef6, 0x79d6, 0xd8a0, 0xd9e1, 0xcc9d, 0xc398, 0x1, 0x1);
        gbc.writeMem(0x9ef6, { 0x65 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x79d6, gbc.sp());
        EXPECT(0x9ef7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9ef6));
        // 65 03C5
        gbc.setState(0x9044, 0xab9c, 0xb940, 0xb64f, 0x548, 0x3c21, 0x0, 0x1);
        gbc.writeMem(0x9044, { 0x65 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xab9c, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9044));
        // 65 03C6
        gbc.setState(0x3bd5, 0x715a, 0x62a0, 0x91f1, 0x98f8, 0x5b60, 0x0, 0x1);
        gbc.writeMem(0x3bd5, { 0x65 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x715a, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03C7
        gbc.setState(0x240b, 0x362, 0x7c60, 0xf834, 0x9971, 0x2a7a, 0x0, 0x1);
        gbc.writeMem(0x240b, { 0x65 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x240c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03C8
        gbc.setState(0x2c3b, 0xd97, 0xa6c0, 0xe141, 0xa879, 0xa17a, 0x1, 0x0);
        gbc.writeMem(0x2c3b, { 0x65 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd97, gbc.sp());
        EXPECT(0x2c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03C9
        gbc.setState(0x646e, 0x908d, 0x2410, 0x970c, 0xb56d, 0xdbe3, 0x1, 0x0);
        gbc.writeMem(0x646e, { 0x65 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03CA
        gbc.setState(0xa258, 0xb0e9, 0x2010, 0xd925, 0x3b66, 0xdb03, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0x65 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb0e9, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xa258));
        // 65 03CB
        gbc.setState(0x66c3, 0xfd, 0x5280, 0x2cdd, 0x3aeb, 0x22e1, 0x1, 0x1);
        gbc.writeMem(0x66c3, { 0x65 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xfd, gbc.sp());
        EXPECT(0x66c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03CC
        gbc.setState(0x8392, 0xb212, 0xd920, 0x251d, 0xa413, 0x319b, 0x0, 0x0);
        gbc.writeMem(0x8392, { 0x65 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb212, gbc.sp());
        EXPECT(0x8393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8392));
        // 65 03CD
        gbc.setState(0x3432, 0x15b2, 0xada0, 0xaaa4, 0xb94a, 0xbd23, 0x1, 0x1);
        gbc.writeMem(0x3432, { 0x65 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x15b2, gbc.sp());
        EXPECT(0x3433, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03CE
        gbc.setState(0x6bde, 0x650, 0xb3d0, 0x6018, 0x340f, 0x3ccc, 0x1, 0x0);
        gbc.writeMem(0x6bde, { 0x65 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x650, gbc.sp());
        EXPECT(0x6bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03CF
        gbc.setState(0x67f0, 0x17c2, 0x1a90, 0x3089, 0xc9cb, 0xe0d6, 0x1, 0x0);
        gbc.writeMem(0x67f0, { 0x65 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x17c2, gbc.sp());
        EXPECT(0x67f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03D0
        gbc.setState(0x646e, 0xc8ea, 0xe60, 0x76bc, 0x8c8f, 0x75f7, 0x0, 0x0);
        gbc.writeMem(0x646e, { 0x65 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc8ea, gbc.sp());
        EXPECT(0x646f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03D1
        gbc.setState(0xd5b1, 0x3325, 0x9b40, 0x47b2, 0xb53a, 0x576b, 0x1, 0x1);
        gbc.writeMem(0xd5b1, { 0x65 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3325, gbc.sp());
        EXPECT(0xd5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd5b1));
        // 65 03D2
        gbc.setState(0x49a2, 0xeb2b, 0xeb70, 0x796, 0xad5f, 0xf8d6, 0x1, 0x1);
        gbc.writeMem(0x49a2, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeb2b, gbc.sp());
        EXPECT(0x49a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03D3
        gbc.setState(0xbda5, 0xaf4d, 0xa770, 0x56e2, 0x5a1b, 0x781b, 0x1, 0x1);
        gbc.writeMem(0xbda5, { 0x65 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaf4d, gbc.sp());
        EXPECT(0xbda6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xbda5));
        // 65 03D4
        gbc.setState(0x6508, 0x31cc, 0x2fb0, 0xdec1, 0xb9bb, 0xfc79, 0x0, 0x1);
        gbc.writeMem(0x6508, { 0x65 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x31cc, gbc.sp());
        EXPECT(0x6509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03D5
        gbc.setState(0xc4fe, 0xe506, 0xe320, 0x3687, 0x74cc, 0x4f7e, 0x1, 0x0);
        gbc.writeMem(0xc4fe, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0xc4ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc4fe));
        // 65 03D6
        gbc.setState(0x78cb, 0x7f28, 0x9f50, 0x228d, 0x7fb0, 0xa70, 0x1, 0x0);
        gbc.writeMem(0x78cb, { 0x65 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7f28, gbc.sp());
        EXPECT(0x78cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03D7
        gbc.setState(0x45c9, 0xe417, 0x4060, 0x36d6, 0x1bfd, 0xcc73, 0x1, 0x0);
        gbc.writeMem(0x45c9, { 0x65 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe417, gbc.sp());
        EXPECT(0x45ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03D8
        gbc.setState(0x54d4, 0xc77d, 0x8160, 0x20d0, 0xbe4e, 0x1d6b, 0x1, 0x0);
        gbc.writeMem(0x54d4, { 0x65 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc77d, gbc.sp());
        EXPECT(0x54d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03D9
        gbc.setState(0x83d2, 0xc259, 0xeb00, 0x73e7, 0x1bd4, 0xb89, 0x1, 0x1);
        gbc.writeMem(0x83d2, { 0x65 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xc259, gbc.sp());
        EXPECT(0x83d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x83d2));
        // 65 03DA
        gbc.setState(0x8782, 0xaa97, 0xd510, 0x9e99, 0x6657, 0x5a60, 0x1, 0x1);
        gbc.writeMem(0x8782, { 0x65 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xaa97, gbc.sp());
        EXPECT(0x8783, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8782));
        // 65 03DB
        gbc.setState(0x27d9, 0x9d3, 0x6d30, 0x44be, 0x80cc, 0xb074, 0x0, 0x0);
        gbc.writeMem(0x27d9, { 0x65 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9d3, gbc.sp());
        EXPECT(0x27da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03DC
        gbc.setState(0x475e, 0x893e, 0x14d0, 0xc1b, 0x5541, 0xd56b, 0x0, 0x0);
        gbc.writeMem(0x475e, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x893e, gbc.sp());
        EXPECT(0x475f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03DD
        gbc.setState(0x4fb4, 0xff76, 0x1c00, 0x7455, 0xc6ba, 0xef1d, 0x0, 0x1);
        gbc.writeMem(0x4fb4, { 0x65 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xff76, gbc.sp());
        EXPECT(0x4fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 65 03DE
        gbc.setState(0x9921, 0xf5cc, 0xfa90, 0xe00f, 0x45b9, 0x2e4e, 0x0, 0x1);
        gbc.writeMem(0x9921, { 0x65 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf5cc, gbc.sp());
        EXPECT(0x9922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x9921));
        // 65 03DF
        gbc.setState(0x2019, 0x4f9d, 0x1410, 0xc357, 0x2a95, 0xa138, 0x0, 0x0);
        gbc.writeMem(0x2019, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4f9d, gbc.sp());
        EXPECT(0x201a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03E0
        gbc.setState(0x1336, 0xa21b, 0xe970, 0xbc0, 0xfd47, 0xd99, 0x1, 0x0);
        gbc.writeMem(0x1336, { 0x65 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xa21b, gbc.sp());
        EXPECT(0x1337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03E1
        gbc.setState(0xe830, 0x7158, 0x14e0, 0x6faa, 0xc37f, 0x5e54, 0x0, 0x0);
        gbc.writeMem(0xe830, { 0x65 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0xe831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe830));
        // 65 03E2
        gbc.setState(0xda27, 0xf850, 0x95a0, 0x7f68, 0x933f, 0x19cb, 0x1, 0x0);
        gbc.writeMem(0xda27, { 0x65 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf850, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xda27));
        // 65 03E3
        gbc.setState(0x1249, 0x5069, 0xa630, 0x83aa, 0xe258, 0x3622, 0x0, 0x0);
        gbc.writeMem(0x1249, { 0x65 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5069, gbc.sp());
        EXPECT(0x124a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03E4
        gbc.setState(0x59c9, 0x8a0e, 0xcdb0, 0x7090, 0x4dd1, 0xb1ad, 0x1, 0x0);
        gbc.writeMem(0x59c9, { 0x65 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8a0e, gbc.sp());
        EXPECT(0x59ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 65 03E5
        gbc.setState(0x8380, 0x857e, 0xe450, 0x8efd, 0xd9d9, 0x4da, 0x1, 0x1);
        gbc.writeMem(0x8380, { 0x65 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x857e, gbc.sp());
        EXPECT(0x8381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8380));
        // 65 03E7
        gbc.setState(0x6e39, 0x9240, 0x6c10, 0xac27, 0xb6c, 0x1c4b, 0x1, 0x1);
        gbc.writeMem(0x6e39, { 0x65 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9240, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
