    TEST(gbcemu, opcode_cb_93) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 93 0000
        gbc.setState(0x688a, 0xc940, 0xd2d0, 0x4a54, 0xae2d, 0xaa48, 0x0, 0x0);
        gbc.writeMem(0x688a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xc940);
        EXPECT(gbc.pc(), 0x688c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0001
        gbc.setState(0xc31f, 0x9480, 0xf6e0, 0x3d15, 0xe55d, 0x2640, 0x0, 0x0);
        gbc.writeMem(0xc31f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x9480);
        EXPECT(gbc.pc(), 0xc321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31f), 0xcb);
        EXPECT(gbc.readMem(0xc320), 0x93);
        // CB 93 0002
        gbc.setState(0x2621, 0xbea7, 0x2c20, 0xf95c, 0x2dc5, 0x292c, 0x0, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbea7);
        EXPECT(gbc.pc(), 0x2623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0003
        gbc.setState(0xe5cb, 0xcd62, 0x6970, 0xbcf0, 0x6c3f, 0x3de5, 0x0, 0x1);
        gbc.writeMem(0xe5cb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcd62);
        EXPECT(gbc.pc(), 0xe5cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5cb), 0xcb);
        EXPECT(gbc.readMem(0xe5cc), 0x93);
        // CB 93 0004
        gbc.setState(0x5952, 0xad88, 0xa760, 0xb586, 0x7e66, 0x732f, 0x1, 0x1);
        gbc.writeMem(0x5952, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xad88);
        EXPECT(gbc.pc(), 0x5954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0005
        gbc.setState(0xb3e1, 0x83e2, 0x9210, 0x125f, 0x45d6, 0x25bf, 0x1, 0x0);
        gbc.writeMem(0xb3e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0xb3e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e1), 0xcb);
        EXPECT(gbc.readMem(0xb3e2), 0x93);
        // CB 93 0006
        gbc.setState(0xc66b, 0x9647, 0x7880, 0xf6ec, 0x4190, 0xe8a8, 0x0, 0x0);
        gbc.writeMem(0xc66b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x9647);
        EXPECT(gbc.pc(), 0xc66d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc66b), 0xcb);
        EXPECT(gbc.readMem(0xc66c), 0x93);
        // CB 93 0007
        gbc.setState(0x36cd, 0xe8a9, 0x13c0, 0xa8f2, 0x3fc8, 0xa636, 0x1, 0x0);
        gbc.writeMem(0x36cd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe8a9);
        EXPECT(gbc.pc(), 0x36cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0008
        gbc.setState(0x64fe, 0xe9e7, 0xb0b0, 0xe89a, 0x55e0, 0xace6, 0x0, 0x1);
        gbc.writeMem(0x64fe, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe9e7);
        EXPECT(gbc.pc(), 0x6500);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0009
        gbc.setState(0x36a0, 0xf9ce, 0x5ed0, 0x29a1, 0x412d, 0x5766, 0x1, 0x1);
        gbc.writeMem(0x36a0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf9ce);
        EXPECT(gbc.pc(), 0x36a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 000A
        gbc.setState(0xd535, 0x1fb, 0x66e0, 0xb4f, 0x2726, 0xa140, 0x0, 0x1);
        gbc.writeMem(0xd535, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1fb);
        EXPECT(gbc.pc(), 0xd537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd535), 0xcb);
        EXPECT(gbc.readMem(0xd536), 0x93);
        // CB 93 000B
        gbc.setState(0xd8d2, 0xe33c, 0xe4a0, 0x9db9, 0x7f96, 0x9c4a, 0x1, 0x1);
        gbc.writeMem(0xd8d2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe33c);
        EXPECT(gbc.pc(), 0xd8d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d2), 0xcb);
        EXPECT(gbc.readMem(0xd8d3), 0x93);
        // CB 93 000C
        gbc.setState(0xa144, 0xfb48, 0xbc30, 0x71ad, 0x8974, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0xa144, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfb48);
        EXPECT(gbc.pc(), 0xa146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa144), 0xcb);
        EXPECT(gbc.readMem(0xa145), 0x93);
        // CB 93 000D
        gbc.setState(0x7a9d, 0x9618, 0xae90, 0x7edb, 0x8af, 0x4ce7, 0x1, 0x0);
        gbc.writeMem(0x7a9d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9618);
        EXPECT(gbc.pc(), 0x7a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 000E
        gbc.setState(0x1c39, 0xde7f, 0x8d00, 0x8b9b, 0x5f42, 0x7739, 0x1, 0x1);
        gbc.writeMem(0x1c39, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xde7f);
        EXPECT(gbc.pc(), 0x1c3b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 000F
        gbc.setState(0xdc55, 0xbd09, 0xe460, 0x6803, 0xceff, 0x4fe0, 0x0, 0x1);
        gbc.writeMem(0xdc55, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xbd09);
        EXPECT(gbc.pc(), 0xdc57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc55), 0xcb);
        EXPECT(gbc.readMem(0xdc56), 0x93);
        // CB 93 0010
        gbc.setState(0x7fce, 0x4073, 0x2280, 0x3b, 0x276, 0xb047, 0x1, 0x1);
        gbc.writeMem(0x7fce, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4073);
        EXPECT(gbc.pc(), 0x7fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0011
        gbc.setState(0xe3f9, 0x41ed, 0xdd40, 0x2fd5, 0x4554, 0xda27, 0x0, 0x1);
        gbc.writeMem(0xe3f9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x41ed);
        EXPECT(gbc.pc(), 0xe3fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3f9), 0xcb);
        EXPECT(gbc.readMem(0xe3fa), 0x93);
        // CB 93 0013
        gbc.setState(0x433, 0xa81c, 0xc3c0, 0x1e35, 0xcae2, 0x423a, 0x1, 0x1);
        gbc.writeMem(0x433, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa81c);
        EXPECT(gbc.pc(), 0x435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0014
        gbc.setState(0x1e85, 0x105f, 0x6990, 0x3749, 0x543a, 0x6d70, 0x1, 0x0);
        gbc.writeMem(0x1e85, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x105f);
        EXPECT(gbc.pc(), 0x1e87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0015
        gbc.setState(0x8553, 0x3c10, 0xea80, 0x10f1, 0xced0, 0x24fd, 0x0, 0x0);
        gbc.writeMem(0x8553, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3c10);
        EXPECT(gbc.pc(), 0x8555);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8553), 0xcb);
        EXPECT(gbc.readMem(0x8554), 0x93);
        // CB 93 0016
        gbc.setState(0xcbc, 0x78c1, 0x5c40, 0x8e91, 0x2db8, 0x7497, 0x1, 0x0);
        gbc.writeMem(0xcbc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x78c1);
        EXPECT(gbc.pc(), 0xcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0017
        gbc.setState(0x72d, 0xcbc, 0xfd80, 0x58cf, 0x6f7a, 0x24de, 0x0, 0x1);
        gbc.writeMem(0x72d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xcbc);
        EXPECT(gbc.pc(), 0x72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0018
        gbc.setState(0x16f8, 0xd917, 0x5b80, 0x4272, 0x9c56, 0x27f8, 0x0, 0x0);
        gbc.writeMem(0x16f8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd917);
        EXPECT(gbc.pc(), 0x16fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 001A
        gbc.setState(0x3c29, 0xdc22, 0x51c0, 0x1456, 0xb187, 0x1216, 0x0, 0x0);
        gbc.writeMem(0x3c29, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xdc22);
        EXPECT(gbc.pc(), 0x3c2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 001C
        gbc.setState(0x7447, 0x80b7, 0xb90, 0x66e9, 0xb316, 0xad6b, 0x1, 0x1);
        gbc.writeMem(0x7447, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x80b7);
        EXPECT(gbc.pc(), 0x7449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 001D
        gbc.setState(0x3aaf, 0x205b, 0xf670, 0xfcf9, 0x5154, 0xa0b2, 0x1, 0x0);
        gbc.writeMem(0x3aaf, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x205b);
        EXPECT(gbc.pc(), 0x3ab1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 001E
        gbc.setState(0x3775, 0x31d2, 0xd860, 0x608, 0x8abb, 0x7078, 0x0, 0x0);
        gbc.writeMem(0x3775, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x31d2);
        EXPECT(gbc.pc(), 0x3777);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 001F
        gbc.setState(0x7bb2, 0xab00, 0x8410, 0x3995, 0x7bd7, 0x913c, 0x0, 0x1);
        gbc.writeMem(0x7bb2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xab00);
        EXPECT(gbc.pc(), 0x7bb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0020
        gbc.setState(0xb82f, 0x3a8f, 0xadc0, 0xb686, 0xbf8e, 0x53bd, 0x0, 0x1);
        gbc.writeMem(0xb82f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3a8f);
        EXPECT(gbc.pc(), 0xb831);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82f), 0xcb);
        EXPECT(gbc.readMem(0xb830), 0x93);
        // CB 93 0021
        gbc.setState(0x5538, 0x8578, 0x7c0, 0x858c, 0x55d, 0x694e, 0x1, 0x0);
        gbc.writeMem(0x5538, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8578);
        EXPECT(gbc.pc(), 0x553a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0022
        gbc.setState(0x519f, 0x9ad4, 0x1580, 0xec9a, 0x7278, 0xd6fb, 0x0, 0x0);
        gbc.writeMem(0x519f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9ad4);
        EXPECT(gbc.pc(), 0x51a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0023
        gbc.setState(0x2f3f, 0xb92b, 0x6ec0, 0x4c09, 0x4746, 0x7a57, 0x1, 0x1);
        gbc.writeMem(0x2f3f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb92b);
        EXPECT(gbc.pc(), 0x2f41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0024
        gbc.setState(0x6a13, 0x3ac5, 0x6d90, 0xa074, 0x5634, 0xf276, 0x0, 0x0);
        gbc.writeMem(0x6a13, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3ac5);
        EXPECT(gbc.pc(), 0x6a15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0025
        gbc.setState(0xa18, 0x4f2c, 0xce70, 0xbcbe, 0x170d, 0xc4ec, 0x1, 0x1);
        gbc.writeMem(0xa18, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4f2c);
        EXPECT(gbc.pc(), 0xa1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0026
        gbc.setState(0xe543, 0x385f, 0x10d0, 0xc25a, 0xd11, 0xab45, 0x0, 0x1);
        gbc.writeMem(0xe543, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0xe545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe543), 0xcb);
        EXPECT(gbc.readMem(0xe544), 0x93);
        // CB 93 0027
        gbc.setState(0x9f5, 0x543f, 0xcde0, 0xac97, 0xf98f, 0xcde2, 0x0, 0x0);
        gbc.writeMem(0x9f5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0x9f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0029
        gbc.setState(0x97f4, 0xe8b4, 0x1c70, 0x2bcf, 0xf229, 0x48cf, 0x0, 0x0);
        gbc.writeMem(0x97f4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe8b4);
        EXPECT(gbc.pc(), 0x97f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f4), 0xcb);
        EXPECT(gbc.readMem(0x97f5), 0x93);
        // CB 93 002A
        gbc.setState(0x3732, 0x2f51, 0xfd70, 0x26d1, 0xa2d8, 0xe790, 0x1, 0x1);
        gbc.writeMem(0x3732, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x2f51);
        EXPECT(gbc.pc(), 0x3734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 002B
        gbc.setState(0xbad6, 0xcd4d, 0xc830, 0x7d15, 0x5f63, 0xb244, 0x1, 0x1);
        gbc.writeMem(0xbad6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xcd4d);
        EXPECT(gbc.pc(), 0xbad8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbad6), 0xcb);
        EXPECT(gbc.readMem(0xbad7), 0x93);
        // CB 93 002C
        gbc.setState(0x23c7, 0x5ce2, 0xda20, 0xd6c7, 0x26bd, 0xf450, 0x0, 0x1);
        gbc.writeMem(0x23c7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5ce2);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 002D
        gbc.setState(0x8f55, 0x6bc6, 0x8f80, 0xc0cb, 0xbb08, 0x79fa, 0x1, 0x0);
        gbc.writeMem(0x8f55, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6bc6);
        EXPECT(gbc.pc(), 0x8f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f55), 0xcb);
        EXPECT(gbc.readMem(0x8f56), 0x93);
        // CB 93 002E
        gbc.setState(0x8d3c, 0x955, 0x1d90, 0x3566, 0xda33, 0x76ba, 0x0, 0x1);
        gbc.writeMem(0x8d3c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x955);
        EXPECT(gbc.pc(), 0x8d3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d3c), 0xcb);
        EXPECT(gbc.readMem(0x8d3d), 0x93);
        // CB 93 002F
        gbc.setState(0x12dc, 0x6437, 0xb30, 0x86cb, 0x5d2f, 0x496e, 0x1, 0x0);
        gbc.writeMem(0x12dc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6437);
        EXPECT(gbc.pc(), 0x12de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0030
        gbc.setState(0x44e8, 0x7b00, 0xea80, 0x8976, 0x461b, 0xaf48, 0x0, 0x1);
        gbc.writeMem(0x44e8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7b00);
        EXPECT(gbc.pc(), 0x44ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0031
        gbc.setState(0x242, 0xa329, 0x2a30, 0x697b, 0x6b15, 0x65ba, 0x1, 0x1);
        gbc.writeMem(0x242, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa329);
        EXPECT(gbc.pc(), 0x244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0032
        gbc.setState(0x6e1, 0x628, 0x4040, 0x98f2, 0x59a5, 0xbe13, 0x0, 0x1);
        gbc.writeMem(0x6e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x628);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0033
        gbc.setState(0xce30, 0xd87f, 0x2280, 0x864f, 0x477d, 0xf49e, 0x0, 0x1);
        gbc.writeMem(0xce30, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd87f);
        EXPECT(gbc.pc(), 0xce32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce30), 0xcb);
        EXPECT(gbc.readMem(0xce31), 0x93);
        // CB 93 0034
        gbc.setState(0xda4a, 0x2e96, 0xd4a0, 0x6014, 0xd59d, 0xfa96, 0x0, 0x1);
        gbc.writeMem(0xda4a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2e96);
        EXPECT(gbc.pc(), 0xda4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4a), 0xcb);
        EXPECT(gbc.readMem(0xda4b), 0x93);
        // CB 93 0035
        gbc.setState(0x6570, 0x7875, 0x53c0, 0xda4e, 0x9ebd, 0xbdd, 0x1, 0x0);
        gbc.writeMem(0x6570, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7875);
        EXPECT(gbc.pc(), 0x6572);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0036
        gbc.setState(0x3bad, 0xe4fe, 0x3f70, 0x7800, 0xba56, 0xfc56, 0x1, 0x0);
        gbc.writeMem(0x3bad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe4fe);
        EXPECT(gbc.pc(), 0x3baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0037
        gbc.setState(0xdeed, 0xf054, 0x79b0, 0x4e8b, 0x274b, 0xaf37, 0x0, 0x0);
        gbc.writeMem(0xdeed, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf054);
        EXPECT(gbc.pc(), 0xdeef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeed), 0xcb);
        EXPECT(gbc.readMem(0xdeee), 0x93);
        // CB 93 0038
        gbc.setState(0x5caa, 0x18c7, 0xb290, 0xbbd1, 0x3157, 0x45ae, 0x1, 0x0);
        gbc.writeMem(0x5caa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x18c7);
        EXPECT(gbc.pc(), 0x5cac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0039
        gbc.setState(0x3592, 0x32a9, 0x6b90, 0xb561, 0x8664, 0x117, 0x0, 0x0);
        gbc.writeMem(0x3592, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x32a9);
        EXPECT(gbc.pc(), 0x3594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 003A
        gbc.setState(0x1ce3, 0x68ef, 0xb7f0, 0x2f12, 0x2c7, 0xce0f, 0x0, 0x0);
        gbc.writeMem(0x1ce3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x68ef);
        EXPECT(gbc.pc(), 0x1ce5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 003B
        gbc.setState(0x747e, 0x2104, 0x9410, 0xd4d3, 0x532f, 0x6210, 0x1, 0x0);
        gbc.writeMem(0x747e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2104);
        EXPECT(gbc.pc(), 0x7480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 003C
        gbc.setState(0x803e, 0xe8e5, 0x20d0, 0x44bf, 0x9fd, 0xb380, 0x0, 0x1);
        gbc.writeMem(0x803e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe8e5);
        EXPECT(gbc.pc(), 0x8040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x803e), 0xcb);
        EXPECT(gbc.readMem(0x803f), 0x93);
        // CB 93 003D
        gbc.setState(0x2fa6, 0xf5f4, 0x4520, 0x15f6, 0xafb9, 0x9310, 0x1, 0x0);
        gbc.writeMem(0x2fa6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xf5f4);
        EXPECT(gbc.pc(), 0x2fa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 003E
        gbc.setState(0x1f20, 0x6d3a, 0xb750, 0xbe53, 0xfe8a, 0x5dea, 0x1, 0x0);
        gbc.writeMem(0x1f20, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6d3a);
        EXPECT(gbc.pc(), 0x1f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 003F
        gbc.setState(0x2a1, 0x704c, 0xbf90, 0xcf1c, 0x4c35, 0x448, 0x0, 0x1);
        gbc.writeMem(0x2a1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0x2a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0040
        gbc.setState(0xb3a7, 0x54d7, 0x5e00, 0x99b4, 0xd7b, 0x59a0, 0x1, 0x0);
        gbc.writeMem(0xb3a7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x54d7);
        EXPECT(gbc.pc(), 0xb3a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a7), 0xcb);
        EXPECT(gbc.readMem(0xb3a8), 0x93);
        // CB 93 0041
        gbc.setState(0xc0ad, 0x96e8, 0xaaa0, 0x8cf9, 0x87c1, 0xfdca, 0x0, 0x0);
        gbc.writeMem(0xc0ad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x96e8);
        EXPECT(gbc.pc(), 0xc0af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ad), 0xcb);
        EXPECT(gbc.readMem(0xc0ae), 0x93);
        // CB 93 0042
        gbc.setState(0x9751, 0xbf3e, 0xabc0, 0x138f, 0xb976, 0x8e6e, 0x0, 0x0);
        gbc.writeMem(0x9751, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbf3e);
        EXPECT(gbc.pc(), 0x9753);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9751), 0xcb);
        EXPECT(gbc.readMem(0x9752), 0x93);
        // CB 93 0043
        gbc.setState(0x29f, 0xc162, 0x5090, 0xa60, 0x3acf, 0xdc06, 0x1, 0x1);
        gbc.writeMem(0x29f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc162);
        EXPECT(gbc.pc(), 0x2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0044
        gbc.setState(0xbd78, 0x8f91, 0xa5d0, 0x931e, 0x4d79, 0x3889, 0x0, 0x1);
        gbc.writeMem(0xbd78, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8f91);
        EXPECT(gbc.pc(), 0xbd7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd78), 0xcb);
        EXPECT(gbc.readMem(0xbd79), 0x93);
        // CB 93 0045
        gbc.setState(0xae25, 0x4a98, 0x5720, 0x6181, 0xd2e2, 0xc121, 0x0, 0x1);
        gbc.writeMem(0xae25, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4a98);
        EXPECT(gbc.pc(), 0xae27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae25), 0xcb);
        EXPECT(gbc.readMem(0xae26), 0x93);
        // CB 93 0046
        gbc.setState(0xd5d3, 0x55ab, 0x8b30, 0x265, 0x3894, 0x97f4, 0x0, 0x1);
        gbc.writeMem(0xd5d3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x55ab);
        EXPECT(gbc.pc(), 0xd5d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d3), 0xcb);
        EXPECT(gbc.readMem(0xd5d4), 0x93);
        // CB 93 0047
        gbc.setState(0x84bb, 0x95ff, 0xec50, 0x825d, 0x9f96, 0x6882, 0x0, 0x0);
        gbc.writeMem(0x84bb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x95ff);
        EXPECT(gbc.pc(), 0x84bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84bb), 0xcb);
        EXPECT(gbc.readMem(0x84bc), 0x93);
        // CB 93 0048
        gbc.setState(0x5482, 0x7982, 0x36e0, 0xd0c7, 0x6627, 0x1919, 0x0, 0x1);
        gbc.writeMem(0x5482, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7982);
        EXPECT(gbc.pc(), 0x5484);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0049
        gbc.setState(0xb1b0, 0xed1d, 0x7370, 0x4e70, 0x3fa3, 0x63b9, 0x0, 0x1);
        gbc.writeMem(0xb1b0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xed1d);
        EXPECT(gbc.pc(), 0xb1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b0), 0xcb);
        EXPECT(gbc.readMem(0xb1b1), 0x93);
        // CB 93 004A
        gbc.setState(0x7177, 0x6aa, 0xff50, 0x86cc, 0xb674, 0x61b9, 0x0, 0x0);
        gbc.writeMem(0x7177, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6aa);
        EXPECT(gbc.pc(), 0x7179);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 004B
        gbc.setState(0x1e04, 0xc563, 0x6dd0, 0x4cb9, 0x890, 0xb784, 0x1, 0x1);
        gbc.writeMem(0x1e04, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xc563);
        EXPECT(gbc.pc(), 0x1e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 004C
        gbc.setState(0x9223, 0x3736, 0x71b0, 0x8259, 0x36ae, 0xe8d3, 0x0, 0x0);
        gbc.writeMem(0x9223, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3736);
        EXPECT(gbc.pc(), 0x9225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9223), 0xcb);
        EXPECT(gbc.readMem(0x9224), 0x93);
        // CB 93 004D
        gbc.setState(0x7c2f, 0xbd58, 0x90, 0xe426, 0xabd7, 0xfbd9, 0x1, 0x0);
        gbc.writeMem(0x7c2f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbd58);
        EXPECT(gbc.pc(), 0x7c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 004E
        gbc.setState(0x5e25, 0x5b1c, 0xa5a0, 0xfa65, 0x5d19, 0xd7b1, 0x0, 0x1);
        gbc.writeMem(0x5e25, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5b1c);
        EXPECT(gbc.pc(), 0x5e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 004F
        gbc.setState(0x73f7, 0x7b10, 0x7940, 0x12ed, 0x597a, 0xb4e6, 0x1, 0x0);
        gbc.writeMem(0x73f7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7b10);
        EXPECT(gbc.pc(), 0x73f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0050
        gbc.setState(0xa66f, 0x7c0f, 0x2b60, 0x638e, 0xec09, 0xd8bf, 0x1, 0x1);
        gbc.writeMem(0xa66f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7c0f);
        EXPECT(gbc.pc(), 0xa671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa66f), 0xcb);
        EXPECT(gbc.readMem(0xa670), 0x93);
        // CB 93 0051
        gbc.setState(0xa68d, 0xe992, 0xa910, 0x65b4, 0xcc1d, 0xed64, 0x1, 0x0);
        gbc.writeMem(0xa68d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe992);
        EXPECT(gbc.pc(), 0xa68f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa68d), 0xcb);
        EXPECT(gbc.readMem(0xa68e), 0x93);
        // CB 93 0053
        gbc.setState(0x11e2, 0xc43b, 0x74e0, 0x585a, 0xf3ee, 0xef98, 0x1, 0x1);
        gbc.writeMem(0x11e2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc43b);
        EXPECT(gbc.pc(), 0x11e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0055
        gbc.setState(0x9e69, 0x8ef6, 0x5c60, 0xd2fa, 0x7910, 0x30cb, 0x1, 0x1);
        gbc.writeMem(0x9e69, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x8ef6);
        EXPECT(gbc.pc(), 0x9e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e69), 0xcb);
        EXPECT(gbc.readMem(0x9e6a), 0x93);
        // CB 93 0056
        gbc.setState(0x9db, 0xee6c, 0x9f20, 0x2a29, 0xe2f7, 0x98ca, 0x1, 0x1);
        gbc.writeMem(0x9db, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xee6c);
        EXPECT(gbc.pc(), 0x9dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0057
        gbc.setState(0xc906, 0xbe93, 0xb430, 0x36ea, 0x9b69, 0xd92a, 0x1, 0x1);
        gbc.writeMem(0xc906, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbe93);
        EXPECT(gbc.pc(), 0xc908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc906), 0xcb);
        EXPECT(gbc.readMem(0xc907), 0x93);
        // CB 93 0058
        gbc.setState(0xddcd, 0x74aa, 0x7d30, 0x15f2, 0x3c31, 0xf796, 0x1, 0x0);
        gbc.writeMem(0xddcd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x74aa);
        EXPECT(gbc.pc(), 0xddcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddcd), 0xcb);
        EXPECT(gbc.readMem(0xddce), 0x93);
        // CB 93 0059
        gbc.setState(0x4b61, 0x9ec7, 0x3e30, 0x990, 0x73d6, 0x81b2, 0x0, 0x1);
        gbc.writeMem(0x4b61, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x9ec7);
        EXPECT(gbc.pc(), 0x4b63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 005A
        gbc.setState(0x363c, 0xe6fe, 0xe760, 0x4f56, 0x61cb, 0x87df, 0x0, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xe6fe);
        EXPECT(gbc.pc(), 0x363e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 005B
        gbc.setState(0xd36c, 0xe511, 0xc270, 0x342e, 0x5f38, 0x8c4, 0x1, 0x1);
        gbc.writeMem(0xd36c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe511);
        EXPECT(gbc.pc(), 0xd36e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd36c), 0xcb);
        EXPECT(gbc.readMem(0xd36d), 0x93);
        // CB 93 005D
        gbc.setState(0x6a52, 0xfc6a, 0xe690, 0xdbb1, 0x90ed, 0xfe96, 0x1, 0x1);
        gbc.writeMem(0x6a52, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xfc6a);
        EXPECT(gbc.pc(), 0x6a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 005E
        gbc.setState(0x65d8, 0xc918, 0xd990, 0xef45, 0xb147, 0xe5d7, 0x0, 0x0);
        gbc.writeMem(0x65d8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc918);
        EXPECT(gbc.pc(), 0x65da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 005F
        gbc.setState(0x45e3, 0xd096, 0x9d20, 0xf01f, 0x90cb, 0xc75b, 0x0, 0x1);
        gbc.writeMem(0x45e3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd096);
        EXPECT(gbc.pc(), 0x45e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0060
        gbc.setState(0x3752, 0x72e5, 0x8370, 0xd33f, 0x9a2b, 0x6116, 0x1, 0x1);
        gbc.writeMem(0x3752, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x72e5);
        EXPECT(gbc.pc(), 0x3754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0061
        gbc.setState(0x11dd, 0xd5ea, 0x2400, 0xe58b, 0x6f6c, 0x702e, 0x0, 0x0);
        gbc.writeMem(0x11dd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd5ea);
        EXPECT(gbc.pc(), 0x11df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0062
        gbc.setState(0xece2, 0xfc2a, 0xa2f0, 0xfa4a, 0xcce, 0x4177, 0x1, 0x0);
        gbc.writeMem(0xece2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfc2a);
        EXPECT(gbc.pc(), 0xece4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xece2), 0xcb);
        EXPECT(gbc.readMem(0xece3), 0x93);
        // CB 93 0063
        gbc.setState(0xee1a, 0xbbfe, 0x4870, 0xbe38, 0xa976, 0x4fed, 0x1, 0x0);
        gbc.writeMem(0xee1a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xbbfe);
        EXPECT(gbc.pc(), 0xee1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee1a), 0xcb);
        EXPECT(gbc.readMem(0xee1b), 0x93);
        // CB 93 0064
        gbc.setState(0xbe35, 0x3e42, 0x6ad0, 0x5980, 0xa862, 0xf038, 0x0, 0x1);
        gbc.writeMem(0xbe35, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x3e42);
        EXPECT(gbc.pc(), 0xbe37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe35), 0xcb);
        EXPECT(gbc.readMem(0xbe36), 0x93);
        // CB 93 0065
        gbc.setState(0x7fc7, 0x475f, 0xaa60, 0x2652, 0xe0ec, 0x607f, 0x1, 0x0);
        gbc.writeMem(0x7fc7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x475f);
        EXPECT(gbc.pc(), 0x7fc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0068
        gbc.setState(0xa4ba, 0xf358, 0xc0d0, 0xce45, 0x6547, 0xb97b, 0x1, 0x1);
        gbc.writeMem(0xa4ba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf358);
        EXPECT(gbc.pc(), 0xa4bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ba), 0xcb);
        EXPECT(gbc.readMem(0xa4bb), 0x93);
        // CB 93 0069
        gbc.setState(0x1f9e, 0x59d5, 0x1f20, 0x72d2, 0xe112, 0x58f1, 0x0, 0x0);
        gbc.writeMem(0x1f9e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x59d5);
        EXPECT(gbc.pc(), 0x1fa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 006A
        gbc.setState(0xb402, 0x34f1, 0x63b0, 0x55df, 0x573a, 0x69f7, 0x0, 0x1);
        gbc.writeMem(0xb402, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x34f1);
        EXPECT(gbc.pc(), 0xb404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb402), 0xcb);
        EXPECT(gbc.readMem(0xb403), 0x93);
        // CB 93 006B
        gbc.setState(0xc4ec, 0xb448, 0xe9e0, 0x221f, 0x7edd, 0x64dc, 0x1, 0x1);
        gbc.writeMem(0xc4ec, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb448);
        EXPECT(gbc.pc(), 0xc4ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ec), 0xcb);
        EXPECT(gbc.readMem(0xc4ed), 0x93);
        // CB 93 006C
        gbc.setState(0x88a3, 0x4393, 0xf450, 0x5201, 0x252f, 0xdc83, 0x0, 0x1);
        gbc.writeMem(0x88a3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4393);
        EXPECT(gbc.pc(), 0x88a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88a3), 0xcb);
        EXPECT(gbc.readMem(0x88a4), 0x93);
        // CB 93 006D
        gbc.setState(0x7d27, 0xbd88, 0x2840, 0x7bc6, 0x6efa, 0x4628, 0x0, 0x1);
        gbc.writeMem(0x7d27, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbd88);
        EXPECT(gbc.pc(), 0x7d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 006E
        gbc.setState(0xae04, 0xbbf6, 0xbf0, 0x3716, 0x628d, 0xc5a2, 0x1, 0x1);
        gbc.writeMem(0xae04, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbbf6);
        EXPECT(gbc.pc(), 0xae06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae04), 0xcb);
        EXPECT(gbc.readMem(0xae05), 0x93);
        // CB 93 006F
        gbc.setState(0xd1f, 0xf9f8, 0x32c0, 0x1841, 0x6476, 0x7aab, 0x1, 0x1);
        gbc.writeMem(0xd1f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf9f8);
        EXPECT(gbc.pc(), 0xd21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0070
        gbc.setState(0x21b1, 0xb0ff, 0xb200, 0x8520, 0x9e10, 0xa92d, 0x0, 0x0);
        gbc.writeMem(0x21b1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb0ff);
        EXPECT(gbc.pc(), 0x21b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0071
        gbc.setState(0x5aa4, 0x78a6, 0x770, 0x55c1, 0x7658, 0xe68f, 0x0, 0x0);
        gbc.writeMem(0x5aa4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x78a6);
        EXPECT(gbc.pc(), 0x5aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0072
        gbc.setState(0x5798, 0x7801, 0x95b0, 0x880f, 0x9019, 0x18bf, 0x0, 0x1);
        gbc.writeMem(0x5798, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7801);
        EXPECT(gbc.pc(), 0x579a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0073
        gbc.setState(0xee25, 0x7f8a, 0x1800, 0x8708, 0x560b, 0x71fa, 0x1, 0x0);
        gbc.writeMem(0xee25, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7f8a);
        EXPECT(gbc.pc(), 0xee27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee25), 0xcb);
        EXPECT(gbc.readMem(0xee26), 0x93);
        // CB 93 0074
        gbc.setState(0x7466, 0x9130, 0x6a40, 0x2ef5, 0x4716, 0x67b7, 0x0, 0x0);
        gbc.writeMem(0x7466, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x9130);
        EXPECT(gbc.pc(), 0x7468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0075
        gbc.setState(0x4559, 0x248f, 0x5bb0, 0x3e6b, 0xdb9, 0x6911, 0x0, 0x1);
        gbc.writeMem(0x4559, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x248f);
        EXPECT(gbc.pc(), 0x455b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0076
        gbc.setState(0x420b, 0x6122, 0x5790, 0xe243, 0x2369, 0x9000, 0x1, 0x1);
        gbc.writeMem(0x420b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x6122);
        EXPECT(gbc.pc(), 0x420d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0077
        gbc.setState(0x32fd, 0x19ad, 0x9de0, 0xa61a, 0x22aa, 0x99c8, 0x0, 0x1);
        gbc.writeMem(0x32fd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x19ad);
        EXPECT(gbc.pc(), 0x32ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0078
        gbc.setState(0x5077, 0x137c, 0x470, 0x4fdd, 0x5741, 0xccd3, 0x0, 0x0);
        gbc.writeMem(0x5077, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x137c);
        EXPECT(gbc.pc(), 0x5079);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0079
        gbc.setState(0x7d2c, 0xdb79, 0x6870, 0xf5cf, 0x608d, 0xe86, 0x1, 0x1);
        gbc.writeMem(0x7d2c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdb79);
        EXPECT(gbc.pc(), 0x7d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 007A
        gbc.setState(0x9eab, 0x429f, 0x12f0, 0xd88e, 0x3a48, 0xe4a6, 0x1, 0x1);
        gbc.writeMem(0x9eab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x429f);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eab), 0xcb);
        EXPECT(gbc.readMem(0x9eac), 0x93);
        // CB 93 007B
        gbc.setState(0x31f2, 0x6403, 0x1010, 0x6894, 0xee7d, 0xc09c, 0x0, 0x0);
        gbc.writeMem(0x31f2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6403);
        EXPECT(gbc.pc(), 0x31f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 007C
        gbc.setState(0xde7, 0x177d, 0xd370, 0x7ca4, 0xf8cb, 0xf97d, 0x0, 0x0);
        gbc.writeMem(0xde7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x177d);
        EXPECT(gbc.pc(), 0xde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 007D
        gbc.setState(0xd440, 0xef70, 0x4b30, 0x51b7, 0x4244, 0xf26a, 0x0, 0x1);
        gbc.writeMem(0xd440, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xef70);
        EXPECT(gbc.pc(), 0xd442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd440), 0xcb);
        EXPECT(gbc.readMem(0xd441), 0x93);
        // CB 93 007E
        gbc.setState(0xac8d, 0x89bb, 0x4630, 0x35f6, 0x553, 0x1a1b, 0x1, 0x0);
        gbc.writeMem(0xac8d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x89bb);
        EXPECT(gbc.pc(), 0xac8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8d), 0xcb);
        EXPECT(gbc.readMem(0xac8e), 0x93);
        // CB 93 007F
        gbc.setState(0xad2, 0x6e37, 0x8580, 0x6c65, 0x8ef3, 0x5b44, 0x0, 0x1);
        gbc.writeMem(0xad2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6e37);
        EXPECT(gbc.pc(), 0xad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0080
        gbc.setState(0x4d7c, 0xa98b, 0xf020, 0x2412, 0x51a2, 0x3bb7, 0x0, 0x0);
        gbc.writeMem(0x4d7c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa98b);
        EXPECT(gbc.pc(), 0x4d7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0081
        gbc.setState(0x5592, 0x7b2c, 0xe780, 0xb4eb, 0xd4f5, 0x1e3f, 0x0, 0x0);
        gbc.writeMem(0x5592, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7b2c);
        EXPECT(gbc.pc(), 0x5594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0083
        gbc.setState(0x36d6, 0x5da6, 0x5c90, 0x8bec, 0x92bc, 0x7352, 0x0, 0x1);
        gbc.writeMem(0x36d6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5da6);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0084
        gbc.setState(0x21ab, 0x43e1, 0x8bc0, 0xe58d, 0x46ba, 0x8c83, 0x0, 0x1);
        gbc.writeMem(0x21ab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x43e1);
        EXPECT(gbc.pc(), 0x21ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0085
        gbc.setState(0xd020, 0x3c2, 0xf5a0, 0x2615, 0x34c8, 0x4371, 0x0, 0x1);
        gbc.writeMem(0xd020, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3c2);
        EXPECT(gbc.pc(), 0xd022);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd020), 0xcb);
        EXPECT(gbc.readMem(0xd021), 0x93);
        // CB 93 0086
        gbc.setState(0x3a9b, 0xd8f5, 0x61e0, 0x85a6, 0x66d1, 0x4203, 0x1, 0x0);
        gbc.writeMem(0x3a9b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xd8f5);
        EXPECT(gbc.pc(), 0x3a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0087
        gbc.setState(0x88ac, 0x988d, 0x2c90, 0x6a39, 0x3f7d, 0x5bd3, 0x0, 0x1);
        gbc.writeMem(0x88ac, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x988d);
        EXPECT(gbc.pc(), 0x88ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88ac), 0xcb);
        EXPECT(gbc.readMem(0x88ad), 0x93);
        // CB 93 0088
        gbc.setState(0xbce1, 0xd3e4, 0x4c00, 0x7f0b, 0x5294, 0xc67e, 0x1, 0x0);
        gbc.writeMem(0xbce1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xd3e4);
        EXPECT(gbc.pc(), 0xbce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce1), 0xcb);
        EXPECT(gbc.readMem(0xbce2), 0x93);
        // CB 93 0089
        gbc.setState(0xb6f6, 0x9eda, 0x30, 0xc97a, 0x5e9a, 0xe438, 0x1, 0x1);
        gbc.writeMem(0xb6f6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0xb6f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6f6), 0xcb);
        EXPECT(gbc.readMem(0xb6f7), 0x93);
        // CB 93 008A
        gbc.setState(0x4ade, 0x3734, 0x68b0, 0xbe85, 0x97b2, 0x505f, 0x1, 0x1);
        gbc.writeMem(0x4ade, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3734);
        EXPECT(gbc.pc(), 0x4ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 008B
        gbc.setState(0x52a6, 0xced4, 0x8900, 0xaab1, 0x3f09, 0x4e8d, 0x1, 0x1);
        gbc.writeMem(0x52a6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xced4);
        EXPECT(gbc.pc(), 0x52a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 008C
        gbc.setState(0x79fb, 0xdba5, 0xd2c0, 0x3aea, 0x3316, 0x4443, 0x1, 0x1);
        gbc.writeMem(0x79fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdba5);
        EXPECT(gbc.pc(), 0x79fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 008D
        gbc.setState(0x977f, 0xb48b, 0xc4a0, 0x87c2, 0x91e6, 0xc6f2, 0x1, 0x0);
        gbc.writeMem(0x977f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb48b);
        EXPECT(gbc.pc(), 0x9781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x977f), 0xcb);
        EXPECT(gbc.readMem(0x9780), 0x93);
        // CB 93 008E
        gbc.setState(0xeb, 0xe26a, 0x7c40, 0xcbcb, 0x69b5, 0xa1bf, 0x1, 0x1);
        gbc.writeMem(0xeb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe26a);
        EXPECT(gbc.pc(), 0xed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 008F
        gbc.setState(0x5110, 0x748b, 0xac0, 0xaf98, 0x56d5, 0xbb71, 0x1, 0x1);
        gbc.writeMem(0x5110, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x748b);
        EXPECT(gbc.pc(), 0x5112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0090
        gbc.setState(0x23b, 0xfcd6, 0xdc80, 0x50f, 0x2bce, 0x3f85, 0x0, 0x0);
        gbc.writeMem(0x23b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfcd6);
        EXPECT(gbc.pc(), 0x23d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0091
        gbc.setState(0xeaa8, 0xc3b3, 0xfa00, 0x3a1a, 0xc17e, 0x5f6a, 0x1, 0x1);
        gbc.writeMem(0xeaa8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc3b3);
        EXPECT(gbc.pc(), 0xeaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaa8), 0xcb);
        EXPECT(gbc.readMem(0xeaa9), 0x93);
        // CB 93 0092
        gbc.setState(0x7ad2, 0xad5b, 0x8ab0, 0x5f66, 0x4a1a, 0x4797, 0x0, 0x0);
        gbc.writeMem(0x7ad2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xad5b);
        EXPECT(gbc.pc(), 0x7ad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0093
        gbc.setState(0x106c, 0x2294, 0x27b0, 0x4c3c, 0xc251, 0x1f9, 0x0, 0x1);
        gbc.writeMem(0x106c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2294);
        EXPECT(gbc.pc(), 0x106e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0094
        gbc.setState(0x647, 0x62b2, 0x8f20, 0xe3d2, 0x47ae, 0xc742, 0x0, 0x1);
        gbc.writeMem(0x647, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x62b2);
        EXPECT(gbc.pc(), 0x649);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0095
        gbc.setState(0xeacd, 0x863e, 0x6610, 0xa2de, 0x8a31, 0xf36e, 0x1, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x863e);
        EXPECT(gbc.pc(), 0xeacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeacd), 0xcb);
        EXPECT(gbc.readMem(0xeace), 0x93);
        // CB 93 0096
        gbc.setState(0x53d1, 0xff49, 0xed00, 0x70e7, 0x6a01, 0xbbce, 0x1, 0x1);
        gbc.writeMem(0x53d1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xff49);
        EXPECT(gbc.pc(), 0x53d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0097
        gbc.setState(0xb613, 0xb0e, 0xacb0, 0xa654, 0xc5f3, 0xbec0, 0x0, 0x1);
        gbc.writeMem(0xb613, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb0e);
        EXPECT(gbc.pc(), 0xb615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb613), 0xcb);
        EXPECT(gbc.readMem(0xb614), 0x93);
        // CB 93 0098
        gbc.setState(0x9c48, 0xe225, 0xaee0, 0x8367, 0x96fc, 0x1365, 0x1, 0x0);
        gbc.writeMem(0x9c48, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe225);
        EXPECT(gbc.pc(), 0x9c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c48), 0xcb);
        EXPECT(gbc.readMem(0x9c49), 0x93);
        // CB 93 0099
        gbc.setState(0xbcfb, 0x85f7, 0xb470, 0xc31b, 0xe4c0, 0xe5d2, 0x0, 0x1);
        gbc.writeMem(0xbcfb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x85f7);
        EXPECT(gbc.pc(), 0xbcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcfb), 0xcb);
        EXPECT(gbc.readMem(0xbcfc), 0x93);
        // CB 93 009A
        gbc.setState(0x2b0d, 0xa1a6, 0xe0f0, 0xe82d, 0x72a2, 0xf711, 0x1, 0x0);
        gbc.writeMem(0x2b0d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa1a6);
        EXPECT(gbc.pc(), 0x2b0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 009B
        gbc.setState(0xebcc, 0xc2f1, 0x7670, 0x4160, 0xd525, 0xda0d, 0x1, 0x1);
        gbc.writeMem(0xebcc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc2f1);
        EXPECT(gbc.pc(), 0xebce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebcc), 0xcb);
        EXPECT(gbc.readMem(0xebcd), 0x93);
        // CB 93 009C
        gbc.setState(0x77a8, 0x4105, 0x2f0, 0xe9bb, 0x1756, 0xa70e, 0x1, 0x0);
        gbc.writeMem(0x77a8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4105);
        EXPECT(gbc.pc(), 0x77aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 009D
        gbc.setState(0x2428, 0x91, 0xbec0, 0xf196, 0x442d, 0x70d1, 0x0, 0x0);
        gbc.writeMem(0x2428, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x91);
        EXPECT(gbc.pc(), 0x242a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 009E
        gbc.setState(0x7217, 0x674b, 0xe2b0, 0x1722, 0xc8a1, 0xdc0a, 0x0, 0x0);
        gbc.writeMem(0x7217, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x674b);
        EXPECT(gbc.pc(), 0x7219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 009F
        gbc.setState(0x38aa, 0x1173, 0x4b60, 0xf0e, 0xb1bf, 0x97e1, 0x1, 0x1);
        gbc.writeMem(0x38aa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1173);
        EXPECT(gbc.pc(), 0x38ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00A0
        gbc.setState(0x4c7c, 0x3939, 0x1b0, 0x3b2a, 0xbe23, 0x6633, 0x0, 0x0);
        gbc.writeMem(0x4c7c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3939);
        EXPECT(gbc.pc(), 0x4c7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00A1
        gbc.setState(0x1d54, 0x300b, 0xe2c0, 0x3557, 0x8b2f, 0xae03, 0x0, 0x1);
        gbc.writeMem(0x1d54, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x300b);
        EXPECT(gbc.pc(), 0x1d56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00A2
        gbc.setState(0x8a5c, 0xe295, 0x6320, 0x2b2e, 0x359f, 0x44d8, 0x1, 0x1);
        gbc.writeMem(0x8a5c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xe295);
        EXPECT(gbc.pc(), 0x8a5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a5c), 0xcb);
        EXPECT(gbc.readMem(0x8a5d), 0x93);
        // CB 93 00A3
        gbc.setState(0x216a, 0x14ce, 0x74f0, 0xaffa, 0x669b, 0xc7ae, 0x1, 0x1);
        gbc.writeMem(0x216a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x14ce);
        EXPECT(gbc.pc(), 0x216c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00A4
        gbc.setState(0x1bbd, 0xb930, 0x1920, 0xe77c, 0x348b, 0x4c62, 0x0, 0x1);
        gbc.writeMem(0x1bbd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb930);
        EXPECT(gbc.pc(), 0x1bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00A5
        gbc.setState(0xb22e, 0xce2c, 0x5510, 0xefc4, 0xd48, 0xb82e, 0x1, 0x1);
        gbc.writeMem(0xb22e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xce2c);
        EXPECT(gbc.pc(), 0xb230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb22e), 0xcb);
        EXPECT(gbc.readMem(0xb22f), 0x93);
        // CB 93 00A6
        gbc.setState(0x1ace, 0x762a, 0x420, 0xb2f5, 0xed58, 0x2698, 0x1, 0x0);
        gbc.writeMem(0x1ace, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x762a);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00A7
        gbc.setState(0x33ba, 0xef25, 0x9cf0, 0x8714, 0xf8e3, 0x2378, 0x1, 0x0);
        gbc.writeMem(0x33ba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xef25);
        EXPECT(gbc.pc(), 0x33bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00A8
        gbc.setState(0x72db, 0xd959, 0xb380, 0xbb6e, 0xac70, 0x2c89, 0x1, 0x0);
        gbc.writeMem(0x72db, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd959);
        EXPECT(gbc.pc(), 0x72dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00A9
        gbc.setState(0xb664, 0x6c53, 0x2300, 0x152d, 0x3405, 0x6b4b, 0x1, 0x0);
        gbc.writeMem(0xb664, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x6c53);
        EXPECT(gbc.pc(), 0xb666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb664), 0xcb);
        EXPECT(gbc.readMem(0xb665), 0x93);
        // CB 93 00AA
        gbc.setState(0xaf33, 0x70d5, 0xb860, 0x8e2d, 0xa5b4, 0xb367, 0x0, 0x1);
        gbc.writeMem(0xaf33, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x70d5);
        EXPECT(gbc.pc(), 0xaf35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf33), 0xcb);
        EXPECT(gbc.readMem(0xaf34), 0x93);
        // CB 93 00AB
        gbc.setState(0x9293, 0x732e, 0x8830, 0x6f8c, 0x8db9, 0x7aa, 0x1, 0x1);
        gbc.writeMem(0x9293, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x732e);
        EXPECT(gbc.pc(), 0x9295);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9293), 0xcb);
        EXPECT(gbc.readMem(0x9294), 0x93);
        // CB 93 00AC
        gbc.setState(0x713e, 0xe062, 0x3b40, 0xc933, 0xabf4, 0xbaee, 0x1, 0x1);
        gbc.writeMem(0x713e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xe062);
        EXPECT(gbc.pc(), 0x7140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00AD
        gbc.setState(0xea2d, 0x3c57, 0xb8d0, 0xcf8a, 0x6a81, 0xeca7, 0x0, 0x1);
        gbc.writeMem(0xea2d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3c57);
        EXPECT(gbc.pc(), 0xea2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2d), 0xcb);
        EXPECT(gbc.readMem(0xea2e), 0x93);
        // CB 93 00AE
        gbc.setState(0xa14b, 0x4399, 0x9e40, 0xe596, 0xbe21, 0x92d7, 0x1, 0x0);
        gbc.writeMem(0xa14b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4399);
        EXPECT(gbc.pc(), 0xa14d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa14b), 0xcb);
        EXPECT(gbc.readMem(0xa14c), 0x93);
        // CB 93 00AF
        gbc.setState(0x6b0b, 0x4656, 0x70e0, 0xaaef, 0x6dbd, 0xf0f8, 0x0, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4656);
        EXPECT(gbc.pc(), 0x6b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00B0
        gbc.setState(0xd0f9, 0x51da, 0x6010, 0x4639, 0x4952, 0xdf3, 0x1, 0x0);
        gbc.writeMem(0xd0f9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x51da);
        EXPECT(gbc.pc(), 0xd0fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0f9), 0xcb);
        EXPECT(gbc.readMem(0xd0fa), 0x93);
        // CB 93 00B1
        gbc.setState(0x94a5, 0x9642, 0x22b0, 0x8965, 0xf92e, 0x491c, 0x0, 0x1);
        gbc.writeMem(0x94a5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9642);
        EXPECT(gbc.pc(), 0x94a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a5), 0xcb);
        EXPECT(gbc.readMem(0x94a6), 0x93);
        // CB 93 00B2
        gbc.setState(0xebda, 0xebc3, 0x63c0, 0xa834, 0xa839, 0x4d9c, 0x0, 0x1);
        gbc.writeMem(0xebda, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xebc3);
        EXPECT(gbc.pc(), 0xebdc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebda), 0xcb);
        EXPECT(gbc.readMem(0xebdb), 0x93);
        // CB 93 00B3
        gbc.setState(0x8302, 0xf67, 0xc080, 0x380e, 0x9936, 0xea75, 0x1, 0x0);
        gbc.writeMem(0x8302, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf67);
        EXPECT(gbc.pc(), 0x8304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8302), 0xcb);
        EXPECT(gbc.readMem(0x8303), 0x93);
        // CB 93 00B4
        gbc.setState(0xb3d8, 0x5da2, 0xf190, 0xd609, 0x477a, 0x27e6, 0x1, 0x0);
        gbc.writeMem(0xb3d8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5da2);
        EXPECT(gbc.pc(), 0xb3da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3d8), 0xcb);
        EXPECT(gbc.readMem(0xb3d9), 0x93);
        // CB 93 00B5
        gbc.setState(0x84bf, 0x413b, 0x90a0, 0x9898, 0xe3f4, 0x79ba, 0x0, 0x0);
        gbc.writeMem(0x84bf, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x413b);
        EXPECT(gbc.pc(), 0x84c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84bf), 0xcb);
        EXPECT(gbc.readMem(0x84c0), 0x93);
        // CB 93 00B6
        gbc.setState(0xe360, 0x9cc8, 0xeba0, 0x7038, 0x16bd, 0x49f1, 0x1, 0x1);
        gbc.writeMem(0xe360, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9cc8);
        EXPECT(gbc.pc(), 0xe362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe360), 0xcb);
        EXPECT(gbc.readMem(0xe361), 0x93);
        // CB 93 00B7
        gbc.setState(0x91f1, 0x11eb, 0x9530, 0x5386, 0x2b43, 0x1bc9, 0x1, 0x0);
        gbc.writeMem(0x91f1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x11eb);
        EXPECT(gbc.pc(), 0x91f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91f1), 0xcb);
        EXPECT(gbc.readMem(0x91f2), 0x93);
        // CB 93 00B8
        gbc.setState(0x9cb4, 0xdaeb, 0xb970, 0xd31d, 0xf467, 0x9339, 0x1, 0x0);
        gbc.writeMem(0x9cb4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xdaeb);
        EXPECT(gbc.pc(), 0x9cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb4), 0xcb);
        EXPECT(gbc.readMem(0x9cb5), 0x93);
        // CB 93 00B9
        gbc.setState(0x7dfa, 0x3a7e, 0x7be0, 0x58ee, 0xa7f8, 0xdf62, 0x0, 0x1);
        gbc.writeMem(0x7dfa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3a7e);
        EXPECT(gbc.pc(), 0x7dfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00BA
        gbc.setState(0x3479, 0x5db5, 0x9c00, 0x591d, 0x9cd8, 0xa796, 0x1, 0x0);
        gbc.writeMem(0x3479, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x5db5);
        EXPECT(gbc.pc(), 0x347b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00BB
        gbc.setState(0x4fe6, 0xfd21, 0x6900, 0xbd12, 0xfdde, 0xb360, 0x1, 0x0);
        gbc.writeMem(0x4fe6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xfd21);
        EXPECT(gbc.pc(), 0x4fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00BC
        gbc.setState(0x3862, 0x902, 0xd240, 0x23f1, 0x7361, 0x4164, 0x1, 0x1);
        gbc.writeMem(0x3862, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x902);
        EXPECT(gbc.pc(), 0x3864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00BD
        gbc.setState(0x4879, 0xfb05, 0x2650, 0x2f70, 0x211, 0x39e5, 0x0, 0x0);
        gbc.writeMem(0x4879, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfb05);
        EXPECT(gbc.pc(), 0x487b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00BE
        gbc.setState(0xda05, 0x26e7, 0xd490, 0xbac1, 0x27f5, 0x7df7, 0x0, 0x0);
        gbc.writeMem(0xda05, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x26e7);
        EXPECT(gbc.pc(), 0xda07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda05), 0xcb);
        EXPECT(gbc.readMem(0xda06), 0x93);
        // CB 93 00BF
        gbc.setState(0x9f19, 0xcba8, 0xc9f0, 0x889d, 0xc20, 0x44ec, 0x1, 0x0);
        gbc.writeMem(0x9f19, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcba8);
        EXPECT(gbc.pc(), 0x9f1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f19), 0xcb);
        EXPECT(gbc.readMem(0x9f1a), 0x93);
        // CB 93 00C0
        gbc.setState(0xeaf8, 0x6d4b, 0x7980, 0x1e7, 0xde4f, 0x3c7e, 0x1, 0x0);
        gbc.writeMem(0xeaf8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6d4b);
        EXPECT(gbc.pc(), 0xeafa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf8), 0xcb);
        EXPECT(gbc.readMem(0xeaf9), 0x93);
        // CB 93 00C1
        gbc.setState(0x7d24, 0x4284, 0x3830, 0xd4b0, 0x8b98, 0x40c0, 0x1, 0x1);
        gbc.writeMem(0x7d24, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4284);
        EXPECT(gbc.pc(), 0x7d26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00C2
        gbc.setState(0x10d2, 0xdcd8, 0x5b90, 0x95de, 0x5d24, 0xa3c2, 0x1, 0x0);
        gbc.writeMem(0x10d2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xdcd8);
        EXPECT(gbc.pc(), 0x10d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00C3
        gbc.setState(0x6669, 0xdb6b, 0xcc80, 0x7a8f, 0x551b, 0x723d, 0x0, 0x1);
        gbc.writeMem(0x6669, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xdb6b);
        EXPECT(gbc.pc(), 0x666b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00C4
        gbc.setState(0xbd0a, 0xdf1b, 0xde50, 0xc46e, 0x1996, 0x1470, 0x0, 0x0);
        gbc.writeMem(0xbd0a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xdf1b);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd0a), 0xcb);
        EXPECT(gbc.readMem(0xbd0b), 0x93);
        // CB 93 00C5
        gbc.setState(0x6b6a, 0xf0da, 0xb2d0, 0x4d7c, 0x7328, 0x5220, 0x1, 0x1);
        gbc.writeMem(0x6b6a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf0da);
        EXPECT(gbc.pc(), 0x6b6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00C6
        gbc.setState(0xa8a4, 0xdf7b, 0xc0, 0x759c, 0x3e3b, 0xf601, 0x0, 0x1);
        gbc.writeMem(0xa8a4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdf7b);
        EXPECT(gbc.pc(), 0xa8a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a4), 0xcb);
        EXPECT(gbc.readMem(0xa8a5), 0x93);
        // CB 93 00C7
        gbc.setState(0x86e5, 0x7aa4, 0x20f0, 0x8f7c, 0xb399, 0xe702, 0x1, 0x0);
        gbc.writeMem(0x86e5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7aa4);
        EXPECT(gbc.pc(), 0x86e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86e5), 0xcb);
        EXPECT(gbc.readMem(0x86e6), 0x93);
        // CB 93 00C8
        gbc.setState(0x4bc1, 0x2d27, 0xa620, 0xfd7c, 0xe0bb, 0x92df, 0x0, 0x0);
        gbc.writeMem(0x4bc1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2d27);
        EXPECT(gbc.pc(), 0x4bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00C9
        gbc.setState(0x31de, 0x1cbd, 0x7b90, 0x3ba3, 0x3f4b, 0x5aea, 0x0, 0x0);
        gbc.writeMem(0x31de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x1cbd);
        EXPECT(gbc.pc(), 0x31e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00CA
        gbc.setState(0x3623, 0x5458, 0x1950, 0xe6cc, 0x25c4, 0x95b4, 0x1, 0x1);
        gbc.writeMem(0x3623, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x5458);
        EXPECT(gbc.pc(), 0x3625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00CB
        gbc.setState(0xca6, 0x3077, 0x62b0, 0xb77f, 0x45f5, 0xe5c0, 0x1, 0x0);
        gbc.writeMem(0xca6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3077);
        EXPECT(gbc.pc(), 0xca8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00CC
        gbc.setState(0x3248, 0xb47d, 0x2ce0, 0xdd13, 0xaa75, 0xd5f0, 0x0, 0x0);
        gbc.writeMem(0x3248, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xb47d);
        EXPECT(gbc.pc(), 0x324a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00CD
        gbc.setState(0x868c, 0xd0f3, 0x6570, 0x94e, 0x5889, 0xe92c, 0x1, 0x0);
        gbc.writeMem(0x868c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd0f3);
        EXPECT(gbc.pc(), 0x868e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x868c), 0xcb);
        EXPECT(gbc.readMem(0x868d), 0x93);
        // CB 93 00CE
        gbc.setState(0x63f5, 0x1a63, 0x5730, 0x30c4, 0x85ba, 0x215e, 0x1, 0x0);
        gbc.writeMem(0x63f5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1a63);
        EXPECT(gbc.pc(), 0x63f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00CF
        gbc.setState(0x634, 0xe3bd, 0xd200, 0x29f5, 0x6b6f, 0x566d, 0x0, 0x1);
        gbc.writeMem(0x634, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xe3bd);
        EXPECT(gbc.pc(), 0x636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00D0
        gbc.setState(0xa20d, 0x69e9, 0x7450, 0xdbf9, 0xeb07, 0xa949, 0x1, 0x0);
        gbc.writeMem(0xa20d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x69e9);
        EXPECT(gbc.pc(), 0xa20f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa20d), 0xcb);
        EXPECT(gbc.readMem(0xa20e), 0x93);
        // CB 93 00D1
        gbc.setState(0xe6c8, 0xf619, 0x5c20, 0xd85e, 0x8012, 0xfa0, 0x1, 0x0);
        gbc.writeMem(0xe6c8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf619);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0x93);
        // CB 93 00D2
        gbc.setState(0x13, 0x9151, 0x4800, 0x2366, 0x1d66, 0xedc5, 0x0, 0x1);
        gbc.writeMem(0x13, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9151);
        EXPECT(gbc.pc(), 0x15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00D3
        gbc.setState(0x2beb, 0x7f86, 0x8d0, 0xe680, 0x76ab, 0x6797, 0x1, 0x1);
        gbc.writeMem(0x2beb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7f86);
        EXPECT(gbc.pc(), 0x2bed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00D4
        gbc.setState(0x3aa0, 0xdaef, 0x48b0, 0xdf59, 0x1ec3, 0x1214, 0x0, 0x1);
        gbc.writeMem(0x3aa0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdaef);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00D5
        gbc.setState(0x159e, 0x8a4a, 0x370, 0xa718, 0x86a5, 0x6d34, 0x1, 0x0);
        gbc.writeMem(0x159e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8a4a);
        EXPECT(gbc.pc(), 0x15a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00D6
        gbc.setState(0xeba2, 0x38d9, 0x8170, 0x3186, 0x1fc6, 0x3073, 0x1, 0x1);
        gbc.writeMem(0xeba2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x38d9);
        EXPECT(gbc.pc(), 0xeba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba2), 0xcb);
        EXPECT(gbc.readMem(0xeba3), 0x93);
        // CB 93 00D7
        gbc.setState(0x9d9b, 0xeea5, 0x610, 0xbfae, 0x7fb7, 0x7da1, 0x1, 0x1);
        gbc.writeMem(0x9d9b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xeea5);
        EXPECT(gbc.pc(), 0x9d9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d9b), 0xcb);
        EXPECT(gbc.readMem(0x9d9c), 0x93);
        // CB 93 00D8
        gbc.setState(0xa5d6, 0x9c2d, 0x2d80, 0x28c0, 0xc796, 0xa604, 0x0, 0x1);
        gbc.writeMem(0xa5d6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9c2d);
        EXPECT(gbc.pc(), 0xa5d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5d6), 0xcb);
        EXPECT(gbc.readMem(0xa5d7), 0x93);
        // CB 93 00D9
        gbc.setState(0x3fc, 0xc37a, 0x3ec0, 0x1011, 0x5de0, 0x66f, 0x1, 0x1);
        gbc.writeMem(0x3fc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc37a);
        EXPECT(gbc.pc(), 0x3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00DA
        gbc.setState(0xa9e1, 0x2db5, 0x2240, 0x65da, 0xb13f, 0x4101, 0x0, 0x0);
        gbc.writeMem(0xa9e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2db5);
        EXPECT(gbc.pc(), 0xa9e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e1), 0xcb);
        EXPECT(gbc.readMem(0xa9e2), 0x93);
        // CB 93 00DB
        gbc.setState(0x4950, 0xec00, 0x76a0, 0xc318, 0x887f, 0x1f02, 0x1, 0x0);
        gbc.writeMem(0x4950, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xec00);
        EXPECT(gbc.pc(), 0x4952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00DC
        gbc.setState(0x95f8, 0x8139, 0x2a10, 0xe42, 0x1707, 0xdbd2, 0x0, 0x1);
        gbc.writeMem(0x95f8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x8139);
        EXPECT(gbc.pc(), 0x95fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95f8), 0xcb);
        EXPECT(gbc.readMem(0x95f9), 0x93);
        // CB 93 00DD
        gbc.setState(0xd8e1, 0xed48, 0x2290, 0x28fa, 0x76a0, 0xe693, 0x1, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xed48);
        EXPECT(gbc.pc(), 0xd8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e1), 0xcb);
        EXPECT(gbc.readMem(0xd8e2), 0x93);
        // CB 93 00DE
        gbc.setState(0x5f55, 0x626e, 0xb310, 0x4627, 0x2b9a, 0xf2cc, 0x1, 0x0);
        gbc.writeMem(0x5f55, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x626e);
        EXPECT(gbc.pc(), 0x5f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00DF
        gbc.setState(0xa9a2, 0x9d0e, 0xc2b0, 0x740b, 0xecd1, 0x37c9, 0x0, 0x0);
        gbc.writeMem(0xa9a2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9d0e);
        EXPECT(gbc.pc(), 0xa9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9a2), 0xcb);
        EXPECT(gbc.readMem(0xa9a3), 0x93);
        // CB 93 00E0
        gbc.setState(0x4d98, 0x8c87, 0xbe30, 0xefb2, 0x7498, 0x5a38, 0x0, 0x0);
        gbc.writeMem(0x4d98, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8c87);
        EXPECT(gbc.pc(), 0x4d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00E1
        gbc.setState(0xaa44, 0xfbef, 0x5660, 0xf0ad, 0x735, 0xf546, 0x1, 0x0);
        gbc.writeMem(0xaa44, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfbef);
        EXPECT(gbc.pc(), 0xaa46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa44), 0xcb);
        EXPECT(gbc.readMem(0xaa45), 0x93);
        // CB 93 00E2
        gbc.setState(0xc6ad, 0x6088, 0x7f00, 0xbcdb, 0x8b12, 0xa2cc, 0x0, 0x0);
        gbc.writeMem(0xc6ad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6088);
        EXPECT(gbc.pc(), 0xc6af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ad), 0xcb);
        EXPECT(gbc.readMem(0xc6ae), 0x93);
        // CB 93 00E3
        gbc.setState(0x503, 0xc5d8, 0x9330, 0x6786, 0x9a94, 0xb84e, 0x1, 0x0);
        gbc.writeMem(0x503, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc5d8);
        EXPECT(gbc.pc(), 0x505);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00E4
        gbc.setState(0x4633, 0x82e7, 0x5f50, 0x269c, 0x7e8, 0xbfdf, 0x1, 0x0);
        gbc.writeMem(0x4633, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x82e7);
        EXPECT(gbc.pc(), 0x4635);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00E5
        gbc.setState(0x186a, 0xf0f4, 0xb390, 0x9815, 0xbeb9, 0x6b6f, 0x1, 0x0);
        gbc.writeMem(0x186a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf0f4);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00E6
        gbc.setState(0x7474, 0x924d, 0x47f0, 0xce8b, 0x8024, 0x73b, 0x1, 0x0);
        gbc.writeMem(0x7474, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x924d);
        EXPECT(gbc.pc(), 0x7476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00E7
        gbc.setState(0x6a06, 0xc004, 0x28a0, 0x24a3, 0x306a, 0x4f60, 0x0, 0x1);
        gbc.writeMem(0x6a06, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc004);
        EXPECT(gbc.pc(), 0x6a08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00E8
        gbc.setState(0xe0ef, 0x6705, 0xdf80, 0x55c, 0xbb08, 0x6e54, 0x0, 0x1);
        gbc.writeMem(0xe0ef, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6705);
        EXPECT(gbc.pc(), 0xe0f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ef), 0xcb);
        EXPECT(gbc.readMem(0xe0f0), 0x93);
        // CB 93 00E9
        gbc.setState(0x508d, 0xd1b9, 0x7860, 0x7f6b, 0xfbaf, 0x576f, 0x1, 0x1);
        gbc.writeMem(0x508d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd1b9);
        EXPECT(gbc.pc(), 0x508f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00EA
        gbc.setState(0xb70c, 0x81f0, 0xf030, 0x5b91, 0x8348, 0xa48a, 0x0, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0xb70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb70c), 0xcb);
        EXPECT(gbc.readMem(0xb70d), 0x93);
        // CB 93 00EB
        gbc.setState(0x58d5, 0x1cc5, 0x5500, 0x5eb1, 0x22af, 0xebfb, 0x1, 0x0);
        gbc.writeMem(0x58d5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1cc5);
        EXPECT(gbc.pc(), 0x58d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00EC
        gbc.setState(0x8f4f, 0xf0f3, 0x79d0, 0xee08, 0x7a14, 0x8b85, 0x1, 0x0);
        gbc.writeMem(0x8f4f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf0f3);
        EXPECT(gbc.pc(), 0x8f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4f), 0xcb);
        EXPECT(gbc.readMem(0x8f50), 0x93);
        // CB 93 00EE
        gbc.setState(0xc28d, 0x49aa, 0xabf0, 0x9754, 0x6793, 0xe0db, 0x0, 0x0);
        gbc.writeMem(0xc28d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x49aa);
        EXPECT(gbc.pc(), 0xc28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc28d), 0xcb);
        EXPECT(gbc.readMem(0xc28e), 0x93);
        // CB 93 00EF
        gbc.setState(0x4c2f, 0x8186, 0x2f70, 0xa1a, 0x3c8b, 0x53, 0x1, 0x1);
        gbc.writeMem(0x4c2f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x8186);
        EXPECT(gbc.pc(), 0x4c31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00F0
        gbc.setState(0x2ca7, 0x92ea, 0xe9b0, 0xf927, 0xfc0a, 0x57ab, 0x1, 0x1);
        gbc.writeMem(0x2ca7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x92ea);
        EXPECT(gbc.pc(), 0x2ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00F1
        gbc.setState(0xb88, 0x910b, 0xe880, 0x7207, 0x4a11, 0xa39a, 0x1, 0x0);
        gbc.writeMem(0xb88, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x910b);
        EXPECT(gbc.pc(), 0xb8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00F2
        gbc.setState(0xba89, 0x4e0e, 0xb270, 0x9b57, 0x75de, 0xec4a, 0x1, 0x0);
        gbc.writeMem(0xba89, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4e0e);
        EXPECT(gbc.pc(), 0xba8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba89), 0xcb);
        EXPECT(gbc.readMem(0xba8a), 0x93);
        // CB 93 00F3
        gbc.setState(0x6e8, 0x5baf, 0x5640, 0xa78f, 0x13be, 0x143a, 0x0, 0x0);
        gbc.writeMem(0x6e8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5baf);
        EXPECT(gbc.pc(), 0x6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00F4
        gbc.setState(0x3424, 0xa552, 0x36c0, 0x4347, 0x2113, 0xb020, 0x0, 0x0);
        gbc.writeMem(0x3424, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa552);
        EXPECT(gbc.pc(), 0x3426);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00F5
        gbc.setState(0xbf25, 0xbb4f, 0x9da0, 0x8612, 0xa2cf, 0x8c8b, 0x0, 0x0);
        gbc.writeMem(0xbf25, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb4f);
        EXPECT(gbc.pc(), 0xbf27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf25), 0xcb);
        EXPECT(gbc.readMem(0xbf26), 0x93);
        // CB 93 00F6
        gbc.setState(0xa7ad, 0x54f7, 0x3550, 0xc8ab, 0x382d, 0xa8c3, 0x1, 0x0);
        gbc.writeMem(0xa7ad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x54f7);
        EXPECT(gbc.pc(), 0xa7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7ad), 0xcb);
        EXPECT(gbc.readMem(0xa7ae), 0x93);
        // CB 93 00F7
        gbc.setState(0xcc5e, 0x459e, 0xf340, 0x7335, 0xc77e, 0x7d37, 0x1, 0x1);
        gbc.writeMem(0xcc5e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x459e);
        EXPECT(gbc.pc(), 0xcc60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc5e), 0xcb);
        EXPECT(gbc.readMem(0xcc5f), 0x93);
        // CB 93 00F8
        gbc.setState(0x3403, 0xc51d, 0xc880, 0x9975, 0x2a69, 0xe0d5, 0x0, 0x0);
        gbc.writeMem(0x3403, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc51d);
        EXPECT(gbc.pc(), 0x3405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00F9
        gbc.setState(0xc187, 0x4926, 0x89a0, 0xb1f1, 0x6d57, 0x8212, 0x1, 0x0);
        gbc.writeMem(0xc187, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4926);
        EXPECT(gbc.pc(), 0xc189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc187), 0xcb);
        EXPECT(gbc.readMem(0xc188), 0x93);
        // CB 93 00FA
        gbc.setState(0x2a77, 0x2a09, 0x3290, 0xa55f, 0xab40, 0x2e7b, 0x0, 0x0);
        gbc.writeMem(0x2a77, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x2a09);
        EXPECT(gbc.pc(), 0x2a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00FB
        gbc.setState(0x5666, 0x2d80, 0x2520, 0x86dd, 0x4a46, 0x164d, 0x0, 0x1);
        gbc.writeMem(0x5666, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2d80);
        EXPECT(gbc.pc(), 0x5668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 00FC
        gbc.setState(0x6b16, 0x327d, 0x1ef0, 0x3b63, 0xe209, 0xc695, 0x1, 0x0);
        gbc.writeMem(0x6b16, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x327d);
        EXPECT(gbc.pc(), 0x6b18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 00FD
        gbc.setState(0x98d7, 0x4552, 0xe330, 0xd520, 0xf4a4, 0x6753, 0x0, 0x1);
        gbc.writeMem(0x98d7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4552);
        EXPECT(gbc.pc(), 0x98d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d7), 0xcb);
        EXPECT(gbc.readMem(0x98d8), 0x93);
        // CB 93 00FE
        gbc.setState(0x8e98, 0xc38a, 0x3930, 0x3487, 0x133, 0xb5d5, 0x1, 0x1);
        gbc.writeMem(0x8e98, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc38a);
        EXPECT(gbc.pc(), 0x8e9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e98), 0xcb);
        EXPECT(gbc.readMem(0x8e99), 0x93);
        // CB 93 00FF
        gbc.setState(0x5a07, 0x2093, 0x5e0, 0x5b9, 0xcf2c, 0x1877, 0x0, 0x0);
        gbc.writeMem(0x5a07, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2093);
        EXPECT(gbc.pc(), 0x5a09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0100
        gbc.setState(0x9466, 0xcb4d, 0x5650, 0x4128, 0x1500, 0x8433, 0x0, 0x0);
        gbc.writeMem(0x9466, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcb4d);
        EXPECT(gbc.pc(), 0x9468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9466), 0xcb);
        EXPECT(gbc.readMem(0x9467), 0x93);
        // CB 93 0101
        gbc.setState(0x5501, 0x1b1, 0x13c0, 0xe823, 0xf222, 0x89f3, 0x0, 0x1);
        gbc.writeMem(0x5501, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1b1);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0102
        gbc.setState(0x71c5, 0x747b, 0xd290, 0x7ea4, 0xf3d, 0xc8e0, 0x1, 0x0);
        gbc.writeMem(0x71c5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x747b);
        EXPECT(gbc.pc(), 0x71c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0103
        gbc.setState(0x7bd8, 0x5ed6, 0xe2e0, 0xc914, 0x12e8, 0x1ca4, 0x1, 0x1);
        gbc.writeMem(0x7bd8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x5ed6);
        EXPECT(gbc.pc(), 0x7bda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0104
        gbc.setState(0x5094, 0x49e4, 0x2040, 0x477c, 0xb56b, 0x101d, 0x0, 0x1);
        gbc.writeMem(0x5094, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x49e4);
        EXPECT(gbc.pc(), 0x5096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0105
        gbc.setState(0x1135, 0x8288, 0x7ec0, 0x4bc2, 0x6be0, 0x6d1, 0x0, 0x1);
        gbc.writeMem(0x1135, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8288);
        EXPECT(gbc.pc(), 0x1137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0106
        gbc.setState(0xa442, 0x3c51, 0x33b0, 0xf034, 0xb2e6, 0xa06e, 0x0, 0x0);
        gbc.writeMem(0xa442, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3c51);
        EXPECT(gbc.pc(), 0xa444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa442), 0xcb);
        EXPECT(gbc.readMem(0xa443), 0x93);
        // CB 93 0107
        gbc.setState(0x3ada, 0xc75a, 0x3190, 0x7fb3, 0xfb0d, 0xdf66, 0x0, 0x0);
        gbc.writeMem(0x3ada, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc75a);
        EXPECT(gbc.pc(), 0x3adc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0108
        gbc.setState(0xcbf5, 0xf6fa, 0x3d90, 0x8d61, 0x74f6, 0x7ec6, 0x1, 0x1);
        gbc.writeMem(0xcbf5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf6fa);
        EXPECT(gbc.pc(), 0xcbf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbf5), 0xcb);
        EXPECT(gbc.readMem(0xcbf6), 0x93);
        // CB 93 0109
        gbc.setState(0xd0e6, 0x72a2, 0xf810, 0xa68f, 0xc7ec, 0x8a16, 0x1, 0x1);
        gbc.writeMem(0xd0e6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x72a2);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e6), 0xcb);
        EXPECT(gbc.readMem(0xd0e7), 0x93);
        // CB 93 010A
        gbc.setState(0xdb49, 0x4f24, 0xa680, 0x9b4d, 0xcec0, 0xaf7a, 0x0, 0x0);
        gbc.writeMem(0xdb49, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4f24);
        EXPECT(gbc.pc(), 0xdb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb49), 0xcb);
        EXPECT(gbc.readMem(0xdb4a), 0x93);
        // CB 93 010B
        gbc.setState(0x252b, 0xa704, 0x4160, 0xca34, 0x918c, 0x6b09, 0x1, 0x0);
        gbc.writeMem(0x252b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa704);
        EXPECT(gbc.pc(), 0x252d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 010C
        gbc.setState(0xad0d, 0x497c, 0xab50, 0x59cf, 0x5c45, 0x3e5, 0x1, 0x0);
        gbc.writeMem(0xad0d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x497c);
        EXPECT(gbc.pc(), 0xad0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad0d), 0xcb);
        EXPECT(gbc.readMem(0xad0e), 0x93);
        // CB 93 010D
        gbc.setState(0x2620, 0xfea4, 0x5820, 0xe1a, 0x12d2, 0x75a1, 0x1, 0x1);
        gbc.writeMem(0x2620, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfea4);
        EXPECT(gbc.pc(), 0x2622);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 010E
        gbc.setState(0xc940, 0x15dc, 0xb8b0, 0x77c5, 0xead5, 0x5ac, 0x0, 0x0);
        gbc.writeMem(0xc940, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x15dc);
        EXPECT(gbc.pc(), 0xc942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc940), 0xcb);
        EXPECT(gbc.readMem(0xc941), 0x93);
        // CB 93 010F
        gbc.setState(0x6c20, 0x5cc, 0x41f0, 0x6439, 0x250b, 0x983, 0x0, 0x0);
        gbc.writeMem(0x6c20, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5cc);
        EXPECT(gbc.pc(), 0x6c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0111
        gbc.setState(0x3273, 0x97af, 0xd650, 0x3b38, 0xdbd6, 0xc4df, 0x1, 0x1);
        gbc.writeMem(0x3273, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x97af);
        EXPECT(gbc.pc(), 0x3275);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0112
        gbc.setState(0xadab, 0xae5f, 0xbc20, 0xe5fa, 0x9f27, 0x3451, 0x1, 0x0);
        gbc.writeMem(0xadab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xae5f);
        EXPECT(gbc.pc(), 0xadad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadab), 0xcb);
        EXPECT(gbc.readMem(0xadac), 0x93);
        // CB 93 0113
        gbc.setState(0x2427, 0xf537, 0xd5d0, 0xc828, 0x2614, 0x2950, 0x0, 0x0);
        gbc.writeMem(0x2427, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf537);
        EXPECT(gbc.pc(), 0x2429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0114
        gbc.setState(0x5285, 0xc6de, 0x6b00, 0x2cea, 0xe8e9, 0xe5b8, 0x1, 0x0);
        gbc.writeMem(0x5285, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc6de);
        EXPECT(gbc.pc(), 0x5287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0115
        gbc.setState(0x96fd, 0x572c, 0xa550, 0x2e45, 0xb56e, 0x47a6, 0x0, 0x0);
        gbc.writeMem(0x96fd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x572c);
        EXPECT(gbc.pc(), 0x96ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fd), 0xcb);
        EXPECT(gbc.readMem(0x96fe), 0x93);
        // CB 93 0116
        gbc.setState(0x1b29, 0xff5c, 0xfe20, 0xa6bd, 0x2eb, 0xbf2d, 0x0, 0x1);
        gbc.writeMem(0x1b29, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xff5c);
        EXPECT(gbc.pc(), 0x1b2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0117
        gbc.setState(0x3fe6, 0x29ba, 0xf830, 0x81b1, 0x4718, 0x1fb8, 0x0, 0x1);
        gbc.writeMem(0x3fe6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x29ba);
        EXPECT(gbc.pc(), 0x3fe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0118
        gbc.setState(0x975, 0xbdee, 0xfda0, 0xbd1f, 0xb05c, 0xf9c8, 0x0, 0x1);
        gbc.writeMem(0x975, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xbdee);
        EXPECT(gbc.pc(), 0x977);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0119
        gbc.setState(0x3442, 0x905a, 0x5570, 0xef3b, 0x32b2, 0x3389, 0x0, 0x0);
        gbc.writeMem(0x3442, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x905a);
        EXPECT(gbc.pc(), 0x3444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 011A
        gbc.setState(0xa18d, 0xae70, 0x89c0, 0x24f8, 0x4d14, 0xa577, 0x1, 0x1);
        gbc.writeMem(0xa18d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xae70);
        EXPECT(gbc.pc(), 0xa18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa18d), 0xcb);
        EXPECT(gbc.readMem(0xa18e), 0x93);
        // CB 93 011B
        gbc.setState(0x9662, 0x953f, 0xa20, 0x7b21, 0x3868, 0xfe72, 0x0, 0x0);
        gbc.writeMem(0x9662, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x953f);
        EXPECT(gbc.pc(), 0x9664);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9662), 0xcb);
        EXPECT(gbc.readMem(0x9663), 0x93);
        // CB 93 011C
        gbc.setState(0xbdbd, 0x908e, 0x4220, 0xbd16, 0x55ae, 0x1fb7, 0x1, 0x0);
        gbc.writeMem(0xbdbd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x908e);
        EXPECT(gbc.pc(), 0xbdbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdbd), 0xcb);
        EXPECT(gbc.readMem(0xbdbe), 0x93);
        // CB 93 011D
        gbc.setState(0x63e, 0x4fc4, 0xdcc0, 0x3714, 0x972f, 0x3296, 0x0, 0x0);
        gbc.writeMem(0x63e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4fc4);
        EXPECT(gbc.pc(), 0x640);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 011E
        gbc.setState(0x1541, 0xf087, 0x9060, 0xf2b6, 0xc118, 0xa19, 0x0, 0x0);
        gbc.writeMem(0x1541, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf087);
        EXPECT(gbc.pc(), 0x1543);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 011F
        gbc.setState(0x6336, 0x70ed, 0x21e0, 0x342f, 0xfd9c, 0x100a, 0x0, 0x0);
        gbc.writeMem(0x6336, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x70ed);
        EXPECT(gbc.pc(), 0x6338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0120
        gbc.setState(0x16a6, 0xd295, 0x7ac0, 0x36ac, 0x478b, 0x71b2, 0x1, 0x0);
        gbc.writeMem(0x16a6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd295);
        EXPECT(gbc.pc(), 0x16a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0121
        gbc.setState(0xc973, 0x49ec, 0xc630, 0xceed, 0xf495, 0x2110, 0x0, 0x0);
        gbc.writeMem(0xc973, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x49ec);
        EXPECT(gbc.pc(), 0xc975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc973), 0xcb);
        EXPECT(gbc.readMem(0xc974), 0x93);
        // CB 93 0122
        gbc.setState(0x46ff, 0x3863, 0x88d0, 0x1c83, 0x2347, 0xa133, 0x1, 0x0);
        gbc.writeMem(0x46ff, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x3863);
        EXPECT(gbc.pc(), 0x4701);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0123
        gbc.setState(0x91c8, 0x1fbf, 0x4320, 0x9756, 0x4054, 0x9f57, 0x1, 0x1);
        gbc.writeMem(0x91c8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x1fbf);
        EXPECT(gbc.pc(), 0x91ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c8), 0xcb);
        EXPECT(gbc.readMem(0x91c9), 0x93);
        // CB 93 0124
        gbc.setState(0x96c4, 0x8401, 0x7010, 0xc7cc, 0x7075, 0xbe1a, 0x0, 0x0);
        gbc.writeMem(0x96c4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8401);
        EXPECT(gbc.pc(), 0x96c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c4), 0xcb);
        EXPECT(gbc.readMem(0x96c5), 0x93);
        // CB 93 0125
        gbc.setState(0xcb34, 0xeff7, 0xb080, 0x35d1, 0x3c1, 0x800c, 0x0, 0x1);
        gbc.writeMem(0xcb34, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xeff7);
        EXPECT(gbc.pc(), 0xcb36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb34), 0xcb);
        EXPECT(gbc.readMem(0xcb35), 0x93);
        // CB 93 0126
        gbc.setState(0x94d5, 0x66e9, 0xa3c0, 0xc129, 0xd0ee, 0x8861, 0x1, 0x0);
        gbc.writeMem(0x94d5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x66e9);
        EXPECT(gbc.pc(), 0x94d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d5), 0xcb);
        EXPECT(gbc.readMem(0x94d6), 0x93);
        // CB 93 0127
        gbc.setState(0x3128, 0xa7f5, 0x90e0, 0x2f7e, 0x388e, 0xf336, 0x0, 0x1);
        gbc.writeMem(0x3128, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xa7f5);
        EXPECT(gbc.pc(), 0x312a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0128
        gbc.setState(0x634d, 0x4f43, 0x8630, 0x3979, 0x7e21, 0xf4d3, 0x1, 0x0);
        gbc.writeMem(0x634d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4f43);
        EXPECT(gbc.pc(), 0x634f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 012A
        gbc.setState(0xac6a, 0x61bb, 0x1f70, 0xdc5e, 0xa1a6, 0xfa39, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x61bb);
        EXPECT(gbc.pc(), 0xac6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac6a), 0xcb);
        EXPECT(gbc.readMem(0xac6b), 0x93);
        // CB 93 012B
        gbc.setState(0xc095, 0x62d6, 0x4970, 0x27d4, 0xd655, 0x4b20, 0x0, 0x1);
        gbc.writeMem(0xc095, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x62d6);
        EXPECT(gbc.pc(), 0xc097);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc095), 0xcb);
        EXPECT(gbc.readMem(0xc096), 0x93);
        // CB 93 012C
        gbc.setState(0xd4a6, 0xc394, 0x440, 0xd14, 0x74d0, 0xd9ba, 0x0, 0x1);
        gbc.writeMem(0xd4a6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc394);
        EXPECT(gbc.pc(), 0xd4a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4a6), 0xcb);
        EXPECT(gbc.readMem(0xd4a7), 0x93);
        // CB 93 012D
        gbc.setState(0x2ab, 0x2e53, 0x1e80, 0x7cb6, 0x7e2a, 0xcad8, 0x1, 0x0);
        gbc.writeMem(0x2ab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2e53);
        EXPECT(gbc.pc(), 0x2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 012E
        gbc.setState(0x51d7, 0x6af4, 0x7e50, 0x6fb7, 0x19b, 0xe987, 0x1, 0x1);
        gbc.writeMem(0x51d7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6af4);
        EXPECT(gbc.pc(), 0x51d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 012F
        gbc.setState(0xd197, 0x34e, 0x9040, 0xa032, 0x4a62, 0x2ec3, 0x1, 0x0);
        gbc.writeMem(0xd197, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x34e);
        EXPECT(gbc.pc(), 0xd199);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd197), 0xcb);
        EXPECT(gbc.readMem(0xd198), 0x93);
        // CB 93 0130
        gbc.setState(0x73d4, 0x5911, 0xce20, 0xe81a, 0xd6f1, 0xd1f6, 0x0, 0x0);
        gbc.writeMem(0x73d4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x5911);
        EXPECT(gbc.pc(), 0x73d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0131
        gbc.setState(0x5d99, 0xcd7f, 0x750, 0xe190, 0x963f, 0x6ecb, 0x1, 0x1);
        gbc.writeMem(0x5d99, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xcd7f);
        EXPECT(gbc.pc(), 0x5d9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0132
        gbc.setState(0x8eb0, 0xe1dd, 0xc0d0, 0x90f8, 0xe71e, 0x7768, 0x1, 0x1);
        gbc.writeMem(0x8eb0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe1dd);
        EXPECT(gbc.pc(), 0x8eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb0), 0xcb);
        EXPECT(gbc.readMem(0x8eb1), 0x93);
        // CB 93 0133
        gbc.setState(0x6c81, 0xdb82, 0xbcb0, 0x562a, 0x54fc, 0x3350, 0x1, 0x1);
        gbc.writeMem(0x6c81, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xdb82);
        EXPECT(gbc.pc(), 0x6c83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0134
        gbc.setState(0x16a0, 0x710a, 0xde10, 0x2e9, 0xcbe4, 0x400, 0x1, 0x0);
        gbc.writeMem(0x16a0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x710a);
        EXPECT(gbc.pc(), 0x16a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0135
        gbc.setState(0xe285, 0x25f, 0x3190, 0x38d2, 0x3e3b, 0xba11, 0x0, 0x1);
        gbc.writeMem(0xe285, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x25f);
        EXPECT(gbc.pc(), 0xe287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe285), 0xcb);
        EXPECT(gbc.readMem(0xe286), 0x93);
        // CB 93 0136
        gbc.setState(0x9988, 0x464b, 0x8e20, 0x41ad, 0x59d4, 0x78c2, 0x0, 0x1);
        gbc.writeMem(0x9988, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x464b);
        EXPECT(gbc.pc(), 0x998a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9988), 0xcb);
        EXPECT(gbc.readMem(0x9989), 0x93);
        // CB 93 0137
        gbc.setState(0x3dc9, 0xd6a4, 0x86e0, 0xf266, 0xa19a, 0xb9b8, 0x1, 0x1);
        gbc.writeMem(0x3dc9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd6a4);
        EXPECT(gbc.pc(), 0x3dcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0138
        gbc.setState(0x69a2, 0x5e58, 0x4ae0, 0x2f66, 0x5390, 0x7cf7, 0x0, 0x1);
        gbc.writeMem(0x69a2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5e58);
        EXPECT(gbc.pc(), 0x69a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0139
        gbc.setState(0x62d6, 0x8181, 0x2700, 0xa5c2, 0x6fa4, 0xcd69, 0x0, 0x1);
        gbc.writeMem(0x62d6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8181);
        EXPECT(gbc.pc(), 0x62d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 013A
        gbc.setState(0x7498, 0xfa80, 0x4620, 0x27ce, 0x5c74, 0xb9e5, 0x0, 0x0);
        gbc.writeMem(0x7498, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfa80);
        EXPECT(gbc.pc(), 0x749a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 013B
        gbc.setState(0xe886, 0x167c, 0xb8a0, 0xd75, 0xdbc, 0xda4e, 0x0, 0x0);
        gbc.writeMem(0xe886, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x167c);
        EXPECT(gbc.pc(), 0xe888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe886), 0xcb);
        EXPECT(gbc.readMem(0xe887), 0x93);
        // CB 93 013C
        gbc.setState(0x42d, 0x20bd, 0x9c10, 0x7eab, 0x67d2, 0x100, 0x1, 0x1);
        gbc.writeMem(0x42d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x20bd);
        EXPECT(gbc.pc(), 0x42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 013D
        gbc.setState(0xe508, 0x4a70, 0xcc40, 0xfc82, 0x8aab, 0x1bc9, 0x0, 0x0);
        gbc.writeMem(0xe508, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4a70);
        EXPECT(gbc.pc(), 0xe50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe508), 0xcb);
        EXPECT(gbc.readMem(0xe509), 0x93);
        // CB 93 013E
        gbc.setState(0xc585, 0x627e, 0x79c0, 0xd74a, 0x9f11, 0x88a2, 0x0, 0x0);
        gbc.writeMem(0xc585, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x627e);
        EXPECT(gbc.pc(), 0xc587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc585), 0xcb);
        EXPECT(gbc.readMem(0xc586), 0x93);
        // CB 93 013F
        gbc.setState(0xcd7b, 0x8126, 0xd210, 0xb3b5, 0xd8c2, 0xd10e, 0x1, 0x0);
        gbc.writeMem(0xcd7b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8126);
        EXPECT(gbc.pc(), 0xcd7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd7b), 0xcb);
        EXPECT(gbc.readMem(0xcd7c), 0x93);
        // CB 93 0140
        gbc.setState(0x5304, 0x38a7, 0x43b0, 0x236a, 0xa7d3, 0xe33, 0x0, 0x0);
        gbc.writeMem(0x5304, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x38a7);
        EXPECT(gbc.pc(), 0x5306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0141
        gbc.setState(0x7f35, 0xa86f, 0x6870, 0xe083, 0x58b2, 0x819a, 0x1, 0x0);
        gbc.writeMem(0x7f35, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa86f);
        EXPECT(gbc.pc(), 0x7f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0142
        gbc.setState(0x1213, 0x9eea, 0xe160, 0x1524, 0xc78a, 0x590b, 0x0, 0x1);
        gbc.writeMem(0x1213, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9eea);
        EXPECT(gbc.pc(), 0x1215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0143
        gbc.setState(0xf61, 0x326, 0x88f0, 0x956e, 0x5fc8, 0xcc8c, 0x0, 0x1);
        gbc.writeMem(0xf61, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x326);
        EXPECT(gbc.pc(), 0xf63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0144
        gbc.setState(0xaee3, 0xfed8, 0x7570, 0xacff, 0xb5b, 0xbe1e, 0x0, 0x0);
        gbc.writeMem(0xaee3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0xaee5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee3), 0xcb);
        EXPECT(gbc.readMem(0xaee4), 0x93);
        // CB 93 0146
        gbc.setState(0x6e1, 0xb78d, 0x8fb0, 0x172c, 0x2fc3, 0x18a0, 0x1, 0x0);
        gbc.writeMem(0x6e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb78d);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0147
        gbc.setState(0xeb64, 0x7a33, 0xdf50, 0x75dd, 0xaa12, 0x965f, 0x0, 0x1);
        gbc.writeMem(0xeb64, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7a33);
        EXPECT(gbc.pc(), 0xeb66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb64), 0xcb);
        EXPECT(gbc.readMem(0xeb65), 0x93);
        // CB 93 0148
        gbc.setState(0xa45b, 0xd237, 0x3690, 0x4c1d, 0x5058, 0x79a0, 0x0, 0x0);
        gbc.writeMem(0xa45b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd237);
        EXPECT(gbc.pc(), 0xa45d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45b), 0xcb);
        EXPECT(gbc.readMem(0xa45c), 0x93);
        // CB 93 0149
        gbc.setState(0xd95a, 0x4e2e, 0xffe0, 0x37c3, 0x4b22, 0x6fe4, 0x0, 0x0);
        gbc.writeMem(0xd95a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4e2e);
        EXPECT(gbc.pc(), 0xd95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95a), 0xcb);
        EXPECT(gbc.readMem(0xd95b), 0x93);
        // CB 93 014A
        gbc.setState(0x7536, 0x99a4, 0x5890, 0xdf70, 0xa4bf, 0xc369, 0x1, 0x0);
        gbc.writeMem(0x7536, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x99a4);
        EXPECT(gbc.pc(), 0x7538);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 014B
        gbc.setState(0x2e, 0x1dd0, 0xc10, 0xe14f, 0x1845, 0xd156, 0x0, 0x1);
        gbc.writeMem(0x2e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1dd0);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 014C
        gbc.setState(0x6e14, 0xac87, 0x6bc0, 0x5498, 0xc2d, 0x2e07, 0x1, 0x1);
        gbc.writeMem(0x6e14, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xac87);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 014D
        gbc.setState(0xcb87, 0xa96f, 0xead0, 0x266f, 0x3eaf, 0x13e4, 0x0, 0x0);
        gbc.writeMem(0xcb87, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa96f);
        EXPECT(gbc.pc(), 0xcb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb87), 0xcb);
        EXPECT(gbc.readMem(0xcb88), 0x93);
        // CB 93 014E
        gbc.setState(0x8c5c, 0xaaa8, 0xe3f0, 0x9c4, 0xa702, 0x22ef, 0x0, 0x1);
        gbc.writeMem(0x8c5c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xaaa8);
        EXPECT(gbc.pc(), 0x8c5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5c), 0xcb);
        EXPECT(gbc.readMem(0x8c5d), 0x93);
        // CB 93 014F
        gbc.setState(0x3064, 0x616e, 0xbab0, 0xa5fe, 0x7e7e, 0x857, 0x1, 0x0);
        gbc.writeMem(0x3064, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x616e);
        EXPECT(gbc.pc(), 0x3066);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0150
        gbc.setState(0xb6ef, 0x131a, 0xc3e0, 0xa6b, 0x32a4, 0x5bda, 0x1, 0x0);
        gbc.writeMem(0xb6ef, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x131a);
        EXPECT(gbc.pc(), 0xb6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ef), 0xcb);
        EXPECT(gbc.readMem(0xb6f0), 0x93);
        // CB 93 0151
        gbc.setState(0x74a8, 0x7668, 0xbc40, 0xd7ed, 0x7d2a, 0x320f, 0x0, 0x0);
        gbc.writeMem(0x74a8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7668);
        EXPECT(gbc.pc(), 0x74aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0152
        gbc.setState(0xafb4, 0x64ce, 0xf500, 0x272b, 0x7bcf, 0x991b, 0x1, 0x0);
        gbc.writeMem(0xafb4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x64ce);
        EXPECT(gbc.pc(), 0xafb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb4), 0xcb);
        EXPECT(gbc.readMem(0xafb5), 0x93);
        // CB 93 0153
        gbc.setState(0xcb4e, 0xbabe, 0x9270, 0x9cf1, 0x8647, 0xb00b, 0x0, 0x0);
        gbc.writeMem(0xcb4e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbabe);
        EXPECT(gbc.pc(), 0xcb50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb4e), 0xcb);
        EXPECT(gbc.readMem(0xcb4f), 0x93);
        // CB 93 0154
        gbc.setState(0xd11, 0x6f07, 0x21f0, 0x5a19, 0x6b13, 0x215, 0x1, 0x1);
        gbc.writeMem(0xd11, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6f07);
        EXPECT(gbc.pc(), 0xd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0155
        gbc.setState(0xbaab, 0x3a45, 0x4aa0, 0x4119, 0x9a1d, 0x59f0, 0x1, 0x1);
        gbc.writeMem(0xbaab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3a45);
        EXPECT(gbc.pc(), 0xbaad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaab), 0xcb);
        EXPECT(gbc.readMem(0xbaac), 0x93);
        // CB 93 0156
        gbc.setState(0xaaef, 0xc3e4, 0x2ed0, 0x4c79, 0xf89a, 0xedf3, 0x1, 0x0);
        gbc.writeMem(0xaaef, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc3e4);
        EXPECT(gbc.pc(), 0xaaf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaef), 0xcb);
        EXPECT(gbc.readMem(0xaaf0), 0x93);
        // CB 93 0157
        gbc.setState(0xbb98, 0x787b, 0xbd40, 0x2dca, 0xfc0d, 0x3244, 0x1, 0x1);
        gbc.writeMem(0xbb98, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x787b);
        EXPECT(gbc.pc(), 0xbb9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb98), 0xcb);
        EXPECT(gbc.readMem(0xbb99), 0x93);
        // CB 93 0158
        gbc.setState(0x9629, 0x478, 0x8b00, 0x5a30, 0xeab6, 0x49bf, 0x1, 0x1);
        gbc.writeMem(0x9629, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x478);
        EXPECT(gbc.pc(), 0x962b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9629), 0xcb);
        EXPECT(gbc.readMem(0x962a), 0x93);
        // CB 93 0159
        gbc.setState(0xc0d9, 0x731c, 0x9280, 0x9a1f, 0xa761, 0x658f, 0x1, 0x0);
        gbc.writeMem(0xc0d9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x731c);
        EXPECT(gbc.pc(), 0xc0db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d9), 0xcb);
        EXPECT(gbc.readMem(0xc0da), 0x93);
        // CB 93 015A
        gbc.setState(0xd064, 0xbbc6, 0x5fe0, 0x9a77, 0xc8e2, 0x2e83, 0x0, 0x0);
        gbc.writeMem(0xd064, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0xd066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd064), 0xcb);
        EXPECT(gbc.readMem(0xd065), 0x93);
        // CB 93 015B
        gbc.setState(0x32de, 0xf345, 0xce0, 0x7db2, 0x56e8, 0x4cd9, 0x1, 0x1);
        gbc.writeMem(0x32de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf345);
        EXPECT(gbc.pc(), 0x32e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 015C
        gbc.setState(0xc7c9, 0xe3bc, 0x7c50, 0xd362, 0xef22, 0xe83d, 0x1, 0x1);
        gbc.writeMem(0xc7c9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe3bc);
        EXPECT(gbc.pc(), 0xc7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7c9), 0xcb);
        EXPECT(gbc.readMem(0xc7ca), 0x93);
        // CB 93 015D
        gbc.setState(0x880d, 0xf4ab, 0xd720, 0x5d19, 0x1788, 0xd42f, 0x0, 0x0);
        gbc.writeMem(0x880d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf4ab);
        EXPECT(gbc.pc(), 0x880f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880d), 0xcb);
        EXPECT(gbc.readMem(0x880e), 0x93);
        // CB 93 015E
        gbc.setState(0xaa9d, 0xa954, 0xa7a0, 0x257f, 0xf596, 0x5263, 0x1, 0x0);
        gbc.writeMem(0xaa9d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xa954);
        EXPECT(gbc.pc(), 0xaa9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9d), 0xcb);
        EXPECT(gbc.readMem(0xaa9e), 0x93);
        // CB 93 015F
        gbc.setState(0x3037, 0x1ec5, 0x4170, 0x2706, 0x5339, 0x3580, 0x1, 0x0);
        gbc.writeMem(0x3037, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1ec5);
        EXPECT(gbc.pc(), 0x3039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0160
        gbc.setState(0xca94, 0x3a3a, 0xbe90, 0x2439, 0x2df6, 0x550e, 0x0, 0x1);
        gbc.writeMem(0xca94, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3a3a);
        EXPECT(gbc.pc(), 0xca96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca94), 0xcb);
        EXPECT(gbc.readMem(0xca95), 0x93);
        // CB 93 0161
        gbc.setState(0xae2e, 0xc24c, 0x1fd0, 0xe3b1, 0x1b24, 0x759d, 0x1, 0x1);
        gbc.writeMem(0xae2e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc24c);
        EXPECT(gbc.pc(), 0xae30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae2e), 0xcb);
        EXPECT(gbc.readMem(0xae2f), 0x93);
        // CB 93 0162
        gbc.setState(0xc1d4, 0x955c, 0x6490, 0xacdf, 0xeef7, 0x3734, 0x0, 0x1);
        gbc.writeMem(0xc1d4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x955c);
        EXPECT(gbc.pc(), 0xc1d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d4), 0xcb);
        EXPECT(gbc.readMem(0xc1d5), 0x93);
        // CB 93 0163
        gbc.setState(0x3e8, 0xfa89, 0xaac0, 0x82cc, 0x8309, 0x29f7, 0x1, 0x1);
        gbc.writeMem(0x3e8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfa89);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0164
        gbc.setState(0xa827, 0x107b, 0x80d0, 0x8e4b, 0xc643, 0xa974, 0x0, 0x1);
        gbc.writeMem(0xa827, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x107b);
        EXPECT(gbc.pc(), 0xa829);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa827), 0xcb);
        EXPECT(gbc.readMem(0xa828), 0x93);
        // CB 93 0165
        gbc.setState(0x8023, 0xfdca, 0xabc0, 0x1f68, 0xe743, 0xafe7, 0x0, 0x0);
        gbc.writeMem(0x8023, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfdca);
        EXPECT(gbc.pc(), 0x8025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8023), 0xcb);
        EXPECT(gbc.readMem(0x8024), 0x93);
        // CB 93 0166
        gbc.setState(0xe149, 0xb366, 0x4c80, 0x726f, 0xbc99, 0x82ff, 0x1, 0x0);
        gbc.writeMem(0xe149, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb366);
        EXPECT(gbc.pc(), 0xe14b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe149), 0xcb);
        EXPECT(gbc.readMem(0xe14a), 0x93);
        // CB 93 0167
        gbc.setState(0x852e, 0x2255, 0x44e0, 0x9bbf, 0xb4da, 0x74f2, 0x0, 0x1);
        gbc.writeMem(0x852e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2255);
        EXPECT(gbc.pc(), 0x8530);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x852e), 0xcb);
        EXPECT(gbc.readMem(0x852f), 0x93);
        // CB 93 0168
        gbc.setState(0x2321, 0x5b77, 0x74e0, 0xd38b, 0xd82e, 0x2a8a, 0x1, 0x1);
        gbc.writeMem(0x2321, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5b77);
        EXPECT(gbc.pc(), 0x2323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0169
        gbc.setState(0x4a3d, 0xb828, 0xd990, 0x148, 0x5a6b, 0x175f, 0x1, 0x0);
        gbc.writeMem(0x4a3d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb828);
        EXPECT(gbc.pc(), 0x4a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 016A
        gbc.setState(0xe9af, 0x823, 0x9240, 0xcc5d, 0x33e8, 0x56af, 0x1, 0x0);
        gbc.writeMem(0xe9af, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x823);
        EXPECT(gbc.pc(), 0xe9b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9af), 0xcb);
        EXPECT(gbc.readMem(0xe9b0), 0x93);
        // CB 93 016C
        gbc.setState(0xd740, 0xd854, 0xe790, 0x82da, 0xc383, 0xbea, 0x1, 0x1);
        gbc.writeMem(0xd740, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd854);
        EXPECT(gbc.pc(), 0xd742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd740), 0xcb);
        EXPECT(gbc.readMem(0xd741), 0x93);
        // CB 93 016D
        gbc.setState(0xca8e, 0xacc1, 0x98c0, 0x2b29, 0xdffe, 0x15be, 0x0, 0x0);
        gbc.writeMem(0xca8e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xacc1);
        EXPECT(gbc.pc(), 0xca90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8e), 0xcb);
        EXPECT(gbc.readMem(0xca8f), 0x93);
        // CB 93 016F
        gbc.setState(0x54a7, 0xcbb0, 0xbd20, 0x22ad, 0xc857, 0xf5e1, 0x1, 0x0);
        gbc.writeMem(0x54a7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcbb0);
        EXPECT(gbc.pc(), 0x54a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0170
        gbc.setState(0x4b4, 0x64e0, 0x7630, 0x430f, 0xdafa, 0x11c9, 0x0, 0x0);
        gbc.writeMem(0x4b4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x64e0);
        EXPECT(gbc.pc(), 0x4b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0171
        gbc.setState(0xc3ee, 0xcd1a, 0x7e80, 0x95ce, 0x2d57, 0x47ad, 0x0, 0x1);
        gbc.writeMem(0xc3ee, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcd1a);
        EXPECT(gbc.pc(), 0xc3f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ee), 0xcb);
        EXPECT(gbc.readMem(0xc3ef), 0x93);
        // CB 93 0172
        gbc.setState(0x7e9d, 0xb835, 0x7740, 0x5af, 0xbf7f, 0x5068, 0x1, 0x1);
        gbc.writeMem(0x7e9d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb835);
        EXPECT(gbc.pc(), 0x7e9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0173
        gbc.setState(0x90db, 0xb935, 0xace0, 0x14d0, 0xfe2b, 0x83f9, 0x1, 0x0);
        gbc.writeMem(0x90db, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb935);
        EXPECT(gbc.pc(), 0x90dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90db), 0xcb);
        EXPECT(gbc.readMem(0x90dc), 0x93);
        // CB 93 0174
        gbc.setState(0x6652, 0x605, 0x7f00, 0x9d46, 0x6cb2, 0x308b, 0x1, 0x1);
        gbc.writeMem(0x6652, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x605);
        EXPECT(gbc.pc(), 0x6654);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0175
        gbc.setState(0x7246, 0xbd8b, 0xb520, 0x244b, 0x8f59, 0xf421, 0x0, 0x0);
        gbc.writeMem(0x7246, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbd8b);
        EXPECT(gbc.pc(), 0x7248);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0177
        gbc.setState(0x3cf5, 0x8122, 0x66f0, 0x1d6b, 0x8d75, 0x1e3b, 0x0, 0x1);
        gbc.writeMem(0x3cf5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x8122);
        EXPECT(gbc.pc(), 0x3cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0178
        gbc.setState(0x376, 0x24bb, 0x3d00, 0x5b13, 0x89e4, 0xeb3f, 0x0, 0x1);
        gbc.writeMem(0x376, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x24bb);
        EXPECT(gbc.pc(), 0x378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0179
        gbc.setState(0xd700, 0x3cb8, 0xeb00, 0x79ff, 0x1b0f, 0x85db, 0x0, 0x1);
        gbc.writeMem(0xd700, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3cb8);
        EXPECT(gbc.pc(), 0xd702);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd700), 0xcb);
        EXPECT(gbc.readMem(0xd701), 0x93);
        // CB 93 017A
        gbc.setState(0xa6b, 0xbc4b, 0xd520, 0xe2be, 0x2716, 0xb4f5, 0x0, 0x1);
        gbc.writeMem(0xa6b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xbc4b);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 017C
        gbc.setState(0x171d, 0xda2f, 0x5890, 0xd0a0, 0xc1ee, 0xf6c, 0x1, 0x0);
        gbc.writeMem(0x171d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xda2f);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 017D
        gbc.setState(0xda38, 0x45c7, 0x93d0, 0x6ed1, 0xf1cb, 0xd90, 0x0, 0x0);
        gbc.writeMem(0xda38, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x45c7);
        EXPECT(gbc.pc(), 0xda3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda38), 0xcb);
        EXPECT(gbc.readMem(0xda39), 0x93);
        // CB 93 017E
        gbc.setState(0xd971, 0x8484, 0x9430, 0x27ce, 0x14c1, 0xbb8b, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0xd973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd971), 0xcb);
        EXPECT(gbc.readMem(0xd972), 0x93);
        // CB 93 0180
        gbc.setState(0x2db2, 0xf633, 0x62e0, 0xb557, 0x650b, 0x73d8, 0x0, 0x0);
        gbc.writeMem(0x2db2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xf633);
        EXPECT(gbc.pc(), 0x2db4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0181
        gbc.setState(0xd3ad, 0xb280, 0x3790, 0x669a, 0xfcb6, 0xbb36, 0x1, 0x1);
        gbc.writeMem(0xd3ad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb280);
        EXPECT(gbc.pc(), 0xd3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ad), 0xcb);
        EXPECT(gbc.readMem(0xd3ae), 0x93);
        // CB 93 0182
        gbc.setState(0x92a7, 0x47e8, 0x29c0, 0xf115, 0xb7cb, 0x7197, 0x0, 0x1);
        gbc.writeMem(0x92a7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x47e8);
        EXPECT(gbc.pc(), 0x92a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a7), 0xcb);
        EXPECT(gbc.readMem(0x92a8), 0x93);
        // CB 93 0183
        gbc.setState(0x61e8, 0x1e7d, 0xd220, 0xb9b, 0xe24f, 0x5ebd, 0x0, 0x1);
        gbc.writeMem(0x61e8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1e7d);
        EXPECT(gbc.pc(), 0x61ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0185
        gbc.setState(0x5f8e, 0x3dfa, 0xe780, 0x8aeb, 0x2681, 0xc3ca, 0x0, 0x0);
        gbc.writeMem(0x5f8e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3dfa);
        EXPECT(gbc.pc(), 0x5f90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0186
        gbc.setState(0x5deb, 0xa14, 0x5760, 0xafbe, 0xc3a9, 0x89e1, 0x1, 0x1);
        gbc.writeMem(0x5deb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xa14);
        EXPECT(gbc.pc(), 0x5ded);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0187
        gbc.setState(0xaafb, 0xd678, 0x1180, 0xc1f0, 0x5027, 0xe581, 0x1, 0x0);
        gbc.writeMem(0xaafb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd678);
        EXPECT(gbc.pc(), 0xaafd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaafb), 0xcb);
        EXPECT(gbc.readMem(0xaafc), 0x93);
        // CB 93 0188
        gbc.setState(0xcb2c, 0xf96b, 0xcd0, 0xd2a1, 0x261f, 0xe826, 0x0, 0x1);
        gbc.writeMem(0xcb2c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf96b);
        EXPECT(gbc.pc(), 0xcb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2c), 0xcb);
        EXPECT(gbc.readMem(0xcb2d), 0x93);
        // CB 93 0189
        gbc.setState(0xe037, 0x9110, 0x1340, 0xb7b, 0xf8a6, 0x439, 0x1, 0x0);
        gbc.writeMem(0xe037, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9110);
        EXPECT(gbc.pc(), 0xe039);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe037), 0xcb);
        EXPECT(gbc.readMem(0xe038), 0x93);
        // CB 93 018A
        gbc.setState(0xb7e0, 0x62a0, 0xd3f0, 0xeca7, 0x7621, 0xe0bd, 0x0, 0x1);
        gbc.writeMem(0xb7e0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x62a0);
        EXPECT(gbc.pc(), 0xb7e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7e0), 0xcb);
        EXPECT(gbc.readMem(0xb7e1), 0x93);
        // CB 93 018B
        gbc.setState(0x9f7e, 0x53d6, 0x4b70, 0x54e7, 0xa409, 0x3b19, 0x0, 0x0);
        gbc.writeMem(0x9f7e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x53d6);
        EXPECT(gbc.pc(), 0x9f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f7e), 0xcb);
        EXPECT(gbc.readMem(0x9f7f), 0x93);
        // CB 93 018C
        gbc.setState(0x7fee, 0x382a, 0x450, 0xbb2d, 0xffe2, 0x36af, 0x0, 0x1);
        gbc.writeMem(0x7fee, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x382a);
        EXPECT(gbc.pc(), 0x7ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 018D
        gbc.setState(0x74de, 0xd22, 0x5530, 0xa544, 0xde5e, 0xa902, 0x1, 0x0);
        gbc.writeMem(0x74de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xd22);
        EXPECT(gbc.pc(), 0x74e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 018E
        gbc.setState(0xa65, 0xf839, 0xe790, 0x13ce, 0xe4b7, 0x1116, 0x1, 0x0);
        gbc.writeMem(0xa65, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf839);
        EXPECT(gbc.pc(), 0xa67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 018F
        gbc.setState(0xd209, 0xa08d, 0x84e0, 0x3524, 0x6750, 0xf5e6, 0x1, 0x0);
        gbc.writeMem(0xd209, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa08d);
        EXPECT(gbc.pc(), 0xd20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd209), 0xcb);
        EXPECT(gbc.readMem(0xd20a), 0x93);
        // CB 93 0190
        gbc.setState(0x32bd, 0x1917, 0x5ee0, 0xb60a, 0xf21b, 0xfc2c, 0x1, 0x1);
        gbc.writeMem(0x32bd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1917);
        EXPECT(gbc.pc(), 0x32bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0191
        gbc.setState(0xe969, 0xe791, 0x77e0, 0xf5a9, 0x359e, 0x8dca, 0x1, 0x0);
        gbc.writeMem(0xe969, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe791);
        EXPECT(gbc.pc(), 0xe96b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe969), 0xcb);
        EXPECT(gbc.readMem(0xe96a), 0x93);
        // CB 93 0192
        gbc.setState(0x71cd, 0x3960, 0xebe0, 0x2532, 0xa1de, 0xa9eb, 0x1, 0x1);
        gbc.writeMem(0x71cd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x3960);
        EXPECT(gbc.pc(), 0x71cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0193
        gbc.setState(0x2f29, 0xb30a, 0xebc0, 0xde1f, 0xa678, 0x5b26, 0x0, 0x1);
        gbc.writeMem(0x2f29, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xb30a);
        EXPECT(gbc.pc(), 0x2f2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0194
        gbc.setState(0x361f, 0x2071, 0x8f20, 0x53cf, 0xeca4, 0xbae6, 0x0, 0x1);
        gbc.writeMem(0x361f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2071);
        EXPECT(gbc.pc(), 0x3621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0195
        gbc.setState(0xb278, 0xa6be, 0x66c0, 0x43b, 0x7cc2, 0x256b, 0x0, 0x1);
        gbc.writeMem(0xb278, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xa6be);
        EXPECT(gbc.pc(), 0xb27a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb278), 0xcb);
        EXPECT(gbc.readMem(0xb279), 0x93);
        // CB 93 0196
        gbc.setState(0xc868, 0xf379, 0x4620, 0xab78, 0x6045, 0x44d7, 0x1, 0x0);
        gbc.writeMem(0xc868, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf379);
        EXPECT(gbc.pc(), 0xc86a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc868), 0xcb);
        EXPECT(gbc.readMem(0xc869), 0x93);
        // CB 93 0197
        gbc.setState(0x9894, 0xd842, 0x92f0, 0xbe8e, 0xb56c, 0x41f9, 0x1, 0x1);
        gbc.writeMem(0x9894, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd842);
        EXPECT(gbc.pc(), 0x9896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9894), 0xcb);
        EXPECT(gbc.readMem(0x9895), 0x93);
        // CB 93 0198
        gbc.setState(0x17c, 0xf2ca, 0x5880, 0xdf3c, 0xb669, 0x7764, 0x0, 0x1);
        gbc.writeMem(0x17c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf2ca);
        EXPECT(gbc.pc(), 0x17e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0199
        gbc.setState(0xb5c9, 0x627a, 0x1db0, 0x5eb5, 0x8c82, 0x168f, 0x1, 0x1);
        gbc.writeMem(0xb5c9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x627a);
        EXPECT(gbc.pc(), 0xb5cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c9), 0xcb);
        EXPECT(gbc.readMem(0xb5ca), 0x93);
        // CB 93 019A
        gbc.setState(0xe82c, 0x5df, 0xe430, 0x5167, 0xce70, 0xf27a, 0x1, 0x1);
        gbc.writeMem(0xe82c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5df);
        EXPECT(gbc.pc(), 0xe82e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe82c), 0xcb);
        EXPECT(gbc.readMem(0xe82d), 0x93);
        // CB 93 019B
        gbc.setState(0x4409, 0xd75c, 0x4280, 0x2cf, 0x8567, 0xded3, 0x1, 0x0);
        gbc.writeMem(0x4409, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd75c);
        EXPECT(gbc.pc(), 0x440b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 019C
        gbc.setState(0x183c, 0x74c3, 0x53e0, 0x9b1e, 0x5cf7, 0x57b5, 0x0, 0x0);
        gbc.writeMem(0x183c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x74c3);
        EXPECT(gbc.pc(), 0x183e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 019D
        gbc.setState(0x86c3, 0x1b41, 0xb580, 0x8aa5, 0x4061, 0x6c43, 0x1, 0x0);
        gbc.writeMem(0x86c3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b41);
        EXPECT(gbc.pc(), 0x86c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86c3), 0xcb);
        EXPECT(gbc.readMem(0x86c4), 0x93);
        // CB 93 019E
        gbc.setState(0xb522, 0x959a, 0x6a50, 0xd028, 0x22b5, 0x85d0, 0x0, 0x0);
        gbc.writeMem(0xb522, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0xb524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb522), 0xcb);
        EXPECT(gbc.readMem(0xb523), 0x93);
        // CB 93 019F
        gbc.setState(0xdcfb, 0xe534, 0x26c0, 0x6b84, 0xf850, 0xa5c4, 0x0, 0x1);
        gbc.writeMem(0xdcfb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0xdcfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfb), 0xcb);
        EXPECT(gbc.readMem(0xdcfc), 0x93);
        // CB 93 01A0
        gbc.setState(0x3743, 0x78d1, 0x6900, 0xdf72, 0x58a8, 0x6999, 0x0, 0x0);
        gbc.writeMem(0x3743, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x78d1);
        EXPECT(gbc.pc(), 0x3745);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01A1
        gbc.setState(0xdb7a, 0xba87, 0xf830, 0x4acc, 0x66e4, 0x4246, 0x1, 0x1);
        gbc.writeMem(0xdb7a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xba87);
        EXPECT(gbc.pc(), 0xdb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7a), 0xcb);
        EXPECT(gbc.readMem(0xdb7b), 0x93);
        // CB 93 01A2
        gbc.setState(0x78d9, 0xef93, 0xeb30, 0x5da8, 0x92e6, 0x8634, 0x1, 0x0);
        gbc.writeMem(0x78d9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xef93);
        EXPECT(gbc.pc(), 0x78db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01A3
        gbc.setState(0x96aa, 0x4842, 0xf840, 0x330a, 0x4423, 0xe6e7, 0x1, 0x0);
        gbc.writeMem(0x96aa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4842);
        EXPECT(gbc.pc(), 0x96ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96aa), 0xcb);
        EXPECT(gbc.readMem(0x96ab), 0x93);
        // CB 93 01A4
        gbc.setState(0x5109, 0x4567, 0x7fe0, 0x15cd, 0x26bb, 0xf406, 0x1, 0x1);
        gbc.writeMem(0x5109, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x4567);
        EXPECT(gbc.pc(), 0x510b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01A5
        gbc.setState(0x10fb, 0xa43c, 0x25c0, 0x3ad5, 0xa72, 0x7590, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa43c);
        EXPECT(gbc.pc(), 0x10fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01A6
        gbc.setState(0xe86, 0xff7d, 0x3b70, 0xc2b8, 0x9693, 0xf954, 0x0, 0x1);
        gbc.writeMem(0xe86, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xff7d);
        EXPECT(gbc.pc(), 0xe88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01A7
        gbc.setState(0xb6d3, 0xf619, 0x21f0, 0x70e, 0x12bc, 0x67a3, 0x1, 0x1);
        gbc.writeMem(0xb6d3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf619);
        EXPECT(gbc.pc(), 0xb6d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6d3), 0xcb);
        EXPECT(gbc.readMem(0xb6d4), 0x93);
        // CB 93 01AA
        gbc.setState(0xeebd, 0x8eb8, 0x2690, 0x55db, 0x3f69, 0x1d31, 0x0, 0x0);
        gbc.writeMem(0xeebd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x8eb8);
        EXPECT(gbc.pc(), 0xeebf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeebd), 0xcb);
        EXPECT(gbc.readMem(0xeebe), 0x93);
        // CB 93 01AB
        gbc.setState(0x3376, 0x84e1, 0xc80, 0xb1b5, 0xbe91, 0x9ae3, 0x0, 0x0);
        gbc.writeMem(0x3376, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x84e1);
        EXPECT(gbc.pc(), 0x3378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01AC
        gbc.setState(0x4aa0, 0x41a1, 0x19b0, 0x95d6, 0x877e, 0xb406, 0x1, 0x0);
        gbc.writeMem(0x4aa0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x41a1);
        EXPECT(gbc.pc(), 0x4aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01AD
        gbc.setState(0x7c62, 0x3828, 0x5170, 0x9e43, 0x2196, 0xe6a, 0x1, 0x0);
        gbc.writeMem(0x7c62, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3828);
        EXPECT(gbc.pc(), 0x7c64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01AE
        gbc.setState(0x9903, 0x53be, 0xb060, 0xa20e, 0xaa7c, 0x371c, 0x1, 0x1);
        gbc.writeMem(0x9903, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x53be);
        EXPECT(gbc.pc(), 0x9905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9903), 0xcb);
        EXPECT(gbc.readMem(0x9904), 0x93);
        // CB 93 01AF
        gbc.setState(0xa2df, 0x5fec, 0xf520, 0x1c99, 0xb5fd, 0x87db, 0x1, 0x1);
        gbc.writeMem(0xa2df, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x5fec);
        EXPECT(gbc.pc(), 0xa2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2df), 0xcb);
        EXPECT(gbc.readMem(0xa2e0), 0x93);
        // CB 93 01B0
        gbc.setState(0xa911, 0xafe, 0xcbf0, 0x9643, 0xf2c0, 0x238, 0x1, 0x0);
        gbc.writeMem(0xa911, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xafe);
        EXPECT(gbc.pc(), 0xa913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa911), 0xcb);
        EXPECT(gbc.readMem(0xa912), 0x93);
        // CB 93 01B1
        gbc.setState(0x7e05, 0x553b, 0xd030, 0x7408, 0x9cb1, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x7e05, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x553b);
        EXPECT(gbc.pc(), 0x7e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01B2
        gbc.setState(0x4048, 0xbc29, 0x4f00, 0x6c97, 0xd118, 0x6779, 0x0, 0x1);
        gbc.writeMem(0x4048, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbc29);
        EXPECT(gbc.pc(), 0x404a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01B3
        gbc.setState(0x4c39, 0x11f0, 0xd160, 0xd103, 0x4e5d, 0xf868, 0x0, 0x1);
        gbc.writeMem(0x4c39, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x11f0);
        EXPECT(gbc.pc(), 0x4c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01B4
        gbc.setState(0x1322, 0x5a7e, 0x20e0, 0x72c0, 0x6fb5, 0x376f, 0x0, 0x0);
        gbc.writeMem(0x1322, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5a7e);
        EXPECT(gbc.pc(), 0x1324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01B5
        gbc.setState(0xe9b3, 0xab84, 0x260, 0x6e2f, 0x5374, 0x9190, 0x0, 0x0);
        gbc.writeMem(0xe9b3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xab84);
        EXPECT(gbc.pc(), 0xe9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9b3), 0xcb);
        EXPECT(gbc.readMem(0xe9b4), 0x93);
        // CB 93 01B6
        gbc.setState(0x1839, 0x1c4e, 0x7e90, 0x4ab2, 0xa265, 0xeecb, 0x0, 0x1);
        gbc.writeMem(0x1839, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1c4e);
        EXPECT(gbc.pc(), 0x183b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01B7
        gbc.setState(0xb35a, 0xcbd4, 0x91f0, 0x801e, 0x28a8, 0xccbd, 0x0, 0x0);
        gbc.writeMem(0xb35a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcbd4);
        EXPECT(gbc.pc(), 0xb35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35a), 0xcb);
        EXPECT(gbc.readMem(0xb35b), 0x93);
        // CB 93 01B8
        gbc.setState(0x7934, 0xd188, 0x1950, 0x6f3a, 0x5548, 0xd8ba, 0x1, 0x1);
        gbc.writeMem(0x7934, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xd188);
        EXPECT(gbc.pc(), 0x7936);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01B9
        gbc.setState(0xce0, 0x7635, 0x1c40, 0x1d33, 0x7be8, 0xe438, 0x1, 0x1);
        gbc.writeMem(0xce0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7635);
        EXPECT(gbc.pc(), 0xce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01BA
        gbc.setState(0xed6c, 0x7757, 0xf3d0, 0x4071, 0x61c5, 0x5d18, 0x0, 0x0);
        gbc.writeMem(0xed6c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7757);
        EXPECT(gbc.pc(), 0xed6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed6c), 0xcb);
        EXPECT(gbc.readMem(0xed6d), 0x93);
        // CB 93 01BB
        gbc.setState(0x4732, 0x53e9, 0xc530, 0xf971, 0xda7b, 0xd044, 0x1, 0x1);
        gbc.writeMem(0x4732, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x53e9);
        EXPECT(gbc.pc(), 0x4734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01BC
        gbc.setState(0x71ee, 0x5413, 0xd700, 0xeec9, 0xa64, 0x36b2, 0x0, 0x1);
        gbc.writeMem(0x71ee, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5413);
        EXPECT(gbc.pc(), 0x71f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01BD
        gbc.setState(0xde35, 0x37e0, 0xc400, 0x35d3, 0x4ecc, 0xdb00, 0x1, 0x1);
        gbc.writeMem(0xde35, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x37e0);
        EXPECT(gbc.pc(), 0xde37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde35), 0xcb);
        EXPECT(gbc.readMem(0xde36), 0x93);
        // CB 93 01BE
        gbc.setState(0x2ec0, 0x57bb, 0xb2a0, 0x2fee, 0xacb2, 0xfb3d, 0x1, 0x0);
        gbc.writeMem(0x2ec0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x57bb);
        EXPECT(gbc.pc(), 0x2ec2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01BF
        gbc.setState(0xe52c, 0x13a, 0x4e90, 0x7948, 0xf44e, 0xd256, 0x0, 0x0);
        gbc.writeMem(0xe52c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0xe52e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe52c), 0xcb);
        EXPECT(gbc.readMem(0xe52d), 0x93);
        // CB 93 01C0
        gbc.setState(0xb006, 0xd169, 0x6ba0, 0x3b6e, 0xc4c8, 0xca8b, 0x1, 0x0);
        gbc.writeMem(0xb006, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd169);
        EXPECT(gbc.pc(), 0xb008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb006), 0xcb);
        EXPECT(gbc.readMem(0xb007), 0x93);
        // CB 93 01C1
        gbc.setState(0xd592, 0x9678, 0x6850, 0x9e72, 0xe602, 0x8c7b, 0x0, 0x1);
        gbc.writeMem(0xd592, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9678);
        EXPECT(gbc.pc(), 0xd594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd592), 0xcb);
        EXPECT(gbc.readMem(0xd593), 0x93);
        // CB 93 01C2
        gbc.setState(0x4ef, 0x38a3, 0x8270, 0x525a, 0xcd82, 0xdd1b, 0x1, 0x1);
        gbc.writeMem(0x4ef, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x38a3);
        EXPECT(gbc.pc(), 0x4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01C3
        gbc.setState(0xd2d8, 0x836b, 0xcfa0, 0xc4df, 0xf838, 0x5f0, 0x1, 0x0);
        gbc.writeMem(0xd2d8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x836b);
        EXPECT(gbc.pc(), 0xd2da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d8), 0xcb);
        EXPECT(gbc.readMem(0xd2d9), 0x93);
        // CB 93 01C4
        gbc.setState(0x73ca, 0x49b5, 0x2800, 0xddb8, 0x746d, 0xe224, 0x1, 0x1);
        gbc.writeMem(0x73ca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x49b5);
        EXPECT(gbc.pc(), 0x73cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01C5
        gbc.setState(0x7d5a, 0xed8e, 0xf100, 0xee4, 0xae1a, 0x9892, 0x0, 0x1);
        gbc.writeMem(0x7d5a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xed8e);
        EXPECT(gbc.pc(), 0x7d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01C6
        gbc.setState(0x625a, 0x25e9, 0xb290, 0x229a, 0x351b, 0x7105, 0x0, 0x1);
        gbc.writeMem(0x625a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x25e9);
        EXPECT(gbc.pc(), 0x625c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01C7
        gbc.setState(0x5637, 0x85f5, 0x2c40, 0x3977, 0x9213, 0x793c, 0x1, 0x0);
        gbc.writeMem(0x5637, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x85f5);
        EXPECT(gbc.pc(), 0x5639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01C9
        gbc.setState(0x4621, 0xfc26, 0xc6a0, 0xe6a4, 0xb67, 0x1d00, 0x0, 0x0);
        gbc.writeMem(0x4621, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0x4623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01CA
        gbc.setState(0xb311, 0x1dff, 0x4800, 0x1a03, 0x3c24, 0xf47c, 0x0, 0x0);
        gbc.writeMem(0xb311, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x1dff);
        EXPECT(gbc.pc(), 0xb313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb311), 0xcb);
        EXPECT(gbc.readMem(0xb312), 0x93);
        // CB 93 01CB
        gbc.setState(0x3c1f, 0xffdf, 0xbde0, 0x8363, 0x5c9f, 0xda22, 0x0, 0x0);
        gbc.writeMem(0x3c1f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xffdf);
        EXPECT(gbc.pc(), 0x3c21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01CC
        gbc.setState(0xeca7, 0x1a89, 0xf430, 0x6ba6, 0x3906, 0x9d3c, 0x1, 0x0);
        gbc.writeMem(0xeca7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1a89);
        EXPECT(gbc.pc(), 0xeca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca7), 0xcb);
        EXPECT(gbc.readMem(0xeca8), 0x93);
        // CB 93 01CE
        gbc.setState(0x37fb, 0x19e8, 0xd2d0, 0x68e, 0xe40f, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x37fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x19e8);
        EXPECT(gbc.pc(), 0x37fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01CF
        gbc.setState(0xeaf5, 0x2161, 0x43c0, 0x3d80, 0x5dce, 0x4669, 0x0, 0x0);
        gbc.writeMem(0xeaf5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2161);
        EXPECT(gbc.pc(), 0xeaf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf5), 0xcb);
        EXPECT(gbc.readMem(0xeaf6), 0x93);
        // CB 93 01D0
        gbc.setState(0xe3c3, 0x90fc, 0xe030, 0x5e55, 0xf291, 0x6bac, 0x1, 0x1);
        gbc.writeMem(0xe3c3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x90fc);
        EXPECT(gbc.pc(), 0xe3c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c3), 0xcb);
        EXPECT(gbc.readMem(0xe3c4), 0x93);
        // CB 93 01D1
        gbc.setState(0xbcf4, 0xf7fe, 0x1650, 0x49df, 0x54ea, 0x9740, 0x1, 0x0);
        gbc.writeMem(0xbcf4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf7fe);
        EXPECT(gbc.pc(), 0xbcf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcf4), 0xcb);
        EXPECT(gbc.readMem(0xbcf5), 0x93);
        // CB 93 01D2
        gbc.setState(0x7fe3, 0xeb4c, 0xad60, 0xacca, 0xb6b3, 0x9277, 0x1, 0x0);
        gbc.writeMem(0x7fe3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeb4c);
        EXPECT(gbc.pc(), 0x7fe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01D3
        gbc.setState(0xb2c0, 0xb901, 0x9bc0, 0xa140, 0x3a20, 0xaca2, 0x0, 0x1);
        gbc.writeMem(0xb2c0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xb901);
        EXPECT(gbc.pc(), 0xb2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2c0), 0xcb);
        EXPECT(gbc.readMem(0xb2c1), 0x93);
        // CB 93 01D4
        gbc.setState(0x701c, 0xa947, 0xf340, 0x7806, 0xc33c, 0xc358, 0x1, 0x0);
        gbc.writeMem(0x701c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa947);
        EXPECT(gbc.pc(), 0x701e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01D5
        gbc.setState(0xdba, 0x76c1, 0xeb80, 0xb66c, 0xe3d3, 0x598, 0x1, 0x1);
        gbc.writeMem(0xdba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x76c1);
        EXPECT(gbc.pc(), 0xdbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01D6
        gbc.setState(0x8cf5, 0x101b, 0x7ae0, 0x1b1b, 0x1a03, 0x5cd8, 0x0, 0x1);
        gbc.writeMem(0x8cf5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x101b);
        EXPECT(gbc.pc(), 0x8cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cf5), 0xcb);
        EXPECT(gbc.readMem(0x8cf6), 0x93);
        // CB 93 01D7
        gbc.setState(0xbf1f, 0xade4, 0xdb0, 0x6925, 0x78c2, 0x48c3, 0x1, 0x1);
        gbc.writeMem(0xbf1f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xade4);
        EXPECT(gbc.pc(), 0xbf21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1f), 0xcb);
        EXPECT(gbc.readMem(0xbf20), 0x93);
        // CB 93 01D8
        gbc.setState(0x1f40, 0x4673, 0x9120, 0x25ae, 0x4be9, 0xa6bc, 0x1, 0x0);
        gbc.writeMem(0x1f40, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0x1f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01D9
        gbc.setState(0x5e4b, 0xb032, 0x79e0, 0x16ab, 0x1395, 0x3500, 0x1, 0x0);
        gbc.writeMem(0x5e4b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb032);
        EXPECT(gbc.pc(), 0x5e4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01DA
        gbc.setState(0xb44c, 0x14dc, 0xd1e0, 0x1516, 0xe65a, 0x3cfc, 0x0, 0x1);
        gbc.writeMem(0xb44c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x14dc);
        EXPECT(gbc.pc(), 0xb44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44c), 0xcb);
        EXPECT(gbc.readMem(0xb44d), 0x93);
        // CB 93 01DD
        gbc.setState(0xb2d9, 0x7184, 0xc6b0, 0xa728, 0x6c45, 0x5b83, 0x1, 0x0);
        gbc.writeMem(0xb2d9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7184);
        EXPECT(gbc.pc(), 0xb2db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2d9), 0xcb);
        EXPECT(gbc.readMem(0xb2da), 0x93);
        // CB 93 01DE
        gbc.setState(0xe6d2, 0x8885, 0xa4f0, 0x2bb0, 0x2499, 0x87da, 0x1, 0x1);
        gbc.writeMem(0xe6d2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8885);
        EXPECT(gbc.pc(), 0xe6d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6d2), 0xcb);
        EXPECT(gbc.readMem(0xe6d3), 0x93);
        // CB 93 01E0
        gbc.setState(0xa99a, 0x80d0, 0xb140, 0x76a, 0x19b6, 0xd30b, 0x0, 0x1);
        gbc.writeMem(0xa99a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x80d0);
        EXPECT(gbc.pc(), 0xa99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99a), 0xcb);
        EXPECT(gbc.readMem(0xa99b), 0x93);
        // CB 93 01E1
        gbc.setState(0x8276, 0x331a, 0x2ff0, 0x6171, 0xcfb9, 0xcd07, 0x1, 0x1);
        gbc.writeMem(0x8276, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x331a);
        EXPECT(gbc.pc(), 0x8278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8276), 0xcb);
        EXPECT(gbc.readMem(0x8277), 0x93);
        // CB 93 01E2
        gbc.setState(0xe3ca, 0x956e, 0x45f0, 0x89a1, 0xa10f, 0x996d, 0x1, 0x1);
        gbc.writeMem(0xe3ca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x956e);
        EXPECT(gbc.pc(), 0xe3cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ca), 0xcb);
        EXPECT(gbc.readMem(0xe3cb), 0x93);
        // CB 93 01E4
        gbc.setState(0xe8d1, 0xff2a, 0x74d0, 0x77dc, 0x376, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0xe8d1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xff2a);
        EXPECT(gbc.pc(), 0xe8d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d1), 0xcb);
        EXPECT(gbc.readMem(0xe8d2), 0x93);
        // CB 93 01E5
        gbc.setState(0x1320, 0xcb53, 0x6f30, 0x37d1, 0x4bf7, 0x9c50, 0x0, 0x0);
        gbc.writeMem(0x1320, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcb53);
        EXPECT(gbc.pc(), 0x1322);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01E6
        gbc.setState(0x4062, 0x277f, 0x9dc0, 0x9c09, 0xd5c1, 0xe50b, 0x0, 0x1);
        gbc.writeMem(0x4062, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x277f);
        EXPECT(gbc.pc(), 0x4064);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01E7
        gbc.setState(0x22f, 0x585c, 0x5fb0, 0xdf5d, 0x53aa, 0x6c53, 0x0, 0x0);
        gbc.writeMem(0x22f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x585c);
        EXPECT(gbc.pc(), 0x231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01E8
        gbc.setState(0x13df, 0x6e4d, 0x2b20, 0x487c, 0xa353, 0x7f90, 0x1, 0x0);
        gbc.writeMem(0x13df, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6e4d);
        EXPECT(gbc.pc(), 0x13e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01EA
        gbc.setState(0x2a4b, 0x2598, 0xa7e0, 0x645f, 0xad4f, 0x644d, 0x1, 0x1);
        gbc.writeMem(0x2a4b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x2598);
        EXPECT(gbc.pc(), 0x2a4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01EB
        gbc.setState(0xbfd0, 0xed68, 0x2e00, 0xa3ec, 0x778b, 0x763c, 0x1, 0x1);
        gbc.writeMem(0xbfd0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xed68);
        EXPECT(gbc.pc(), 0xbfd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfd0), 0xcb);
        EXPECT(gbc.readMem(0xbfd1), 0x93);
        // CB 93 01EC
        gbc.setState(0x8275, 0x2a12, 0x36f0, 0x8e8f, 0x1811, 0x589d, 0x1, 0x0);
        gbc.writeMem(0x8275, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2a12);
        EXPECT(gbc.pc(), 0x8277);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8275), 0xcb);
        EXPECT(gbc.readMem(0x8276), 0x93);
        // CB 93 01ED
        gbc.setState(0x2a97, 0xe1da, 0x56f0, 0xb9d0, 0x82d2, 0x2e55, 0x0, 0x0);
        gbc.writeMem(0x2a97, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe1da);
        EXPECT(gbc.pc(), 0x2a99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01EE
        gbc.setState(0x4024, 0x2871, 0x8910, 0xd1ad, 0xe06a, 0xf1a7, 0x0, 0x0);
        gbc.writeMem(0x4024, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2871);
        EXPECT(gbc.pc(), 0x4026);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01F0
        gbc.setState(0xe685, 0x8233, 0x51b0, 0x7df8, 0x46f2, 0x9470, 0x1, 0x0);
        gbc.writeMem(0xe685, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x8233);
        EXPECT(gbc.pc(), 0xe687);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe685), 0xcb);
        EXPECT(gbc.readMem(0xe686), 0x93);
        // CB 93 01F1
        gbc.setState(0x821a, 0x6096, 0xf310, 0xd65d, 0x717d, 0xbee2, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6096);
        EXPECT(gbc.pc(), 0x821c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x821a), 0xcb);
        EXPECT(gbc.readMem(0x821b), 0x93);
        // CB 93 01F2
        gbc.setState(0x1f99, 0x9ed9, 0x7030, 0x4c21, 0xc523, 0xbdd6, 0x1, 0x1);
        gbc.writeMem(0x1f99, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9ed9);
        EXPECT(gbc.pc(), 0x1f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01F3
        gbc.setState(0xc12a, 0x76fa, 0xec60, 0x452d, 0xba09, 0x65fc, 0x0, 0x1);
        gbc.writeMem(0xc12a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x76fa);
        EXPECT(gbc.pc(), 0xc12c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc12a), 0xcb);
        EXPECT(gbc.readMem(0xc12b), 0x93);
        // CB 93 01F6
        gbc.setState(0x205f, 0xb62f, 0x4f40, 0x2dff, 0xe3dc, 0x4e8a, 0x0, 0x1);
        gbc.writeMem(0x205f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb62f);
        EXPECT(gbc.pc(), 0x2061);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01F7
        gbc.setState(0xc77a, 0xb95d, 0x5690, 0xe732, 0x84ab, 0xeed4, 0x1, 0x0);
        gbc.writeMem(0xc77a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb95d);
        EXPECT(gbc.pc(), 0xc77c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77a), 0xcb);
        EXPECT(gbc.readMem(0xc77b), 0x93);
        // CB 93 01F8
        gbc.setState(0x6176, 0x23c6, 0x4070, 0xab3a, 0xfd7e, 0x6121, 0x0, 0x0);
        gbc.writeMem(0x6176, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x23c6);
        EXPECT(gbc.pc(), 0x6178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01F9
        gbc.setState(0x7e99, 0x7cf3, 0xd2e0, 0xca20, 0xac89, 0x6752, 0x0, 0x0);
        gbc.writeMem(0x7e99, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0x7e9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 01FA
        gbc.setState(0x3d8f, 0xc74f, 0xd4d0, 0x2c9e, 0xde36, 0x1744, 0x0, 0x1);
        gbc.writeMem(0x3d8f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc74f);
        EXPECT(gbc.pc(), 0x3d91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01FB
        gbc.setState(0x52ca, 0x93de, 0x6450, 0xc6a5, 0x223a, 0x2b2a, 0x0, 0x0);
        gbc.writeMem(0x52ca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x93de);
        EXPECT(gbc.pc(), 0x52cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 01FC
        gbc.setState(0xe3cc, 0xc890, 0x2e90, 0x5e76, 0x7f10, 0x7dc, 0x1, 0x0);
        gbc.writeMem(0xe3cc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc890);
        EXPECT(gbc.pc(), 0xe3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3cc), 0xcb);
        EXPECT(gbc.readMem(0xe3cd), 0x93);
        // CB 93 01FD
        gbc.setState(0x8b6c, 0x1eee, 0x6e30, 0x7cd1, 0x243c, 0x782e, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1eee);
        EXPECT(gbc.pc(), 0x8b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6c), 0xcb);
        EXPECT(gbc.readMem(0x8b6d), 0x93);
        // CB 93 01FE
        gbc.setState(0xd4cc, 0x55ce, 0x7830, 0xd133, 0x84fc, 0xc944, 0x1, 0x0);
        gbc.writeMem(0xd4cc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x55ce);
        EXPECT(gbc.pc(), 0xd4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cc), 0xcb);
        EXPECT(gbc.readMem(0xd4cd), 0x93);
        // CB 93 01FF
        gbc.setState(0x3dd8, 0x85fa, 0xde20, 0xb61a, 0x3f54, 0xfaba, 0x1, 0x0);
        gbc.writeMem(0x3dd8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x85fa);
        EXPECT(gbc.pc(), 0x3dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0201
        gbc.setState(0x27de, 0xbfde, 0xa20, 0x9c54, 0x271d, 0xbe4a, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xbfde);
        EXPECT(gbc.pc(), 0x27e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0202
        gbc.setState(0xaac, 0xc154, 0x1f90, 0x4913, 0xfc6b, 0x569b, 0x0, 0x0);
        gbc.writeMem(0xaac, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xc154);
        EXPECT(gbc.pc(), 0xaae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0203
        gbc.setState(0x5c1b, 0x530b, 0x5f70, 0xe50a, 0x7bb7, 0x7082, 0x0, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x530b);
        EXPECT(gbc.pc(), 0x5c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0204
        gbc.setState(0x1c7e, 0xe157, 0x4df0, 0x257b, 0xc39d, 0xc369, 0x0, 0x1);
        gbc.writeMem(0x1c7e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe157);
        EXPECT(gbc.pc(), 0x1c80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0206
        gbc.setState(0xc9e0, 0xcf85, 0x8370, 0x717b, 0xe480, 0x7c6c, 0x1, 0x1);
        gbc.writeMem(0xc9e0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcf85);
        EXPECT(gbc.pc(), 0xc9e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e0), 0xcb);
        EXPECT(gbc.readMem(0xc9e1), 0x93);
        // CB 93 0207
        gbc.setState(0xbbb4, 0x42f2, 0x48b0, 0xf35e, 0x2334, 0xe26d, 0x0, 0x0);
        gbc.writeMem(0xbbb4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x42f2);
        EXPECT(gbc.pc(), 0xbbb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbb4), 0xcb);
        EXPECT(gbc.readMem(0xbbb5), 0x93);
        // CB 93 0208
        gbc.setState(0x8bdd, 0x4b4c, 0x93a0, 0x66c5, 0x2cb4, 0xfe95, 0x1, 0x1);
        gbc.writeMem(0x8bdd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4b4c);
        EXPECT(gbc.pc(), 0x8bdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bdd), 0xcb);
        EXPECT(gbc.readMem(0x8bde), 0x93);
        // CB 93 020A
        gbc.setState(0x5eb7, 0x8d13, 0x5840, 0x932, 0xe502, 0xdb13, 0x1, 0x1);
        gbc.writeMem(0x5eb7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x8d13);
        EXPECT(gbc.pc(), 0x5eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 020B
        gbc.setState(0x71ca, 0x266f, 0xa610, 0x7902, 0x2e9c, 0xac9e, 0x1, 0x1);
        gbc.writeMem(0x71ca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x266f);
        EXPECT(gbc.pc(), 0x71cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 020C
        gbc.setState(0x5658, 0xeec5, 0x8d10, 0xd2b5, 0xc642, 0xc477, 0x0, 0x1);
        gbc.writeMem(0x5658, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeec5);
        EXPECT(gbc.pc(), 0x565a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 020D
        gbc.setState(0x673, 0x362d, 0x1e00, 0x89cb, 0x7914, 0x1381, 0x0, 0x0);
        gbc.writeMem(0x673, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x362d);
        EXPECT(gbc.pc(), 0x675);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 020E
        gbc.setState(0x869, 0x6029, 0xb170, 0x42db, 0x46be, 0x35f3, 0x0, 0x1);
        gbc.writeMem(0x869, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6029);
        EXPECT(gbc.pc(), 0x86b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 020F
        gbc.setState(0xd833, 0x62ea, 0x3f40, 0xbc7b, 0x58ae, 0xc887, 0x1, 0x1);
        gbc.writeMem(0xd833, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x62ea);
        EXPECT(gbc.pc(), 0xd835);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd833), 0xcb);
        EXPECT(gbc.readMem(0xd834), 0x93);
        // CB 93 0210
        gbc.setState(0xd22f, 0x7a02, 0xa2a0, 0xa52a, 0xa727, 0xcacf, 0x0, 0x1);
        gbc.writeMem(0xd22f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7a02);
        EXPECT(gbc.pc(), 0xd231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd22f), 0xcb);
        EXPECT(gbc.readMem(0xd230), 0x93);
        // CB 93 0211
        gbc.setState(0xfe0, 0x3847, 0x9880, 0x87d9, 0x16, 0xfdff, 0x1, 0x1);
        gbc.writeMem(0xfe0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3847);
        EXPECT(gbc.pc(), 0xfe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0212
        gbc.setState(0x92cc, 0x738d, 0xa730, 0x634e, 0xa842, 0x2762, 0x1, 0x1);
        gbc.writeMem(0x92cc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x738d);
        EXPECT(gbc.pc(), 0x92ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92cc), 0xcb);
        EXPECT(gbc.readMem(0x92cd), 0x93);
        // CB 93 0213
        gbc.setState(0x220f, 0x4b9c, 0x7f0, 0xc679, 0xaa83, 0x6064, 0x0, 0x1);
        gbc.writeMem(0x220f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x4b9c);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0214
        gbc.setState(0x6ff6, 0x88d9, 0x4450, 0x97c3, 0xaec3, 0x42d4, 0x1, 0x0);
        gbc.writeMem(0x6ff6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x88d9);
        EXPECT(gbc.pc(), 0x6ff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0215
        gbc.setState(0x1b86, 0x6e8d, 0x4580, 0x7d3b, 0xb76c, 0x5f45, 0x1, 0x0);
        gbc.writeMem(0x1b86, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6e8d);
        EXPECT(gbc.pc(), 0x1b88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0216
        gbc.setState(0x6e91, 0x967b, 0xb00, 0xca9e, 0xfcfe, 0xb366, 0x0, 0x0);
        gbc.writeMem(0x6e91, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x967b);
        EXPECT(gbc.pc(), 0x6e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0217
        gbc.setState(0x285a, 0xf2cb, 0xb440, 0xa251, 0xc101, 0xd443, 0x1, 0x0);
        gbc.writeMem(0x285a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xf2cb);
        EXPECT(gbc.pc(), 0x285c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0218
        gbc.setState(0x785a, 0xffe9, 0x4cd0, 0x2cc6, 0x98e0, 0x8069, 0x0, 0x0);
        gbc.writeMem(0x785a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xffe9);
        EXPECT(gbc.pc(), 0x785c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0219
        gbc.setState(0x246f, 0x147, 0xe60, 0x69a4, 0xcd36, 0xc265, 0x0, 0x1);
        gbc.writeMem(0x246f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x147);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 021A
        gbc.setState(0x8e57, 0xe4a0, 0x840, 0x89b, 0xa32c, 0xe9a0, 0x1, 0x1);
        gbc.writeMem(0x8e57, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xe4a0);
        EXPECT(gbc.pc(), 0x8e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e57), 0xcb);
        EXPECT(gbc.readMem(0x8e58), 0x93);
        // CB 93 021B
        gbc.setState(0x7688, 0x914c, 0xa650, 0x693c, 0xdfab, 0x2297, 0x0, 0x1);
        gbc.writeMem(0x7688, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x914c);
        EXPECT(gbc.pc(), 0x768a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 021C
        gbc.setState(0x3d51, 0x7dd1, 0xb830, 0x2b22, 0x597a, 0x65ff, 0x0, 0x0);
        gbc.writeMem(0x3d51, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7dd1);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 021D
        gbc.setState(0xeda2, 0x1d27, 0x49e0, 0x827c, 0x75b9, 0x7f9d, 0x1, 0x0);
        gbc.writeMem(0xeda2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1d27);
        EXPECT(gbc.pc(), 0xeda4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeda2), 0xcb);
        EXPECT(gbc.readMem(0xeda3), 0x93);
        // CB 93 021F
        gbc.setState(0x3658, 0x13f7, 0x6ce0, 0x1412, 0x6f6d, 0x9cda, 0x0, 0x0);
        gbc.writeMem(0x3658, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x13f7);
        EXPECT(gbc.pc(), 0x365a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0220
        gbc.setState(0x9dd9, 0x72ad, 0xbc90, 0x2094, 0x66a2, 0xcb30, 0x0, 0x0);
        gbc.writeMem(0x9dd9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x72ad);
        EXPECT(gbc.pc(), 0x9ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd9), 0xcb);
        EXPECT(gbc.readMem(0x9dda), 0x93);
        // CB 93 0221
        gbc.setState(0x4ddb, 0x9b1e, 0xe1b0, 0xc762, 0xdcb8, 0x6cdb, 0x1, 0x1);
        gbc.writeMem(0x4ddb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9b1e);
        EXPECT(gbc.pc(), 0x4ddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0222
        gbc.setState(0xb3eb, 0xb19, 0x80d0, 0xf222, 0x4c17, 0x52c1, 0x0, 0x1);
        gbc.writeMem(0xb3eb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb19);
        EXPECT(gbc.pc(), 0xb3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3eb), 0xcb);
        EXPECT(gbc.readMem(0xb3ec), 0x93);
        // CB 93 0223
        gbc.setState(0x6198, 0x6ccd, 0xffc0, 0x12a4, 0xea94, 0xa58f, 0x1, 0x1);
        gbc.writeMem(0x6198, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6ccd);
        EXPECT(gbc.pc(), 0x619a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0224
        gbc.setState(0x5c54, 0x208c, 0xf620, 0xbf11, 0x371e, 0xfff5, 0x1, 0x1);
        gbc.writeMem(0x5c54, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x208c);
        EXPECT(gbc.pc(), 0x5c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0225
        gbc.setState(0xd8e9, 0xdb42, 0xe110, 0x7e60, 0x51a8, 0x6b32, 0x1, 0x0);
        gbc.writeMem(0xd8e9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdb42);
        EXPECT(gbc.pc(), 0xd8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e9), 0xcb);
        EXPECT(gbc.readMem(0xd8ea), 0x93);
        // CB 93 0226
        gbc.setState(0x7ec0, 0xb8ea, 0xfb80, 0x3f0, 0x810a, 0x9f67, 0x0, 0x0);
        gbc.writeMem(0x7ec0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xb8ea);
        EXPECT(gbc.pc(), 0x7ec2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0227
        gbc.setState(0xe624, 0xea00, 0x6150, 0xd2f3, 0x243d, 0x275a, 0x0, 0x1);
        gbc.writeMem(0xe624, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xea00);
        EXPECT(gbc.pc(), 0xe626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe624), 0xcb);
        EXPECT(gbc.readMem(0xe625), 0x93);
        // CB 93 0228
        gbc.setState(0x2f50, 0x8b19, 0x88a0, 0x3999, 0x5c26, 0x7033, 0x0, 0x0);
        gbc.writeMem(0x2f50, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8b19);
        EXPECT(gbc.pc(), 0x2f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 022A
        gbc.setState(0xe672, 0xdcfb, 0x5280, 0x91a3, 0xc61f, 0x5403, 0x1, 0x0);
        gbc.writeMem(0xe672, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xdcfb);
        EXPECT(gbc.pc(), 0xe674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe672), 0xcb);
        EXPECT(gbc.readMem(0xe673), 0x93);
        // CB 93 022B
        gbc.setState(0xd88f, 0x1b6b, 0x7230, 0x78b8, 0xdbf7, 0xb931, 0x0, 0x0);
        gbc.writeMem(0xd88f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1b6b);
        EXPECT(gbc.pc(), 0xd891);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88f), 0xcb);
        EXPECT(gbc.readMem(0xd890), 0x93);
        // CB 93 022D
        gbc.setState(0x99c7, 0x1d1d, 0x720, 0xb3f5, 0x957c, 0xbcc2, 0x1, 0x1);
        gbc.writeMem(0x99c7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1d1d);
        EXPECT(gbc.pc(), 0x99c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99c7), 0xcb);
        EXPECT(gbc.readMem(0x99c8), 0x93);
        // CB 93 022E
        gbc.setState(0x13c1, 0x53ec, 0x8650, 0xec12, 0x1de1, 0xaa07, 0x0, 0x0);
        gbc.writeMem(0x13c1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x53ec);
        EXPECT(gbc.pc(), 0x13c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 022F
        gbc.setState(0x1ffd, 0x9c00, 0xd2a0, 0x378b, 0x1dee, 0xe94d, 0x0, 0x1);
        gbc.writeMem(0x1ffd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9c00);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0230
        gbc.setState(0xca26, 0xc7c7, 0xfca0, 0xf861, 0xc596, 0xf43e, 0x0, 0x0);
        gbc.writeMem(0xca26, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0xca28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca26), 0xcb);
        EXPECT(gbc.readMem(0xca27), 0x93);
        // CB 93 0231
        gbc.setState(0xbc3c, 0x81aa, 0x18d0, 0xe859, 0xbfa6, 0xa6a4, 0x0, 0x1);
        gbc.writeMem(0xbc3c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x81aa);
        EXPECT(gbc.pc(), 0xbc3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc3c), 0xcb);
        EXPECT(gbc.readMem(0xbc3d), 0x93);
        // CB 93 0232
        gbc.setState(0x6960, 0xb301, 0x3cf0, 0x3635, 0x4e29, 0x4843, 0x0, 0x1);
        gbc.writeMem(0x6960, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xb301);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0233
        gbc.setState(0x7af9, 0xc92a, 0xe330, 0x7294, 0x3f4b, 0x1b07, 0x0, 0x1);
        gbc.writeMem(0x7af9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc92a);
        EXPECT(gbc.pc(), 0x7afb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0234
        gbc.setState(0xb6af, 0xe325, 0xe210, 0xc6e2, 0xdab1, 0x6953, 0x0, 0x1);
        gbc.writeMem(0xb6af, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe325);
        EXPECT(gbc.pc(), 0xb6b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6af), 0xcb);
        EXPECT(gbc.readMem(0xb6b0), 0x93);
        // CB 93 0235
        gbc.setState(0x8118, 0x4020, 0x1f40, 0x1442, 0x8e3b, 0xd607, 0x1, 0x0);
        gbc.writeMem(0x8118, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4020);
        EXPECT(gbc.pc(), 0x811a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8118), 0xcb);
        EXPECT(gbc.readMem(0x8119), 0x93);
        // CB 93 0237
        gbc.setState(0x2fa1, 0x5716, 0x8620, 0x4eb9, 0xe288, 0x2a97, 0x1, 0x0);
        gbc.writeMem(0x2fa1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5716);
        EXPECT(gbc.pc(), 0x2fa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0238
        gbc.setState(0xa095, 0x75e8, 0xc730, 0x8e3a, 0xb9f2, 0xccb1, 0x1, 0x1);
        gbc.writeMem(0xa095, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x75e8);
        EXPECT(gbc.pc(), 0xa097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa095), 0xcb);
        EXPECT(gbc.readMem(0xa096), 0x93);
        // CB 93 0239
        gbc.setState(0x5a89, 0xbf8c, 0x48f0, 0xd8aa, 0x3d77, 0xae6c, 0x1, 0x0);
        gbc.writeMem(0x5a89, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xbf8c);
        EXPECT(gbc.pc(), 0x5a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 023B
        gbc.setState(0xc7b5, 0x4b55, 0x2aa0, 0xaca9, 0x4ccf, 0xd6ea, 0x1, 0x0);
        gbc.writeMem(0xc7b5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4b55);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0x93);
        // CB 93 023C
        gbc.setState(0x6901, 0xca42, 0xc720, 0x8ba7, 0xbef1, 0x348b, 0x1, 0x0);
        gbc.writeMem(0x6901, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xca42);
        EXPECT(gbc.pc(), 0x6903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 023D
        gbc.setState(0x7053, 0xcda3, 0x1620, 0x842c, 0xd5ef, 0xfed0, 0x0, 0x0);
        gbc.writeMem(0x7053, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xcda3);
        EXPECT(gbc.pc(), 0x7055);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 023E
        gbc.setState(0x14d0, 0x32c4, 0x9170, 0xe20, 0x28ef, 0x2bc5, 0x1, 0x0);
        gbc.writeMem(0x14d0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x32c4);
        EXPECT(gbc.pc(), 0x14d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 023F
        gbc.setState(0x8dc, 0x3657, 0xaff0, 0x645e, 0x24b9, 0x953c, 0x0, 0x1);
        gbc.writeMem(0x8dc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3657);
        EXPECT(gbc.pc(), 0x8de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0240
        gbc.setState(0xd5fb, 0x58a0, 0x7530, 0xe450, 0xf332, 0xbafa, 0x1, 0x0);
        gbc.writeMem(0xd5fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x58a0);
        EXPECT(gbc.pc(), 0xd5fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5fb), 0xcb);
        EXPECT(gbc.readMem(0xd5fc), 0x93);
        // CB 93 0241
        gbc.setState(0x3ff0, 0x51ed, 0xf260, 0x2c4d, 0x1111, 0xce2, 0x1, 0x0);
        gbc.writeMem(0x3ff0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x51ed);
        EXPECT(gbc.pc(), 0x3ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0242
        gbc.setState(0xc336, 0x5cfc, 0x72c0, 0x9858, 0x2ce8, 0x42dd, 0x1, 0x0);
        gbc.writeMem(0xc336, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5cfc);
        EXPECT(gbc.pc(), 0xc338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc336), 0xcb);
        EXPECT(gbc.readMem(0xc337), 0x93);
        // CB 93 0243
        gbc.setState(0xdafd, 0x16fa, 0x470, 0x7b0a, 0xadbe, 0x4803, 0x0, 0x1);
        gbc.writeMem(0xdafd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x16fa);
        EXPECT(gbc.pc(), 0xdaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafd), 0xcb);
        EXPECT(gbc.readMem(0xdafe), 0x93);
        // CB 93 0244
        gbc.setState(0xb0c6, 0xd27d, 0x1500, 0x11d0, 0x2a6a, 0x14d2, 0x1, 0x1);
        gbc.writeMem(0xb0c6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd27d);
        EXPECT(gbc.pc(), 0xb0c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0c6), 0xcb);
        EXPECT(gbc.readMem(0xb0c7), 0x93);
        // CB 93 0245
        gbc.setState(0x8300, 0xb335, 0x55c0, 0xfc03, 0xc7d1, 0x9d01, 0x0, 0x1);
        gbc.writeMem(0x8300, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xb335);
        EXPECT(gbc.pc(), 0x8302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8300), 0xcb);
        EXPECT(gbc.readMem(0x8301), 0x93);
        // CB 93 0246
        gbc.setState(0xca8f, 0xe87c, 0xd20, 0x2aa0, 0xe161, 0xdb92, 0x0, 0x0);
        gbc.writeMem(0xca8f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe87c);
        EXPECT(gbc.pc(), 0xca91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8f), 0xcb);
        EXPECT(gbc.readMem(0xca90), 0x93);
        // CB 93 0247
        gbc.setState(0x5648, 0xe15b, 0x39b0, 0xa5f6, 0x96f1, 0xcd7f, 0x0, 0x0);
        gbc.writeMem(0x5648, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xe15b);
        EXPECT(gbc.pc(), 0x564a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0248
        gbc.setState(0x6a21, 0x1900, 0x4ec0, 0xc885, 0xdc04, 0x2b2a, 0x0, 0x0);
        gbc.writeMem(0x6a21, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x1900);
        EXPECT(gbc.pc(), 0x6a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0249
        gbc.setState(0x6c38, 0x289a, 0x6dc0, 0xed6, 0x499e, 0x69f, 0x1, 0x0);
        gbc.writeMem(0x6c38, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x289a);
        EXPECT(gbc.pc(), 0x6c3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 024A
        gbc.setState(0x4b15, 0xc83f, 0xc2a0, 0x655e, 0xf9e0, 0xba85, 0x0, 0x1);
        gbc.writeMem(0x4b15, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc83f);
        EXPECT(gbc.pc(), 0x4b17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 024B
        gbc.setState(0xede1, 0x286a, 0x4d40, 0xf4ab, 0x63ba, 0x41a0, 0x1, 0x0);
        gbc.writeMem(0xede1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x286a);
        EXPECT(gbc.pc(), 0xede3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede1), 0xcb);
        EXPECT(gbc.readMem(0xede2), 0x93);
        // CB 93 024C
        gbc.setState(0x57ba, 0x1e15, 0xfb70, 0x66ee, 0x3ab0, 0x45c0, 0x1, 0x1);
        gbc.writeMem(0x57ba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x1e15);
        EXPECT(gbc.pc(), 0x57bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 024D
        gbc.setState(0x3d53, 0x2ca3, 0xd30, 0xedff, 0x282, 0x3bae, 0x0, 0x1);
        gbc.writeMem(0x3d53, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2ca3);
        EXPECT(gbc.pc(), 0x3d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 024E
        gbc.setState(0x21c4, 0x1f3, 0x70e0, 0x9ce3, 0xb2a0, 0xda8, 0x0, 0x0);
        gbc.writeMem(0x21c4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1f3);
        EXPECT(gbc.pc(), 0x21c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 024F
        gbc.setState(0xe44a, 0xbc7e, 0x1510, 0xb28f, 0x8323, 0xbe7f, 0x0, 0x1);
        gbc.writeMem(0xe44a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbc7e);
        EXPECT(gbc.pc(), 0xe44c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe44a), 0xcb);
        EXPECT(gbc.readMem(0xe44b), 0x93);
        // CB 93 0250
        gbc.setState(0x5c1b, 0x7f7, 0xeed0, 0xd7e, 0x18a1, 0x7378, 0x0, 0x0);
        gbc.writeMem(0x5c1b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7f7);
        EXPECT(gbc.pc(), 0x5c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0251
        gbc.setState(0x3b78, 0xf186, 0x2df0, 0x4e91, 0xd765, 0x514d, 0x1, 0x1);
        gbc.writeMem(0x3b78, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf186);
        EXPECT(gbc.pc(), 0x3b7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0252
        gbc.setState(0x363, 0x79b1, 0xdea0, 0x876a, 0x1481, 0xe2d2, 0x0, 0x1);
        gbc.writeMem(0x363, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x79b1);
        EXPECT(gbc.pc(), 0x365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0255
        gbc.setState(0x67d4, 0x6ef, 0xde30, 0x641b, 0x6720, 0xc918, 0x0, 0x1);
        gbc.writeMem(0x67d4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6ef);
        EXPECT(gbc.pc(), 0x67d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0256
        gbc.setState(0xb7fa, 0xa796, 0xc480, 0xb0fc, 0x32cd, 0xf700, 0x1, 0x1);
        gbc.writeMem(0xb7fa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa796);
        EXPECT(gbc.pc(), 0xb7fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7fa), 0xcb);
        EXPECT(gbc.readMem(0xb7fb), 0x93);
        // CB 93 0257
        gbc.setState(0xe127, 0x3a68, 0xf240, 0x3b98, 0xa3d6, 0x58c2, 0x1, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x3a68);
        EXPECT(gbc.pc(), 0xe129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe127), 0xcb);
        EXPECT(gbc.readMem(0xe128), 0x93);
        // CB 93 0258
        gbc.setState(0x47dc, 0x4d72, 0xd680, 0xf167, 0xbad8, 0xc404, 0x1, 0x0);
        gbc.writeMem(0x47dc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4d72);
        EXPECT(gbc.pc(), 0x47de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0259
        gbc.setState(0xe728, 0x485f, 0x13c0, 0x2d9e, 0xedab, 0xe9a7, 0x0, 0x1);
        gbc.writeMem(0xe728, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0xe72a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe728), 0xcb);
        EXPECT(gbc.readMem(0xe729), 0x93);
        // CB 93 025A
        gbc.setState(0x49d5, 0x33a4, 0x20d0, 0x2781, 0x17d, 0xb9ea, 0x1, 0x0);
        gbc.writeMem(0x49d5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x33a4);
        EXPECT(gbc.pc(), 0x49d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 025B
        gbc.setState(0x4b68, 0xb70a, 0x9c00, 0x7a9, 0x8ee3, 0x2737, 0x1, 0x0);
        gbc.writeMem(0x4b68, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb70a);
        EXPECT(gbc.pc(), 0x4b6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 025C
        gbc.setState(0x5e40, 0xbf1f, 0x2290, 0x46b4, 0x258d, 0x3d8e, 0x0, 0x0);
        gbc.writeMem(0x5e40, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbf1f);
        EXPECT(gbc.pc(), 0x5e42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 025D
        gbc.setState(0x1216, 0x6ad, 0x3ad0, 0xab62, 0xa35, 0x7c05, 0x1, 0x0);
        gbc.writeMem(0x1216, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6ad);
        EXPECT(gbc.pc(), 0x1218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 025E
        gbc.setState(0x39bc, 0x1ff1, 0x4bd0, 0x6369, 0xfc69, 0x9a6d, 0x1, 0x0);
        gbc.writeMem(0x39bc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x1ff1);
        EXPECT(gbc.pc(), 0x39be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 025F
        gbc.setState(0xa220, 0x138a, 0x2e90, 0x5fd0, 0x7a7d, 0x2195, 0x1, 0x1);
        gbc.writeMem(0xa220, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x138a);
        EXPECT(gbc.pc(), 0xa222);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa220), 0xcb);
        EXPECT(gbc.readMem(0xa221), 0x93);
        // CB 93 0260
        gbc.setState(0xa79d, 0xd057, 0x6200, 0xe6f9, 0xc7c2, 0x7f9e, 0x1, 0x1);
        gbc.writeMem(0xa79d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd057);
        EXPECT(gbc.pc(), 0xa79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79d), 0xcb);
        EXPECT(gbc.readMem(0xa79e), 0x93);
        // CB 93 0261
        gbc.setState(0x69e2, 0x2257, 0xefc0, 0x80e4, 0x77a6, 0x3aed, 0x1, 0x0);
        gbc.writeMem(0x69e2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2257);
        EXPECT(gbc.pc(), 0x69e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0262
        gbc.setState(0x38f6, 0x34d1, 0x86d0, 0xdc16, 0x43b3, 0x756, 0x1, 0x0);
        gbc.writeMem(0x38f6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x34d1);
        EXPECT(gbc.pc(), 0x38f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0263
        gbc.setState(0x74c4, 0x1ff4, 0xdbe0, 0x9328, 0xc61e, 0xb6ec, 0x1, 0x0);
        gbc.writeMem(0x74c4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1ff4);
        EXPECT(gbc.pc(), 0x74c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0264
        gbc.setState(0x77a2, 0xd81d, 0x1340, 0xe66, 0x8b41, 0x3f49, 0x0, 0x1);
        gbc.writeMem(0x77a2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd81d);
        EXPECT(gbc.pc(), 0x77a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0265
        gbc.setState(0xa532, 0x8894, 0x9950, 0x8ed, 0x7e69, 0xa8f, 0x0, 0x0);
        gbc.writeMem(0xa532, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8894);
        EXPECT(gbc.pc(), 0xa534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa532), 0xcb);
        EXPECT(gbc.readMem(0xa533), 0x93);
        // CB 93 0266
        gbc.setState(0xd602, 0xe4c6, 0x5050, 0x5aba, 0x62b8, 0xa68e, 0x1, 0x0);
        gbc.writeMem(0xd602, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe4c6);
        EXPECT(gbc.pc(), 0xd604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd602), 0xcb);
        EXPECT(gbc.readMem(0xd603), 0x93);
        // CB 93 0267
        gbc.setState(0xc4fe, 0xd2af, 0x82e0, 0x5b8e, 0xead6, 0x1f1f, 0x1, 0x0);
        gbc.writeMem(0xc4fe, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd2af);
        EXPECT(gbc.pc(), 0xc500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fe), 0xcb);
        EXPECT(gbc.readMem(0xc4ff), 0x93);
        // CB 93 0269
        gbc.setState(0xc444, 0xa73e, 0x7690, 0x715e, 0x74be, 0xf5ba, 0x1, 0x0);
        gbc.writeMem(0xc444, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xa73e);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc444), 0xcb);
        EXPECT(gbc.readMem(0xc445), 0x93);
        // CB 93 026A
        gbc.setState(0x6411, 0x1e15, 0xe340, 0x4809, 0xd33b, 0xb74b, 0x0, 0x0);
        gbc.writeMem(0x6411, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1e15);
        EXPECT(gbc.pc(), 0x6413);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 026B
        gbc.setState(0xc505, 0x3667, 0xd500, 0x44e5, 0xa413, 0x1d72, 0x1, 0x0);
        gbc.writeMem(0xc505, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3667);
        EXPECT(gbc.pc(), 0xc507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc505), 0xcb);
        EXPECT(gbc.readMem(0xc506), 0x93);
        // CB 93 026C
        gbc.setState(0x3a4e, 0x7679, 0x12f0, 0x44f8, 0xaa07, 0xb621, 0x0, 0x1);
        gbc.writeMem(0x3a4e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7679);
        EXPECT(gbc.pc(), 0x3a50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 026D
        gbc.setState(0x69bd, 0xe1bf, 0x9ce0, 0x24f6, 0x4b12, 0x9dc9, 0x0, 0x1);
        gbc.writeMem(0x69bd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe1bf);
        EXPECT(gbc.pc(), 0x69bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 026E
        gbc.setState(0x7114, 0x99c4, 0x5a0, 0x21e8, 0xe9c1, 0x420d, 0x0, 0x0);
        gbc.writeMem(0x7114, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x99c4);
        EXPECT(gbc.pc(), 0x7116);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0270
        gbc.setState(0x5339, 0x4b4b, 0x4450, 0x834e, 0x68b8, 0x4de7, 0x0, 0x0);
        gbc.writeMem(0x5339, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4b4b);
        EXPECT(gbc.pc(), 0x533b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0271
        gbc.setState(0xc7ae, 0xf6c6, 0xc750, 0xe25f, 0x8f88, 0x3a7b, 0x1, 0x0);
        gbc.writeMem(0xc7ae, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xf6c6);
        EXPECT(gbc.pc(), 0xc7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7ae), 0xcb);
        EXPECT(gbc.readMem(0xc7af), 0x93);
        // CB 93 0272
        gbc.setState(0xb88a, 0x31c6, 0x9710, 0x8ecf, 0xbd7a, 0x276f, 0x1, 0x0);
        gbc.writeMem(0xb88a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x31c6);
        EXPECT(gbc.pc(), 0xb88c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88a), 0xcb);
        EXPECT(gbc.readMem(0xb88b), 0x93);
        // CB 93 0273
        gbc.setState(0x9b7d, 0x9e26, 0xde0, 0xe2df, 0x6982, 0xbad8, 0x0, 0x0);
        gbc.writeMem(0x9b7d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0x9b7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7d), 0xcb);
        EXPECT(gbc.readMem(0x9b7e), 0x93);
        // CB 93 0274
        gbc.setState(0x1d6f, 0x8b1c, 0x3900, 0x5ea7, 0xee37, 0x2215, 0x0, 0x1);
        gbc.writeMem(0x1d6f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x8b1c);
        EXPECT(gbc.pc(), 0x1d71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0275
        gbc.setState(0xca1f, 0x7a0c, 0xa2a0, 0xff92, 0x8aba, 0x5245, 0x0, 0x0);
        gbc.writeMem(0xca1f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7a0c);
        EXPECT(gbc.pc(), 0xca21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca1f), 0xcb);
        EXPECT(gbc.readMem(0xca20), 0x93);
        // CB 93 0276
        gbc.setState(0xe68b, 0x4a47, 0xfd90, 0x280, 0xae9, 0x4fdd, 0x1, 0x0);
        gbc.writeMem(0xe68b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4a47);
        EXPECT(gbc.pc(), 0xe68d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe68b), 0xcb);
        EXPECT(gbc.readMem(0xe68c), 0x93);
        // CB 93 0278
        gbc.setState(0x2030, 0xd244, 0x3ce0, 0x5365, 0x2b5b, 0xa235, 0x1, 0x1);
        gbc.writeMem(0x2030, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd244);
        EXPECT(gbc.pc(), 0x2032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0279
        gbc.setState(0xce1d, 0x5c7c, 0xa80, 0xaeb2, 0x1411, 0x3bc8, 0x1, 0x0);
        gbc.writeMem(0xce1d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5c7c);
        EXPECT(gbc.pc(), 0xce1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce1d), 0xcb);
        EXPECT(gbc.readMem(0xce1e), 0x93);
        // CB 93 027A
        gbc.setState(0x707b, 0x4404, 0x1e80, 0xafad, 0x7dd3, 0x6bdb, 0x0, 0x0);
        gbc.writeMem(0x707b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4404);
        EXPECT(gbc.pc(), 0x707d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 027B
        gbc.setState(0x9c63, 0xbb16, 0xc980, 0x7d86, 0x35cc, 0x2aab, 0x0, 0x0);
        gbc.writeMem(0x9c63, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xbb16);
        EXPECT(gbc.pc(), 0x9c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c63), 0xcb);
        EXPECT(gbc.readMem(0x9c64), 0x93);
        // CB 93 027C
        gbc.setState(0x6191, 0xbb72, 0x7930, 0xd3, 0xd939, 0x3f8e, 0x0, 0x0);
        gbc.writeMem(0x6191, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbb72);
        EXPECT(gbc.pc(), 0x6193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 027D
        gbc.setState(0x80ff, 0xa363, 0x1aa0, 0xb1ad, 0x6a08, 0x91fd, 0x1, 0x0);
        gbc.writeMem(0x80ff, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xa363);
        EXPECT(gbc.pc(), 0x8101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ff), 0xcb);
        EXPECT(gbc.readMem(0x8100), 0x93);
        // CB 93 027E
        gbc.setState(0x2524, 0x9cef, 0x5c80, 0x4e2c, 0x2816, 0x9ae4, 0x0, 0x0);
        gbc.writeMem(0x2524, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9cef);
        EXPECT(gbc.pc(), 0x2526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 027F
        gbc.setState(0xd272, 0x3118, 0xdc40, 0x21f8, 0xc1ad, 0x5ef5, 0x1, 0x1);
        gbc.writeMem(0xd272, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3118);
        EXPECT(gbc.pc(), 0xd274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd272), 0xcb);
        EXPECT(gbc.readMem(0xd273), 0x93);
        // CB 93 0280
        gbc.setState(0xe077, 0xf824, 0xd4c0, 0x37c1, 0x9b5d, 0x9909, 0x1, 0x0);
        gbc.writeMem(0xe077, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf824);
        EXPECT(gbc.pc(), 0xe079);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe077), 0xcb);
        EXPECT(gbc.readMem(0xe078), 0x93);
        // CB 93 0282
        gbc.setState(0xd5d2, 0xcf2c, 0x910, 0x4ab8, 0x5b0d, 0x56a3, 0x1, 0x0);
        gbc.writeMem(0xd5d2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xcf2c);
        EXPECT(gbc.pc(), 0xd5d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d2), 0xcb);
        EXPECT(gbc.readMem(0xd5d3), 0x93);
        // CB 93 0283
        gbc.setState(0x8521, 0xf498, 0x5890, 0x2dc3, 0xe943, 0x184a, 0x1, 0x0);
        gbc.writeMem(0x8521, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf498);
        EXPECT(gbc.pc(), 0x8523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8521), 0xcb);
        EXPECT(gbc.readMem(0x8522), 0x93);
        // CB 93 0284
        gbc.setState(0x929c, 0xc01b, 0x8e60, 0xaf94, 0x3656, 0xfe16, 0x0, 0x0);
        gbc.writeMem(0x929c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xc01b);
        EXPECT(gbc.pc(), 0x929e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x929c), 0xcb);
        EXPECT(gbc.readMem(0x929d), 0x93);
        // CB 93 0286
        gbc.setState(0x27dc, 0x9fe7, 0x9e50, 0x285, 0x63cd, 0x3083, 0x0, 0x0);
        gbc.writeMem(0x27dc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9fe7);
        EXPECT(gbc.pc(), 0x27de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0287
        gbc.setState(0x3236, 0x6c39, 0x8ed0, 0x26d1, 0xe25d, 0x3f11, 0x0, 0x0);
        gbc.writeMem(0x3236, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6c39);
        EXPECT(gbc.pc(), 0x3238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0288
        gbc.setState(0x228e, 0x528f, 0xa90, 0x99a, 0x17cc, 0x6cb5, 0x1, 0x0);
        gbc.writeMem(0x228e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x528f);
        EXPECT(gbc.pc(), 0x2290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0289
        gbc.setState(0xfea, 0x8c7e, 0x95e0, 0x98f8, 0x74c5, 0xe956, 0x0, 0x0);
        gbc.writeMem(0xfea, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8c7e);
        EXPECT(gbc.pc(), 0xfec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 028A
        gbc.setState(0x855b, 0x7b99, 0x7070, 0xcb4, 0x38a1, 0xd270, 0x0, 0x1);
        gbc.writeMem(0x855b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7b99);
        EXPECT(gbc.pc(), 0x855d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x855b), 0xcb);
        EXPECT(gbc.readMem(0x855c), 0x93);
        // CB 93 028B
        gbc.setState(0xab13, 0xf90b, 0x5410, 0xa9ae, 0xbba3, 0x1440, 0x1, 0x1);
        gbc.writeMem(0xab13, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf90b);
        EXPECT(gbc.pc(), 0xab15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab13), 0xcb);
        EXPECT(gbc.readMem(0xab14), 0x93);
        // CB 93 028C
        gbc.setState(0x6efb, 0x573, 0x84a0, 0x3a9f, 0x28ca, 0x4ad1, 0x1, 0x1);
        gbc.writeMem(0x6efb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x573);
        EXPECT(gbc.pc(), 0x6efd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 028D
        gbc.setState(0x669, 0x53ff, 0x9620, 0xa160, 0x14e1, 0x119, 0x0, 0x0);
        gbc.writeMem(0x669, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x53ff);
        EXPECT(gbc.pc(), 0x66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 028F
        gbc.setState(0x4bf0, 0x102c, 0x35e0, 0xea79, 0xc306, 0xf4d, 0x1, 0x1);
        gbc.writeMem(0x4bf0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x102c);
        EXPECT(gbc.pc(), 0x4bf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0290
        gbc.setState(0x73bb, 0x26fc, 0x4b00, 0x756f, 0xee41, 0xdf3c, 0x1, 0x1);
        gbc.writeMem(0x73bb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x26fc);
        EXPECT(gbc.pc(), 0x73bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0291
        gbc.setState(0x819d, 0x9c1c, 0x140, 0x3894, 0x244e, 0x98a1, 0x0, 0x0);
        gbc.writeMem(0x819d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9c1c);
        EXPECT(gbc.pc(), 0x819f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819d), 0xcb);
        EXPECT(gbc.readMem(0x819e), 0x93);
        // CB 93 0292
        gbc.setState(0xa1be, 0x4ecf, 0x2ac0, 0xfcd5, 0xdc4a, 0x6346, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4ecf);
        EXPECT(gbc.pc(), 0xa1c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1be), 0xcb);
        EXPECT(gbc.readMem(0xa1bf), 0x93);
        // CB 93 0293
        gbc.setState(0xe990, 0x37d3, 0xedb0, 0xe3b2, 0x8c65, 0xba57, 0x0, 0x1);
        gbc.writeMem(0xe990, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x37d3);
        EXPECT(gbc.pc(), 0xe992);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe990), 0xcb);
        EXPECT(gbc.readMem(0xe991), 0x93);
        // CB 93 0294
        gbc.setState(0xefdb, 0x8b64, 0x5ec0, 0x8d46, 0x2b49, 0xe42b, 0x1, 0x0);
        gbc.writeMem(0xefdb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0xefdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefdb), 0xcb);
        EXPECT(gbc.readMem(0xefdc), 0x93);
        // CB 93 0295
        gbc.setState(0x366e, 0x8dbe, 0x7db0, 0x7406, 0xaf7d, 0xe725, 0x0, 0x0);
        gbc.writeMem(0x366e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8dbe);
        EXPECT(gbc.pc(), 0x3670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0296
        gbc.setState(0x31be, 0xdf5c, 0x3b0, 0x8fc7, 0x9f3d, 0x451e, 0x1, 0x0);
        gbc.writeMem(0x31be, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xdf5c);
        EXPECT(gbc.pc(), 0x31c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0297
        gbc.setState(0x85d4, 0xc79d, 0x3d70, 0xbf08, 0x8cb9, 0x66f3, 0x1, 0x1);
        gbc.writeMem(0x85d4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc79d);
        EXPECT(gbc.pc(), 0x85d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d4), 0xcb);
        EXPECT(gbc.readMem(0x85d5), 0x93);
        // CB 93 0298
        gbc.setState(0xb131, 0xbaae, 0xa620, 0xe4fa, 0xc657, 0x99c1, 0x0, 0x0);
        gbc.writeMem(0xb131, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xbaae);
        EXPECT(gbc.pc(), 0xb133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb131), 0xcb);
        EXPECT(gbc.readMem(0xb132), 0x93);
        // CB 93 0299
        gbc.setState(0x82db, 0x85c4, 0xbff0, 0x4370, 0x78fb, 0x1229, 0x0, 0x1);
        gbc.writeMem(0x82db, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x85c4);
        EXPECT(gbc.pc(), 0x82dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82db), 0xcb);
        EXPECT(gbc.readMem(0x82dc), 0x93);
        // CB 93 029A
        gbc.setState(0xcb2d, 0xd8eb, 0xedb0, 0x145e, 0xa55b, 0x71b2, 0x1, 0x0);
        gbc.writeMem(0xcb2d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xd8eb);
        EXPECT(gbc.pc(), 0xcb2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2d), 0xcb);
        EXPECT(gbc.readMem(0xcb2e), 0x93);
        // CB 93 029B
        gbc.setState(0x4c58, 0xd7d6, 0x19b0, 0x5bd9, 0xbac6, 0xd7d9, 0x1, 0x1);
        gbc.writeMem(0x4c58, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd7d6);
        EXPECT(gbc.pc(), 0x4c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 029C
        gbc.setState(0xa82d, 0x6428, 0x19a0, 0xaedf, 0xa11, 0x35c5, 0x1, 0x1);
        gbc.writeMem(0xa82d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6428);
        EXPECT(gbc.pc(), 0xa82f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82d), 0xcb);
        EXPECT(gbc.readMem(0xa82e), 0x93);
        // CB 93 029D
        gbc.setState(0x5a0b, 0x841f, 0x1020, 0x82e8, 0x526d, 0x15e, 0x1, 0x1);
        gbc.writeMem(0x5a0b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x841f);
        EXPECT(gbc.pc(), 0x5a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 029E
        gbc.setState(0x7bf7, 0x5e86, 0x91d0, 0xe6e5, 0x6956, 0x9552, 0x0, 0x1);
        gbc.writeMem(0x7bf7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5e86);
        EXPECT(gbc.pc(), 0x7bf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 029F
        gbc.setState(0x374b, 0x63f0, 0xde20, 0xe4f3, 0x1f5f, 0xfa, 0x0, 0x0);
        gbc.writeMem(0x374b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x63f0);
        EXPECT(gbc.pc(), 0x374d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02A2
        gbc.setState(0xef72, 0xd930, 0xde60, 0xe1bd, 0xd6, 0x649f, 0x0, 0x0);
        gbc.writeMem(0xef72, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd930);
        EXPECT(gbc.pc(), 0xef74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef72), 0xcb);
        EXPECT(gbc.readMem(0xef73), 0x93);
        // CB 93 02A3
        gbc.setState(0xe9f8, 0x6bc0, 0x6d70, 0x7db5, 0xdc2f, 0xa8c8, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6bc0);
        EXPECT(gbc.pc(), 0xe9fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f8), 0xcb);
        EXPECT(gbc.readMem(0xe9f9), 0x93);
        // CB 93 02A4
        gbc.setState(0x872a, 0x5d75, 0xe4d0, 0x742e, 0x961d, 0xde88, 0x1, 0x1);
        gbc.writeMem(0x872a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5d75);
        EXPECT(gbc.pc(), 0x872c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872a), 0xcb);
        EXPECT(gbc.readMem(0x872b), 0x93);
        // CB 93 02A5
        gbc.setState(0x34c0, 0xbff7, 0xd530, 0x562, 0x68d0, 0x3c1d, 0x1, 0x0);
        gbc.writeMem(0x34c0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbff7);
        EXPECT(gbc.pc(), 0x34c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02A6
        gbc.setState(0x5187, 0x3446, 0xaa80, 0xd9a, 0xa32a, 0xcf68, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3446);
        EXPECT(gbc.pc(), 0x5189);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02A7
        gbc.setState(0x327, 0x3940, 0x3c90, 0x3666, 0x4094, 0x4909, 0x0, 0x1);
        gbc.writeMem(0x327, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3940);
        EXPECT(gbc.pc(), 0x329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02A8
        gbc.setState(0x8de6, 0xb816, 0x2fa0, 0x1fba, 0xb192, 0x2c06, 0x0, 0x0);
        gbc.writeMem(0x8de6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb816);
        EXPECT(gbc.pc(), 0x8de8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8de6), 0xcb);
        EXPECT(gbc.readMem(0x8de7), 0x93);
        // CB 93 02A9
        gbc.setState(0x97a6, 0xd04b, 0xa2c0, 0x1245, 0x596a, 0x7fa5, 0x1, 0x1);
        gbc.writeMem(0x97a6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd04b);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a6), 0xcb);
        EXPECT(gbc.readMem(0x97a7), 0x93);
        // CB 93 02AA
        gbc.setState(0x6b3c, 0xf643, 0xed70, 0x93d0, 0xd848, 0x35d9, 0x0, 0x1);
        gbc.writeMem(0x6b3c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf643);
        EXPECT(gbc.pc(), 0x6b3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02AB
        gbc.setState(0xe08, 0x403b, 0x8bb0, 0x62aa, 0xd47d, 0x360f, 0x0, 0x0);
        gbc.writeMem(0xe08, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x403b);
        EXPECT(gbc.pc(), 0xe0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02AC
        gbc.setState(0x2c07, 0x6879, 0x1ed0, 0xfd7a, 0xae98, 0xd952, 0x1, 0x0);
        gbc.writeMem(0x2c07, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6879);
        EXPECT(gbc.pc(), 0x2c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02AD
        gbc.setState(0x9254, 0xf7b4, 0xd980, 0x96c7, 0xee5c, 0xe58d, 0x0, 0x0);
        gbc.writeMem(0x9254, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf7b4);
        EXPECT(gbc.pc(), 0x9256);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9254), 0xcb);
        EXPECT(gbc.readMem(0x9255), 0x93);
        // CB 93 02AE
        gbc.setState(0x3d17, 0x813e, 0x71f0, 0x5988, 0x85ec, 0xd78d, 0x0, 0x0);
        gbc.writeMem(0x3d17, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x813e);
        EXPECT(gbc.pc(), 0x3d19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02B0
        gbc.setState(0x93ca, 0xa9ba, 0xbd90, 0x181, 0xe6f1, 0x58b5, 0x0, 0x1);
        gbc.writeMem(0x93ca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa9ba);
        EXPECT(gbc.pc(), 0x93cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93ca), 0xcb);
        EXPECT(gbc.readMem(0x93cb), 0x93);
        // CB 93 02B2
        gbc.setState(0x6251, 0x62bf, 0x9150, 0xbff8, 0x1324, 0x9807, 0x1, 0x1);
        gbc.writeMem(0x6251, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x62bf);
        EXPECT(gbc.pc(), 0x6253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02B3
        gbc.setState(0x5632, 0x354f, 0xe6d0, 0xfd95, 0x5ccf, 0xac5a, 0x1, 0x1);
        gbc.writeMem(0x5632, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x354f);
        EXPECT(gbc.pc(), 0x5634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02B4
        gbc.setState(0xc8b2, 0x4256, 0x7a30, 0xd9e8, 0x6ff1, 0x25d8, 0x1, 0x1);
        gbc.writeMem(0xc8b2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4256);
        EXPECT(gbc.pc(), 0xc8b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8b2), 0xcb);
        EXPECT(gbc.readMem(0xc8b3), 0x93);
        // CB 93 02B5
        gbc.setState(0x605, 0x27fa, 0x3420, 0xdb92, 0x7623, 0x2641, 0x0, 0x0);
        gbc.writeMem(0x605, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x27fa);
        EXPECT(gbc.pc(), 0x607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02B6
        gbc.setState(0xd574, 0x9bde, 0xcfe0, 0x7442, 0x182, 0x9083, 0x0, 0x0);
        gbc.writeMem(0xd574, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9bde);
        EXPECT(gbc.pc(), 0xd576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd574), 0xcb);
        EXPECT(gbc.readMem(0xd575), 0x93);
        // CB 93 02B7
        gbc.setState(0xaec5, 0xadcd, 0xa8b0, 0x517d, 0xafb2, 0x8b92, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xadcd);
        EXPECT(gbc.pc(), 0xaec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec5), 0xcb);
        EXPECT(gbc.readMem(0xaec6), 0x93);
        // CB 93 02B8
        gbc.setState(0x3189, 0x5f6e, 0xf070, 0xbe94, 0x3d0d, 0x69d7, 0x1, 0x0);
        gbc.writeMem(0x3189, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x5f6e);
        EXPECT(gbc.pc(), 0x318b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02B9
        gbc.setState(0xad8a, 0xe04, 0x8c0, 0xd02f, 0xf7e5, 0x95ba, 0x1, 0x1);
        gbc.writeMem(0xad8a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe04);
        EXPECT(gbc.pc(), 0xad8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad8a), 0xcb);
        EXPECT(gbc.readMem(0xad8b), 0x93);
        // CB 93 02BA
        gbc.setState(0x1746, 0xdad1, 0x7860, 0xc9ab, 0x7872, 0x5029, 0x1, 0x1);
        gbc.writeMem(0x1746, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdad1);
        EXPECT(gbc.pc(), 0x1748);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02BB
        gbc.setState(0xc0aa, 0x556c, 0x79b0, 0xe095, 0x66c7, 0x9f79, 0x0, 0x0);
        gbc.writeMem(0xc0aa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x556c);
        EXPECT(gbc.pc(), 0xc0ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0aa), 0xcb);
        EXPECT(gbc.readMem(0xc0ab), 0x93);
        // CB 93 02BC
        gbc.setState(0x6b37, 0xb0e2, 0xcd00, 0xccf8, 0xbba, 0x29dd, 0x0, 0x1);
        gbc.writeMem(0x6b37, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb0e2);
        EXPECT(gbc.pc(), 0x6b39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02BD
        gbc.setState(0xdc91, 0x9b87, 0x2310, 0x6b18, 0xb432, 0xa658, 0x0, 0x1);
        gbc.writeMem(0xdc91, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9b87);
        EXPECT(gbc.pc(), 0xdc93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc91), 0xcb);
        EXPECT(gbc.readMem(0xdc92), 0x93);
        // CB 93 02BE
        gbc.setState(0xe088, 0xea95, 0xd380, 0x6624, 0x7af5, 0x489b, 0x0, 0x1);
        gbc.writeMem(0xe088, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xea95);
        EXPECT(gbc.pc(), 0xe08a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe088), 0xcb);
        EXPECT(gbc.readMem(0xe089), 0x93);
        // CB 93 02BF
        gbc.setState(0x78de, 0x42a1, 0x3ea0, 0x5a63, 0x2421, 0x48ee, 0x1, 0x1);
        gbc.writeMem(0x78de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x42a1);
        EXPECT(gbc.pc(), 0x78e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02C0
        gbc.setState(0x2058, 0x6498, 0xdb80, 0xb60c, 0x9b51, 0x47f8, 0x1, 0x0);
        gbc.writeMem(0x2058, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6498);
        EXPECT(gbc.pc(), 0x205a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02C1
        gbc.setState(0xd4e7, 0xfc67, 0x8440, 0x4720, 0xf38c, 0xbd84, 0x1, 0x0);
        gbc.writeMem(0xd4e7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xfc67);
        EXPECT(gbc.pc(), 0xd4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e7), 0xcb);
        EXPECT(gbc.readMem(0xd4e8), 0x93);
        // CB 93 02C2
        gbc.setState(0x64d7, 0xf6ae, 0x5ab0, 0x4508, 0x1610, 0x6eb4, 0x1, 0x1);
        gbc.writeMem(0x64d7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf6ae);
        EXPECT(gbc.pc(), 0x64d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02C3
        gbc.setState(0x18f, 0xdc23, 0xb340, 0x5c68, 0x9542, 0x6a51, 0x1, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xdc23);
        EXPECT(gbc.pc(), 0x191);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02C4
        gbc.setState(0x7ce4, 0x3bc2, 0x49e0, 0xc2e2, 0x2c75, 0xb85f, 0x1, 0x0);
        gbc.writeMem(0x7ce4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3bc2);
        EXPECT(gbc.pc(), 0x7ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02C5
        gbc.setState(0xa29a, 0xdfac, 0xb060, 0x2c4c, 0xec09, 0xf7d3, 0x1, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdfac);
        EXPECT(gbc.pc(), 0xa29c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29a), 0xcb);
        EXPECT(gbc.readMem(0xa29b), 0x93);
        // CB 93 02C6
        gbc.setState(0xd828, 0x6096, 0x1b40, 0x27d3, 0x31d7, 0xd0b, 0x0, 0x0);
        gbc.writeMem(0xd828, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6096);
        EXPECT(gbc.pc(), 0xd82a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd828), 0xcb);
        EXPECT(gbc.readMem(0xd829), 0x93);
        // CB 93 02C7
        gbc.setState(0x1219, 0x1681, 0xe510, 0xa77c, 0x9d1a, 0xb444, 0x0, 0x1);
        gbc.writeMem(0x1219, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1681);
        EXPECT(gbc.pc(), 0x121b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02C8
        gbc.setState(0x8193, 0xc168, 0xf910, 0x2fd5, 0xef47, 0x70df, 0x0, 0x0);
        gbc.writeMem(0x8193, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xc168);
        EXPECT(gbc.pc(), 0x8195);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8193), 0xcb);
        EXPECT(gbc.readMem(0x8194), 0x93);
        // CB 93 02C9
        gbc.setState(0x1aa, 0xb973, 0x700, 0x7940, 0xf9c9, 0x3217, 0x1, 0x0);
        gbc.writeMem(0x1aa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb973);
        EXPECT(gbc.pc(), 0x1ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02CA
        gbc.setState(0x9134, 0x698d, 0xb920, 0x9a0f, 0xff8, 0x4428, 0x0, 0x1);
        gbc.writeMem(0x9134, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x698d);
        EXPECT(gbc.pc(), 0x9136);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9134), 0xcb);
        EXPECT(gbc.readMem(0x9135), 0x93);
        // CB 93 02CB
        gbc.setState(0x5eb5, 0x21b4, 0x83d0, 0xbd5c, 0xbed, 0x36f2, 0x0, 0x0);
        gbc.writeMem(0x5eb5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x21b4);
        EXPECT(gbc.pc(), 0x5eb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02CC
        gbc.setState(0x38ff, 0xfd5b, 0x8710, 0x480b, 0xc13b, 0xa1fa, 0x0, 0x0);
        gbc.writeMem(0x38ff, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfd5b);
        EXPECT(gbc.pc(), 0x3901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02CD
        gbc.setState(0x516, 0x1742, 0x410, 0x160a, 0xa26, 0x87bb, 0x0, 0x0);
        gbc.writeMem(0x516, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1742);
        EXPECT(gbc.pc(), 0x518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02CE
        gbc.setState(0x296b, 0x6dc4, 0x1af0, 0xbd19, 0x4fc7, 0xe9c4, 0x0, 0x1);
        gbc.writeMem(0x296b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6dc4);
        EXPECT(gbc.pc(), 0x296d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02CF
        gbc.setState(0x3ee9, 0x9398, 0xef60, 0x5248, 0x552f, 0xdd7e, 0x1, 0x0);
        gbc.writeMem(0x3ee9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9398);
        EXPECT(gbc.pc(), 0x3eeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02D0
        gbc.setState(0x70a9, 0xdd48, 0x7f20, 0x9716, 0xc503, 0xc4d, 0x1, 0x1);
        gbc.writeMem(0x70a9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xdd48);
        EXPECT(gbc.pc(), 0x70ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02D1
        gbc.setState(0x31a7, 0x7218, 0xee30, 0xf19, 0x7175, 0x3683, 0x0, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x7218);
        EXPECT(gbc.pc(), 0x31a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02D2
        gbc.setState(0xeef3, 0x7514, 0xa6c0, 0x6589, 0xd622, 0x3bc, 0x0, 0x1);
        gbc.writeMem(0xeef3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x7514);
        EXPECT(gbc.pc(), 0xeef5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeef3), 0xcb);
        EXPECT(gbc.readMem(0xeef4), 0x93);
        // CB 93 02D3
        gbc.setState(0xb6e4, 0xe19e, 0xda80, 0x56f6, 0xf2b7, 0x6c4c, 0x0, 0x1);
        gbc.writeMem(0xb6e4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe19e);
        EXPECT(gbc.pc(), 0xb6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e4), 0xcb);
        EXPECT(gbc.readMem(0xb6e5), 0x93);
        // CB 93 02D4
        gbc.setState(0x4d62, 0x7401, 0xe370, 0x5c74, 0xd715, 0x192b, 0x0, 0x0);
        gbc.writeMem(0x4d62, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x7401);
        EXPECT(gbc.pc(), 0x4d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02D5
        gbc.setState(0xab09, 0x524a, 0x9a30, 0xd19f, 0x6bf3, 0xa05c, 0x1, 0x1);
        gbc.writeMem(0xab09, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x524a);
        EXPECT(gbc.pc(), 0xab0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab09), 0xcb);
        EXPECT(gbc.readMem(0xab0a), 0x93);
        // CB 93 02D6
        gbc.setState(0x8c63, 0xccf, 0xbf50, 0x108, 0x7c00, 0x599a, 0x0, 0x1);
        gbc.writeMem(0x8c63, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xccf);
        EXPECT(gbc.pc(), 0x8c65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c63), 0xcb);
        EXPECT(gbc.readMem(0x8c64), 0x93);
        // CB 93 02D7
        gbc.setState(0xcb81, 0x65f1, 0x1940, 0xeb12, 0x88be, 0xcea6, 0x1, 0x0);
        gbc.writeMem(0xcb81, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x65f1);
        EXPECT(gbc.pc(), 0xcb83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb81), 0xcb);
        EXPECT(gbc.readMem(0xcb82), 0x93);
        // CB 93 02D8
        gbc.setState(0xcb79, 0xa39c, 0x3a0, 0x92bb, 0xa63d, 0x95d7, 0x0, 0x0);
        gbc.writeMem(0xcb79, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa39c);
        EXPECT(gbc.pc(), 0xcb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb79), 0xcb);
        EXPECT(gbc.readMem(0xcb7a), 0x93);
        // CB 93 02D9
        gbc.setState(0x1fa3, 0x980e, 0xa020, 0x5a4a, 0x6298, 0x41a, 0x0, 0x0);
        gbc.writeMem(0x1fa3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x980e);
        EXPECT(gbc.pc(), 0x1fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02DA
        gbc.setState(0xe73f, 0x5122, 0xb8b0, 0x1746, 0x1e69, 0xbfcf, 0x0, 0x1);
        gbc.writeMem(0xe73f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5122);
        EXPECT(gbc.pc(), 0xe741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73f), 0xcb);
        EXPECT(gbc.readMem(0xe740), 0x93);
        // CB 93 02DB
        gbc.setState(0x2a3d, 0x17c6, 0xe340, 0x5d8, 0xbb71, 0x10c6, 0x1, 0x1);
        gbc.writeMem(0x2a3d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x17c6);
        EXPECT(gbc.pc(), 0x2a3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02DC
        gbc.setState(0xabd9, 0xaba8, 0xc9e0, 0x8b55, 0xb428, 0x279b, 0x0, 0x0);
        gbc.writeMem(0xabd9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xaba8);
        EXPECT(gbc.pc(), 0xabdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd9), 0xcb);
        EXPECT(gbc.readMem(0xabda), 0x93);
        // CB 93 02DD
        gbc.setState(0x4bd6, 0xc9f0, 0x5d70, 0xc6f, 0x8411, 0xe149, 0x1, 0x0);
        gbc.writeMem(0x4bd6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc9f0);
        EXPECT(gbc.pc(), 0x4bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02DE
        gbc.setState(0x8c1d, 0xc960, 0x2f10, 0xb8aa, 0x40c8, 0xaea1, 0x1, 0x0);
        gbc.writeMem(0x8c1d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xc960);
        EXPECT(gbc.pc(), 0x8c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1d), 0xcb);
        EXPECT(gbc.readMem(0x8c1e), 0x93);
        // CB 93 02DF
        gbc.setState(0x1909, 0x25fd, 0xdef0, 0x7065, 0x260e, 0x5898, 0x0, 0x1);
        gbc.writeMem(0x1909, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x25fd);
        EXPECT(gbc.pc(), 0x190b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E0
        gbc.setState(0x6b5d, 0xb7e8, 0x5720, 0xc91e, 0x70dc, 0x4d49, 0x0, 0x0);
        gbc.writeMem(0x6b5d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xb7e8);
        EXPECT(gbc.pc(), 0x6b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02E1
        gbc.setState(0xd683, 0xa48f, 0xbcc0, 0x177b, 0xa3bd, 0x102f, 0x1, 0x1);
        gbc.writeMem(0xd683, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa48f);
        EXPECT(gbc.pc(), 0xd685);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd683), 0xcb);
        EXPECT(gbc.readMem(0xd684), 0x93);
        // CB 93 02E2
        gbc.setState(0x5649, 0x9808, 0x1c70, 0x3e81, 0x76f, 0x2c9b, 0x1, 0x1);
        gbc.writeMem(0x5649, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x564b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E3
        gbc.setState(0xd78, 0xfdfa, 0x49f0, 0x50ce, 0xd344, 0x4151, 0x1, 0x1);
        gbc.writeMem(0xd78, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfdfa);
        EXPECT(gbc.pc(), 0xd7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E4
        gbc.setState(0x29b1, 0x9652, 0x1c70, 0x43f7, 0xa686, 0x6ab, 0x1, 0x1);
        gbc.writeMem(0x29b1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9652);
        EXPECT(gbc.pc(), 0x29b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E5
        gbc.setState(0xcece, 0x33, 0x9ea0, 0xc532, 0xfbb0, 0x1813, 0x1, 0x1);
        gbc.writeMem(0xcece, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x33);
        EXPECT(gbc.pc(), 0xced0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcece), 0xcb);
        EXPECT(gbc.readMem(0xcecf), 0x93);
        // CB 93 02E6
        gbc.setState(0xc15a, 0xc97e, 0xa5c0, 0x2cb2, 0x107c, 0x286a, 0x1, 0x1);
        gbc.writeMem(0xc15a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc97e);
        EXPECT(gbc.pc(), 0xc15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15a), 0xcb);
        EXPECT(gbc.readMem(0xc15b), 0x93);
        // CB 93 02E7
        gbc.setState(0xc6b, 0x77ae, 0xf510, 0x9868, 0xf882, 0x2d03, 0x0, 0x1);
        gbc.writeMem(0xc6b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0xc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E8
        gbc.setState(0x2dcb, 0x62c9, 0x8d70, 0x8970, 0xf9cc, 0xadcf, 0x1, 0x0);
        gbc.writeMem(0x2dcb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x62c9);
        EXPECT(gbc.pc(), 0x2dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02E9
        gbc.setState(0x7179, 0xbe6b, 0x21d0, 0xe9af, 0x73ca, 0xdcda, 0x0, 0x1);
        gbc.writeMem(0x7179, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xbe6b);
        EXPECT(gbc.pc(), 0x717b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02EA
        gbc.setState(0x859d, 0x9369, 0x2060, 0xc45f, 0xcf8a, 0x8c59, 0x0, 0x0);
        gbc.writeMem(0x859d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9369);
        EXPECT(gbc.pc(), 0x859f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859d), 0xcb);
        EXPECT(gbc.readMem(0x859e), 0x93);
        // CB 93 02EB
        gbc.setState(0x7529, 0xe538, 0xb560, 0x429a, 0x9154, 0x83b, 0x0, 0x0);
        gbc.writeMem(0x7529, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe538);
        EXPECT(gbc.pc(), 0x752b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02EC
        gbc.setState(0xc142, 0xa98b, 0x2d20, 0x16fa, 0x7cec, 0xee0e, 0x0, 0x1);
        gbc.writeMem(0xc142, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa98b);
        EXPECT(gbc.pc(), 0xc144);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc142), 0xcb);
        EXPECT(gbc.readMem(0xc143), 0x93);
        // CB 93 02ED
        gbc.setState(0xe918, 0x8d36, 0xc380, 0x6501, 0x7ebd, 0x7c5c, 0x1, 0x1);
        gbc.writeMem(0xe918, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8d36);
        EXPECT(gbc.pc(), 0xe91a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe918), 0xcb);
        EXPECT(gbc.readMem(0xe919), 0x93);
        // CB 93 02EE
        gbc.setState(0xe878, 0xa, 0x42e0, 0x8f76, 0x5dcc, 0x6770, 0x0, 0x1);
        gbc.writeMem(0xe878, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa);
        EXPECT(gbc.pc(), 0xe87a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe878), 0xcb);
        EXPECT(gbc.readMem(0xe879), 0x93);
        // CB 93 02EF
        gbc.setState(0x91a8, 0x23aa, 0x1b50, 0xe298, 0xb955, 0x7997, 0x1, 0x1);
        gbc.writeMem(0x91a8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x23aa);
        EXPECT(gbc.pc(), 0x91aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a8), 0xcb);
        EXPECT(gbc.readMem(0x91a9), 0x93);
        // CB 93 02F0
        gbc.setState(0x6b21, 0xfd03, 0x90c0, 0x97a4, 0x6a2d, 0x8dbc, 0x1, 0x0);
        gbc.writeMem(0x6b21, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfd03);
        EXPECT(gbc.pc(), 0x6b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02F1
        gbc.setState(0xda88, 0x2bf3, 0xca60, 0x1a5, 0xf705, 0x888c, 0x1, 0x0);
        gbc.writeMem(0xda88, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x2bf3);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda88), 0xcb);
        EXPECT(gbc.readMem(0xda89), 0x93);
        // CB 93 02F2
        gbc.setState(0x5112, 0x7dc4, 0x7ee0, 0x7d42, 0x72dd, 0xabb1, 0x0, 0x1);
        gbc.writeMem(0x5112, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7dc4);
        EXPECT(gbc.pc(), 0x5114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02F4
        gbc.setState(0x74fb, 0xa633, 0x2f90, 0x86f7, 0x9383, 0x993, 0x1, 0x0);
        gbc.writeMem(0x74fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa633);
        EXPECT(gbc.pc(), 0x74fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02F5
        gbc.setState(0x67d7, 0x4b46, 0xb840, 0xabf7, 0xb446, 0x6533, 0x0, 0x0);
        gbc.writeMem(0x67d7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x4b46);
        EXPECT(gbc.pc(), 0x67d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02F6
        gbc.setState(0xb0fe, 0x4c4b, 0xb9c0, 0x5703, 0x23, 0xe5a6, 0x0, 0x1);
        gbc.writeMem(0xb0fe, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x4c4b);
        EXPECT(gbc.pc(), 0xb100);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0fe), 0xcb);
        EXPECT(gbc.readMem(0xb0ff), 0x93);
        // CB 93 02F7
        gbc.setState(0x5353, 0x86d6, 0x3f70, 0xb1d5, 0x5b2a, 0x1247, 0x1, 0x1);
        gbc.writeMem(0x5353, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x86d6);
        EXPECT(gbc.pc(), 0x5355);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02F8
        gbc.setState(0xa0da, 0xd2f6, 0xae10, 0x7127, 0x4cfb, 0xc556, 0x1, 0x0);
        gbc.writeMem(0xa0da, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd2f6);
        EXPECT(gbc.pc(), 0xa0dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0da), 0xcb);
        EXPECT(gbc.readMem(0xa0db), 0x93);
        // CB 93 02F9
        gbc.setState(0xbe22, 0x220, 0x2c30, 0xfe5b, 0x638a, 0x32ae, 0x1, 0x0);
        gbc.writeMem(0xbe22, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x220);
        EXPECT(gbc.pc(), 0xbe24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe22), 0xcb);
        EXPECT(gbc.readMem(0xbe23), 0x93);
        // CB 93 02FA
        gbc.setState(0x5ead, 0x1eb5, 0xbaf0, 0xf75f, 0xac3e, 0x348a, 0x0, 0x0);
        gbc.writeMem(0x5ead, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1eb5);
        EXPECT(gbc.pc(), 0x5eaf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 02FB
        gbc.setState(0xb678, 0xf54, 0x30a0, 0x5728, 0xf9e3, 0x80dd, 0x0, 0x0);
        gbc.writeMem(0xb678, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf54);
        EXPECT(gbc.pc(), 0xb67a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb678), 0xcb);
        EXPECT(gbc.readMem(0xb679), 0x93);
        // CB 93 02FC
        gbc.setState(0xecca, 0xb6, 0x91b0, 0xabb6, 0xc39e, 0xbbea, 0x0, 0x1);
        gbc.writeMem(0xecca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xb6);
        EXPECT(gbc.pc(), 0xeccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecca), 0xcb);
        EXPECT(gbc.readMem(0xeccb), 0x93);
        // CB 93 02FD
        gbc.setState(0xecc, 0x31c3, 0xb320, 0x2f5e, 0xad2, 0x5584, 0x0, 0x0);
        gbc.writeMem(0xecc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x31c3);
        EXPECT(gbc.pc(), 0xece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 02FE
        gbc.setState(0xc117, 0xd1f9, 0x86c0, 0xdf36, 0x3199, 0xa93c, 0x1, 0x0);
        gbc.writeMem(0xc117, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0xc119);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc117), 0xcb);
        EXPECT(gbc.readMem(0xc118), 0x93);
        // CB 93 02FF
        gbc.setState(0x978a, 0xbdb7, 0x1bb0, 0xbbe4, 0x267a, 0x6072, 0x1, 0x1);
        gbc.writeMem(0x978a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbdb7);
        EXPECT(gbc.pc(), 0x978c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x978a), 0xcb);
        EXPECT(gbc.readMem(0x978b), 0x93);
        // CB 93 0300
        gbc.setState(0xc749, 0x763e, 0x67c0, 0xdd1d, 0x5625, 0x2500, 0x0, 0x1);
        gbc.writeMem(0xc749, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x763e);
        EXPECT(gbc.pc(), 0xc74b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc749), 0xcb);
        EXPECT(gbc.readMem(0xc74a), 0x93);
        // CB 93 0301
        gbc.setState(0x4584, 0xd50e, 0xc6e0, 0x25f2, 0x4f25, 0x52ee, 0x1, 0x1);
        gbc.writeMem(0x4584, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd50e);
        EXPECT(gbc.pc(), 0x4586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0302
        gbc.setState(0x211, 0x7fd7, 0x8090, 0xf40f, 0x3a59, 0xb240, 0x0, 0x1);
        gbc.writeMem(0x211, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x7fd7);
        EXPECT(gbc.pc(), 0x213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0303
        gbc.setState(0x2356, 0x9cd6, 0x7700, 0xe2e1, 0xec65, 0x1c9, 0x1, 0x0);
        gbc.writeMem(0x2356, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9cd6);
        EXPECT(gbc.pc(), 0x2358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0304
        gbc.setState(0xb0eb, 0x4fff, 0xb690, 0xf590, 0xf81a, 0x521c, 0x0, 0x1);
        gbc.writeMem(0xb0eb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4fff);
        EXPECT(gbc.pc(), 0xb0ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0eb), 0xcb);
        EXPECT(gbc.readMem(0xb0ec), 0x93);
        // CB 93 0305
        gbc.setState(0xceed, 0xbc51, 0xd5f0, 0x837a, 0x99bf, 0x46aa, 0x1, 0x0);
        gbc.writeMem(0xceed, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbc51);
        EXPECT(gbc.pc(), 0xceef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceed), 0xcb);
        EXPECT(gbc.readMem(0xceee), 0x93);
        // CB 93 0306
        gbc.setState(0x6004, 0xda42, 0xfcd0, 0x986a, 0x9fac, 0x7144, 0x0, 0x1);
        gbc.writeMem(0x6004, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xda42);
        EXPECT(gbc.pc(), 0x6006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0307
        gbc.setState(0xbac8, 0x5be8, 0x9aa0, 0x4d5d, 0xd209, 0x1358, 0x1, 0x1);
        gbc.writeMem(0xbac8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5be8);
        EXPECT(gbc.pc(), 0xbaca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac8), 0xcb);
        EXPECT(gbc.readMem(0xbac9), 0x93);
        // CB 93 0308
        gbc.setState(0x8dc1, 0xa9ab, 0x3900, 0x87ef, 0x8a36, 0xbcfa, 0x0, 0x0);
        gbc.writeMem(0x8dc1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa9ab);
        EXPECT(gbc.pc(), 0x8dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc1), 0xcb);
        EXPECT(gbc.readMem(0x8dc2), 0x93);
        // CB 93 0309
        gbc.setState(0x4fe7, 0x5dba, 0xc160, 0x2b27, 0x45fb, 0xd834, 0x0, 0x1);
        gbc.writeMem(0x4fe7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5dba);
        EXPECT(gbc.pc(), 0x4fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 030A
        gbc.setState(0x8716, 0x425d, 0xa200, 0x7582, 0x119a, 0xa844, 0x0, 0x0);
        gbc.writeMem(0x8716, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x425d);
        EXPECT(gbc.pc(), 0x8718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8716), 0xcb);
        EXPECT(gbc.readMem(0x8717), 0x93);
        // CB 93 030B
        gbc.setState(0xe53, 0xe535, 0xda0, 0xce6e, 0x27e8, 0xffc9, 0x1, 0x0);
        gbc.writeMem(0xe53, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe535);
        EXPECT(gbc.pc(), 0xe55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 030C
        gbc.setState(0xc2f3, 0x16f5, 0xc0d0, 0x4218, 0xd218, 0x2e39, 0x0, 0x0);
        gbc.writeMem(0xc2f3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x16f5);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        EXPECT(gbc.readMem(0xc2f4), 0x93);
        // CB 93 030D
        gbc.setState(0xdd54, 0xcfb1, 0xc700, 0x9491, 0xe103, 0xbeb5, 0x0, 0x1);
        gbc.writeMem(0xdd54, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcfb1);
        EXPECT(gbc.pc(), 0xdd56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd54), 0xcb);
        EXPECT(gbc.readMem(0xdd55), 0x93);
        // CB 93 030E
        gbc.setState(0x9299, 0x2c27, 0x6af0, 0x7a7f, 0x381f, 0xd206, 0x0, 0x0);
        gbc.writeMem(0x9299, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2c27);
        EXPECT(gbc.pc(), 0x929b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9299), 0xcb);
        EXPECT(gbc.readMem(0x929a), 0x93);
        // CB 93 030F
        gbc.setState(0x3968, 0x8a77, 0x83d0, 0xae81, 0x9478, 0xe1f5, 0x1, 0x0);
        gbc.writeMem(0x3968, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8a77);
        EXPECT(gbc.pc(), 0x396a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0310
        gbc.setState(0xde29, 0xbd27, 0x3a90, 0x6f55, 0xb1f1, 0xac3d, 0x0, 0x1);
        gbc.writeMem(0xde29, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbd27);
        EXPECT(gbc.pc(), 0xde2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde29), 0xcb);
        EXPECT(gbc.readMem(0xde2a), 0x93);
        // CB 93 0311
        gbc.setState(0x31fd, 0x95ec, 0x4d20, 0xd24b, 0x3b57, 0x8b95, 0x1, 0x1);
        gbc.writeMem(0x31fd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x95ec);
        EXPECT(gbc.pc(), 0x31ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0312
        gbc.setState(0xd3a4, 0x8e08, 0x8e10, 0x4109, 0x67e1, 0x7a34, 0x0, 0x0);
        gbc.writeMem(0xd3a4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8e08);
        EXPECT(gbc.pc(), 0xd3a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3a4), 0xcb);
        EXPECT(gbc.readMem(0xd3a5), 0x93);
        // CB 93 0313
        gbc.setState(0x94d0, 0x6931, 0x1bf0, 0x37c7, 0x72f0, 0xdb97, 0x0, 0x1);
        gbc.writeMem(0x94d0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6931);
        EXPECT(gbc.pc(), 0x94d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d0), 0xcb);
        EXPECT(gbc.readMem(0x94d1), 0x93);
        // CB 93 0314
        gbc.setState(0xd774, 0x9925, 0x1bf0, 0x61c1, 0x5096, 0x5a52, 0x1, 0x1);
        gbc.writeMem(0xd774, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x9925);
        EXPECT(gbc.pc(), 0xd776);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd774), 0xcb);
        EXPECT(gbc.readMem(0xd775), 0x93);
        // CB 93 0315
        gbc.setState(0x7cc2, 0x27f, 0x59a0, 0x87ec, 0xfc61, 0x33c3, 0x0, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x27f);
        EXPECT(gbc.pc(), 0x7cc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0316
        gbc.setState(0x312f, 0x912f, 0x93c0, 0xb3aa, 0x57e0, 0x48fb, 0x0, 0x1);
        gbc.writeMem(0x312f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x912f);
        EXPECT(gbc.pc(), 0x3131);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0317
        gbc.setState(0x6c7a, 0xf8e, 0xfb80, 0xc9cf, 0x8b90, 0x68e4, 0x0, 0x0);
        gbc.writeMem(0x6c7a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf8e);
        EXPECT(gbc.pc(), 0x6c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0318
        gbc.setState(0x24a8, 0xf80f, 0xd2d0, 0x2e4d, 0xd147, 0x6a5e, 0x1, 0x0);
        gbc.writeMem(0x24a8, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf80f);
        EXPECT(gbc.pc(), 0x24aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0319
        gbc.setState(0x9d82, 0xd9bc, 0x9290, 0x6740, 0x6c47, 0x4173, 0x0, 0x0);
        gbc.writeMem(0x9d82, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd9bc);
        EXPECT(gbc.pc(), 0x9d84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d82), 0xcb);
        EXPECT(gbc.readMem(0x9d83), 0x93);
        // CB 93 031A
        gbc.setState(0x180c, 0x44f3, 0xf8f0, 0x6ef7, 0x105c, 0x48cf, 0x0, 0x1);
        gbc.writeMem(0x180c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x44f3);
        EXPECT(gbc.pc(), 0x180e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 031B
        gbc.setState(0x46ac, 0x98ef, 0x8e60, 0x9af8, 0x2130, 0x5d72, 0x0, 0x1);
        gbc.writeMem(0x46ac, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x98ef);
        EXPECT(gbc.pc(), 0x46ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 031C
        gbc.setState(0x481, 0x3d8, 0xcc80, 0x6cb5, 0x3d6a, 0x48de, 0x0, 0x0);
        gbc.writeMem(0x481, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3d8);
        EXPECT(gbc.pc(), 0x483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 031D
        gbc.setState(0x7be0, 0x34d9, 0xf3a0, 0x5842, 0x8304, 0x74eb, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x34d9);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 031E
        gbc.setState(0x39de, 0x73c7, 0x6530, 0x5de8, 0x5d98, 0xb960, 0x0, 0x0);
        gbc.writeMem(0x39de, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x73c7);
        EXPECT(gbc.pc(), 0x39e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 031F
        gbc.setState(0x9fba, 0x594d, 0xd0e0, 0xbc48, 0x2941, 0xef81, 0x0, 0x1);
        gbc.writeMem(0x9fba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x594d);
        EXPECT(gbc.pc(), 0x9fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fba), 0xcb);
        EXPECT(gbc.readMem(0x9fbb), 0x93);
        // CB 93 0320
        gbc.setState(0x3b3f, 0xe60b, 0xa1f0, 0xcd20, 0xd4f0, 0x5646, 0x1, 0x0);
        gbc.writeMem(0x3b3f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe60b);
        EXPECT(gbc.pc(), 0x3b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0321
        gbc.setState(0xe38a, 0x914d, 0xbb30, 0xaed5, 0x1626, 0x7978, 0x0, 0x0);
        gbc.writeMem(0xe38a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x914d);
        EXPECT(gbc.pc(), 0xe38c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe38a), 0xcb);
        EXPECT(gbc.readMem(0xe38b), 0x93);
        // CB 93 0322
        gbc.setState(0xd6f2, 0x8515, 0xc20, 0xf2ac, 0x12bb, 0xb8f7, 0x0, 0x1);
        gbc.writeMem(0xd6f2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8515);
        EXPECT(gbc.pc(), 0xd6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6f2), 0xcb);
        EXPECT(gbc.readMem(0xd6f3), 0x93);
        // CB 93 0323
        gbc.setState(0x5171, 0xcabf, 0x1e0, 0xf2b9, 0x16db, 0x3b38, 0x0, 0x1);
        gbc.writeMem(0x5171, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcabf);
        EXPECT(gbc.pc(), 0x5173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0324
        gbc.setState(0x5663, 0x8f64, 0x1e70, 0x46eb, 0x8382, 0x7710, 0x0, 0x0);
        gbc.writeMem(0x5663, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8f64);
        EXPECT(gbc.pc(), 0x5665);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0325
        gbc.setState(0x1f65, 0x2e52, 0x8d70, 0xb169, 0xb884, 0xd3f4, 0x1, 0x0);
        gbc.writeMem(0x1f65, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2e52);
        EXPECT(gbc.pc(), 0x1f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0326
        gbc.setState(0x56bd, 0xd98e, 0x3090, 0x937c, 0x2239, 0x1340, 0x1, 0x1);
        gbc.writeMem(0x56bd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd98e);
        EXPECT(gbc.pc(), 0x56bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0327
        gbc.setState(0x8985, 0x2c67, 0xc410, 0x49c9, 0x5e9c, 0xf263, 0x0, 0x0);
        gbc.writeMem(0x8985, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2c67);
        EXPECT(gbc.pc(), 0x8987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8985), 0xcb);
        EXPECT(gbc.readMem(0x8986), 0x93);
        // CB 93 0328
        gbc.setState(0x28f9, 0xdc59, 0xb160, 0xc0e7, 0x6e04, 0xd6eb, 0x1, 0x1);
        gbc.writeMem(0x28f9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdc59);
        EXPECT(gbc.pc(), 0x28fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0329
        gbc.setState(0xbe51, 0x8427, 0x5620, 0x162e, 0xd178, 0x8b64, 0x0, 0x0);
        gbc.writeMem(0xbe51, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x8427);
        EXPECT(gbc.pc(), 0xbe53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe51), 0xcb);
        EXPECT(gbc.readMem(0xbe52), 0x93);
        // CB 93 032A
        gbc.setState(0xd008, 0xe3e3, 0xe700, 0xcfd2, 0x8a96, 0xc486, 0x1, 0x1);
        gbc.writeMem(0xd008, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe3e3);
        EXPECT(gbc.pc(), 0xd00a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd008), 0xcb);
        EXPECT(gbc.readMem(0xd009), 0x93);
        // CB 93 032C
        gbc.setState(0x8b17, 0x8a7, 0xe250, 0x6b8e, 0x1668, 0xa1c6, 0x1, 0x0);
        gbc.writeMem(0x8b17, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8a7);
        EXPECT(gbc.pc(), 0x8b19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b17), 0xcb);
        EXPECT(gbc.readMem(0x8b18), 0x93);
        // CB 93 032D
        gbc.setState(0xa107, 0x9eda, 0xd140, 0xcdfa, 0xfda2, 0x8d05, 0x0, 0x1);
        gbc.writeMem(0xa107, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9eda);
        EXPECT(gbc.pc(), 0xa109);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa107), 0xcb);
        EXPECT(gbc.readMem(0xa108), 0x93);
        // CB 93 032E
        gbc.setState(0x77ff, 0xc208, 0x60d0, 0x8cc0, 0xbd54, 0xe73c, 0x0, 0x0);
        gbc.writeMem(0x77ff, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc208);
        EXPECT(gbc.pc(), 0x7801);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 032F
        gbc.setState(0x7f16, 0xe64a, 0x5f50, 0x3d8f, 0x3b8e, 0xa3c9, 0x1, 0x0);
        gbc.writeMem(0x7f16, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xe64a);
        EXPECT(gbc.pc(), 0x7f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0330
        gbc.setState(0xe5c1, 0x9062, 0xb2f0, 0xe5e, 0x3774, 0x3e6d, 0x1, 0x0);
        gbc.writeMem(0xe5c1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9062);
        EXPECT(gbc.pc(), 0xe5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c1), 0xcb);
        EXPECT(gbc.readMem(0xe5c2), 0x93);
        // CB 93 0331
        gbc.setState(0x8f9b, 0xd54f, 0xa120, 0x9564, 0x7148, 0x58f0, 0x0, 0x0);
        gbc.writeMem(0x8f9b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd54f);
        EXPECT(gbc.pc(), 0x8f9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9b), 0xcb);
        EXPECT(gbc.readMem(0x8f9c), 0x93);
        // CB 93 0332
        gbc.setState(0x6dee, 0xb0b6, 0xb500, 0xe3c6, 0xf8e9, 0xb922, 0x1, 0x1);
        gbc.writeMem(0x6dee, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb0b6);
        EXPECT(gbc.pc(), 0x6df0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0333
        gbc.setState(0xb6c2, 0x727c, 0xdfc0, 0x3646, 0x88e1, 0x9630, 0x0, 0x0);
        gbc.writeMem(0xb6c2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x727c);
        EXPECT(gbc.pc(), 0xb6c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6c2), 0xcb);
        EXPECT(gbc.readMem(0xb6c3), 0x93);
        // CB 93 0334
        gbc.setState(0xc4ab, 0xfa93, 0x5e50, 0x79a1, 0x5caf, 0x8593, 0x1, 0x1);
        gbc.writeMem(0xc4ab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xfa93);
        EXPECT(gbc.pc(), 0xc4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ab), 0xcb);
        EXPECT(gbc.readMem(0xc4ac), 0x93);
        // CB 93 0335
        gbc.setState(0x94f3, 0xacc4, 0x4470, 0x9d9d, 0x82ab, 0x2639, 0x0, 0x0);
        gbc.writeMem(0x94f3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0x94f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f3), 0xcb);
        EXPECT(gbc.readMem(0x94f4), 0x93);
        // CB 93 0336
        gbc.setState(0x6e1a, 0x475b, 0xf710, 0xc154, 0x7a9b, 0xfd58, 0x1, 0x1);
        gbc.writeMem(0x6e1a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x475b);
        EXPECT(gbc.pc(), 0x6e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0337
        gbc.setState(0x2f2c, 0xcfa3, 0x2390, 0xd4bd, 0x1e35, 0x2c42, 0x1, 0x0);
        gbc.writeMem(0x2f2c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcfa3);
        EXPECT(gbc.pc(), 0x2f2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0338
        gbc.setState(0x1cdd, 0x21ff, 0xb4c0, 0x88b3, 0x9dfd, 0x6d7c, 0x1, 0x1);
        gbc.writeMem(0x1cdd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0x1cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0339
        gbc.setState(0x3a3a, 0x608f, 0x79e0, 0x3b38, 0x1038, 0xd1d1, 0x0, 0x0);
        gbc.writeMem(0x3a3a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x608f);
        EXPECT(gbc.pc(), 0x3a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 033A
        gbc.setState(0x8e52, 0x74f4, 0x3cc0, 0x9070, 0xbd20, 0x8a70, 0x0, 0x0);
        gbc.writeMem(0x8e52, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x74f4);
        EXPECT(gbc.pc(), 0x8e54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e52), 0xcb);
        EXPECT(gbc.readMem(0x8e53), 0x93);
        // CB 93 033B
        gbc.setState(0x995a, 0x27fb, 0x8b50, 0x8d2f, 0xbfaa, 0x2ef0, 0x0, 0x1);
        gbc.writeMem(0x995a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x27fb);
        EXPECT(gbc.pc(), 0x995c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995a), 0xcb);
        EXPECT(gbc.readMem(0x995b), 0x93);
        // CB 93 033C
        gbc.setState(0x61ba, 0x3245, 0xb600, 0xcf92, 0xe9a8, 0xb25a, 0x0, 0x0);
        gbc.writeMem(0x61ba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x3245);
        EXPECT(gbc.pc(), 0x61bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 033D
        gbc.setState(0x43bc, 0x1ff2, 0x2540, 0x221a, 0x4c25, 0xe03e, 0x0, 0x0);
        gbc.writeMem(0x43bc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1ff2);
        EXPECT(gbc.pc(), 0x43be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 033E
        gbc.setState(0x3c66, 0x21c8, 0xef60, 0x9722, 0xbd93, 0x2de8, 0x1, 0x1);
        gbc.writeMem(0x3c66, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x21c8);
        EXPECT(gbc.pc(), 0x3c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 033F
        gbc.setState(0x8032, 0xbf35, 0x83f0, 0xc164, 0x7525, 0x413b, 0x0, 0x1);
        gbc.writeMem(0x8032, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbf35);
        EXPECT(gbc.pc(), 0x8034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8032), 0xcb);
        EXPECT(gbc.readMem(0x8033), 0x93);
        // CB 93 0340
        gbc.setState(0xc1, 0xcde3, 0xd420, 0xdc5a, 0xef44, 0xf17a, 0x1, 0x0);
        gbc.writeMem(0xc1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xcde3);
        EXPECT(gbc.pc(), 0xc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0341
        gbc.setState(0x1369, 0x518f, 0xff50, 0x2872, 0x4979, 0x9ac, 0x0, 0x1);
        gbc.writeMem(0x1369, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x518f);
        EXPECT(gbc.pc(), 0x136b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0342
        gbc.setState(0x7670, 0xfcc2, 0x48b0, 0xdb35, 0xa806, 0x89d7, 0x1, 0x1);
        gbc.writeMem(0x7670, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xfcc2);
        EXPECT(gbc.pc(), 0x7672);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0343
        gbc.setState(0xc176, 0x37f0, 0x2d0, 0xa839, 0x666, 0x8e00, 0x1, 0x1);
        gbc.writeMem(0xc176, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x37f0);
        EXPECT(gbc.pc(), 0xc178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc176), 0xcb);
        EXPECT(gbc.readMem(0xc177), 0x93);
        // CB 93 0344
        gbc.setState(0xe3c4, 0xf056, 0x9b30, 0x4760, 0x3ce1, 0x3ea1, 0x0, 0x0);
        gbc.writeMem(0xe3c4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xf056);
        EXPECT(gbc.pc(), 0xe3c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3c4), 0xcb);
        EXPECT(gbc.readMem(0xe3c5), 0x93);
        // CB 93 0345
        gbc.setState(0x99b, 0x7233, 0xa110, 0x8936, 0x472c, 0xd6a9, 0x0, 0x0);
        gbc.writeMem(0x99b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x7233);
        EXPECT(gbc.pc(), 0x99d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0346
        gbc.setState(0x16af, 0x7b4a, 0xb3b0, 0x42d2, 0xabfa, 0xd2e, 0x0, 0x0);
        gbc.writeMem(0x16af, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7b4a);
        EXPECT(gbc.pc(), 0x16b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0347
        gbc.setState(0xef76, 0x3326, 0xc8a0, 0xcab6, 0x4845, 0x89df, 0x1, 0x0);
        gbc.writeMem(0xef76, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3326);
        EXPECT(gbc.pc(), 0xef78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef76), 0xcb);
        EXPECT(gbc.readMem(0xef77), 0x93);
        // CB 93 0348
        gbc.setState(0xc7d6, 0xa1f, 0xc780, 0x547, 0x57c4, 0xe89c, 0x0, 0x0);
        gbc.writeMem(0xc7d6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa1f);
        EXPECT(gbc.pc(), 0xc7d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d6), 0xcb);
        EXPECT(gbc.readMem(0xc7d7), 0x93);
        // CB 93 0349
        gbc.setState(0x15d1, 0x3ef5, 0xd130, 0x5491, 0xd67d, 0x32fa, 0x1, 0x0);
        gbc.writeMem(0x15d1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3ef5);
        EXPECT(gbc.pc(), 0x15d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 034A
        gbc.setState(0x3c80, 0x8567, 0x9180, 0xda74, 0x352a, 0xab89, 0x1, 0x0);
        gbc.writeMem(0x3c80, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8567);
        EXPECT(gbc.pc(), 0x3c82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 034B
        gbc.setState(0x98d5, 0xfeb6, 0x79c0, 0xcd27, 0xeeb4, 0x8ab5, 0x1, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xfeb6);
        EXPECT(gbc.pc(), 0x98d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d5), 0xcb);
        EXPECT(gbc.readMem(0x98d6), 0x93);
        // CB 93 034C
        gbc.setState(0x39ac, 0x782f, 0xb4a0, 0x6868, 0x1387, 0xc64b, 0x1, 0x0);
        gbc.writeMem(0x39ac, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x782f);
        EXPECT(gbc.pc(), 0x39ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 034D
        gbc.setState(0x873b, 0xaf8e, 0x5130, 0x4af2, 0xdac, 0x414d, 0x1, 0x0);
        gbc.writeMem(0x873b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xaf8e);
        EXPECT(gbc.pc(), 0x873d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873b), 0xcb);
        EXPECT(gbc.readMem(0x873c), 0x93);
        // CB 93 034E
        gbc.setState(0xb35c, 0xa9e4, 0x5e90, 0x420f, 0x9920, 0x6ccb, 0x1, 0x0);
        gbc.writeMem(0xb35c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa9e4);
        EXPECT(gbc.pc(), 0xb35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb35c), 0xcb);
        EXPECT(gbc.readMem(0xb35d), 0x93);
        // CB 93 034F
        gbc.setState(0x4f73, 0xb2e8, 0x1090, 0xde1d, 0xbdc8, 0xbd95, 0x0, 0x0);
        gbc.writeMem(0x4f73, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb2e8);
        EXPECT(gbc.pc(), 0x4f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0350
        gbc.setState(0xc9b0, 0x362, 0x6c90, 0xf31e, 0x6dee, 0xd405, 0x0, 0x1);
        gbc.writeMem(0xc9b0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x362);
        EXPECT(gbc.pc(), 0xc9b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9b0), 0xcb);
        EXPECT(gbc.readMem(0xc9b1), 0x93);
        // CB 93 0351
        gbc.setState(0x1b01, 0xf7d4, 0x8670, 0x6d48, 0x806b, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0x1b01, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf7d4);
        EXPECT(gbc.pc(), 0x1b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0352
        gbc.setState(0x5240, 0x3569, 0xb0b0, 0x8261, 0xb190, 0x45d8, 0x0, 0x0);
        gbc.writeMem(0x5240, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3569);
        EXPECT(gbc.pc(), 0x5242);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0353
        gbc.setState(0x976c, 0x474b, 0xeb40, 0x7902, 0xd001, 0xc0bc, 0x0, 0x0);
        gbc.writeMem(0x976c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x474b);
        EXPECT(gbc.pc(), 0x976e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976c), 0xcb);
        EXPECT(gbc.readMem(0x976d), 0x93);
        // CB 93 0354
        gbc.setState(0xcfe7, 0x7b81, 0xb460, 0x5829, 0x88bc, 0xae93, 0x0, 0x1);
        gbc.writeMem(0xcfe7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7b81);
        EXPECT(gbc.pc(), 0xcfe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe7), 0xcb);
        EXPECT(gbc.readMem(0xcfe8), 0x93);
        // CB 93 0355
        gbc.setState(0x1397, 0x8ced, 0xb610, 0x9e06, 0x3ad7, 0xf925, 0x0, 0x1);
        gbc.writeMem(0x1397, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x8ced);
        EXPECT(gbc.pc(), 0x1399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0356
        gbc.setState(0x5636, 0x6077, 0x1260, 0xa488, 0x7f5, 0x9608, 0x1, 0x0);
        gbc.writeMem(0x5636, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6077);
        EXPECT(gbc.pc(), 0x5638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0357
        gbc.setState(0xef16, 0x9e8c, 0x2980, 0xeccb, 0x2b8f, 0x25e4, 0x1, 0x0);
        gbc.writeMem(0xef16, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x9e8c);
        EXPECT(gbc.pc(), 0xef18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef16), 0xcb);
        EXPECT(gbc.readMem(0xef17), 0x93);
        // CB 93 0358
        gbc.setState(0xc515, 0x724d, 0xbff0, 0x7488, 0x9ad9, 0xb185, 0x1, 0x1);
        gbc.writeMem(0xc515, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x724d);
        EXPECT(gbc.pc(), 0xc517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc515), 0xcb);
        EXPECT(gbc.readMem(0xc516), 0x93);
        // CB 93 0359
        gbc.setState(0x79d7, 0x310c, 0xc10, 0x818b, 0xfeab, 0xb0e1, 0x1, 0x1);
        gbc.writeMem(0x79d7, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x310c);
        EXPECT(gbc.pc(), 0x79d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 035A
        gbc.setState(0x45d0, 0xba7e, 0x6230, 0x4434, 0xb8a7, 0x627d, 0x0, 0x1);
        gbc.writeMem(0x45d0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xba7e);
        EXPECT(gbc.pc(), 0x45d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 035B
        gbc.setState(0x299a, 0x92cd, 0x520, 0x8963, 0x6e81, 0x77c6, 0x1, 0x1);
        gbc.writeMem(0x299a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x92cd);
        EXPECT(gbc.pc(), 0x299c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 035C
        gbc.setState(0x33eb, 0x8c17, 0x9b40, 0x9899, 0x9266, 0x14c6, 0x1, 0x1);
        gbc.writeMem(0x33eb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x8c17);
        EXPECT(gbc.pc(), 0x33ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 035D
        gbc.setState(0x191f, 0x676c, 0x47e0, 0x1c2c, 0x596d, 0xe4e9, 0x1, 0x1);
        gbc.writeMem(0x191f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x676c);
        EXPECT(gbc.pc(), 0x1921);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 035E
        gbc.setState(0x67ff, 0x35c3, 0x1710, 0xede6, 0xc931, 0x5cde, 0x1, 0x1);
        gbc.writeMem(0x67ff, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x35c3);
        EXPECT(gbc.pc(), 0x6801);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 035F
        gbc.setState(0x1b87, 0x5a9, 0xa3e0, 0x435f, 0x325e, 0x6f73, 0x0, 0x1);
        gbc.writeMem(0x1b87, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5a9);
        EXPECT(gbc.pc(), 0x1b89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0360
        gbc.setState(0xde22, 0x6175, 0xd300, 0xdeb4, 0xf33d, 0x2c08, 0x0, 0x1);
        gbc.writeMem(0xde22, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6175);
        EXPECT(gbc.pc(), 0xde24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde22), 0xcb);
        EXPECT(gbc.readMem(0xde23), 0x93);
        // CB 93 0361
        gbc.setState(0x9b34, 0x60f5, 0x7830, 0x80ee, 0xefb5, 0x31e2, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x60f5);
        EXPECT(gbc.pc(), 0x9b36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b34), 0xcb);
        EXPECT(gbc.readMem(0x9b35), 0x93);
        // CB 93 0362
        gbc.setState(0xd07f, 0x9713, 0x45d0, 0xabd, 0x81cc, 0x28bd, 0x1, 0x1);
        gbc.writeMem(0xd07f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x9713);
        EXPECT(gbc.pc(), 0xd081);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07f), 0xcb);
        EXPECT(gbc.readMem(0xd080), 0x93);
        // CB 93 0363
        gbc.setState(0xae8e, 0x519, 0x1920, 0x9272, 0xcc55, 0x5f67, 0x1, 0x1);
        gbc.writeMem(0xae8e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x519);
        EXPECT(gbc.pc(), 0xae90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae8e), 0xcb);
        EXPECT(gbc.readMem(0xae8f), 0x93);
        // CB 93 0364
        gbc.setState(0xaaa5, 0xc79c, 0x9360, 0xb179, 0x27cd, 0x5bf6, 0x0, 0x1);
        gbc.writeMem(0xaaa5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc79c);
        EXPECT(gbc.pc(), 0xaaa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa5), 0xcb);
        EXPECT(gbc.readMem(0xaaa6), 0x93);
        // CB 93 0365
        gbc.setState(0x2ec1, 0xabff, 0xf70, 0xc15a, 0xcd, 0xc13c, 0x0, 0x1);
        gbc.writeMem(0x2ec1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xabff);
        EXPECT(gbc.pc(), 0x2ec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0366
        gbc.setState(0x8753, 0x828e, 0x40c0, 0x86a0, 0x1100, 0x613a, 0x0, 0x1);
        gbc.writeMem(0x8753, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x828e);
        EXPECT(gbc.pc(), 0x8755);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8753), 0xcb);
        EXPECT(gbc.readMem(0x8754), 0x93);
        // CB 93 0367
        gbc.setState(0x51d5, 0x4fe4, 0x12d0, 0x212e, 0xf0de, 0x91cc, 0x0, 0x0);
        gbc.writeMem(0x51d5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x51d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0368
        gbc.setState(0x5301, 0xfe2, 0x2360, 0xecf1, 0xddb3, 0x36dc, 0x1, 0x0);
        gbc.writeMem(0x5301, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xfe2);
        EXPECT(gbc.pc(), 0x5303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0369
        gbc.setState(0xde16, 0x734b, 0xc2c0, 0xe7c7, 0x926e, 0xc40, 0x1, 0x1);
        gbc.writeMem(0xde16, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x734b);
        EXPECT(gbc.pc(), 0xde18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde16), 0xcb);
        EXPECT(gbc.readMem(0xde17), 0x93);
        // CB 93 036A
        gbc.setState(0x83a4, 0x7d3b, 0xff60, 0x5d57, 0x776a, 0x2261, 0x1, 0x0);
        gbc.writeMem(0x83a4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7d3b);
        EXPECT(gbc.pc(), 0x83a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a4), 0xcb);
        EXPECT(gbc.readMem(0x83a5), 0x93);
        // CB 93 036B
        gbc.setState(0xab6c, 0x2df6, 0x5570, 0xf7d5, 0x9574, 0xfda9, 0x0, 0x0);
        gbc.writeMem(0xab6c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x2df6);
        EXPECT(gbc.pc(), 0xab6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab6c), 0xcb);
        EXPECT(gbc.readMem(0xab6d), 0x93);
        // CB 93 036C
        gbc.setState(0x2585, 0xdc4, 0xf200, 0x7b57, 0xf5c, 0x9192, 0x0, 0x0);
        gbc.writeMem(0x2585, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0x2587);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 036D
        gbc.setState(0x85ea, 0x6dba, 0x21f0, 0xad11, 0x4bb7, 0xbdea, 0x0, 0x0);
        gbc.writeMem(0x85ea, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6dba);
        EXPECT(gbc.pc(), 0x85ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ea), 0xcb);
        EXPECT(gbc.readMem(0x85eb), 0x93);
        // CB 93 036F
        gbc.setState(0xc773, 0x83cd, 0xcea0, 0x3f01, 0xf5bc, 0x97ba, 0x0, 0x0);
        gbc.writeMem(0xc773, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x83cd);
        EXPECT(gbc.pc(), 0xc775);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc773), 0xcb);
        EXPECT(gbc.readMem(0xc774), 0x93);
        // CB 93 0370
        gbc.setState(0x96b, 0xe811, 0x7220, 0x6a9, 0x6ad6, 0x6baa, 0x1, 0x1);
        gbc.writeMem(0x96b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe811);
        EXPECT(gbc.pc(), 0x96d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0371
        gbc.setState(0xd60e, 0x79ca, 0xcd20, 0xd28, 0x25e2, 0x7c85, 0x0, 0x0);
        gbc.writeMem(0xd60e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x79ca);
        EXPECT(gbc.pc(), 0xd610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd60e), 0xcb);
        EXPECT(gbc.readMem(0xd60f), 0x93);
        // CB 93 0372
        gbc.setState(0x6ac2, 0x7c96, 0x2880, 0xc134, 0x36df, 0xffbe, 0x1, 0x1);
        gbc.writeMem(0x6ac2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7c96);
        EXPECT(gbc.pc(), 0x6ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0373
        gbc.setState(0x58f0, 0x1871, 0x2e50, 0xba3c, 0x82c9, 0x2984, 0x0, 0x1);
        gbc.writeMem(0x58f0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x1871);
        EXPECT(gbc.pc(), 0x58f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0374
        gbc.setState(0x232a, 0x8a5, 0xc330, 0xf041, 0x4344, 0x7699, 0x0, 0x0);
        gbc.writeMem(0x232a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8a5);
        EXPECT(gbc.pc(), 0x232c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0375
        gbc.setState(0x1588, 0x533b, 0x2ce0, 0xc713, 0xc755, 0x80f, 0x0, 0x0);
        gbc.writeMem(0x1588, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x533b);
        EXPECT(gbc.pc(), 0x158a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0376
        gbc.setState(0xc5cf, 0x35ed, 0x6a30, 0xc80, 0x13f1, 0xe864, 0x0, 0x1);
        gbc.writeMem(0xc5cf, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x35ed);
        EXPECT(gbc.pc(), 0xc5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5cf), 0xcb);
        EXPECT(gbc.readMem(0xc5d0), 0x93);
        // CB 93 0378
        gbc.setState(0x8bd, 0x7de3, 0xdda0, 0x6af4, 0x36bf, 0xb5a4, 0x0, 0x0);
        gbc.writeMem(0x8bd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7de3);
        EXPECT(gbc.pc(), 0x8bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0379
        gbc.setState(0x3979, 0xe983, 0xcc10, 0x7ef7, 0x5fd1, 0xb935, 0x0, 0x1);
        gbc.writeMem(0x3979, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe983);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 037A
        gbc.setState(0xd284, 0x4308, 0xd680, 0xd790, 0xcc1a, 0xa537, 0x1, 0x1);
        gbc.writeMem(0xd284, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4308);
        EXPECT(gbc.pc(), 0xd286);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd284), 0xcb);
        EXPECT(gbc.readMem(0xd285), 0x93);
        // CB 93 037B
        gbc.setState(0x7e4c, 0xb93e, 0x5c30, 0xffb, 0x799e, 0xc268, 0x1, 0x0);
        gbc.writeMem(0x7e4c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb93e);
        EXPECT(gbc.pc(), 0x7e4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 037C
        gbc.setState(0xdb87, 0x97e, 0x9710, 0xd4f7, 0x1de1, 0x9121, 0x1, 0x1);
        gbc.writeMem(0xdb87, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x97e);
        EXPECT(gbc.pc(), 0xdb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb87), 0xcb);
        EXPECT(gbc.readMem(0xdb88), 0x93);
        // CB 93 037E
        gbc.setState(0x5000, 0xaa3, 0x46a0, 0xbe5d, 0x9fa3, 0x10ab, 0x0, 0x0);
        gbc.writeMem(0x5000, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0x5002);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0380
        gbc.setState(0x32fa, 0xcd74, 0x4db0, 0xb93f, 0xfbd0, 0x205c, 0x0, 0x1);
        gbc.writeMem(0x32fa, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcd74);
        EXPECT(gbc.pc(), 0x32fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0381
        gbc.setState(0xb0fb, 0x86a6, 0x5c10, 0xdd2b, 0xdd56, 0x3a02, 0x0, 0x1);
        gbc.writeMem(0xb0fb, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x86a6);
        EXPECT(gbc.pc(), 0xb0fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0fb), 0xcb);
        EXPECT(gbc.readMem(0xb0fc), 0x93);
        // CB 93 0382
        gbc.setState(0xd930, 0x6472, 0xec20, 0xa798, 0x684d, 0x8848, 0x0, 0x0);
        gbc.writeMem(0xd930, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x6472);
        EXPECT(gbc.pc(), 0xd932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd930), 0xcb);
        EXPECT(gbc.readMem(0xd931), 0x93);
        // CB 93 0383
        gbc.setState(0x2a6e, 0x968b, 0x50b0, 0x1936, 0x45d, 0xf142, 0x0, 0x1);
        gbc.writeMem(0x2a6e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0x2a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0384
        gbc.setState(0xe53d, 0x6997, 0x8e70, 0x627a, 0xe1b2, 0xd56b, 0x1, 0x0);
        gbc.writeMem(0xe53d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6997);
        EXPECT(gbc.pc(), 0xe53f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53d), 0xcb);
        EXPECT(gbc.readMem(0xe53e), 0x93);
        // CB 93 0385
        gbc.setState(0x8a8d, 0xa0e5, 0x7ad0, 0x9563, 0x823b, 0x378a, 0x1, 0x1);
        gbc.writeMem(0x8a8d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa0e5);
        EXPECT(gbc.pc(), 0x8a8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8d), 0xcb);
        EXPECT(gbc.readMem(0x8a8e), 0x93);
        // CB 93 0386
        gbc.setState(0x6578, 0xe938, 0x3040, 0xb07b, 0xa7be, 0xc11b, 0x0, 0x1);
        gbc.writeMem(0x6578, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe938);
        EXPECT(gbc.pc(), 0x657a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0387
        gbc.setState(0x79ed, 0x86e, 0x34a0, 0xf168, 0xe3a8, 0x8786, 0x0, 0x0);
        gbc.writeMem(0x79ed, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x86e);
        EXPECT(gbc.pc(), 0x79ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 0388
        gbc.setState(0xc654, 0xa3fc, 0xba80, 0xac6e, 0x75e4, 0x1cc, 0x1, 0x1);
        gbc.writeMem(0xc654, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0xc656);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc654), 0xcb);
        EXPECT(gbc.readMem(0xc655), 0x93);
        // CB 93 0389
        gbc.setState(0x9888, 0x71ba, 0x1d80, 0xa655, 0x5c47, 0xd06d, 0x1, 0x1);
        gbc.writeMem(0x9888, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x71ba);
        EXPECT(gbc.pc(), 0x988a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9888), 0xcb);
        EXPECT(gbc.readMem(0x9889), 0x93);
        // CB 93 038B
        gbc.setState(0x9efc, 0x946, 0x5740, 0x3d33, 0xb068, 0x1e7b, 0x0, 0x0);
        gbc.writeMem(0x9efc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x946);
        EXPECT(gbc.pc(), 0x9efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9efc), 0xcb);
        EXPECT(gbc.readMem(0x9efd), 0x93);
        // CB 93 038C
        gbc.setState(0xae66, 0x1297, 0x8c50, 0xafb6, 0xacda, 0x5acf, 0x0, 0x0);
        gbc.writeMem(0xae66, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1297);
        EXPECT(gbc.pc(), 0xae68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae66), 0xcb);
        EXPECT(gbc.readMem(0xae67), 0x93);
        // CB 93 038D
        gbc.setState(0x1f89, 0x8e58, 0xbf20, 0xd66f, 0x6633, 0xf909, 0x0, 0x0);
        gbc.writeMem(0x1f89, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x8e58);
        EXPECT(gbc.pc(), 0x1f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 038E
        gbc.setState(0x5f8b, 0x34ae, 0xd190, 0x97e, 0x4787, 0x74f0, 0x1, 0x0);
        gbc.writeMem(0x5f8b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x34ae);
        EXPECT(gbc.pc(), 0x5f8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 038F
        gbc.setState(0xa6ab, 0x76fd, 0xcc80, 0xc22b, 0x472, 0xabfb, 0x0, 0x1);
        gbc.writeMem(0xa6ab, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x76fd);
        EXPECT(gbc.pc(), 0xa6ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6ab), 0xcb);
        EXPECT(gbc.readMem(0xa6ac), 0x93);
        // CB 93 0390
        gbc.setState(0x760b, 0xb4f0, 0xf070, 0x9f33, 0x1f6b, 0x95d9, 0x0, 0x0);
        gbc.writeMem(0x760b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb4f0);
        EXPECT(gbc.pc(), 0x760d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0391
        gbc.setState(0xa2c0, 0xde5, 0x6d00, 0xeee, 0x187f, 0xab36, 0x1, 0x0);
        gbc.writeMem(0xa2c0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xde5);
        EXPECT(gbc.pc(), 0xa2c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2c0), 0xcb);
        EXPECT(gbc.readMem(0xa2c1), 0x93);
        // CB 93 0392
        gbc.setState(0x357b, 0x3b56, 0x6750, 0x83a, 0x2773, 0xdfc6, 0x1, 0x0);
        gbc.writeMem(0x357b, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3b56);
        EXPECT(gbc.pc(), 0x357d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0393
        gbc.setState(0x890a, 0x285f, 0xdf0, 0x56bf, 0xd473, 0xbb8b, 0x1, 0x1);
        gbc.writeMem(0x890a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x285f);
        EXPECT(gbc.pc(), 0x890c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890a), 0xcb);
        EXPECT(gbc.readMem(0x890b), 0x93);
        // CB 93 0394
        gbc.setState(0xb93f, 0xf42, 0xdd00, 0xf2d, 0xc955, 0x5a28, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf42);
        EXPECT(gbc.pc(), 0xb941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93f), 0xcb);
        EXPECT(gbc.readMem(0xb940), 0x93);
        // CB 93 0395
        gbc.setState(0xe635, 0xbe30, 0x5500, 0x88c7, 0xe906, 0xe57a, 0x0, 0x0);
        gbc.writeMem(0xe635, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xbe30);
        EXPECT(gbc.pc(), 0xe637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe635), 0xcb);
        EXPECT(gbc.readMem(0xe636), 0x93);
        // CB 93 0396
        gbc.setState(0x3a61, 0x365d, 0xdf90, 0xf7d8, 0xf220, 0x7c55, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x365d);
        EXPECT(gbc.pc(), 0x3a63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0397
        gbc.setState(0xd968, 0xeae, 0xd8d0, 0xb36b, 0xdc3d, 0xea7c, 0x1, 0x0);
        gbc.writeMem(0xd968, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xeae);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd968), 0xcb);
        EXPECT(gbc.readMem(0xd969), 0x93);
        // CB 93 0398
        gbc.setState(0x391e, 0x185c, 0x6390, 0x689a, 0x9938, 0x57c0, 0x0, 0x0);
        gbc.writeMem(0x391e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x185c);
        EXPECT(gbc.pc(), 0x3920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 0399
        gbc.setState(0xe68c, 0x4af4, 0x9620, 0x706f, 0x2dd4, 0x9b82, 0x1, 0x0);
        gbc.writeMem(0xe68c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4af4);
        EXPECT(gbc.pc(), 0xe68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe68c), 0xcb);
        EXPECT(gbc.readMem(0xe68d), 0x93);
        // CB 93 039A
        gbc.setState(0x59bc, 0x130e, 0x1720, 0xc5a5, 0x41b1, 0xc505, 0x1, 0x1);
        gbc.writeMem(0x59bc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x130e);
        EXPECT(gbc.pc(), 0x59be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 039B
        gbc.setState(0x2ea5, 0x1f6a, 0xf880, 0xa208, 0xf95d, 0xddb9, 0x1, 0x1);
        gbc.writeMem(0x2ea5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x1f6a);
        EXPECT(gbc.pc(), 0x2ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 039C
        gbc.setState(0xcc8e, 0x3623, 0x3c20, 0xbd7c, 0x932d, 0x828, 0x1, 0x1);
        gbc.writeMem(0xcc8e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3623);
        EXPECT(gbc.pc(), 0xcc90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc8e), 0xcb);
        EXPECT(gbc.readMem(0xcc8f), 0x93);
        // CB 93 039D
        gbc.setState(0xa4d6, 0xcbf7, 0xadf0, 0x38d, 0x9f25, 0xf97d, 0x0, 0x1);
        gbc.writeMem(0xa4d6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcbf7);
        EXPECT(gbc.pc(), 0xa4d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d6), 0xcb);
        EXPECT(gbc.readMem(0xa4d7), 0x93);
        // CB 93 039E
        gbc.setState(0xa5a0, 0x98b2, 0x4e50, 0xacf4, 0xc990, 0x9813, 0x0, 0x1);
        gbc.writeMem(0xa5a0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x98b2);
        EXPECT(gbc.pc(), 0xa5a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a0), 0xcb);
        EXPECT(gbc.readMem(0xa5a1), 0x93);
        // CB 93 039F
        gbc.setState(0x56fc, 0x1077, 0xbe60, 0x338, 0xaca6, 0xdd2c, 0x1, 0x1);
        gbc.writeMem(0x56fc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x1077);
        EXPECT(gbc.pc(), 0x56fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03A0
        gbc.setState(0x41c2, 0xffb8, 0x7240, 0x9c37, 0xfd1a, 0x2b01, 0x0, 0x0);
        gbc.writeMem(0x41c2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xffb8);
        EXPECT(gbc.pc(), 0x41c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03A1
        gbc.setState(0x2dd5, 0xf2c5, 0x6390, 0xed18, 0x1f0d, 0xdea6, 0x1, 0x0);
        gbc.writeMem(0x2dd5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf2c5);
        EXPECT(gbc.pc(), 0x2dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03A2
        gbc.setState(0xa478, 0x6ebc, 0x4550, 0x7817, 0x5a20, 0x97a, 0x0, 0x0);
        gbc.writeMem(0xa478, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6ebc);
        EXPECT(gbc.pc(), 0xa47a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa478), 0xcb);
        EXPECT(gbc.readMem(0xa479), 0x93);
        // CB 93 03A3
        gbc.setState(0xd45a, 0x7628, 0x390, 0x9636, 0x700a, 0x533b, 0x0, 0x1);
        gbc.writeMem(0xd45a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7628);
        EXPECT(gbc.pc(), 0xd45c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45a), 0xcb);
        EXPECT(gbc.readMem(0xd45b), 0x93);
        // CB 93 03A4
        gbc.setState(0x42e0, 0xa357, 0x6840, 0xb0f6, 0xe0e6, 0x4b07, 0x1, 0x0);
        gbc.writeMem(0x42e0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa357);
        EXPECT(gbc.pc(), 0x42e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03A5
        gbc.setState(0xd695, 0xc744, 0x8f20, 0x9eb9, 0x98ef, 0xb5f9, 0x1, 0x1);
        gbc.writeMem(0xd695, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xc744);
        EXPECT(gbc.pc(), 0xd697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd695), 0xcb);
        EXPECT(gbc.readMem(0xd696), 0x93);
        // CB 93 03A6
        gbc.setState(0xddc9, 0x9e5a, 0x6510, 0xdbe2, 0xd042, 0xd9b1, 0x1, 0x0);
        gbc.writeMem(0xddc9, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9e5a);
        EXPECT(gbc.pc(), 0xddcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc9), 0xcb);
        EXPECT(gbc.readMem(0xddca), 0x93);
        // CB 93 03A7
        gbc.setState(0x126e, 0x620c, 0xdba0, 0x448f, 0x6e46, 0xda0, 0x1, 0x1);
        gbc.writeMem(0x126e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x620c);
        EXPECT(gbc.pc(), 0x1270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03A8
        gbc.setState(0x41ad, 0xbd4, 0x7b50, 0x340f, 0xa730, 0x8ef, 0x1, 0x1);
        gbc.writeMem(0x41ad, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xbd4);
        EXPECT(gbc.pc(), 0x41af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03A9
        gbc.setState(0xa870, 0xeec7, 0xd30, 0xff5e, 0x1cdc, 0x1eb1, 0x1, 0x1);
        gbc.writeMem(0xa870, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xeec7);
        EXPECT(gbc.pc(), 0xa872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa870), 0xcb);
        EXPECT(gbc.readMem(0xa871), 0x93);
        // CB 93 03AA
        gbc.setState(0x51e6, 0x74d9, 0x9840, 0x6df7, 0x9e42, 0x438c, 0x1, 0x1);
        gbc.writeMem(0x51e6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x74d9);
        EXPECT(gbc.pc(), 0x51e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03AC
        gbc.setState(0x6ffc, 0x93d2, 0x80e0, 0x87df, 0x8e50, 0x3670, 0x1, 0x1);
        gbc.writeMem(0x6ffc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x93d2);
        EXPECT(gbc.pc(), 0x6ffe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03AD
        gbc.setState(0x949a, 0x426f, 0x12e0, 0x2162, 0x738d, 0xc302, 0x0, 0x0);
        gbc.writeMem(0x949a, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x426f);
        EXPECT(gbc.pc(), 0x949c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x949a), 0xcb);
        EXPECT(gbc.readMem(0x949b), 0x93);
        // CB 93 03AE
        gbc.setState(0x990f, 0x9724, 0xdd30, 0xb298, 0x5223, 0x78fe, 0x0, 0x1);
        gbc.writeMem(0x990f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9724);
        EXPECT(gbc.pc(), 0x9911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990f), 0xcb);
        EXPECT(gbc.readMem(0x9910), 0x93);
        // CB 93 03AF
        gbc.setState(0x89c1, 0x1887, 0xf3e0, 0xd6e, 0xcba5, 0xefe0, 0x1, 0x1);
        gbc.writeMem(0x89c1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1887);
        EXPECT(gbc.pc(), 0x89c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c1), 0xcb);
        EXPECT(gbc.readMem(0x89c2), 0x93);
        // CB 93 03B0
        gbc.setState(0x634, 0x6ff7, 0x88b0, 0x4bef, 0xa78f, 0x3a34, 0x0, 0x1);
        gbc.writeMem(0x634, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x6ff7);
        EXPECT(gbc.pc(), 0x636);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03B1
        gbc.setState(0xa141, 0x4ace, 0x5530, 0x9031, 0x2718, 0xb414, 0x1, 0x1);
        gbc.writeMem(0xa141, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4ace);
        EXPECT(gbc.pc(), 0xa143);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa141), 0xcb);
        EXPECT(gbc.readMem(0xa142), 0x93);
        // CB 93 03B2
        gbc.setState(0xc288, 0x3e03, 0x5680, 0xce7a, 0x1c48, 0x9a08, 0x0, 0x0);
        gbc.writeMem(0xc288, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3e03);
        EXPECT(gbc.pc(), 0xc28a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc288), 0xcb);
        EXPECT(gbc.readMem(0xc289), 0x93);
        // CB 93 03B3
        gbc.setState(0x9355, 0x27c, 0x5380, 0x6e28, 0xdac7, 0x7d9a, 0x1, 0x0);
        gbc.writeMem(0x9355, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x27c);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9355), 0xcb);
        EXPECT(gbc.readMem(0x9356), 0x93);
        // CB 93 03B4
        gbc.setState(0x87be, 0x218e, 0xd7a0, 0x22be, 0x277d, 0x7ec0, 0x1, 0x0);
        gbc.writeMem(0x87be, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x218e);
        EXPECT(gbc.pc(), 0x87c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87be), 0xcb);
        EXPECT(gbc.readMem(0x87bf), 0x93);
        // CB 93 03B5
        gbc.setState(0x5c3f, 0x3f1a, 0xb990, 0xed8a, 0xcc86, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0x5c3f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3f1a);
        EXPECT(gbc.pc(), 0x5c41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03B6
        gbc.setState(0x9fb6, 0x680f, 0x55a0, 0x280c, 0x1277, 0xda9b, 0x1, 0x0);
        gbc.writeMem(0x9fb6, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x680f);
        EXPECT(gbc.pc(), 0x9fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fb6), 0xcb);
        EXPECT(gbc.readMem(0x9fb7), 0x93);
        // CB 93 03B7
        gbc.setState(0xbc00, 0x2096, 0xf340, 0x967a, 0x5045, 0xe79, 0x0, 0x1);
        gbc.writeMem(0xbc00, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2096);
        EXPECT(gbc.pc(), 0xbc02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc00), 0xcb);
        EXPECT(gbc.readMem(0xbc01), 0x93);
        // CB 93 03B8
        gbc.setState(0xcc34, 0x8314, 0xdbb0, 0xbbe8, 0xcb58, 0xf49b, 0x0, 0x0);
        gbc.writeMem(0xcc34, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8314);
        EXPECT(gbc.pc(), 0xcc36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc34), 0xcb);
        EXPECT(gbc.readMem(0xcc35), 0x93);
        // CB 93 03B9
        gbc.setState(0x6501, 0xa31b, 0x4820, 0x6e31, 0xe01f, 0x1270, 0x1, 0x0);
        gbc.writeMem(0x6501, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa31b);
        EXPECT(gbc.pc(), 0x6503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03BA
        gbc.setState(0xdbc, 0xc25b, 0x6b10, 0x28a, 0x3bda, 0xe7e2, 0x1, 0x0);
        gbc.writeMem(0xdbc, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc25b);
        EXPECT(gbc.pc(), 0xdbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03BC
        gbc.setState(0x25ef, 0x46e8, 0x8c90, 0x5fc5, 0x6fae, 0x9ecc, 0x0, 0x1);
        gbc.writeMem(0x25ef, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x46e8);
        EXPECT(gbc.pc(), 0x25f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03BD
        gbc.setState(0xd416, 0x6cfe, 0x2de0, 0x41ce, 0x4ed7, 0x697b, 0x0, 0x0);
        gbc.writeMem(0xd416, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6cfe);
        EXPECT(gbc.pc(), 0xd418);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd416), 0xcb);
        EXPECT(gbc.readMem(0xd417), 0x93);
        // CB 93 03BE
        gbc.setState(0x27ee, 0xe87e, 0x1df0, 0x21e5, 0x5885, 0x108a, 0x0, 0x0);
        gbc.writeMem(0x27ee, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x27f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03BF
        gbc.setState(0xd928, 0xf0bc, 0xe4f0, 0xbb04, 0xd4af, 0x9121, 0x0, 0x1);
        gbc.writeMem(0xd928, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf0bc);
        EXPECT(gbc.pc(), 0xd92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd928), 0xcb);
        EXPECT(gbc.readMem(0xd929), 0x93);
        // CB 93 03C0
        gbc.setState(0x829f, 0x554b, 0x8910, 0x43ac, 0x83a8, 0x1d34, 0x0, 0x1);
        gbc.writeMem(0x829f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x554b);
        EXPECT(gbc.pc(), 0x82a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829f), 0xcb);
        EXPECT(gbc.readMem(0x82a0), 0x93);
        // CB 93 03C1
        gbc.setState(0xc596, 0xccd5, 0xa6e0, 0x3dfc, 0xaa6b, 0x2b3c, 0x0, 0x1);
        gbc.writeMem(0xc596, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xccd5);
        EXPECT(gbc.pc(), 0xc598);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc596), 0xcb);
        EXPECT(gbc.readMem(0xc597), 0x93);
        // CB 93 03C2
        gbc.setState(0x8742, 0x475f, 0x2dd0, 0xdabc, 0xf4f0, 0xad56, 0x1, 0x0);
        gbc.writeMem(0x8742, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x475f);
        EXPECT(gbc.pc(), 0x8744);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8742), 0xcb);
        EXPECT(gbc.readMem(0x8743), 0x93);
        // CB 93 03C3
        gbc.setState(0xbb49, 0x6ce1, 0x46c0, 0xeb26, 0xc0ce, 0x76c2, 0x0, 0x0);
        gbc.writeMem(0xbb49, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6ce1);
        EXPECT(gbc.pc(), 0xbb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb49), 0xcb);
        EXPECT(gbc.readMem(0xbb4a), 0x93);
        // CB 93 03C5
        gbc.setState(0xc650, 0xe256, 0x17d0, 0xce7f, 0xf024, 0xa0dc, 0x1, 0x0);
        gbc.writeMem(0xc650, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xe256);
        EXPECT(gbc.pc(), 0xc652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc650), 0xcb);
        EXPECT(gbc.readMem(0xc651), 0x93);
        // CB 93 03C6
        gbc.setState(0x2c71, 0x2185, 0x3520, 0x72db, 0xa8a2, 0x3828, 0x1, 0x0);
        gbc.writeMem(0x2c71, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2185);
        EXPECT(gbc.pc(), 0x2c73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03C7
        gbc.setState(0x2e00, 0x3fe6, 0xd5c0, 0x5847, 0x180, 0x4f86, 0x0, 0x1);
        gbc.writeMem(0x2e00, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x3fe6);
        EXPECT(gbc.pc(), 0x2e02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03C8
        gbc.setState(0x77e0, 0x8a5a, 0x2570, 0xb0e7, 0x8bc0, 0x5a48, 0x0, 0x1);
        gbc.writeMem(0x77e0, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8a5a);
        EXPECT(gbc.pc(), 0x77e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03C9
        gbc.setState(0xc5f3, 0x6f5f, 0xadf0, 0xdeb7, 0x19ba, 0x4675, 0x0, 0x1);
        gbc.writeMem(0xc5f3, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6f5f);
        EXPECT(gbc.pc(), 0xc5f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5f3), 0xcb);
        EXPECT(gbc.readMem(0xc5f4), 0x93);
        // CB 93 03CA
        gbc.setState(0x4405, 0xe679, 0xffa0, 0x8f57, 0x96d7, 0x9645, 0x1, 0x0);
        gbc.writeMem(0x4405, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xe679);
        EXPECT(gbc.pc(), 0x4407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03CB
        gbc.setState(0x3bba, 0x5e4d, 0xcd10, 0x5a8a, 0xc430, 0x52a0, 0x0, 0x1);
        gbc.writeMem(0x3bba, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5e4d);
        EXPECT(gbc.pc(), 0x3bbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03CC
        gbc.setState(0x2e30, 0x2f5, 0x28c0, 0x3ff5, 0x524b, 0x6633, 0x0, 0x1);
        gbc.writeMem(0x2e30, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x2f5);
        EXPECT(gbc.pc(), 0x2e32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03CD
        gbc.setState(0xec3c, 0xaae, 0x7e20, 0xbd2d, 0x58ec, 0xd13c, 0x1, 0x1);
        gbc.writeMem(0xec3c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xaae);
        EXPECT(gbc.pc(), 0xec3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec3c), 0xcb);
        EXPECT(gbc.readMem(0xec3d), 0x93);
        // CB 93 03CE
        gbc.setState(0xc64d, 0xaf27, 0x4e90, 0x1060, 0x5328, 0xd19d, 0x1, 0x0);
        gbc.writeMem(0xc64d, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaf27);
        EXPECT(gbc.pc(), 0xc64f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc64d), 0xcb);
        EXPECT(gbc.readMem(0xc64e), 0x93);
        // CB 93 03CF
        gbc.setState(0xbace, 0x6f7c, 0x6250, 0xc44, 0xe199, 0x5c02, 0x0, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x6f7c);
        EXPECT(gbc.pc(), 0xbad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbace), 0xcb);
        EXPECT(gbc.readMem(0xbacf), 0x93);
        // CB 93 03D0
        gbc.setState(0x3132, 0x2ba4, 0x6e40, 0x1ad7, 0xf5d, 0x5c5e, 0x0, 0x1);
        gbc.writeMem(0x3132, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2ba4);
        EXPECT(gbc.pc(), 0x3134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03D1
        gbc.setState(0x5426, 0x9c25, 0x29c0, 0x3adf, 0x6dc, 0xd681, 0x1, 0x1);
        gbc.writeMem(0x5426, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9c25);
        EXPECT(gbc.pc(), 0x5428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03D2
        gbc.setState(0x5d2, 0x9183, 0xbd80, 0xf54d, 0x3b5e, 0xbcc2, 0x0, 0x1);
        gbc.writeMem(0x5d2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9183);
        EXPECT(gbc.pc(), 0x5d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03D3
        gbc.setState(0xa7e1, 0xe2cb, 0x3610, 0x6e79, 0xbf7f, 0xb19b, 0x1, 0x1);
        gbc.writeMem(0xa7e1, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xe2cb);
        EXPECT(gbc.pc(), 0xa7e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e1), 0xcb);
        EXPECT(gbc.readMem(0xa7e2), 0x93);
        // CB 93 03D4
        gbc.setState(0xe06f, 0x4190, 0x57d0, 0x9805, 0x9417, 0x1909, 0x0, 0x1);
        gbc.writeMem(0xe06f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4190);
        EXPECT(gbc.pc(), 0xe071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06f), 0xcb);
        EXPECT(gbc.readMem(0xe070), 0x93);
        // CB 93 03D5
        gbc.setState(0xbfbd, 0xbb86, 0xba80, 0x6987, 0xddb6, 0x1e1c, 0x1, 0x1);
        gbc.writeMem(0xbfbd, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xbb86);
        EXPECT(gbc.pc(), 0xbfbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfbd), 0xcb);
        EXPECT(gbc.readMem(0xbfbe), 0x93);
        // CB 93 03D6
        gbc.setState(0x581c, 0xd61f, 0xfef0, 0xeafb, 0xf144, 0xec76, 0x0, 0x1);
        gbc.writeMem(0x581c, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd61f);
        EXPECT(gbc.pc(), 0x581e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03D7
        gbc.setState(0x4367, 0xddda, 0x2120, 0x7583, 0x95d3, 0x1939, 0x0, 0x1);
        gbc.writeMem(0x4367, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xddda);
        EXPECT(gbc.pc(), 0x4369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03D8
        gbc.setState(0x3b33, 0x346c, 0x3900, 0x3850, 0x6c04, 0x590b, 0x1, 0x0);
        gbc.writeMem(0x3b33, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x346c);
        EXPECT(gbc.pc(), 0x3b35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03D9
        gbc.setState(0x2e82, 0x5066, 0xc670, 0x5262, 0x231e, 0x9d75, 0x0, 0x1);
        gbc.writeMem(0x2e82, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5066);
        EXPECT(gbc.pc(), 0x2e84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03DA
        gbc.setState(0x2465, 0x58bb, 0x1d00, 0xac7e, 0xdba1, 0x29fe, 0x1, 0x1);
        gbc.writeMem(0x2465, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x58bb);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03DB
        gbc.setState(0x75f4, 0x156d, 0x22d0, 0xe8ac, 0x224d, 0xb17e, 0x1, 0x0);
        gbc.writeMem(0x75f4, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x156d);
        EXPECT(gbc.pc(), 0x75f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03DC
        gbc.setState(0x5c01, 0x3325, 0xf020, 0x7360, 0x9e6f, 0x30ab, 0x1, 0x0);
        gbc.writeMem(0x5c01, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3325);
        EXPECT(gbc.pc(), 0x5c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 93 03DD
        gbc.setState(0x8708, 0xa46f, 0x9ff0, 0x2848, 0xf353, 0x3798, 0x1, 0x1);
        gbc.writeMem(0x8708, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa46f);
        EXPECT(gbc.pc(), 0x870a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8708), 0xcb);
        EXPECT(gbc.readMem(0x8709), 0x93);
        // CB 93 03DE
        gbc.setState(0xb345, 0xcc8, 0x65e0, 0xa0d0, 0x42d, 0xe950, 0x0, 0x1);
        gbc.writeMem(0xb345, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xcc8);
        EXPECT(gbc.pc(), 0xb347);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb345), 0xcb);
        EXPECT(gbc.readMem(0xb346), 0x93);
        // CB 93 03DF
        gbc.setState(0xe945, 0x891d, 0xd1d0, 0xaee0, 0xbb05, 0xf9f, 0x1, 0x1);
        gbc.writeMem(0xe945, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x891d);
        EXPECT(gbc.pc(), 0xe947);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe945), 0xcb);
        EXPECT(gbc.readMem(0xe946), 0x93);
        // CB 93 03E0
        gbc.setState(0xcc4e, 0xf647, 0x3840, 0x936b, 0xe658, 0x3da0, 0x1, 0x1);
        gbc.writeMem(0xcc4e, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf647);
        EXPECT(gbc.pc(), 0xcc50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4e), 0xcb);
        EXPECT(gbc.readMem(0xcc4f), 0x93);
        // CB 93 03E1
        gbc.setState(0xe35f, 0x105f, 0x2b60, 0x48e8, 0xc3b2, 0x1d98, 0x0, 0x0);
        gbc.writeMem(0xe35f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x105f);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0x93);
        // CB 93 03E2
        gbc.setState(0x3f6f, 0x394b, 0xfd70, 0xac41, 0x1445, 0x6198, 0x1, 0x1);
        gbc.writeMem(0x3f6f, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x394b);
        EXPECT(gbc.pc(), 0x3f71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03E3
        gbc.setState(0x8990, 0xb3f2, 0x1ce0, 0x11b3, 0x94dc, 0x244, 0x1, 0x0);
        gbc.writeMem(0x8990, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb3f2);
        EXPECT(gbc.pc(), 0x8992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8990), 0xcb);
        EXPECT(gbc.readMem(0x8991), 0x93);
        // CB 93 03E4
        gbc.setState(0xc9a5, 0x5c88, 0xa0d0, 0x1c71, 0x5dac, 0xbcf3, 0x0, 0x1);
        gbc.writeMem(0xc9a5, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5c88);
        EXPECT(gbc.pc(), 0xc9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a5), 0xcb);
        EXPECT(gbc.readMem(0xc9a6), 0x93);
        // CB 93 03E5
        gbc.setState(0x8aca, 0xe8d1, 0x6f0, 0x4f6, 0x8d5, 0x9c86, 0x1, 0x1);
        gbc.writeMem(0x8aca, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe8d1);
        EXPECT(gbc.pc(), 0x8acc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aca), 0xcb);
        EXPECT(gbc.readMem(0x8acb), 0x93);
        // CB 93 03E6
        gbc.setState(0xe32, 0x6741, 0xc590, 0xe3f2, 0x7897, 0x3b52, 0x0, 0x0);
        gbc.writeMem(0xe32, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6741);
        EXPECT(gbc.pc(), 0xe34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 93 03E7
        gbc.setState(0xa4c2, 0x2607, 0x31c0, 0x9c1a, 0xea6f, 0x5cb6, 0x1, 0x0);
        gbc.writeMem(0xa4c2, { 0xcb, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2607);
        EXPECT(gbc.pc(), 0xa4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4c2), 0xcb);
        EXPECT(gbc.readMem(0xa4c3), 0x93);
    }
