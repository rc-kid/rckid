    TEST(gbcemu, opcode_01) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 01 0000
        gbc.setState(0xe5fe, 0x3246, 0x51f0, 0x64a2, 0xa5bd, 0x9570, 0x0, 0x0);
        gbc.writeMem(0xe5fe, { 0x1, 0xbb, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x3246);
        EXPECT(gbc.pc(), 0xe601);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5fe), 0x1);
        EXPECT(gbc.readMem(0xe5ff), 0xbb);
        EXPECT(gbc.readMem(0xe600), 0x2d);
        // 01 0001
        gbc.setState(0x9f57, 0x5679, 0x1970, 0x7640, 0x9244, 0xf2ca, 0x1, 0x1);
        gbc.writeMem(0x9f57, { 0x1, 0x97, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5679);
        EXPECT(gbc.pc(), 0x9f5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f57), 0x1);
        EXPECT(gbc.readMem(0x9f58), 0x97);
        EXPECT(gbc.readMem(0x9f59), 0x60);
        // 01 0002
        gbc.setState(0xaf27, 0x34b5, 0x40, 0x4072, 0x6472, 0xa9d, 0x0, 0x0);
        gbc.writeMem(0xaf27, { 0x1, 0x79, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x34b5);
        EXPECT(gbc.pc(), 0xaf2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf27), 0x1);
        EXPECT(gbc.readMem(0xaf28), 0x79);
        EXPECT(gbc.readMem(0xaf29), 0xe4);
        // 01 0003
        gbc.setState(0xba8a, 0x732e, 0x42e0, 0xc95c, 0x630e, 0x355, 0x1, 0x1);
        gbc.writeMem(0xba8a, { 0x1, 0x92, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x732e);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8a), 0x1);
        EXPECT(gbc.readMem(0xba8b), 0x92);
        EXPECT(gbc.readMem(0xba8c), 0xdc);
        // 01 0005
        gbc.setState(0x26b0, 0xae31, 0x3170, 0x2456, 0x9243, 0x9481, 0x1, 0x1);
        gbc.writeMem(0x26b0, { 0x1, 0x1e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xae31);
        EXPECT(gbc.pc(), 0x26b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0006
        gbc.setState(0xdd6f, 0x7135, 0xd6d0, 0x45d5, 0x936c, 0xf672, 0x0, 0x0);
        gbc.writeMem(0xdd6f, { 0x1, 0x99, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x7135);
        EXPECT(gbc.pc(), 0xdd72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd6f), 0x1);
        EXPECT(gbc.readMem(0xdd70), 0x99);
        EXPECT(gbc.readMem(0xdd71), 0x65);
        // 01 0007
        gbc.setState(0xa3e0, 0x2e32, 0x10c0, 0x46b6, 0x4916, 0x9daf, 0x0, 0x1);
        gbc.writeMem(0xa3e0, { 0x1, 0x40, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x2e32);
        EXPECT(gbc.pc(), 0xa3e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e0), 0x1);
        EXPECT(gbc.readMem(0xa3e1), 0x40);
        EXPECT(gbc.readMem(0xa3e2), 0x9a);
        // 01 0008
        gbc.setState(0xa3c0, 0xc225, 0x9390, 0xdc2f, 0xeba1, 0x8075, 0x1, 0x0);
        gbc.writeMem(0xa3c0, { 0x1, 0x7e, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xc225);
        EXPECT(gbc.pc(), 0xa3c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c0), 0x1);
        EXPECT(gbc.readMem(0xa3c1), 0x7e);
        EXPECT(gbc.readMem(0xa3c2), 0x91);
        // 01 000A
        gbc.setState(0x78be, 0x7f0f, 0x4dd0, 0x6b80, 0xcc3a, 0x1bcc, 0x1, 0x0);
        gbc.writeMem(0x78be, { 0x1, 0xb7, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7f0f);
        EXPECT(gbc.pc(), 0x78c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 000B
        gbc.setState(0x64d5, 0x78dc, 0x9640, 0x39c7, 0x83e9, 0x17f9, 0x1, 0x1);
        gbc.writeMem(0x64d5, { 0x1, 0xfc, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x78dc);
        EXPECT(gbc.pc(), 0x64d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 000C
        gbc.setState(0xd1d6, 0x1af8, 0xbe70, 0x4299, 0xf6d0, 0xf2b2, 0x1, 0x1);
        gbc.writeMem(0xd1d6, { 0x1, 0x7f, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1af8);
        EXPECT(gbc.pc(), 0xd1d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1d6), 0x1);
        EXPECT(gbc.readMem(0xd1d7), 0x7f);
        EXPECT(gbc.readMem(0xd1d8), 0x51);
        // 01 000D
        gbc.setState(0x5992, 0xc5b3, 0xb7c0, 0x8a27, 0xeac2, 0xd45d, 0x1, 0x1);
        gbc.writeMem(0x5992, { 0x1, 0x1b, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc5b3);
        EXPECT(gbc.pc(), 0x5995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 000E
        gbc.setState(0xc93c, 0x7089, 0xdd60, 0x27a9, 0x18ca, 0x91bd, 0x1, 0x0);
        gbc.writeMem(0xc93c, { 0x1, 0x4d, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7089);
        EXPECT(gbc.pc(), 0xc93f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc93c), 0x1);
        EXPECT(gbc.readMem(0xc93d), 0x4d);
        EXPECT(gbc.readMem(0xc93e), 0xa3);
        // 01 0010
        gbc.setState(0xe54b, 0x4722, 0xe810, 0x9e9b, 0x92f9, 0xc0e8, 0x1, 0x1);
        gbc.writeMem(0xe54b, { 0x1, 0xc, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4722);
        EXPECT(gbc.pc(), 0xe54e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe54b), 0x1);
        EXPECT(gbc.readMem(0xe54c), 0xc);
        EXPECT(gbc.readMem(0xe54d), 0xac);
        // 01 0011
        gbc.setState(0xaba7, 0x1f33, 0x83d0, 0x238b, 0x52e3, 0x9326, 0x1, 0x0);
        gbc.writeMem(0xaba7, { 0x1, 0xff, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1f33);
        EXPECT(gbc.pc(), 0xabaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaba7), 0x1);
        EXPECT(gbc.readMem(0xaba8), 0xff);
        EXPECT(gbc.readMem(0xaba9), 0xe4);
        // 01 0012
        gbc.setState(0x2211, 0x75b0, 0xe9f0, 0xe07e, 0x5f91, 0xe091, 0x0, 0x1);
        gbc.writeMem(0x2211, { 0x1, 0xc, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0x2214);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0013
        gbc.setState(0x7e14, 0x93be, 0x4510, 0x6f28, 0x7500, 0x89ed, 0x0, 0x0);
        gbc.writeMem(0x7e14, { 0x1, 0xa9, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x93be);
        EXPECT(gbc.pc(), 0x7e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0014
        gbc.setState(0x4f8, 0xec09, 0x46e0, 0xb054, 0xdb80, 0x2d8e, 0x0, 0x0);
        gbc.writeMem(0x4f8, { 0x1, 0x50, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xec09);
        EXPECT(gbc.pc(), 0x4fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0015
        gbc.setState(0x90e1, 0x8012, 0xf320, 0xac38, 0xc678, 0x6aef, 0x1, 0x1);
        gbc.writeMem(0x90e1, { 0x1, 0x15, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8012);
        EXPECT(gbc.pc(), 0x90e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90e1), 0x1);
        EXPECT(gbc.readMem(0x90e2), 0x15);
        EXPECT(gbc.readMem(0x90e3), 0x42);
        // 01 0016
        gbc.setState(0xb7ba, 0xfcbc, 0xffb0, 0x7d10, 0x56bb, 0xb902, 0x0, 0x0);
        gbc.writeMem(0xb7ba, { 0x1, 0x8c, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xfcbc);
        EXPECT(gbc.pc(), 0xb7bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ba), 0x1);
        EXPECT(gbc.readMem(0xb7bb), 0x8c);
        EXPECT(gbc.readMem(0xb7bc), 0xb9);
        // 01 0017
        gbc.setState(0xc928, 0xce7b, 0x6980, 0x81a0, 0x910b, 0x713d, 0x1, 0x0);
        gbc.writeMem(0xc928, { 0x1, 0xd5, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xce7b);
        EXPECT(gbc.pc(), 0xc92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc928), 0x1);
        EXPECT(gbc.readMem(0xc929), 0xd5);
        EXPECT(gbc.readMem(0xc92a), 0xab);
        // 01 0018
        gbc.setState(0x65e0, 0xdb47, 0xccb0, 0x276c, 0x8af, 0x8eb5, 0x0, 0x1);
        gbc.writeMem(0x65e0, { 0x1, 0x8f, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xdb47);
        EXPECT(gbc.pc(), 0x65e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0019
        gbc.setState(0xaa64, 0xdcfa, 0x9a80, 0x6195, 0xed63, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0xaa64, { 0x1, 0x10, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdcfa);
        EXPECT(gbc.pc(), 0xaa67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa64), 0x1);
        EXPECT(gbc.readMem(0xaa65), 0x10);
        EXPECT(gbc.readMem(0xaa66), 0x11);
        // 01 001A
        gbc.setState(0x3274, 0xb3c2, 0x25c0, 0x47a1, 0x43d3, 0x2f60, 0x0, 0x1);
        gbc.writeMem(0x3274, { 0x1, 0x53, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb3c2);
        EXPECT(gbc.pc(), 0x3277);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 001B
        gbc.setState(0x7b5f, 0x830d, 0xb050, 0xbad1, 0xbf2, 0xf341, 0x1, 0x1);
        gbc.writeMem(0x7b5f, { 0x1, 0x40, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x830d);
        EXPECT(gbc.pc(), 0x7b62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 001C
        gbc.setState(0xa21, 0x7e82, 0x90e0, 0xa79a, 0xfc2a, 0xd3c7, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0x1, 0xdb, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7e82);
        EXPECT(gbc.pc(), 0xa24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 001D
        gbc.setState(0x8b20, 0x7d1a, 0x2410, 0x233b, 0x8e73, 0x307b, 0x1, 0x1);
        gbc.writeMem(0x8b20, { 0x1, 0x7f, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7d1a);
        EXPECT(gbc.pc(), 0x8b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b20), 0x1);
        EXPECT(gbc.readMem(0x8b21), 0x7f);
        EXPECT(gbc.readMem(0x8b22), 0xcd);
        // 01 001E
        gbc.setState(0xabe4, 0x456c, 0x3740, 0x745e, 0xa61e, 0xa815, 0x0, 0x0);
        gbc.writeMem(0xabe4, { 0x1, 0xda, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x456c);
        EXPECT(gbc.pc(), 0xabe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe4), 0x1);
        EXPECT(gbc.readMem(0xabe5), 0xda);
        EXPECT(gbc.readMem(0xabe6), 0x0);
        // 01 001F
        gbc.setState(0x1aec, 0x91b5, 0x9000, 0xf4f7, 0x29f0, 0xea20, 0x1, 0x1);
        gbc.writeMem(0x1aec, { 0x1, 0x76, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x91b5);
        EXPECT(gbc.pc(), 0x1aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0021
        gbc.setState(0xabd7, 0x9f5e, 0x6140, 0x421b, 0x33ce, 0xfc0d, 0x0, 0x0);
        gbc.writeMem(0xabd7, { 0x1, 0xc6, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x9f5e);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd7), 0x1);
        EXPECT(gbc.readMem(0xabd8), 0xc6);
        EXPECT(gbc.readMem(0xabd9), 0x2b);
        // 01 0022
        gbc.setState(0xbe9b, 0xa771, 0x7790, 0xc7ab, 0xc570, 0x950b, 0x1, 0x1);
        gbc.writeMem(0xbe9b, { 0x1, 0x69, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa771);
        EXPECT(gbc.pc(), 0xbe9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe9b), 0x1);
        EXPECT(gbc.readMem(0xbe9c), 0x69);
        EXPECT(gbc.readMem(0xbe9d), 0x1a);
        // 01 0023
        gbc.setState(0x2fdf, 0xb803, 0xf3b0, 0xa43a, 0xcb0a, 0x5852, 0x1, 0x0);
        gbc.writeMem(0x2fdf, { 0x1, 0xb0, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb803);
        EXPECT(gbc.pc(), 0x2fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0024
        gbc.setState(0xb971, 0x995e, 0x7140, 0x93e6, 0x7153, 0xf1ad, 0x0, 0x1);
        gbc.writeMem(0xb971, { 0x1, 0xa9, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x995e);
        EXPECT(gbc.pc(), 0xb974);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb971), 0x1);
        EXPECT(gbc.readMem(0xb972), 0xa9);
        EXPECT(gbc.readMem(0xb973), 0x46);
        // 01 0025
        gbc.setState(0xe71d, 0x62a6, 0xd60, 0xdf6c, 0xe4e6, 0x4691, 0x1, 0x0);
        gbc.writeMem(0xe71d, { 0x1, 0x47, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x62a6);
        EXPECT(gbc.pc(), 0xe720);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe71d), 0x1);
        EXPECT(gbc.readMem(0xe71e), 0x47);
        EXPECT(gbc.readMem(0xe71f), 0xb2);
        // 01 0026
        gbc.setState(0x4515, 0x76bf, 0xd640, 0x6e27, 0xc40, 0x9cb8, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0x1, 0x2f, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x76bf);
        EXPECT(gbc.pc(), 0x4518);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0027
        gbc.setState(0xd990, 0x8952, 0xd400, 0xa335, 0xd607, 0x4429, 0x1, 0x1);
        gbc.writeMem(0xd990, { 0x1, 0x22, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x8952);
        EXPECT(gbc.pc(), 0xd993);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd990), 0x1);
        EXPECT(gbc.readMem(0xd991), 0x22);
        EXPECT(gbc.readMem(0xd992), 0x62);
        // 01 0028
        gbc.setState(0xbd91, 0xe653, 0x5d50, 0x7bf7, 0xc624, 0x2be7, 0x0, 0x1);
        gbc.writeMem(0xbd91, { 0x1, 0xa4, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe653);
        EXPECT(gbc.pc(), 0xbd94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd91), 0x1);
        EXPECT(gbc.readMem(0xbd92), 0xa4);
        EXPECT(gbc.readMem(0xbd93), 0x22);
        // 01 0029
        gbc.setState(0x2280, 0xb654, 0xc000, 0x48b0, 0x2f09, 0xf26a, 0x0, 0x1);
        gbc.writeMem(0x2280, { 0x1, 0x42, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb654);
        EXPECT(gbc.pc(), 0x2283);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 002A
        gbc.setState(0x522e, 0xeff5, 0x56c0, 0xf1b8, 0xaa0e, 0x1ef2, 0x0, 0x0);
        gbc.writeMem(0x522e, { 0x1, 0x34, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xeff5);
        EXPECT(gbc.pc(), 0x5231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 002B
        gbc.setState(0x25d8, 0x2f60, 0xf7d0, 0x1342, 0x4cd1, 0xf0ed, 0x1, 0x1);
        gbc.writeMem(0x25d8, { 0x1, 0xf9, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2f60);
        EXPECT(gbc.pc(), 0x25db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 002C
        gbc.setState(0xa4ea, 0x9c9, 0x3bf0, 0x44d3, 0xc56f, 0x9938, 0x1, 0x0);
        gbc.writeMem(0xa4ea, { 0x1, 0x39, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9c9);
        EXPECT(gbc.pc(), 0xa4ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4ea), 0x1);
        EXPECT(gbc.readMem(0xa4eb), 0x39);
        EXPECT(gbc.readMem(0xa4ec), 0xd6);
        // 01 002D
        gbc.setState(0x603b, 0x51d, 0x20c0, 0x69f5, 0x1923, 0x2c00, 0x1, 0x1);
        gbc.writeMem(0x603b, { 0x1, 0xd2, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x51d);
        EXPECT(gbc.pc(), 0x603e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 002E
        gbc.setState(0xa691, 0xe896, 0x58d0, 0x8c66, 0xa840, 0xf8ff, 0x0, 0x0);
        gbc.writeMem(0xa691, { 0x1, 0x2b, 0xd });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xe896);
        EXPECT(gbc.pc(), 0xa694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa691), 0x1);
        EXPECT(gbc.readMem(0xa692), 0x2b);
        EXPECT(gbc.readMem(0xa693), 0xd);
        // 01 002F
        gbc.setState(0xd54, 0x7f2, 0x55a0, 0xa4a6, 0xac94, 0x871, 0x1, 0x1);
        gbc.writeMem(0xd54, { 0x1, 0x6a, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7f2);
        EXPECT(gbc.pc(), 0xd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0030
        gbc.setState(0xb079, 0x797d, 0xcfe0, 0x8e64, 0x388e, 0xa305, 0x1, 0x1);
        gbc.writeMem(0xb079, { 0x1, 0x28, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x797d);
        EXPECT(gbc.pc(), 0xb07c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb079), 0x1);
        EXPECT(gbc.readMem(0xb07a), 0x28);
        EXPECT(gbc.readMem(0xb07b), 0x84);
        // 01 0032
        gbc.setState(0x7ac1, 0xcac6, 0xf610, 0xf830, 0x5305, 0xd929, 0x1, 0x1);
        gbc.writeMem(0x7ac1, { 0x1, 0x48, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcac6);
        EXPECT(gbc.pc(), 0x7ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0033
        gbc.setState(0xd45f, 0x522c, 0x1dd0, 0x84b8, 0x7fd9, 0x70f1, 0x1, 0x0);
        gbc.writeMem(0xd45f, { 0x1, 0x2e, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x522c);
        EXPECT(gbc.pc(), 0xd462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd45f), 0x1);
        EXPECT(gbc.readMem(0xd460), 0x2e);
        EXPECT(gbc.readMem(0xd461), 0x47);
        // 01 0035
        gbc.setState(0x446b, 0x5f11, 0x5d50, 0xb241, 0xde5d, 0xf4a2, 0x1, 0x1);
        gbc.writeMem(0x446b, { 0x1, 0xf, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x5f11);
        EXPECT(gbc.pc(), 0x446e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0036
        gbc.setState(0x369f, 0xe76a, 0x6ab0, 0x189f, 0x7090, 0x2fdb, 0x1, 0x0);
        gbc.writeMem(0x369f, { 0x1, 0x88, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe76a);
        EXPECT(gbc.pc(), 0x36a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0037
        gbc.setState(0x7093, 0xcdad, 0xf020, 0x577f, 0x3d0c, 0x894d, 0x0, 0x1);
        gbc.writeMem(0x7093, { 0x1, 0x8b, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xcdad);
        EXPECT(gbc.pc(), 0x7096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0038
        gbc.setState(0x6c6b, 0xa75a, 0xf790, 0x36d6, 0x541b, 0xbd21, 0x1, 0x1);
        gbc.writeMem(0x6c6b, { 0x1, 0xe5, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa75a);
        EXPECT(gbc.pc(), 0x6c6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0039
        gbc.setState(0x3ae5, 0x5756, 0x60e0, 0xe67d, 0x2625, 0x917b, 0x1, 0x0);
        gbc.writeMem(0x3ae5, { 0x1, 0x21, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x5756);
        EXPECT(gbc.pc(), 0x3ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 003A
        gbc.setState(0xc493, 0xa9b, 0xca30, 0xc2ab, 0x71cb, 0xf05c, 0x1, 0x0);
        gbc.writeMem(0xc493, { 0x1, 0x8e, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa9b);
        EXPECT(gbc.pc(), 0xc496);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc493), 0x1);
        EXPECT(gbc.readMem(0xc494), 0x8e);
        EXPECT(gbc.readMem(0xc495), 0xdf);
        // 01 003B
        gbc.setState(0x6e5c, 0xab1, 0xca80, 0x2cb8, 0x11e5, 0x8c33, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0x1, 0x7e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xab1);
        EXPECT(gbc.pc(), 0x6e5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 003C
        gbc.setState(0x879b, 0xb22e, 0x4d0, 0x4562, 0x7471, 0xd610, 0x0, 0x0);
        gbc.writeMem(0x879b, { 0x1, 0x5c, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xb22e);
        EXPECT(gbc.pc(), 0x879e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879b), 0x1);
        EXPECT(gbc.readMem(0x879c), 0x5c);
        EXPECT(gbc.readMem(0x879d), 0xb1);
        // 01 003D
        gbc.setState(0xbcbb, 0x1c6f, 0xc850, 0x1c31, 0x204e, 0xb5b0, 0x1, 0x0);
        gbc.writeMem(0xbcbb, { 0x1, 0xa2, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1c6f);
        EXPECT(gbc.pc(), 0xbcbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbb), 0x1);
        EXPECT(gbc.readMem(0xbcbc), 0xa2);
        EXPECT(gbc.readMem(0xbcbd), 0xe2);
        // 01 003E
        gbc.setState(0x8d13, 0x7d64, 0xaae0, 0x78cf, 0x283d, 0xc519, 0x0, 0x0);
        gbc.writeMem(0x8d13, { 0x1, 0x93, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0x8d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d13), 0x1);
        EXPECT(gbc.readMem(0x8d14), 0x93);
        EXPECT(gbc.readMem(0x8d15), 0xe2);
        // 01 003F
        gbc.setState(0x39cf, 0xe8ea, 0x6f60, 0xd339, 0xf00c, 0x4d19, 0x0, 0x0);
        gbc.writeMem(0x39cf, { 0x1, 0xb5, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe8ea);
        EXPECT(gbc.pc(), 0x39d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0040
        gbc.setState(0x5b27, 0xab68, 0xd0b0, 0x1154, 0x9c9f, 0xfc3a, 0x1, 0x0);
        gbc.writeMem(0x5b27, { 0x1, 0xa0, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xab68);
        EXPECT(gbc.pc(), 0x5b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0041
        gbc.setState(0xa7c8, 0x3541, 0xb1d0, 0x5b23, 0x6df5, 0xa5ae, 0x1, 0x1);
        gbc.writeMem(0xa7c8, { 0x1, 0xe2, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x3541);
        EXPECT(gbc.pc(), 0xa7cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7c8), 0x1);
        EXPECT(gbc.readMem(0xa7c9), 0xe2);
        EXPECT(gbc.readMem(0xa7ca), 0x46);
        // 01 0042
        gbc.setState(0x70b, 0x1115, 0xcf80, 0x82f1, 0x119d, 0x4b0e, 0x0, 0x0);
        gbc.writeMem(0x70b, { 0x1, 0x8b, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1115);
        EXPECT(gbc.pc(), 0x70e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0043
        gbc.setState(0xcd1e, 0xafa1, 0xcac0, 0xfcd5, 0xb005, 0xa320, 0x0, 0x0);
        gbc.writeMem(0xcd1e, { 0x1, 0x2d, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xafa1);
        EXPECT(gbc.pc(), 0xcd21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd1e), 0x1);
        EXPECT(gbc.readMem(0xcd1f), 0x2d);
        EXPECT(gbc.readMem(0xcd20), 0x53);
        // 01 0044
        gbc.setState(0x856e, 0xceb, 0x1f10, 0xa156, 0xecfb, 0x736c, 0x0, 0x1);
        gbc.writeMem(0x856e, { 0x1, 0x68, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xceb);
        EXPECT(gbc.pc(), 0x8571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856e), 0x1);
        EXPECT(gbc.readMem(0x856f), 0x68);
        EXPECT(gbc.readMem(0x8570), 0xac);
        // 01 0045
        gbc.setState(0xb72, 0x5ed2, 0x61c0, 0x588, 0xc69a, 0xab7, 0x1, 0x1);
        gbc.writeMem(0xb72, { 0x1, 0x83, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5ed2);
        EXPECT(gbc.pc(), 0xb75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0046
        gbc.setState(0x4811, 0x9646, 0xbc90, 0xb3ce, 0xe732, 0x3ac2, 0x0, 0x1);
        gbc.writeMem(0x4811, { 0x1, 0x37, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9646);
        EXPECT(gbc.pc(), 0x4814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0047
        gbc.setState(0x6c45, 0x38a9, 0x4e10, 0xb84b, 0x6c51, 0xbd5, 0x1, 0x1);
        gbc.writeMem(0x6c45, { 0x1, 0x1b, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x38a9);
        EXPECT(gbc.pc(), 0x6c48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0048
        gbc.setState(0x9fa4, 0x81d3, 0xcae0, 0x779d, 0xa8fe, 0x897b, 0x0, 0x1);
        gbc.writeMem(0x9fa4, { 0x1, 0x55, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x81d3);
        EXPECT(gbc.pc(), 0x9fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fa4), 0x1);
        EXPECT(gbc.readMem(0x9fa5), 0x55);
        EXPECT(gbc.readMem(0x9fa6), 0xff);
        // 01 0049
        gbc.setState(0x1380, 0x8079, 0xec30, 0x4a7a, 0xc892, 0xb3b2, 0x1, 0x0);
        gbc.writeMem(0x1380, { 0x1, 0x13, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x8079);
        EXPECT(gbc.pc(), 0x1383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 004A
        gbc.setState(0x8023, 0xcf26, 0xac70, 0xeadb, 0x52d6, 0x1dba, 0x1, 0x0);
        gbc.writeMem(0x8023, { 0x1, 0xfe, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcf26);
        EXPECT(gbc.pc(), 0x8026);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8023), 0x1);
        EXPECT(gbc.readMem(0x8024), 0xfe);
        EXPECT(gbc.readMem(0x8025), 0x67);
        // 01 004B
        gbc.setState(0x501e, 0x3f66, 0xf1d0, 0xc5d4, 0x17a0, 0xb274, 0x1, 0x1);
        gbc.writeMem(0x501e, { 0x1, 0xa3, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x3f66);
        EXPECT(gbc.pc(), 0x5021);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 004C
        gbc.setState(0x622, 0x83df, 0x6640, 0x7858, 0x6571, 0x9027, 0x0, 0x0);
        gbc.writeMem(0x622, { 0x1, 0xc0, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x83df);
        EXPECT(gbc.pc(), 0x625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 004D
        gbc.setState(0x270e, 0xf747, 0x4740, 0x402a, 0x4c20, 0x849d, 0x0, 0x0);
        gbc.writeMem(0x270e, { 0x1, 0xcd, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0x2711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 004E
        gbc.setState(0x4a64, 0xf3bc, 0xecb0, 0x54c2, 0xa934, 0x7aa7, 0x1, 0x1);
        gbc.writeMem(0x4a64, { 0x1, 0x29, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf3bc);
        EXPECT(gbc.pc(), 0x4a67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 004F
        gbc.setState(0x52ee, 0xcb59, 0x7c20, 0xbacc, 0x5a7, 0x22f1, 0x1, 0x0);
        gbc.writeMem(0x52ee, { 0x1, 0xf0, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcb59);
        EXPECT(gbc.pc(), 0x52f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0050
        gbc.setState(0x6e5b, 0xd1d7, 0xafc0, 0xe5ce, 0x6eed, 0x46d8, 0x0, 0x0);
        gbc.writeMem(0x6e5b, { 0x1, 0x2d, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xd1d7);
        EXPECT(gbc.pc(), 0x6e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0051
        gbc.setState(0x98da, 0x172b, 0x6a60, 0xd539, 0xb493, 0x93c1, 0x1, 0x0);
        gbc.writeMem(0x98da, { 0x1, 0xb9, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x172b);
        EXPECT(gbc.pc(), 0x98dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98da), 0x1);
        EXPECT(gbc.readMem(0x98db), 0xb9);
        EXPECT(gbc.readMem(0x98dc), 0x4a);
        // 01 0052
        gbc.setState(0x2b2b, 0xe678, 0xd3a0, 0x2e59, 0x933e, 0xf01c, 0x1, 0x1);
        gbc.writeMem(0x2b2b, { 0x1, 0x21, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe678);
        EXPECT(gbc.pc(), 0x2b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0053
        gbc.setState(0x359, 0xa6b5, 0x7f60, 0x5d9e, 0xf42b, 0x1f0d, 0x0, 0x0);
        gbc.writeMem(0x359, { 0x1, 0xdd, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa6b5);
        EXPECT(gbc.pc(), 0x35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0054
        gbc.setState(0x3477, 0x1af2, 0xd500, 0xf8f1, 0x9b41, 0xddee, 0x1, 0x1);
        gbc.writeMem(0x3477, { 0x1, 0x9f, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1af2);
        EXPECT(gbc.pc(), 0x347a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0055
        gbc.setState(0x48c8, 0x6abc, 0x8fd0, 0x9886, 0x7c70, 0x9a24, 0x1, 0x1);
        gbc.writeMem(0x48c8, { 0x1, 0xf8, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x6abc);
        EXPECT(gbc.pc(), 0x48cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0056
        gbc.setState(0x686f, 0x917e, 0x7fe0, 0x22eb, 0xc1c8, 0x5034, 0x0, 0x1);
        gbc.writeMem(0x686f, { 0x1, 0xf1, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x917e);
        EXPECT(gbc.pc(), 0x6872);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0057
        gbc.setState(0xed50, 0x5a5, 0x990, 0x5afd, 0xf122, 0xa6e5, 0x1, 0x1);
        gbc.writeMem(0xed50, { 0x1, 0x6c, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5a5);
        EXPECT(gbc.pc(), 0xed53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed50), 0x1);
        EXPECT(gbc.readMem(0xed51), 0x6c);
        EXPECT(gbc.readMem(0xed52), 0xee);
        // 01 0058
        gbc.setState(0xd9f0, 0x294c, 0x8660, 0x8669, 0x26d8, 0xbf7e, 0x0, 0x0);
        gbc.writeMem(0xd9f0, { 0x1, 0x61, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x294c);
        EXPECT(gbc.pc(), 0xd9f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9f0), 0x1);
        EXPECT(gbc.readMem(0xd9f1), 0x61);
        EXPECT(gbc.readMem(0xd9f2), 0xdd);
        // 01 0059
        gbc.setState(0x7f40, 0xf5fd, 0x20e0, 0x120c, 0x7594, 0xac86, 0x1, 0x1);
        gbc.writeMem(0x7f40, { 0x1, 0xf6, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf5fd);
        EXPECT(gbc.pc(), 0x7f43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 005A
        gbc.setState(0x828d, 0x71e, 0x17d0, 0xb033, 0x8380, 0x7ac6, 0x0, 0x1);
        gbc.writeMem(0x828d, { 0x1, 0x6a, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x71e);
        EXPECT(gbc.pc(), 0x8290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x828d), 0x1);
        EXPECT(gbc.readMem(0x828e), 0x6a);
        EXPECT(gbc.readMem(0x828f), 0x3e);
        // 01 005B
        gbc.setState(0xdf21, 0xf581, 0x6ef0, 0x2f2, 0xec3f, 0xd737, 0x1, 0x0);
        gbc.writeMem(0xdf21, { 0x1, 0x33, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf581);
        EXPECT(gbc.pc(), 0xdf24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf21), 0x1);
        EXPECT(gbc.readMem(0xdf22), 0x33);
        EXPECT(gbc.readMem(0xdf23), 0x1f);
        // 01 005C
        gbc.setState(0xd8df, 0xa61c, 0x5b0, 0x15b5, 0xb48d, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0xd8df, { 0x1, 0x50, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa61c);
        EXPECT(gbc.pc(), 0xd8e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8df), 0x1);
        EXPECT(gbc.readMem(0xd8e0), 0x50);
        EXPECT(gbc.readMem(0xd8e1), 0xe7);
        // 01 005D
        gbc.setState(0x31e6, 0xa904, 0xf10, 0x6edf, 0x3509, 0x81ca, 0x0, 0x1);
        gbc.writeMem(0x31e6, { 0x1, 0x50, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xa904);
        EXPECT(gbc.pc(), 0x31e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 005E
        gbc.setState(0x69d8, 0x5b7e, 0x55c0, 0x2d40, 0x3ee1, 0x6cc2, 0x1, 0x1);
        gbc.writeMem(0x69d8, { 0x1, 0x35, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5b7e);
        EXPECT(gbc.pc(), 0x69db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 005F
        gbc.setState(0x853a, 0x205, 0x70, 0xf577, 0x7bbd, 0x6771, 0x0, 0x1);
        gbc.writeMem(0x853a, { 0x1, 0x81, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x205);
        EXPECT(gbc.pc(), 0x853d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x853a), 0x1);
        EXPECT(gbc.readMem(0x853b), 0x81);
        EXPECT(gbc.readMem(0x853c), 0x1d);
        // 01 0060
        gbc.setState(0xb757, 0xaf54, 0x4800, 0x78bb, 0x42e2, 0x3ba2, 0x0, 0x1);
        gbc.writeMem(0xb757, { 0x1, 0x87, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xaf54);
        EXPECT(gbc.pc(), 0xb75a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb757), 0x1);
        EXPECT(gbc.readMem(0xb758), 0x87);
        EXPECT(gbc.readMem(0xb759), 0xb3);
        // 01 0061
        gbc.setState(0x837a, 0xdf6d, 0x5b40, 0x8403, 0x57c, 0x7158, 0x0, 0x1);
        gbc.writeMem(0x837a, { 0x1, 0x5b, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdf6d);
        EXPECT(gbc.pc(), 0x837d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837a), 0x1);
        EXPECT(gbc.readMem(0x837b), 0x5b);
        EXPECT(gbc.readMem(0x837c), 0x3d);
        // 01 0062
        gbc.setState(0x7cb1, 0x575, 0x2f10, 0x7f0d, 0x2041, 0x3298, 0x1, 0x0);
        gbc.writeMem(0x7cb1, { 0x1, 0xf, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x575);
        EXPECT(gbc.pc(), 0x7cb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0063
        gbc.setState(0x5ac2, 0xb7f4, 0x9750, 0x4122, 0xc1ab, 0x2091, 0x0, 0x1);
        gbc.writeMem(0x5ac2, { 0x1, 0x4, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb7f4);
        EXPECT(gbc.pc(), 0x5ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0064
        gbc.setState(0x2b84, 0xca1f, 0xb880, 0x210e, 0x925, 0x6d16, 0x0, 0x0);
        gbc.writeMem(0x2b84, { 0x1, 0x43, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xca1f);
        EXPECT(gbc.pc(), 0x2b87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0065
        gbc.setState(0x5915, 0x35f1, 0xe450, 0xd912, 0x3ab, 0x11c8, 0x0, 0x1);
        gbc.writeMem(0x5915, { 0x1, 0x3f, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x35f1);
        EXPECT(gbc.pc(), 0x5918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0066
        gbc.setState(0xc7da, 0xb567, 0x1e40, 0x4fb7, 0xf899, 0x236b, 0x1, 0x1);
        gbc.writeMem(0xc7da, { 0x1, 0x4, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb567);
        EXPECT(gbc.pc(), 0xc7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7da), 0x1);
        EXPECT(gbc.readMem(0xc7db), 0x4);
        EXPECT(gbc.readMem(0xc7dc), 0x1f);
        // 01 0067
        gbc.setState(0x7d67, 0xfed1, 0x91f0, 0x240e, 0x7290, 0x16b8, 0x1, 0x1);
        gbc.writeMem(0x7d67, { 0x1, 0xb, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xfed1);
        EXPECT(gbc.pc(), 0x7d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0068
        gbc.setState(0x754e, 0xc523, 0xe090, 0xacc6, 0xca7c, 0xfcc6, 0x1, 0x0);
        gbc.writeMem(0x754e, { 0x1, 0x96, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc523);
        EXPECT(gbc.pc(), 0x7551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0069
        gbc.setState(0x2da0, 0x3760, 0xde60, 0x29c3, 0x6e85, 0x543e, 0x1, 0x1);
        gbc.writeMem(0x2da0, { 0x1, 0xba, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3760);
        EXPECT(gbc.pc(), 0x2da3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 006A
        gbc.setState(0x2cc9, 0x61e8, 0xf600, 0xc477, 0xb61d, 0x8853, 0x1, 0x1);
        gbc.writeMem(0x2cc9, { 0x1, 0x2f, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x61e8);
        EXPECT(gbc.pc(), 0x2ccc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 006B
        gbc.setState(0x9843, 0x7db5, 0x7c40, 0x88dd, 0x9a6, 0xa02f, 0x1, 0x1);
        gbc.writeMem(0x9843, { 0x1, 0xf2, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7db5);
        EXPECT(gbc.pc(), 0x9846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9843), 0x1);
        EXPECT(gbc.readMem(0x9844), 0xf2);
        EXPECT(gbc.readMem(0x9845), 0xff);
        // 01 006C
        gbc.setState(0x5ef9, 0x9f85, 0x22e0, 0xcd86, 0x813e, 0x9022, 0x0, 0x1);
        gbc.writeMem(0x5ef9, { 0x1, 0x9c, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9f85);
        EXPECT(gbc.pc(), 0x5efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 006D
        gbc.setState(0x4e5a, 0x1a82, 0x1840, 0x6059, 0xc8f8, 0x36d8, 0x0, 0x1);
        gbc.writeMem(0x4e5a, { 0x1, 0x6d, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0x4e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 006E
        gbc.setState(0x13a6, 0x81e5, 0xb840, 0xe21e, 0xa9f9, 0x7bf4, 0x1, 0x1);
        gbc.writeMem(0x13a6, { 0x1, 0x36, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x81e5);
        EXPECT(gbc.pc(), 0x13a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 006F
        gbc.setState(0x63cc, 0x9917, 0xc4f0, 0x25ab, 0xc806, 0xb113, 0x0, 0x0);
        gbc.writeMem(0x63cc, { 0x1, 0x3d, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9917);
        EXPECT(gbc.pc(), 0x63cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0070
        gbc.setState(0x236, 0x4da8, 0x3d00, 0xc835, 0x4a13, 0xa920, 0x0, 0x1);
        gbc.writeMem(0x236, { 0x1, 0x65, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4da8);
        EXPECT(gbc.pc(), 0x239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0071
        gbc.setState(0x9ed8, 0x3d8a, 0x31e0, 0xf59f, 0xbb82, 0x197e, 0x0, 0x0);
        gbc.writeMem(0x9ed8, { 0x1, 0x2, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3d8a);
        EXPECT(gbc.pc(), 0x9edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ed8), 0x1);
        EXPECT(gbc.readMem(0x9ed9), 0x2);
        EXPECT(gbc.readMem(0x9eda), 0x1);
        // 01 0072
        gbc.setState(0x71aa, 0x7605, 0x420, 0x6bf7, 0xcaad, 0xf406, 0x1, 0x0);
        gbc.writeMem(0x71aa, { 0x1, 0x17, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7605);
        EXPECT(gbc.pc(), 0x71ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0073
        gbc.setState(0x83b8, 0xd03a, 0xf520, 0xd336, 0x961a, 0x4c73, 0x1, 0x1);
        gbc.writeMem(0x83b8, { 0x1, 0x28, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xd03a);
        EXPECT(gbc.pc(), 0x83bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b8), 0x1);
        EXPECT(gbc.readMem(0x83b9), 0x28);
        EXPECT(gbc.readMem(0x83ba), 0xa);
        // 01 0074
        gbc.setState(0xeff8, 0xefb5, 0x4e90, 0x90b2, 0x323, 0x771, 0x1, 0x1);
        gbc.writeMem(0xeff8, { 0x1, 0xf8, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xefb5);
        EXPECT(gbc.pc(), 0xeffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeff8), 0x1);
        EXPECT(gbc.readMem(0xeff9), 0xf8);
        EXPECT(gbc.readMem(0xeffa), 0xf3);
        // 01 0075
        gbc.setState(0xcb0e, 0xb58, 0x5fe0, 0xbdb1, 0x1652, 0x1157, 0x0, 0x0);
        gbc.writeMem(0xcb0e, { 0x1, 0xd, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xb58);
        EXPECT(gbc.pc(), 0xcb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb0e), 0x1);
        EXPECT(gbc.readMem(0xcb0f), 0xd);
        EXPECT(gbc.readMem(0xcb10), 0xdf);
        // 01 0076
        gbc.setState(0xc1fa, 0xa17, 0x2ba0, 0x797c, 0x2f46, 0x77a2, 0x1, 0x0);
        gbc.writeMem(0xc1fa, { 0x1, 0x4, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa17);
        EXPECT(gbc.pc(), 0xc1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1fa), 0x1);
        EXPECT(gbc.readMem(0xc1fb), 0x4);
        EXPECT(gbc.readMem(0xc1fc), 0x47);
        // 01 0077
        gbc.setState(0x6647, 0xeb81, 0x5210, 0xe42d, 0x236f, 0x895b, 0x1, 0x0);
        gbc.writeMem(0x6647, { 0x1, 0xd1, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xeb81);
        EXPECT(gbc.pc(), 0x664a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0078
        gbc.setState(0xd3d5, 0x8300, 0xb760, 0x3aff, 0xdbdd, 0x6798, 0x1, 0x0);
        gbc.writeMem(0xd3d5, { 0x1, 0x3f, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8300);
        EXPECT(gbc.pc(), 0xd3d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d5), 0x1);
        EXPECT(gbc.readMem(0xd3d6), 0x3f);
        EXPECT(gbc.readMem(0xd3d7), 0xfc);
        // 01 0079
        gbc.setState(0x6bbb, 0x9e28, 0x6f50, 0x6e4f, 0xd01b, 0xba24, 0x0, 0x1);
        gbc.writeMem(0x6bbb, { 0x1, 0x23, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9e28);
        EXPECT(gbc.pc(), 0x6bbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 007A
        gbc.setState(0xe297, 0x78ba, 0xa540, 0x36a7, 0xf7e, 0x396e, 0x1, 0x1);
        gbc.writeMem(0xe297, { 0x1, 0x17, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x78ba);
        EXPECT(gbc.pc(), 0xe29a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe297), 0x1);
        EXPECT(gbc.readMem(0xe298), 0x17);
        EXPECT(gbc.readMem(0xe299), 0x28);
        // 01 007B
        gbc.setState(0x24e, 0x7af9, 0xd640, 0xeda2, 0x2d83, 0x1efa, 0x1, 0x1);
        gbc.writeMem(0x24e, { 0x1, 0xb2, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7af9);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 007C
        gbc.setState(0x6e37, 0x22c, 0xff60, 0x4c1c, 0x2270, 0xa5cf, 0x0, 0x1);
        gbc.writeMem(0x6e37, { 0x1, 0x64, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x22c);
        EXPECT(gbc.pc(), 0x6e3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 007D
        gbc.setState(0x8cd0, 0x4548, 0x9d10, 0xc939, 0x3c30, 0xbd6e, 0x0, 0x1);
        gbc.writeMem(0x8cd0, { 0x1, 0xbe, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4548);
        EXPECT(gbc.pc(), 0x8cd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cd0), 0x1);
        EXPECT(gbc.readMem(0x8cd1), 0xbe);
        EXPECT(gbc.readMem(0x8cd2), 0x2e);
        // 01 007E
        gbc.setState(0x30a7, 0xb65b, 0x8950, 0x700c, 0xdb0a, 0xfd7a, 0x0, 0x0);
        gbc.writeMem(0x30a7, { 0x1, 0xed, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xb65b);
        EXPECT(gbc.pc(), 0x30aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 007F
        gbc.setState(0x8463, 0x9362, 0xb2b0, 0xbaa3, 0x37c7, 0x7610, 0x1, 0x0);
        gbc.writeMem(0x8463, { 0x1, 0x1, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9362);
        EXPECT(gbc.pc(), 0x8466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8463), 0x1);
        EXPECT(gbc.readMem(0x8464), 0x1);
        EXPECT(gbc.readMem(0x8465), 0xef);
        // 01 0080
        gbc.setState(0x7547, 0xd2c6, 0xab60, 0x1a42, 0xf35f, 0x3183, 0x0, 0x1);
        gbc.writeMem(0x7547, { 0x1, 0xfc, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd2c6);
        EXPECT(gbc.pc(), 0x754a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0081
        gbc.setState(0xc1f8, 0xb95a, 0xe590, 0x9f33, 0x318b, 0xbebf, 0x1, 0x0);
        gbc.writeMem(0xc1f8, { 0x1, 0x38, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb95a);
        EXPECT(gbc.pc(), 0xc1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f8), 0x1);
        EXPECT(gbc.readMem(0xc1f9), 0x38);
        EXPECT(gbc.readMem(0xc1fa), 0x8a);
        // 01 0082
        gbc.setState(0xd1cf, 0xd9a2, 0x7fe0, 0xda5, 0x28b4, 0xcdf2, 0x0, 0x1);
        gbc.writeMem(0xd1cf, { 0x1, 0x3d, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd9a2);
        EXPECT(gbc.pc(), 0xd1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1cf), 0x1);
        EXPECT(gbc.readMem(0xd1d0), 0x3d);
        EXPECT(gbc.readMem(0xd1d1), 0xf0);
        // 01 0083
        gbc.setState(0xab93, 0x1a9b, 0x30d0, 0x550f, 0x22cd, 0xb3df, 0x0, 0x0);
        gbc.writeMem(0xab93, { 0x1, 0xca, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1a9b);
        EXPECT(gbc.pc(), 0xab96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab93), 0x1);
        EXPECT(gbc.readMem(0xab94), 0xca);
        EXPECT(gbc.readMem(0xab95), 0x69);
        // 01 0084
        gbc.setState(0x5393, 0xc4a8, 0x8720, 0xe170, 0x791f, 0x4730, 0x0, 0x1);
        gbc.writeMem(0x5393, { 0x1, 0xa1, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc4a8);
        EXPECT(gbc.pc(), 0x5396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0085
        gbc.setState(0x5531, 0xc338, 0x20, 0x723f, 0xac42, 0x2d6f, 0x0, 0x0);
        gbc.writeMem(0x5531, { 0x1, 0x2, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc338);
        EXPECT(gbc.pc(), 0x5534);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0086
        gbc.setState(0x9c16, 0xc32b, 0x7060, 0xce6b, 0x16d3, 0xdbeb, 0x0, 0x1);
        gbc.writeMem(0x9c16, { 0x1, 0x81, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x9c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c16), 0x1);
        EXPECT(gbc.readMem(0x9c17), 0x81);
        EXPECT(gbc.readMem(0x9c18), 0x16);
        // 01 0087
        gbc.setState(0x4482, 0x3b82, 0x4a20, 0x652d, 0x51c5, 0x276c, 0x1, 0x0);
        gbc.writeMem(0x4482, { 0x1, 0x49, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x3b82);
        EXPECT(gbc.pc(), 0x4485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0088
        gbc.setState(0x6c7, 0x3937, 0x3d80, 0x6891, 0xfba7, 0x1e50, 0x0, 0x1);
        gbc.writeMem(0x6c7, { 0x1, 0x9, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3937);
        EXPECT(gbc.pc(), 0x6ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0089
        gbc.setState(0xcd4b, 0xb502, 0xaf90, 0x2d8d, 0x296, 0x5e69, 0x0, 0x1);
        gbc.writeMem(0xcd4b, { 0x1, 0x88, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb502);
        EXPECT(gbc.pc(), 0xcd4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd4b), 0x1);
        EXPECT(gbc.readMem(0xcd4c), 0x88);
        EXPECT(gbc.readMem(0xcd4d), 0x45);
        // 01 008A
        gbc.setState(0x4a9a, 0xbaef, 0x8980, 0x3b3b, 0x2c56, 0x2fb2, 0x1, 0x1);
        gbc.writeMem(0x4a9a, { 0x1, 0xe0, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xbaef);
        EXPECT(gbc.pc(), 0x4a9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 008B
        gbc.setState(0x8356, 0x6d38, 0xc7f0, 0xfaa5, 0xb21c, 0xc283, 0x0, 0x1);
        gbc.writeMem(0x8356, { 0x1, 0xab, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6d38);
        EXPECT(gbc.pc(), 0x8359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8356), 0x1);
        EXPECT(gbc.readMem(0x8357), 0xab);
        EXPECT(gbc.readMem(0x8358), 0xc4);
        // 01 008C
        gbc.setState(0x68c, 0x851e, 0xfe60, 0x8333, 0x22e4, 0x9f40, 0x0, 0x0);
        gbc.writeMem(0x68c, { 0x1, 0x15, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x851e);
        EXPECT(gbc.pc(), 0x68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 008D
        gbc.setState(0x148a, 0x1d0e, 0x2500, 0x536c, 0x2a57, 0xbcfa, 0x0, 0x0);
        gbc.writeMem(0x148a, { 0x1, 0xb2, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x1d0e);
        EXPECT(gbc.pc(), 0x148d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 008E
        gbc.setState(0xdc68, 0xa199, 0x3bf0, 0x63e7, 0x2f51, 0x42a0, 0x1, 0x0);
        gbc.writeMem(0xdc68, { 0x1, 0x40, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa199);
        EXPECT(gbc.pc(), 0xdc6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc68), 0x1);
        EXPECT(gbc.readMem(0xdc69), 0x40);
        EXPECT(gbc.readMem(0xdc6a), 0x18);
        // 01 008F
        gbc.setState(0x11bc, 0xcc6d, 0xc9c0, 0x676d, 0xe45a, 0x4b22, 0x1, 0x1);
        gbc.writeMem(0x11bc, { 0x1, 0x58, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xcc6d);
        EXPECT(gbc.pc(), 0x11bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0090
        gbc.setState(0x76d5, 0x364d, 0xf190, 0xca1e, 0xee4f, 0x82a3, 0x1, 0x1);
        gbc.writeMem(0x76d5, { 0x1, 0xb3, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x364d);
        EXPECT(gbc.pc(), 0x76d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0091
        gbc.setState(0x6b24, 0xfb4e, 0xf920, 0x2033, 0xf79b, 0x70c5, 0x1, 0x1);
        gbc.writeMem(0x6b24, { 0x1, 0x14, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfb4e);
        EXPECT(gbc.pc(), 0x6b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0092
        gbc.setState(0x9dbe, 0x6c5a, 0xb220, 0xcc8, 0xe0d3, 0x6eee, 0x1, 0x1);
        gbc.writeMem(0x9dbe, { 0x1, 0xe9, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6c5a);
        EXPECT(gbc.pc(), 0x9dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dbe), 0x1);
        EXPECT(gbc.readMem(0x9dbf), 0xe9);
        EXPECT(gbc.readMem(0x9dc0), 0xda);
        // 01 0093
        gbc.setState(0x2c87, 0x4b26, 0x2ce0, 0x43e5, 0xf1d0, 0x99ca, 0x0, 0x0);
        gbc.writeMem(0x2c87, { 0x1, 0x57, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4b26);
        EXPECT(gbc.pc(), 0x2c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0094
        gbc.setState(0x7e33, 0x3c5a, 0xc470, 0x8922, 0xc532, 0x974b, 0x0, 0x0);
        gbc.writeMem(0x7e33, { 0x1, 0x13, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3c5a);
        EXPECT(gbc.pc(), 0x7e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0095
        gbc.setState(0x1e1d, 0xe73a, 0xe7b0, 0x9f66, 0x7280, 0x8035, 0x0, 0x1);
        gbc.writeMem(0x1e1d, { 0x1, 0xfb, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe73a);
        EXPECT(gbc.pc(), 0x1e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0096
        gbc.setState(0x1e8e, 0x6ca, 0xd000, 0x5d28, 0xa809, 0xdb4e, 0x1, 0x0);
        gbc.writeMem(0x1e8e, { 0x1, 0xdf, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6ca);
        EXPECT(gbc.pc(), 0x1e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0097
        gbc.setState(0x1867, 0xf5e3, 0xf3c0, 0xc18f, 0x1b49, 0x6cbc, 0x1, 0x0);
        gbc.writeMem(0x1867, { 0x1, 0x47, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf5e3);
        EXPECT(gbc.pc(), 0x186a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0099
        gbc.setState(0xbc47, 0x8fc4, 0xe2a0, 0xd3cc, 0xae4f, 0x5134, 0x1, 0x1);
        gbc.writeMem(0xbc47, { 0x1, 0xdc, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8fc4);
        EXPECT(gbc.pc(), 0xbc4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc47), 0x1);
        EXPECT(gbc.readMem(0xbc48), 0xdc);
        EXPECT(gbc.readMem(0xbc49), 0xc1);
        // 01 009A
        gbc.setState(0x3d50, 0xcf03, 0xfaf0, 0x3837, 0x64d1, 0x3af0, 0x0, 0x0);
        gbc.writeMem(0x3d50, { 0x1, 0x37, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcf03);
        EXPECT(gbc.pc(), 0x3d53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 009B
        gbc.setState(0xa359, 0x196d, 0xa8c0, 0xecbc, 0x375, 0xf6a7, 0x0, 0x0);
        gbc.writeMem(0xa359, { 0x1, 0x73, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x196d);
        EXPECT(gbc.pc(), 0xa35c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa359), 0x1);
        EXPECT(gbc.readMem(0xa35a), 0x73);
        EXPECT(gbc.readMem(0xa35b), 0xd2);
        // 01 009C
        gbc.setState(0x7b8f, 0x2ff4, 0x1170, 0x1582, 0xdd9e, 0xf743, 0x0, 0x0);
        gbc.writeMem(0x7b8f, { 0x1, 0x67, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2ff4);
        EXPECT(gbc.pc(), 0x7b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 009D
        gbc.setState(0x2018, 0x4f2f, 0xfbb0, 0xc9fa, 0x92e, 0xc091, 0x0, 0x0);
        gbc.writeMem(0x2018, { 0x1, 0x7b, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x4f2f);
        EXPECT(gbc.pc(), 0x201b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 009E
        gbc.setState(0x2724, 0xb7c5, 0xc400, 0x726, 0xc575, 0xc86a, 0x0, 0x1);
        gbc.writeMem(0x2724, { 0x1, 0xda, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb7c5);
        EXPECT(gbc.pc(), 0x2727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 009F
        gbc.setState(0xa24a, 0x5984, 0x6ed0, 0xe973, 0xdd43, 0x9a75, 0x0, 0x1);
        gbc.writeMem(0xa24a, { 0x1, 0xb2, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x5984);
        EXPECT(gbc.pc(), 0xa24d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa24a), 0x1);
        EXPECT(gbc.readMem(0xa24b), 0xb2);
        EXPECT(gbc.readMem(0xa24c), 0x32);
        // 01 00A0
        gbc.setState(0x3158, 0xd1f8, 0x150, 0xb2e1, 0x6a82, 0x9b5a, 0x1, 0x1);
        gbc.writeMem(0x3158, { 0x1, 0xe6, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd1f8);
        EXPECT(gbc.pc(), 0x315b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00A1
        gbc.setState(0x347c, 0xce3a, 0xa0e0, 0xd055, 0xd7cf, 0x94fd, 0x1, 0x1);
        gbc.writeMem(0x347c, { 0x1, 0x2b, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xce3a);
        EXPECT(gbc.pc(), 0x347f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00A2
        gbc.setState(0x1bb5, 0xbf72, 0xcf0, 0x7f2e, 0x1d11, 0xa061, 0x0, 0x0);
        gbc.writeMem(0x1bb5, { 0x1, 0x25, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbf72);
        EXPECT(gbc.pc(), 0x1bb8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00A3
        gbc.setState(0xd537, 0xfaa2, 0x2270, 0xbd57, 0x90b2, 0x7182, 0x0, 0x1);
        gbc.writeMem(0xd537, { 0x1, 0xa6, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfaa2);
        EXPECT(gbc.pc(), 0xd53a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd537), 0x1);
        EXPECT(gbc.readMem(0xd538), 0xa6);
        EXPECT(gbc.readMem(0xd539), 0x65);
        // 01 00A4
        gbc.setState(0x2c57, 0x1836, 0x7dd0, 0x322d, 0x1eeb, 0x805a, 0x1, 0x0);
        gbc.writeMem(0x2c57, { 0x1, 0x3, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0x2c5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00A5
        gbc.setState(0x24bb, 0xa496, 0x2540, 0xd1f9, 0x2894, 0x8339, 0x1, 0x0);
        gbc.writeMem(0x24bb, { 0x1, 0x61, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa496);
        EXPECT(gbc.pc(), 0x24be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00A6
        gbc.setState(0x453d, 0xe844, 0x1930, 0xd0bb, 0x2ec0, 0x5c9a, 0x1, 0x0);
        gbc.writeMem(0x453d, { 0x1, 0x17, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xe844);
        EXPECT(gbc.pc(), 0x4540);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00A7
        gbc.setState(0x2831, 0x15c5, 0xae90, 0x21d0, 0x2220, 0x40a9, 0x1, 0x0);
        gbc.writeMem(0x2831, { 0x1, 0x2e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x15c5);
        EXPECT(gbc.pc(), 0x2834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00A8
        gbc.setState(0x1dc4, 0xa1f5, 0xd3f0, 0x9586, 0xd39, 0x7e39, 0x1, 0x1);
        gbc.writeMem(0x1dc4, { 0x1, 0x84, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa1f5);
        EXPECT(gbc.pc(), 0x1dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00A9
        gbc.setState(0x6b0f, 0xc130, 0x1cd0, 0xaf52, 0x5e1f, 0x6c0a, 0x0, 0x1);
        gbc.writeMem(0x6b0f, { 0x1, 0xea, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc130);
        EXPECT(gbc.pc(), 0x6b12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00AA
        gbc.setState(0x621, 0x535e, 0x7100, 0xab3f, 0x2463, 0x4ab5, 0x0, 0x0);
        gbc.writeMem(0x621, { 0x1, 0x74, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x535e);
        EXPECT(gbc.pc(), 0x624);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00AB
        gbc.setState(0x463f, 0x816d, 0xa850, 0xa027, 0xf264, 0xa8e, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0x1, 0x21, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x816d);
        EXPECT(gbc.pc(), 0x4642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00AC
        gbc.setState(0x6072, 0xfa43, 0x3e30, 0xab21, 0x15a4, 0xdd1f, 0x0, 0x1);
        gbc.writeMem(0x6072, { 0x1, 0xa6, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xfa43);
        EXPECT(gbc.pc(), 0x6075);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00AD
        gbc.setState(0x6db7, 0xcaa4, 0xbb30, 0xe09c, 0xda16, 0x6ab6, 0x0, 0x1);
        gbc.writeMem(0x6db7, { 0x1, 0x31, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcaa4);
        EXPECT(gbc.pc(), 0x6dba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00AE
        gbc.setState(0x9d4b, 0xab39, 0xe300, 0x833b, 0x827e, 0x9d98, 0x1, 0x1);
        gbc.writeMem(0x9d4b, { 0x1, 0x7, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xab39);
        EXPECT(gbc.pc(), 0x9d4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d4b), 0x1);
        EXPECT(gbc.readMem(0x9d4c), 0x7);
        EXPECT(gbc.readMem(0x9d4d), 0x79);
        // 01 00AF
        gbc.setState(0xca51, 0xb26f, 0x5a60, 0xa76e, 0x7e75, 0xfb47, 0x1, 0x1);
        gbc.writeMem(0xca51, { 0x1, 0x1e, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xb26f);
        EXPECT(gbc.pc(), 0xca54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca51), 0x1);
        EXPECT(gbc.readMem(0xca52), 0x1e);
        EXPECT(gbc.readMem(0xca53), 0xb9);
        // 01 00B0
        gbc.setState(0x992f, 0x3bd1, 0xd60, 0x6456, 0x244d, 0x4cbc, 0x0, 0x0);
        gbc.writeMem(0x992f, { 0x1, 0xba, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3bd1);
        EXPECT(gbc.pc(), 0x9932);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992f), 0x1);
        EXPECT(gbc.readMem(0x9930), 0xba);
        EXPECT(gbc.readMem(0x9931), 0xa2);
        // 01 00B1
        gbc.setState(0xdda3, 0x316e, 0xf30, 0xa45e, 0xe2ca, 0x326d, 0x0, 0x1);
        gbc.writeMem(0xdda3, { 0x1, 0xa5, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x316e);
        EXPECT(gbc.pc(), 0xdda6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdda3), 0x1);
        EXPECT(gbc.readMem(0xdda4), 0xa5);
        EXPECT(gbc.readMem(0xdda5), 0xd3);
        // 01 00B2
        gbc.setState(0x27d2, 0x5a42, 0xa930, 0xa91f, 0xe74a, 0x8239, 0x1, 0x0);
        gbc.writeMem(0x27d2, { 0x1, 0x4b, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5a42);
        EXPECT(gbc.pc(), 0x27d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00B4
        gbc.setState(0x728d, 0x6e90, 0xbc10, 0xd573, 0xdecf, 0x8558, 0x0, 0x1);
        gbc.writeMem(0x728d, { 0x1, 0xc9, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6e90);
        EXPECT(gbc.pc(), 0x7290);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00B5
        gbc.setState(0x8513, 0xcb05, 0xd620, 0x6fba, 0x6647, 0x8998, 0x1, 0x0);
        gbc.writeMem(0x8513, { 0x1, 0xf7, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xcb05);
        EXPECT(gbc.pc(), 0x8516);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8513), 0x1);
        EXPECT(gbc.readMem(0x8514), 0xf7);
        EXPECT(gbc.readMem(0x8515), 0x74);
        // 01 00B6
        gbc.setState(0x514d, 0xd911, 0x75b0, 0xab80, 0x72, 0x9ac7, 0x1, 0x1);
        gbc.writeMem(0x514d, { 0x1, 0xa, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd911);
        EXPECT(gbc.pc(), 0x5150);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00B7
        gbc.setState(0x43a4, 0x17f6, 0x4170, 0xfda4, 0xd609, 0xcc91, 0x1, 0x0);
        gbc.writeMem(0x43a4, { 0x1, 0x1a, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x17f6);
        EXPECT(gbc.pc(), 0x43a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00B8
        gbc.setState(0x5722, 0x8fea, 0xcb40, 0x7d5, 0x169a, 0x6daf, 0x1, 0x0);
        gbc.writeMem(0x5722, { 0x1, 0x79, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8fea);
        EXPECT(gbc.pc(), 0x5725);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00B9
        gbc.setState(0xae20, 0x3b0e, 0xbd90, 0xcf08, 0x66c8, 0x198b, 0x0, 0x0);
        gbc.writeMem(0xae20, { 0x1, 0x7a, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3b0e);
        EXPECT(gbc.pc(), 0xae23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae20), 0x1);
        EXPECT(gbc.readMem(0xae21), 0x7a);
        EXPECT(gbc.readMem(0xae22), 0xb6);
        // 01 00BA
        gbc.setState(0xd51c, 0x21ec, 0x7bd0, 0xaccf, 0x9c86, 0xd0cf, 0x0, 0x0);
        gbc.writeMem(0xd51c, { 0x1, 0xdf, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x21ec);
        EXPECT(gbc.pc(), 0xd51f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51c), 0x1);
        EXPECT(gbc.readMem(0xd51d), 0xdf);
        EXPECT(gbc.readMem(0xd51e), 0x1b);
        // 01 00BC
        gbc.setState(0x75ce, 0x54b, 0xa9e0, 0x957c, 0xb52f, 0x1fe0, 0x0, 0x0);
        gbc.writeMem(0x75ce, { 0x1, 0xe0, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x54b);
        EXPECT(gbc.pc(), 0x75d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00BD
        gbc.setState(0x4101, 0x6b0d, 0xe430, 0x5aa8, 0x7c2f, 0x82ea, 0x0, 0x1);
        gbc.writeMem(0x4101, { 0x1, 0xdb, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6b0d);
        EXPECT(gbc.pc(), 0x4104);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00BE
        gbc.setState(0xd2ea, 0x594b, 0x2a50, 0xb932, 0xf71f, 0xcafc, 0x0, 0x1);
        gbc.writeMem(0xd2ea, { 0x1, 0x8, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0xd2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ea), 0x1);
        EXPECT(gbc.readMem(0xd2eb), 0x8);
        EXPECT(gbc.readMem(0xd2ec), 0xdf);
        // 01 00BF
        gbc.setState(0x10b2, 0x6861, 0xa5b0, 0xae87, 0xafc8, 0xde1f, 0x0, 0x0);
        gbc.writeMem(0x10b2, { 0x1, 0x77, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x6861);
        EXPECT(gbc.pc(), 0x10b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00C0
        gbc.setState(0x48d3, 0xe2dd, 0xed40, 0x7c01, 0x964a, 0x8264, 0x0, 0x0);
        gbc.writeMem(0x48d3, { 0x1, 0x1f, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe2dd);
        EXPECT(gbc.pc(), 0x48d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00C1
        gbc.setState(0x18b7, 0x19b, 0xf670, 0x32fe, 0x5a56, 0x8714, 0x0, 0x1);
        gbc.writeMem(0x18b7, { 0x1, 0x51, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x19b);
        EXPECT(gbc.pc(), 0x18ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00C2
        gbc.setState(0xe2f, 0x39b8, 0xb310, 0xbcd8, 0x612c, 0x6473, 0x0, 0x0);
        gbc.writeMem(0xe2f, { 0x1, 0xbc, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x39b8);
        EXPECT(gbc.pc(), 0xe32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00C3
        gbc.setState(0x8dbb, 0xd6a1, 0x9050, 0xd382, 0x4203, 0x3fa6, 0x0, 0x1);
        gbc.writeMem(0x8dbb, { 0x1, 0x43, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd6a1);
        EXPECT(gbc.pc(), 0x8dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dbb), 0x1);
        EXPECT(gbc.readMem(0x8dbc), 0x43);
        EXPECT(gbc.readMem(0x8dbd), 0xd0);
        // 01 00C6
        gbc.setState(0xb25f, 0x7a4d, 0x8e70, 0x308e, 0x211, 0x7ab8, 0x1, 0x1);
        gbc.writeMem(0xb25f, { 0x1, 0xe3, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7a4d);
        EXPECT(gbc.pc(), 0xb262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb25f), 0x1);
        EXPECT(gbc.readMem(0xb260), 0xe3);
        EXPECT(gbc.readMem(0xb261), 0xb6);
        // 01 00C7
        gbc.setState(0xaadd, 0xd990, 0xeab0, 0xc495, 0xe0db, 0x3614, 0x0, 0x0);
        gbc.writeMem(0xaadd, { 0x1, 0xca, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd990);
        EXPECT(gbc.pc(), 0xaae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaadd), 0x1);
        EXPECT(gbc.readMem(0xaade), 0xca);
        EXPECT(gbc.readMem(0xaadf), 0xd7);
        // 01 00C8
        gbc.setState(0x1c9b, 0xa5f6, 0xae40, 0xfc5e, 0x84f5, 0xd161, 0x0, 0x1);
        gbc.writeMem(0x1c9b, { 0x1, 0x85, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa5f6);
        EXPECT(gbc.pc(), 0x1c9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00C9
        gbc.setState(0xd198, 0x6dbc, 0x910, 0xb1da, 0x55ae, 0xef62, 0x1, 0x0);
        gbc.writeMem(0xd198, { 0x1, 0x84, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6dbc);
        EXPECT(gbc.pc(), 0xd19b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd198), 0x1);
        EXPECT(gbc.readMem(0xd199), 0x84);
        EXPECT(gbc.readMem(0xd19a), 0x86);
        // 01 00CA
        gbc.setState(0x51c7, 0x942c, 0x2e10, 0x2ced, 0x1637, 0xcb92, 0x1, 0x1);
        gbc.writeMem(0x51c7, { 0x1, 0x5e, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x942c);
        EXPECT(gbc.pc(), 0x51ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00CB
        gbc.setState(0xbded, 0x2d1b, 0xeae0, 0x7bef, 0xb135, 0x930, 0x1, 0x0);
        gbc.writeMem(0xbded, { 0x1, 0xfc, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x2d1b);
        EXPECT(gbc.pc(), 0xbdf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbded), 0x1);
        EXPECT(gbc.readMem(0xbdee), 0xfc);
        EXPECT(gbc.readMem(0xbdef), 0x1b);
        // 01 00CC
        gbc.setState(0x7340, 0x719d, 0x2f50, 0xd563, 0xba05, 0xa7de, 0x0, 0x1);
        gbc.writeMem(0x7340, { 0x1, 0xed, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x719d);
        EXPECT(gbc.pc(), 0x7343);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00CD
        gbc.setState(0xa18, 0xaa2e, 0xd8f0, 0x11b0, 0x2c, 0x72d8, 0x1, 0x0);
        gbc.writeMem(0xa18, { 0x1, 0x9, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xaa2e);
        EXPECT(gbc.pc(), 0xa1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00CE
        gbc.setState(0x8fb1, 0x2ff5, 0x1ce0, 0xae8f, 0x994c, 0x2cd9, 0x1, 0x0);
        gbc.writeMem(0x8fb1, { 0x1, 0x4e, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x2ff5);
        EXPECT(gbc.pc(), 0x8fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fb1), 0x1);
        EXPECT(gbc.readMem(0x8fb2), 0x4e);
        EXPECT(gbc.readMem(0x8fb3), 0xe5);
        // 01 00CF
        gbc.setState(0x4530, 0xc43a, 0x24d0, 0x66d4, 0x5deb, 0x6f4e, 0x1, 0x0);
        gbc.writeMem(0x4530, { 0x1, 0x85, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc43a);
        EXPECT(gbc.pc(), 0x4533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00D0
        gbc.setState(0xcffc, 0x20a3, 0xebc0, 0x4705, 0x1def, 0x1f48, 0x0, 0x1);
        gbc.writeMem(0xcffc, { 0x1, 0xf9, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x20a3);
        EXPECT(gbc.pc(), 0xcfff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcffc), 0x1);
        EXPECT(gbc.readMem(0xcffd), 0xf9);
        EXPECT(gbc.readMem(0xcffe), 0x3b);
        // 01 00D1
        gbc.setState(0x8703, 0x7239, 0xe020, 0x2085, 0x2a56, 0xb6d0, 0x1, 0x1);
        gbc.writeMem(0x8703, { 0x1, 0xf2, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x7239);
        EXPECT(gbc.pc(), 0x8706);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8703), 0x1);
        EXPECT(gbc.readMem(0x8704), 0xf2);
        EXPECT(gbc.readMem(0x8705), 0x41);
        // 01 00D2
        gbc.setState(0x482a, 0xe7a0, 0xa780, 0x757c, 0x219b, 0xc51, 0x0, 0x0);
        gbc.writeMem(0x482a, { 0x1, 0xc4, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe7a0);
        EXPECT(gbc.pc(), 0x482d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00D3
        gbc.setState(0x6ecf, 0x4fe8, 0x4be0, 0xac3f, 0xa3c, 0x7880, 0x0, 0x1);
        gbc.writeMem(0x6ecf, { 0x1, 0x5d, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4fe8);
        EXPECT(gbc.pc(), 0x6ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00D4
        gbc.setState(0xa06, 0x26fb, 0xc200, 0x212c, 0x4682, 0x241d, 0x1, 0x0);
        gbc.writeMem(0xa06, { 0x1, 0x6f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x26fb);
        EXPECT(gbc.pc(), 0xa09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00D5
        gbc.setState(0x10e8, 0xd900, 0xdeb0, 0xb8d0, 0x48b7, 0x9ae8, 0x0, 0x1);
        gbc.writeMem(0x10e8, { 0x1, 0x68, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd900);
        EXPECT(gbc.pc(), 0x10eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00D6
        gbc.setState(0x5f1d, 0x9bf6, 0x3eb0, 0xfd98, 0xda6e, 0xde17, 0x0, 0x1);
        gbc.writeMem(0x5f1d, { 0x1, 0x9a, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9bf6);
        EXPECT(gbc.pc(), 0x5f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00D7
        gbc.setState(0x617f, 0x8aa0, 0xddc0, 0x18c7, 0x5d4a, 0x2aea, 0x1, 0x1);
        gbc.writeMem(0x617f, { 0x1, 0xf0, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x8aa0);
        EXPECT(gbc.pc(), 0x6182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00D8
        gbc.setState(0x53ff, 0x65a1, 0xc000, 0x12b1, 0xda16, 0xcd91, 0x1, 0x0);
        gbc.writeMem(0x53ff, { 0x1, 0x1b, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x65a1);
        EXPECT(gbc.pc(), 0x5402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00D9
        gbc.setState(0xda49, 0x342a, 0xd80, 0xe4cc, 0x2807, 0x520, 0x0, 0x1);
        gbc.writeMem(0xda49, { 0x1, 0xa3, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x342a);
        EXPECT(gbc.pc(), 0xda4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda49), 0x1);
        EXPECT(gbc.readMem(0xda4a), 0xa3);
        EXPECT(gbc.readMem(0xda4b), 0xa4);
        // 01 00DA
        gbc.setState(0xc905, 0xd055, 0x7750, 0x90, 0x395e, 0xb67b, 0x0, 0x0);
        gbc.writeMem(0xc905, { 0x1, 0xa0, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xd055);
        EXPECT(gbc.pc(), 0xc908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc905), 0x1);
        EXPECT(gbc.readMem(0xc906), 0xa0);
        EXPECT(gbc.readMem(0xc907), 0xcb);
        // 01 00DB
        gbc.setState(0x5e0b, 0xf2eb, 0x2630, 0x22d6, 0x86cd, 0xd07e, 0x0, 0x1);
        gbc.writeMem(0x5e0b, { 0x1, 0xf7, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf2eb);
        EXPECT(gbc.pc(), 0x5e0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00DC
        gbc.setState(0x5cfb, 0x6ba, 0x2eb0, 0xdf23, 0xca22, 0x83be, 0x0, 0x0);
        gbc.writeMem(0x5cfb, { 0x1, 0xa4, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x6ba);
        EXPECT(gbc.pc(), 0x5cfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00DD
        gbc.setState(0x7ea3, 0x8032, 0x9dd0, 0x22d4, 0x4bd6, 0x1ba9, 0x1, 0x0);
        gbc.writeMem(0x7ea3, { 0x1, 0x1c, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8032);
        EXPECT(gbc.pc(), 0x7ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00DE
        gbc.setState(0x1f7a, 0x5061, 0x4130, 0x34b3, 0x5ba1, 0xbe31, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0x1, 0xcd, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5061);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00DF
        gbc.setState(0x226b, 0x1626, 0x8c40, 0xc08b, 0x4c3a, 0x2791, 0x1, 0x0);
        gbc.writeMem(0x226b, { 0x1, 0xf9, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x1626);
        EXPECT(gbc.pc(), 0x226e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00E0
        gbc.setState(0x4011, 0xcd58, 0x4600, 0x18d9, 0x1534, 0x2d40, 0x1, 0x1);
        gbc.writeMem(0x4011, { 0x1, 0xf8, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xcd58);
        EXPECT(gbc.pc(), 0x4014);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00E1
        gbc.setState(0x6fef, 0x4609, 0xe4e0, 0x3b3e, 0x44e1, 0xed1b, 0x0, 0x1);
        gbc.writeMem(0x6fef, { 0x1, 0x89, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x4609);
        EXPECT(gbc.pc(), 0x6ff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00E2
        gbc.setState(0x708d, 0x979b, 0x6f40, 0x2ffc, 0x575b, 0xe22c, 0x0, 0x1);
        gbc.writeMem(0x708d, { 0x1, 0x1, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x979b);
        EXPECT(gbc.pc(), 0x7090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00E3
        gbc.setState(0xbf83, 0x4388, 0xdfa0, 0x5a36, 0x4883, 0x2158, 0x0, 0x1);
        gbc.writeMem(0xbf83, { 0x1, 0x52, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4388);
        EXPECT(gbc.pc(), 0xbf86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf83), 0x1);
        EXPECT(gbc.readMem(0xbf84), 0x52);
        EXPECT(gbc.readMem(0xbf85), 0x5);
        // 01 00E4
        gbc.setState(0xdf8f, 0xefa9, 0xc940, 0x4347, 0x985a, 0x4cba, 0x0, 0x1);
        gbc.writeMem(0xdf8f, { 0x1, 0x55, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xefa9);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8f), 0x1);
        EXPECT(gbc.readMem(0xdf90), 0x55);
        EXPECT(gbc.readMem(0xdf91), 0xce);
        // 01 00E5
        gbc.setState(0x247b, 0x9d2f, 0xa2f0, 0x89d3, 0x1057, 0x245c, 0x1, 0x0);
        gbc.writeMem(0x247b, { 0x1, 0x7d, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9d2f);
        EXPECT(gbc.pc(), 0x247e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00E6
        gbc.setState(0x43e9, 0xdd7d, 0x1000, 0xbe67, 0xd5bd, 0xbc1a, 0x1, 0x0);
        gbc.writeMem(0x43e9, { 0x1, 0xd8, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdd7d);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00E7
        gbc.setState(0xa3d5, 0x3b04, 0x2d60, 0x90a8, 0x7bc0, 0x5a6e, 0x0, 0x0);
        gbc.writeMem(0xa3d5, { 0x1, 0x4d, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0xa3d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d5), 0x1);
        EXPECT(gbc.readMem(0xa3d6), 0x4d);
        EXPECT(gbc.readMem(0xa3d7), 0xbd);
        // 01 00E8
        gbc.setState(0x72f6, 0x22b4, 0xd270, 0x886c, 0xd6d0, 0x97e4, 0x1, 0x0);
        gbc.writeMem(0x72f6, { 0x1, 0xd9, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x22b4);
        EXPECT(gbc.pc(), 0x72f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00E9
        gbc.setState(0x546a, 0xb24f, 0xea70, 0x47a, 0x3118, 0x8b8a, 0x0, 0x0);
        gbc.writeMem(0x546a, { 0x1, 0x34, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb24f);
        EXPECT(gbc.pc(), 0x546d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00EA
        gbc.setState(0xa0bb, 0x6cff, 0xf750, 0x56ba, 0xfa55, 0x9aea, 0x0, 0x1);
        gbc.writeMem(0xa0bb, { 0x1, 0x36, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6cff);
        EXPECT(gbc.pc(), 0xa0be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0bb), 0x1);
        EXPECT(gbc.readMem(0xa0bc), 0x36);
        EXPECT(gbc.readMem(0xa0bd), 0x95);
        // 01 00EB
        gbc.setState(0x70d1, 0x5019, 0x6e80, 0x5189, 0x4480, 0xa42e, 0x1, 0x1);
        gbc.writeMem(0x70d1, { 0x1, 0xda, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x5019);
        EXPECT(gbc.pc(), 0x70d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00EC
        gbc.setState(0xbb73, 0xb1b8, 0x3770, 0x8f7b, 0xc95, 0xdbfb, 0x0, 0x1);
        gbc.writeMem(0xbb73, { 0x1, 0x1d, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xb1b8);
        EXPECT(gbc.pc(), 0xbb76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb73), 0x1);
        EXPECT(gbc.readMem(0xbb74), 0x1d);
        EXPECT(gbc.readMem(0xbb75), 0xee);
        // 01 00ED
        gbc.setState(0x8928, 0x1d1f, 0x82a0, 0x4cfb, 0x58d4, 0xb242, 0x1, 0x1);
        gbc.writeMem(0x8928, { 0x1, 0xa2, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1d1f);
        EXPECT(gbc.pc(), 0x892b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8928), 0x1);
        EXPECT(gbc.readMem(0x8929), 0xa2);
        EXPECT(gbc.readMem(0x892a), 0x42);
        // 01 00EE
        gbc.setState(0x3cc, 0xa203, 0xe150, 0x497d, 0xddfc, 0xf4f5, 0x0, 0x0);
        gbc.writeMem(0x3cc, { 0x1, 0xb4, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xa203);
        EXPECT(gbc.pc(), 0x3cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00EF
        gbc.setState(0x2ff1, 0x1b12, 0x1330, 0xa67, 0xa41e, 0x6343, 0x1, 0x0);
        gbc.writeMem(0x2ff1, { 0x1, 0xef, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x1b12);
        EXPECT(gbc.pc(), 0x2ff4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00F0
        gbc.setState(0xd77e, 0xdba3, 0x24b0, 0xad68, 0x4099, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0xd77e, { 0x1, 0x13, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdba3);
        EXPECT(gbc.pc(), 0xd781);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77e), 0x1);
        EXPECT(gbc.readMem(0xd77f), 0x13);
        EXPECT(gbc.readMem(0xd780), 0x86);
        // 01 00F1
        gbc.setState(0x4f0c, 0x1280, 0x3c60, 0x26ef, 0x73ae, 0x95ca, 0x1, 0x1);
        gbc.writeMem(0x4f0c, { 0x1, 0xcd, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1280);
        EXPECT(gbc.pc(), 0x4f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00F2
        gbc.setState(0x97cb, 0x8434, 0xd8f0, 0xee70, 0x3e61, 0xb0a8, 0x0, 0x0);
        gbc.writeMem(0x97cb, { 0x1, 0x39, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8434);
        EXPECT(gbc.pc(), 0x97ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97cb), 0x1);
        EXPECT(gbc.readMem(0x97cc), 0x39);
        EXPECT(gbc.readMem(0x97cd), 0xd7);
        // 01 00F3
        gbc.setState(0x26d4, 0x8dc8, 0x1390, 0xeb1, 0x885e, 0xa30e, 0x1, 0x1);
        gbc.writeMem(0x26d4, { 0x1, 0xf0, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x8dc8);
        EXPECT(gbc.pc(), 0x26d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00F4
        gbc.setState(0x9424, 0x6e17, 0xc500, 0x7e85, 0x61e1, 0x78c4, 0x1, 0x1);
        gbc.writeMem(0x9424, { 0x1, 0x84, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6e17);
        EXPECT(gbc.pc(), 0x9427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9424), 0x1);
        EXPECT(gbc.readMem(0x9425), 0x84);
        EXPECT(gbc.readMem(0x9426), 0x1f);
        // 01 00F5
        gbc.setState(0x66ec, 0x6584, 0xa4a0, 0x508, 0x22fa, 0xa4e, 0x0, 0x0);
        gbc.writeMem(0x66ec, { 0x1, 0xb1, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x66ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00F6
        gbc.setState(0x5856, 0xf660, 0xa3d0, 0x4b9c, 0x840b, 0xe709, 0x1, 0x0);
        gbc.writeMem(0x5856, { 0x1, 0x7b, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf660);
        EXPECT(gbc.pc(), 0x5859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00F7
        gbc.setState(0x2ad1, 0x3e14, 0x4ad0, 0x17aa, 0xf991, 0x3869, 0x1, 0x0);
        gbc.writeMem(0x2ad1, { 0x1, 0x16, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3e14);
        EXPECT(gbc.pc(), 0x2ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00F8
        gbc.setState(0x94f6, 0xa6ab, 0xd1e0, 0x15f5, 0xffbc, 0x20d4, 0x0, 0x1);
        gbc.writeMem(0x94f6, { 0x1, 0xd1, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa6ab);
        EXPECT(gbc.pc(), 0x94f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f6), 0x1);
        EXPECT(gbc.readMem(0x94f7), 0xd1);
        EXPECT(gbc.readMem(0x94f8), 0x81);
        // 01 00F9
        gbc.setState(0x3884, 0xd185, 0xaec0, 0x5508, 0x7c2d, 0x5721, 0x1, 0x0);
        gbc.writeMem(0x3884, { 0x1, 0x10, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd185);
        EXPECT(gbc.pc(), 0x3887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00FA
        gbc.setState(0x379c, 0xe718, 0x2c80, 0x5d9f, 0xca71, 0x8be4, 0x1, 0x0);
        gbc.writeMem(0x379c, { 0x1, 0x4e, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe718);
        EXPECT(gbc.pc(), 0x379f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00FB
        gbc.setState(0x6187, 0xff4d, 0x9030, 0xbc1d, 0xc0ac, 0xc1a6, 0x1, 0x1);
        gbc.writeMem(0x6187, { 0x1, 0x3, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xff4d);
        EXPECT(gbc.pc(), 0x618a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 00FC
        gbc.setState(0x1391, 0x8219, 0x3060, 0x3101, 0x53cb, 0x5ba2, 0x0, 0x0);
        gbc.writeMem(0x1391, { 0x1, 0x7a, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8219);
        EXPECT(gbc.pc(), 0x1394);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 00FD
        gbc.setState(0x7537, 0x90e7, 0x4710, 0x37c0, 0x6c00, 0x7579, 0x1, 0x1);
        gbc.writeMem(0x7537, { 0x1, 0x53, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x90e7);
        EXPECT(gbc.pc(), 0x753a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 00FE
        gbc.setState(0x6ca, 0x5bde, 0x2240, 0x372f, 0x5721, 0x63c1, 0x1, 0x1);
        gbc.writeMem(0x6ca, { 0x1, 0x2, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x5bde);
        EXPECT(gbc.pc(), 0x6cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 00FF
        gbc.setState(0x1596, 0x3509, 0x4180, 0x3ec5, 0x840c, 0x1090, 0x0, 0x1);
        gbc.writeMem(0x1596, { 0x1, 0xf3, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3509);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0100
        gbc.setState(0x3db4, 0x69a3, 0xaf50, 0x4d95, 0xf40a, 0xb0a8, 0x0, 0x0);
        gbc.writeMem(0x3db4, { 0x1, 0x24, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x69a3);
        EXPECT(gbc.pc(), 0x3db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0101
        gbc.setState(0xc67a, 0x1b04, 0xed10, 0x9f56, 0xb54e, 0x2241, 0x1, 0x1);
        gbc.writeMem(0xc67a, { 0x1, 0xb0, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1b04);
        EXPECT(gbc.pc(), 0xc67d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc67a), 0x1);
        EXPECT(gbc.readMem(0xc67b), 0xb0);
        EXPECT(gbc.readMem(0xc67c), 0x65);
        // 01 0102
        gbc.setState(0xc858, 0x51a4, 0xe50, 0x467, 0xd1a2, 0xd148, 0x0, 0x0);
        gbc.writeMem(0xc858, { 0x1, 0x7f, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x51a4);
        EXPECT(gbc.pc(), 0xc85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc858), 0x1);
        EXPECT(gbc.readMem(0xc859), 0x7f);
        EXPECT(gbc.readMem(0xc85a), 0x79);
        // 01 0103
        gbc.setState(0x4b9d, 0xb2c2, 0x4ad0, 0x63fb, 0xe009, 0x5c2b, 0x0, 0x0);
        gbc.writeMem(0x4b9d, { 0x1, 0xe9, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb2c2);
        EXPECT(gbc.pc(), 0x4ba0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0104
        gbc.setState(0x8951, 0x2c41, 0x50e0, 0xceff, 0x499a, 0x2b21, 0x1, 0x1);
        gbc.writeMem(0x8951, { 0x1, 0x3f, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2c41);
        EXPECT(gbc.pc(), 0x8954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8951), 0x1);
        EXPECT(gbc.readMem(0x8952), 0x3f);
        EXPECT(gbc.readMem(0x8953), 0x3e);
        // 01 0105
        gbc.setState(0xb925, 0xddbd, 0xd510, 0xd371, 0x4984, 0x88d6, 0x1, 0x1);
        gbc.writeMem(0xb925, { 0x1, 0x22, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xddbd);
        EXPECT(gbc.pc(), 0xb928);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb925), 0x1);
        EXPECT(gbc.readMem(0xb926), 0x22);
        EXPECT(gbc.readMem(0xb927), 0xe);
        // 01 0106
        gbc.setState(0x2716, 0xc91d, 0x3c50, 0xa16, 0x3b28, 0x48d5, 0x0, 0x1);
        gbc.writeMem(0x2716, { 0x1, 0xf0, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc91d);
        EXPECT(gbc.pc(), 0x2719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0107
        gbc.setState(0x70ec, 0x6ba8, 0xbdc0, 0x1364, 0x59d9, 0x2fbf, 0x1, 0x1);
        gbc.writeMem(0x70ec, { 0x1, 0x3e, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6ba8);
        EXPECT(gbc.pc(), 0x70ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0108
        gbc.setState(0x8b1c, 0x9591, 0x4ef0, 0x3a7e, 0x5e63, 0xa61c, 0x0, 0x0);
        gbc.writeMem(0x8b1c, { 0x1, 0xd9, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9591);
        EXPECT(gbc.pc(), 0x8b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b1c), 0x1);
        EXPECT(gbc.readMem(0x8b1d), 0xd9);
        EXPECT(gbc.readMem(0x8b1e), 0x15);
        // 01 0109
        gbc.setState(0xa257, 0x89c7, 0x6af0, 0xea4e, 0x5068, 0x6203, 0x0, 0x0);
        gbc.writeMem(0xa257, { 0x1, 0xf9, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x89c7);
        EXPECT(gbc.pc(), 0xa25a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa257), 0x1);
        EXPECT(gbc.readMem(0xa258), 0xf9);
        EXPECT(gbc.readMem(0xa259), 0xde);
        // 01 010A
        gbc.setState(0x3263, 0x9a1e, 0xa10, 0x4f1b, 0x11ba, 0xd767, 0x1, 0x1);
        gbc.writeMem(0x3263, { 0x1, 0xa1, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9a1e);
        EXPECT(gbc.pc(), 0x3266);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 010B
        gbc.setState(0x20f2, 0x784e, 0x1df0, 0x2946, 0xeb43, 0x6f12, 0x0, 0x0);
        gbc.writeMem(0x20f2, { 0x1, 0x9b, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x784e);
        EXPECT(gbc.pc(), 0x20f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 010C
        gbc.setState(0xaec5, 0xfc31, 0x6650, 0xc44, 0x6b64, 0x92d8, 0x0, 0x1);
        gbc.writeMem(0xaec5, { 0x1, 0x59, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfc31);
        EXPECT(gbc.pc(), 0xaec8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaec5), 0x1);
        EXPECT(gbc.readMem(0xaec6), 0x59);
        EXPECT(gbc.readMem(0xaec7), 0xba);
        // 01 010D
        gbc.setState(0x4fce, 0xcbed, 0xa7b0, 0x4236, 0x6865, 0xefb1, 0x1, 0x0);
        gbc.writeMem(0x4fce, { 0x1, 0x54, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xcbed);
        EXPECT(gbc.pc(), 0x4fd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 010E
        gbc.setState(0x90b, 0x1def, 0x6000, 0x60db, 0xe22e, 0x7b50, 0x1, 0x1);
        gbc.writeMem(0x90b, { 0x1, 0xd7, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1def);
        EXPECT(gbc.pc(), 0x90e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 010F
        gbc.setState(0x1d76, 0x7381, 0x9560, 0x7e14, 0xe77, 0xb8d4, 0x1, 0x0);
        gbc.writeMem(0x1d76, { 0x1, 0xf1, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7381);
        EXPECT(gbc.pc(), 0x1d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0110
        gbc.setState(0x5106, 0xb85d, 0xb7d0, 0xb6c4, 0xaa0d, 0xc040, 0x1, 0x0);
        gbc.writeMem(0x5106, { 0x1, 0x68, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb85d);
        EXPECT(gbc.pc(), 0x5109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0111
        gbc.setState(0xeeb0, 0xb70b, 0xec00, 0x5c92, 0xd246, 0xcf25, 0x0, 0x0);
        gbc.writeMem(0xeeb0, { 0x1, 0x43, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb70b);
        EXPECT(gbc.pc(), 0xeeb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeb0), 0x1);
        EXPECT(gbc.readMem(0xeeb1), 0x43);
        EXPECT(gbc.readMem(0xeeb2), 0x99);
        // 01 0112
        gbc.setState(0xa7f4, 0xaf12, 0xa0, 0x793a, 0xe7a9, 0x4af4, 0x1, 0x1);
        gbc.writeMem(0xa7f4, { 0x1, 0x7f, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xaf12);
        EXPECT(gbc.pc(), 0xa7f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7f4), 0x1);
        EXPECT(gbc.readMem(0xa7f5), 0x7f);
        EXPECT(gbc.readMem(0xa7f6), 0xa0);
        // 01 0113
        gbc.setState(0xd741, 0x3213, 0x9ce0, 0x133e, 0x6135, 0x37da, 0x0, 0x0);
        gbc.writeMem(0xd741, { 0x1, 0x9d, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3213);
        EXPECT(gbc.pc(), 0xd744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd741), 0x1);
        EXPECT(gbc.readMem(0xd742), 0x9d);
        EXPECT(gbc.readMem(0xd743), 0x36);
        // 01 0114
        gbc.setState(0xc8cf, 0x583a, 0x7e90, 0xecd1, 0x50ef, 0xcb7e, 0x0, 0x1);
        gbc.writeMem(0xc8cf, { 0x1, 0x26, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x583a);
        EXPECT(gbc.pc(), 0xc8d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cf), 0x1);
        EXPECT(gbc.readMem(0xc8d0), 0x26);
        EXPECT(gbc.readMem(0xc8d1), 0xba);
        // 01 0115
        gbc.setState(0xa4a, 0xe4a2, 0x6560, 0x7cb3, 0xf82c, 0x99b0, 0x0, 0x0);
        gbc.writeMem(0xa4a, { 0x1, 0xe3, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe4a2);
        EXPECT(gbc.pc(), 0xa4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0116
        gbc.setState(0x32a3, 0x2e7, 0xcd90, 0x50aa, 0x50f7, 0xa5ce, 0x1, 0x0);
        gbc.writeMem(0x32a3, { 0x1, 0xd8, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2e7);
        EXPECT(gbc.pc(), 0x32a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0117
        gbc.setState(0x1a2e, 0xad03, 0xd250, 0xa533, 0xb014, 0xf20a, 0x0, 0x0);
        gbc.writeMem(0x1a2e, { 0x1, 0x8c, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xad03);
        EXPECT(gbc.pc(), 0x1a31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0118
        gbc.setState(0x1ae1, 0x4f35, 0x9300, 0x3d9c, 0x54e4, 0xddb1, 0x1, 0x1);
        gbc.writeMem(0x1ae1, { 0x1, 0x1a, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x4f35);
        EXPECT(gbc.pc(), 0x1ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0119
        gbc.setState(0x8e7c, 0x942a, 0x48b0, 0xf394, 0xeab4, 0xad7d, 0x1, 0x0);
        gbc.writeMem(0x8e7c, { 0x1, 0x68, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x942a);
        EXPECT(gbc.pc(), 0x8e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7c), 0x1);
        EXPECT(gbc.readMem(0x8e7d), 0x68);
        EXPECT(gbc.readMem(0x8e7e), 0x2f);
        // 01 011A
        gbc.setState(0x6c2a, 0x6133, 0xf3a0, 0x6117, 0x3c37, 0x4ee2, 0x1, 0x1);
        gbc.writeMem(0x6c2a, { 0x1, 0x13, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x6133);
        EXPECT(gbc.pc(), 0x6c2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 011B
        gbc.setState(0x4ff8, 0x957c, 0xef50, 0xad9c, 0x9379, 0xee71, 0x0, 0x0);
        gbc.writeMem(0x4ff8, { 0x1, 0x97, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x957c);
        EXPECT(gbc.pc(), 0x4ffb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 011C
        gbc.setState(0xdfb2, 0xdc40, 0x2ee0, 0x5fd8, 0x4d34, 0xd466, 0x1, 0x1);
        gbc.writeMem(0xdfb2, { 0x1, 0x31, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdc40);
        EXPECT(gbc.pc(), 0xdfb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb2), 0x1);
        EXPECT(gbc.readMem(0xdfb3), 0x31);
        EXPECT(gbc.readMem(0xdfb4), 0x98);
        // 01 011D
        gbc.setState(0x390d, 0x74ee, 0xfd50, 0x20cc, 0x36ed, 0xa09b, 0x0, 0x1);
        gbc.writeMem(0x390d, { 0x1, 0x7, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x74ee);
        EXPECT(gbc.pc(), 0x3910);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 011E
        gbc.setState(0x1861, 0xe64e, 0x5ad0, 0x41bf, 0x989a, 0x4d4d, 0x1, 0x1);
        gbc.writeMem(0x1861, { 0x1, 0xe9, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe64e);
        EXPECT(gbc.pc(), 0x1864);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 011F
        gbc.setState(0x7325, 0x6589, 0x7320, 0x51cf, 0x2f41, 0x11d4, 0x0, 0x0);
        gbc.writeMem(0x7325, { 0x1, 0xaf, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6589);
        EXPECT(gbc.pc(), 0x7328);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0120
        gbc.setState(0xa51b, 0x311d, 0x8ac0, 0xd361, 0xf49, 0x4c39, 0x0, 0x1);
        gbc.writeMem(0xa51b, { 0x1, 0xdf, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x311d);
        EXPECT(gbc.pc(), 0xa51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51b), 0x1);
        EXPECT(gbc.readMem(0xa51c), 0xdf);
        EXPECT(gbc.readMem(0xa51d), 0xd5);
        // 01 0121
        gbc.setState(0x656, 0x9f14, 0x4540, 0xbd45, 0x12f0, 0x2f3, 0x0, 0x0);
        gbc.writeMem(0x656, { 0x1, 0x4d, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9f14);
        EXPECT(gbc.pc(), 0x659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0122
        gbc.setState(0x8243, 0x5090, 0xcc40, 0x2d01, 0xf58d, 0xe764, 0x0, 0x1);
        gbc.writeMem(0x8243, { 0x1, 0x5b, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x5090);
        EXPECT(gbc.pc(), 0x8246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8243), 0x1);
        EXPECT(gbc.readMem(0x8244), 0x5b);
        EXPECT(gbc.readMem(0x8245), 0xa2);
        // 01 0123
        gbc.setState(0x1275, 0x5320, 0x64b0, 0x27e3, 0x8888, 0x1df7, 0x0, 0x1);
        gbc.writeMem(0x1275, { 0x1, 0x6b, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5320);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0124
        gbc.setState(0xbbeb, 0x154b, 0x28b0, 0xac7e, 0x7bbd, 0x4c81, 0x1, 0x0);
        gbc.writeMem(0xbbeb, { 0x1, 0x18, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x154b);
        EXPECT(gbc.pc(), 0xbbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbeb), 0x1);
        EXPECT(gbc.readMem(0xbbec), 0x18);
        EXPECT(gbc.readMem(0xbbed), 0xad);
        // 01 0126
        gbc.setState(0x40e9, 0x44d3, 0x6dc0, 0x2f3e, 0x948f, 0xc444, 0x1, 0x0);
        gbc.writeMem(0x40e9, { 0x1, 0xac, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x44d3);
        EXPECT(gbc.pc(), 0x40ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0127
        gbc.setState(0x9eb3, 0x6db6, 0x4f60, 0xc82f, 0xa33c, 0x1fd0, 0x1, 0x1);
        gbc.writeMem(0x9eb3, { 0x1, 0x7d, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6db6);
        EXPECT(gbc.pc(), 0x9eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eb3), 0x1);
        EXPECT(gbc.readMem(0x9eb4), 0x7d);
        EXPECT(gbc.readMem(0x9eb5), 0x7e);
        // 01 0128
        gbc.setState(0xc427, 0x7ca7, 0xec80, 0x403a, 0x72a9, 0x64db, 0x1, 0x1);
        gbc.writeMem(0xc427, { 0x1, 0xec, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7ca7);
        EXPECT(gbc.pc(), 0xc42a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc427), 0x1);
        EXPECT(gbc.readMem(0xc428), 0xec);
        EXPECT(gbc.readMem(0xc429), 0x1b);
        // 01 0129
        gbc.setState(0xdb78, 0x565d, 0xe980, 0x886c, 0x98e8, 0x9a62, 0x0, 0x0);
        gbc.writeMem(0xdb78, { 0x1, 0x85, 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x565d);
        EXPECT(gbc.pc(), 0xdb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb78), 0x1);
        EXPECT(gbc.readMem(0xdb79), 0x85);
        EXPECT(gbc.readMem(0xdb7a), 0xa5);
        // 01 012A
        gbc.setState(0x9aff, 0xccbb, 0x1300, 0x5ff6, 0x7a78, 0xebf6, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0x1, 0x79, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xccbb);
        EXPECT(gbc.pc(), 0x9b02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aff), 0x1);
        EXPECT(gbc.readMem(0x9b00), 0x79);
        EXPECT(gbc.readMem(0x9b01), 0xbe);
        // 01 012B
        gbc.setState(0x5165, 0x679f, 0x5a10, 0x8da1, 0xab30, 0x62f6, 0x1, 0x0);
        gbc.writeMem(0x5165, { 0x1, 0xd8, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x679f);
        EXPECT(gbc.pc(), 0x5168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 012C
        gbc.setState(0xbee6, 0xb779, 0x82d0, 0xab4, 0xb846, 0x2c8a, 0x0, 0x1);
        gbc.writeMem(0xbee6, { 0x1, 0x58, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0xbee9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbee6), 0x1);
        EXPECT(gbc.readMem(0xbee7), 0x58);
        EXPECT(gbc.readMem(0xbee8), 0x35);
        // 01 012E
        gbc.setState(0xa9e9, 0x3a37, 0xfff0, 0x2630, 0x951d, 0x3db6, 0x0, 0x0);
        gbc.writeMem(0xa9e9, { 0x1, 0x56, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3a37);
        EXPECT(gbc.pc(), 0xa9ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e9), 0x1);
        EXPECT(gbc.readMem(0xa9ea), 0x56);
        EXPECT(gbc.readMem(0xa9eb), 0xd1);
        // 01 012F
        gbc.setState(0x8393, 0xd56a, 0x55f0, 0x4095, 0xba88, 0xbb06, 0x1, 0x0);
        gbc.writeMem(0x8393, { 0x1, 0x7e, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd56a);
        EXPECT(gbc.pc(), 0x8396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8393), 0x1);
        EXPECT(gbc.readMem(0x8394), 0x7e);
        EXPECT(gbc.readMem(0x8395), 0x4e);
        // 01 0130
        gbc.setState(0x16b6, 0x1b48, 0xa370, 0xdb58, 0xa7df, 0x74d7, 0x0, 0x1);
        gbc.writeMem(0x16b6, { 0x1, 0xe5, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1b48);
        EXPECT(gbc.pc(), 0x16b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0131
        gbc.setState(0x5db5, 0x19a7, 0xd30, 0xafb7, 0xd2c4, 0x3e1d, 0x0, 0x0);
        gbc.writeMem(0x5db5, { 0x1, 0x1e, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x19a7);
        EXPECT(gbc.pc(), 0x5db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0132
        gbc.setState(0x1143, 0x1339, 0x1640, 0x7edf, 0xfcd6, 0x682b, 0x0, 0x1);
        gbc.writeMem(0x1143, { 0x1, 0x3d, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0x1146);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0133
        gbc.setState(0xb17b, 0x24d9, 0x24b0, 0x4167, 0x3c49, 0x29a1, 0x1, 0x0);
        gbc.writeMem(0xb17b, { 0x1, 0xc5, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x24d9);
        EXPECT(gbc.pc(), 0xb17e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17b), 0x1);
        EXPECT(gbc.readMem(0xb17c), 0xc5);
        EXPECT(gbc.readMem(0xb17d), 0x7a);
        // 01 0135
        gbc.setState(0x651c, 0xfcd2, 0x3f80, 0xb618, 0x6227, 0xa7fc, 0x1, 0x0);
        gbc.writeMem(0x651c, { 0x1, 0x64, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xfcd2);
        EXPECT(gbc.pc(), 0x651f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0136
        gbc.setState(0xafdb, 0x43ae, 0x7e20, 0x5cca, 0xab48, 0x87a2, 0x1, 0x1);
        gbc.writeMem(0xafdb, { 0x1, 0xd2, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x43ae);
        EXPECT(gbc.pc(), 0xafde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafdb), 0x1);
        EXPECT(gbc.readMem(0xafdc), 0xd2);
        EXPECT(gbc.readMem(0xafdd), 0xd3);
        // 01 0137
        gbc.setState(0xb919, 0x3fcb, 0xd2c0, 0x7499, 0x2df, 0x3b9a, 0x0, 0x1);
        gbc.writeMem(0xb919, { 0x1, 0x7a, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3fcb);
        EXPECT(gbc.pc(), 0xb91c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb919), 0x1);
        EXPECT(gbc.readMem(0xb91a), 0x7a);
        EXPECT(gbc.readMem(0xb91b), 0xc3);
        // 01 0138
        gbc.setState(0x2766, 0x1ded, 0xfae0, 0x7959, 0x644e, 0x1469, 0x0, 0x0);
        gbc.writeMem(0x2766, { 0x1, 0x2, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1ded);
        EXPECT(gbc.pc(), 0x2769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0139
        gbc.setState(0xb0b1, 0x7e57, 0xc440, 0x4d5, 0x33e2, 0xdb59, 0x1, 0x1);
        gbc.writeMem(0xb0b1, { 0x1, 0xb2, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7e57);
        EXPECT(gbc.pc(), 0xb0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0b1), 0x1);
        EXPECT(gbc.readMem(0xb0b2), 0xb2);
        EXPECT(gbc.readMem(0xb0b3), 0xd2);
        // 01 013A
        gbc.setState(0xe9b2, 0x7ed2, 0x1570, 0x67ee, 0xc756, 0x3711, 0x0, 0x1);
        gbc.writeMem(0xe9b2, { 0x1, 0x23, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7ed2);
        EXPECT(gbc.pc(), 0xe9b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b2), 0x1);
        EXPECT(gbc.readMem(0xe9b3), 0x23);
        EXPECT(gbc.readMem(0xe9b4), 0xe4);
        // 01 013B
        gbc.setState(0x2b26, 0xc6a8, 0xbde0, 0x1ec5, 0xd044, 0x3556, 0x0, 0x0);
        gbc.writeMem(0x2b26, { 0x1, 0x3c, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xc6a8);
        EXPECT(gbc.pc(), 0x2b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 013C
        gbc.setState(0x5427, 0x7a94, 0x26a0, 0x432e, 0x5b70, 0xf986, 0x1, 0x0);
        gbc.writeMem(0x5427, { 0x1, 0xea, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7a94);
        EXPECT(gbc.pc(), 0x542a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 013D
        gbc.setState(0x8299, 0x2254, 0x4ec0, 0x9123, 0xfbbc, 0x8362, 0x1, 0x0);
        gbc.writeMem(0x8299, { 0x1, 0xcb, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x2254);
        EXPECT(gbc.pc(), 0x829c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8299), 0x1);
        EXPECT(gbc.readMem(0x829a), 0xcb);
        EXPECT(gbc.readMem(0x829b), 0x58);
        // 01 013E
        gbc.setState(0xee81, 0xf912, 0x7f60, 0xa453, 0xc996, 0x3bfb, 0x1, 0x0);
        gbc.writeMem(0xee81, { 0x1, 0x39, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf912);
        EXPECT(gbc.pc(), 0xee84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee81), 0x1);
        EXPECT(gbc.readMem(0xee82), 0x39);
        EXPECT(gbc.readMem(0xee83), 0xa0);
        // 01 013F
        gbc.setState(0x1a5d, 0xac78, 0x1e30, 0xe945, 0x84a1, 0xdce, 0x1, 0x1);
        gbc.writeMem(0x1a5d, { 0x1, 0xc2, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xac78);
        EXPECT(gbc.pc(), 0x1a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0140
        gbc.setState(0xe950, 0xbb8, 0xc2f0, 0xd4dc, 0x2438, 0x3602, 0x1, 0x1);
        gbc.writeMem(0xe950, { 0x1, 0x50, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbb8);
        EXPECT(gbc.pc(), 0xe953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe950), 0x1);
        EXPECT(gbc.readMem(0xe951), 0x50);
        EXPECT(gbc.readMem(0xe952), 0x17);
        // 01 0141
        gbc.setState(0x1de, 0xc51b, 0x9900, 0x80fe, 0x6ce0, 0xb894, 0x1, 0x0);
        gbc.writeMem(0x1de, { 0x1, 0x43, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc51b);
        EXPECT(gbc.pc(), 0x1e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0142
        gbc.setState(0xcae2, 0xbc63, 0xab50, 0x3b5d, 0xda95, 0xb6cc, 0x0, 0x0);
        gbc.writeMem(0xcae2, { 0x1, 0x57, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xbc63);
        EXPECT(gbc.pc(), 0xcae5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcae2), 0x1);
        EXPECT(gbc.readMem(0xcae3), 0x57);
        EXPECT(gbc.readMem(0xcae4), 0xc7);
        // 01 0143
        gbc.setState(0x2403, 0x682f, 0x83c0, 0x3fc0, 0x6ec3, 0x5948, 0x1, 0x0);
        gbc.writeMem(0x2403, { 0x1, 0x5a, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x682f);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0144
        gbc.setState(0x163, 0xd312, 0xf1a0, 0xdc4d, 0xef9f, 0x8055, 0x0, 0x1);
        gbc.writeMem(0x163, { 0x1, 0x96, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd312);
        EXPECT(gbc.pc(), 0x166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0145
        gbc.setState(0x33e1, 0x3420, 0x79a0, 0x43c0, 0x26e8, 0xe049, 0x1, 0x1);
        gbc.writeMem(0x33e1, { 0x1, 0x40, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3420);
        EXPECT(gbc.pc(), 0x33e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0146
        gbc.setState(0x2cdf, 0x4df8, 0x85e0, 0xaa1e, 0xcc19, 0x30c9, 0x1, 0x1);
        gbc.writeMem(0x2cdf, { 0x1, 0xb8, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0x2ce2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0147
        gbc.setState(0x591e, 0x335d, 0x1440, 0x7930, 0xa3c3, 0x32a2, 0x0, 0x1);
        gbc.writeMem(0x591e, { 0x1, 0x2c, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x335d);
        EXPECT(gbc.pc(), 0x5921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0148
        gbc.setState(0xcbf, 0x3c67, 0xbaa0, 0xf232, 0x6e7, 0x22d6, 0x0, 0x1);
        gbc.writeMem(0xcbf, { 0x1, 0x40, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3c67);
        EXPECT(gbc.pc(), 0xcc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0149
        gbc.setState(0xa522, 0x6ad5, 0x3c50, 0x83d6, 0xa, 0xdbdf, 0x1, 0x1);
        gbc.writeMem(0xa522, { 0x1, 0xda, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x6ad5);
        EXPECT(gbc.pc(), 0xa525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa522), 0x1);
        EXPECT(gbc.readMem(0xa523), 0xda);
        EXPECT(gbc.readMem(0xa524), 0xd2);
        // 01 014A
        gbc.setState(0x436c, 0x40c0, 0x9820, 0x2370, 0xc20e, 0xbd8e, 0x0, 0x0);
        gbc.writeMem(0x436c, { 0x1, 0xad, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x40c0);
        EXPECT(gbc.pc(), 0x436f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 014B
        gbc.setState(0x6bd6, 0xb56a, 0x20f0, 0x2fb8, 0x6a16, 0x19a1, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0x1, 0x7a, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb56a);
        EXPECT(gbc.pc(), 0x6bd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 014C
        gbc.setState(0x7736, 0xbee, 0x5060, 0x4551, 0xa97c, 0x9c30, 0x1, 0x1);
        gbc.writeMem(0x7736, { 0x1, 0xbe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbee);
        EXPECT(gbc.pc(), 0x7739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 014D
        gbc.setState(0xa755, 0x9b15, 0x1470, 0xe441, 0xb42, 0x1b44, 0x0, 0x0);
        gbc.writeMem(0xa755, { 0x1, 0xb4, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9b15);
        EXPECT(gbc.pc(), 0xa758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa755), 0x1);
        EXPECT(gbc.readMem(0xa756), 0xb4);
        EXPECT(gbc.readMem(0xa757), 0xff);
        // 01 014E
        gbc.setState(0xc87a, 0x2bc5, 0x7d70, 0x61af, 0x4a8e, 0x61a7, 0x1, 0x1);
        gbc.writeMem(0xc87a, { 0x1, 0xe1, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2bc5);
        EXPECT(gbc.pc(), 0xc87d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc87a), 0x1);
        EXPECT(gbc.readMem(0xc87b), 0xe1);
        EXPECT(gbc.readMem(0xc87c), 0xc9);
        // 01 014F
        gbc.setState(0x9b6b, 0xa49, 0xed40, 0x5b02, 0x2303, 0xfd0b, 0x1, 0x1);
        gbc.writeMem(0x9b6b, { 0x1, 0xe4, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa49);
        EXPECT(gbc.pc(), 0x9b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b6b), 0x1);
        EXPECT(gbc.readMem(0x9b6c), 0xe4);
        EXPECT(gbc.readMem(0x9b6d), 0x22);
        // 01 0150
        gbc.setState(0xd1af, 0x7f3a, 0x3eb0, 0xae10, 0xe521, 0x5252, 0x0, 0x1);
        gbc.writeMem(0xd1af, { 0x1, 0x95, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x7f3a);
        EXPECT(gbc.pc(), 0xd1b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1af), 0x1);
        EXPECT(gbc.readMem(0xd1b0), 0x95);
        EXPECT(gbc.readMem(0xd1b1), 0x7a);
        // 01 0151
        gbc.setState(0xa6c, 0x97c7, 0x2290, 0x1589, 0xef97, 0x12c5, 0x0, 0x0);
        gbc.writeMem(0xa6c, { 0x1, 0xfe, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x97c7);
        EXPECT(gbc.pc(), 0xa6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0152
        gbc.setState(0xc302, 0x6fb4, 0x8320, 0xa74c, 0xe538, 0x7a94, 0x0, 0x1);
        gbc.writeMem(0xc302, { 0x1, 0x31, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6fb4);
        EXPECT(gbc.pc(), 0xc305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc302), 0x1);
        EXPECT(gbc.readMem(0xc303), 0x31);
        EXPECT(gbc.readMem(0xc304), 0xd1);
        // 01 0153
        gbc.setState(0x5e71, 0xd844, 0xc070, 0x7112, 0x2272, 0x79a0, 0x1, 0x0);
        gbc.writeMem(0x5e71, { 0x1, 0xad, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd844);
        EXPECT(gbc.pc(), 0x5e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0154
        gbc.setState(0x4639, 0xcefd, 0xe5a0, 0xcb9d, 0x477f, 0xe3b2, 0x0, 0x1);
        gbc.writeMem(0x4639, { 0x1, 0x94, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xcefd);
        EXPECT(gbc.pc(), 0x463c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0155
        gbc.setState(0x286b, 0xc51e, 0xe380, 0x45e8, 0xfa83, 0xb006, 0x0, 0x1);
        gbc.writeMem(0x286b, { 0x1, 0xf8, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc51e);
        EXPECT(gbc.pc(), 0x286e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0156
        gbc.setState(0x298d, 0xbddd, 0xfee0, 0xb6f2, 0x20b6, 0xc477, 0x0, 0x1);
        gbc.writeMem(0x298d, { 0x1, 0x4a, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xbddd);
        EXPECT(gbc.pc(), 0x2990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0157
        gbc.setState(0x40df, 0x6f38, 0xa900, 0xa2a0, 0x7753, 0x6355, 0x0, 0x0);
        gbc.writeMem(0x40df, { 0x1, 0x70, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6f38);
        EXPECT(gbc.pc(), 0x40e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0158
        gbc.setState(0x7f04, 0x85be, 0x6130, 0x731b, 0x5406, 0xcb67, 0x1, 0x0);
        gbc.writeMem(0x7f04, { 0x1, 0x81, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x85be);
        EXPECT(gbc.pc(), 0x7f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0159
        gbc.setState(0x356d, 0x1e9f, 0xa5a0, 0x318a, 0xf45, 0x5949, 0x1, 0x0);
        gbc.writeMem(0x356d, { 0x1, 0xb6, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x1e9f);
        EXPECT(gbc.pc(), 0x3570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 015A
        gbc.setState(0x102e, 0x87ab, 0xcd80, 0xe674, 0xdfab, 0x7391, 0x0, 0x0);
        gbc.writeMem(0x102e, { 0x1, 0x22, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x87ab);
        EXPECT(gbc.pc(), 0x1031);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 015B
        gbc.setState(0x4fee, 0x5d2c, 0xf170, 0x3bb3, 0x9cab, 0x9098, 0x1, 0x0);
        gbc.writeMem(0x4fee, { 0x1, 0x2e, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5d2c);
        EXPECT(gbc.pc(), 0x4ff1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 015C
        gbc.setState(0x4f6, 0x2e15, 0x4d50, 0x1620, 0x2b7a, 0x9243, 0x0, 0x0);
        gbc.writeMem(0x4f6, { 0x1, 0x56, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e15);
        EXPECT(gbc.pc(), 0x4f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 015D
        gbc.setState(0x8d31, 0x6a81, 0xe340, 0xaf95, 0x6b78, 0xee44, 0x1, 0x0);
        gbc.writeMem(0x8d31, { 0x1, 0xcb, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6a81);
        EXPECT(gbc.pc(), 0x8d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d31), 0x1);
        EXPECT(gbc.readMem(0x8d32), 0xcb);
        EXPECT(gbc.readMem(0x8d33), 0xa8);
        // 01 015E
        gbc.setState(0xd846, 0xb1e5, 0x7b60, 0x57a7, 0x3ecb, 0x10d2, 0x1, 0x1);
        gbc.writeMem(0xd846, { 0x1, 0x6a, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb1e5);
        EXPECT(gbc.pc(), 0xd849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd846), 0x1);
        EXPECT(gbc.readMem(0xd847), 0x6a);
        EXPECT(gbc.readMem(0xd848), 0x30);
        // 01 015F
        gbc.setState(0xc65a, 0x2430, 0xf020, 0xeb7e, 0xfe05, 0x56f2, 0x0, 0x0);
        gbc.writeMem(0xc65a, { 0x1, 0x9a, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0xc65d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc65a), 0x1);
        EXPECT(gbc.readMem(0xc65b), 0x9a);
        EXPECT(gbc.readMem(0xc65c), 0x37);
        // 01 0160
        gbc.setState(0x19c6, 0x25ae, 0x60b0, 0xdeb5, 0x325c, 0xa771, 0x1, 0x1);
        gbc.writeMem(0x19c6, { 0x1, 0x9b, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x25ae);
        EXPECT(gbc.pc(), 0x19c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0161
        gbc.setState(0x2a53, 0x95cc, 0xda30, 0xd984, 0x189f, 0x5586, 0x1, 0x0);
        gbc.writeMem(0x2a53, { 0x1, 0x35, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x95cc);
        EXPECT(gbc.pc(), 0x2a56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0162
        gbc.setState(0xb9bb, 0x9911, 0x94d0, 0x28c5, 0x5584, 0x9cb0, 0x0, 0x0);
        gbc.writeMem(0xb9bb, { 0x1, 0x71, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0xb9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9bb), 0x1);
        EXPECT(gbc.readMem(0xb9bc), 0x71);
        EXPECT(gbc.readMem(0xb9bd), 0x66);
        // 01 0163
        gbc.setState(0xd94a, 0x612e, 0x8540, 0xda0c, 0x7ad0, 0x3281, 0x0, 0x0);
        gbc.writeMem(0xd94a, { 0x1, 0x54, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x612e);
        EXPECT(gbc.pc(), 0xd94d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94a), 0x1);
        EXPECT(gbc.readMem(0xd94b), 0x54);
        EXPECT(gbc.readMem(0xd94c), 0x11);
        // 01 0164
        gbc.setState(0xb40d, 0x633, 0xb540, 0x3212, 0x8e34, 0x7552, 0x0, 0x0);
        gbc.writeMem(0xb40d, { 0x1, 0x5f, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x633);
        EXPECT(gbc.pc(), 0xb410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb40d), 0x1);
        EXPECT(gbc.readMem(0xb40e), 0x5f);
        EXPECT(gbc.readMem(0xb40f), 0x54);
        // 01 0166
        gbc.setState(0x534f, 0x753, 0x8f40, 0xc4ef, 0xcef0, 0x900b, 0x0, 0x1);
        gbc.writeMem(0x534f, { 0x1, 0xf6, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x753);
        EXPECT(gbc.pc(), 0x5352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0167
        gbc.setState(0xdb3e, 0xe6d0, 0xcbb0, 0x1dba, 0xc624, 0x82bb, 0x1, 0x0);
        gbc.writeMem(0xdb3e, { 0x1, 0xce, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe6d0);
        EXPECT(gbc.pc(), 0xdb41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3e), 0x1);
        EXPECT(gbc.readMem(0xdb3f), 0xce);
        EXPECT(gbc.readMem(0xdb40), 0xd8);
        // 01 0169
        gbc.setState(0x4d65, 0x3dcd, 0x510, 0x6433, 0xa9a5, 0xc832, 0x1, 0x0);
        gbc.writeMem(0x4d65, { 0x1, 0x75, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x3dcd);
        EXPECT(gbc.pc(), 0x4d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 016A
        gbc.setState(0xce43, 0xa232, 0xe10, 0x1b57, 0x2b20, 0x7e0, 0x0, 0x1);
        gbc.writeMem(0xce43, { 0x1, 0xc2, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa232);
        EXPECT(gbc.pc(), 0xce46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce43), 0x1);
        EXPECT(gbc.readMem(0xce44), 0xc2);
        EXPECT(gbc.readMem(0xce45), 0x9b);
        // 01 016B
        gbc.setState(0x103e, 0x3f20, 0xa6e0, 0xda35, 0xc871, 0xa15c, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x1, 0x25, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3f20);
        EXPECT(gbc.pc(), 0x1041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 016C
        gbc.setState(0xe4d, 0x157c, 0x7650, 0x5c7e, 0x23b1, 0x93a9, 0x0, 0x0);
        gbc.writeMem(0xe4d, { 0x1, 0x5a, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x157c);
        EXPECT(gbc.pc(), 0xe50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 016D
        gbc.setState(0x458b, 0x7937, 0x5e50, 0x442d, 0xecbd, 0x6cf2, 0x1, 0x0);
        gbc.writeMem(0x458b, { 0x1, 0xe1, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0x458e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 016E
        gbc.setState(0x15db, 0xe0f5, 0x5030, 0xc79d, 0x9384, 0xb9f5, 0x0, 0x0);
        gbc.writeMem(0x15db, { 0x1, 0xe9, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe0f5);
        EXPECT(gbc.pc(), 0x15de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 016F
        gbc.setState(0x79c2, 0xd2e4, 0x4160, 0xd44b, 0x9e8a, 0xf821, 0x0, 0x0);
        gbc.writeMem(0x79c2, { 0x1, 0xc1, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xd2e4);
        EXPECT(gbc.pc(), 0x79c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0171
        gbc.setState(0x29c3, 0x893e, 0x48d0, 0xaf94, 0x39c4, 0x1b95, 0x1, 0x1);
        gbc.writeMem(0x29c3, { 0x1, 0x97, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x893e);
        EXPECT(gbc.pc(), 0x29c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0172
        gbc.setState(0x373e, 0xa9b8, 0x4c20, 0x6028, 0x2d5a, 0x2941, 0x0, 0x0);
        gbc.writeMem(0x373e, { 0x1, 0x34, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa9b8);
        EXPECT(gbc.pc(), 0x3741);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0173
        gbc.setState(0x58e8, 0xc766, 0x7970, 0x3693, 0xda43, 0x57fc, 0x0, 0x0);
        gbc.writeMem(0x58e8, { 0x1, 0x83, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc766);
        EXPECT(gbc.pc(), 0x58eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0174
        gbc.setState(0x9554, 0xa0db, 0xbea0, 0xcd19, 0x2407, 0x8a4, 0x0, 0x0);
        gbc.writeMem(0x9554, { 0x1, 0x6c, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa0db);
        EXPECT(gbc.pc(), 0x9557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9554), 0x1);
        EXPECT(gbc.readMem(0x9555), 0x6c);
        EXPECT(gbc.readMem(0x9556), 0x74);
        // 01 0175
        gbc.setState(0x6bfc, 0x6bee, 0x60b0, 0x8d3e, 0x613b, 0x52ea, 0x1, 0x0);
        gbc.writeMem(0x6bfc, { 0x1, 0x16, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6bee);
        EXPECT(gbc.pc(), 0x6bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0176
        gbc.setState(0xebce, 0x192f, 0x5db0, 0x1cea, 0x95d7, 0xcd48, 0x0, 0x1);
        gbc.writeMem(0xebce, { 0x1, 0x66, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x192f);
        EXPECT(gbc.pc(), 0xebd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebce), 0x1);
        EXPECT(gbc.readMem(0xebcf), 0x66);
        EXPECT(gbc.readMem(0xebd0), 0xae);
        // 01 0177
        gbc.setState(0xdb1c, 0xcd4f, 0x8670, 0x4e85, 0x7bbe, 0x76a5, 0x0, 0x0);
        gbc.writeMem(0xdb1c, { 0x1, 0x83, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xcd4f);
        EXPECT(gbc.pc(), 0xdb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb1c), 0x1);
        EXPECT(gbc.readMem(0xdb1d), 0x83);
        EXPECT(gbc.readMem(0xdb1e), 0x86);
        // 01 0178
        gbc.setState(0xab70, 0x7996, 0x3a70, 0x9ec7, 0xc4d8, 0xab22, 0x0, 0x1);
        gbc.writeMem(0xab70, { 0x1, 0xb2, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7996);
        EXPECT(gbc.pc(), 0xab73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab70), 0x1);
        EXPECT(gbc.readMem(0xab71), 0xb2);
        EXPECT(gbc.readMem(0xab72), 0x36);
        // 01 0179
        gbc.setState(0x82c3, 0x753, 0x7d0, 0x1502, 0x539c, 0x3b47, 0x0, 0x0);
        gbc.writeMem(0x82c3, { 0x1, 0xcb, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x753);
        EXPECT(gbc.pc(), 0x82c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82c3), 0x1);
        EXPECT(gbc.readMem(0x82c4), 0xcb);
        EXPECT(gbc.readMem(0x82c5), 0xdc);
        // 01 017A
        gbc.setState(0xdbed, 0x9e8a, 0x5080, 0x1814, 0xdd23, 0x4689, 0x0, 0x1);
        gbc.writeMem(0xdbed, { 0x1, 0x86, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x9e8a);
        EXPECT(gbc.pc(), 0xdbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbed), 0x1);
        EXPECT(gbc.readMem(0xdbee), 0x86);
        EXPECT(gbc.readMem(0xdbef), 0x97);
        // 01 017C
        gbc.setState(0xae0a, 0xeee4, 0xadc0, 0xfcce, 0xbcd3, 0xcb81, 0x1, 0x0);
        gbc.writeMem(0xae0a, { 0x1, 0x5c, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xeee4);
        EXPECT(gbc.pc(), 0xae0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0a), 0x1);
        EXPECT(gbc.readMem(0xae0b), 0x5c);
        EXPECT(gbc.readMem(0xae0c), 0x11);
        // 01 017D
        gbc.setState(0x2b35, 0x830f, 0xa960, 0xaff6, 0xf7, 0xbbe3, 0x1, 0x0);
        gbc.writeMem(0x2b35, { 0x1, 0xfd, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x830f);
        EXPECT(gbc.pc(), 0x2b38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 017E
        gbc.setState(0xeaf1, 0x5e57, 0x3ea0, 0x1e93, 0x7ec7, 0xe1bb, 0x0, 0x1);
        gbc.writeMem(0xeaf1, { 0x1, 0x44, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5e57);
        EXPECT(gbc.pc(), 0xeaf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf1), 0x1);
        EXPECT(gbc.readMem(0xeaf2), 0x44);
        EXPECT(gbc.readMem(0xeaf3), 0x9f);
        // 01 0180
        gbc.setState(0x8a55, 0xf3d4, 0xc950, 0x771c, 0xbc92, 0x5a12, 0x0, 0x0);
        gbc.writeMem(0x8a55, { 0x1, 0x94, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf3d4);
        EXPECT(gbc.pc(), 0x8a58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a55), 0x1);
        EXPECT(gbc.readMem(0x8a56), 0x94);
        EXPECT(gbc.readMem(0x8a57), 0x3f);
        // 01 0181
        gbc.setState(0x52f, 0xbfec, 0xabf0, 0xf7d2, 0xf47d, 0x188f, 0x0, 0x1);
        gbc.writeMem(0x52f, { 0x1, 0x5d, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xbfec);
        EXPECT(gbc.pc(), 0x532);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0182
        gbc.setState(0x935d, 0xc74a, 0x1920, 0xce12, 0x75f5, 0x77c6, 0x0, 0x0);
        gbc.writeMem(0x935d, { 0x1, 0x6e, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0x9360);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x935d), 0x1);
        EXPECT(gbc.readMem(0x935e), 0x6e);
        EXPECT(gbc.readMem(0x935f), 0x31);
        // 01 0183
        gbc.setState(0x6742, 0x5956, 0x82b0, 0x265c, 0xb5, 0x3b68, 0x1, 0x1);
        gbc.writeMem(0x6742, { 0x1, 0x8a, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5956);
        EXPECT(gbc.pc(), 0x6745);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0184
        gbc.setState(0x993e, 0xa13a, 0x61f0, 0x2dc3, 0xdc07, 0xbe2e, 0x1, 0x1);
        gbc.writeMem(0x993e, { 0x1, 0xba, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa13a);
        EXPECT(gbc.pc(), 0x9941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993e), 0x1);
        EXPECT(gbc.readMem(0x993f), 0xba);
        EXPECT(gbc.readMem(0x9940), 0x8d);
        // 01 0185
        gbc.setState(0x7dbb, 0x58dc, 0x3830, 0x7e94, 0x2ec2, 0xd42c, 0x0, 0x0);
        gbc.writeMem(0x7dbb, { 0x1, 0x51, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x58dc);
        EXPECT(gbc.pc(), 0x7dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0186
        gbc.setState(0x7278, 0x304, 0x500, 0xb2c7, 0x2038, 0xccd5, 0x0, 0x1);
        gbc.writeMem(0x7278, { 0x1, 0x4a, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x304);
        EXPECT(gbc.pc(), 0x727b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0187
        gbc.setState(0x7ffc, 0xe471, 0xf840, 0x4a9, 0xcc16, 0xa979, 0x1, 0x1);
        gbc.writeMem(0x7ffc, { 0x1, 0x74, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe471);
        EXPECT(gbc.pc(), 0x7fff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0188
        gbc.setState(0x54a1, 0x1ed5, 0x9320, 0x2428, 0xb154, 0x8193, 0x1, 0x0);
        gbc.writeMem(0x54a1, { 0x1, 0xbf, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1ed5);
        EXPECT(gbc.pc(), 0x54a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0189
        gbc.setState(0x379a, 0x7eb3, 0xd850, 0x56e8, 0x73a5, 0x73e3, 0x1, 0x1);
        gbc.writeMem(0x379a, { 0x1, 0x0, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x7eb3);
        EXPECT(gbc.pc(), 0x379d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 018A
        gbc.setState(0x9e13, 0x4fa6, 0x7520, 0x4d58, 0x1396, 0x8d8d, 0x1, 0x0);
        gbc.writeMem(0x9e13, { 0x1, 0xac, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x4fa6);
        EXPECT(gbc.pc(), 0x9e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e13), 0x1);
        EXPECT(gbc.readMem(0x9e14), 0xac);
        EXPECT(gbc.readMem(0x9e15), 0x60);
        // 01 018B
        gbc.setState(0x4b29, 0xc072, 0x20f0, 0xff92, 0x770a, 0x87fc, 0x0, 0x0);
        gbc.writeMem(0x4b29, { 0x1, 0xf7, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc072);
        EXPECT(gbc.pc(), 0x4b2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 018C
        gbc.setState(0xa601, 0x4529, 0x73a0, 0xba33, 0x2a75, 0x9950, 0x1, 0x1);
        gbc.writeMem(0xa601, { 0x1, 0x42, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4529);
        EXPECT(gbc.pc(), 0xa604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa601), 0x1);
        EXPECT(gbc.readMem(0xa602), 0x42);
        EXPECT(gbc.readMem(0xa603), 0xdc);
        // 01 018D
        gbc.setState(0x9d8d, 0xa2af, 0x2460, 0xfab7, 0x9d6, 0x2848, 0x0, 0x0);
        gbc.writeMem(0x9d8d, { 0x1, 0x7b, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa2af);
        EXPECT(gbc.pc(), 0x9d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d8d), 0x1);
        EXPECT(gbc.readMem(0x9d8e), 0x7b);
        EXPECT(gbc.readMem(0x9d8f), 0x8b);
        // 01 018E
        gbc.setState(0x919a, 0x77c2, 0x1380, 0x960d, 0xcc8f, 0x50ba, 0x0, 0x0);
        gbc.writeMem(0x919a, { 0x1, 0x5d, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x77c2);
        EXPECT(gbc.pc(), 0x919d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x919a), 0x1);
        EXPECT(gbc.readMem(0x919b), 0x5d);
        EXPECT(gbc.readMem(0x919c), 0x52);
        // 01 018F
        gbc.setState(0x380b, 0xc357, 0x2f70, 0xfb1b, 0x4b61, 0xd8f7, 0x1, 0x1);
        gbc.writeMem(0x380b, { 0x1, 0x1, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc357);
        EXPECT(gbc.pc(), 0x380e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0190
        gbc.setState(0x3e21, 0xd79a, 0x5280, 0xedfd, 0xf59e, 0x794f, 0x1, 0x0);
        gbc.writeMem(0x3e21, { 0x1, 0x3c, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd79a);
        EXPECT(gbc.pc(), 0x3e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0191
        gbc.setState(0xa6f8, 0x9dbb, 0xbc0, 0x7142, 0xaef7, 0xbdd0, 0x0, 0x1);
        gbc.writeMem(0xa6f8, { 0x1, 0xbc, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9dbb);
        EXPECT(gbc.pc(), 0xa6fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f8), 0x1);
        EXPECT(gbc.readMem(0xa6f9), 0xbc);
        EXPECT(gbc.readMem(0xa6fa), 0x53);
        // 01 0192
        gbc.setState(0xde54, 0xab19, 0xb7f0, 0xcdf7, 0x405d, 0x2f1f, 0x0, 0x0);
        gbc.writeMem(0xde54, { 0x1, 0xd, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xab19);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde54), 0x1);
        EXPECT(gbc.readMem(0xde55), 0xd);
        EXPECT(gbc.readMem(0xde56), 0x25);
        // 01 0193
        gbc.setState(0xa2f8, 0x5d50, 0x6540, 0xf198, 0xe0cf, 0x62b0, 0x1, 0x0);
        gbc.writeMem(0xa2f8, { 0x1, 0xba, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5d50);
        EXPECT(gbc.pc(), 0xa2fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2f8), 0x1);
        EXPECT(gbc.readMem(0xa2f9), 0xba);
        EXPECT(gbc.readMem(0xa2fa), 0xb3);
        // 01 0194
        gbc.setState(0x6b7e, 0xbaa3, 0x9b00, 0xc1fb, 0xcaeb, 0xbc95, 0x1, 0x0);
        gbc.writeMem(0x6b7e, { 0x1, 0x7, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbaa3);
        EXPECT(gbc.pc(), 0x6b81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0195
        gbc.setState(0x2621, 0xa975, 0xdf40, 0x80f0, 0x21a, 0xf4d8, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0x1, 0x2, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xa975);
        EXPECT(gbc.pc(), 0x2624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0196
        gbc.setState(0x2bb3, 0xeba4, 0x6c50, 0xb1e7, 0xcc10, 0xcf0, 0x1, 0x0);
        gbc.writeMem(0x2bb3, { 0x1, 0x7d, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xeba4);
        EXPECT(gbc.pc(), 0x2bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0197
        gbc.setState(0xe215, 0x830e, 0x74c0, 0xb14b, 0x8e05, 0xc187, 0x1, 0x1);
        gbc.writeMem(0xe215, { 0x1, 0xab, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x830e);
        EXPECT(gbc.pc(), 0xe218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe215), 0x1);
        EXPECT(gbc.readMem(0xe216), 0xab);
        EXPECT(gbc.readMem(0xe217), 0xaf);
        // 01 0199
        gbc.setState(0xb650, 0x5a8a, 0xc770, 0x7a92, 0xa7de, 0xf585, 0x0, 0x1);
        gbc.writeMem(0xb650, { 0x1, 0xb9, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5a8a);
        EXPECT(gbc.pc(), 0xb653);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb650), 0x1);
        EXPECT(gbc.readMem(0xb651), 0xb9);
        EXPECT(gbc.readMem(0xb652), 0xe3);
        // 01 019A
        gbc.setState(0x18d9, 0x563b, 0xa2d0, 0xfdb9, 0xfe00, 0xd507, 0x0, 0x1);
        gbc.writeMem(0x18d9, { 0x1, 0x78, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x563b);
        EXPECT(gbc.pc(), 0x18dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 019C
        gbc.setState(0x5ab7, 0xc973, 0x5810, 0x2182, 0xc832, 0x11dd, 0x1, 0x0);
        gbc.writeMem(0x5ab7, { 0x1, 0xef, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xc973);
        EXPECT(gbc.pc(), 0x5aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 019D
        gbc.setState(0xc8e2, 0xb70b, 0x7da0, 0x134a, 0xf48b, 0x2802, 0x1, 0x0);
        gbc.writeMem(0xc8e2, { 0x1, 0xaf, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xb70b);
        EXPECT(gbc.pc(), 0xc8e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8e2), 0x1);
        EXPECT(gbc.readMem(0xc8e3), 0xaf);
        EXPECT(gbc.readMem(0xc8e4), 0xfb);
        // 01 019E
        gbc.setState(0x31c4, 0x54f5, 0x6660, 0x794, 0xd946, 0x3768, 0x0, 0x1);
        gbc.writeMem(0x31c4, { 0x1, 0xe5, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x54f5);
        EXPECT(gbc.pc(), 0x31c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 019F
        gbc.setState(0x3914, 0x47f1, 0x8f40, 0x9d6c, 0x8852, 0xeefd, 0x0, 0x0);
        gbc.writeMem(0x3914, { 0x1, 0xf0, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x47f1);
        EXPECT(gbc.pc(), 0x3917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01A0
        gbc.setState(0xc640, 0x8b4b, 0x9d30, 0xf607, 0xa2f5, 0xa6d6, 0x0, 0x1);
        gbc.writeMem(0xc640, { 0x1, 0x66, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8b4b);
        EXPECT(gbc.pc(), 0xc643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc640), 0x1);
        EXPECT(gbc.readMem(0xc641), 0x66);
        EXPECT(gbc.readMem(0xc642), 0xce);
        // 01 01A1
        gbc.setState(0x7680, 0xe8cc, 0xce60, 0x7610, 0x5e12, 0x401f, 0x1, 0x1);
        gbc.writeMem(0x7680, { 0x1, 0xb0, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe8cc);
        EXPECT(gbc.pc(), 0x7683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01A2
        gbc.setState(0xc82e, 0x3f23, 0x5070, 0x607f, 0x5047, 0x85d0, 0x1, 0x0);
        gbc.writeMem(0xc82e, { 0x1, 0x48, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x3f23);
        EXPECT(gbc.pc(), 0xc831);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc82e), 0x1);
        EXPECT(gbc.readMem(0xc82f), 0x48);
        EXPECT(gbc.readMem(0xc830), 0x1b);
        // 01 01A3
        gbc.setState(0xdcbf, 0x219e, 0x57a0, 0x5ea5, 0x9dc6, 0xc5e9, 0x1, 0x1);
        gbc.writeMem(0xdcbf, { 0x1, 0x22, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x219e);
        EXPECT(gbc.pc(), 0xdcc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcbf), 0x1);
        EXPECT(gbc.readMem(0xdcc0), 0x22);
        EXPECT(gbc.readMem(0xdcc1), 0x18);
        // 01 01A4
        gbc.setState(0xa79c, 0x2a60, 0xa360, 0xa89b, 0xc17a, 0xc053, 0x0, 0x0);
        gbc.writeMem(0xa79c, { 0x1, 0xec, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2a60);
        EXPECT(gbc.pc(), 0xa79f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79c), 0x1);
        EXPECT(gbc.readMem(0xa79d), 0xec);
        EXPECT(gbc.readMem(0xa79e), 0x28);
        // 01 01A5
        gbc.setState(0x88b5, 0x6395, 0xc5f0, 0xe871, 0x3564, 0xa82, 0x0, 0x0);
        gbc.writeMem(0x88b5, { 0x1, 0xbe, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x6395);
        EXPECT(gbc.pc(), 0x88b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b5), 0x1);
        EXPECT(gbc.readMem(0x88b6), 0xbe);
        EXPECT(gbc.readMem(0x88b7), 0x66);
        // 01 01A6
        gbc.setState(0x39b5, 0x3fa2, 0xf210, 0xc866, 0x4480, 0x2f18, 0x1, 0x0);
        gbc.writeMem(0x39b5, { 0x1, 0x8d, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3fa2);
        EXPECT(gbc.pc(), 0x39b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01A7
        gbc.setState(0xbba8, 0x3ca6, 0xc6b0, 0x27ef, 0x8fd7, 0x904c, 0x1, 0x0);
        gbc.writeMem(0xbba8, { 0x1, 0x25, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3ca6);
        EXPECT(gbc.pc(), 0xbbab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbba8), 0x1);
        EXPECT(gbc.readMem(0xbba9), 0x25);
        EXPECT(gbc.readMem(0xbbaa), 0x4d);
        // 01 01A8
        gbc.setState(0x76b8, 0x9764, 0x5880, 0x59e2, 0x3072, 0xc2e0, 0x0, 0x0);
        gbc.writeMem(0x76b8, { 0x1, 0x51, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9764);
        EXPECT(gbc.pc(), 0x76bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01A9
        gbc.setState(0xbed, 0xed06, 0x13c0, 0x4101, 0x8295, 0x51f6, 0x0, 0x0);
        gbc.writeMem(0xbed, { 0x1, 0x78, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xed06);
        EXPECT(gbc.pc(), 0xbf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01AA
        gbc.setState(0x88b0, 0x90b9, 0x58d0, 0x5830, 0xc689, 0x646f, 0x0, 0x1);
        gbc.writeMem(0x88b0, { 0x1, 0xed, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x90b9);
        EXPECT(gbc.pc(), 0x88b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b0), 0x1);
        EXPECT(gbc.readMem(0x88b1), 0xed);
        EXPECT(gbc.readMem(0x88b2), 0xc3);
        // 01 01AB
        gbc.setState(0x5712, 0xbb47, 0xcb20, 0xea, 0x1942, 0x4943, 0x1, 0x0);
        gbc.writeMem(0x5712, { 0x1, 0xf3, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0x5715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01AC
        gbc.setState(0xb663, 0x6062, 0x55f0, 0xdd04, 0xf5ab, 0x8f9, 0x1, 0x1);
        gbc.writeMem(0xb663, { 0x1, 0x1, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6062);
        EXPECT(gbc.pc(), 0xb666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb663), 0x1);
        EXPECT(gbc.readMem(0xb664), 0x1);
        EXPECT(gbc.readMem(0xb665), 0x8a);
        // 01 01AE
        gbc.setState(0x60b4, 0xb6d7, 0xdd90, 0x794e, 0x9dcd, 0x61ac, 0x0, 0x1);
        gbc.writeMem(0x60b4, { 0x1, 0xac, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb6d7);
        EXPECT(gbc.pc(), 0x60b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01AF
        gbc.setState(0x981b, 0xc78c, 0x9070, 0x4aeb, 0x672f, 0x74ee, 0x1, 0x1);
        gbc.writeMem(0x981b, { 0x1, 0x91, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc78c);
        EXPECT(gbc.pc(), 0x981e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981b), 0x1);
        EXPECT(gbc.readMem(0x981c), 0x91);
        EXPECT(gbc.readMem(0x981d), 0xc3);
        // 01 01B0
        gbc.setState(0x69af, 0x455e, 0x7850, 0x21d7, 0x5b0c, 0x2dd4, 0x1, 0x1);
        gbc.writeMem(0x69af, { 0x1, 0x61, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x455e);
        EXPECT(gbc.pc(), 0x69b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01B1
        gbc.setState(0x72dc, 0x69be, 0x3f90, 0xb02f, 0x941b, 0x7c6, 0x1, 0x0);
        gbc.writeMem(0x72dc, { 0x1, 0xa0, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x69be);
        EXPECT(gbc.pc(), 0x72df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01B2
        gbc.setState(0xde93, 0x7326, 0x1290, 0x3d5e, 0x6571, 0xee4f, 0x0, 0x0);
        gbc.writeMem(0xde93, { 0x1, 0x4f, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7326);
        EXPECT(gbc.pc(), 0xde96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde93), 0x1);
        EXPECT(gbc.readMem(0xde94), 0x4f);
        EXPECT(gbc.readMem(0xde95), 0xff);
        // 01 01B3
        gbc.setState(0x9e76, 0x3fd9, 0xf4d0, 0xaf91, 0x26f6, 0xaafd, 0x1, 0x1);
        gbc.writeMem(0x9e76, { 0x1, 0xe2, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3fd9);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e76), 0x1);
        EXPECT(gbc.readMem(0x9e77), 0xe2);
        EXPECT(gbc.readMem(0x9e78), 0x84);
        // 01 01B4
        gbc.setState(0x1889, 0x154e, 0x4d30, 0xc189, 0xb7d9, 0x9cfd, 0x0, 0x1);
        gbc.writeMem(0x1889, { 0x1, 0x64, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x154e);
        EXPECT(gbc.pc(), 0x188c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01B5
        gbc.setState(0x62fe, 0x3cd, 0xf990, 0xbbd, 0x8e35, 0x77a1, 0x0, 0x0);
        gbc.writeMem(0x62fe, { 0x1, 0x17, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3cd);
        EXPECT(gbc.pc(), 0x6301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01B6
        gbc.setState(0x358b, 0xc037, 0xca60, 0x789e, 0xf1ff, 0xb390, 0x0, 0x1);
        gbc.writeMem(0x358b, { 0x1, 0xf7, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc037);
        EXPECT(gbc.pc(), 0x358e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01B7
        gbc.setState(0x31d5, 0x2e04, 0x6100, 0xffbf, 0xdfd6, 0x25e6, 0x0, 0x0);
        gbc.writeMem(0x31d5, { 0x1, 0x36, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2e04);
        EXPECT(gbc.pc(), 0x31d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01B8
        gbc.setState(0xc058, 0xc20f, 0xd320, 0x45e1, 0xaa1d, 0x1fed, 0x0, 0x0);
        gbc.writeMem(0xc058, { 0x1, 0x68, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc20f);
        EXPECT(gbc.pc(), 0xc05b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc058), 0x1);
        EXPECT(gbc.readMem(0xc059), 0x68);
        EXPECT(gbc.readMem(0xc05a), 0x26);
        // 01 01B9
        gbc.setState(0x1970, 0x60cf, 0x4b10, 0xfa63, 0x5a44, 0x6dfa, 0x1, 0x0);
        gbc.writeMem(0x1970, { 0x1, 0x58, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x60cf);
        EXPECT(gbc.pc(), 0x1973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01BA
        gbc.setState(0x2c08, 0xbe46, 0x3110, 0xa048, 0x9e17, 0x7fee, 0x0, 0x0);
        gbc.writeMem(0x2c08, { 0x1, 0x8f, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbe46);
        EXPECT(gbc.pc(), 0x2c0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01BB
        gbc.setState(0x86ad, 0x65b1, 0x8320, 0xdc1a, 0x6c0, 0xe402, 0x0, 0x1);
        gbc.writeMem(0x86ad, { 0x1, 0x76, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x65b1);
        EXPECT(gbc.pc(), 0x86b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86ad), 0x1);
        EXPECT(gbc.readMem(0x86ae), 0x76);
        EXPECT(gbc.readMem(0x86af), 0xe3);
        // 01 01BC
        gbc.setState(0x802, 0x4314, 0x21e0, 0xa314, 0xf7db, 0x696c, 0x0, 0x0);
        gbc.writeMem(0x802, { 0x1, 0x51, 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4314);
        EXPECT(gbc.pc(), 0x805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01BE
        gbc.setState(0x20d0, 0x7a54, 0x19a0, 0xe8d5, 0x8714, 0xfa3b, 0x0, 0x0);
        gbc.writeMem(0x20d0, { 0x1, 0xe4, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7a54);
        EXPECT(gbc.pc(), 0x20d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01BF
        gbc.setState(0x7147, 0xc5cc, 0x9f70, 0x11d, 0x81d9, 0xe9cc, 0x1, 0x1);
        gbc.writeMem(0x7147, { 0x1, 0x37, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc5cc);
        EXPECT(gbc.pc(), 0x714a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01C0
        gbc.setState(0xb4b7, 0xef7d, 0xe320, 0xf340, 0x4088, 0x1852, 0x0, 0x0);
        gbc.writeMem(0xb4b7, { 0x1, 0x5d, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xef7d);
        EXPECT(gbc.pc(), 0xb4ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b7), 0x1);
        EXPECT(gbc.readMem(0xb4b8), 0x5d);
        EXPECT(gbc.readMem(0xb4b9), 0x2e);
        // 01 01C1
        gbc.setState(0x69a3, 0xe86c, 0x34c0, 0xafc, 0x9bb4, 0xe395, 0x1, 0x0);
        gbc.writeMem(0x69a3, { 0x1, 0x12, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xe86c);
        EXPECT(gbc.pc(), 0x69a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01C2
        gbc.setState(0xda3c, 0x1460, 0x3540, 0x264f, 0x249a, 0xb9e5, 0x1, 0x1);
        gbc.writeMem(0xda3c, { 0x1, 0x1a, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1460);
        EXPECT(gbc.pc(), 0xda3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda3c), 0x1);
        EXPECT(gbc.readMem(0xda3d), 0x1a);
        EXPECT(gbc.readMem(0xda3e), 0x90);
        // 01 01C3
        gbc.setState(0xed03, 0xfd44, 0x3e0, 0xb570, 0x6a4b, 0xde82, 0x1, 0x1);
        gbc.writeMem(0xed03, { 0x1, 0xcf, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xfd44);
        EXPECT(gbc.pc(), 0xed06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed03), 0x1);
        EXPECT(gbc.readMem(0xed04), 0xcf);
        EXPECT(gbc.readMem(0xed05), 0x1a);
        // 01 01C4
        gbc.setState(0x375f, 0x4958, 0x3d0, 0xbf19, 0x6de, 0x39bf, 0x0, 0x0);
        gbc.writeMem(0x375f, { 0x1, 0x1d, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4958);
        EXPECT(gbc.pc(), 0x3762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01C5
        gbc.setState(0x639b, 0x33b5, 0x2ac0, 0x8378, 0xe189, 0x9d25, 0x1, 0x0);
        gbc.writeMem(0x639b, { 0x1, 0x5, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x33b5);
        EXPECT(gbc.pc(), 0x639e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01C6
        gbc.setState(0x3fdf, 0x8494, 0x4700, 0x9d9b, 0x9f8e, 0x7e2d, 0x0, 0x0);
        gbc.writeMem(0x3fdf, { 0x1, 0x38, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x8494);
        EXPECT(gbc.pc(), 0x3fe2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01C7
        gbc.setState(0x2b1b, 0x5af, 0x1280, 0xfb03, 0xf295, 0x5870, 0x1, 0x0);
        gbc.writeMem(0x2b1b, { 0x1, 0x43, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5af);
        EXPECT(gbc.pc(), 0x2b1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01C8
        gbc.setState(0x87e9, 0xae86, 0x8350, 0x7ea0, 0xc755, 0x412f, 0x0, 0x1);
        gbc.writeMem(0x87e9, { 0x1, 0x5, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xae86);
        EXPECT(gbc.pc(), 0x87ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87e9), 0x1);
        EXPECT(gbc.readMem(0x87ea), 0x5);
        EXPECT(gbc.readMem(0x87eb), 0xba);
        // 01 01C9
        gbc.setState(0xd80e, 0xb3cd, 0x19d0, 0x73e, 0xdc07, 0xdf61, 0x1, 0x1);
        gbc.writeMem(0xd80e, { 0x1, 0x8a, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xb3cd);
        EXPECT(gbc.pc(), 0xd811);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd80e), 0x1);
        EXPECT(gbc.readMem(0xd80f), 0x8a);
        EXPECT(gbc.readMem(0xd810), 0x4d);
        // 01 01CA
        gbc.setState(0xeabf, 0xdfe7, 0xc170, 0x3970, 0x877c, 0xb542, 0x1, 0x0);
        gbc.writeMem(0xeabf, { 0x1, 0x3b, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xdfe7);
        EXPECT(gbc.pc(), 0xeac2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabf), 0x1);
        EXPECT(gbc.readMem(0xeac0), 0x3b);
        EXPECT(gbc.readMem(0xeac1), 0x9f);
        // 01 01CB
        gbc.setState(0x127, 0xd928, 0xc060, 0x63e, 0x220, 0xb015, 0x1, 0x1);
        gbc.writeMem(0x127, { 0x1, 0xa8, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xd928);
        EXPECT(gbc.pc(), 0x12a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01CC
        gbc.setState(0x32b2, 0x415e, 0x800, 0x81fd, 0xce73, 0x1448, 0x0, 0x1);
        gbc.writeMem(0x32b2, { 0x1, 0xcb, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x415e);
        EXPECT(gbc.pc(), 0x32b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01CD
        gbc.setState(0x91ec, 0xcdd7, 0x34f0, 0x1500, 0x347e, 0xca6c, 0x1, 0x1);
        gbc.writeMem(0x91ec, { 0x1, 0x9e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xcdd7);
        EXPECT(gbc.pc(), 0x91ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ec), 0x1);
        EXPECT(gbc.readMem(0x91ed), 0x9e);
        EXPECT(gbc.readMem(0x91ee), 0xca);
        // 01 01CE
        gbc.setState(0x5075, 0x5021, 0x6f80, 0x9fe4, 0xe619, 0xadf8, 0x1, 0x0);
        gbc.writeMem(0x5075, { 0x1, 0x15, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x5021);
        EXPECT(gbc.pc(), 0x5078);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01CF
        gbc.setState(0x63c7, 0x1c32, 0x7bb0, 0x8b19, 0xfbdf, 0x6d92, 0x0, 0x1);
        gbc.writeMem(0x63c7, { 0x1, 0xc6, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x1c32);
        EXPECT(gbc.pc(), 0x63ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01D0
        gbc.setState(0xb3fb, 0x12ba, 0xccb0, 0x217a, 0x8d8e, 0xaa94, 0x1, 0x0);
        gbc.writeMem(0xb3fb, { 0x1, 0xe8, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x12ba);
        EXPECT(gbc.pc(), 0xb3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3fb), 0x1);
        EXPECT(gbc.readMem(0xb3fc), 0xe8);
        EXPECT(gbc.readMem(0xb3fd), 0x38);
        // 01 01D1
        gbc.setState(0x8849, 0xf86e, 0x45d0, 0x6ba3, 0x1cd1, 0x4b1d, 0x0, 0x1);
        gbc.writeMem(0x8849, { 0x1, 0xd0, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf86e);
        EXPECT(gbc.pc(), 0x884c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8849), 0x1);
        EXPECT(gbc.readMem(0x884a), 0xd0);
        EXPECT(gbc.readMem(0x884b), 0xc3);
        // 01 01D2
        gbc.setState(0x7a77, 0xbe93, 0x65f0, 0x37b4, 0x334f, 0x2a7, 0x1, 0x0);
        gbc.writeMem(0x7a77, { 0x1, 0xee, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbe93);
        EXPECT(gbc.pc(), 0x7a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01D3
        gbc.setState(0xc21c, 0xfee5, 0x85a0, 0x1630, 0xd44e, 0xafc5, 0x1, 0x0);
        gbc.writeMem(0xc21c, { 0x1, 0xad, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfee5);
        EXPECT(gbc.pc(), 0xc21f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc21c), 0x1);
        EXPECT(gbc.readMem(0xc21d), 0xad);
        EXPECT(gbc.readMem(0xc21e), 0x19);
        // 01 01D4
        gbc.setState(0x8cd, 0xac29, 0x7120, 0xa5bc, 0xf601, 0xb955, 0x1, 0x0);
        gbc.writeMem(0x8cd, { 0x1, 0x6c, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xac29);
        EXPECT(gbc.pc(), 0x8d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01D5
        gbc.setState(0xe840, 0xaa0, 0xcde0, 0xde88, 0xedee, 0x354e, 0x1, 0x1);
        gbc.writeMem(0xe840, { 0x1, 0x93, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaa0);
        EXPECT(gbc.pc(), 0xe843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe840), 0x1);
        EXPECT(gbc.readMem(0xe841), 0x93);
        EXPECT(gbc.readMem(0xe842), 0xa0);
        // 01 01D6
        gbc.setState(0x618, 0x425e, 0xdd00, 0x497e, 0xc732, 0xfb56, 0x0, 0x0);
        gbc.writeMem(0x618, { 0x1, 0xcb, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x425e);
        EXPECT(gbc.pc(), 0x61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01D7
        gbc.setState(0x198c, 0xfe2c, 0xa550, 0xdf5b, 0x76, 0x20f5, 0x1, 0x1);
        gbc.writeMem(0x198c, { 0x1, 0x70, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfe2c);
        EXPECT(gbc.pc(), 0x198f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01D8
        gbc.setState(0x2960, 0xae18, 0x8950, 0xb67c, 0x5088, 0xf3c9, 0x1, 0x1);
        gbc.writeMem(0x2960, { 0x1, 0x26, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xae18);
        EXPECT(gbc.pc(), 0x2963);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01D9
        gbc.setState(0x5c14, 0xa611, 0x1880, 0x7b2d, 0x46ff, 0x14f2, 0x0, 0x0);
        gbc.writeMem(0x5c14, { 0x1, 0xb7, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa611);
        EXPECT(gbc.pc(), 0x5c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01DA
        gbc.setState(0x26aa, 0xca2d, 0x2a0, 0x730b, 0xe0b, 0x7a12, 0x1, 0x1);
        gbc.writeMem(0x26aa, { 0x1, 0xf, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xca2d);
        EXPECT(gbc.pc(), 0x26ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01DB
        gbc.setState(0x1875, 0xa01b, 0xfcc0, 0xd52, 0x7e90, 0xe0da, 0x0, 0x0);
        gbc.writeMem(0x1875, { 0x1, 0xa8, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xa01b);
        EXPECT(gbc.pc(), 0x1878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01DC
        gbc.setState(0x40d, 0x9f8d, 0x6840, 0x9c1d, 0x7587, 0x80ca, 0x0, 0x0);
        gbc.writeMem(0x40d, { 0x1, 0x4d, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x9f8d);
        EXPECT(gbc.pc(), 0x410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01DE
        gbc.setState(0xa762, 0xf188, 0x67f0, 0xd22b, 0xf91e, 0xd8ba, 0x0, 0x1);
        gbc.writeMem(0xa762, { 0x1, 0x1d, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0xa765);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa762), 0x1);
        EXPECT(gbc.readMem(0xa763), 0x1d);
        EXPECT(gbc.readMem(0xa764), 0xf4);
        // 01 01DF
        gbc.setState(0x661b, 0x958d, 0x260, 0x4297, 0x8029, 0x98cd, 0x1, 0x0);
        gbc.writeMem(0x661b, { 0x1, 0x71, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x958d);
        EXPECT(gbc.pc(), 0x661e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01E0
        gbc.setState(0x9110, 0xf53e, 0xc40, 0xc208, 0x2a41, 0xf156, 0x0, 0x1);
        gbc.writeMem(0x9110, { 0x1, 0x81, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xf53e);
        EXPECT(gbc.pc(), 0x9113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9110), 0x1);
        EXPECT(gbc.readMem(0x9111), 0x81);
        EXPECT(gbc.readMem(0x9112), 0xbe);
        // 01 01E1
        gbc.setState(0xd55b, 0x228d, 0xca40, 0xba5a, 0x5c37, 0xf30e, 0x0, 0x0);
        gbc.writeMem(0xd55b, { 0x1, 0x84, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x228d);
        EXPECT(gbc.pc(), 0xd55e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55b), 0x1);
        EXPECT(gbc.readMem(0xd55c), 0x84);
        EXPECT(gbc.readMem(0xd55d), 0x52);
        // 01 01E2
        gbc.setState(0x300f, 0x73ff, 0x70c0, 0x4095, 0xfbb7, 0x996e, 0x1, 0x1);
        gbc.writeMem(0x300f, { 0x1, 0xa5, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x73ff);
        EXPECT(gbc.pc(), 0x3012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01E3
        gbc.setState(0xa887, 0x494c, 0x38d0, 0xa8fa, 0xe24a, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0xa887, { 0x1, 0xcc, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x494c);
        EXPECT(gbc.pc(), 0xa88a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa887), 0x1);
        EXPECT(gbc.readMem(0xa888), 0xcc);
        EXPECT(gbc.readMem(0xa889), 0x89);
        // 01 01E4
        gbc.setState(0x6831, 0x3db8, 0x1600, 0xdb68, 0x6113, 0x8ede, 0x0, 0x0);
        gbc.writeMem(0x6831, { 0x1, 0xb4, 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3db8);
        EXPECT(gbc.pc(), 0x6834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01E5
        gbc.setState(0x6759, 0xf58, 0xe450, 0x7c76, 0xb3b9, 0xdab8, 0x0, 0x0);
        gbc.writeMem(0x6759, { 0x1, 0x54, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0x675c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01E7
        gbc.setState(0x61c7, 0xf511, 0x90e0, 0xdd3d, 0xc6ca, 0x192a, 0x0, 0x1);
        gbc.writeMem(0x61c7, { 0x1, 0xbe, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf511);
        EXPECT(gbc.pc(), 0x61ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01E9
        gbc.setState(0xa56d, 0x1aa8, 0xaf80, 0x6de6, 0xe104, 0xcc74, 0x0, 0x0);
        gbc.writeMem(0xa56d, { 0x1, 0x32, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1aa8);
        EXPECT(gbc.pc(), 0xa570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56d), 0x1);
        EXPECT(gbc.readMem(0xa56e), 0x32);
        EXPECT(gbc.readMem(0xa56f), 0x1a);
        // 01 01EA
        gbc.setState(0x859b, 0x3f00, 0x1770, 0xc914, 0xcf33, 0xd429, 0x0, 0x1);
        gbc.writeMem(0x859b, { 0x1, 0x8b, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3f00);
        EXPECT(gbc.pc(), 0x859e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859b), 0x1);
        EXPECT(gbc.readMem(0x859c), 0x8b);
        EXPECT(gbc.readMem(0x859d), 0x10);
        // 01 01EB
        gbc.setState(0x14cd, 0x4aef, 0xe980, 0xfb92, 0x9138, 0x21a5, 0x1, 0x0);
        gbc.writeMem(0x14cd, { 0x1, 0xb9, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4aef);
        EXPECT(gbc.pc(), 0x14d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01EC
        gbc.setState(0x37ca, 0x2e35, 0xf2c0, 0x54d1, 0xd1b7, 0xf7e7, 0x0, 0x0);
        gbc.writeMem(0x37ca, { 0x1, 0x3, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2e35);
        EXPECT(gbc.pc(), 0x37cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01ED
        gbc.setState(0x7d38, 0x3df0, 0x74d0, 0xc05c, 0x84e4, 0xacef, 0x0, 0x0);
        gbc.writeMem(0x7d38, { 0x1, 0xa4, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3df0);
        EXPECT(gbc.pc(), 0x7d3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01EE
        gbc.setState(0xa8f9, 0x44b0, 0x7260, 0x9964, 0xa812, 0x74b9, 0x0, 0x0);
        gbc.writeMem(0xa8f9, { 0x1, 0x43, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x44b0);
        EXPECT(gbc.pc(), 0xa8fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8f9), 0x1);
        EXPECT(gbc.readMem(0xa8fa), 0x43);
        EXPECT(gbc.readMem(0xa8fb), 0x76);
        // 01 01EF
        gbc.setState(0x7c75, 0xc8a8, 0x4080, 0xdc52, 0x6675, 0x368, 0x0, 0x0);
        gbc.writeMem(0x7c75, { 0x1, 0x75, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xc8a8);
        EXPECT(gbc.pc(), 0x7c78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01F0
        gbc.setState(0xbf45, 0x90e0, 0x9700, 0xf90d, 0xbc18, 0xf85c, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0x1, 0x17, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x90e0);
        EXPECT(gbc.pc(), 0xbf48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf45), 0x1);
        EXPECT(gbc.readMem(0xbf46), 0x17);
        EXPECT(gbc.readMem(0xbf47), 0xe0);
        // 01 01F1
        gbc.setState(0x6f92, 0x67c0, 0xf970, 0x7521, 0x430f, 0xe78d, 0x0, 0x0);
        gbc.writeMem(0x6f92, { 0x1, 0xe4, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x67c0);
        EXPECT(gbc.pc(), 0x6f95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01F2
        gbc.setState(0x65e3, 0x6ab7, 0xd490, 0xb616, 0x2762, 0xd952, 0x1, 0x0);
        gbc.writeMem(0x65e3, { 0x1, 0xe6, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6ab7);
        EXPECT(gbc.pc(), 0x65e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01F3
        gbc.setState(0x2fdc, 0x49df, 0x9990, 0xadcd, 0x3a7b, 0xecd1, 0x1, 0x0);
        gbc.writeMem(0x2fdc, { 0x1, 0x62, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x49df);
        EXPECT(gbc.pc(), 0x2fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01F4
        gbc.setState(0x6202, 0x4a69, 0x1bb0, 0xd0d6, 0x850f, 0x59b3, 0x0, 0x0);
        gbc.writeMem(0x6202, { 0x1, 0x92, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x4a69);
        EXPECT(gbc.pc(), 0x6205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01F6
        gbc.setState(0xc04d, 0x6ceb, 0x680, 0xb49e, 0x7ef9, 0x45c2, 0x1, 0x0);
        gbc.writeMem(0xc04d, { 0x1, 0xe7, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6ceb);
        EXPECT(gbc.pc(), 0xc050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc04d), 0x1);
        EXPECT(gbc.readMem(0xc04e), 0xe7);
        EXPECT(gbc.readMem(0xc04f), 0x56);
        // 01 01F7
        gbc.setState(0x40cf, 0xf7a, 0x49e0, 0x5abc, 0xeff2, 0xf400, 0x0, 0x0);
        gbc.writeMem(0x40cf, { 0x1, 0x2b, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf7a);
        EXPECT(gbc.pc(), 0x40d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01F8
        gbc.setState(0x7a79, 0xa7bc, 0x4730, 0xd711, 0x7973, 0xfc25, 0x1, 0x0);
        gbc.writeMem(0x7a79, { 0x1, 0x1f, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa7bc);
        EXPECT(gbc.pc(), 0x7a7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 01F9
        gbc.setState(0x57bd, 0x685d, 0xf6a0, 0xfe23, 0xaf78, 0x766a, 0x1, 0x0);
        gbc.writeMem(0x57bd, { 0x1, 0xde, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x685d);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 01FA
        gbc.setState(0x8ed8, 0x75aa, 0xd980, 0x5332, 0x63c3, 0xae1b, 0x1, 0x0);
        gbc.writeMem(0x8ed8, { 0x1, 0x35, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x75aa);
        EXPECT(gbc.pc(), 0x8edb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ed8), 0x1);
        EXPECT(gbc.readMem(0x8ed9), 0x35);
        EXPECT(gbc.readMem(0x8eda), 0xf2);
        // 01 01FB
        gbc.setState(0x62f7, 0xc1d1, 0x7d0, 0x5ca0, 0xe4d8, 0xe5a8, 0x0, 0x0);
        gbc.writeMem(0x62f7, { 0x1, 0xaa, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc1d1);
        EXPECT(gbc.pc(), 0x62fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 01FC
        gbc.setState(0xe910, 0x6c1b, 0x510, 0x8701, 0xd5cf, 0xef94, 0x1, 0x1);
        gbc.writeMem(0xe910, { 0x1, 0x5a, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x6c1b);
        EXPECT(gbc.pc(), 0xe913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe910), 0x1);
        EXPECT(gbc.readMem(0xe911), 0x5a);
        EXPECT(gbc.readMem(0xe912), 0xe7);
        // 01 01FD
        gbc.setState(0x1a4, 0x428a, 0x2400, 0x72d, 0xbbdf, 0xdef7, 0x1, 0x0);
        gbc.writeMem(0x1a4, { 0x1, 0x1a, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x428a);
        EXPECT(gbc.pc(), 0x1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 01FE
        gbc.setState(0x9785, 0x4403, 0xf520, 0x94b7, 0x9e43, 0x1c8f, 0x0, 0x1);
        gbc.writeMem(0x9785, { 0x1, 0xdc, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4403);
        EXPECT(gbc.pc(), 0x9788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9785), 0x1);
        EXPECT(gbc.readMem(0x9786), 0xdc);
        EXPECT(gbc.readMem(0x9787), 0x64);
        // 01 01FF
        gbc.setState(0x5340, 0x10fa, 0xb720, 0x1d99, 0xf779, 0x5fba, 0x1, 0x1);
        gbc.writeMem(0x5340, { 0x1, 0x7a, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x10fa);
        EXPECT(gbc.pc(), 0x5343);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0200
        gbc.setState(0x514c, 0x4166, 0x8310, 0xa890, 0x2a87, 0x50f7, 0x1, 0x0);
        gbc.writeMem(0x514c, { 0x1, 0x4c, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4166);
        EXPECT(gbc.pc(), 0x514f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0201
        gbc.setState(0xe6a, 0x3461, 0x16f0, 0xf781, 0xe7c3, 0x3015, 0x1, 0x1);
        gbc.writeMem(0xe6a, { 0x1, 0x1b, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3461);
        EXPECT(gbc.pc(), 0xe6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0202
        gbc.setState(0x80e, 0xc4fa, 0x13b0, 0xa6d2, 0xbf08, 0xbf12, 0x0, 0x1);
        gbc.writeMem(0x80e, { 0x1, 0xd4, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0203
        gbc.setState(0xb730, 0xd1a9, 0x4430, 0x7dec, 0x66a7, 0x6f2a, 0x1, 0x0);
        gbc.writeMem(0xb730, { 0x1, 0x56, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd1a9);
        EXPECT(gbc.pc(), 0xb733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb730), 0x1);
        EXPECT(gbc.readMem(0xb731), 0x56);
        EXPECT(gbc.readMem(0xb732), 0x8e);
        // 01 0204
        gbc.setState(0xcd0b, 0xcc33, 0xaea0, 0xec51, 0xb317, 0x7dee, 0x0, 0x1);
        gbc.writeMem(0xcd0b, { 0x1, 0xed, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcc33);
        EXPECT(gbc.pc(), 0xcd0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd0b), 0x1);
        EXPECT(gbc.readMem(0xcd0c), 0xed);
        EXPECT(gbc.readMem(0xcd0d), 0xc4);
        // 01 0205
        gbc.setState(0x50e9, 0x201e, 0x1110, 0xe2a5, 0x5722, 0x12ca, 0x0, 0x0);
        gbc.writeMem(0x50e9, { 0x1, 0xb8, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x201e);
        EXPECT(gbc.pc(), 0x50ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0206
        gbc.setState(0xb760, 0x2495, 0xc7a0, 0x45fc, 0x9e7c, 0x1174, 0x0, 0x0);
        gbc.writeMem(0xb760, { 0x1, 0xcb, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2495);
        EXPECT(gbc.pc(), 0xb763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb760), 0x1);
        EXPECT(gbc.readMem(0xb761), 0xcb);
        EXPECT(gbc.readMem(0xb762), 0x6a);
        // 01 0207
        gbc.setState(0x9630, 0xbc78, 0xdd00, 0xc846, 0xc556, 0x692a, 0x0, 0x1);
        gbc.writeMem(0x9630, { 0x1, 0x13, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xbc78);
        EXPECT(gbc.pc(), 0x9633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9630), 0x1);
        EXPECT(gbc.readMem(0x9631), 0x13);
        EXPECT(gbc.readMem(0x9632), 0xff);
        // 01 0208
        gbc.setState(0xece4, 0x8830, 0xcaa0, 0xd806, 0xde20, 0xc204, 0x1, 0x1);
        gbc.writeMem(0xece4, { 0x1, 0x31, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8830);
        EXPECT(gbc.pc(), 0xece7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece4), 0x1);
        EXPECT(gbc.readMem(0xece5), 0x31);
        EXPECT(gbc.readMem(0xece6), 0x11);
        // 01 0209
        gbc.setState(0x5a41, 0x676b, 0x9010, 0x336f, 0x3c08, 0xb301, 0x0, 0x1);
        gbc.writeMem(0x5a41, { 0x1, 0xe5, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x676b);
        EXPECT(gbc.pc(), 0x5a44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 020A
        gbc.setState(0xd6d1, 0x4423, 0xe9e0, 0xaba9, 0x6a98, 0xd0a, 0x0, 0x1);
        gbc.writeMem(0xd6d1, { 0x1, 0xb1, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x4423);
        EXPECT(gbc.pc(), 0xd6d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6d1), 0x1);
        EXPECT(gbc.readMem(0xd6d2), 0xb1);
        EXPECT(gbc.readMem(0xd6d3), 0xcc);
        // 01 020B
        gbc.setState(0x3a65, 0x2469, 0x9e50, 0xd9f0, 0xd8b9, 0xcf58, 0x1, 0x1);
        gbc.writeMem(0x3a65, { 0x1, 0xa3, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2469);
        EXPECT(gbc.pc(), 0x3a68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 020C
        gbc.setState(0x7cf1, 0xcac7, 0xe3a0, 0xa72b, 0x149, 0x26, 0x1, 0x0);
        gbc.writeMem(0x7cf1, { 0x1, 0x3a, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcac7);
        EXPECT(gbc.pc(), 0x7cf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 020D
        gbc.setState(0x46e, 0xf55d, 0xb10, 0xdfbe, 0xb77, 0x2192, 0x0, 0x0);
        gbc.writeMem(0x46e, { 0x1, 0x8c, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xf55d);
        EXPECT(gbc.pc(), 0x471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 020E
        gbc.setState(0xb19e, 0x7e0b, 0x2d70, 0xf4d9, 0x55dc, 0x27fe, 0x1, 0x1);
        gbc.writeMem(0xb19e, { 0x1, 0xb1, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7e0b);
        EXPECT(gbc.pc(), 0xb1a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb19e), 0x1);
        EXPECT(gbc.readMem(0xb19f), 0xb1);
        EXPECT(gbc.readMem(0xb1a0), 0x77);
        // 01 020F
        gbc.setState(0xb2b, 0xa7d4, 0xfbc0, 0x9cfa, 0x10d5, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0xb2b, { 0x1, 0xda, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa7d4);
        EXPECT(gbc.pc(), 0xb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0210
        gbc.setState(0x26e4, 0x65b1, 0xd0c0, 0x5ec5, 0x8b6b, 0xce2d, 0x1, 0x0);
        gbc.writeMem(0x26e4, { 0x1, 0x6c, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x65b1);
        EXPECT(gbc.pc(), 0x26e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0211
        gbc.setState(0x962, 0x2d1, 0x4ac0, 0xb71, 0x22b3, 0x2bf6, 0x0, 0x1);
        gbc.writeMem(0x962, { 0x1, 0xe5, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x2d1);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0212
        gbc.setState(0xbcba, 0x1de1, 0x6920, 0x1499, 0x708a, 0xcf83, 0x1, 0x0);
        gbc.writeMem(0xbcba, { 0x1, 0xa5, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x1de1);
        EXPECT(gbc.pc(), 0xbcbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcba), 0x1);
        EXPECT(gbc.readMem(0xbcbb), 0xa5);
        EXPECT(gbc.readMem(0xbcbc), 0xa2);
        // 01 0213
        gbc.setState(0x511f, 0x2a7e, 0xb1a0, 0x11cc, 0x5f46, 0x3f54, 0x1, 0x1);
        gbc.writeMem(0x511f, { 0x1, 0x57, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x2a7e);
        EXPECT(gbc.pc(), 0x5122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0214
        gbc.setState(0xd644, 0xc720, 0xfff0, 0x438d, 0xcf44, 0x3dea, 0x0, 0x0);
        gbc.writeMem(0xd644, { 0x1, 0xae, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xc720);
        EXPECT(gbc.pc(), 0xd647);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd644), 0x1);
        EXPECT(gbc.readMem(0xd645), 0xae);
        EXPECT(gbc.readMem(0xd646), 0x21);
        // 01 0215
        gbc.setState(0xeae7, 0xc80c, 0xdad0, 0x1ff9, 0xeecd, 0xd065, 0x1, 0x0);
        gbc.writeMem(0xeae7, { 0x1, 0x44, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc80c);
        EXPECT(gbc.pc(), 0xeaea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae7), 0x1);
        EXPECT(gbc.readMem(0xeae8), 0x44);
        EXPECT(gbc.readMem(0xeae9), 0xae);
        // 01 0216
        gbc.setState(0xe130, 0x8fc5, 0x50, 0x34c3, 0x11d7, 0xd376, 0x0, 0x0);
        gbc.writeMem(0xe130, { 0x1, 0xd8, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8fc5);
        EXPECT(gbc.pc(), 0xe133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe130), 0x1);
        EXPECT(gbc.readMem(0xe131), 0xd8);
        EXPECT(gbc.readMem(0xe132), 0x79);
        // 01 0217
        gbc.setState(0x5c52, 0xd937, 0xd950, 0xee16, 0xa54b, 0xf41, 0x1, 0x0);
        gbc.writeMem(0x5c52, { 0x1, 0x4f, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xd937);
        EXPECT(gbc.pc(), 0x5c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0218
        gbc.setState(0x4a46, 0x3e2b, 0x5d50, 0xd1fd, 0x93bd, 0x4b9a, 0x1, 0x1);
        gbc.writeMem(0x4a46, { 0x1, 0xa4, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3e2b);
        EXPECT(gbc.pc(), 0x4a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0219
        gbc.setState(0xd3d9, 0xda33, 0xf7e0, 0xfc6d, 0xbe72, 0xde50, 0x0, 0x1);
        gbc.writeMem(0xd3d9, { 0x1, 0x88, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xda33);
        EXPECT(gbc.pc(), 0xd3dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3d9), 0x1);
        EXPECT(gbc.readMem(0xd3da), 0x88);
        EXPECT(gbc.readMem(0xd3db), 0xd8);
        // 01 021A
        gbc.setState(0xc92d, 0xdca6, 0xb210, 0xa870, 0xe354, 0x8281, 0x0, 0x0);
        gbc.writeMem(0xc92d, { 0x1, 0x38, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdca6);
        EXPECT(gbc.pc(), 0xc930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92d), 0x1);
        EXPECT(gbc.readMem(0xc92e), 0x38);
        EXPECT(gbc.readMem(0xc92f), 0x76);
        // 01 021B
        gbc.setState(0x47e1, 0xf25, 0x2010, 0xbcf5, 0xba81, 0xd00f, 0x0, 0x0);
        gbc.writeMem(0x47e1, { 0x1, 0xc0, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf25);
        EXPECT(gbc.pc(), 0x47e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 021C
        gbc.setState(0x1421, 0x6d98, 0x4d50, 0x9740, 0x5c9c, 0x30d0, 0x0, 0x1);
        gbc.writeMem(0x1421, { 0x1, 0x77, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6d98);
        EXPECT(gbc.pc(), 0x1424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 021D
        gbc.setState(0xaff8, 0x84ce, 0xdef0, 0x9f3c, 0xdc26, 0x6300, 0x1, 0x1);
        gbc.writeMem(0xaff8, { 0x1, 0x95, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x84ce);
        EXPECT(gbc.pc(), 0xaffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff8), 0x1);
        EXPECT(gbc.readMem(0xaff9), 0x95);
        EXPECT(gbc.readMem(0xaffa), 0xa2);
        // 01 021E
        gbc.setState(0x1e1b, 0xf2d1, 0x7870, 0x5915, 0xab8d, 0x2fca, 0x1, 0x0);
        gbc.writeMem(0x1e1b, { 0x1, 0x3a, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xf2d1);
        EXPECT(gbc.pc(), 0x1e1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 021F
        gbc.setState(0x9f2e, 0xbfc0, 0x75c0, 0x7920, 0x57d6, 0xc943, 0x0, 0x1);
        gbc.writeMem(0x9f2e, { 0x1, 0xdb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xbfc0);
        EXPECT(gbc.pc(), 0x9f31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f2e), 0x1);
        EXPECT(gbc.readMem(0x9f2f), 0xdb);
        EXPECT(gbc.readMem(0x9f30), 0x71);
        // 01 0220
        gbc.setState(0x31a2, 0x6ae8, 0x66d0, 0x9490, 0x441e, 0x867c, 0x0, 0x0);
        gbc.writeMem(0x31a2, { 0x1, 0x8a, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6ae8);
        EXPECT(gbc.pc(), 0x31a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0221
        gbc.setState(0x405a, 0x397, 0xc9f0, 0x1880, 0xea02, 0x753b, 0x0, 0x0);
        gbc.writeMem(0x405a, { 0x1, 0x61, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x397);
        EXPECT(gbc.pc(), 0x405d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0222
        gbc.setState(0xd77f, 0x4486, 0x1670, 0x1b2, 0xad1a, 0xc9a3, 0x0, 0x1);
        gbc.writeMem(0xd77f, { 0x1, 0x86, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4486);
        EXPECT(gbc.pc(), 0xd782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd77f), 0x1);
        EXPECT(gbc.readMem(0xd780), 0x86);
        EXPECT(gbc.readMem(0xd781), 0x69);
        // 01 0223
        gbc.setState(0xd212, 0xed92, 0x5520, 0xa96, 0x4f52, 0xc271, 0x0, 0x1);
        gbc.writeMem(0xd212, { 0x1, 0x2f, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xed92);
        EXPECT(gbc.pc(), 0xd215);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0x1);
        EXPECT(gbc.readMem(0xd213), 0x2f);
        EXPECT(gbc.readMem(0xd214), 0xd8);
        // 01 0224
        gbc.setState(0x7e09, 0x780, 0x7ec0, 0xa0c, 0xf703, 0xdc79, 0x1, 0x1);
        gbc.writeMem(0x7e09, { 0x1, 0x9a, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x780);
        EXPECT(gbc.pc(), 0x7e0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0225
        gbc.setState(0xbd4e, 0x640f, 0xcd10, 0xd838, 0xb72a, 0x2921, 0x0, 0x1);
        gbc.writeMem(0xbd4e, { 0x1, 0x7d, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x640f);
        EXPECT(gbc.pc(), 0xbd51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd4e), 0x1);
        EXPECT(gbc.readMem(0xbd4f), 0x7d);
        EXPECT(gbc.readMem(0xbd50), 0xa8);
        // 01 0226
        gbc.setState(0x5bf1, 0x2522, 0xfeb0, 0xf127, 0x74a, 0xb46b, 0x0, 0x0);
        gbc.writeMem(0x5bf1, { 0x1, 0x4b, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2522);
        EXPECT(gbc.pc(), 0x5bf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0227
        gbc.setState(0x62aa, 0x3e4f, 0x5f50, 0x4c6f, 0x4b8c, 0x9a1a, 0x0, 0x1);
        gbc.writeMem(0x62aa, { 0x1, 0x33, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3e4f);
        EXPECT(gbc.pc(), 0x62ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0228
        gbc.setState(0x2ec4, 0xef1, 0x5430, 0x3ca9, 0x4f48, 0x5b43, 0x0, 0x1);
        gbc.writeMem(0x2ec4, { 0x1, 0xf8, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xef1);
        EXPECT(gbc.pc(), 0x2ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0229
        gbc.setState(0xefa6, 0xbec3, 0x4160, 0x357b, 0xcc1c, 0xda21, 0x1, 0x1);
        gbc.writeMem(0xefa6, { 0x1, 0xbf, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbec3);
        EXPECT(gbc.pc(), 0xefa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa6), 0x1);
        EXPECT(gbc.readMem(0xefa7), 0xbf);
        EXPECT(gbc.readMem(0xefa8), 0xf0);
        // 01 022A
        gbc.setState(0xecff, 0x1d3c, 0x8220, 0xc39c, 0xad7e, 0x3d56, 0x1, 0x0);
        gbc.writeMem(0xecff, { 0x1, 0x23, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x1d3c);
        EXPECT(gbc.pc(), 0xed02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecff), 0x1);
        EXPECT(gbc.readMem(0xed00), 0x23);
        EXPECT(gbc.readMem(0xed01), 0x84);
        // 01 022B
        gbc.setState(0xcfcf, 0x54e5, 0xde10, 0x4e60, 0x9849, 0x8306, 0x0, 0x1);
        gbc.writeMem(0xcfcf, { 0x1, 0x82, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x54e5);
        EXPECT(gbc.pc(), 0xcfd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcf), 0x1);
        EXPECT(gbc.readMem(0xcfd0), 0x82);
        EXPECT(gbc.readMem(0xcfd1), 0xdc);
        // 01 022C
        gbc.setState(0xb7, 0x9a67, 0xae0, 0x202d, 0x8425, 0xad0, 0x0, 0x0);
        gbc.writeMem(0xb7, { 0x1, 0x96, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9a67);
        EXPECT(gbc.pc(), 0xba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 022D
        gbc.setState(0xb848, 0xc9f2, 0xcf40, 0x5267, 0xb0fb, 0x2d28, 0x0, 0x1);
        gbc.writeMem(0xb848, { 0x1, 0xcc, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc9f2);
        EXPECT(gbc.pc(), 0xb84b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb848), 0x1);
        EXPECT(gbc.readMem(0xb849), 0xcc);
        EXPECT(gbc.readMem(0xb84a), 0xa3);
        // 01 022E
        gbc.setState(0x6cc2, 0xa74e, 0xf5c0, 0xfd47, 0xc56e, 0x4a98, 0x1, 0x1);
        gbc.writeMem(0x6cc2, { 0x1, 0x5d, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa74e);
        EXPECT(gbc.pc(), 0x6cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 022F
        gbc.setState(0x300a, 0x51c1, 0xcf20, 0xc784, 0xd97, 0xce74, 0x1, 0x1);
        gbc.writeMem(0x300a, { 0x1, 0x95, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x51c1);
        EXPECT(gbc.pc(), 0x300d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0230
        gbc.setState(0x77e4, 0xe364, 0xd170, 0xddc0, 0x9632, 0x1caa, 0x1, 0x1);
        gbc.writeMem(0x77e4, { 0x1, 0xd8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe364);
        EXPECT(gbc.pc(), 0x77e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0231
        gbc.setState(0xae06, 0xfc4d, 0xab00, 0x1bfe, 0x5fc1, 0xe3, 0x1, 0x0);
        gbc.writeMem(0xae06, { 0x1, 0xfe, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfc4d);
        EXPECT(gbc.pc(), 0xae09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae06), 0x1);
        EXPECT(gbc.readMem(0xae07), 0xfe);
        EXPECT(gbc.readMem(0xae08), 0x3a);
        // 01 0232
        gbc.setState(0x3215, 0x1aa2, 0x79e0, 0xa912, 0x29be, 0x6995, 0x1, 0x1);
        gbc.writeMem(0x3215, { 0x1, 0x16, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1aa2);
        EXPECT(gbc.pc(), 0x3218);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0233
        gbc.setState(0x72cc, 0xd70b, 0x9340, 0x9f07, 0xfb3f, 0x7568, 0x1, 0x0);
        gbc.writeMem(0x72cc, { 0x1, 0xdc, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xd70b);
        EXPECT(gbc.pc(), 0x72cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0234
        gbc.setState(0x6132, 0x4926, 0xe780, 0x8cdc, 0x212b, 0x7036, 0x0, 0x1);
        gbc.writeMem(0x6132, { 0x1, 0x6d, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4926);
        EXPECT(gbc.pc(), 0x6135);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0235
        gbc.setState(0x982, 0xd04c, 0xd950, 0x26a6, 0x775d, 0x3af5, 0x1, 0x0);
        gbc.writeMem(0x982, { 0x1, 0x8e, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0236
        gbc.setState(0x22f3, 0x1df8, 0x5f20, 0xa42, 0x2dc8, 0x82b3, 0x1, 0x0);
        gbc.writeMem(0x22f3, { 0x1, 0x6a, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1df8);
        EXPECT(gbc.pc(), 0x22f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0238
        gbc.setState(0x8444, 0x364d, 0xe0b0, 0xd1a0, 0x1b32, 0xccf, 0x0, 0x0);
        gbc.writeMem(0x8444, { 0x1, 0xfa, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x364d);
        EXPECT(gbc.pc(), 0x8447);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8444), 0x1);
        EXPECT(gbc.readMem(0x8445), 0xfa);
        EXPECT(gbc.readMem(0x8446), 0xd8);
        // 01 0239
        gbc.setState(0xeb3c, 0xd947, 0xd4f0, 0x5044, 0x7aa2, 0xc0c4, 0x1, 0x1);
        gbc.writeMem(0xeb3c, { 0x1, 0x5d, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xd947);
        EXPECT(gbc.pc(), 0xeb3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb3c), 0x1);
        EXPECT(gbc.readMem(0xeb3d), 0x5d);
        EXPECT(gbc.readMem(0xeb3e), 0x6b);
        // 01 023A
        gbc.setState(0x91c3, 0xe506, 0xcb60, 0x28ce, 0xe514, 0xa412, 0x1, 0x0);
        gbc.writeMem(0x91c3, { 0x1, 0x44, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe506);
        EXPECT(gbc.pc(), 0x91c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91c3), 0x1);
        EXPECT(gbc.readMem(0x91c4), 0x44);
        EXPECT(gbc.readMem(0x91c5), 0x72);
        // 01 023B
        gbc.setState(0xa3bb, 0x3100, 0xefe0, 0x6380, 0x23d, 0x8ff5, 0x1, 0x1);
        gbc.writeMem(0xa3bb, { 0x1, 0x9d, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x3100);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3bb), 0x1);
        EXPECT(gbc.readMem(0xa3bc), 0x9d);
        EXPECT(gbc.readMem(0xa3bd), 0xbc);
        // 01 023C
        gbc.setState(0x40b7, 0x7351, 0x10, 0x4b67, 0xef81, 0x621d, 0x1, 0x0);
        gbc.writeMem(0x40b7, { 0x1, 0x8b, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7351);
        EXPECT(gbc.pc(), 0x40ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 023E
        gbc.setState(0x969c, 0x2a02, 0x36a0, 0x52ca, 0x6387, 0x8f43, 0x1, 0x1);
        gbc.writeMem(0x969c, { 0x1, 0x3f, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2a02);
        EXPECT(gbc.pc(), 0x969f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969c), 0x1);
        EXPECT(gbc.readMem(0x969d), 0x3f);
        EXPECT(gbc.readMem(0x969e), 0x6f);
        // 01 023F
        gbc.setState(0x52de, 0xcbfd, 0x2f00, 0x938, 0xa4ba, 0x76a7, 0x0, 0x1);
        gbc.writeMem(0x52de, { 0x1, 0x9e, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0x52e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0240
        gbc.setState(0xa804, 0x35d8, 0xba20, 0x41b2, 0x23be, 0x11ac, 0x1, 0x0);
        gbc.writeMem(0xa804, { 0x1, 0x1e, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0xa807);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa804), 0x1);
        EXPECT(gbc.readMem(0xa805), 0x1e);
        EXPECT(gbc.readMem(0xa806), 0x9a);
        // 01 0241
        gbc.setState(0x4971, 0x97b9, 0x68f0, 0x7163, 0x5a2f, 0xfebf, 0x1, 0x1);
        gbc.writeMem(0x4971, { 0x1, 0xc2, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x97b9);
        EXPECT(gbc.pc(), 0x4974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0242
        gbc.setState(0x6e6a, 0xba3a, 0x53a0, 0x3ec2, 0x1705, 0x55d4, 0x0, 0x0);
        gbc.writeMem(0x6e6a, { 0x1, 0x51, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xba3a);
        EXPECT(gbc.pc(), 0x6e6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0243
        gbc.setState(0xca12, 0x67b8, 0x910, 0x874, 0xa71c, 0x4c5b, 0x0, 0x0);
        gbc.writeMem(0xca12, { 0x1, 0xd0, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x67b8);
        EXPECT(gbc.pc(), 0xca15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca12), 0x1);
        EXPECT(gbc.readMem(0xca13), 0xd0);
        EXPECT(gbc.readMem(0xca14), 0xbb);
        // 01 0244
        gbc.setState(0xce98, 0xe6c2, 0x8660, 0x13fb, 0x1d05, 0x2e33, 0x0, 0x1);
        gbc.writeMem(0xce98, { 0x1, 0x7e, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe6c2);
        EXPECT(gbc.pc(), 0xce9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce98), 0x1);
        EXPECT(gbc.readMem(0xce99), 0x7e);
        EXPECT(gbc.readMem(0xce9a), 0x75);
        // 01 0245
        gbc.setState(0x4bb3, 0xbdbb, 0x4520, 0x705, 0x5490, 0xde81, 0x1, 0x0);
        gbc.writeMem(0x4bb3, { 0x1, 0x98, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xbdbb);
        EXPECT(gbc.pc(), 0x4bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0246
        gbc.setState(0x5ad1, 0x46f6, 0xd910, 0x71e3, 0xfed8, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0x5ad1, { 0x1, 0xbd, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x46f6);
        EXPECT(gbc.pc(), 0x5ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0247
        gbc.setState(0x1ff, 0x7d78, 0xe370, 0x1f8f, 0xca83, 0xec97, 0x1, 0x1);
        gbc.writeMem(0x1ff, { 0x1, 0x74, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7d78);
        EXPECT(gbc.pc(), 0x202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0248
        gbc.setState(0x717e, 0x729c, 0x5c70, 0x7208, 0x6031, 0x532b, 0x1, 0x1);
        gbc.writeMem(0x717e, { 0x1, 0x4d, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x729c);
        EXPECT(gbc.pc(), 0x7181);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 024A
        gbc.setState(0xaf3c, 0xa1d, 0xac20, 0x6101, 0xa51e, 0x3eb, 0x1, 0x1);
        gbc.writeMem(0xaf3c, { 0x1, 0xf5, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa1d);
        EXPECT(gbc.pc(), 0xaf3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf3c), 0x1);
        EXPECT(gbc.readMem(0xaf3d), 0xf5);
        EXPECT(gbc.readMem(0xaf3e), 0xcb);
        // 01 024B
        gbc.setState(0xa381, 0x50b3, 0x3b60, 0xf437, 0x862e, 0xe837, 0x1, 0x1);
        gbc.writeMem(0xa381, { 0x1, 0xd9, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x50b3);
        EXPECT(gbc.pc(), 0xa384);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa381), 0x1);
        EXPECT(gbc.readMem(0xa382), 0xd9);
        EXPECT(gbc.readMem(0xa383), 0x93);
        // 01 024D
        gbc.setState(0x2619, 0x4dcf, 0x2910, 0x44c3, 0x5f1d, 0xf0e9, 0x1, 0x1);
        gbc.writeMem(0x2619, { 0x1, 0xc6, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x4dcf);
        EXPECT(gbc.pc(), 0x261c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 024F
        gbc.setState(0xebff, 0x4de4, 0x9a50, 0xbaa0, 0xce3d, 0x75ec, 0x1, 0x1);
        gbc.writeMem(0xebff, { 0x1, 0x3c, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4de4);
        EXPECT(gbc.pc(), 0xec02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebff), 0x1);
        EXPECT(gbc.readMem(0xec00), 0x3c);
        EXPECT(gbc.readMem(0xec01), 0x3a);
        // 01 0250
        gbc.setState(0x9d06, 0x405a, 0x8790, 0x3931, 0xc170, 0x153b, 0x1, 0x1);
        gbc.writeMem(0x9d06, { 0x1, 0x1a, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x405a);
        EXPECT(gbc.pc(), 0x9d09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d06), 0x1);
        EXPECT(gbc.readMem(0x9d07), 0x1a);
        EXPECT(gbc.readMem(0x9d08), 0x19);
        // 01 0251
        gbc.setState(0xd304, 0xd275, 0xc200, 0x9aaf, 0x73f7, 0x5775, 0x0, 0x0);
        gbc.writeMem(0xd304, { 0x1, 0xa7, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd275);
        EXPECT(gbc.pc(), 0xd307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd304), 0x1);
        EXPECT(gbc.readMem(0xd305), 0xa7);
        EXPECT(gbc.readMem(0xd306), 0xe8);
        // 01 0252
        gbc.setState(0xc20f, 0x458e, 0xcdc0, 0x9231, 0x3bba, 0x6632, 0x1, 0x1);
        gbc.writeMem(0xc20f, { 0x1, 0x43, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x458e);
        EXPECT(gbc.pc(), 0xc212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc20f), 0x1);
        EXPECT(gbc.readMem(0xc210), 0x43);
        EXPECT(gbc.readMem(0xc211), 0x63);
        // 01 0253
        gbc.setState(0x7036, 0x3beb, 0x4800, 0xf892, 0x206b, 0x21ef, 0x0, 0x1);
        gbc.writeMem(0x7036, { 0x1, 0xb1, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3beb);
        EXPECT(gbc.pc(), 0x7039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0254
        gbc.setState(0x45b3, 0xf397, 0x48b0, 0xf5ad, 0xca26, 0x2399, 0x1, 0x1);
        gbc.writeMem(0x45b3, { 0x1, 0xfd, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf397);
        EXPECT(gbc.pc(), 0x45b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0255
        gbc.setState(0xd001, 0x4e06, 0xed00, 0x10db, 0xd138, 0xcc40, 0x1, 0x1);
        gbc.writeMem(0xd001, { 0x1, 0xa7, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4e06);
        EXPECT(gbc.pc(), 0xd004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd001), 0x1);
        EXPECT(gbc.readMem(0xd002), 0xa7);
        EXPECT(gbc.readMem(0xd003), 0x23);
        // 01 0256
        gbc.setState(0x8d8f, 0xd8df, 0x6690, 0x8f70, 0x59b3, 0x682f, 0x1, 0x1);
        gbc.writeMem(0x8d8f, { 0x1, 0xd7, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd8df);
        EXPECT(gbc.pc(), 0x8d92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d8f), 0x1);
        EXPECT(gbc.readMem(0x8d90), 0xd7);
        EXPECT(gbc.readMem(0x8d91), 0x21);
        // 01 0257
        gbc.setState(0x2b70, 0x474a, 0x9f70, 0x7edf, 0x8ed7, 0xc0ed, 0x0, 0x0);
        gbc.writeMem(0x2b70, { 0x1, 0x7, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x474a);
        EXPECT(gbc.pc(), 0x2b73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0258
        gbc.setState(0x49c7, 0xe1c, 0x5480, 0x4db3, 0xf8aa, 0xe442, 0x1, 0x0);
        gbc.writeMem(0x49c7, { 0x1, 0x70, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe1c);
        EXPECT(gbc.pc(), 0x49ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0259
        gbc.setState(0xb936, 0x7b84, 0x5e50, 0xa977, 0xb7d2, 0xb433, 0x1, 0x1);
        gbc.writeMem(0xb936, { 0x1, 0x76, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0xb939);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb936), 0x1);
        EXPECT(gbc.readMem(0xb937), 0x76);
        EXPECT(gbc.readMem(0xb938), 0x2e);
        // 01 025A
        gbc.setState(0x5649, 0x5861, 0x32f0, 0x3b69, 0x16c5, 0x9460, 0x0, 0x0);
        gbc.writeMem(0x5649, { 0x1, 0xaf, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x5861);
        EXPECT(gbc.pc(), 0x564c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 025C
        gbc.setState(0xd991, 0xb367, 0x640, 0x34bc, 0x3f41, 0x2c9c, 0x0, 0x0);
        gbc.writeMem(0xd991, { 0x1, 0x62, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xb367);
        EXPECT(gbc.pc(), 0xd994);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd991), 0x1);
        EXPECT(gbc.readMem(0xd992), 0x62);
        EXPECT(gbc.readMem(0xd993), 0xf9);
        // 01 025D
        gbc.setState(0x664, 0x419a, 0xc9e0, 0xd19d, 0x58e0, 0xbc9d, 0x1, 0x0);
        gbc.writeMem(0x664, { 0x1, 0x50, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x419a);
        EXPECT(gbc.pc(), 0x667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 025E
        gbc.setState(0x9955, 0xfd55, 0xecf0, 0xffea, 0x2100, 0x7a5e, 0x0, 0x0);
        gbc.writeMem(0x9955, { 0x1, 0xb2, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfd55);
        EXPECT(gbc.pc(), 0x9958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9955), 0x1);
        EXPECT(gbc.readMem(0x9956), 0xb2);
        EXPECT(gbc.readMem(0x9957), 0x33);
        // 01 025F
        gbc.setState(0x4e8f, 0xdacf, 0x4870, 0xe976, 0x133a, 0x89d4, 0x0, 0x1);
        gbc.writeMem(0x4e8f, { 0x1, 0x70, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdacf);
        EXPECT(gbc.pc(), 0x4e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0260
        gbc.setState(0x7cd1, 0x3a33, 0xc480, 0x1d8a, 0xed52, 0xbaa0, 0x0, 0x0);
        gbc.writeMem(0x7cd1, { 0x1, 0x30, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3a33);
        EXPECT(gbc.pc(), 0x7cd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0261
        gbc.setState(0xfbe, 0xac1, 0xf8d0, 0xd8ed, 0x9edc, 0x1f80, 0x0, 0x1);
        gbc.writeMem(0xfbe, { 0x1, 0x33, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xac1);
        EXPECT(gbc.pc(), 0xfc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0262
        gbc.setState(0x9776, 0xefc4, 0x1f90, 0x1d04, 0x216d, 0xf73c, 0x0, 0x1);
        gbc.writeMem(0x9776, { 0x1, 0x68, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xefc4);
        EXPECT(gbc.pc(), 0x9779);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9776), 0x1);
        EXPECT(gbc.readMem(0x9777), 0x68);
        EXPECT(gbc.readMem(0x9778), 0x2f);
        // 01 0263
        gbc.setState(0xa3aa, 0x2e6a, 0x8ac0, 0x8ba3, 0x7ecd, 0x2f05, 0x1, 0x0);
        gbc.writeMem(0xa3aa, { 0x1, 0x7, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2e6a);
        EXPECT(gbc.pc(), 0xa3ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3aa), 0x1);
        EXPECT(gbc.readMem(0xa3ab), 0x7);
        EXPECT(gbc.readMem(0xa3ac), 0x55);
        // 01 0264
        gbc.setState(0x5343, 0x41cb, 0x8a0, 0xfbfb, 0xfe86, 0x1219, 0x1, 0x0);
        gbc.writeMem(0x5343, { 0x1, 0x5d, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x41cb);
        EXPECT(gbc.pc(), 0x5346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0265
        gbc.setState(0x2bce, 0x2af1, 0xc660, 0xd9cb, 0xb44f, 0xcdf2, 0x0, 0x1);
        gbc.writeMem(0x2bce, { 0x1, 0x25, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2af1);
        EXPECT(gbc.pc(), 0x2bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0266
        gbc.setState(0x4b41, 0x9aed, 0xe800, 0xbe4b, 0x17ca, 0x5076, 0x0, 0x1);
        gbc.writeMem(0x4b41, { 0x1, 0x3a, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9aed);
        EXPECT(gbc.pc(), 0x4b44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0268
        gbc.setState(0x4123, 0xcea2, 0xae20, 0xf194, 0x1585, 0x9b83, 0x0, 0x1);
        gbc.writeMem(0x4123, { 0x1, 0x74, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xcea2);
        EXPECT(gbc.pc(), 0x4126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0269
        gbc.setState(0x7ab4, 0x441d, 0x300, 0x6d39, 0xb8b1, 0x24c7, 0x1, 0x1);
        gbc.writeMem(0x7ab4, { 0x1, 0x2b, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x441d);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 026A
        gbc.setState(0xe807, 0x365d, 0xb140, 0x3096, 0x5fc0, 0xd723, 0x1, 0x0);
        gbc.writeMem(0xe807, { 0x1, 0x38, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x365d);
        EXPECT(gbc.pc(), 0xe80a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe807), 0x1);
        EXPECT(gbc.readMem(0xe808), 0x38);
        EXPECT(gbc.readMem(0xe809), 0xde);
        // 01 026B
        gbc.setState(0x3445, 0xac66, 0x57a0, 0xda38, 0xd371, 0x63e4, 0x0, 0x1);
        gbc.writeMem(0x3445, { 0x1, 0x64, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xac66);
        EXPECT(gbc.pc(), 0x3448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 026C
        gbc.setState(0x9a69, 0x383d, 0xb820, 0x68d0, 0x48c2, 0x51c6, 0x0, 0x1);
        gbc.writeMem(0x9a69, { 0x1, 0x12, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x383d);
        EXPECT(gbc.pc(), 0x9a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a69), 0x1);
        EXPECT(gbc.readMem(0x9a6a), 0x12);
        EXPECT(gbc.readMem(0x9a6b), 0xa7);
        // 01 026D
        gbc.setState(0xef5d, 0x738b, 0x10d0, 0xc6c, 0x4b40, 0x905f, 0x1, 0x1);
        gbc.writeMem(0xef5d, { 0x1, 0x7a, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x738b);
        EXPECT(gbc.pc(), 0xef60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5d), 0x1);
        EXPECT(gbc.readMem(0xef5e), 0x7a);
        EXPECT(gbc.readMem(0xef5f), 0xb4);
        // 01 026E
        gbc.setState(0x822, 0x755c, 0x95a0, 0x28ef, 0xee1f, 0x23e3, 0x0, 0x1);
        gbc.writeMem(0x822, { 0x1, 0xc, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x755c);
        EXPECT(gbc.pc(), 0x825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 026F
        gbc.setState(0x27f2, 0x8fb9, 0xe6a0, 0x3001, 0xf6, 0x394e, 0x1, 0x1);
        gbc.writeMem(0x27f2, { 0x1, 0x3c, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x8fb9);
        EXPECT(gbc.pc(), 0x27f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0270
        gbc.setState(0x3de, 0xbf14, 0xc3e0, 0x91df, 0xe006, 0x1da4, 0x1, 0x0);
        gbc.writeMem(0x3de, { 0x1, 0x59, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xbf14);
        EXPECT(gbc.pc(), 0x3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0272
        gbc.setState(0x6db8, 0xe705, 0x3730, 0x58d2, 0xb75b, 0x793d, 0x1, 0x1);
        gbc.writeMem(0x6db8, { 0x1, 0xa8, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe705);
        EXPECT(gbc.pc(), 0x6dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0273
        gbc.setState(0x2b0a, 0x5585, 0x810, 0xf192, 0x7697, 0xb48f, 0x1, 0x1);
        gbc.writeMem(0x2b0a, { 0x1, 0xdf, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5585);
        EXPECT(gbc.pc(), 0x2b0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0274
        gbc.setState(0x11a, 0x73f, 0xfde0, 0xafcb, 0xd95e, 0x1ff, 0x1, 0x0);
        gbc.writeMem(0x11a, { 0x1, 0x6e, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x11d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0275
        gbc.setState(0x7153, 0x38d1, 0x3b10, 0x1886, 0x3107, 0x2dee, 0x1, 0x0);
        gbc.writeMem(0x7153, { 0x1, 0xd8, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x38d1);
        EXPECT(gbc.pc(), 0x7156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0276
        gbc.setState(0xac79, 0x5a9b, 0xae20, 0x96a3, 0x8c3c, 0xf7f, 0x0, 0x1);
        gbc.writeMem(0xac79, { 0x1, 0xad, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x5a9b);
        EXPECT(gbc.pc(), 0xac7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac79), 0x1);
        EXPECT(gbc.readMem(0xac7a), 0xad);
        EXPECT(gbc.readMem(0xac7b), 0x2b);
        // 01 0277
        gbc.setState(0x93f1, 0x7fc3, 0xdb10, 0xef5a, 0xa7d6, 0x4efa, 0x0, 0x0);
        gbc.writeMem(0x93f1, { 0x1, 0x0, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7fc3);
        EXPECT(gbc.pc(), 0x93f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93f1), 0x1);
        EXPECT(gbc.readMem(0x93f2), 0x0);
        EXPECT(gbc.readMem(0x93f3), 0x46);
        // 01 0278
        gbc.setState(0x99c9, 0x78f, 0x54b0, 0x6483, 0xc8c7, 0x3f10, 0x0, 0x0);
        gbc.writeMem(0x99c9, { 0x1, 0x69, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x78f);
        EXPECT(gbc.pc(), 0x99cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99c9), 0x1);
        EXPECT(gbc.readMem(0x99ca), 0x69);
        EXPECT(gbc.readMem(0x99cb), 0x83);
        // 01 0279
        gbc.setState(0x9671, 0x2982, 0xf3d0, 0x5eb4, 0x7e12, 0x7e0, 0x1, 0x0);
        gbc.writeMem(0x9671, { 0x1, 0x75, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2982);
        EXPECT(gbc.pc(), 0x9674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9671), 0x1);
        EXPECT(gbc.readMem(0x9672), 0x75);
        EXPECT(gbc.readMem(0x9673), 0xbb);
        // 01 027A
        gbc.setState(0x4654, 0x8c5, 0x46b0, 0x8f0c, 0x46c3, 0x564c, 0x0, 0x0);
        gbc.writeMem(0x4654, { 0x1, 0x56, 0x4b });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8c5);
        EXPECT(gbc.pc(), 0x4657);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 027B
        gbc.setState(0x45af, 0xf1dc, 0x9080, 0xc194, 0x6e6b, 0x22f0, 0x1, 0x1);
        gbc.writeMem(0x45af, { 0x1, 0x84, 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf1dc);
        EXPECT(gbc.pc(), 0x45b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 027C
        gbc.setState(0xaa9a, 0xc7a7, 0xe890, 0xbdc6, 0x4f0f, 0x2201, 0x1, 0x0);
        gbc.writeMem(0xaa9a, { 0x1, 0xef, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc7a7);
        EXPECT(gbc.pc(), 0xaa9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa9a), 0x1);
        EXPECT(gbc.readMem(0xaa9b), 0xef);
        EXPECT(gbc.readMem(0xaa9c), 0xec);
        // 01 027D
        gbc.setState(0xe296, 0x692c, 0xb5e0, 0xbcca, 0x9de1, 0xbf7c, 0x0, 0x0);
        gbc.writeMem(0xe296, { 0x1, 0x10, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x692c);
        EXPECT(gbc.pc(), 0xe299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe296), 0x1);
        EXPECT(gbc.readMem(0xe297), 0x10);
        EXPECT(gbc.readMem(0xe298), 0x17);
        // 01 027E
        gbc.setState(0x731, 0x304a, 0xe8b0, 0x10f6, 0x5a6d, 0x31ba, 0x1, 0x1);
        gbc.writeMem(0x731, { 0x1, 0x84, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x304a);
        EXPECT(gbc.pc(), 0x734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 027F
        gbc.setState(0xb9a1, 0x767b, 0x8ef0, 0x9f37, 0x8bf8, 0x5d48, 0x0, 0x1);
        gbc.writeMem(0xb9a1, { 0x1, 0xce, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x767b);
        EXPECT(gbc.pc(), 0xb9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9a1), 0x1);
        EXPECT(gbc.readMem(0xb9a2), 0xce);
        EXPECT(gbc.readMem(0xb9a3), 0x81);
        // 01 0280
        gbc.setState(0x293f, 0x2330, 0xe790, 0x5bd8, 0xf8ad, 0xa8fc, 0x0, 0x0);
        gbc.writeMem(0x293f, { 0x1, 0x2f, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2330);
        EXPECT(gbc.pc(), 0x2942);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0281
        gbc.setState(0x7c8f, 0x2f52, 0x5ed0, 0x7b49, 0x6c9d, 0x4560, 0x1, 0x1);
        gbc.writeMem(0x7c8f, { 0x1, 0xe9, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2f52);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0282
        gbc.setState(0x341e, 0x6920, 0xb9b0, 0x1331, 0x47f6, 0xa5d6, 0x0, 0x1);
        gbc.writeMem(0x341e, { 0x1, 0xc9, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6920);
        EXPECT(gbc.pc(), 0x3421);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0283
        gbc.setState(0xa69, 0x8210, 0xfd50, 0x2b58, 0x1ab5, 0xddcc, 0x1, 0x1);
        gbc.writeMem(0xa69, { 0x1, 0x9c, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8210);
        EXPECT(gbc.pc(), 0xa6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0284
        gbc.setState(0xc975, 0x99e8, 0xeee0, 0x4abe, 0x7d62, 0x9bc, 0x0, 0x1);
        gbc.writeMem(0xc975, { 0x1, 0x5f, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x99e8);
        EXPECT(gbc.pc(), 0xc978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc975), 0x1);
        EXPECT(gbc.readMem(0xc976), 0x5f);
        EXPECT(gbc.readMem(0xc977), 0xe5);
        // 01 0285
        gbc.setState(0x2eb2, 0x51d7, 0x49d0, 0xddf9, 0x6d24, 0xdce5, 0x0, 0x0);
        gbc.writeMem(0x2eb2, { 0x1, 0xff, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x51d7);
        EXPECT(gbc.pc(), 0x2eb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0286
        gbc.setState(0xba48, 0x2b68, 0x28a0, 0x4c3, 0x4fc5, 0xf08a, 0x1, 0x1);
        gbc.writeMem(0xba48, { 0x1, 0x33, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x2b68);
        EXPECT(gbc.pc(), 0xba4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0x1);
        EXPECT(gbc.readMem(0xba49), 0x33);
        EXPECT(gbc.readMem(0xba4a), 0x37);
        // 01 0287
        gbc.setState(0xeb4e, 0x8511, 0x3600, 0xd4a5, 0x5b47, 0xa769, 0x1, 0x0);
        gbc.writeMem(0xeb4e, { 0x1, 0x60, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8511);
        EXPECT(gbc.pc(), 0xeb51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb4e), 0x1);
        EXPECT(gbc.readMem(0xeb4f), 0x60);
        EXPECT(gbc.readMem(0xeb50), 0xb8);
        // 01 0289
        gbc.setState(0x75b6, 0xc5d, 0x5810, 0xb68b, 0x2ed9, 0xad8, 0x1, 0x0);
        gbc.writeMem(0x75b6, { 0x1, 0xf, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc5d);
        EXPECT(gbc.pc(), 0x75b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 028A
        gbc.setState(0x16c4, 0xba92, 0x8e60, 0x8496, 0x7e05, 0x162d, 0x1, 0x1);
        gbc.writeMem(0x16c4, { 0x1, 0x71, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xba92);
        EXPECT(gbc.pc(), 0x16c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 028B
        gbc.setState(0x3df1, 0x966f, 0x4e30, 0xe875, 0xe06e, 0x4edb, 0x1, 0x0);
        gbc.writeMem(0x3df1, { 0x1, 0xb6, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x966f);
        EXPECT(gbc.pc(), 0x3df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 028D
        gbc.setState(0xcad1, 0x77be, 0x7120, 0x9777, 0x845e, 0xb69c, 0x0, 0x0);
        gbc.writeMem(0xcad1, { 0x1, 0x97, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x77be);
        EXPECT(gbc.pc(), 0xcad4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad1), 0x1);
        EXPECT(gbc.readMem(0xcad2), 0x97);
        EXPECT(gbc.readMem(0xcad3), 0xe);
        // 01 028E
        gbc.setState(0x9dd9, 0x721d, 0x1420, 0xbe37, 0xf6d4, 0xf101, 0x0, 0x1);
        gbc.writeMem(0x9dd9, { 0x1, 0x1c, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x721d);
        EXPECT(gbc.pc(), 0x9ddc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd9), 0x1);
        EXPECT(gbc.readMem(0x9dda), 0x1c);
        EXPECT(gbc.readMem(0x9ddb), 0x2a);
        // 01 028F
        gbc.setState(0x155a, 0x7926, 0x1640, 0x129c, 0x940, 0xf28a, 0x0, 0x0);
        gbc.writeMem(0x155a, { 0x1, 0x43, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7926);
        EXPECT(gbc.pc(), 0x155d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0290
        gbc.setState(0x6d0, 0x8478, 0xf5b0, 0x1b31, 0xdab9, 0xc5c4, 0x1, 0x0);
        gbc.writeMem(0x6d0, { 0x1, 0xba, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8478);
        EXPECT(gbc.pc(), 0x6d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0291
        gbc.setState(0xb009, 0xb0e1, 0x33a0, 0x91a4, 0x2b07, 0xbe9, 0x0, 0x0);
        gbc.writeMem(0xb009, { 0x1, 0x37, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xb0e1);
        EXPECT(gbc.pc(), 0xb00c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb009), 0x1);
        EXPECT(gbc.readMem(0xb00a), 0x37);
        EXPECT(gbc.readMem(0xb00b), 0x8c);
        // 01 0292
        gbc.setState(0xb30f, 0xbdc9, 0x4410, 0x203, 0xf176, 0x3e8c, 0x1, 0x0);
        gbc.writeMem(0xb30f, { 0x1, 0x19, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbdc9);
        EXPECT(gbc.pc(), 0xb312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb30f), 0x1);
        EXPECT(gbc.readMem(0xb310), 0x19);
        EXPECT(gbc.readMem(0xb311), 0x8e);
        // 01 0293
        gbc.setState(0xc45e, 0xb5a5, 0xed60, 0xf0c3, 0xf13a, 0x27ec, 0x0, 0x1);
        gbc.writeMem(0xc45e, { 0x1, 0x82, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xb5a5);
        EXPECT(gbc.pc(), 0xc461);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc45e), 0x1);
        EXPECT(gbc.readMem(0xc45f), 0x82);
        EXPECT(gbc.readMem(0xc460), 0xed);
        // 01 0294
        gbc.setState(0x7ef9, 0x9f2c, 0x98e0, 0xa57b, 0x6c23, 0x7907, 0x0, 0x0);
        gbc.writeMem(0x7ef9, { 0x1, 0x83, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9f2c);
        EXPECT(gbc.pc(), 0x7efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0295
        gbc.setState(0x50b8, 0xf5f4, 0xe910, 0x3511, 0x2a64, 0x17f1, 0x0, 0x0);
        gbc.writeMem(0x50b8, { 0x1, 0x35, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf5f4);
        EXPECT(gbc.pc(), 0x50bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0296
        gbc.setState(0x2ce, 0x74d7, 0x4e70, 0xe631, 0xba46, 0x9ca3, 0x1, 0x1);
        gbc.writeMem(0x2ce, { 0x1, 0xe1, 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x74d7);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0297
        gbc.setState(0x9294, 0xdda, 0x5da0, 0x8fcf, 0xa149, 0x40d0, 0x1, 0x0);
        gbc.writeMem(0x9294, { 0x1, 0x6c, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xdda);
        EXPECT(gbc.pc(), 0x9297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9294), 0x1);
        EXPECT(gbc.readMem(0x9295), 0x6c);
        EXPECT(gbc.readMem(0x9296), 0xf);
        // 01 0298
        gbc.setState(0xa9b5, 0x9404, 0x350, 0xbd3a, 0x8040, 0x7492, 0x1, 0x0);
        gbc.writeMem(0xa9b5, { 0x1, 0xef, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9404);
        EXPECT(gbc.pc(), 0xa9b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9b5), 0x1);
        EXPECT(gbc.readMem(0xa9b6), 0xef);
        EXPECT(gbc.readMem(0xa9b7), 0xdf);
        // 01 0299
        gbc.setState(0x9e78, 0x8c5b, 0x5660, 0x9427, 0x690f, 0x2778, 0x0, 0x0);
        gbc.writeMem(0x9e78, { 0x1, 0x68, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8c5b);
        EXPECT(gbc.pc(), 0x9e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e78), 0x1);
        EXPECT(gbc.readMem(0x9e79), 0x68);
        EXPECT(gbc.readMem(0x9e7a), 0x3e);
        // 01 029A
        gbc.setState(0xd16b, 0x10f0, 0x7230, 0x755b, 0xed55, 0xfe05, 0x0, 0x1);
        gbc.writeMem(0xd16b, { 0x1, 0x3f, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x10f0);
        EXPECT(gbc.pc(), 0xd16e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16b), 0x1);
        EXPECT(gbc.readMem(0xd16c), 0x3f);
        EXPECT(gbc.readMem(0xd16d), 0xa1);
        // 01 029B
        gbc.setState(0xb9f1, 0x96fd, 0x8310, 0xd74b, 0x1e1b, 0x365f, 0x0, 0x1);
        gbc.writeMem(0xb9f1, { 0x1, 0x19, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0xb9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f1), 0x1);
        EXPECT(gbc.readMem(0xb9f2), 0x19);
        EXPECT(gbc.readMem(0xb9f3), 0xc1);
        // 01 029C
        gbc.setState(0x6f29, 0x486d, 0xc650, 0x7eb, 0xff3f, 0xe73c, 0x0, 0x0);
        gbc.writeMem(0x6f29, { 0x1, 0xe5, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x486d);
        EXPECT(gbc.pc(), 0x6f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 029D
        gbc.setState(0xa1d3, 0x959f, 0x4aa0, 0x663, 0xd236, 0x6715, 0x1, 0x1);
        gbc.writeMem(0xa1d3, { 0x1, 0x6e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x959f);
        EXPECT(gbc.pc(), 0xa1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d3), 0x1);
        EXPECT(gbc.readMem(0xa1d4), 0x6e);
        EXPECT(gbc.readMem(0xa1d5), 0xcd);
        // 01 029E
        gbc.setState(0x3fd8, 0xc239, 0x1b70, 0x3949, 0xd161, 0x6b24, 0x0, 0x1);
        gbc.writeMem(0x3fd8, { 0x1, 0xb9, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xc239);
        EXPECT(gbc.pc(), 0x3fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 029F
        gbc.setState(0x374, 0x6708, 0xd210, 0xae4f, 0x7cc, 0xbe7f, 0x0, 0x1);
        gbc.writeMem(0x374, { 0x1, 0x7c, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6708);
        EXPECT(gbc.pc(), 0x377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02A0
        gbc.setState(0x9701, 0xd7f5, 0x64a0, 0x25, 0x54f, 0xc45d, 0x0, 0x0);
        gbc.writeMem(0x9701, { 0x1, 0x0, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0x9704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9701), 0x1);
        EXPECT(gbc.readMem(0x9702), 0x0);
        EXPECT(gbc.readMem(0x9703), 0x64);
        // 01 02A1
        gbc.setState(0x3777, 0x5c25, 0x48b0, 0x8211, 0xbd57, 0x503b, 0x1, 0x0);
        gbc.writeMem(0x3777, { 0x1, 0x33, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5c25);
        EXPECT(gbc.pc(), 0x377a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02A2
        gbc.setState(0x993a, 0xe93b, 0x5dd0, 0x3a10, 0x42b4, 0x3252, 0x1, 0x1);
        gbc.writeMem(0x993a, { 0x1, 0x4d, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe93b);
        EXPECT(gbc.pc(), 0x993d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x993a), 0x1);
        EXPECT(gbc.readMem(0x993b), 0x4d);
        EXPECT(gbc.readMem(0x993c), 0x70);
        // 01 02A3
        gbc.setState(0xc281, 0x66c2, 0x490, 0x6fbb, 0x38a8, 0xce08, 0x1, 0x1);
        gbc.writeMem(0xc281, { 0x1, 0x4, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x66c2);
        EXPECT(gbc.pc(), 0xc284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc281), 0x1);
        EXPECT(gbc.readMem(0xc282), 0x4);
        EXPECT(gbc.readMem(0xc283), 0xb2);
        // 01 02A4
        gbc.setState(0x49c4, 0x7705, 0xf580, 0x8f3f, 0x3355, 0xfad5, 0x1, 0x1);
        gbc.writeMem(0x49c4, { 0x1, 0x74, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7705);
        EXPECT(gbc.pc(), 0x49c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02A5
        gbc.setState(0x74ad, 0x4162, 0x7f80, 0xe747, 0x4385, 0x977d, 0x1, 0x1);
        gbc.writeMem(0x74ad, { 0x1, 0x6b, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4162);
        EXPECT(gbc.pc(), 0x74b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02A6
        gbc.setState(0x49b9, 0x7ec1, 0xa300, 0xb2b6, 0xebe3, 0x9c42, 0x1, 0x0);
        gbc.writeMem(0x49b9, { 0x1, 0xb8, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x7ec1);
        EXPECT(gbc.pc(), 0x49bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02A7
        gbc.setState(0x6b6, 0x74b0, 0xbcd0, 0x1d4b, 0xc1f8, 0xb1e1, 0x1, 0x1);
        gbc.writeMem(0x6b6, { 0x1, 0xcb, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x74b0);
        EXPECT(gbc.pc(), 0x6b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02A8
        gbc.setState(0x7432, 0xd0cf, 0xcf40, 0x7053, 0x45a6, 0x6974, 0x0, 0x1);
        gbc.writeMem(0x7432, { 0x1, 0x7, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd0cf);
        EXPECT(gbc.pc(), 0x7435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02A9
        gbc.setState(0xe906, 0xb042, 0x6810, 0x4139, 0xff10, 0x468c, 0x1, 0x1);
        gbc.writeMem(0xe906, { 0x1, 0xf5, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xb042);
        EXPECT(gbc.pc(), 0xe909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe906), 0x1);
        EXPECT(gbc.readMem(0xe907), 0xf5);
        EXPECT(gbc.readMem(0xe908), 0x2f);
        // 01 02AA
        gbc.setState(0x2354, 0x7eb5, 0x3470, 0x8bb0, 0xb281, 0xd4aa, 0x0, 0x0);
        gbc.writeMem(0x2354, { 0x1, 0x8d, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7eb5);
        EXPECT(gbc.pc(), 0x2357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02AB
        gbc.setState(0xc4ee, 0x9f30, 0x9d40, 0xb440, 0xe444, 0xf306, 0x1, 0x1);
        gbc.writeMem(0xc4ee, { 0x1, 0x77, 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9f30);
        EXPECT(gbc.pc(), 0xc4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4ee), 0x1);
        EXPECT(gbc.readMem(0xc4ef), 0x77);
        EXPECT(gbc.readMem(0xc4f0), 0x40);
        // 01 02AC
        gbc.setState(0xddc6, 0xb2b6, 0x4cb0, 0x76b5, 0x1680, 0x5879, 0x0, 0x1);
        gbc.writeMem(0xddc6, { 0x1, 0x62, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0xddc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc6), 0x1);
        EXPECT(gbc.readMem(0xddc7), 0x62);
        EXPECT(gbc.readMem(0xddc8), 0x77);
        // 01 02AD
        gbc.setState(0x221, 0xd80c, 0xa3b0, 0x2d36, 0x8206, 0xc6a8, 0x1, 0x0);
        gbc.writeMem(0x221, { 0x1, 0x4d, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd80c);
        EXPECT(gbc.pc(), 0x224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02AE
        gbc.setState(0x8533, 0xc885, 0x5940, 0xc262, 0xb074, 0xb2d6, 0x1, 0x1);
        gbc.writeMem(0x8533, { 0x1, 0x38, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc885);
        EXPECT(gbc.pc(), 0x8536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8533), 0x1);
        EXPECT(gbc.readMem(0x8534), 0x38);
        EXPECT(gbc.readMem(0x8535), 0x47);
        // 01 02AF
        gbc.setState(0x220, 0xe3ce, 0xb490, 0xfd4a, 0x784b, 0xb49d, 0x0, 0x1);
        gbc.writeMem(0x220, { 0x1, 0xad, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe3ce);
        EXPECT(gbc.pc(), 0x223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02B0
        gbc.setState(0xc7e7, 0x589e, 0x12c0, 0x3376, 0x5e56, 0x2b90, 0x1, 0x1);
        gbc.writeMem(0xc7e7, { 0x1, 0x1b, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x589e);
        EXPECT(gbc.pc(), 0xc7ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7e7), 0x1);
        EXPECT(gbc.readMem(0xc7e8), 0x1b);
        EXPECT(gbc.readMem(0xc7e9), 0x7a);
        // 01 02B1
        gbc.setState(0x6d8c, 0x6659, 0x8ab0, 0x3f60, 0x8df5, 0x9c09, 0x1, 0x0);
        gbc.writeMem(0x6d8c, { 0x1, 0x8b, 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6659);
        EXPECT(gbc.pc(), 0x6d8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02B2
        gbc.setState(0x8f1e, 0x6e61, 0x6bf0, 0x8f92, 0xf26, 0x4a5c, 0x0, 0x1);
        gbc.writeMem(0x8f1e, { 0x1, 0x85, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6e61);
        EXPECT(gbc.pc(), 0x8f21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f1e), 0x1);
        EXPECT(gbc.readMem(0x8f1f), 0x85);
        EXPECT(gbc.readMem(0x8f20), 0x38);
        // 01 02B3
        gbc.setState(0x4301, 0xa9d8, 0x1370, 0xbbc2, 0x53cd, 0x2c14, 0x1, 0x1);
        gbc.writeMem(0x4301, { 0x1, 0x9f, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xa9d8);
        EXPECT(gbc.pc(), 0x4304);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02B4
        gbc.setState(0x236e, 0x12fc, 0xa360, 0x8676, 0xd50b, 0xb83d, 0x0, 0x1);
        gbc.writeMem(0x236e, { 0x1, 0x35, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x12fc);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02B5
        gbc.setState(0x7ab4, 0xe308, 0x36d0, 0x5d23, 0xb86c, 0x6b16, 0x0, 0x0);
        gbc.writeMem(0x7ab4, { 0x1, 0x2b, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe308);
        EXPECT(gbc.pc(), 0x7ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02B6
        gbc.setState(0x3043, 0xa24, 0x97a0, 0x67e5, 0x98c6, 0xb123, 0x0, 0x1);
        gbc.writeMem(0x3043, { 0x1, 0x3e, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa24);
        EXPECT(gbc.pc(), 0x3046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02B7
        gbc.setState(0x8b01, 0xdb5, 0xe340, 0xc4da, 0x3370, 0x28ec, 0x0, 0x1);
        gbc.writeMem(0x8b01, { 0x1, 0xa3, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdb5);
        EXPECT(gbc.pc(), 0x8b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b01), 0x1);
        EXPECT(gbc.readMem(0x8b02), 0xa3);
        EXPECT(gbc.readMem(0x8b03), 0x3f);
        // 01 02B8
        gbc.setState(0xef3a, 0x7ef4, 0x5890, 0x2d0b, 0xc6ab, 0x60c6, 0x0, 0x1);
        gbc.writeMem(0xef3a, { 0x1, 0x9b, 0xee });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7ef4);
        EXPECT(gbc.pc(), 0xef3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3a), 0x1);
        EXPECT(gbc.readMem(0xef3b), 0x9b);
        EXPECT(gbc.readMem(0xef3c), 0xee);
        // 01 02B9
        gbc.setState(0xa76, 0x37b3, 0x2c50, 0xe17c, 0x79ff, 0x3f75, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0x1, 0xcf, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x37b3);
        EXPECT(gbc.pc(), 0xa79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02BA
        gbc.setState(0xd435, 0x6d60, 0xd730, 0xcfdf, 0xc588, 0x225f, 0x1, 0x0);
        gbc.writeMem(0xd435, { 0x1, 0xec, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6d60);
        EXPECT(gbc.pc(), 0xd438);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd435), 0x1);
        EXPECT(gbc.readMem(0xd436), 0xec);
        EXPECT(gbc.readMem(0xd437), 0x2);
        // 01 02BB
        gbc.setState(0x2563, 0x262c, 0xf050, 0x9900, 0x23d9, 0xae57, 0x0, 0x0);
        gbc.writeMem(0x2563, { 0x1, 0xdb, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x262c);
        EXPECT(gbc.pc(), 0x2566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02BC
        gbc.setState(0x1c0, 0x5711, 0x1b40, 0xefa3, 0x8ed0, 0x6e84, 0x0, 0x0);
        gbc.writeMem(0x1c0, { 0x1, 0x9d, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5711);
        EXPECT(gbc.pc(), 0x1c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02BD
        gbc.setState(0x638d, 0x8c40, 0x9990, 0x69b2, 0xa56d, 0x5719, 0x1, 0x0);
        gbc.writeMem(0x638d, { 0x1, 0x92, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x8c40);
        EXPECT(gbc.pc(), 0x6390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02BE
        gbc.setState(0x790b, 0x857e, 0xa2a0, 0x4544, 0xfdd6, 0x77db, 0x1, 0x0);
        gbc.writeMem(0x790b, { 0x1, 0x69, 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x857e);
        EXPECT(gbc.pc(), 0x790e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02BF
        gbc.setState(0xbf63, 0x4694, 0x8c40, 0x9d36, 0x7138, 0xaddb, 0x1, 0x0);
        gbc.writeMem(0xbf63, { 0x1, 0x5b, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4694);
        EXPECT(gbc.pc(), 0xbf66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf63), 0x1);
        EXPECT(gbc.readMem(0xbf64), 0x5b);
        EXPECT(gbc.readMem(0xbf65), 0x3f);
        // 01 02C0
        gbc.setState(0x3b88, 0xcb37, 0x8b00, 0x2aae, 0x480c, 0x8329, 0x1, 0x1);
        gbc.writeMem(0x3b88, { 0x1, 0xa2, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xcb37);
        EXPECT(gbc.pc(), 0x3b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02C2
        gbc.setState(0x2894, 0x8072, 0x2370, 0xc10c, 0xad3d, 0xdbc7, 0x1, 0x1);
        gbc.writeMem(0x2894, { 0x1, 0x74, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8072);
        EXPECT(gbc.pc(), 0x2897);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02C3
        gbc.setState(0x947e, 0x6cd7, 0x8f0, 0x24ab, 0x5cc8, 0xad14, 0x0, 0x1);
        gbc.writeMem(0x947e, { 0x1, 0x69, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6cd7);
        EXPECT(gbc.pc(), 0x9481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x947e), 0x1);
        EXPECT(gbc.readMem(0x947f), 0x69);
        EXPECT(gbc.readMem(0x9480), 0xb8);
        // 01 02C4
        gbc.setState(0xa692, 0x9949, 0x4cc0, 0xff6d, 0x3bae, 0x1ac5, 0x0, 0x1);
        gbc.writeMem(0xa692, { 0x1, 0xd, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9949);
        EXPECT(gbc.pc(), 0xa695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa692), 0x1);
        EXPECT(gbc.readMem(0xa693), 0xd);
        EXPECT(gbc.readMem(0xa694), 0x13);
        // 01 02C5
        gbc.setState(0x2ea1, 0xd27c, 0x7000, 0xf9dd, 0xe8e4, 0x80f9, 0x0, 0x1);
        gbc.writeMem(0x2ea1, { 0x1, 0xad, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd27c);
        EXPECT(gbc.pc(), 0x2ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02C6
        gbc.setState(0x481c, 0x6b22, 0x4ac0, 0x5291, 0x247c, 0x65b7, 0x1, 0x0);
        gbc.writeMem(0x481c, { 0x1, 0x6d, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6b22);
        EXPECT(gbc.pc(), 0x481f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02C7
        gbc.setState(0x1358, 0x3f6b, 0x7620, 0x1924, 0x38d5, 0x3b51, 0x0, 0x1);
        gbc.writeMem(0x1358, { 0x1, 0x87, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3f6b);
        EXPECT(gbc.pc(), 0x135b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02C8
        gbc.setState(0x9562, 0x9603, 0x7bc0, 0x414c, 0x3cd3, 0xfbd7, 0x0, 0x1);
        gbc.writeMem(0x9562, { 0x1, 0xb8, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9603);
        EXPECT(gbc.pc(), 0x9565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9562), 0x1);
        EXPECT(gbc.readMem(0x9563), 0xb8);
        EXPECT(gbc.readMem(0x9564), 0x4e);
        // 01 02C9
        gbc.setState(0x7ced, 0xb6ac, 0xce90, 0xc96b, 0x458a, 0x4948, 0x1, 0x1);
        gbc.writeMem(0x7ced, { 0x1, 0xfe, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb6ac);
        EXPECT(gbc.pc(), 0x7cf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02CA
        gbc.setState(0x2ec0, 0x755a, 0x6d60, 0x13dd, 0x89c0, 0xd944, 0x1, 0x1);
        gbc.writeMem(0x2ec0, { 0x1, 0x1, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x755a);
        EXPECT(gbc.pc(), 0x2ec3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02CB
        gbc.setState(0xdf6e, 0x298d, 0x4a20, 0x2bdd, 0xcf8b, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0xdf6e, { 0x1, 0x47, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x298d);
        EXPECT(gbc.pc(), 0xdf71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf6e), 0x1);
        EXPECT(gbc.readMem(0xdf6f), 0x47);
        EXPECT(gbc.readMem(0xdf70), 0xf6);
        // 01 02CC
        gbc.setState(0xd5d3, 0xd9c0, 0xa3d0, 0xdaff, 0xbeab, 0x723c, 0x0, 0x1);
        gbc.writeMem(0xd5d3, { 0x1, 0x89, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd9c0);
        EXPECT(gbc.pc(), 0xd5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d3), 0x1);
        EXPECT(gbc.readMem(0xd5d4), 0x89);
        EXPECT(gbc.readMem(0xd5d5), 0x70);
        // 01 02CD
        gbc.setState(0x5fc5, 0xc472, 0xce80, 0x8b46, 0x7634, 0x4a0a, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0x1, 0xde, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xc472);
        EXPECT(gbc.pc(), 0x5fc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02CE
        gbc.setState(0x3714, 0x4923, 0xade0, 0xe6e0, 0x770e, 0x10b2, 0x0, 0x1);
        gbc.writeMem(0x3714, { 0x1, 0x6b, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4923);
        EXPECT(gbc.pc(), 0x3717);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02D0
        gbc.setState(0x2e75, 0x1d87, 0xc080, 0xd344, 0x40a6, 0x23f7, 0x1, 0x0);
        gbc.writeMem(0x2e75, { 0x1, 0x42, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1d87);
        EXPECT(gbc.pc(), 0x2e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02D1
        gbc.setState(0xd16a, 0x630e, 0x8ee0, 0x9c0d, 0xcbc3, 0x100c, 0x0, 0x0);
        gbc.writeMem(0xd16a, { 0x1, 0x3c, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x630e);
        EXPECT(gbc.pc(), 0xd16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd16a), 0x1);
        EXPECT(gbc.readMem(0xd16b), 0x3c);
        EXPECT(gbc.readMem(0xd16c), 0x3f);
        // 01 02D2
        gbc.setState(0x11f5, 0xa2bd, 0x7c00, 0xa601, 0x3617, 0x3086, 0x1, 0x1);
        gbc.writeMem(0x11f5, { 0x1, 0x8e, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa2bd);
        EXPECT(gbc.pc(), 0x11f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02D3
        gbc.setState(0xc0ee, 0xb138, 0xa60, 0x5d0e, 0x5860, 0x8b19, 0x1, 0x0);
        gbc.writeMem(0xc0ee, { 0x1, 0x4f, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb138);
        EXPECT(gbc.pc(), 0xc0f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ee), 0x1);
        EXPECT(gbc.readMem(0xc0ef), 0x4f);
        EXPECT(gbc.readMem(0xc0f0), 0x91);
        // 01 02D4
        gbc.setState(0x8402, 0x720f, 0xae30, 0xde1f, 0xea25, 0xe9c1, 0x0, 0x0);
        gbc.writeMem(0x8402, { 0x1, 0xaf, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x720f);
        EXPECT(gbc.pc(), 0x8405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8402), 0x1);
        EXPECT(gbc.readMem(0x8403), 0xaf);
        EXPECT(gbc.readMem(0x8404), 0x2);
        // 01 02D5
        gbc.setState(0x4e19, 0xb71b, 0x4000, 0xddf4, 0x7941, 0x3700, 0x0, 0x0);
        gbc.writeMem(0x4e19, { 0x1, 0xe8, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xb71b);
        EXPECT(gbc.pc(), 0x4e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02D6
        gbc.setState(0xd609, 0x3487, 0xa1b0, 0x70b2, 0x7f46, 0x9ef4, 0x0, 0x0);
        gbc.writeMem(0xd609, { 0x1, 0x7d, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3487);
        EXPECT(gbc.pc(), 0xd60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd609), 0x1);
        EXPECT(gbc.readMem(0xd60a), 0x7d);
        EXPECT(gbc.readMem(0xd60b), 0x4d);
        // 01 02D7
        gbc.setState(0x3252, 0xdca1, 0x89b0, 0x2dda, 0x9d2f, 0x9696, 0x0, 0x0);
        gbc.writeMem(0x3252, { 0x1, 0x2d, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xdca1);
        EXPECT(gbc.pc(), 0x3255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02D8
        gbc.setState(0x11e3, 0x3234, 0xdff0, 0x81a4, 0x937f, 0xef3a, 0x1, 0x0);
        gbc.writeMem(0x11e3, { 0x1, 0xee, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3234);
        EXPECT(gbc.pc(), 0x11e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02D9
        gbc.setState(0x3fa2, 0xa11e, 0x51b0, 0xd394, 0x553d, 0x6f06, 0x0, 0x0);
        gbc.writeMem(0x3fa2, { 0x1, 0x32, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa11e);
        EXPECT(gbc.pc(), 0x3fa5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02DA
        gbc.setState(0x6d18, 0x26c2, 0x8480, 0xc0ab, 0x86c9, 0xd20d, 0x1, 0x0);
        gbc.writeMem(0x6d18, { 0x1, 0xfb, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x26c2);
        EXPECT(gbc.pc(), 0x6d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02DB
        gbc.setState(0xdc6, 0xd737, 0x8d30, 0x2477, 0xbbf, 0xc101, 0x1, 0x0);
        gbc.writeMem(0xdc6, { 0x1, 0xf2, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd737);
        EXPECT(gbc.pc(), 0xdc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02DC
        gbc.setState(0x2c6f, 0x78b2, 0x8290, 0x3e20, 0x42a5, 0x5944, 0x1, 0x1);
        gbc.writeMem(0x2c6f, { 0x1, 0x72, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x78b2);
        EXPECT(gbc.pc(), 0x2c72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02DD
        gbc.setState(0x5cee, 0xee2a, 0xe3e0, 0x9f0a, 0xb4d, 0x1fa3, 0x1, 0x1);
        gbc.writeMem(0x5cee, { 0x1, 0xd1, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xee2a);
        EXPECT(gbc.pc(), 0x5cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 02DE
        gbc.setState(0xc01d, 0xc5fc, 0xaa30, 0x9d22, 0x64b2, 0xc150, 0x1, 0x0);
        gbc.writeMem(0xc01d, { 0x1, 0xcf, 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xc5fc);
        EXPECT(gbc.pc(), 0xc020);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01d), 0x1);
        EXPECT(gbc.readMem(0xc01e), 0xcf);
        EXPECT(gbc.readMem(0xc01f), 0xe3);
        // 01 02DF
        gbc.setState(0x99e3, 0xd3d8, 0x1250, 0x36fb, 0xc0c1, 0xf369, 0x0, 0x1);
        gbc.writeMem(0x99e3, { 0x1, 0x9c, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd3d8);
        EXPECT(gbc.pc(), 0x99e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99e3), 0x1);
        EXPECT(gbc.readMem(0x99e4), 0x9c);
        EXPECT(gbc.readMem(0x99e5), 0x5a);
        // 01 02E0
        gbc.setState(0xe8d9, 0x157c, 0x7bf0, 0x376, 0x3d48, 0x568e, 0x1, 0x0);
        gbc.writeMem(0xe8d9, { 0x1, 0xd8, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x157c);
        EXPECT(gbc.pc(), 0xe8dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8d9), 0x1);
        EXPECT(gbc.readMem(0xe8da), 0xd8);
        EXPECT(gbc.readMem(0xe8db), 0x22);
        // 01 02E2
        gbc.setState(0x876d, 0x64ea, 0x1920, 0xb4a4, 0xb45e, 0x3193, 0x1, 0x1);
        gbc.writeMem(0x876d, { 0x1, 0x24, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x64ea);
        EXPECT(gbc.pc(), 0x8770);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876d), 0x1);
        EXPECT(gbc.readMem(0x876e), 0x24);
        EXPECT(gbc.readMem(0x876f), 0x2c);
        // 01 02E3
        gbc.setState(0xe213, 0x6585, 0x5b90, 0x54e0, 0x6040, 0x4730, 0x0, 0x0);
        gbc.writeMem(0xe213, { 0x1, 0xd0, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6585);
        EXPECT(gbc.pc(), 0xe216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe213), 0x1);
        EXPECT(gbc.readMem(0xe214), 0xd0);
        EXPECT(gbc.readMem(0xe215), 0x30);
        // 01 02E4
        gbc.setState(0xbff9, 0x55bc, 0xc8f0, 0x9231, 0x1af7, 0x4481, 0x0, 0x0);
        gbc.writeMem(0xbff9, { 0x1, 0xc, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x55bc);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbff9), 0x1);
        EXPECT(gbc.readMem(0xbffa), 0xc);
        EXPECT(gbc.readMem(0xbffb), 0x99);
        // 01 02E5
        gbc.setState(0xb855, 0x5662, 0x3850, 0x1ac4, 0x1c8b, 0xd84b, 0x1, 0x0);
        gbc.writeMem(0xb855, { 0x1, 0x50, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5662);
        EXPECT(gbc.pc(), 0xb858);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb855), 0x1);
        EXPECT(gbc.readMem(0xb856), 0x50);
        EXPECT(gbc.readMem(0xb857), 0x13);
        // 01 02E6
        gbc.setState(0xda8d, 0x9cd6, 0x9280, 0xa14c, 0xf235, 0xbc85, 0x0, 0x0);
        gbc.writeMem(0xda8d, { 0x1, 0xeb, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9cd6);
        EXPECT(gbc.pc(), 0xda90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda8d), 0x1);
        EXPECT(gbc.readMem(0xda8e), 0xeb);
        EXPECT(gbc.readMem(0xda8f), 0x2);
        // 01 02E7
        gbc.setState(0x7d83, 0xfe7e, 0x9c0, 0x5ec4, 0x4bca, 0x6013, 0x1, 0x1);
        gbc.writeMem(0x7d83, { 0x1, 0x93, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xfe7e);
        EXPECT(gbc.pc(), 0x7d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02E8
        gbc.setState(0xb1e1, 0x4c34, 0xdd50, 0xc856, 0x834b, 0xda7f, 0x1, 0x1);
        gbc.writeMem(0xb1e1, { 0x1, 0xcc, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4c34);
        EXPECT(gbc.pc(), 0xb1e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e1), 0x1);
        EXPECT(gbc.readMem(0xb1e2), 0xcc);
        EXPECT(gbc.readMem(0xb1e3), 0x8b);
        // 01 02E9
        gbc.setState(0x3970, 0x6282, 0x5a10, 0xaa3, 0x924c, 0x3945, 0x1, 0x1);
        gbc.writeMem(0x3970, { 0x1, 0xae, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6282);
        EXPECT(gbc.pc(), 0x3973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02EA
        gbc.setState(0x7f4a, 0x726b, 0xf290, 0x3da7, 0x77e5, 0x7dad, 0x1, 0x1);
        gbc.writeMem(0x7f4a, { 0x1, 0x53, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x726b);
        EXPECT(gbc.pc(), 0x7f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02EB
        gbc.setState(0x5713, 0xcd54, 0x7000, 0xbd68, 0x4706, 0x8af8, 0x0, 0x1);
        gbc.writeMem(0x5713, { 0x1, 0x96, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcd54);
        EXPECT(gbc.pc(), 0x5716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02EC
        gbc.setState(0x3de, 0x2f81, 0xff00, 0x972e, 0x449d, 0x20b3, 0x1, 0x0);
        gbc.writeMem(0x3de, { 0x1, 0x59, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2f81);
        EXPECT(gbc.pc(), 0x3e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02ED
        gbc.setState(0xeab1, 0xb9f, 0xe5b0, 0xb978, 0xff6d, 0x5ab9, 0x0, 0x1);
        gbc.writeMem(0xeab1, { 0x1, 0x8d, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb9f);
        EXPECT(gbc.pc(), 0xeab4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeab1), 0x1);
        EXPECT(gbc.readMem(0xeab2), 0x8d);
        EXPECT(gbc.readMem(0xeab3), 0xdc);
        // 01 02EE
        gbc.setState(0x6d26, 0x2718, 0x22d0, 0xab46, 0x401c, 0x2579, 0x1, 0x0);
        gbc.writeMem(0x6d26, { 0x1, 0x95, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2718);
        EXPECT(gbc.pc(), 0x6d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02EF
        gbc.setState(0xd5b1, 0x70bf, 0xc3f0, 0x9034, 0xa294, 0x6281, 0x1, 0x1);
        gbc.writeMem(0xd5b1, { 0x1, 0xed, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x70bf);
        EXPECT(gbc.pc(), 0xd5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b1), 0x1);
        EXPECT(gbc.readMem(0xd5b2), 0xed);
        EXPECT(gbc.readMem(0xd5b3), 0x68);
        // 01 02F0
        gbc.setState(0x8354, 0xcd62, 0xce50, 0x914, 0x6155, 0xec2, 0x0, 0x1);
        gbc.writeMem(0x8354, { 0x1, 0x89, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xcd62);
        EXPECT(gbc.pc(), 0x8357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8354), 0x1);
        EXPECT(gbc.readMem(0x8355), 0x89);
        EXPECT(gbc.readMem(0x8356), 0x12);
        // 01 02F1
        gbc.setState(0x276c, 0x2c, 0x5b00, 0xb287, 0x9cb7, 0x440d, 0x1, 0x1);
        gbc.writeMem(0x276c, { 0x1, 0x8a, 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x2c);
        EXPECT(gbc.pc(), 0x276f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02F2
        gbc.setState(0xc588, 0x2db8, 0xb400, 0xfa8a, 0x9351, 0xe205, 0x1, 0x0);
        gbc.writeMem(0xc588, { 0x1, 0x1c, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2db8);
        EXPECT(gbc.pc(), 0xc58b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc588), 0x1);
        EXPECT(gbc.readMem(0xc589), 0x1c);
        EXPECT(gbc.readMem(0xc58a), 0xe);
        // 01 02F3
        gbc.setState(0xdac1, 0xc160, 0x9400, 0x17a, 0xb640, 0xf9ae, 0x1, 0x0);
        gbc.writeMem(0xdac1, { 0x1, 0x1d, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xc160);
        EXPECT(gbc.pc(), 0xdac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdac1), 0x1);
        EXPECT(gbc.readMem(0xdac2), 0x1d);
        EXPECT(gbc.readMem(0xdac3), 0x60);
        // 01 02F4
        gbc.setState(0x268f, 0xb704, 0x96b0, 0x91e7, 0x7b5a, 0xa62a, 0x1, 0x0);
        gbc.writeMem(0x268f, { 0x1, 0x49, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb704);
        EXPECT(gbc.pc(), 0x2692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02F5
        gbc.setState(0x9153, 0x7cab, 0x4a90, 0x1e76, 0x90d2, 0xf4f5, 0x1, 0x1);
        gbc.writeMem(0x9153, { 0x1, 0xe5, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7cab);
        EXPECT(gbc.pc(), 0x9156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9153), 0x1);
        EXPECT(gbc.readMem(0x9154), 0xe5);
        EXPECT(gbc.readMem(0x9155), 0xc);
        // 01 02F6
        gbc.setState(0xe952, 0xb674, 0xbf70, 0x7b15, 0xbfee, 0xedb9, 0x0, 0x0);
        gbc.writeMem(0xe952, { 0x1, 0x5d, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xb674);
        EXPECT(gbc.pc(), 0xe955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe952), 0x1);
        EXPECT(gbc.readMem(0xe953), 0x5d);
        EXPECT(gbc.readMem(0xe954), 0xe0);
        // 01 02F7
        gbc.setState(0xaeb7, 0x72d2, 0xf3e0, 0x3fd, 0xc023, 0x302d, 0x0, 0x1);
        gbc.writeMem(0xaeb7, { 0x1, 0x68, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x72d2);
        EXPECT(gbc.pc(), 0xaeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb7), 0x1);
        EXPECT(gbc.readMem(0xaeb8), 0x68);
        EXPECT(gbc.readMem(0xaeb9), 0x25);
        // 01 02F8
        gbc.setState(0x6c2c, 0x386b, 0xebc0, 0x101a, 0x16c9, 0x4090, 0x1, 0x0);
        gbc.writeMem(0x6c2c, { 0x1, 0x44, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x386b);
        EXPECT(gbc.pc(), 0x6c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02F9
        gbc.setState(0x54af, 0x8f14, 0xac40, 0xfdd1, 0xe43, 0x1ff6, 0x0, 0x1);
        gbc.writeMem(0x54af, { 0x1, 0x4c, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8f14);
        EXPECT(gbc.pc(), 0x54b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02FA
        gbc.setState(0x79d9, 0xeeb4, 0xffb0, 0x5fb3, 0x6512, 0xb050, 0x0, 0x0);
        gbc.writeMem(0x79d9, { 0x1, 0xb8, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xeeb4);
        EXPECT(gbc.pc(), 0x79dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 02FB
        gbc.setState(0x51b7, 0x9c1b, 0x1f10, 0x3642, 0x3f3e, 0x465f, 0x1, 0x0);
        gbc.writeMem(0x51b7, { 0x1, 0x2f, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9c1b);
        EXPECT(gbc.pc(), 0x51ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 02FC
        gbc.setState(0x3f6, 0x204b, 0x2c0, 0x67b6, 0x274c, 0x7ce0, 0x1, 0x0);
        gbc.writeMem(0x3f6, { 0x1, 0xf2, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x204b);
        EXPECT(gbc.pc(), 0x3f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 02FD
        gbc.setState(0x8d80, 0xe963, 0x74e0, 0x2f61, 0x2813, 0x3f75, 0x1, 0x0);
        gbc.writeMem(0x8d80, { 0x1, 0x1c, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe963);
        EXPECT(gbc.pc(), 0x8d83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d80), 0x1);
        EXPECT(gbc.readMem(0x8d81), 0x1c);
        EXPECT(gbc.readMem(0x8d82), 0x92);
        // 01 02FE
        gbc.setState(0xba4c, 0x6e57, 0x8fe0, 0x3dae, 0x9e0, 0x7cb6, 0x1, 0x0);
        gbc.writeMem(0xba4c, { 0x1, 0x21, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6e57);
        EXPECT(gbc.pc(), 0xba4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4c), 0x1);
        EXPECT(gbc.readMem(0xba4d), 0x21);
        EXPECT(gbc.readMem(0xba4e), 0x29);
        // 01 02FF
        gbc.setState(0x3161, 0xc442, 0x19f0, 0x3fbc, 0xe03e, 0x4f21, 0x1, 0x0);
        gbc.writeMem(0x3161, { 0x1, 0xde, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc442);
        EXPECT(gbc.pc(), 0x3164);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0300
        gbc.setState(0x9ef6, 0xe185, 0x1fc0, 0xb2e5, 0x1e23, 0x305, 0x1, 0x1);
        gbc.writeMem(0x9ef6, { 0x1, 0xc, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe185);
        EXPECT(gbc.pc(), 0x9ef9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef6), 0x1);
        EXPECT(gbc.readMem(0x9ef7), 0xc);
        EXPECT(gbc.readMem(0x9ef8), 0x59);
        // 01 0301
        gbc.setState(0xd1f1, 0xf11a, 0x3620, 0x3794, 0xba6b, 0x2780, 0x0, 0x0);
        gbc.writeMem(0xd1f1, { 0x1, 0x31, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf11a);
        EXPECT(gbc.pc(), 0xd1f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1f1), 0x1);
        EXPECT(gbc.readMem(0xd1f2), 0x31);
        EXPECT(gbc.readMem(0xd1f3), 0x59);
        // 01 0302
        gbc.setState(0x678b, 0x3527, 0x3fd0, 0xd547, 0x4757, 0x8e3e, 0x0, 0x1);
        gbc.writeMem(0x678b, { 0x1, 0xa8, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0x678e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0303
        gbc.setState(0x8b2e, 0x2d00, 0x540, 0xd663, 0x776, 0x433d, 0x0, 0x1);
        gbc.writeMem(0x8b2e, { 0x1, 0xc6, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2d00);
        EXPECT(gbc.pc(), 0x8b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2e), 0x1);
        EXPECT(gbc.readMem(0x8b2f), 0xc6);
        EXPECT(gbc.readMem(0x8b30), 0xef);
        // 01 0304
        gbc.setState(0x50d1, 0xe37d, 0x7780, 0x5682, 0xc653, 0x34c6, 0x1, 0x1);
        gbc.writeMem(0x50d1, { 0x1, 0xa6, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe37d);
        EXPECT(gbc.pc(), 0x50d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0305
        gbc.setState(0xeec, 0xd5d8, 0x9e70, 0xfc67, 0x9a14, 0x8bd4, 0x1, 0x1);
        gbc.writeMem(0xeec, { 0x1, 0x0, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xd5d8);
        EXPECT(gbc.pc(), 0xeef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0306
        gbc.setState(0xdfb4, 0x589e, 0x7160, 0x6918, 0x3f9b, 0xd6b7, 0x1, 0x0);
        gbc.writeMem(0xdfb4, { 0x1, 0x1d, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x589e);
        EXPECT(gbc.pc(), 0xdfb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfb4), 0x1);
        EXPECT(gbc.readMem(0xdfb5), 0x1d);
        EXPECT(gbc.readMem(0xdfb6), 0x8a);
        // 01 0307
        gbc.setState(0x1ae7, 0xc875, 0x5500, 0xc4ba, 0x87ad, 0xdfd6, 0x0, 0x1);
        gbc.writeMem(0x1ae7, { 0x1, 0x88, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc875);
        EXPECT(gbc.pc(), 0x1aea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0308
        gbc.setState(0xbbce, 0xaf45, 0x6790, 0xcc61, 0xf6, 0xad6e, 0x1, 0x0);
        gbc.writeMem(0xbbce, { 0x1, 0xa9, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xaf45);
        EXPECT(gbc.pc(), 0xbbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbce), 0x1);
        EXPECT(gbc.readMem(0xbbcf), 0xa9);
        EXPECT(gbc.readMem(0xbbd0), 0xcd);
        // 01 0309
        gbc.setState(0xd662, 0x103f, 0x75f0, 0x73f3, 0xbd80, 0x5ec8, 0x1, 0x0);
        gbc.writeMem(0xd662, { 0x1, 0xcf, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x103f);
        EXPECT(gbc.pc(), 0xd665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd662), 0x1);
        EXPECT(gbc.readMem(0xd663), 0xcf);
        EXPECT(gbc.readMem(0xd664), 0x75);
        // 01 030A
        gbc.setState(0x103c, 0xbafd, 0x5e50, 0xbceb, 0xed1a, 0xa5a7, 0x0, 0x1);
        gbc.writeMem(0x103c, { 0x1, 0x8c, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbafd);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 030B
        gbc.setState(0xdd47, 0xf0c9, 0x1ae0, 0xa645, 0xdd78, 0x805, 0x0, 0x1);
        gbc.writeMem(0xdd47, { 0x1, 0x9c, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf0c9);
        EXPECT(gbc.pc(), 0xdd4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd47), 0x1);
        EXPECT(gbc.readMem(0xdd48), 0x9c);
        EXPECT(gbc.readMem(0xdd49), 0x98);
        // 01 030C
        gbc.setState(0x8934, 0xdba1, 0xf220, 0x3e3f, 0x5f21, 0x2d0a, 0x0, 0x0);
        gbc.writeMem(0x8934, { 0x1, 0xe9, 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xdba1);
        EXPECT(gbc.pc(), 0x8937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8934), 0x1);
        EXPECT(gbc.readMem(0x8935), 0xe9);
        EXPECT(gbc.readMem(0x8936), 0xa6);
        // 01 030D
        gbc.setState(0x72ed, 0xe7c5, 0x4ae0, 0xb966, 0xf2bf, 0x61b8, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0x1, 0x97, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe7c5);
        EXPECT(gbc.pc(), 0x72f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 030E
        gbc.setState(0x27f6, 0xb42d, 0x8160, 0x897b, 0xf0b3, 0x51f7, 0x0, 0x1);
        gbc.writeMem(0x27f6, { 0x1, 0x73, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb42d);
        EXPECT(gbc.pc(), 0x27f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 030F
        gbc.setState(0xc5db, 0x21ad, 0x6340, 0x5077, 0x9dbf, 0xc324, 0x1, 0x0);
        gbc.writeMem(0xc5db, { 0x1, 0xf4, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0xc5de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5db), 0x1);
        EXPECT(gbc.readMem(0xc5dc), 0xf4);
        EXPECT(gbc.readMem(0xc5dd), 0xb0);
        // 01 0310
        gbc.setState(0x65ea, 0x5f4f, 0xd7b0, 0xbcbb, 0xb563, 0x45ca, 0x1, 0x1);
        gbc.writeMem(0x65ea, { 0x1, 0xc8, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x5f4f);
        EXPECT(gbc.pc(), 0x65ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0311
        gbc.setState(0xd058, 0x3e86, 0x13b0, 0x328c, 0x32b7, 0xdb4c, 0x1, 0x0);
        gbc.writeMem(0xd058, { 0x1, 0x77, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3e86);
        EXPECT(gbc.pc(), 0xd05b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd058), 0x1);
        EXPECT(gbc.readMem(0xd059), 0x77);
        EXPECT(gbc.readMem(0xd05a), 0x5d);
        // 01 0312
        gbc.setState(0xc898, 0xfd15, 0xc8d0, 0xf952, 0x10f5, 0x72c4, 0x0, 0x0);
        gbc.writeMem(0xc898, { 0x1, 0x5b, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfd15);
        EXPECT(gbc.pc(), 0xc89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc898), 0x1);
        EXPECT(gbc.readMem(0xc899), 0x5b);
        EXPECT(gbc.readMem(0xc89a), 0x3d);
        // 01 0313
        gbc.setState(0x72bc, 0x1d33, 0x6490, 0x9a8c, 0xf712, 0xd622, 0x1, 0x0);
        gbc.writeMem(0x72bc, { 0x1, 0x6, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1d33);
        EXPECT(gbc.pc(), 0x72bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0314
        gbc.setState(0xb1ca, 0xd1b6, 0x6160, 0xd97f, 0x3a7e, 0xf20, 0x1, 0x1);
        gbc.writeMem(0xb1ca, { 0x1, 0xac, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd1b6);
        EXPECT(gbc.pc(), 0xb1cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ca), 0x1);
        EXPECT(gbc.readMem(0xb1cb), 0xac);
        EXPECT(gbc.readMem(0xb1cc), 0xb1);
        // 01 0315
        gbc.setState(0xda1a, 0x3c35, 0x8be0, 0x6189, 0x7733, 0xb41, 0x1, 0x1);
        gbc.writeMem(0xda1a, { 0x1, 0xde, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x3c35);
        EXPECT(gbc.pc(), 0xda1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1a), 0x1);
        EXPECT(gbc.readMem(0xda1b), 0xde);
        EXPECT(gbc.readMem(0xda1c), 0xdf);
        // 01 0316
        gbc.setState(0x3906, 0xeb50, 0x9230, 0xc2de, 0x377a, 0x8793, 0x1, 0x0);
        gbc.writeMem(0x3906, { 0x1, 0x2e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xeb50);
        EXPECT(gbc.pc(), 0x3909);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0317
        gbc.setState(0x20bb, 0x14b1, 0x6f90, 0x4f7b, 0x1966, 0x438, 0x1, 0x1);
        gbc.writeMem(0x20bb, { 0x1, 0xc3, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x14b1);
        EXPECT(gbc.pc(), 0x20be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0318
        gbc.setState(0xa89a, 0xac89, 0x4840, 0xa82c, 0x4a14, 0xf059, 0x0, 0x1);
        gbc.writeMem(0xa89a, { 0x1, 0x9f, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xac89);
        EXPECT(gbc.pc(), 0xa89d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa89a), 0x1);
        EXPECT(gbc.readMem(0xa89b), 0x9f);
        EXPECT(gbc.readMem(0xa89c), 0xe1);
        // 01 0319
        gbc.setState(0x7a27, 0x3ae4, 0x9d70, 0x6921, 0xf6f9, 0xa14a, 0x0, 0x0);
        gbc.writeMem(0x7a27, { 0x1, 0x6c, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x3ae4);
        EXPECT(gbc.pc(), 0x7a2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 031A
        gbc.setState(0xdd29, 0x20a9, 0xd6c0, 0x14e4, 0x6670, 0xab91, 0x1, 0x0);
        gbc.writeMem(0xdd29, { 0x1, 0xbe, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x20a9);
        EXPECT(gbc.pc(), 0xdd2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd29), 0x1);
        EXPECT(gbc.readMem(0xdd2a), 0xbe);
        EXPECT(gbc.readMem(0xdd2b), 0x82);
        // 01 031B
        gbc.setState(0x503c, 0xd6d1, 0xc90, 0x2c5b, 0x4add, 0x2b8c, 0x0, 0x0);
        gbc.writeMem(0x503c, { 0x1, 0x38, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd6d1);
        EXPECT(gbc.pc(), 0x503f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 031C
        gbc.setState(0xa185, 0xe0ca, 0x4b50, 0x6c3f, 0xce3b, 0x95a9, 0x0, 0x0);
        gbc.writeMem(0xa185, { 0x1, 0x6e, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe0ca);
        EXPECT(gbc.pc(), 0xa188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa185), 0x1);
        EXPECT(gbc.readMem(0xa186), 0x6e);
        EXPECT(gbc.readMem(0xa187), 0x66);
        // 01 031D
        gbc.setState(0xb308, 0xbc35, 0xad50, 0xd651, 0xdab6, 0x8aa, 0x1, 0x1);
        gbc.writeMem(0xb308, { 0x1, 0x79, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbc35);
        EXPECT(gbc.pc(), 0xb30b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb308), 0x1);
        EXPECT(gbc.readMem(0xb309), 0x79);
        EXPECT(gbc.readMem(0xb30a), 0xea);
        // 01 031E
        gbc.setState(0xa979, 0xa3ac, 0x89e0, 0xd676, 0xda38, 0xf101, 0x0, 0x1);
        gbc.writeMem(0xa979, { 0x1, 0x21, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa3ac);
        EXPECT(gbc.pc(), 0xa97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa979), 0x1);
        EXPECT(gbc.readMem(0xa97a), 0x21);
        EXPECT(gbc.readMem(0xa97b), 0xa2);
        // 01 031F
        gbc.setState(0x2ccc, 0xf497, 0xa9c0, 0x87f5, 0x56e2, 0x6a4e, 0x0, 0x1);
        gbc.writeMem(0x2ccc, { 0x1, 0xb5, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf497);
        EXPECT(gbc.pc(), 0x2ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0320
        gbc.setState(0xce39, 0xd9a0, 0x8460, 0x1d3b, 0x41a8, 0x3ab7, 0x1, 0x1);
        gbc.writeMem(0xce39, { 0x1, 0x99, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd9a0);
        EXPECT(gbc.pc(), 0xce3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce39), 0x1);
        EXPECT(gbc.readMem(0xce3a), 0x99);
        EXPECT(gbc.readMem(0xce3b), 0xc5);
        // 01 0321
        gbc.setState(0x99af, 0xfced, 0x9da0, 0x4a4a, 0xbc03, 0x6415, 0x0, 0x0);
        gbc.writeMem(0x99af, { 0x1, 0xde, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfced);
        EXPECT(gbc.pc(), 0x99b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99af), 0x1);
        EXPECT(gbc.readMem(0x99b0), 0xde);
        EXPECT(gbc.readMem(0x99b1), 0x0);
        // 01 0322
        gbc.setState(0x39a7, 0x6447, 0xac10, 0xaa, 0xe65a, 0x7876, 0x1, 0x0);
        gbc.writeMem(0x39a7, { 0x1, 0xc6, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6447);
        EXPECT(gbc.pc(), 0x39aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0323
        gbc.setState(0xbfab, 0x17f, 0xd560, 0xd0a8, 0xea4d, 0x78bf, 0x0, 0x0);
        gbc.writeMem(0xbfab, { 0x1, 0x84, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x17f);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfab), 0x1);
        EXPECT(gbc.readMem(0xbfac), 0x84);
        EXPECT(gbc.readMem(0xbfad), 0xb);
        // 01 0324
        gbc.setState(0xa864, 0x7511, 0x9060, 0xf2b2, 0x9b7f, 0x659c, 0x1, 0x0);
        gbc.writeMem(0xa864, { 0x1, 0x88, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x7511);
        EXPECT(gbc.pc(), 0xa867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa864), 0x1);
        EXPECT(gbc.readMem(0xa865), 0x88);
        EXPECT(gbc.readMem(0xa866), 0xe4);
        // 01 0325
        gbc.setState(0x9db5, 0x4789, 0xabe0, 0xa0f8, 0xc51, 0xb0b2, 0x0, 0x1);
        gbc.writeMem(0x9db5, { 0x1, 0x30, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4789);
        EXPECT(gbc.pc(), 0x9db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9db5), 0x1);
        EXPECT(gbc.readMem(0x9db6), 0x30);
        EXPECT(gbc.readMem(0x9db7), 0x73);
        // 01 0326
        gbc.setState(0x31cb, 0x455a, 0x4190, 0x50f, 0x84c0, 0xd84e, 0x0, 0x0);
        gbc.writeMem(0x31cb, { 0x1, 0x7b, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x455a);
        EXPECT(gbc.pc(), 0x31ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0327
        gbc.setState(0x40be, 0xb6d8, 0x57c0, 0x6dea, 0x8ff7, 0x7c31, 0x0, 0x0);
        gbc.writeMem(0x40be, { 0x1, 0x44, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb6d8);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0328
        gbc.setState(0x8930, 0xb030, 0x6750, 0xfbd7, 0x3269, 0x2a95, 0x1, 0x1);
        gbc.writeMem(0x8930, { 0x1, 0x47, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb030);
        EXPECT(gbc.pc(), 0x8933);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8930), 0x1);
        EXPECT(gbc.readMem(0x8931), 0x47);
        EXPECT(gbc.readMem(0x8932), 0x14);
        // 01 0329
        gbc.setState(0x5792, 0xeb02, 0x7c20, 0x19dd, 0xa257, 0xfc1a, 0x0, 0x1);
        gbc.writeMem(0x5792, { 0x1, 0x97, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xeb02);
        EXPECT(gbc.pc(), 0x5795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 032A
        gbc.setState(0x10f1, 0xad50, 0x75a0, 0xb031, 0xfacc, 0x46cd, 0x1, 0x0);
        gbc.writeMem(0x10f1, { 0x1, 0xde, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xad50);
        EXPECT(gbc.pc(), 0x10f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 032B
        gbc.setState(0x3a7a, 0xc1a9, 0xa2a0, 0x6157, 0xae58, 0xadec, 0x1, 0x0);
        gbc.writeMem(0x3a7a, { 0x1, 0xc3, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc1a9);
        EXPECT(gbc.pc(), 0x3a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 032C
        gbc.setState(0xe6c9, 0x36aa, 0xdb0, 0xf98, 0x4724, 0xf4f8, 0x1, 0x0);
        gbc.writeMem(0xe6c9, { 0x1, 0x32, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x36aa);
        EXPECT(gbc.pc(), 0xe6cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6c9), 0x1);
        EXPECT(gbc.readMem(0xe6ca), 0x32);
        EXPECT(gbc.readMem(0xe6cb), 0x96);
        // 01 032D
        gbc.setState(0x460d, 0xb99c, 0xaa00, 0x7ad, 0x3e64, 0x9816, 0x0, 0x0);
        gbc.writeMem(0x460d, { 0x1, 0x3a, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb99c);
        EXPECT(gbc.pc(), 0x4610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 032E
        gbc.setState(0xb554, 0x8d92, 0xf9a0, 0xeb80, 0x90c6, 0x1dd6, 0x1, 0x1);
        gbc.writeMem(0xb554, { 0x1, 0x34, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x8d92);
        EXPECT(gbc.pc(), 0xb557);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb554), 0x1);
        EXPECT(gbc.readMem(0xb555), 0x34);
        EXPECT(gbc.readMem(0xb556), 0xb5);
        // 01 032F
        gbc.setState(0x8c31, 0x6f28, 0xff90, 0x83c5, 0xcef6, 0x6e41, 0x0, 0x1);
        gbc.writeMem(0x8c31, { 0x1, 0x85, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6f28);
        EXPECT(gbc.pc(), 0x8c34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c31), 0x1);
        EXPECT(gbc.readMem(0x8c32), 0x85);
        EXPECT(gbc.readMem(0x8c33), 0xca);
        // 01 0330
        gbc.setState(0xdad5, 0xda91, 0xf560, 0x8d00, 0xcffe, 0xa418, 0x0, 0x1);
        gbc.writeMem(0xdad5, { 0x1, 0xcc, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xda91);
        EXPECT(gbc.pc(), 0xdad8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad5), 0x1);
        EXPECT(gbc.readMem(0xdad6), 0xcc);
        EXPECT(gbc.readMem(0xdad7), 0x5b);
        // 01 0331
        gbc.setState(0x39b7, 0xafb5, 0x60c0, 0xa03e, 0x5d6e, 0x6e0c, 0x1, 0x0);
        gbc.writeMem(0x39b7, { 0x1, 0xcd, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xafb5);
        EXPECT(gbc.pc(), 0x39ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0332
        gbc.setState(0x88cd, 0xc303, 0x9c0, 0x54af, 0x29bd, 0x190e, 0x1, 0x1);
        gbc.writeMem(0x88cd, { 0x1, 0x8e, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc303);
        EXPECT(gbc.pc(), 0x88d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88cd), 0x1);
        EXPECT(gbc.readMem(0x88ce), 0x8e);
        EXPECT(gbc.readMem(0x88cf), 0xf1);
        // 01 0333
        gbc.setState(0x78bf, 0x66f5, 0xf0d0, 0x622c, 0x51e4, 0x67d6, 0x1, 0x1);
        gbc.writeMem(0x78bf, { 0x1, 0x77, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x66f5);
        EXPECT(gbc.pc(), 0x78c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0334
        gbc.setState(0x7b9f, 0xc90e, 0xd1f0, 0x5422, 0x144e, 0x65a8, 0x0, 0x1);
        gbc.writeMem(0x7b9f, { 0x1, 0x52, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xc90e);
        EXPECT(gbc.pc(), 0x7ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0335
        gbc.setState(0x7fb8, 0x767d, 0xc400, 0x55f9, 0x58, 0x463f, 0x1, 0x1);
        gbc.writeMem(0x7fb8, { 0x1, 0x50, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x767d);
        EXPECT(gbc.pc(), 0x7fbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0336
        gbc.setState(0x5a8f, 0x8a77, 0xe7e0, 0xac8f, 0x144c, 0x9f3d, 0x0, 0x1);
        gbc.writeMem(0x5a8f, { 0x1, 0xfb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8a77);
        EXPECT(gbc.pc(), 0x5a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0337
        gbc.setState(0x5016, 0x3109, 0x1550, 0x8487, 0xc56c, 0x2f53, 0x0, 0x0);
        gbc.writeMem(0x5016, { 0x1, 0xf5, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3109);
        EXPECT(gbc.pc(), 0x5019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0338
        gbc.setState(0xd5cb, 0xcb7f, 0xe0, 0x5c24, 0xdaba, 0x8271, 0x0, 0x0);
        gbc.writeMem(0xd5cb, { 0x1, 0xa2, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xcb7f);
        EXPECT(gbc.pc(), 0xd5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5cb), 0x1);
        EXPECT(gbc.readMem(0xd5cc), 0xa2);
        EXPECT(gbc.readMem(0xd5cd), 0x9c);
        // 01 0339
        gbc.setState(0xa98d, 0xb7e0, 0xaff0, 0x333, 0xb880, 0xc1fe, 0x1, 0x1);
        gbc.writeMem(0xa98d, { 0x1, 0xcf, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb7e0);
        EXPECT(gbc.pc(), 0xa990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98d), 0x1);
        EXPECT(gbc.readMem(0xa98e), 0xcf);
        EXPECT(gbc.readMem(0xa98f), 0x90);
        // 01 033B
        gbc.setState(0x6f7c, 0xb9df, 0xfa70, 0xe35f, 0x64f5, 0x79c5, 0x0, 0x1);
        gbc.writeMem(0x6f7c, { 0x1, 0x48, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb9df);
        EXPECT(gbc.pc(), 0x6f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 033C
        gbc.setState(0x9bf9, 0x3fbc, 0x2c30, 0x161d, 0x6497, 0x7db2, 0x0, 0x0);
        gbc.writeMem(0x9bf9, { 0x1, 0x1f, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3fbc);
        EXPECT(gbc.pc(), 0x9bfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bf9), 0x1);
        EXPECT(gbc.readMem(0x9bfa), 0x1f);
        EXPECT(gbc.readMem(0x9bfb), 0x4);
        // 01 033D
        gbc.setState(0x3cbe, 0x155c, 0x390, 0x4724, 0xda7, 0x2182, 0x0, 0x1);
        gbc.writeMem(0x3cbe, { 0x1, 0x1e, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x155c);
        EXPECT(gbc.pc(), 0x3cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 033E
        gbc.setState(0x5162, 0xe09c, 0x5ee0, 0x98e9, 0xda2d, 0x90bc, 0x0, 0x1);
        gbc.writeMem(0x5162, { 0x1, 0x12, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xe09c);
        EXPECT(gbc.pc(), 0x5165);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 033F
        gbc.setState(0x1124, 0x1126, 0xac0, 0xe710, 0x16b8, 0xad2, 0x1, 0x0);
        gbc.writeMem(0x1124, { 0x1, 0xde, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1126);
        EXPECT(gbc.pc(), 0x1127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0340
        gbc.setState(0xdb77, 0xad5, 0xc80, 0x8ae6, 0x10e5, 0x40dd, 0x1, 0x0);
        gbc.writeMem(0xdb77, { 0x1, 0xe7, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xad5);
        EXPECT(gbc.pc(), 0xdb7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb77), 0x1);
        EXPECT(gbc.readMem(0xdb78), 0xe7);
        EXPECT(gbc.readMem(0xdb79), 0x85);
        // 01 0341
        gbc.setState(0x851f, 0xce81, 0x670, 0x6b47, 0x894c, 0x92f4, 0x0, 0x1);
        gbc.writeMem(0x851f, { 0x1, 0xec, 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xce81);
        EXPECT(gbc.pc(), 0x8522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x851f), 0x1);
        EXPECT(gbc.readMem(0x8520), 0xec);
        EXPECT(gbc.readMem(0x8521), 0x41);
        // 01 0342
        gbc.setState(0x4e0c, 0xc78b, 0x81f0, 0xe4bf, 0xc774, 0xda69, 0x0, 0x1);
        gbc.writeMem(0x4e0c, { 0x1, 0xf7, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xc78b);
        EXPECT(gbc.pc(), 0x4e0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0343
        gbc.setState(0xefe4, 0x7a9f, 0xe950, 0x898, 0xde04, 0xdc12, 0x1, 0x1);
        gbc.writeMem(0xefe4, { 0x1, 0x59, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7a9f);
        EXPECT(gbc.pc(), 0xefe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefe4), 0x1);
        EXPECT(gbc.readMem(0xefe5), 0x59);
        EXPECT(gbc.readMem(0xefe6), 0x88);
        // 01 0345
        gbc.setState(0x7356, 0x980b, 0x8120, 0xb2ec, 0xbd02, 0xdcfb, 0x0, 0x0);
        gbc.writeMem(0x7356, { 0x1, 0x5f, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x980b);
        EXPECT(gbc.pc(), 0x7359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0346
        gbc.setState(0xced2, 0x3387, 0xd8e0, 0x9bfa, 0x4270, 0x1ff1, 0x0, 0x0);
        gbc.writeMem(0xced2, { 0x1, 0xab, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3387);
        EXPECT(gbc.pc(), 0xced5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced2), 0x1);
        EXPECT(gbc.readMem(0xced3), 0xab);
        EXPECT(gbc.readMem(0xced4), 0x4);
        // 01 0347
        gbc.setState(0x9f1b, 0x2a0a, 0xc4a0, 0xba60, 0x8ff8, 0xa019, 0x1, 0x1);
        gbc.writeMem(0x9f1b, { 0x1, 0x89, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x2a0a);
        EXPECT(gbc.pc(), 0x9f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1b), 0x1);
        EXPECT(gbc.readMem(0x9f1c), 0x89);
        EXPECT(gbc.readMem(0x9f1d), 0x21);
        // 01 0348
        gbc.setState(0x3308, 0x5584, 0xab80, 0xc251, 0x6bff, 0x4571, 0x0, 0x0);
        gbc.writeMem(0x3308, { 0x1, 0x1b, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5584);
        EXPECT(gbc.pc(), 0x330b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0349
        gbc.setState(0x7831, 0x2f6c, 0xa320, 0xa47c, 0x9325, 0xc592, 0x0, 0x0);
        gbc.writeMem(0x7831, { 0x1, 0xe7, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x2f6c);
        EXPECT(gbc.pc(), 0x7834);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 034A
        gbc.setState(0x2e14, 0x61f, 0xd670, 0x4bc8, 0x8cfa, 0x612e, 0x0, 0x1);
        gbc.writeMem(0x2e14, { 0x1, 0x48, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x61f);
        EXPECT(gbc.pc(), 0x2e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 034B
        gbc.setState(0xe2f3, 0x5158, 0x9250, 0x2348, 0x8a98, 0x5558, 0x0, 0x1);
        gbc.writeMem(0xe2f3, { 0x1, 0xa4, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5158);
        EXPECT(gbc.pc(), 0xe2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f3), 0x1);
        EXPECT(gbc.readMem(0xe2f4), 0xa4);
        EXPECT(gbc.readMem(0xe2f5), 0x80);
        // 01 034C
        gbc.setState(0xbdbf, 0x5bac, 0x6a30, 0xbbbf, 0xb678, 0x45c, 0x0, 0x1);
        gbc.writeMem(0xbdbf, { 0x1, 0x80, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5bac);
        EXPECT(gbc.pc(), 0xbdc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbf), 0x1);
        EXPECT(gbc.readMem(0xbdc0), 0x80);
        EXPECT(gbc.readMem(0xbdc1), 0xd6);
        // 01 034D
        gbc.setState(0x6009, 0x5c09, 0xc240, 0x9904, 0x909e, 0xba5c, 0x0, 0x0);
        gbc.writeMem(0x6009, { 0x1, 0x37, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5c09);
        EXPECT(gbc.pc(), 0x600c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 034E
        gbc.setState(0x19f2, 0x25f7, 0x89c0, 0xbbec, 0x601a, 0x4579, 0x0, 0x1);
        gbc.writeMem(0x19f2, { 0x1, 0x8a, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x25f7);
        EXPECT(gbc.pc(), 0x19f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 034F
        gbc.setState(0x4976, 0x9c2, 0x5510, 0xfcb9, 0x976b, 0x7b5d, 0x0, 0x1);
        gbc.writeMem(0x4976, { 0x1, 0x6d, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x9c2);
        EXPECT(gbc.pc(), 0x4979);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0350
        gbc.setState(0x520e, 0xd056, 0x2d00, 0xbfd3, 0x5068, 0x78e, 0x0, 0x0);
        gbc.writeMem(0x520e, { 0x1, 0x38, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd056);
        EXPECT(gbc.pc(), 0x5211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0351
        gbc.setState(0x76b0, 0x1d9d, 0x1f00, 0xd8ee, 0x927, 0x6df4, 0x0, 0x1);
        gbc.writeMem(0x76b0, { 0x1, 0x44, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1d9d);
        EXPECT(gbc.pc(), 0x76b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0353
        gbc.setState(0x7a4e, 0x91bb, 0xd8e0, 0xc4d7, 0x873b, 0x4fd5, 0x0, 0x1);
        gbc.writeMem(0x7a4e, { 0x1, 0x62, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0x7a51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0354
        gbc.setState(0x5ab8, 0x4673, 0xcf70, 0x479b, 0x9f6f, 0x1503, 0x0, 0x0);
        gbc.writeMem(0x5ab8, { 0x1, 0x2b, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4673);
        EXPECT(gbc.pc(), 0x5abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0355
        gbc.setState(0xbe22, 0xff2, 0x45c0, 0x2830, 0x805f, 0x2440, 0x1, 0x0);
        gbc.writeMem(0xbe22, { 0x1, 0x2d, 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xff2);
        EXPECT(gbc.pc(), 0xbe25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe22), 0x1);
        EXPECT(gbc.readMem(0xbe23), 0x2d);
        EXPECT(gbc.readMem(0xbe24), 0xcf);
        // 01 0356
        gbc.setState(0x8851, 0xde2d, 0x26a0, 0xbcde, 0x249a, 0xcd4, 0x1, 0x0);
        gbc.writeMem(0x8851, { 0x1, 0x14, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xde2d);
        EXPECT(gbc.pc(), 0x8854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8851), 0x1);
        EXPECT(gbc.readMem(0x8852), 0x14);
        EXPECT(gbc.readMem(0x8853), 0x1);
        // 01 0357
        gbc.setState(0x1451, 0x446e, 0x6a40, 0x4333, 0xed8d, 0xe25b, 0x0, 0x1);
        gbc.writeMem(0x1451, { 0x1, 0xb9, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x446e);
        EXPECT(gbc.pc(), 0x1454);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0358
        gbc.setState(0xab80, 0x3d81, 0x3c30, 0xeb85, 0x53d3, 0xfe6, 0x1, 0x1);
        gbc.writeMem(0xab80, { 0x1, 0x7d, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x3d81);
        EXPECT(gbc.pc(), 0xab83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab80), 0x1);
        EXPECT(gbc.readMem(0xab81), 0x7d);
        EXPECT(gbc.readMem(0xab82), 0xbd);
        // 01 0359
        gbc.setState(0x7fac, 0xcbcb, 0x6c30, 0xbfc9, 0x8902, 0x1e37, 0x0, 0x1);
        gbc.writeMem(0x7fac, { 0x1, 0xb9, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcbcb);
        EXPECT(gbc.pc(), 0x7faf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 035A
        gbc.setState(0x773f, 0x9a66, 0x52e0, 0xb7ae, 0x7d04, 0x37d2, 0x1, 0x0);
        gbc.writeMem(0x773f, { 0x1, 0x8c, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9a66);
        EXPECT(gbc.pc(), 0x7742);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 035B
        gbc.setState(0xd6ee, 0xf04f, 0x87c0, 0xbe7d, 0x1d97, 0x2d84, 0x0, 0x0);
        gbc.writeMem(0xd6ee, { 0x1, 0xc, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf04f);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ee), 0x1);
        EXPECT(gbc.readMem(0xd6ef), 0xc);
        EXPECT(gbc.readMem(0xd6f0), 0x4c);
        // 01 035C
        gbc.setState(0x7e4a, 0x861a, 0x9630, 0x898, 0xad60, 0xca82, 0x0, 0x1);
        gbc.writeMem(0x7e4a, { 0x1, 0x3b, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x861a);
        EXPECT(gbc.pc(), 0x7e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 035D
        gbc.setState(0x4a61, 0x8839, 0xca80, 0xf690, 0x17a, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0x4a61, { 0x1, 0x17, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x8839);
        EXPECT(gbc.pc(), 0x4a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 035E
        gbc.setState(0x3b3e, 0x4d4, 0xd470, 0x2aaf, 0x1aa4, 0xe612, 0x0, 0x1);
        gbc.writeMem(0x3b3e, { 0x1, 0x58, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4d4);
        EXPECT(gbc.pc(), 0x3b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 035F
        gbc.setState(0x46a3, 0xeb1, 0x9930, 0xfa6c, 0x38c7, 0xfafc, 0x0, 0x0);
        gbc.writeMem(0x46a3, { 0x1, 0xc5, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xeb1);
        EXPECT(gbc.pc(), 0x46a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0360
        gbc.setState(0x238f, 0x37c5, 0xf960, 0xacdd, 0xfd44, 0xbfdc, 0x0, 0x1);
        gbc.writeMem(0x238f, { 0x1, 0x76, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x37c5);
        EXPECT(gbc.pc(), 0x2392);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0361
        gbc.setState(0xd55d, 0x4a44, 0xa460, 0xacf7, 0xa42c, 0xb912, 0x1, 0x1);
        gbc.writeMem(0xd55d, { 0x1, 0x49, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4a44);
        EXPECT(gbc.pc(), 0xd560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd55d), 0x1);
        EXPECT(gbc.readMem(0xd55e), 0x49);
        EXPECT(gbc.readMem(0xd55f), 0x5a);
        // 01 0362
        gbc.setState(0x8d17, 0x8d3, 0x83e0, 0x90a0, 0x70f3, 0x2e6, 0x1, 0x0);
        gbc.writeMem(0x8d17, { 0x1, 0x73, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8d3);
        EXPECT(gbc.pc(), 0x8d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d17), 0x1);
        EXPECT(gbc.readMem(0x8d18), 0x73);
        EXPECT(gbc.readMem(0x8d19), 0xce);
        // 01 0363
        gbc.setState(0x6e88, 0xd553, 0xa020, 0xb712, 0xa39a, 0x9e4f, 0x0, 0x1);
        gbc.writeMem(0x6e88, { 0x1, 0x9e, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd553);
        EXPECT(gbc.pc(), 0x6e8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0364
        gbc.setState(0xea34, 0x8b78, 0x2ca0, 0xaa19, 0xc010, 0x7d2b, 0x0, 0x1);
        gbc.writeMem(0xea34, { 0x1, 0xcd, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8b78);
        EXPECT(gbc.pc(), 0xea37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea34), 0x1);
        EXPECT(gbc.readMem(0xea35), 0xcd);
        EXPECT(gbc.readMem(0xea36), 0xad);
        // 01 0365
        gbc.setState(0x99a9, 0x9e65, 0xefb0, 0xfa39, 0x37d7, 0x5bc9, 0x0, 0x0);
        gbc.writeMem(0x99a9, { 0x1, 0x3d, 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9e65);
        EXPECT(gbc.pc(), 0x99ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99a9), 0x1);
        EXPECT(gbc.readMem(0x99aa), 0x3d);
        EXPECT(gbc.readMem(0x99ab), 0xcb);
        // 01 0366
        gbc.setState(0x56f1, 0x60f7, 0x4f50, 0x8fa8, 0x21ef, 0xe331, 0x0, 0x1);
        gbc.writeMem(0x56f1, { 0x1, 0xf5, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x60f7);
        EXPECT(gbc.pc(), 0x56f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0367
        gbc.setState(0x2857, 0x51bc, 0xb60, 0x1ea7, 0xc974, 0x12c2, 0x0, 0x0);
        gbc.writeMem(0x2857, { 0x1, 0x6d, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x51bc);
        EXPECT(gbc.pc(), 0x285a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0368
        gbc.setState(0x66e5, 0xbff5, 0xe660, 0xb777, 0xda8, 0xfc64, 0x0, 0x0);
        gbc.writeMem(0x66e5, { 0x1, 0xde, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbff5);
        EXPECT(gbc.pc(), 0x66e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0369
        gbc.setState(0x7303, 0x46e9, 0x9100, 0x1bd5, 0xbe95, 0xedba, 0x0, 0x1);
        gbc.writeMem(0x7303, { 0x1, 0x1c, 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x46e9);
        EXPECT(gbc.pc(), 0x7306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 036A
        gbc.setState(0x89a7, 0x4821, 0xd870, 0x1f8c, 0x9d1b, 0xbf7b, 0x0, 0x1);
        gbc.writeMem(0x89a7, { 0x1, 0x42, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4821);
        EXPECT(gbc.pc(), 0x89aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a7), 0x1);
        EXPECT(gbc.readMem(0x89a8), 0x42);
        EXPECT(gbc.readMem(0x89a9), 0x5b);
        // 01 036B
        gbc.setState(0xd9ea, 0xe30, 0xf020, 0xc94b, 0x1fb7, 0x500e, 0x1, 0x0);
        gbc.writeMem(0xd9ea, { 0x1, 0x72, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe30);
        EXPECT(gbc.pc(), 0xd9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9ea), 0x1);
        EXPECT(gbc.readMem(0xd9eb), 0x72);
        EXPECT(gbc.readMem(0xd9ec), 0x28);
        // 01 036C
        gbc.setState(0xbd25, 0x966c, 0xa830, 0xcd65, 0x4b, 0xa4da, 0x1, 0x0);
        gbc.writeMem(0xbd25, { 0x1, 0xb1, 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x966c);
        EXPECT(gbc.pc(), 0xbd28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd25), 0x1);
        EXPECT(gbc.readMem(0xbd26), 0xb1);
        EXPECT(gbc.readMem(0xbd27), 0x7d);
        // 01 036E
        gbc.setState(0x8c16, 0x5fc4, 0x21c0, 0x73a3, 0xa6c1, 0x89a6, 0x0, 0x1);
        gbc.writeMem(0x8c16, { 0x1, 0x36, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5fc4);
        EXPECT(gbc.pc(), 0x8c19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c16), 0x1);
        EXPECT(gbc.readMem(0x8c17), 0x36);
        EXPECT(gbc.readMem(0x8c18), 0xdc);
        // 01 036F
        gbc.setState(0x4283, 0x81d4, 0x8bd0, 0x6853, 0x4a98, 0x15e5, 0x0, 0x1);
        gbc.writeMem(0x4283, { 0x1, 0x6c, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x81d4);
        EXPECT(gbc.pc(), 0x4286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0371
        gbc.setState(0xd20d, 0x686, 0x1fd0, 0x60d0, 0x15a6, 0xa942, 0x0, 0x0);
        gbc.writeMem(0xd20d, { 0x1, 0xe2, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x686);
        EXPECT(gbc.pc(), 0xd210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd20d), 0x1);
        EXPECT(gbc.readMem(0xd20e), 0xe2);
        EXPECT(gbc.readMem(0xd20f), 0x11);
        // 01 0372
        gbc.setState(0x8f43, 0x2e6b, 0xdb10, 0xbb56, 0xfca8, 0xef13, 0x1, 0x1);
        gbc.writeMem(0x8f43, { 0x1, 0x74, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2e6b);
        EXPECT(gbc.pc(), 0x8f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f43), 0x1);
        EXPECT(gbc.readMem(0x8f44), 0x74);
        EXPECT(gbc.readMem(0x8f45), 0x34);
        // 01 0373
        gbc.setState(0x85b2, 0x4255, 0xcfc0, 0x26d8, 0xaf77, 0x459f, 0x1, 0x0);
        gbc.writeMem(0x85b2, { 0x1, 0x2, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4255);
        EXPECT(gbc.pc(), 0x85b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b2), 0x1);
        EXPECT(gbc.readMem(0x85b3), 0x2);
        EXPECT(gbc.readMem(0x85b4), 0xdd);
        // 01 0374
        gbc.setState(0xb39e, 0xabda, 0xa6f0, 0xd99e, 0x5557, 0x63ff, 0x0, 0x0);
        gbc.writeMem(0xb39e, { 0x1, 0xbb, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xabda);
        EXPECT(gbc.pc(), 0xb3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39e), 0x1);
        EXPECT(gbc.readMem(0xb39f), 0xbb);
        EXPECT(gbc.readMem(0xb3a0), 0x49);
        // 01 0375
        gbc.setState(0xd687, 0x1239, 0xbee0, 0x107c, 0x522c, 0x4bb3, 0x1, 0x1);
        gbc.writeMem(0xd687, { 0x1, 0xab, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x1239);
        EXPECT(gbc.pc(), 0xd68a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd687), 0x1);
        EXPECT(gbc.readMem(0xd688), 0xab);
        EXPECT(gbc.readMem(0xd689), 0x6d);
        // 01 0376
        gbc.setState(0xc066, 0x9abc, 0x9fa0, 0x3c4c, 0xf645, 0x49b9, 0x0, 0x1);
        gbc.writeMem(0xc066, { 0x1, 0x73, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x9abc);
        EXPECT(gbc.pc(), 0xc069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc066), 0x1);
        EXPECT(gbc.readMem(0xc067), 0x73);
        EXPECT(gbc.readMem(0xc068), 0xb0);
        // 01 0377
        gbc.setState(0x871c, 0x2875, 0xcd50, 0x92d, 0xa201, 0x4035, 0x1, 0x1);
        gbc.writeMem(0x871c, { 0x1, 0x8d, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0x871f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871c), 0x1);
        EXPECT(gbc.readMem(0x871d), 0x8d);
        EXPECT(gbc.readMem(0x871e), 0x62);
        // 01 0378
        gbc.setState(0x9431, 0x55c6, 0x8eb0, 0xf870, 0x6457, 0xf09a, 0x0, 0x1);
        gbc.writeMem(0x9431, { 0x1, 0xc2, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x55c6);
        EXPECT(gbc.pc(), 0x9434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0x1);
        EXPECT(gbc.readMem(0x9432), 0xc2);
        EXPECT(gbc.readMem(0x9433), 0xd4);
        // 01 0379
        gbc.setState(0xcf5d, 0x4935, 0x4b40, 0x3197, 0x4b10, 0xe066, 0x0, 0x1);
        gbc.writeMem(0xcf5d, { 0x1, 0xf0, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4935);
        EXPECT(gbc.pc(), 0xcf60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf5d), 0x1);
        EXPECT(gbc.readMem(0xcf5e), 0xf0);
        EXPECT(gbc.readMem(0xcf5f), 0x7f);
        // 01 037A
        gbc.setState(0x3c21, 0x15de, 0xa3c0, 0xac06, 0xdd52, 0x33c7, 0x1, 0x1);
        gbc.writeMem(0x3c21, { 0x1, 0x2d, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x15de);
        EXPECT(gbc.pc(), 0x3c24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 037B
        gbc.setState(0xdfcd, 0x4f22, 0xad90, 0xc9d9, 0x6aaa, 0xa486, 0x0, 0x0);
        gbc.writeMem(0xdfcd, { 0x1, 0xe4, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4f22);
        EXPECT(gbc.pc(), 0xdfd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfcd), 0x1);
        EXPECT(gbc.readMem(0xdfce), 0xe4);
        EXPECT(gbc.readMem(0xdfcf), 0xb1);
        // 01 037C
        gbc.setState(0x3199, 0xb3b5, 0x3c90, 0xce82, 0x188a, 0x38f9, 0x1, 0x1);
        gbc.writeMem(0x3199, { 0x1, 0xa3, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb3b5);
        EXPECT(gbc.pc(), 0x319c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 037D
        gbc.setState(0x8ee4, 0x7df5, 0x7e30, 0x93ca, 0xefd4, 0xc99a, 0x0, 0x1);
        gbc.writeMem(0x8ee4, { 0x1, 0xad, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x7df5);
        EXPECT(gbc.pc(), 0x8ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee4), 0x1);
        EXPECT(gbc.readMem(0x8ee5), 0xad);
        EXPECT(gbc.readMem(0x8ee6), 0x7c);
        // 01 037E
        gbc.setState(0x4a63, 0x48df, 0xd700, 0x7a96, 0x3983, 0xe1e4, 0x1, 0x1);
        gbc.writeMem(0x4a63, { 0x1, 0x49, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x48df);
        EXPECT(gbc.pc(), 0x4a66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 037F
        gbc.setState(0xec42, 0x8569, 0xc970, 0x217d, 0x8e4b, 0x99a1, 0x0, 0x0);
        gbc.writeMem(0xec42, { 0x1, 0x78, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8569);
        EXPECT(gbc.pc(), 0xec45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec42), 0x1);
        EXPECT(gbc.readMem(0xec43), 0x78);
        EXPECT(gbc.readMem(0xec44), 0x82);
        // 01 0380
        gbc.setState(0x7f2d, 0x127e, 0x1780, 0xdcef, 0x8df4, 0xe091, 0x0, 0x0);
        gbc.writeMem(0x7f2d, { 0x1, 0x9, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x127e);
        EXPECT(gbc.pc(), 0x7f30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0381
        gbc.setState(0x4845, 0xc1a7, 0x44e0, 0xb9de, 0xd7ca, 0xc327, 0x0, 0x0);
        gbc.writeMem(0x4845, { 0x1, 0xc6, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xc1a7);
        EXPECT(gbc.pc(), 0x4848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0382
        gbc.setState(0xea70, 0xac28, 0x2240, 0xf98, 0x2acd, 0xb9c9, 0x1, 0x1);
        gbc.writeMem(0xea70, { 0x1, 0xf7, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xac28);
        EXPECT(gbc.pc(), 0xea73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea70), 0x1);
        EXPECT(gbc.readMem(0xea71), 0xf7);
        EXPECT(gbc.readMem(0xea72), 0xec);
        // 01 0384
        gbc.setState(0xa41f, 0x4fbd, 0x45b0, 0xfc6, 0xbb69, 0x7ebb, 0x1, 0x1);
        gbc.writeMem(0xa41f, { 0x1, 0xf5, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4fbd);
        EXPECT(gbc.pc(), 0xa422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa41f), 0x1);
        EXPECT(gbc.readMem(0xa420), 0xf5);
        EXPECT(gbc.readMem(0xa421), 0xd1);
        // 01 0385
        gbc.setState(0x6dbb, 0xd9da, 0xa4e0, 0xfe79, 0x5c17, 0x30e1, 0x1, 0x0);
        gbc.writeMem(0x6dbb, { 0x1, 0xf, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd9da);
        EXPECT(gbc.pc(), 0x6dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0386
        gbc.setState(0x5810, 0x38a4, 0xd610, 0x7cd1, 0x8057, 0x965f, 0x1, 0x1);
        gbc.writeMem(0x5810, { 0x1, 0xf9, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x38a4);
        EXPECT(gbc.pc(), 0x5813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 0387
        gbc.setState(0x1f3b, 0xff0b, 0x40c0, 0x9898, 0xf736, 0x81df, 0x0, 0x1);
        gbc.writeMem(0x1f3b, { 0x1, 0x5a, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xff0b);
        EXPECT(gbc.pc(), 0x1f3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0388
        gbc.setState(0xe75, 0xe599, 0x5120, 0x8733, 0xec6b, 0x28cc, 0x0, 0x1);
        gbc.writeMem(0xe75, { 0x1, 0x58, 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe599);
        EXPECT(gbc.pc(), 0xe78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0389
        gbc.setState(0x9d53, 0x2fe6, 0x1e00, 0x90d9, 0x134c, 0xac8, 0x1, 0x0);
        gbc.writeMem(0x9d53, { 0x1, 0xfa, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2fe6);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d53), 0x1);
        EXPECT(gbc.readMem(0x9d54), 0xfa);
        EXPECT(gbc.readMem(0x9d55), 0x1b);
        // 01 038A
        gbc.setState(0xe786, 0x8c4a, 0x19c0, 0x6da8, 0xfec1, 0xe780, 0x1, 0x0);
        gbc.writeMem(0xe786, { 0x1, 0x8e, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8c4a);
        EXPECT(gbc.pc(), 0xe789);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe786), 0x1);
        EXPECT(gbc.readMem(0xe787), 0x8e);
        EXPECT(gbc.readMem(0xe788), 0x11);
        // 01 038B
        gbc.setState(0x4c9d, 0xe957, 0xd2f0, 0xc694, 0x1e29, 0x6dc8, 0x1, 0x1);
        gbc.writeMem(0x4c9d, { 0x1, 0xd5, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe957);
        EXPECT(gbc.pc(), 0x4ca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 038C
        gbc.setState(0xd92c, 0x9043, 0x8d00, 0xfc07, 0xf74b, 0x19bb, 0x1, 0x1);
        gbc.writeMem(0xd92c, { 0x1, 0x21, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9043);
        EXPECT(gbc.pc(), 0xd92f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd92c), 0x1);
        EXPECT(gbc.readMem(0xd92d), 0x21);
        EXPECT(gbc.readMem(0xd92e), 0xfb);
        // 01 038D
        gbc.setState(0xd519, 0xb94a, 0x4ea0, 0x2846, 0x62e7, 0x6abb, 0x1, 0x0);
        gbc.writeMem(0xd519, { 0x1, 0xb9, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb94a);
        EXPECT(gbc.pc(), 0xd51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd519), 0x1);
        EXPECT(gbc.readMem(0xd51a), 0xb9);
        EXPECT(gbc.readMem(0xd51b), 0xa2);
        // 01 038E
        gbc.setState(0xe6b9, 0xa8a2, 0x5230, 0xd813, 0xcfd9, 0xaaf4, 0x1, 0x1);
        gbc.writeMem(0xe6b9, { 0x1, 0xb0, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa8a2);
        EXPECT(gbc.pc(), 0xe6bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6b9), 0x1);
        EXPECT(gbc.readMem(0xe6ba), 0xb0);
        EXPECT(gbc.readMem(0xe6bb), 0x7c);
        // 01 038F
        gbc.setState(0xa715, 0xaec4, 0xbbe0, 0xb03c, 0x2cf7, 0xfb5a, 0x1, 0x1);
        gbc.writeMem(0xa715, { 0x1, 0x2f, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xaec4);
        EXPECT(gbc.pc(), 0xa718);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa715), 0x1);
        EXPECT(gbc.readMem(0xa716), 0x2f);
        EXPECT(gbc.readMem(0xa717), 0xf2);
        // 01 0390
        gbc.setState(0x76d3, 0x78e8, 0x45b0, 0xc58c, 0xe419, 0xfda9, 0x1, 0x1);
        gbc.writeMem(0x76d3, { 0x1, 0x3, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x78e8);
        EXPECT(gbc.pc(), 0x76d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0391
        gbc.setState(0xbaec, 0xa8e5, 0x7e60, 0xa740, 0xa1cc, 0xd880, 0x0, 0x0);
        gbc.writeMem(0xbaec, { 0x1, 0xcb, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa8e5);
        EXPECT(gbc.pc(), 0xbaef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaec), 0x1);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        EXPECT(gbc.readMem(0xbaee), 0xf4);
        // 01 0392
        gbc.setState(0xa202, 0x5d0b, 0x1970, 0xec7a, 0x9de1, 0xa988, 0x0, 0x1);
        gbc.writeMem(0xa202, { 0x1, 0x2e, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5d0b);
        EXPECT(gbc.pc(), 0xa205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa202), 0x1);
        EXPECT(gbc.readMem(0xa203), 0x2e);
        EXPECT(gbc.readMem(0xa204), 0x53);
        // 01 0395
        gbc.setState(0x3647, 0x9701, 0xcda0, 0xa9fb, 0xfef7, 0xbac2, 0x0, 0x0);
        gbc.writeMem(0x3647, { 0x1, 0x1e, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9701);
        EXPECT(gbc.pc(), 0x364a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 0396
        gbc.setState(0x60f7, 0x2c49, 0xe280, 0x95ea, 0xb07e, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x60f7, { 0x1, 0xe, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2c49);
        EXPECT(gbc.pc(), 0x60fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 0397
        gbc.setState(0x2fa, 0x20a2, 0x81f0, 0x84fc, 0x3d2a, 0xf3af, 0x0, 0x0);
        gbc.writeMem(0x2fa, { 0x1, 0xe5, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x20a2);
        EXPECT(gbc.pc(), 0x2fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 0398
        gbc.setState(0x1a6a, 0xf822, 0x7940, 0xaf1e, 0x1d22, 0x380, 0x0, 0x0);
        gbc.writeMem(0x1a6a, { 0x1, 0x44, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf822);
        EXPECT(gbc.pc(), 0x1a6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 039A
        gbc.setState(0x3355, 0xfae1, 0x85b0, 0x1dd0, 0xbf21, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0x3355, { 0x1, 0xbd, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xfae1);
        EXPECT(gbc.pc(), 0x3358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 039B
        gbc.setState(0xc873, 0x3d82, 0x2f0, 0x6794, 0xf421, 0x1d9d, 0x0, 0x1);
        gbc.writeMem(0xc873, { 0x1, 0xe4, 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x3d82);
        EXPECT(gbc.pc(), 0xc876);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc873), 0x1);
        EXPECT(gbc.readMem(0xc874), 0xe4);
        EXPECT(gbc.readMem(0xc875), 0x73);
        // 01 039C
        gbc.setState(0x3ab, 0xd343, 0x8b40, 0x959a, 0xe72b, 0x3b83, 0x1, 0x0);
        gbc.writeMem(0x3ab, { 0x1, 0x7c, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd343);
        EXPECT(gbc.pc(), 0x3ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 039D
        gbc.setState(0x49ef, 0xc705, 0x9b40, 0x46b1, 0xd717, 0xc885, 0x1, 0x0);
        gbc.writeMem(0x49ef, { 0x1, 0xae, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc705);
        EXPECT(gbc.pc(), 0x49f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 039F
        gbc.setState(0x80f1, 0x4100, 0x1a60, 0x1693, 0x9282, 0x5868, 0x1, 0x0);
        gbc.writeMem(0x80f1, { 0x1, 0x15, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4100);
        EXPECT(gbc.pc(), 0x80f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f1), 0x1);
        EXPECT(gbc.readMem(0x80f2), 0x15);
        EXPECT(gbc.readMem(0x80f3), 0x88);
        // 01 03A0
        gbc.setState(0xa454, 0x55c5, 0x26b0, 0xf6ac, 0xc709, 0xf20c, 0x1, 0x0);
        gbc.writeMem(0xa454, { 0x1, 0x82, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x55c5);
        EXPECT(gbc.pc(), 0xa457);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa454), 0x1);
        EXPECT(gbc.readMem(0xa455), 0x82);
        EXPECT(gbc.readMem(0xa456), 0xfe);
        // 01 03A1
        gbc.setState(0x67d2, 0x10eb, 0xae00, 0xab11, 0xded4, 0x551b, 0x0, 0x0);
        gbc.writeMem(0x67d2, { 0x1, 0x65, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x10eb);
        EXPECT(gbc.pc(), 0x67d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03A2
        gbc.setState(0x91c6, 0xdc3c, 0xa5d0, 0x228d, 0xdda1, 0xb7dc, 0x1, 0x1);
        gbc.writeMem(0x91c6, { 0x1, 0xd0, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xdc3c);
        EXPECT(gbc.pc(), 0x91c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91c6), 0x1);
        EXPECT(gbc.readMem(0x91c7), 0xd0);
        EXPECT(gbc.readMem(0x91c8), 0x9);
        // 01 03A3
        gbc.setState(0x93cc, 0x9bff, 0x1ba0, 0xb2bc, 0x6322, 0xb735, 0x0, 0x1);
        gbc.writeMem(0x93cc, { 0x1, 0x45, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9bff);
        EXPECT(gbc.pc(), 0x93cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93cc), 0x1);
        EXPECT(gbc.readMem(0x93cd), 0x45);
        EXPECT(gbc.readMem(0x93ce), 0x2e);
        // 01 03A4
        gbc.setState(0x3db7, 0xed3f, 0xc1f0, 0xfc98, 0x67fc, 0x215f, 0x1, 0x0);
        gbc.writeMem(0x3db7, { 0x1, 0x4b, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xed3f);
        EXPECT(gbc.pc(), 0x3dba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03A5
        gbc.setState(0xbdaa, 0xbbc6, 0x1820, 0xf974, 0xe855, 0xc28d, 0x0, 0x1);
        gbc.writeMem(0xbdaa, { 0x1, 0x2c, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbbc6);
        EXPECT(gbc.pc(), 0xbdad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdaa), 0x1);
        EXPECT(gbc.readMem(0xbdab), 0x2c);
        EXPECT(gbc.readMem(0xbdac), 0x70);
        // 01 03A6
        gbc.setState(0x3a4e, 0xb2c7, 0x94c0, 0x5f64, 0x14ea, 0xb24c, 0x1, 0x1);
        gbc.writeMem(0x3a4e, { 0x1, 0xaa, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb2c7);
        EXPECT(gbc.pc(), 0x3a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03A7
        gbc.setState(0x3e05, 0xc726, 0xe620, 0x78e8, 0x360b, 0x732b, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0x1, 0x78, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc726);
        EXPECT(gbc.pc(), 0x3e08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03A8
        gbc.setState(0xbe95, 0xa3f7, 0xc250, 0xc82c, 0x38fc, 0x14a0, 0x0, 0x0);
        gbc.writeMem(0xbe95, { 0x1, 0xba, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa3f7);
        EXPECT(gbc.pc(), 0xbe98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe95), 0x1);
        EXPECT(gbc.readMem(0xbe96), 0xba);
        EXPECT(gbc.readMem(0xbe97), 0x23);
        // 01 03A9
        gbc.setState(0x1b07, 0x7877, 0x87f0, 0xba43, 0x65b4, 0xb050, 0x0, 0x0);
        gbc.writeMem(0x1b07, { 0x1, 0x22, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7877);
        EXPECT(gbc.pc(), 0x1b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03AA
        gbc.setState(0xc1e8, 0x8cc3, 0x7e90, 0xa748, 0xeadc, 0x46ef, 0x1, 0x1);
        gbc.writeMem(0xc1e8, { 0x1, 0xdf, 0x57 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x8cc3);
        EXPECT(gbc.pc(), 0xc1eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1e8), 0x1);
        EXPECT(gbc.readMem(0xc1e9), 0xdf);
        EXPECT(gbc.readMem(0xc1ea), 0x57);
        // 01 03AB
        gbc.setState(0xda61, 0x26a5, 0xd300, 0xdabc, 0x2daf, 0x27fd, 0x0, 0x0);
        gbc.writeMem(0xda61, { 0x1, 0x3e, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x26a5);
        EXPECT(gbc.pc(), 0xda64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda61), 0x1);
        EXPECT(gbc.readMem(0xda62), 0x3e);
        EXPECT(gbc.readMem(0xda63), 0xf2);
        // 01 03AC
        gbc.setState(0x9ddb, 0x3073, 0xd7f0, 0x40ba, 0x675f, 0xb6c6, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0x1, 0xd6, 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3073);
        EXPECT(gbc.pc(), 0x9dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ddb), 0x1);
        EXPECT(gbc.readMem(0x9ddc), 0xd6);
        EXPECT(gbc.readMem(0x9ddd), 0xa7);
        // 01 03AD
        gbc.setState(0xdadf, 0x347c, 0x1b20, 0x88e2, 0x2d20, 0x8743, 0x0, 0x1);
        gbc.writeMem(0xdadf, { 0x1, 0xbe, 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x347c);
        EXPECT(gbc.pc(), 0xdae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdadf), 0x1);
        EXPECT(gbc.readMem(0xdae0), 0xbe);
        EXPECT(gbc.readMem(0xdae1), 0x51);
        // 01 03AE
        gbc.setState(0x9ab7, 0x7b94, 0x8310, 0xaba0, 0x9cc1, 0x40d9, 0x0, 0x0);
        gbc.writeMem(0x9ab7, { 0x1, 0xa0, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x7b94);
        EXPECT(gbc.pc(), 0x9aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ab7), 0x1);
        EXPECT(gbc.readMem(0x9ab8), 0xa0);
        EXPECT(gbc.readMem(0x9ab9), 0x8b);
        // 01 03AF
        gbc.setState(0x4c3f, 0x8d80, 0x7000, 0x26af, 0xdba3, 0x42ec, 0x1, 0x0);
        gbc.writeMem(0x4c3f, { 0x1, 0x38, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8d80);
        EXPECT(gbc.pc(), 0x4c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03B0
        gbc.setState(0x65e1, 0xd24a, 0xe920, 0x3f6e, 0x858, 0x91a0, 0x0, 0x0);
        gbc.writeMem(0x65e1, { 0x1, 0xf1, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd24a);
        EXPECT(gbc.pc(), 0x65e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03B1
        gbc.setState(0x72b8, 0x2e9b, 0x1920, 0xcc1f, 0x1b51, 0x1479, 0x0, 0x0);
        gbc.writeMem(0x72b8, { 0x1, 0x4e, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x2e9b);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03B2
        gbc.setState(0xbb86, 0x4042, 0xf7c0, 0x1677, 0xe718, 0xfcb5, 0x1, 0x1);
        gbc.writeMem(0xbb86, { 0x1, 0xe1, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4042);
        EXPECT(gbc.pc(), 0xbb89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb86), 0x1);
        EXPECT(gbc.readMem(0xbb87), 0xe1);
        EXPECT(gbc.readMem(0xbb88), 0xf1);
        // 01 03B3
        gbc.setState(0xe80a, 0x5750, 0xd630, 0xdee2, 0xf90a, 0x4097, 0x1, 0x1);
        gbc.writeMem(0xe80a, { 0x1, 0xeb, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5750);
        EXPECT(gbc.pc(), 0xe80d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe80a), 0x1);
        EXPECT(gbc.readMem(0xe80b), 0xeb);
        EXPECT(gbc.readMem(0xe80c), 0x1b);
        // 01 03B4
        gbc.setState(0xd41f, 0x8c78, 0xba00, 0x3a18, 0xe00, 0x2332, 0x0, 0x1);
        gbc.writeMem(0xd41f, { 0x1, 0xe1, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8c78);
        EXPECT(gbc.pc(), 0xd422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd41f), 0x1);
        EXPECT(gbc.readMem(0xd420), 0xe1);
        EXPECT(gbc.readMem(0xd421), 0xc3);
        // 01 03B5
        gbc.setState(0xe980, 0x1743, 0xf0, 0x816e, 0xdb9d, 0xcc05, 0x1, 0x1);
        gbc.writeMem(0xe980, { 0x1, 0xcf, 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1743);
        EXPECT(gbc.pc(), 0xe983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe980), 0x1);
        EXPECT(gbc.readMem(0xe981), 0xcf);
        EXPECT(gbc.readMem(0xe982), 0xf6);
        // 01 03B6
        gbc.setState(0xeb95, 0xa67f, 0x2070, 0xc42d, 0x3b41, 0x6baf, 0x1, 0x1);
        gbc.writeMem(0xeb95, { 0x1, 0xd2, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xa67f);
        EXPECT(gbc.pc(), 0xeb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb95), 0x1);
        EXPECT(gbc.readMem(0xeb96), 0xd2);
        EXPECT(gbc.readMem(0xeb97), 0x1);
        // 01 03B7
        gbc.setState(0x195e, 0x18a9, 0xa400, 0x24c6, 0x4191, 0xdbdf, 0x1, 0x0);
        gbc.writeMem(0x195e, { 0x1, 0xe3, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x18a9);
        EXPECT(gbc.pc(), 0x1961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03B8
        gbc.setState(0x52e7, 0x14ad, 0x41f0, 0x2fe2, 0x490b, 0x8a1f, 0x0, 0x1);
        gbc.writeMem(0x52e7, { 0x1, 0xf3, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x14ad);
        EXPECT(gbc.pc(), 0x52ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03B9
        gbc.setState(0xc5a1, 0xfab4, 0x4af0, 0xfd45, 0x2a3b, 0xab67, 0x0, 0x0);
        gbc.writeMem(0xc5a1, { 0x1, 0x62, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfab4);
        EXPECT(gbc.pc(), 0xc5a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5a1), 0x1);
        EXPECT(gbc.readMem(0xc5a2), 0x62);
        EXPECT(gbc.readMem(0xc5a3), 0x4);
        // 01 03BA
        gbc.setState(0xaa94, 0x5f79, 0x4f40, 0xa606, 0x25f9, 0x3b34, 0x0, 0x1);
        gbc.writeMem(0xaa94, { 0x1, 0xe2, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5f79);
        EXPECT(gbc.pc(), 0xaa97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa94), 0x1);
        EXPECT(gbc.readMem(0xaa95), 0xe2);
        EXPECT(gbc.readMem(0xaa96), 0xc4);
        // 01 03BB
        gbc.setState(0x6d3f, 0xbb84, 0x6530, 0x5abc, 0x4852, 0xd1bb, 0x1, 0x1);
        gbc.writeMem(0x6d3f, { 0x1, 0x60, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbb84);
        EXPECT(gbc.pc(), 0x6d42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03BC
        gbc.setState(0x58a0, 0xd201, 0x5470, 0x7204, 0xed48, 0xd1ca, 0x1, 0x0);
        gbc.writeMem(0x58a0, { 0x1, 0x2b, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xd201);
        EXPECT(gbc.pc(), 0x58a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03BD
        gbc.setState(0x944b, 0xf770, 0x9c70, 0x4b85, 0x6747, 0x7699, 0x1, 0x0);
        gbc.writeMem(0x944b, { 0x1, 0x3d, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf770);
        EXPECT(gbc.pc(), 0x944e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x944b), 0x1);
        EXPECT(gbc.readMem(0x944c), 0x3d);
        EXPECT(gbc.readMem(0x944d), 0x32);
        // 01 03BE
        gbc.setState(0x17d7, 0x30c9, 0xe970, 0xa116, 0x621b, 0xde42, 0x1, 0x0);
        gbc.writeMem(0x17d7, { 0x1, 0x5b, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x30c9);
        EXPECT(gbc.pc(), 0x17da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03BF
        gbc.setState(0x1676, 0x46d8, 0x5a20, 0x1fdd, 0x9c91, 0x13a5, 0x1, 0x1);
        gbc.writeMem(0x1676, { 0x1, 0xf9, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x46d8);
        EXPECT(gbc.pc(), 0x1679);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03C0
        gbc.setState(0x6cc5, 0xdec4, 0xb2a0, 0xc987, 0x71be, 0xc800, 0x0, 0x0);
        gbc.writeMem(0x6cc5, { 0x1, 0x72, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xdec4);
        EXPECT(gbc.pc(), 0x6cc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03C1
        gbc.setState(0x397b, 0xd7e1, 0x87d0, 0x4ed5, 0xd86d, 0x46d9, 0x1, 0x1);
        gbc.writeMem(0x397b, { 0x1, 0xd7, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xd7e1);
        EXPECT(gbc.pc(), 0x397e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 03C2
        gbc.setState(0xbe77, 0x64f3, 0x95e0, 0xfbfd, 0xd045, 0x3e77, 0x1, 0x1);
        gbc.writeMem(0xbe77, { 0x1, 0xd, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x64f3);
        EXPECT(gbc.pc(), 0xbe7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe77), 0x1);
        EXPECT(gbc.readMem(0xbe78), 0xd);
        EXPECT(gbc.readMem(0xbe79), 0xd4);
        // 01 03C3
        gbc.setState(0xc9eb, 0x7878, 0xe1b0, 0xa115, 0xee05, 0xc8bb, 0x1, 0x1);
        gbc.writeMem(0xc9eb, { 0x1, 0x6d, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7878);
        EXPECT(gbc.pc(), 0xc9ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9eb), 0x1);
        EXPECT(gbc.readMem(0xc9ec), 0x6d);
        EXPECT(gbc.readMem(0xc9ed), 0x5d);
        // 01 03C4
        gbc.setState(0x5d1e, 0xb81a, 0x6a30, 0xfae1, 0xc498, 0xcbbc, 0x1, 0x1);
        gbc.writeMem(0x5d1e, { 0x1, 0xe1, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0x5d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03C5
        gbc.setState(0xa905, 0x8dc5, 0x12c0, 0xa67e, 0x6b1e, 0x58b, 0x0, 0x0);
        gbc.writeMem(0xa905, { 0x1, 0x72, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x8dc5);
        EXPECT(gbc.pc(), 0xa908);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa905), 0x1);
        EXPECT(gbc.readMem(0xa906), 0x72);
        EXPECT(gbc.readMem(0xa907), 0x89);
        // 01 03C6
        gbc.setState(0x78cc, 0x118b, 0xec30, 0xe444, 0x7d2b, 0x7b4b, 0x1, 0x0);
        gbc.writeMem(0x78cc, { 0x1, 0x84, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x118b);
        EXPECT(gbc.pc(), 0x78cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03C7
        gbc.setState(0x1959, 0xdf89, 0x230, 0x77c7, 0x47c2, 0x78a5, 0x1, 0x1);
        gbc.writeMem(0x1959, { 0x1, 0x8b, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xdf89);
        EXPECT(gbc.pc(), 0x195c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03C8
        gbc.setState(0xbeb8, 0xe76c, 0x8840, 0x78c9, 0xc0d5, 0x656e, 0x1, 0x1);
        gbc.writeMem(0xbeb8, { 0x1, 0xbb, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe76c);
        EXPECT(gbc.pc(), 0xbebb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeb8), 0x1);
        EXPECT(gbc.readMem(0xbeb9), 0xbb);
        EXPECT(gbc.readMem(0xbeba), 0x8b);
        // 01 03C9
        gbc.setState(0x422e, 0x476e, 0x2f00, 0xecc0, 0x8c23, 0xf8a4, 0x1, 0x0);
        gbc.writeMem(0x422e, { 0x1, 0xef, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x476e);
        EXPECT(gbc.pc(), 0x4231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03CA
        gbc.setState(0x5545, 0xb5de, 0xbc60, 0x2a1f, 0xd2e6, 0x1d07, 0x1, 0x0);
        gbc.writeMem(0x5545, { 0x1, 0x2e, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb5de);
        EXPECT(gbc.pc(), 0x5548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03CB
        gbc.setState(0x3491, 0xa1ab, 0xefb0, 0x25aa, 0xdf81, 0x4b7b, 0x0, 0x0);
        gbc.writeMem(0x3491, { 0x1, 0xf6, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xa1ab);
        EXPECT(gbc.pc(), 0x3494);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03CC
        gbc.setState(0xc6fb, 0x38b, 0x7640, 0xec56, 0xa86c, 0x5bc9, 0x0, 0x0);
        gbc.writeMem(0xc6fb, { 0x1, 0xd, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x38b);
        EXPECT(gbc.pc(), 0xc6fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6fb), 0x1);
        EXPECT(gbc.readMem(0xc6fc), 0xd);
        EXPECT(gbc.readMem(0xc6fd), 0x21);
        // 01 03CD
        gbc.setState(0x1281, 0xba9a, 0xf7c0, 0x3cf, 0xe35d, 0xb836, 0x1, 0x1);
        gbc.writeMem(0x1281, { 0x1, 0xdb, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xba9a);
        EXPECT(gbc.pc(), 0x1284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03CE
        gbc.setState(0x5615, 0xde27, 0x73f0, 0x13a8, 0x3b06, 0x2f7d, 0x1, 0x0);
        gbc.writeMem(0x5615, { 0x1, 0x74, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xde27);
        EXPECT(gbc.pc(), 0x5618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03CF
        gbc.setState(0xb8f3, 0xc751, 0x570, 0x72cd, 0x1483, 0x70e7, 0x0, 0x0);
        gbc.writeMem(0xb8f3, { 0x1, 0x9a, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc751);
        EXPECT(gbc.pc(), 0xb8f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f3), 0x1);
        EXPECT(gbc.readMem(0xb8f4), 0x9a);
        EXPECT(gbc.readMem(0xb8f5), 0xb7);
        // 01 03D0
        gbc.setState(0x38dd, 0x62cd, 0x9b30, 0x5860, 0xa929, 0x34a5, 0x0, 0x1);
        gbc.writeMem(0x38dd, { 0x1, 0x1b, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x62cd);
        EXPECT(gbc.pc(), 0x38e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03D1
        gbc.setState(0x9981, 0x6776, 0xabe0, 0x166, 0x115c, 0x829a, 0x1, 0x0);
        gbc.writeMem(0x9981, { 0x1, 0xb3, 0xf5 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6776);
        EXPECT(gbc.pc(), 0x9984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9981), 0x1);
        EXPECT(gbc.readMem(0x9982), 0xb3);
        EXPECT(gbc.readMem(0x9983), 0xf5);
        // 01 03D2
        gbc.setState(0x2fd8, 0xd5b8, 0x1f10, 0xd721, 0xa25b, 0x6a20, 0x0, 0x0);
        gbc.writeMem(0x2fd8, { 0x1, 0xfd, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xd5b8);
        EXPECT(gbc.pc(), 0x2fdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 03D3
        gbc.setState(0x5c53, 0x9284, 0xecf0, 0x7a7d, 0xf4a7, 0x5fd6, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0x1, 0xda, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x9284);
        EXPECT(gbc.pc(), 0x5c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03D4
        gbc.setState(0x2504, 0x6066, 0x5c0, 0xe532, 0xb22a, 0x924e, 0x1, 0x0);
        gbc.writeMem(0x2504, { 0x1, 0xf2, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x6066);
        EXPECT(gbc.pc(), 0x2507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03D5
        gbc.setState(0x8d5a, 0x4204, 0x3800, 0x5a1e, 0xf6c2, 0xa18c, 0x1, 0x0);
        gbc.writeMem(0x8d5a, { 0x1, 0x17, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x4204);
        EXPECT(gbc.pc(), 0x8d5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5a), 0x1);
        EXPECT(gbc.readMem(0x8d5b), 0x17);
        EXPECT(gbc.readMem(0x8d5c), 0xac);
        // 01 03D6
        gbc.setState(0x3153, 0xe0e1, 0x3fe0, 0xc722, 0x2d37, 0x2982, 0x0, 0x1);
        gbc.writeMem(0x3153, { 0x1, 0x7f, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe0e1);
        EXPECT(gbc.pc(), 0x3156);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03D7
        gbc.setState(0x9ec6, 0x7f45, 0xbf80, 0x27fc, 0x3812, 0x3d3b, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0x1, 0x6a, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7f45);
        EXPECT(gbc.pc(), 0x9ec9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ec6), 0x1);
        EXPECT(gbc.readMem(0x9ec7), 0x6a);
        EXPECT(gbc.readMem(0x9ec8), 0x55);
        // 01 03D8
        gbc.setState(0x7da5, 0x90d7, 0x4520, 0x64d5, 0xaf6a, 0x523e, 0x1, 0x0);
        gbc.writeMem(0x7da5, { 0x1, 0x50, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x90d7);
        EXPECT(gbc.pc(), 0x7da8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03D9
        gbc.setState(0xb542, 0x4875, 0xb880, 0xc54e, 0x3f6a, 0xb61e, 0x1, 0x1);
        gbc.writeMem(0xb542, { 0x1, 0x9, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4875);
        EXPECT(gbc.pc(), 0xb545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb542), 0x1);
        EXPECT(gbc.readMem(0xb543), 0x9);
        EXPECT(gbc.readMem(0xb544), 0x24);
        // 01 03DA
        gbc.setState(0xb1ef, 0xf59e, 0x6950, 0x804f, 0x9ced, 0x91da, 0x0, 0x1);
        gbc.writeMem(0xb1ef, { 0x1, 0x22, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf59e);
        EXPECT(gbc.pc(), 0xb1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ef), 0x1);
        EXPECT(gbc.readMem(0xb1f0), 0x22);
        EXPECT(gbc.readMem(0xb1f1), 0x7f);
        // 01 03DB
        gbc.setState(0x34c8, 0x4848, 0xaf40, 0x1f8e, 0x120e, 0xac16, 0x1, 0x1);
        gbc.writeMem(0x34c8, { 0x1, 0x1c, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4848);
        EXPECT(gbc.pc(), 0x34cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03DC
        gbc.setState(0xb85f, 0x5042, 0x590, 0x830, 0xa748, 0x75ce, 0x0, 0x1);
        gbc.writeMem(0xb85f, { 0x1, 0x62, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x5042);
        EXPECT(gbc.pc(), 0xb862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb85f), 0x1);
        EXPECT(gbc.readMem(0xb860), 0x62);
        EXPECT(gbc.readMem(0xb861), 0x36);
        // 01 03DD
        gbc.setState(0x42b0, 0xde77, 0xbb20, 0xfcba, 0xa596, 0xfc81, 0x0, 0x1);
        gbc.writeMem(0x42b0, { 0x1, 0xec, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xde77);
        EXPECT(gbc.pc(), 0x42b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03DE
        gbc.setState(0xadfa, 0x30e1, 0x3200, 0x3228, 0x674b, 0x68f6, 0x0, 0x1);
        gbc.writeMem(0xadfa, { 0x1, 0xaf, 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x30e1);
        EXPECT(gbc.pc(), 0xadfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfa), 0x1);
        EXPECT(gbc.readMem(0xadfb), 0xaf);
        EXPECT(gbc.readMem(0xadfc), 0x37);
        // 01 03DF
        gbc.setState(0x3a8d, 0x9ce9, 0x1b00, 0x278d, 0x7b62, 0xf6be, 0x0, 0x1);
        gbc.writeMem(0x3a8d, { 0x1, 0xe1, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x9ce9);
        EXPECT(gbc.pc(), 0x3a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 01 03E0
        gbc.setState(0x27d3, 0x55bc, 0x48e0, 0x85a3, 0x408, 0x43a, 0x1, 0x1);
        gbc.writeMem(0x27d3, { 0x1, 0xd2, 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x55bc);
        EXPECT(gbc.pc(), 0x27d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03E1
        gbc.setState(0x7907, 0x84b5, 0x92f0, 0x13ea, 0x31f9, 0xbc25, 0x0, 0x0);
        gbc.writeMem(0x7907, { 0x1, 0xcb, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x84b5);
        EXPECT(gbc.pc(), 0x790a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 01 03E2
        gbc.setState(0x85cc, 0xbcff, 0x36e0, 0x303, 0xcf7d, 0x7ee1, 0x1, 0x0);
        gbc.writeMem(0x85cc, { 0x1, 0x1, 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbcff);
        EXPECT(gbc.pc(), 0x85cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85cc), 0x1);
        EXPECT(gbc.readMem(0x85cd), 0x1);
        EXPECT(gbc.readMem(0x85ce), 0xbe);
        // 01 03E4
        gbc.setState(0x1a9f, 0x274a, 0xba20, 0xac47, 0x2214, 0xe54a, 0x1, 0x0);
        gbc.writeMem(0x1a9f, { 0x1, 0x19, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x274a);
        EXPECT(gbc.pc(), 0x1aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 01 03E5
        gbc.setState(0x5715, 0x6197, 0x52d0, 0x5ca, 0x77ae, 0xe62, 0x0, 0x1);
        gbc.writeMem(0x5715, { 0x1, 0x20, 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6197);
        EXPECT(gbc.pc(), 0x5718);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 01 03E7
        gbc.setState(0xcf1d, 0xbbad, 0xbe40, 0x6024, 0x9856, 0x3cea, 0x1, 0x0);
        gbc.writeMem(0xcf1d, { 0x1, 0xae, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xbbad);
        EXPECT(gbc.pc(), 0xcf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf1d), 0x1);
        EXPECT(gbc.readMem(0xcf1e), 0xae);
        EXPECT(gbc.readMem(0xcf1f), 0xfa);
    }
