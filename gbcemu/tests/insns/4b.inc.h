    TEST(gbcemu, opcode_4b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 4B 0000
        gbc.setState(0xbb4, 0xf055, 0x3870, 0x51f0, 0x43c7, 0x912f, 0x0, 0x0);
        gbc.writeMem(0xbb4, { 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0xbb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0001
        gbc.setState(0x19b1, 0x9a1a, 0xd6b0, 0xdcbe, 0xead1, 0xa356, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9a1a, gbc.sp());
        EXPECT(0x19b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0002
        gbc.setState(0x6999, 0x474a, 0x4920, 0xb1fa, 0x75be, 0x3f98, 0x1, 0x0);
        gbc.writeMem(0x6999, { 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x474a, gbc.sp());
        EXPECT(0x699a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0004
        gbc.setState(0x2c88, 0x7b86, 0x1260, 0x5189, 0x9d35, 0xafe7, 0x0, 0x1);
        gbc.writeMem(0x2c88, { 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7b86, gbc.sp());
        EXPECT(0x2c89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0005
        gbc.setState(0xa4b2, 0xba1d, 0xd240, 0xe7b, 0x3dd0, 0xc354, 0x1, 0x1);
        gbc.writeMem(0xa4b2, { 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xba1d, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa4b2));
        // 4B 0006
        gbc.setState(0x5476, 0x9cde, 0x93e0, 0xe5a1, 0xe871, 0x6fe8, 0x0, 0x0);
        gbc.writeMem(0x5476, { 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9cde, gbc.sp());
        EXPECT(0x5477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0007
        gbc.setState(0xc1b1, 0x5e89, 0x120, 0x2223, 0x8890, 0x639f, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5e89, gbc.sp());
        EXPECT(0xc1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc1b1));
        // 4B 0008
        gbc.setState(0x9224, 0xe713, 0xd1a0, 0xe111, 0xc322, 0xeb76, 0x1, 0x1);
        gbc.writeMem(0x9224, { 0x4b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe713, gbc.sp());
        EXPECT(0x9225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9224));
        // 4B 000A
        gbc.setState(0xe553, 0xb573, 0xd790, 0x6cf5, 0xcee8, 0xd56b, 0x1, 0x1);
        gbc.writeMem(0xe553, { 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb573, gbc.sp());
        EXPECT(0xe554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe553));
        // 4B 000B
        gbc.setState(0x2b76, 0xbc7f, 0x7270, 0xb6f0, 0x6f89, 0x4e25, 0x1, 0x0);
        gbc.writeMem(0x2b76, { 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbc7f, gbc.sp());
        EXPECT(0x2b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 000C
        gbc.setState(0x4a0b, 0x4db6, 0xb100, 0xca55, 0x9e15, 0x118, 0x1, 0x0);
        gbc.writeMem(0x4a0b, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4db6, gbc.sp());
        EXPECT(0x4a0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 000D
        gbc.setState(0x7611, 0x7d81, 0x33a0, 0xe1df, 0x42c3, 0x9ced, 0x0, 0x1);
        gbc.writeMem(0x7611, { 0x4b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7d81, gbc.sp());
        EXPECT(0x7612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 000E
        gbc.setState(0xa7da, 0x4099, 0xa070, 0xcebf, 0x1744, 0x91f, 0x1, 0x1);
        gbc.writeMem(0xa7da, { 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4099, gbc.sp());
        EXPECT(0xa7db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa7da));
        // 4B 000F
        gbc.setState(0x4768, 0xe467, 0x2260, 0xd1f5, 0xc301, 0x2f23, 0x0, 0x1);
        gbc.writeMem(0x4768, { 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe467, gbc.sp());
        EXPECT(0x4769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0010
        gbc.setState(0x7d07, 0xef35, 0xe570, 0xfbf3, 0x2f94, 0x640e, 0x0, 0x1);
        gbc.writeMem(0x7d07, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xef35, gbc.sp());
        EXPECT(0x7d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0012
        gbc.setState(0x6f1c, 0xa394, 0xc470, 0x3ec9, 0x204c, 0x8fc4, 0x1, 0x0);
        gbc.writeMem(0x6f1c, { 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xa394, gbc.sp());
        EXPECT(0x6f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0013
        gbc.setState(0x47f, 0xae7f, 0x6050, 0x7b8e, 0x314, 0x9ad5, 0x1, 0x0);
        gbc.writeMem(0x47f, { 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xae7f, gbc.sp());
        EXPECT(0x480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0014
        gbc.setState(0x8f5d, 0x1b14, 0xd60, 0x663, 0x3452, 0xcc5e, 0x0, 0x1);
        gbc.writeMem(0x8f5d, { 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1b14, gbc.sp());
        EXPECT(0x8f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8f5d));
        // 4B 0015
        gbc.setState(0x758b, 0x753b, 0x3a60, 0xae97, 0xc353, 0x4944, 0x1, 0x0);
        gbc.writeMem(0x758b, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x753b, gbc.sp());
        EXPECT(0x758c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0016
        gbc.setState(0x7039, 0x4c90, 0xed10, 0x816b, 0xc61f, 0x9437, 0x0, 0x1);
        gbc.writeMem(0x7039, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4c90, gbc.sp());
        EXPECT(0x703a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0017
        gbc.setState(0x8b0f, 0x73e3, 0xa310, 0xd26f, 0x5b5b, 0xeb79, 0x0, 0x1);
        gbc.writeMem(0x8b0f, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x73e3, gbc.sp());
        EXPECT(0x8b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8b0f));
        // 4B 0018
        gbc.setState(0x9b4b, 0x9701, 0xe910, 0xeff0, 0x83f, 0xdbc0, 0x1, 0x1);
        gbc.writeMem(0x9b4b, { 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9701, gbc.sp());
        EXPECT(0x9b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9b4b));
        // 4B 001A
        gbc.setState(0x633b, 0x9e37, 0xa6a0, 0x889a, 0x844, 0xccb8, 0x1, 0x1);
        gbc.writeMem(0x633b, { 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9e37, gbc.sp());
        EXPECT(0x633c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 001B
        gbc.setState(0xde75, 0x539, 0x7c40, 0xca9c, 0xfd18, 0x78fc, 0x1, 0x0);
        gbc.writeMem(0xde75, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x539, gbc.sp());
        EXPECT(0xde76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xde75));
        // 4B 001C
        gbc.setState(0xd2d2, 0x3056, 0xa170, 0xd002, 0xdd5a, 0x7605, 0x0, 0x0);
        gbc.writeMem(0xd2d2, { 0x4b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3056, gbc.sp());
        EXPECT(0xd2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd2d2));
        // 4B 001D
        gbc.setState(0x365a, 0x4948, 0xf2c0, 0x755b, 0xdca5, 0x3746, 0x1, 0x1);
        gbc.writeMem(0x365a, { 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4948, gbc.sp());
        EXPECT(0x365b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 001E
        gbc.setState(0xe11a, 0x9f06, 0xeae0, 0x1ddc, 0x95c, 0xa6b4, 0x1, 0x0);
        gbc.writeMem(0xe11a, { 0x4b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x9f06, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe11a));
        // 4B 001F
        gbc.setState(0x7571, 0x517b, 0x3a00, 0x39cc, 0xde81, 0x1c87, 0x0, 0x1);
        gbc.writeMem(0x7571, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x517b, gbc.sp());
        EXPECT(0x7572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0020
        gbc.setState(0xe09a, 0x80dd, 0xc2e0, 0x7817, 0x5132, 0xd03c, 0x0, 0x1);
        gbc.writeMem(0xe09a, { 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x80dd, gbc.sp());
        EXPECT(0xe09b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe09a));
        // 4B 0021
        gbc.setState(0xef6c, 0x71d, 0xfb40, 0x9707, 0x53dc, 0xc663, 0x0, 0x0);
        gbc.writeMem(0xef6c, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x71d, gbc.sp());
        EXPECT(0xef6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xef6c));
        // 4B 0022
        gbc.setState(0x2ca, 0x836, 0x53c0, 0x1d33, 0xc932, 0x1ff3, 0x1, 0x0);
        gbc.writeMem(0x2ca, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x836, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0023
        gbc.setState(0xb61a, 0xa078, 0x8ae0, 0x9ad2, 0x1fe5, 0xc330, 0x0, 0x0);
        gbc.writeMem(0xb61a, { 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xa078, gbc.sp());
        EXPECT(0xb61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb61a));
        // 4B 0024
        gbc.setState(0xa528, 0x964e, 0x87e0, 0xced1, 0xc4f4, 0xb7a7, 0x0, 0x1);
        gbc.writeMem(0xa528, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x964e, gbc.sp());
        EXPECT(0xa529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa528));
        // 4B 0025
        gbc.setState(0x533e, 0xa0fa, 0x24f0, 0x80a8, 0xf119, 0x9c21, 0x0, 0x0);
        gbc.writeMem(0x533e, { 0x4b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa0fa, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0026
        gbc.setState(0x9d6d, 0xc2f8, 0x8740, 0x6d02, 0x11b4, 0x7f4b, 0x1, 0x0);
        gbc.writeMem(0x9d6d, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc2f8, gbc.sp());
        EXPECT(0x9d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d6d));
        // 4B 0027
        gbc.setState(0x2b46, 0xd013, 0xd220, 0xafbf, 0xbd4, 0x3df6, 0x1, 0x0);
        gbc.writeMem(0x2b46, { 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd013, gbc.sp());
        EXPECT(0x2b47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 002A
        gbc.setState(0xe724, 0x70a0, 0xad80, 0x906, 0x60dd, 0x372b, 0x0, 0x1);
        gbc.writeMem(0xe724, { 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x70a0, gbc.sp());
        EXPECT(0xe725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe724));
        // 4B 002B
        gbc.setState(0x664f, 0x96e3, 0xcf30, 0x82d3, 0xf89c, 0x26be, 0x1, 0x1);
        gbc.writeMem(0x664f, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x96e3, gbc.sp());
        EXPECT(0x6650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 002C
        gbc.setState(0x2a0e, 0xb637, 0xfee0, 0x48a9, 0x573e, 0x8b1d, 0x0, 0x1);
        gbc.writeMem(0x2a0e, { 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb637, gbc.sp());
        EXPECT(0x2a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 002D
        gbc.setState(0x10c0, 0x2e7f, 0xa950, 0xf5cb, 0xa2c6, 0x620d, 0x0, 0x1);
        gbc.writeMem(0x10c0, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2e7f, gbc.sp());
        EXPECT(0x10c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 002E
        gbc.setState(0x3712, 0x467a, 0x7440, 0x94a8, 0x70b2, 0x3908, 0x1, 0x1);
        gbc.writeMem(0x3712, { 0x4b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x467a, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 002F
        gbc.setState(0x40f1, 0xf826, 0x3430, 0xabd2, 0x585e, 0x1883, 0x1, 0x0);
        gbc.writeMem(0x40f1, { 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf826, gbc.sp());
        EXPECT(0x40f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0030
        gbc.setState(0x585f, 0xac85, 0x2670, 0xb5df, 0x7739, 0xb565, 0x1, 0x0);
        gbc.writeMem(0x585f, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xac85, gbc.sp());
        EXPECT(0x5860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0031
        gbc.setState(0xcbc7, 0x344e, 0xba00, 0x1167, 0xd916, 0xb20f, 0x1, 0x1);
        gbc.writeMem(0xcbc7, { 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x344e, gbc.sp());
        EXPECT(0xcbc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcbc7));
        // 4B 0032
        gbc.setState(0x3b89, 0xa12e, 0xaad0, 0xa5c8, 0xdb67, 0x247, 0x0, 0x1);
        gbc.writeMem(0x3b89, { 0x4b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa12e, gbc.sp());
        EXPECT(0x3b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0033
        gbc.setState(0x2f14, 0xde4c, 0x7ac0, 0x813f, 0xdd8b, 0xec40, 0x1, 0x0);
        gbc.writeMem(0x2f14, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xde4c, gbc.sp());
        EXPECT(0x2f15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0034
        gbc.setState(0x3ce1, 0xee1, 0xc9b0, 0xd9a7, 0x92f7, 0x40e5, 0x1, 0x1);
        gbc.writeMem(0x3ce1, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xee1, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0035
        gbc.setState(0xb25b, 0x31e3, 0xd8a0, 0x3b6d, 0x1387, 0x3d7f, 0x1, 0x0);
        gbc.writeMem(0xb25b, { 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x31e3, gbc.sp());
        EXPECT(0xb25c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb25b));
        // 4B 0036
        gbc.setState(0x6214, 0xaffd, 0x5720, 0xb958, 0x4584, 0x3b39, 0x1, 0x1);
        gbc.writeMem(0x6214, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xaffd, gbc.sp());
        EXPECT(0x6215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0037
        gbc.setState(0x110f, 0x5791, 0x80a0, 0x8739, 0x1c7c, 0xca15, 0x1, 0x1);
        gbc.writeMem(0x110f, { 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5791, gbc.sp());
        EXPECT(0x1110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0038
        gbc.setState(0xbcfa, 0xd8ba, 0x19f0, 0x349, 0xebb5, 0x9e0b, 0x1, 0x1);
        gbc.writeMem(0xbcfa, { 0x4b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd8ba, gbc.sp());
        EXPECT(0xbcfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbcfa));
        // 4B 0039
        gbc.setState(0xc313, 0x47c1, 0xc3f0, 0x6e32, 0x54eb, 0x9b3b, 0x0, 0x0);
        gbc.writeMem(0xc313, { 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x47c1, gbc.sp());
        EXPECT(0xc314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc313));
        // 4B 003A
        gbc.setState(0xc436, 0xec95, 0x7100, 0x2a67, 0x8fbb, 0x51b2, 0x0, 0x0);
        gbc.writeMem(0xc436, { 0x4b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xec95, gbc.sp());
        EXPECT(0xc437, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc436));
        // 4B 003B
        gbc.setState(0xcee6, 0x6277, 0x840, 0xfc1f, 0xce20, 0x345, 0x1, 0x0);
        gbc.writeMem(0xcee6, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0xcee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcee6));
        // 4B 003C
        gbc.setState(0x1827, 0x71c4, 0x8f60, 0x37cb, 0x4675, 0xee1e, 0x0, 0x0);
        gbc.writeMem(0x1827, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x71c4, gbc.sp());
        EXPECT(0x1828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 003D
        gbc.setState(0x1ed3, 0x55a3, 0x1770, 0xe579, 0xbbef, 0x2a18, 0x0, 0x0);
        gbc.writeMem(0x1ed3, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x55a3, gbc.sp());
        EXPECT(0x1ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 003E
        gbc.setState(0xbe15, 0x70bf, 0x7eb0, 0xc4aa, 0x5f40, 0x57dc, 0x1, 0x0);
        gbc.writeMem(0xbe15, { 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x70bf, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbe15));
        // 4B 003F
        gbc.setState(0xeb6d, 0x2524, 0x370, 0xf592, 0xf18b, 0xa62e, 0x1, 0x1);
        gbc.writeMem(0xeb6d, { 0x4b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x2524, gbc.sp());
        EXPECT(0xeb6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeb6d));
        // 4B 0040
        gbc.setState(0xe50b, 0x9a92, 0xc0c0, 0x554a, 0x68b4, 0x416f, 0x0, 0x1);
        gbc.writeMem(0xe50b, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9a92, gbc.sp());
        EXPECT(0xe50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe50b));
        // 4B 0041
        gbc.setState(0xb5d9, 0x228a, 0xf940, 0x669b, 0x462a, 0x54b7, 0x0, 0x1);
        gbc.writeMem(0xb5d9, { 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x228a, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb5d9));
        // 4B 0042
        gbc.setState(0xc673, 0xf3f3, 0xaf50, 0x2ec0, 0xdadd, 0xaa96, 0x1, 0x1);
        gbc.writeMem(0xc673, { 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf3f3, gbc.sp());
        EXPECT(0xc674, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc673));
        // 4B 0043
        gbc.setState(0xd4f1, 0x543b, 0x8cb0, 0xb7f7, 0xb530, 0xf610, 0x0, 0x1);
        gbc.writeMem(0xd4f1, { 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x543b, gbc.sp());
        EXPECT(0xd4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd4f1));
        // 4B 0044
        gbc.setState(0x6213, 0xc0aa, 0x9be0, 0xa98d, 0xe5a0, 0xba9b, 0x1, 0x0);
        gbc.writeMem(0x6213, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc0aa, gbc.sp());
        EXPECT(0x6214, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0045
        gbc.setState(0xccc, 0x9470, 0x7080, 0xd6be, 0x41fe, 0x24f1, 0x1, 0x1);
        gbc.writeMem(0xccc, { 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9470, gbc.sp());
        EXPECT(0xccd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0046
        gbc.setState(0xe76, 0x5531, 0xd060, 0x754c, 0xc6e5, 0x1998, 0x1, 0x1);
        gbc.writeMem(0xe76, { 0x4b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5531, gbc.sp());
        EXPECT(0xe77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0047
        gbc.setState(0x6e3e, 0x10d1, 0xf280, 0x409a, 0x59f4, 0x6c8f, 0x0, 0x1);
        gbc.writeMem(0x6e3e, { 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x10d1, gbc.sp());
        EXPECT(0x6e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0048
        gbc.setState(0x99cd, 0x47f3, 0xe110, 0x940, 0xeb81, 0xaf79, 0x1, 0x0);
        gbc.writeMem(0x99cd, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x47f3, gbc.sp());
        EXPECT(0x99ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99cd));
        // 4B 0049
        gbc.setState(0x9751, 0x3f36, 0x5d10, 0x4df7, 0xcfee, 0x8664, 0x0, 0x0);
        gbc.writeMem(0x9751, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3f36, gbc.sp());
        EXPECT(0x9752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9751));
        // 4B 004A
        gbc.setState(0xc51b, 0xe7ec, 0x3560, 0x4f70, 0x9296, 0x7f7f, 0x0, 0x0);
        gbc.writeMem(0xc51b, { 0x4b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe7ec, gbc.sp());
        EXPECT(0xc51c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc51b));
        // 4B 004B
        gbc.setState(0x68d0, 0x21aa, 0x1850, 0x1505, 0x1ff8, 0x11c8, 0x1, 0x1);
        gbc.writeMem(0x68d0, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x21aa, gbc.sp());
        EXPECT(0x68d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 004C
        gbc.setState(0x65e6, 0x17ac, 0x4a60, 0xde47, 0xfafe, 0x6b04, 0x0, 0x1);
        gbc.writeMem(0x65e6, { 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x17ac, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 004D
        gbc.setState(0x62f3, 0xeac3, 0x4400, 0xe85d, 0xdf45, 0xd11a, 0x1, 0x1);
        gbc.writeMem(0x62f3, { 0x4b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xeac3, gbc.sp());
        EXPECT(0x62f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 004E
        gbc.setState(0xee51, 0x7a1d, 0xfe60, 0xbdfa, 0xce74, 0xef82, 0x1, 0x0);
        gbc.writeMem(0xee51, { 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7a1d, gbc.sp());
        EXPECT(0xee52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xee51));
        // 4B 004F
        gbc.setState(0x2d7c, 0x8a0f, 0x3810, 0x79d1, 0xe5f7, 0x9c28, 0x0, 0x1);
        gbc.writeMem(0x2d7c, { 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8a0f, gbc.sp());
        EXPECT(0x2d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0050
        gbc.setState(0x879f, 0x6e3f, 0x6c0, 0xb28b, 0xe322, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0x879f, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6e3f, gbc.sp());
        EXPECT(0x87a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x879f));
        // 4B 0051
        gbc.setState(0xc166, 0x85c9, 0xb4f0, 0x253f, 0xb120, 0x90ac, 0x1, 0x1);
        gbc.writeMem(0xc166, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x85c9, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc166));
        // 4B 0052
        gbc.setState(0xb5a2, 0xa614, 0xcd50, 0x4aea, 0xb3ce, 0x57e8, 0x1, 0x0);
        gbc.writeMem(0xb5a2, { 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa614, gbc.sp());
        EXPECT(0xb5a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb5a2));
        // 4B 0053
        gbc.setState(0xe1b7, 0x2b6b, 0x9690, 0xe3ea, 0xf1ec, 0xab10, 0x1, 0x0);
        gbc.writeMem(0xe1b7, { 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2b6b, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe1b7));
        // 4B 0054
        gbc.setState(0x62df, 0xa2fd, 0x5e10, 0x82a9, 0x4a80, 0x3e7, 0x0, 0x1);
        gbc.writeMem(0x62df, { 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa2fd, gbc.sp());
        EXPECT(0x62e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0055
        gbc.setState(0xe53a, 0x34b8, 0xb50, 0xe8df, 0xe110, 0x818a, 0x0, 0x0);
        gbc.writeMem(0xe53a, { 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x34b8, gbc.sp());
        EXPECT(0xe53b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe53a));
        // 4B 0056
        gbc.setState(0x4bf9, 0x2043, 0x9cf0, 0x6774, 0xfe7d, 0x7a3b, 0x0, 0x0);
        gbc.writeMem(0x4bf9, { 0x4b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x4bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0057
        gbc.setState(0x80d3, 0x544a, 0xadb0, 0xae4f, 0xb7c8, 0x76eb, 0x1, 0x1);
        gbc.writeMem(0x80d3, { 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x544a, gbc.sp());
        EXPECT(0x80d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x80d3));
        // 4B 0058
        gbc.setState(0x883a, 0x769d, 0x92f0, 0xa9d6, 0xe3e2, 0xdb5a, 0x0, 0x0);
        gbc.writeMem(0x883a, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x769d, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x883a));
        // 4B 0059
        gbc.setState(0x98c6, 0x8373, 0x9e40, 0x9e23, 0xf26b, 0x90a5, 0x1, 0x1);
        gbc.writeMem(0x98c6, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8373, gbc.sp());
        EXPECT(0x98c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x98c6));
        // 4B 005A
        gbc.setState(0x3c89, 0xd7e9, 0x4a80, 0xa426, 0xf00f, 0x7495, 0x0, 0x1);
        gbc.writeMem(0x3c89, { 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd7e9, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 005B
        gbc.setState(0x5280, 0xd19, 0xa000, 0xc2de, 0xa7f0, 0x8f25, 0x1, 0x0);
        gbc.writeMem(0x5280, { 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xd19, gbc.sp());
        EXPECT(0x5281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 005C
        gbc.setState(0x267c, 0xa17c, 0xcb20, 0x2762, 0x58cc, 0x5637, 0x1, 0x0);
        gbc.writeMem(0x267c, { 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa17c, gbc.sp());
        EXPECT(0x267d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 005D
        gbc.setState(0xe475, 0x6d6, 0x6c70, 0x6cd3, 0x4eb5, 0x4b81, 0x0, 0x0);
        gbc.writeMem(0xe475, { 0x4b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6d6, gbc.sp());
        EXPECT(0xe476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe475));
        // 4B 005E
        gbc.setState(0xd842, 0x1bee, 0xbda0, 0xcbc4, 0xf69f, 0x3bde, 0x1, 0x1);
        gbc.writeMem(0xd842, { 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1bee, gbc.sp());
        EXPECT(0xd843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd842));
        // 4B 005F
        gbc.setState(0x4366, 0x6713, 0xf620, 0xc9ad, 0xafb3, 0xc6d4, 0x1, 0x1);
        gbc.writeMem(0x4366, { 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x6713, gbc.sp());
        EXPECT(0x4367, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0060
        gbc.setState(0xd52b, 0x245d, 0xfa40, 0xef79, 0xb301, 0x5c21, 0x0, 0x0);
        gbc.writeMem(0xd52b, { 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x245d, gbc.sp());
        EXPECT(0xd52c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd52b));
        // 4B 0061
        gbc.setState(0x30fb, 0x523e, 0xc640, 0xec96, 0x2e9e, 0x3da8, 0x0, 0x1);
        gbc.writeMem(0x30fb, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x523e, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0062
        gbc.setState(0x9b7b, 0xb42d, 0x2010, 0xcdec, 0x9820, 0x409b, 0x1, 0x0);
        gbc.writeMem(0x9b7b, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0x9b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9b7b));
        // 4B 0063
        gbc.setState(0x6361, 0x3b8a, 0xa990, 0x7443, 0xf534, 0xd74a, 0x0, 0x1);
        gbc.writeMem(0x6361, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3b8a, gbc.sp());
        EXPECT(0x6362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0064
        gbc.setState(0xe6e7, 0xa169, 0xc3c0, 0x8920, 0x35c7, 0x5518, 0x1, 0x0);
        gbc.writeMem(0xe6e7, { 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa169, gbc.sp());
        EXPECT(0xe6e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe6e7));
        // 4B 0065
        gbc.setState(0x4ee1, 0xfb06, 0x2040, 0x1fe7, 0xc1ff, 0xf4d7, 0x1, 0x0);
        gbc.writeMem(0x4ee1, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x4ee2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0066
        gbc.setState(0xea34, 0xe37d, 0x3c40, 0x85d5, 0xa3b5, 0x67f6, 0x0, 0x0);
        gbc.writeMem(0xea34, { 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xe37d, gbc.sp());
        EXPECT(0xea35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xea34));
        // 4B 0067
        gbc.setState(0x6b7a, 0x2dcf, 0xf700, 0xce4e, 0x81ae, 0xe3db, 0x1, 0x0);
        gbc.writeMem(0x6b7a, { 0x4b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2dcf, gbc.sp());
        EXPECT(0x6b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0068
        gbc.setState(0x6f34, 0x1f9, 0x5cb0, 0xeaeb, 0xe919, 0x453e, 0x1, 0x1);
        gbc.writeMem(0x6f34, { 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1f9, gbc.sp());
        EXPECT(0x6f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0069
        gbc.setState(0xa2b1, 0x80b1, 0xaee0, 0x44a3, 0x8276, 0x8a2b, 0x1, 0x1);
        gbc.writeMem(0xa2b1, { 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x80b1, gbc.sp());
        EXPECT(0xa2b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa2b1));
        // 4B 006A
        gbc.setState(0xd93f, 0x9cfd, 0x80a0, 0xc93, 0x64d0, 0x5e70, 0x0, 0x1);
        gbc.writeMem(0xd93f, { 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9cfd, gbc.sp());
        EXPECT(0xd940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd93f));
        // 4B 006B
        gbc.setState(0x9d5b, 0xac72, 0xde30, 0x2daa, 0x71a, 0xc556, 0x0, 0x1);
        gbc.writeMem(0x9d5b, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xac72, gbc.sp());
        EXPECT(0x9d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d5b));
        // 4B 006C
        gbc.setState(0xa694, 0x539a, 0x6420, 0x60cc, 0x759e, 0x4433, 0x0, 0x1);
        gbc.writeMem(0xa694, { 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x539a, gbc.sp());
        EXPECT(0xa695, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa694));
        // 4B 006D
        gbc.setState(0x1a4, 0x6f7c, 0xdc50, 0xcec4, 0x99d3, 0xf6a, 0x0, 0x1);
        gbc.writeMem(0x1a4, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6f7c, gbc.sp());
        EXPECT(0x1a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 006E
        gbc.setState(0x7808, 0x98d8, 0x7ad0, 0x54a4, 0xc11d, 0x149e, 0x0, 0x1);
        gbc.writeMem(0x7808, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x98d8, gbc.sp());
        EXPECT(0x7809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 006F
        gbc.setState(0x897b, 0xe54d, 0xa2f0, 0xbb50, 0xb71a, 0x6ca7, 0x1, 0x1);
        gbc.writeMem(0x897b, { 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe54d, gbc.sp());
        EXPECT(0x897c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x897b));
        // 4B 0070
        gbc.setState(0xbd3, 0x5f8d, 0x6300, 0x9c87, 0x451c, 0xe14e, 0x1, 0x0);
        gbc.writeMem(0xbd3, { 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5f8d, gbc.sp());
        EXPECT(0xbd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0071
        gbc.setState(0x20f3, 0x54, 0x57b0, 0x6ef5, 0xe7b6, 0xf5f4, 0x1, 0x0);
        gbc.writeMem(0x20f3, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x54, gbc.sp());
        EXPECT(0x20f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0072
        gbc.setState(0x1d50, 0x661c, 0x60a0, 0xaa07, 0x41d7, 0x4412, 0x0, 0x1);
        gbc.writeMem(0x1d50, { 0x4b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0x1d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0073
        gbc.setState(0x5a6e, 0x65bd, 0x1f30, 0xe0fc, 0x41fa, 0x8311, 0x1, 0x1);
        gbc.writeMem(0x5a6e, { 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x65bd, gbc.sp());
        EXPECT(0x5a6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0074
        gbc.setState(0x9515, 0xbd67, 0xf800, 0x2b0, 0x33f9, 0x70a5, 0x0, 0x1);
        gbc.writeMem(0x9515, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbd67, gbc.sp());
        EXPECT(0x9516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9515));
        // 4B 0075
        gbc.setState(0xc433, 0x1a89, 0x6e00, 0xe852, 0x36ab, 0x3a5a, 0x1, 0x1);
        gbc.writeMem(0xc433, { 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1a89, gbc.sp());
        EXPECT(0xc434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc433));
        // 4B 0076
        gbc.setState(0x6a8, 0xae16, 0xc3b0, 0xd641, 0x5a5e, 0x4418, 0x0, 0x0);
        gbc.writeMem(0x6a8, { 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xae16, gbc.sp());
        EXPECT(0x6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0077
        gbc.setState(0x1f69, 0xbe32, 0xc2b0, 0x3431, 0xd505, 0xc9f9, 0x0, 0x1);
        gbc.writeMem(0x1f69, { 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbe32, gbc.sp());
        EXPECT(0x1f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0078
        gbc.setState(0x448e, 0x59ac, 0x4960, 0x7692, 0xa723, 0x3b1f, 0x0, 0x1);
        gbc.writeMem(0x448e, { 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x59ac, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0079
        gbc.setState(0x7f6a, 0xfb69, 0x1fb0, 0x2a5c, 0x1803, 0x6581, 0x0, 0x1);
        gbc.writeMem(0x7f6a, { 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfb69, gbc.sp());
        EXPECT(0x7f6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 007A
        gbc.setState(0x6bcc, 0xc6a2, 0xc9e0, 0x1d11, 0x42b7, 0xc240, 0x1, 0x0);
        gbc.writeMem(0x6bcc, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0x6bcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 007B
        gbc.setState(0x5ebe, 0x20fc, 0xcb30, 0xb41d, 0x6f46, 0x5329, 0x1, 0x1);
        gbc.writeMem(0x5ebe, { 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x20fc, gbc.sp());
        EXPECT(0x5ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 007C
        gbc.setState(0xe0da, 0x8331, 0xac90, 0x3c40, 0x7b70, 0x92d3, 0x0, 0x0);
        gbc.writeMem(0xe0da, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x8331, gbc.sp());
        EXPECT(0xe0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe0da));
        // 4B 007D
        gbc.setState(0xb9c, 0x1531, 0x8fb0, 0xbefa, 0x2807, 0x48dd, 0x1, 0x0);
        gbc.writeMem(0xb9c, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1531, gbc.sp());
        EXPECT(0xb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 007E
        gbc.setState(0x47ad, 0xa170, 0x7b40, 0xf8e0, 0x8fa8, 0x38f8, 0x1, 0x0);
        gbc.writeMem(0x47ad, { 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa170, gbc.sp());
        EXPECT(0x47ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 007F
        gbc.setState(0x8f4, 0xcc6c, 0x9b40, 0x1969, 0xfc12, 0x8cd3, 0x1, 0x1);
        gbc.writeMem(0x8f4, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcc6c, gbc.sp());
        EXPECT(0x8f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0080
        gbc.setState(0xea21, 0x6f61, 0x8a70, 0x7c5e, 0x8e92, 0xb7db, 0x0, 0x0);
        gbc.writeMem(0xea21, { 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6f61, gbc.sp());
        EXPECT(0xea22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xea21));
        // 4B 0081
        gbc.setState(0x5e5d, 0xc409, 0x5810, 0x65b9, 0xe393, 0x83c2, 0x1, 0x1);
        gbc.writeMem(0x5e5d, { 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc409, gbc.sp());
        EXPECT(0x5e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0082
        gbc.setState(0x497c, 0xc5b0, 0xf040, 0x7244, 0x1bd7, 0x3c6b, 0x1, 0x1);
        gbc.writeMem(0x497c, { 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc5b0, gbc.sp());
        EXPECT(0x497d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0083
        gbc.setState(0x28e4, 0xc721, 0xd5e0, 0xa8a0, 0x908f, 0xf85, 0x0, 0x1);
        gbc.writeMem(0x28e4, { 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc721, gbc.sp());
        EXPECT(0x28e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0084
        gbc.setState(0x1833, 0xfb3b, 0xce60, 0x8898, 0xb5bb, 0xd4f9, 0x0, 0x0);
        gbc.writeMem(0x1833, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfb3b, gbc.sp());
        EXPECT(0x1834, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0085
        gbc.setState(0x63c, 0x869c, 0x5450, 0x1b3d, 0x811c, 0xeab, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0x63d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0086
        gbc.setState(0x2fec, 0x172b, 0xefe0, 0xff07, 0xa637, 0x6e01, 0x1, 0x0);
        gbc.writeMem(0x2fec, { 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x172b, gbc.sp());
        EXPECT(0x2fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0087
        gbc.setState(0x55db, 0x4615, 0xbd40, 0x3c41, 0x7b2e, 0x6e78, 0x1, 0x0);
        gbc.writeMem(0x55db, { 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4615, gbc.sp());
        EXPECT(0x55dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0088
        gbc.setState(0x87a0, 0x424c, 0xfa0, 0xdbea, 0x166f, 0x2e35, 0x0, 0x1);
        gbc.writeMem(0x87a0, { 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x424c, gbc.sp());
        EXPECT(0x87a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x87a0));
        // 4B 0089
        gbc.setState(0x4f1, 0x42c6, 0xcf30, 0x167c, 0x16e7, 0x7813, 0x1, 0x1);
        gbc.writeMem(0x4f1, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x42c6, gbc.sp());
        EXPECT(0x4f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 008A
        gbc.setState(0x7f46, 0x1641, 0x390, 0xdadf, 0xaa41, 0xf95f, 0x0, 0x1);
        gbc.writeMem(0x7f46, { 0x4b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x1641, gbc.sp());
        EXPECT(0x7f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 008B
        gbc.setState(0x9092, 0x99fa, 0xaf30, 0x3529, 0x8e1d, 0xdc54, 0x1, 0x0);
        gbc.writeMem(0x9092, { 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x99fa, gbc.sp());
        EXPECT(0x9093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9092));
        // 4B 008C
        gbc.setState(0x612c, 0x86, 0xc700, 0xbcb0, 0xe64b, 0x50b1, 0x1, 0x1);
        gbc.writeMem(0x612c, { 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x86, gbc.sp());
        EXPECT(0x612d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 008D
        gbc.setState(0xae83, 0x3a8, 0x1760, 0xf438, 0x1370, 0x6627, 0x0, 0x0);
        gbc.writeMem(0xae83, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3a8, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xae83));
        // 4B 008E
        gbc.setState(0x3168, 0xa206, 0x2720, 0x31de, 0x7f37, 0xcf25, 0x0, 0x0);
        gbc.writeMem(0x3168, { 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa206, gbc.sp());
        EXPECT(0x3169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 008F
        gbc.setState(0x8051, 0x9be, 0x9b0, 0x84a9, 0x15a5, 0x554b, 0x0, 0x1);
        gbc.writeMem(0x8051, { 0x4b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9be, gbc.sp());
        EXPECT(0x8052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8051));
        // 4B 0090
        gbc.setState(0xf8b, 0xe09a, 0x8510, 0x74bd, 0x6fdc, 0xb39a, 0x1, 0x0);
        gbc.writeMem(0xf8b, { 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe09a, gbc.sp());
        EXPECT(0xf8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0091
        gbc.setState(0x5a55, 0x2b44, 0x31e0, 0x4311, 0xb4b3, 0x809f, 0x1, 0x1);
        gbc.writeMem(0x5a55, { 0x4b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2b44, gbc.sp());
        EXPECT(0x5a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0092
        gbc.setState(0x108d, 0xeb4, 0x9280, 0x7bbd, 0x756a, 0x66f9, 0x1, 0x1);
        gbc.writeMem(0x108d, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xeb4, gbc.sp());
        EXPECT(0x108e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0093
        gbc.setState(0x999d, 0x5b05, 0x4b40, 0xf8d1, 0xe8dd, 0x8486, 0x1, 0x0);
        gbc.writeMem(0x999d, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b05, gbc.sp());
        EXPECT(0x999e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x999d));
        // 4B 0094
        gbc.setState(0xbfe3, 0x9efd, 0x4c80, 0xb9d5, 0x2c53, 0x4860, 0x0, 0x0);
        gbc.writeMem(0xbfe3, { 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9efd, gbc.sp());
        EXPECT(0xbfe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbfe3));
        // 4B 0095
        gbc.setState(0x8d71, 0x19ea, 0xbac0, 0x30e6, 0xc0c7, 0x2e93, 0x1, 0x1);
        gbc.writeMem(0x8d71, { 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x19ea, gbc.sp());
        EXPECT(0x8d72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8d71));
        // 4B 0096
        gbc.setState(0xa296, 0x2f6f, 0xb3c0, 0x5e11, 0x3f37, 0xfd0f, 0x0, 0x0);
        gbc.writeMem(0xa296, { 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2f6f, gbc.sp());
        EXPECT(0xa297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa296));
        // 4B 0098
        gbc.setState(0x98f0, 0x60c8, 0x1f70, 0x48e2, 0x9bf6, 0x530b, 0x0, 0x1);
        gbc.writeMem(0x98f0, { 0x4b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x60c8, gbc.sp());
        EXPECT(0x98f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x98f0));
        // 4B 0099
        gbc.setState(0x8138, 0x82ea, 0xb440, 0xb2b3, 0x297b, 0xf274, 0x1, 0x0);
        gbc.writeMem(0x8138, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x82ea, gbc.sp());
        EXPECT(0x8139, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8138));
        // 4B 009A
        gbc.setState(0x267b, 0x6ef3, 0x4560, 0x42c3, 0x5e77, 0x4d2b, 0x0, 0x1);
        gbc.writeMem(0x267b, { 0x4b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6ef3, gbc.sp());
        EXPECT(0x267c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 009B
        gbc.setState(0xe8cb, 0x82c7, 0xaf30, 0x3946, 0x8623, 0x4cc2, 0x0, 0x1);
        gbc.writeMem(0xe8cb, { 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x82c7, gbc.sp());
        EXPECT(0xe8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe8cb));
        // 4B 009C
        gbc.setState(0x3126, 0xc37d, 0xb870, 0x9305, 0x7be9, 0x5482, 0x0, 0x0);
        gbc.writeMem(0x3126, { 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x3127, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 009D
        gbc.setState(0xc661, 0xd668, 0xee50, 0x6545, 0xb5d3, 0xd4bc, 0x1, 0x0);
        gbc.writeMem(0xc661, { 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd668, gbc.sp());
        EXPECT(0xc662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc661));
        // 4B 009E
        gbc.setState(0x3482, 0x9942, 0xb480, 0xbe65, 0xedae, 0x3a25, 0x1, 0x1);
        gbc.writeMem(0x3482, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9942, gbc.sp());
        EXPECT(0x3483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 009F
        gbc.setState(0xeb74, 0x25f9, 0x4890, 0xd774, 0x6430, 0xaa6a, 0x1, 0x0);
        gbc.writeMem(0xeb74, { 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x25f9, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeb74));
        // 4B 00A0
        gbc.setState(0xdf80, 0xec8d, 0x1be0, 0x10cf, 0xc7f0, 0xd4c4, 0x1, 0x0);
        gbc.writeMem(0xdf80, { 0x4b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xec8d, gbc.sp());
        EXPECT(0xdf81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf80));
        // 4B 00A1
        gbc.setState(0x49f0, 0x215, 0xa20, 0x8ee1, 0x92e4, 0x75f5, 0x1, 0x0);
        gbc.writeMem(0x49f0, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0x49f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00A2
        gbc.setState(0xa649, 0x4892, 0x1bb0, 0x6853, 0xcefe, 0xc9a6, 0x1, 0x1);
        gbc.writeMem(0xa649, { 0x4b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x4892, gbc.sp());
        EXPECT(0xa64a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa649));
        // 4B 00A3
        gbc.setState(0xde09, 0x25ed, 0x7570, 0xfc55, 0x2aeb, 0xbc3e, 0x1, 0x0);
        gbc.writeMem(0xde09, { 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x25ed, gbc.sp());
        EXPECT(0xde0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xde09));
        // 4B 00A4
        gbc.setState(0x602b, 0xd8ea, 0x5460, 0x329a, 0xac73, 0x105f, 0x0, 0x1);
        gbc.writeMem(0x602b, { 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd8ea, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00A5
        gbc.setState(0x9fb7, 0xc6a3, 0x9a50, 0xc91b, 0x127b, 0x83c7, 0x0, 0x0);
        gbc.writeMem(0x9fb7, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc6a3, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9fb7));
        // 4B 00A6
        gbc.setState(0xa878, 0x9abc, 0xa2b0, 0xdd27, 0x1d9, 0x4aa2, 0x0, 0x0);
        gbc.writeMem(0xa878, { 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9abc, gbc.sp());
        EXPECT(0xa879, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa878));
        // 4B 00A7
        gbc.setState(0x8afa, 0xd07f, 0x840, 0xc1a0, 0xe09, 0x9496, 0x1, 0x0);
        gbc.writeMem(0x8afa, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd07f, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8afa));
        // 4B 00A8
        gbc.setState(0x6cc9, 0xfeb5, 0x56d0, 0x9b05, 0xc9d1, 0x74bf, 0x1, 0x1);
        gbc.writeMem(0x6cc9, { 0x4b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfeb5, gbc.sp());
        EXPECT(0x6cca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00AA
        gbc.setState(0xa13f, 0x2f29, 0x2ca0, 0x701b, 0xe91f, 0x2eeb, 0x1, 0x1);
        gbc.writeMem(0xa13f, { 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0xa140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa13f));
        // 4B 00AB
        gbc.setState(0xd140, 0xec8, 0x22c0, 0x4e72, 0xcb85, 0x449, 0x1, 0x0);
        gbc.writeMem(0xd140, { 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xec8, gbc.sp());
        EXPECT(0xd141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd140));
        // 4B 00AC
        gbc.setState(0xc5c3, 0x6c28, 0x5d90, 0xf8dd, 0x2bca, 0x6e36, 0x0, 0x0);
        gbc.writeMem(0xc5c3, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6c28, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc5c3));
        // 4B 00AD
        gbc.setState(0x663b, 0x68a9, 0x28e0, 0x5994, 0x6270, 0xa758, 0x1, 0x1);
        gbc.writeMem(0x663b, { 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x68a9, gbc.sp());
        EXPECT(0x663c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00AE
        gbc.setState(0xcf05, 0xe59b, 0x6830, 0xa201, 0x1d0e, 0x6b76, 0x0, 0x1);
        gbc.writeMem(0xcf05, { 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe59b, gbc.sp());
        EXPECT(0xcf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf05));
        // 4B 00AF
        gbc.setState(0x3c24, 0x2ef8, 0xf840, 0xcab1, 0xb405, 0xd0fc, 0x1, 0x1);
        gbc.writeMem(0x3c24, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0x3c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00B0
        gbc.setState(0x8bfb, 0x3204, 0x8690, 0xbf54, 0x401e, 0x6fb7, 0x0, 0x1);
        gbc.writeMem(0x8bfb, { 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3204, gbc.sp());
        EXPECT(0x8bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8bfb));
        // 4B 00B1
        gbc.setState(0xab20, 0x124a, 0x2260, 0x7954, 0xcd8c, 0x5aaf, 0x1, 0x0);
        gbc.writeMem(0xab20, { 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0xab21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xab20));
        // 4B 00B2
        gbc.setState(0x1c33, 0xd29c, 0xb1b0, 0x167a, 0x5cbe, 0x3b3b, 0x1, 0x1);
        gbc.writeMem(0x1c33, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd29c, gbc.sp());
        EXPECT(0x1c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00B3
        gbc.setState(0xcb6c, 0xbd3e, 0xf2c0, 0xcc87, 0xf5d2, 0x14cb, 0x1, 0x1);
        gbc.writeMem(0xcb6c, { 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbd3e, gbc.sp());
        EXPECT(0xcb6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb6c));
        // 4B 00B4
        gbc.setState(0x26ff, 0x97cd, 0x26c0, 0x708d, 0x7890, 0x7de, 0x0, 0x0);
        gbc.writeMem(0x26ff, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0x2700, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00B6
        gbc.setState(0x2175, 0xebfa, 0x5610, 0x20d8, 0x8147, 0x5856, 0x0, 0x1);
        gbc.writeMem(0x2175, { 0x4b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xebfa, gbc.sp());
        EXPECT(0x2176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00B7
        gbc.setState(0x2cba, 0x1444, 0x6220, 0x123d, 0x2280, 0xfff4, 0x0, 0x0);
        gbc.writeMem(0x2cba, { 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1444, gbc.sp());
        EXPECT(0x2cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00B8
        gbc.setState(0x4d20, 0x491e, 0x9b70, 0x2988, 0x3917, 0x7677, 0x0, 0x1);
        gbc.writeMem(0x4d20, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x491e, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00B9
        gbc.setState(0xd10, 0xfc09, 0x1700, 0xf691, 0x3cb0, 0xc970, 0x0, 0x1);
        gbc.writeMem(0xd10, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfc09, gbc.sp());
        EXPECT(0xd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00BA
        gbc.setState(0xc866, 0xe881, 0x6b50, 0x538d, 0xca7a, 0x98b3, 0x0, 0x1);
        gbc.writeMem(0xc866, { 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xe881, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc866));
        // 4B 00BB
        gbc.setState(0x5e53, 0x5bc4, 0xe8d0, 0xb9e4, 0x915c, 0x3598, 0x0, 0x0);
        gbc.writeMem(0x5e53, { 0x4b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x5bc4, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00BC
        gbc.setState(0xe62, 0xb858, 0xaf0, 0x5956, 0xf1fd, 0xd694, 0x0, 0x0);
        gbc.writeMem(0xe62, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb858, gbc.sp());
        EXPECT(0xe63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00BD
        gbc.setState(0xc1c6, 0x75fe, 0x8880, 0x32cd, 0xb0c8, 0x7a5a, 0x0, 0x1);
        gbc.writeMem(0xc1c6, { 0x4b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x75fe, gbc.sp());
        EXPECT(0xc1c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc1c6));
        // 4B 00BE
        gbc.setState(0x5fc6, 0x5ecb, 0x3fb0, 0xbc1, 0xe659, 0x3ab5, 0x1, 0x1);
        gbc.writeMem(0x5fc6, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5ecb, gbc.sp());
        EXPECT(0x5fc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00BF
        gbc.setState(0xd874, 0x8adf, 0xbc00, 0xd7bd, 0x35de, 0xf828, 0x0, 0x1);
        gbc.writeMem(0xd874, { 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8adf, gbc.sp());
        EXPECT(0xd875, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd874));
        // 4B 00C0
        gbc.setState(0xd350, 0x7099, 0xa4a0, 0x4377, 0x78fc, 0x28be, 0x0, 0x0);
        gbc.writeMem(0xd350, { 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7099, gbc.sp());
        EXPECT(0xd351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd350));
        // 4B 00C1
        gbc.setState(0x6a64, 0x9a00, 0x6730, 0xd8ea, 0xf64a, 0x2d04, 0x1, 0x0);
        gbc.writeMem(0x6a64, { 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9a00, gbc.sp());
        EXPECT(0x6a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00C2
        gbc.setState(0xa108, 0x2037, 0xcb70, 0xb044, 0x3528, 0x786e, 0x1, 0x1);
        gbc.writeMem(0xa108, { 0x4b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2037, gbc.sp());
        EXPECT(0xa109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa108));
        // 4B 00C3
        gbc.setState(0xafd5, 0xb5, 0x7e0, 0xf946, 0xf5e0, 0xb3cc, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb5, gbc.sp());
        EXPECT(0xafd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xafd5));
        // 4B 00C4
        gbc.setState(0x2065, 0x5aeb, 0xda0, 0xc716, 0x8f21, 0x233e, 0x1, 0x0);
        gbc.writeMem(0x2065, { 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5aeb, gbc.sp());
        EXPECT(0x2066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00C5
        gbc.setState(0xb396, 0xd634, 0x6920, 0x1f05, 0x9891, 0xc28b, 0x1, 0x1);
        gbc.writeMem(0xb396, { 0x4b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd634, gbc.sp());
        EXPECT(0xb397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb396));
        // 4B 00C6
        gbc.setState(0x32da, 0x1e54, 0x11e0, 0xf48b, 0xa42b, 0x623a, 0x1, 0x1);
        gbc.writeMem(0x32da, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1e54, gbc.sp());
        EXPECT(0x32db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00C9
        gbc.setState(0x35d5, 0xb8f7, 0x7400, 0xfd75, 0x92e6, 0x351f, 0x0, 0x1);
        gbc.writeMem(0x35d5, { 0x4b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb8f7, gbc.sp());
        EXPECT(0x35d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00CA
        gbc.setState(0xae99, 0x86dd, 0xa5c0, 0xf8d0, 0xfec1, 0x44c9, 0x1, 0x0);
        gbc.writeMem(0xae99, { 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x86dd, gbc.sp());
        EXPECT(0xae9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xae99));
        // 4B 00CB
        gbc.setState(0x6c89, 0x2984, 0xf960, 0x2df7, 0xbc0c, 0x2335, 0x0, 0x1);
        gbc.writeMem(0x6c89, { 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2984, gbc.sp());
        EXPECT(0x6c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00CC
        gbc.setState(0xb25f, 0x95fc, 0x4350, 0x8c54, 0x87a8, 0xa10d, 0x0, 0x1);
        gbc.writeMem(0xb25f, { 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0xb260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb25f));
        // 4B 00CE
        gbc.setState(0x26c3, 0xc054, 0x4200, 0x1794, 0x3ad8, 0xbe61, 0x0, 0x0);
        gbc.writeMem(0x26c3, { 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc054, gbc.sp());
        EXPECT(0x26c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00CF
        gbc.setState(0x6802, 0xdaf0, 0x5f50, 0x5a5a, 0xce35, 0xc59e, 0x0, 0x0);
        gbc.writeMem(0x6802, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdaf0, gbc.sp());
        EXPECT(0x6803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00D0
        gbc.setState(0x8feb, 0x3620, 0x7bf0, 0x8619, 0x820f, 0x9ef, 0x0, 0x0);
        gbc.writeMem(0x8feb, { 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3620, gbc.sp());
        EXPECT(0x8fec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8feb));
        // 4B 00D1
        gbc.setState(0xd3b3, 0x2ee5, 0x1670, 0x5378, 0x3fc2, 0x921f, 0x0, 0x0);
        gbc.writeMem(0xd3b3, { 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2ee5, gbc.sp());
        EXPECT(0xd3b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd3b3));
        // 4B 00D2
        gbc.setState(0xa0f3, 0xf9ad, 0x4860, 0xe9cc, 0x87d7, 0x610b, 0x0, 0x1);
        gbc.writeMem(0xa0f3, { 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xf9ad, gbc.sp());
        EXPECT(0xa0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa0f3));
        // 4B 00D3
        gbc.setState(0x6028, 0x329b, 0xc650, 0x7db0, 0x6a16, 0xf85d, 0x1, 0x0);
        gbc.writeMem(0x6028, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x329b, gbc.sp());
        EXPECT(0x6029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00D4
        gbc.setState(0xb9e2, 0x51b7, 0x8c00, 0x8ceb, 0x9f35, 0x935a, 0x0, 0x1);
        gbc.writeMem(0xb9e2, { 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x51b7, gbc.sp());
        EXPECT(0xb9e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb9e2));
        // 4B 00D5
        gbc.setState(0xc395, 0xe6e4, 0xdb10, 0x4321, 0x11aa, 0x1cb0, 0x1, 0x1);
        gbc.writeMem(0xc395, { 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe6e4, gbc.sp());
        EXPECT(0xc396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc395));
        // 4B 00D6
        gbc.setState(0xd097, 0xbca5, 0x8600, 0x9928, 0x8b86, 0x70d3, 0x1, 0x1);
        gbc.writeMem(0xd097, { 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbca5, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd097));
        // 4B 00D8
        gbc.setState(0x5c62, 0x802d, 0xeeb0, 0x4a72, 0x1814, 0x35dd, 0x0, 0x0);
        gbc.writeMem(0x5c62, { 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x802d, gbc.sp());
        EXPECT(0x5c63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00D9
        gbc.setState(0x39c1, 0xe60a, 0xd6b0, 0xf285, 0xab82, 0xeb3e, 0x1, 0x1);
        gbc.writeMem(0x39c1, { 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xe60a, gbc.sp());
        EXPECT(0x39c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00DA
        gbc.setState(0x3e5b, 0x2743, 0x84b0, 0xf399, 0xa53a, 0x26dd, 0x0, 0x0);
        gbc.writeMem(0x3e5b, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2743, gbc.sp());
        EXPECT(0x3e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00DB
        gbc.setState(0x4666, 0xf5a0, 0x81d0, 0x1c61, 0x5736, 0x7d87, 0x1, 0x1);
        gbc.writeMem(0x4666, { 0x4b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x4667, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00DC
        gbc.setState(0x76fe, 0xae32, 0xfba0, 0x35fb, 0x17d6, 0x8d52, 0x0, 0x0);
        gbc.writeMem(0x76fe, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xae32, gbc.sp());
        EXPECT(0x76ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00DD
        gbc.setState(0x6f9d, 0xc74b, 0xe060, 0xf368, 0x2e57, 0x233d, 0x1, 0x0);
        gbc.writeMem(0x6f9d, { 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xc74b, gbc.sp());
        EXPECT(0x6f9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00DE
        gbc.setState(0xedf4, 0x54f5, 0x7c00, 0x6e68, 0x15ab, 0xa0fb, 0x0, 0x0);
        gbc.writeMem(0xedf4, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0xedf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xedf4));
        // 4B 00DF
        gbc.setState(0x6b67, 0xec21, 0xafd0, 0xabd9, 0x6b55, 0xeda9, 0x0, 0x1);
        gbc.writeMem(0x6b67, { 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xec21, gbc.sp());
        EXPECT(0x6b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00E0
        gbc.setState(0x4e8b, 0x8163, 0xb430, 0xaad6, 0xa152, 0x1c6, 0x1, 0x0);
        gbc.writeMem(0x4e8b, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8163, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00E1
        gbc.setState(0x6005, 0x5cf4, 0x9ba0, 0x44b5, 0x14be, 0x11a9, 0x1, 0x0);
        gbc.writeMem(0x6005, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5cf4, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00E3
        gbc.setState(0xc04e, 0x82f8, 0xa280, 0x8743, 0x4b5e, 0x8814, 0x1, 0x0);
        gbc.writeMem(0xc04e, { 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x82f8, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc04e));
        // 4B 00E4
        gbc.setState(0xdf76, 0xd7ee, 0x96f0, 0x241b, 0xf7cc, 0x95dd, 0x1, 0x1);
        gbc.writeMem(0xdf76, { 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd7ee, gbc.sp());
        EXPECT(0xdf77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf76));
        // 4B 00E5
        gbc.setState(0xc45, 0xd0dc, 0xab10, 0x5397, 0x8b6a, 0x5cec, 0x1, 0x0);
        gbc.writeMem(0xc45, { 0x4b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd0dc, gbc.sp());
        EXPECT(0xc46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00E6
        gbc.setState(0x4f55, 0x6867, 0x4360, 0x43de, 0x671b, 0x4ced, 0x1, 0x0);
        gbc.writeMem(0x4f55, { 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0x4f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00E7
        gbc.setState(0x1553, 0x2972, 0x5400, 0xf0ee, 0x6b9b, 0xa834, 0x1, 0x0);
        gbc.writeMem(0x1553, { 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x2972, gbc.sp());
        EXPECT(0x1554, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00E8
        gbc.setState(0x75da, 0xcb6f, 0xb280, 0x92ff, 0xddf8, 0x4e71, 0x0, 0x0);
        gbc.writeMem(0x75da, { 0x4b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcb6f, gbc.sp());
        EXPECT(0x75db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00E9
        gbc.setState(0x832c, 0x4495, 0xc9a0, 0xd430, 0x855, 0x68ff, 0x0, 0x1);
        gbc.writeMem(0x832c, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4495, gbc.sp());
        EXPECT(0x832d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x832c));
        // 4B 00EA
        gbc.setState(0x265b, 0xbeb0, 0xda40, 0x2b49, 0x814f, 0xd8fd, 0x0, 0x0);
        gbc.writeMem(0x265b, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xbeb0, gbc.sp());
        EXPECT(0x265c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00EC
        gbc.setState(0x8611, 0x357c, 0x8350, 0x7393, 0xac50, 0x6c75, 0x0, 0x1);
        gbc.writeMem(0x8611, { 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x357c, gbc.sp());
        EXPECT(0x8612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8611));
        // 4B 00ED
        gbc.setState(0x87c1, 0x24a9, 0xba0, 0x86c0, 0xcc3b, 0x36f0, 0x1, 0x1);
        gbc.writeMem(0x87c1, { 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x87c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x87c1));
        // 4B 00EE
        gbc.setState(0x3338, 0x8c9f, 0x4ef0, 0x2abf, 0xa317, 0xa094, 0x0, 0x1);
        gbc.writeMem(0x3338, { 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8c9f, gbc.sp());
        EXPECT(0x3339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00EF
        gbc.setState(0x8c8b, 0xc298, 0x8cc0, 0x2e1d, 0x5833, 0x19fd, 0x1, 0x1);
        gbc.writeMem(0x8c8b, { 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc298, gbc.sp());
        EXPECT(0x8c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8c8b));
        // 4B 00F0
        gbc.setState(0x5b73, 0x4192, 0x8ab0, 0x6be7, 0xbcb8, 0xdf7b, 0x0, 0x1);
        gbc.writeMem(0x5b73, { 0x4b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4192, gbc.sp());
        EXPECT(0x5b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00F1
        gbc.setState(0x7af1, 0x8900, 0x8b0, 0x2d73, 0x3184, 0x12ea, 0x1, 0x1);
        gbc.writeMem(0x7af1, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0x7af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00F2
        gbc.setState(0x79f7, 0x6b61, 0x11c0, 0x1a30, 0x3015, 0xd3c2, 0x1, 0x1);
        gbc.writeMem(0x79f7, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6b61, gbc.sp());
        EXPECT(0x79f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 00F3
        gbc.setState(0xa207, 0x80b2, 0x34d0, 0xb1e3, 0x6906, 0x5a3, 0x0, 0x0);
        gbc.writeMem(0xa207, { 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x80b2, gbc.sp());
        EXPECT(0xa208, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa207));
        // 4B 00F4
        gbc.setState(0xcb33, 0xd433, 0x84c0, 0x8edd, 0x2956, 0x1598, 0x0, 0x0);
        gbc.writeMem(0xcb33, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd433, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb33));
        // 4B 00F5
        gbc.setState(0xeb76, 0x38e0, 0x3cf0, 0x9574, 0x8839, 0x70f6, 0x0, 0x1);
        gbc.writeMem(0xeb76, { 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x38e0, gbc.sp());
        EXPECT(0xeb77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeb76));
        // 4B 00F6
        gbc.setState(0xca54, 0x3ac2, 0x6880, 0x2f02, 0x54e7, 0x9bf0, 0x0, 0x0);
        gbc.writeMem(0xca54, { 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca54));
        // 4B 00F8
        gbc.setState(0xe484, 0xdd06, 0xb530, 0xf488, 0xd3ae, 0xdabd, 0x1, 0x0);
        gbc.writeMem(0xe484, { 0x4b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdd06, gbc.sp());
        EXPECT(0xe485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe484));
        // 4B 00F9
        gbc.setState(0x7a64, 0x3aa3, 0x3c90, 0x2316, 0xa287, 0xaf03, 0x1, 0x1);
        gbc.writeMem(0x7a64, { 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3aa3, gbc.sp());
        EXPECT(0x7a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00FA
        gbc.setState(0xdcc8, 0xf58, 0xd6a0, 0x8987, 0xd991, 0x9a28, 0x0, 0x1);
        gbc.writeMem(0xdcc8, { 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf58, gbc.sp());
        EXPECT(0xdcc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdcc8));
        // 4B 00FB
        gbc.setState(0xd9f6, 0xccc7, 0xdfa0, 0xb2f8, 0x3195, 0x687f, 0x0, 0x1);
        gbc.writeMem(0xd9f6, { 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xccc7, gbc.sp());
        EXPECT(0xd9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd9f6));
        // 4B 00FC
        gbc.setState(0x66ee, 0xb709, 0x6470, 0xd5e5, 0xd7ed, 0xfe1d, 0x1, 0x0);
        gbc.writeMem(0x66ee, { 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb709, gbc.sp());
        EXPECT(0x66ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00FD
        gbc.setState(0x32e6, 0x369f, 0xc850, 0x771f, 0x703f, 0xc154, 0x0, 0x0);
        gbc.writeMem(0x32e6, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0x32e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 00FE
        gbc.setState(0x88cd, 0x7227, 0xc2f0, 0xed55, 0xc1ae, 0x478e, 0x1, 0x0);
        gbc.writeMem(0x88cd, { 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7227, gbc.sp());
        EXPECT(0x88ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x88cd));
        // 4B 00FF
        gbc.setState(0x2056, 0x619f, 0x5f90, 0x4ac4, 0x866, 0x719, 0x0, 0x1);
        gbc.writeMem(0x2056, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x619f, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0100
        gbc.setState(0xbcca, 0xc26b, 0x5c10, 0xce16, 0x1d40, 0xf299, 0x0, 0x1);
        gbc.writeMem(0xbcca, { 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc26b, gbc.sp());
        EXPECT(0xbccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbcca));
        // 4B 0101
        gbc.setState(0x8b4b, 0x46c6, 0xf6b0, 0xcfa, 0xf497, 0x276, 0x1, 0x0);
        gbc.writeMem(0x8b4b, { 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x46c6, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8b4b));
        // 4B 0104
        gbc.setState(0x5561, 0x55c1, 0x1520, 0x5b1c, 0xbf44, 0x8130, 0x0, 0x0);
        gbc.writeMem(0x5561, { 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x55c1, gbc.sp());
        EXPECT(0x5562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0105
        gbc.setState(0x7365, 0x3c21, 0xa8e0, 0x6cb, 0xe15, 0x69b7, 0x0, 0x0);
        gbc.writeMem(0x7365, { 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c21, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0106
        gbc.setState(0x577, 0xa905, 0x90a0, 0x1e60, 0xd17f, 0x6080, 0x0, 0x0);
        gbc.writeMem(0x577, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa905, gbc.sp());
        EXPECT(0x578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0107
        gbc.setState(0x5b47, 0xedf9, 0x9c30, 0x6a9, 0xaede, 0xf988, 0x0, 0x0);
        gbc.writeMem(0x5b47, { 0x4b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xedf9, gbc.sp());
        EXPECT(0x5b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0108
        gbc.setState(0xcadd, 0xc62d, 0x4660, 0x8807, 0x7702, 0x14d, 0x0, 0x1);
        gbc.writeMem(0xcadd, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc62d, gbc.sp());
        EXPECT(0xcade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcadd));
        // 4B 0109
        gbc.setState(0x1cf1, 0x8a21, 0xd650, 0xcea7, 0xb6c5, 0xe3ea, 0x1, 0x1);
        gbc.writeMem(0x1cf1, { 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8a21, gbc.sp());
        EXPECT(0x1cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 010A
        gbc.setState(0xf0f, 0xe503, 0xccc0, 0xc92d, 0xaf6b, 0x7705, 0x0, 0x1);
        gbc.writeMem(0xf0f, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0xf10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 010B
        gbc.setState(0x53ef, 0x34ad, 0x1e10, 0x5326, 0x4652, 0x774, 0x0, 0x1);
        gbc.writeMem(0x53ef, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x34ad, gbc.sp());
        EXPECT(0x53f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 010C
        gbc.setState(0x7c34, 0x6977, 0x1e80, 0xb25c, 0x2e7f, 0xf8f8, 0x1, 0x0);
        gbc.writeMem(0x7c34, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6977, gbc.sp());
        EXPECT(0x7c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 010D
        gbc.setState(0xa464, 0xa648, 0x4ae0, 0xa148, 0x154e, 0x2d11, 0x0, 0x1);
        gbc.writeMem(0xa464, { 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0xa465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa464));
        // 4B 010E
        gbc.setState(0x8688, 0x767c, 0x7c40, 0x750b, 0xc73a, 0x137a, 0x1, 0x1);
        gbc.writeMem(0x8688, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x767c, gbc.sp());
        EXPECT(0x8689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8688));
        // 4B 010F
        gbc.setState(0x5b54, 0xa3ff, 0xc600, 0x7cc2, 0x1ad8, 0x87b2, 0x0, 0x0);
        gbc.writeMem(0x5b54, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa3ff, gbc.sp());
        EXPECT(0x5b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0110
        gbc.setState(0xde9, 0x1af6, 0x8ea0, 0xe51d, 0xfb18, 0x1715, 0x1, 0x1);
        gbc.writeMem(0xde9, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1af6, gbc.sp());
        EXPECT(0xdea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0111
        gbc.setState(0xcfe9, 0x5b8b, 0x8e00, 0x6f20, 0x1a42, 0x9a61, 0x0, 0x1);
        gbc.writeMem(0xcfe9, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0xcfea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcfe9));
        // 4B 0112
        gbc.setState(0xb567, 0xcce6, 0xe1f0, 0x3094, 0x195e, 0x7fa6, 0x1, 0x0);
        gbc.writeMem(0xb567, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xcce6, gbc.sp());
        EXPECT(0xb568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb567));
        // 4B 0114
        gbc.setState(0xefd3, 0x1c10, 0x69d0, 0xb410, 0xf107, 0xcc07, 0x1, 0x0);
        gbc.writeMem(0xefd3, { 0x4b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1c10, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xefd3));
        // 4B 0115
        gbc.setState(0x36c8, 0xb39, 0xf670, 0x905e, 0x5470, 0xdec6, 0x1, 0x1);
        gbc.writeMem(0x36c8, { 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb39, gbc.sp());
        EXPECT(0x36c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0116
        gbc.setState(0x7550, 0xb4a9, 0xce40, 0x1b84, 0xd70c, 0xa700, 0x0, 0x0);
        gbc.writeMem(0x7550, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb4a9, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0117
        gbc.setState(0x82a8, 0xb9a8, 0x5950, 0x60f4, 0x391, 0x15dd, 0x0, 0x0);
        gbc.writeMem(0x82a8, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb9a8, gbc.sp());
        EXPECT(0x82a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x82a8));
        // 4B 0118
        gbc.setState(0x9e47, 0x717b, 0x1e20, 0x9a16, 0x646, 0x8637, 0x1, 0x1);
        gbc.writeMem(0x9e47, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x717b, gbc.sp());
        EXPECT(0x9e48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9e47));
        // 4B 0119
        gbc.setState(0x2e04, 0x7956, 0x5510, 0x42cd, 0x1a7c, 0x4fd3, 0x1, 0x0);
        gbc.writeMem(0x2e04, { 0x4b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7956, gbc.sp());
        EXPECT(0x2e05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 011A
        gbc.setState(0x8538, 0x9bd2, 0xa9c0, 0x5a30, 0x581a, 0x25a2, 0x0, 0x1);
        gbc.writeMem(0x8538, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9bd2, gbc.sp());
        EXPECT(0x8539, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8538));
        // 4B 011B
        gbc.setState(0x3a88, 0xed38, 0x5dd0, 0x1994, 0x57c, 0x9a94, 0x0, 0x1);
        gbc.writeMem(0x3a88, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xed38, gbc.sp());
        EXPECT(0x3a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 011C
        gbc.setState(0xd64d, 0x2ef9, 0xdfe0, 0x564, 0x87aa, 0x1386, 0x0, 0x0);
        gbc.writeMem(0xd64d, { 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2ef9, gbc.sp());
        EXPECT(0xd64e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd64d));
        // 4B 011E
        gbc.setState(0x311, 0xa2c3, 0xde70, 0x730d, 0xb4fd, 0xb62e, 0x0, 0x1);
        gbc.writeMem(0x311, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0x312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 011F
        gbc.setState(0x1d82, 0x76da, 0xc4f0, 0xad30, 0xaa6f, 0xf108, 0x1, 0x0);
        gbc.writeMem(0x1d82, { 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x76da, gbc.sp());
        EXPECT(0x1d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0120
        gbc.setState(0xd1cc, 0xe3e9, 0x10b0, 0x3797, 0xa9f8, 0x6d0a, 0x0, 0x1);
        gbc.writeMem(0xd1cc, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe3e9, gbc.sp());
        EXPECT(0xd1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd1cc));
        // 4B 0121
        gbc.setState(0x101e, 0x182f, 0x20f0, 0x6ff, 0xed11, 0xdc1e, 0x0, 0x0);
        gbc.writeMem(0x101e, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x182f, gbc.sp());
        EXPECT(0x101f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0123
        gbc.setState(0xa90, 0xfc45, 0xaa0, 0x5534, 0x1435, 0x3576, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfc45, gbc.sp());
        EXPECT(0xa91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0124
        gbc.setState(0x1599, 0xd84a, 0x6f0, 0xd1fe, 0x4703, 0x8d37, 0x1, 0x1);
        gbc.writeMem(0x1599, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd84a, gbc.sp());
        EXPECT(0x159a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0125
        gbc.setState(0x18a0, 0xdfaa, 0xd0, 0x6086, 0xc996, 0x54ce, 0x0, 0x1);
        gbc.writeMem(0x18a0, { 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdfaa, gbc.sp());
        EXPECT(0x18a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0126
        gbc.setState(0xec13, 0x1321, 0x97c0, 0xd3, 0x2c2d, 0x3915, 0x0, 0x0);
        gbc.writeMem(0xec13, { 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xec13));
        // 4B 0127
        gbc.setState(0x3024, 0x72e7, 0xe7a0, 0x104a, 0xfce0, 0x33c4, 0x0, 0x1);
        gbc.writeMem(0x3024, { 0x4b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x3025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0128
        gbc.setState(0x27b8, 0x7b4c, 0x70d0, 0x4823, 0xd998, 0x6f3b, 0x0, 0x0);
        gbc.writeMem(0x27b8, { 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7b4c, gbc.sp());
        EXPECT(0x27b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0129
        gbc.setState(0xddd9, 0x4066, 0xed70, 0x3a99, 0xbc3, 0x7b6f, 0x0, 0x1);
        gbc.writeMem(0xddd9, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4066, gbc.sp());
        EXPECT(0xddda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xddd9));
        // 4B 012A
        gbc.setState(0xaf7d, 0x3cc9, 0xacd0, 0x662a, 0xf6ba, 0x6495, 0x0, 0x0);
        gbc.writeMem(0xaf7d, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3cc9, gbc.sp());
        EXPECT(0xaf7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaf7d));
        // 4B 012C
        gbc.setState(0x8d1c, 0x3d31, 0x5400, 0xedee, 0xc782, 0x2549, 0x1, 0x1);
        gbc.writeMem(0x8d1c, { 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3d31, gbc.sp());
        EXPECT(0x8d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8d1c));
        // 4B 012D
        gbc.setState(0x835d, 0xdb9f, 0x43e0, 0xc2f8, 0xc8fb, 0x256a, 0x1, 0x0);
        gbc.writeMem(0x835d, { 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdb9f, gbc.sp());
        EXPECT(0x835e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x835d));
        // 4B 012E
        gbc.setState(0x9f29, 0x76, 0xee30, 0x772b, 0x62a5, 0x36d1, 0x1, 0x1);
        gbc.writeMem(0x9f29, { 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x76, gbc.sp());
        EXPECT(0x9f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9f29));
        // 4B 012F
        gbc.setState(0xbae, 0x9dda, 0x83a0, 0x7d06, 0xa9ea, 0x12c3, 0x0, 0x0);
        gbc.writeMem(0xbae, { 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9dda, gbc.sp());
        EXPECT(0xbaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0130
        gbc.setState(0xe1bb, 0xf2a3, 0xad80, 0xcbbb, 0x241f, 0x1659, 0x1, 0x1);
        gbc.writeMem(0xe1bb, { 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf2a3, gbc.sp());
        EXPECT(0xe1bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe1bb));
        // 4B 0131
        gbc.setState(0x5597, 0xd504, 0x4200, 0x754d, 0x9166, 0x6644, 0x0, 0x0);
        gbc.writeMem(0x5597, { 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd504, gbc.sp());
        EXPECT(0x5598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0132
        gbc.setState(0xd848, 0xd77c, 0x9720, 0xfbb0, 0x74d3, 0xd84a, 0x1, 0x1);
        gbc.writeMem(0xd848, { 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd77c, gbc.sp());
        EXPECT(0xd849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd848));
        // 4B 0133
        gbc.setState(0x4ae1, 0xa118, 0x4230, 0x6c01, 0xa85b, 0x811c, 0x0, 0x0);
        gbc.writeMem(0x4ae1, { 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xa118, gbc.sp());
        EXPECT(0x4ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0134
        gbc.setState(0x18c7, 0x8ac3, 0x26c0, 0x335c, 0x5e54, 0x24a2, 0x0, 0x1);
        gbc.writeMem(0x18c7, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8ac3, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0135
        gbc.setState(0x5f28, 0x4a74, 0xa310, 0x9a22, 0x9c75, 0xa531, 0x0, 0x0);
        gbc.writeMem(0x5f28, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0136
        gbc.setState(0x8603, 0xb3d5, 0x46a0, 0x7df7, 0xcd97, 0x5744, 0x0, 0x1);
        gbc.writeMem(0x8603, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb3d5, gbc.sp());
        EXPECT(0x8604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8603));
        // 4B 0137
        gbc.setState(0x4b24, 0xd487, 0x8c30, 0xe4f2, 0x8546, 0x45fb, 0x0, 0x0);
        gbc.writeMem(0x4b24, { 0x4b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd487, gbc.sp());
        EXPECT(0x4b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0138
        gbc.setState(0xacdf, 0x6959, 0x8f60, 0x58bf, 0xdfbb, 0xacc6, 0x0, 0x0);
        gbc.writeMem(0xacdf, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6959, gbc.sp());
        EXPECT(0xace0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xacdf));
        // 4B 0139
        gbc.setState(0x1d9c, 0x90ae, 0x62e0, 0x641, 0x26c2, 0xa0a8, 0x1, 0x0);
        gbc.writeMem(0x1d9c, { 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x90ae, gbc.sp());
        EXPECT(0x1d9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 013B
        gbc.setState(0xdefd, 0x2dc, 0x50a0, 0xa762, 0x4e00, 0x92d3, 0x0, 0x0);
        gbc.writeMem(0xdefd, { 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2dc, gbc.sp());
        EXPECT(0xdefe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdefd));
        // 4B 013C
        gbc.setState(0x78b7, 0x41df, 0xd90, 0x358a, 0xefbf, 0xda1c, 0x0, 0x0);
        gbc.writeMem(0x78b7, { 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0x78b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 013D
        gbc.setState(0x9284, 0x92e4, 0x9a90, 0xebd1, 0x336a, 0xbef9, 0x0, 0x1);
        gbc.writeMem(0x9284, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x92e4, gbc.sp());
        EXPECT(0x9285, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9284));
        // 4B 013E
        gbc.setState(0x7b8e, 0xf27a, 0x2010, 0x1896, 0x87c9, 0xf95b, 0x1, 0x0);
        gbc.writeMem(0x7b8e, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf27a, gbc.sp());
        EXPECT(0x7b8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 013F
        gbc.setState(0xe72, 0x1d4, 0x77c0, 0xdda9, 0xe5ea, 0x822b, 0x1, 0x0);
        gbc.writeMem(0xe72, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1d4, gbc.sp());
        EXPECT(0xe73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0140
        gbc.setState(0x7012, 0xb035, 0x7ca0, 0xfa9c, 0xf7f5, 0xad24, 0x0, 0x0);
        gbc.writeMem(0x7012, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb035, gbc.sp());
        EXPECT(0x7013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0141
        gbc.setState(0x37fa, 0x999a, 0x37b0, 0x1035, 0x472b, 0x6254, 0x1, 0x0);
        gbc.writeMem(0x37fa, { 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x999a, gbc.sp());
        EXPECT(0x37fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0142
        gbc.setState(0xaf3e, 0x67f3, 0x4ed0, 0x5f21, 0xd29d, 0x3a3e, 0x1, 0x1);
        gbc.writeMem(0xaf3e, { 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0xaf3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaf3e));
        // 4B 0143
        gbc.setState(0x4c11, 0x1516, 0xa920, 0xd348, 0x8308, 0x97d1, 0x1, 0x1);
        gbc.writeMem(0x4c11, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1516, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0144
        gbc.setState(0x432e, 0x33af, 0x7540, 0x8feb, 0x4b09, 0x82b5, 0x0, 0x0);
        gbc.writeMem(0x432e, { 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x33af, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0145
        gbc.setState(0xa6d2, 0x4c13, 0x1080, 0xb251, 0xe871, 0x12c4, 0x0, 0x1);
        gbc.writeMem(0xa6d2, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4c13, gbc.sp());
        EXPECT(0xa6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa6d2));
        // 4B 0146
        gbc.setState(0x50c5, 0x100f, 0xa9d0, 0x2ddb, 0xcacb, 0x6df6, 0x1, 0x0);
        gbc.writeMem(0x50c5, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x100f, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0147
        gbc.setState(0xc401, 0x7ea2, 0x2350, 0x4375, 0x3a77, 0x8a97, 0x1, 0x1);
        gbc.writeMem(0xc401, { 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7ea2, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc401));
        // 4B 0148
        gbc.setState(0xc553, 0xa574, 0x32d0, 0x4405, 0x96ff, 0x7260, 0x0, 0x1);
        gbc.writeMem(0xc553, { 0x4b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa574, gbc.sp());
        EXPECT(0xc554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc553));
        // 4B 0149
        gbc.setState(0xbd24, 0xd9f1, 0xdb00, 0x9b5, 0x29a5, 0x5d38, 0x0, 0x0);
        gbc.writeMem(0xbd24, { 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd9f1, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbd24));
        // 4B 014A
        gbc.setState(0xb6c4, 0x60da, 0xf5e0, 0x878d, 0x9f40, 0xdeb7, 0x1, 0x0);
        gbc.writeMem(0xb6c4, { 0x4b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x60da, gbc.sp());
        EXPECT(0xb6c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb6c4));
        // 4B 014B
        gbc.setState(0xd1f8, 0x5b79, 0x8fa0, 0xe1f6, 0x684d, 0x5678, 0x1, 0x1);
        gbc.writeMem(0xd1f8, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5b79, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd1f8));
        // 4B 014C
        gbc.setState(0x8f2d, 0x9430, 0x2e00, 0xf416, 0xc4b7, 0x936e, 0x1, 0x1);
        gbc.writeMem(0x8f2d, { 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0x8f2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8f2d));
        // 4B 014D
        gbc.setState(0xcadb, 0x4f64, 0x720, 0x315d, 0x309f, 0x2ae7, 0x0, 0x0);
        gbc.writeMem(0xcadb, { 0x4b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4f64, gbc.sp());
        EXPECT(0xcadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcadb));
        // 4B 014E
        gbc.setState(0x5181, 0x1074, 0x3970, 0x8aa1, 0x8666, 0xd364, 0x1, 0x1);
        gbc.writeMem(0x5181, { 0x4b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x5182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 014F
        gbc.setState(0x4d1e, 0xc72, 0x5ff0, 0x3a19, 0xbd2, 0x6a80, 0x0, 0x1);
        gbc.writeMem(0x4d1e, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xc72, gbc.sp());
        EXPECT(0x4d1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0150
        gbc.setState(0x5a7d, 0xeec0, 0x90, 0xa517, 0xe28c, 0x5949, 0x1, 0x1);
        gbc.writeMem(0x5a7d, { 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xeec0, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0151
        gbc.setState(0x6f5d, 0xec91, 0xb1b0, 0xc3d8, 0x14af, 0x3f9c, 0x1, 0x1);
        gbc.writeMem(0x6f5d, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xec91, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0152
        gbc.setState(0xa4af, 0xb89f, 0x9ac0, 0x566c, 0x4d6f, 0x526a, 0x1, 0x1);
        gbc.writeMem(0xa4af, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb89f, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa4af));
        // 4B 0153
        gbc.setState(0xb24d, 0xb781, 0x11c0, 0x67e7, 0x8767, 0x5a59, 0x1, 0x0);
        gbc.writeMem(0xb24d, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb781, gbc.sp());
        EXPECT(0xb24e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb24d));
        // 4B 0154
        gbc.setState(0x6989, 0x72bb, 0xed40, 0x2f13, 0x628f, 0xe871, 0x0, 0x1);
        gbc.writeMem(0x6989, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x72bb, gbc.sp());
        EXPECT(0x698a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0155
        gbc.setState(0xca46, 0x7c0f, 0xc290, 0xb708, 0x9e89, 0x14c9, 0x0, 0x1);
        gbc.writeMem(0xca46, { 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c0f, gbc.sp());
        EXPECT(0xca47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca46));
        // 4B 0156
        gbc.setState(0x342e, 0x40c9, 0x49a0, 0x9379, 0xed2e, 0x1b9f, 0x0, 0x1);
        gbc.writeMem(0x342e, { 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x40c9, gbc.sp());
        EXPECT(0x342f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0158
        gbc.setState(0x1983, 0x976b, 0x87e0, 0x1a5a, 0x82b1, 0x7839, 0x1, 0x1);
        gbc.writeMem(0x1983, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x1984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0159
        gbc.setState(0x3a72, 0xfa9c, 0x9480, 0xb45b, 0xdfb3, 0x6e9e, 0x0, 0x0);
        gbc.writeMem(0x3a72, { 0x4b });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfa9c, gbc.sp());
        EXPECT(0x3a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 015A
        gbc.setState(0xa0a3, 0xe5c5, 0xb170, 0x8b16, 0x2624, 0xab25, 0x1, 0x0);
        gbc.writeMem(0xa0a3, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe5c5, gbc.sp());
        EXPECT(0xa0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa0a3));
        // 4B 015B
        gbc.setState(0x5e19, 0x96be, 0x440, 0xee9, 0x38a1, 0xb3b8, 0x0, 0x0);
        gbc.writeMem(0x5e19, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x96be, gbc.sp());
        EXPECT(0x5e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 015C
        gbc.setState(0x3fac, 0x5b81, 0xa0, 0x76aa, 0x7376, 0xb844, 0x1, 0x1);
        gbc.writeMem(0x3fac, { 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5b81, gbc.sp());
        EXPECT(0x3fad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 015D
        gbc.setState(0x11c9, 0xb1cd, 0x4eb0, 0xc526, 0xc3cb, 0xf7c0, 0x1, 0x0);
        gbc.writeMem(0x11c9, { 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb1cd, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 015E
        gbc.setState(0x1ba5, 0x95ca, 0xe590, 0xfb25, 0x82e8, 0xd137, 0x0, 0x0);
        gbc.writeMem(0x1ba5, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x95ca, gbc.sp());
        EXPECT(0x1ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 015F
        gbc.setState(0xb5ce, 0xe49d, 0x3e90, 0xdd0f, 0x2e04, 0x5338, 0x1, 0x0);
        gbc.writeMem(0xb5ce, { 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe49d, gbc.sp());
        EXPECT(0xb5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb5ce));
        // 4B 0160
        gbc.setState(0x72b6, 0x69c8, 0x810, 0x8cb9, 0xd546, 0x30bd, 0x0, 0x1);
        gbc.writeMem(0x72b6, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x69c8, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0161
        gbc.setState(0xd0b9, 0xe67f, 0x5b40, 0x7701, 0xb8a, 0x9e6f, 0x0, 0x1);
        gbc.writeMem(0xd0b9, { 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xe67f, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd0b9));
        // 4B 0163
        gbc.setState(0xd1d6, 0xd83, 0x6250, 0xf38d, 0xae2d, 0xd0e6, 0x1, 0x0);
        gbc.writeMem(0xd1d6, { 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd83, gbc.sp());
        EXPECT(0xd1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd1d6));
        // 4B 0164
        gbc.setState(0x1357, 0xec8b, 0x2040, 0x85da, 0x5999, 0xa74f, 0x1, 0x0);
        gbc.writeMem(0x1357, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xec8b, gbc.sp());
        EXPECT(0x1358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0165
        gbc.setState(0xd14d, 0xe8a1, 0x3b70, 0x5189, 0xbe0c, 0x4ed5, 0x0, 0x1);
        gbc.writeMem(0xd14d, { 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe8a1, gbc.sp());
        EXPECT(0xd14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd14d));
        // 4B 0166
        gbc.setState(0x5353, 0x784e, 0x5b10, 0x571f, 0x2f73, 0x2224, 0x0, 0x1);
        gbc.writeMem(0x5353, { 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x784e, gbc.sp());
        EXPECT(0x5354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0167
        gbc.setState(0xa5ac, 0xbe36, 0x6b60, 0x787f, 0x2c8d, 0x53c8, 0x1, 0x1);
        gbc.writeMem(0xa5ac, { 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0xa5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa5ac));
        // 4B 0168
        gbc.setState(0xcf20, 0xc2e1, 0xb290, 0xbd87, 0x7f69, 0xa59a, 0x0, 0x1);
        gbc.writeMem(0xcf20, { 0x4b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc2e1, gbc.sp());
        EXPECT(0xcf21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf20));
        // 4B 0169
        gbc.setState(0x5314, 0x4570, 0xc100, 0x947d, 0x7d56, 0xcb49, 0x0, 0x0);
        gbc.writeMem(0x5314, { 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4570, gbc.sp());
        EXPECT(0x5315, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 016A
        gbc.setState(0xd45e, 0xd911, 0x2910, 0x41ff, 0xea72, 0x532f, 0x1, 0x1);
        gbc.writeMem(0xd45e, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd911, gbc.sp());
        EXPECT(0xd45f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd45e));
        // 4B 016B
        gbc.setState(0xb5bd, 0x5af5, 0xfba0, 0xfa84, 0xd347, 0xcf19, 0x1, 0x0);
        gbc.writeMem(0xb5bd, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5af5, gbc.sp());
        EXPECT(0xb5be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb5bd));
        // 4B 016C
        gbc.setState(0x70e5, 0xc8d5, 0x89b0, 0x4708, 0x1466, 0x2af4, 0x0, 0x0);
        gbc.writeMem(0x70e5, { 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc8d5, gbc.sp());
        EXPECT(0x70e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 016E
        gbc.setState(0x7ba9, 0x5a4d, 0x13c0, 0x305b, 0xfef5, 0x26a4, 0x0, 0x1);
        gbc.writeMem(0x7ba9, { 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5a4d, gbc.sp());
        EXPECT(0x7baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 016F
        gbc.setState(0xa4cc, 0xb51d, 0xe9e0, 0x4037, 0xb1a8, 0xda7, 0x0, 0x0);
        gbc.writeMem(0xa4cc, { 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb51d, gbc.sp());
        EXPECT(0xa4cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa4cc));
        // 4B 0170
        gbc.setState(0x1335, 0xb436, 0x8b80, 0xe5a6, 0xeefa, 0xec97, 0x0, 0x0);
        gbc.writeMem(0x1335, { 0x4b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb436, gbc.sp());
        EXPECT(0x1336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0171
        gbc.setState(0xc4c3, 0x7f54, 0x4aa0, 0x4eff, 0x3ab3, 0x15, 0x1, 0x0);
        gbc.writeMem(0xc4c3, { 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0xc4c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc4c3));
        // 4B 0172
        gbc.setState(0x8717, 0xf10a, 0x5cb0, 0x6b79, 0xfa58, 0xb684, 0x1, 0x1);
        gbc.writeMem(0x8717, { 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf10a, gbc.sp());
        EXPECT(0x8718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8717));
        // 4B 0173
        gbc.setState(0x4275, 0x3ece, 0x17b0, 0x6a45, 0x4a88, 0x44bc, 0x1, 0x1);
        gbc.writeMem(0x4275, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3ece, gbc.sp());
        EXPECT(0x4276, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0174
        gbc.setState(0xba47, 0x57c, 0x9b60, 0xea23, 0xcea7, 0xa995, 0x1, 0x0);
        gbc.writeMem(0xba47, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x57c, gbc.sp());
        EXPECT(0xba48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xba47));
        // 4B 0175
        gbc.setState(0xc2cf, 0xc54a, 0x2b0, 0x4e0e, 0xfee9, 0x8784, 0x1, 0x0);
        gbc.writeMem(0xc2cf, { 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc54a, gbc.sp());
        EXPECT(0xc2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc2cf));
        // 4B 0176
        gbc.setState(0x995e, 0x7d11, 0xf840, 0x1c53, 0x3bc4, 0xfe8c, 0x1, 0x1);
        gbc.writeMem(0x995e, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x7d11, gbc.sp());
        EXPECT(0x995f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x995e));
        // 4B 0177
        gbc.setState(0xe190, 0x67ea, 0x53b0, 0x3ca5, 0xf3e9, 0x9268, 0x0, 0x1);
        gbc.writeMem(0xe190, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x67ea, gbc.sp());
        EXPECT(0xe191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe190));
        // 4B 0178
        gbc.setState(0x4c41, 0x7f00, 0xca80, 0xd7d1, 0x2c69, 0xe138, 0x1, 0x0);
        gbc.writeMem(0x4c41, { 0x4b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7f00, gbc.sp());
        EXPECT(0x4c42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0179
        gbc.setState(0x4a00, 0xc39c, 0x8d80, 0xe55b, 0xd82a, 0x5681, 0x0, 0x0);
        gbc.writeMem(0x4a00, { 0x4b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x4a01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 017B
        gbc.setState(0xe05e, 0xb909, 0x7ad0, 0xb85b, 0x16c6, 0xa651, 0x1, 0x1);
        gbc.writeMem(0xe05e, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb909, gbc.sp());
        EXPECT(0xe05f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe05e));
        // 4B 017C
        gbc.setState(0x99af, 0x1e61, 0xcc60, 0x7033, 0x6ce2, 0x2178, 0x0, 0x0);
        gbc.writeMem(0x99af, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1e61, gbc.sp());
        EXPECT(0x99b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99af));
        // 4B 017D
        gbc.setState(0x77ac, 0x7d5c, 0x7960, 0x23f6, 0xa91f, 0x5e52, 0x0, 0x0);
        gbc.writeMem(0x77ac, { 0x4b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7d5c, gbc.sp());
        EXPECT(0x77ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 017E
        gbc.setState(0x7aad, 0x974d, 0xacd0, 0x4a41, 0x3fc7, 0x6e16, 0x0, 0x0);
        gbc.writeMem(0x7aad, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0x7aae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 017F
        gbc.setState(0x501d, 0xd916, 0xa6c0, 0xcd95, 0xdad1, 0xdeb6, 0x1, 0x1);
        gbc.writeMem(0x501d, { 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd916, gbc.sp());
        EXPECT(0x501e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0180
        gbc.setState(0x9491, 0xf8e7, 0xf040, 0x7f6e, 0x393b, 0x7965, 0x0, 0x1);
        gbc.writeMem(0x9491, { 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf8e7, gbc.sp());
        EXPECT(0x9492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9491));
        // 4B 0181
        gbc.setState(0x8664, 0x88dd, 0xf490, 0x35fc, 0xb68d, 0x3811, 0x1, 0x1);
        gbc.writeMem(0x8664, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x88dd, gbc.sp());
        EXPECT(0x8665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8664));
        // 4B 0182
        gbc.setState(0x4458, 0x3807, 0x2150, 0x4470, 0x5056, 0x56e4, 0x0, 0x0);
        gbc.writeMem(0x4458, { 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3807, gbc.sp());
        EXPECT(0x4459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0183
        gbc.setState(0xa94e, 0x51b3, 0xe190, 0x17c1, 0xc08f, 0xe0da, 0x1, 0x0);
        gbc.writeMem(0xa94e, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x51b3, gbc.sp());
        EXPECT(0xa94f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa94e));
        // 4B 0184
        gbc.setState(0x2be6, 0xb450, 0xacb0, 0x496c, 0x920d, 0xcb19, 0x0, 0x0);
        gbc.writeMem(0x2be6, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb450, gbc.sp());
        EXPECT(0x2be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0186
        gbc.setState(0xac6a, 0xee8, 0x990, 0x2f6b, 0x71e8, 0x9af1, 0x0, 0x1);
        gbc.writeMem(0xac6a, { 0x4b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xac6a));
        // 4B 0187
        gbc.setState(0x68fe, 0x7cea, 0xa040, 0xc3f0, 0x1bcb, 0xb017, 0x0, 0x1);
        gbc.writeMem(0x68fe, { 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7cea, gbc.sp());
        EXPECT(0x68ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0188
        gbc.setState(0x83b0, 0x43fd, 0x98c0, 0xe28a, 0xd3b3, 0x90eb, 0x1, 0x1);
        gbc.writeMem(0x83b0, { 0x4b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x43fd, gbc.sp());
        EXPECT(0x83b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x83b0));
        // 4B 0189
        gbc.setState(0xe206, 0x2d7, 0x9220, 0xbd32, 0x9594, 0xfe28, 0x0, 0x1);
        gbc.writeMem(0xe206, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x2d7, gbc.sp());
        EXPECT(0xe207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe206));
        // 4B 018A
        gbc.setState(0x799b, 0x5149, 0x7790, 0x66da, 0x646a, 0xa5c9, 0x0, 0x0);
        gbc.writeMem(0x799b, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 018B
        gbc.setState(0x40bf, 0xeef7, 0x5620, 0xade9, 0xc861, 0xd03a, 0x0, 0x1);
        gbc.writeMem(0x40bf, { 0x4b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x40c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 018C
        gbc.setState(0x645c, 0x6f33, 0x2270, 0x80e3, 0x418f, 0x265b, 0x1, 0x0);
        gbc.writeMem(0x645c, { 0x4b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x6f33, gbc.sp());
        EXPECT(0x645d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 018D
        gbc.setState(0x8b80, 0xfc7d, 0x9110, 0xea41, 0xf2c7, 0xd11, 0x0, 0x1);
        gbc.writeMem(0x8b80, { 0x4b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfc7d, gbc.sp());
        EXPECT(0x8b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8b80));
        // 4B 018E
        gbc.setState(0xa7e0, 0x5792, 0x8f50, 0x2d53, 0xb4a4, 0x4a24, 0x1, 0x0);
        gbc.writeMem(0xa7e0, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5792, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa7e0));
        // 4B 018F
        gbc.setState(0x9baf, 0xc24c, 0xeba0, 0x8a6f, 0x9570, 0x44b8, 0x1, 0x1);
        gbc.writeMem(0x9baf, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc24c, gbc.sp());
        EXPECT(0x9bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9baf));
        // 4B 0190
        gbc.setState(0x8b95, 0xd36d, 0x2bd0, 0x4193, 0x89ce, 0x6d12, 0x1, 0x0);
        gbc.writeMem(0x8b95, { 0x4b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd36d, gbc.sp());
        EXPECT(0x8b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8b95));
        // 4B 0191
        gbc.setState(0xe0d2, 0xa972, 0xe5b0, 0xf20b, 0x6bc4, 0x1a37, 0x1, 0x1);
        gbc.writeMem(0xe0d2, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa972, gbc.sp());
        EXPECT(0xe0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe0d2));
        // 4B 0192
        gbc.setState(0xa8f9, 0x7103, 0xf8c0, 0x4a7a, 0xcc77, 0xb0c9, 0x1, 0x0);
        gbc.writeMem(0xa8f9, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7103, gbc.sp());
        EXPECT(0xa8fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa8f9));
        // 4B 0193
        gbc.setState(0xbe8c, 0xccef, 0xe6d0, 0xc0cd, 0x7459, 0x7f91, 0x1, 0x0);
        gbc.writeMem(0xbe8c, { 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbe8c));
        // 4B 0194
        gbc.setState(0x8f6, 0x5aae, 0x9c60, 0x969f, 0x47f7, 0xb609, 0x1, 0x1);
        gbc.writeMem(0x8f6, { 0x4b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5aae, gbc.sp());
        EXPECT(0x8f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0195
        gbc.setState(0x30dc, 0xd711, 0x3a80, 0xbd1d, 0xb2ad, 0x855b, 0x0, 0x0);
        gbc.writeMem(0x30dc, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd711, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0196
        gbc.setState(0x22e5, 0x33b6, 0x9210, 0xfa1c, 0xb235, 0xed6, 0x1, 0x0);
        gbc.writeMem(0x22e5, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0197
        gbc.setState(0x3746, 0x8032, 0x26e0, 0x54f3, 0xa497, 0x8eb1, 0x0, 0x1);
        gbc.writeMem(0x3746, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8032, gbc.sp());
        EXPECT(0x3747, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0198
        gbc.setState(0x462d, 0x5a19, 0x2f10, 0x68ca, 0xf7bf, 0xd78d, 0x1, 0x1);
        gbc.writeMem(0x462d, { 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5a19, gbc.sp());
        EXPECT(0x462e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0199
        gbc.setState(0x6ff8, 0x9024, 0xc3a0, 0xe655, 0xdce, 0x10c6, 0x0, 0x1);
        gbc.writeMem(0x6ff8, { 0x4b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9024, gbc.sp());
        EXPECT(0x6ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 019A
        gbc.setState(0xd53, 0xfce6, 0xce10, 0x7e05, 0xe85d, 0x8fcd, 0x1, 0x0);
        gbc.writeMem(0xd53, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0xd54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 019B
        gbc.setState(0xb579, 0x3809, 0x5d0, 0x308e, 0xb828, 0xbfa0, 0x1, 0x1);
        gbc.writeMem(0xb579, { 0x4b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3809, gbc.sp());
        EXPECT(0xb57a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb579));
        // 4B 019C
        gbc.setState(0x4611, 0xbafd, 0x9da0, 0xaef8, 0xfc87, 0x136c, 0x0, 0x0);
        gbc.writeMem(0x4611, { 0x4b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbafd, gbc.sp());
        EXPECT(0x4612, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 019F
        gbc.setState(0x8afa, 0x5bf7, 0x5960, 0x39e1, 0x5f9d, 0xeabd, 0x0, 0x1);
        gbc.writeMem(0x8afa, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5bf7, gbc.sp());
        EXPECT(0x8afb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8afa));
        // 4B 01A1
        gbc.setState(0xb847, 0x3636, 0xce0, 0xba54, 0x6ba4, 0xf371, 0x1, 0x0);
        gbc.writeMem(0xb847, { 0x4b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x3636, gbc.sp());
        EXPECT(0xb848, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb847));
        // 4B 01A2
        gbc.setState(0xef9c, 0x2619, 0x420, 0x673d, 0xda0b, 0x8290, 0x0, 0x1);
        gbc.writeMem(0xef9c, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x2619, gbc.sp());
        EXPECT(0xef9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xef9c));
        // 4B 01A3
        gbc.setState(0xe6e, 0x658a, 0xa470, 0x3888, 0x68d8, 0x1f50, 0x0, 0x0);
        gbc.writeMem(0xe6e, { 0x4b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x658a, gbc.sp());
        EXPECT(0xe6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01A5
        gbc.setState(0xa977, 0xb178, 0x57a0, 0x49aa, 0x118, 0x29d8, 0x1, 0x1);
        gbc.writeMem(0xa977, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb178, gbc.sp());
        EXPECT(0xa978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa977));
        // 4B 01A6
        gbc.setState(0xcf2b, 0xa0ab, 0xbcb0, 0xc7dd, 0x4718, 0x62ca, 0x0, 0x0);
        gbc.writeMem(0xcf2b, { 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0xcf2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf2b));
        // 4B 01A7
        gbc.setState(0x1aca, 0x69eb, 0xbe0, 0xb3a7, 0x6d87, 0x8114, 0x1, 0x0);
        gbc.writeMem(0x1aca, { 0x4b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x69eb, gbc.sp());
        EXPECT(0x1acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01A8
        gbc.setState(0x8ede, 0x9579, 0x92c0, 0x46c, 0xc486, 0xcfd1, 0x0, 0x1);
        gbc.writeMem(0x8ede, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9579, gbc.sp());
        EXPECT(0x8edf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8ede));
        // 4B 01A9
        gbc.setState(0x89af, 0x686a, 0x36a0, 0xd684, 0x114b, 0xfd89, 0x0, 0x0);
        gbc.writeMem(0x89af, { 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x686a, gbc.sp());
        EXPECT(0x89b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x89af));
        // 4B 01AA
        gbc.setState(0xdf22, 0x69a2, 0xdda0, 0x1c13, 0x2e, 0x8f2, 0x1, 0x0);
        gbc.writeMem(0xdf22, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x69a2, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf22));
        // 4B 01AB
        gbc.setState(0x4b8e, 0x985f, 0x5fb0, 0x5419, 0x85ca, 0xe531, 0x0, 0x1);
        gbc.writeMem(0x4b8e, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x985f, gbc.sp());
        EXPECT(0x4b8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01AC
        gbc.setState(0x94cb, 0xc3cb, 0xbcf0, 0xb3bc, 0x7ccc, 0x1cea, 0x0, 0x0);
        gbc.writeMem(0x94cb, { 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xc3cb, gbc.sp());
        EXPECT(0x94cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x94cb));
        // 4B 01AD
        gbc.setState(0xc6fa, 0x7345, 0xb6e0, 0xc67f, 0xf840, 0xaf4e, 0x1, 0x0);
        gbc.writeMem(0xc6fa, { 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x7345, gbc.sp());
        EXPECT(0xc6fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc6fa));
        // 4B 01AE
        gbc.setState(0x32f8, 0x7221, 0x9910, 0x64eb, 0x72b3, 0xbd1e, 0x0, 0x0);
        gbc.writeMem(0x32f8, { 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x32f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01AF
        gbc.setState(0xc7df, 0x35ec, 0xfd30, 0x563, 0x7fbb, 0xc98f, 0x0, 0x1);
        gbc.writeMem(0xc7df, { 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x35ec, gbc.sp());
        EXPECT(0xc7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc7df));
        // 4B 01B0
        gbc.setState(0xc1ee, 0x8852, 0xe8c0, 0x7873, 0xee96, 0xdf62, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0x4b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x8852, gbc.sp());
        EXPECT(0xc1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc1ee));
        // 4B 01B1
        gbc.setState(0xd500, 0xb840, 0x82d0, 0x6dc7, 0x388, 0x81a2, 0x0, 0x0);
        gbc.writeMem(0xd500, { 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb840, gbc.sp());
        EXPECT(0xd501, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd500));
        // 4B 01B2
        gbc.setState(0xeecd, 0xc0db, 0xcf00, 0xd53c, 0x4e12, 0xd89b, 0x0, 0x1);
        gbc.writeMem(0xeecd, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc0db, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeecd));
        // 4B 01B3
        gbc.setState(0x56c7, 0x3001, 0x8e0, 0x74e1, 0x3698, 0x69a4, 0x1, 0x0);
        gbc.writeMem(0x56c7, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3001, gbc.sp());
        EXPECT(0x56c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01B4
        gbc.setState(0xc778, 0x497b, 0x3100, 0x47c2, 0xc8e9, 0xc940, 0x0, 0x0);
        gbc.writeMem(0xc778, { 0x4b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x497b, gbc.sp());
        EXPECT(0xc779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc778));
        // 4B 01B5
        gbc.setState(0xafc0, 0x73cf, 0xe140, 0x84d2, 0xb770, 0xe72f, 0x1, 0x0);
        gbc.writeMem(0xafc0, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x73cf, gbc.sp());
        EXPECT(0xafc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xafc0));
        // 4B 01B6
        gbc.setState(0xc970, 0xcb, 0x7870, 0x6068, 0x4352, 0x2804, 0x1, 0x1);
        gbc.writeMem(0xc970, { 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcb, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc970));
        // 4B 01B7
        gbc.setState(0xab97, 0x1216, 0x6e0, 0xabf2, 0x7ea6, 0x5cb5, 0x1, 0x0);
        gbc.writeMem(0xab97, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1216, gbc.sp());
        EXPECT(0xab98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xab97));
        // 4B 01B8
        gbc.setState(0x669b, 0x914d, 0xacc0, 0x2ea5, 0xe56a, 0x3e63, 0x1, 0x1);
        gbc.writeMem(0x669b, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x914d, gbc.sp());
        EXPECT(0x669c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01B9
        gbc.setState(0x7ec, 0x2fe2, 0x4ba0, 0xad66, 0x392a, 0x85c2, 0x1, 0x0);
        gbc.writeMem(0x7ec, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2fe2, gbc.sp());
        EXPECT(0x7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01BA
        gbc.setState(0x1eea, 0x7a5e, 0x4b40, 0x313, 0x857, 0x21d8, 0x0, 0x0);
        gbc.writeMem(0x1eea, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0x1eeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01BC
        gbc.setState(0x720f, 0xc9d8, 0xddf0, 0xa1b5, 0x1be3, 0xa6a5, 0x0, 0x1);
        gbc.writeMem(0x720f, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc9d8, gbc.sp());
        EXPECT(0x7210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01BD
        gbc.setState(0x95ef, 0x2865, 0x90d0, 0x79f3, 0xf7ff, 0x90d7, 0x1, 0x0);
        gbc.writeMem(0x95ef, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x2865, gbc.sp());
        EXPECT(0x95f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x95ef));
        // 4B 01BE
        gbc.setState(0x887d, 0x9764, 0xe680, 0x69f3, 0xe05f, 0xcec1, 0x0, 0x1);
        gbc.writeMem(0x887d, { 0x4b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9764, gbc.sp());
        EXPECT(0x887e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x887d));
        // 4B 01BF
        gbc.setState(0xd1af, 0xdca0, 0xf0f0, 0xb554, 0x3966, 0x313f, 0x1, 0x0);
        gbc.writeMem(0xd1af, { 0x4b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdca0, gbc.sp());
        EXPECT(0xd1b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd1af));
        // 4B 01C0
        gbc.setState(0x7fc5, 0xfa52, 0xe210, 0x4af5, 0x345, 0xf8b5, 0x0, 0x0);
        gbc.writeMem(0x7fc5, { 0x4b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfa52, gbc.sp());
        EXPECT(0x7fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01C1
        gbc.setState(0x82c2, 0xe30b, 0x8ea0, 0x66f3, 0x36db, 0x95d5, 0x1, 0x1);
        gbc.writeMem(0x82c2, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe30b, gbc.sp());
        EXPECT(0x82c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x82c2));
        // 4B 01C2
        gbc.setState(0x6082, 0xa476, 0xfd90, 0xa40b, 0x935c, 0xadbb, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa476, gbc.sp());
        EXPECT(0x6083, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01C3
        gbc.setState(0xcb, 0x8647, 0x51a0, 0xd806, 0xf977, 0xba24, 0x1, 0x0);
        gbc.writeMem(0xcb, { 0x4b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8647, gbc.sp());
        EXPECT(0xcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01C4
        gbc.setState(0x738f, 0x7c62, 0x6390, 0xe2f4, 0xee58, 0x26c1, 0x1, 0x0);
        gbc.writeMem(0x738f, { 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7c62, gbc.sp());
        EXPECT(0x7390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01C5
        gbc.setState(0xba3, 0x347, 0xb720, 0xf7f1, 0x99ed, 0xa30e, 0x0, 0x0);
        gbc.writeMem(0xba3, { 0x4b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x347, gbc.sp());
        EXPECT(0xba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01C6
        gbc.setState(0x9726, 0x4b0e, 0xe2a0, 0x4db3, 0x2af7, 0xe1fc, 0x0, 0x1);
        gbc.writeMem(0x9726, { 0x4b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x4b0e, gbc.sp());
        EXPECT(0x9727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9726));
        // 4B 01C7
        gbc.setState(0x6ed3, 0xc8bb, 0x76a0, 0x90c4, 0x5663, 0x9e03, 0x1, 0x1);
        gbc.writeMem(0x6ed3, { 0x4b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc8bb, gbc.sp());
        EXPECT(0x6ed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01C8
        gbc.setState(0xb8c4, 0x3659, 0x8090, 0x9b2c, 0x8bf3, 0xc378, 0x0, 0x0);
        gbc.writeMem(0xb8c4, { 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3659, gbc.sp());
        EXPECT(0xb8c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb8c4));
        // 4B 01C9
        gbc.setState(0x527a, 0xabb, 0x2970, 0x2ed3, 0x8b27, 0x547f, 0x0, 0x1);
        gbc.writeMem(0x527a, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xabb, gbc.sp());
        EXPECT(0x527b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01CA
        gbc.setState(0x7bf3, 0xe6f8, 0x27d0, 0xe116, 0xc112, 0x364e, 0x1, 0x1);
        gbc.writeMem(0x7bf3, { 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01CC
        gbc.setState(0x3770, 0x899f, 0x7690, 0x2f1f, 0xeffa, 0xdc35, 0x0, 0x1);
        gbc.writeMem(0x3770, { 0x4b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x899f, gbc.sp());
        EXPECT(0x3771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01CD
        gbc.setState(0xe9d8, 0x239a, 0xff60, 0xaf63, 0x830d, 0x5912, 0x0, 0x1);
        gbc.writeMem(0xe9d8, { 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0xe9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe9d8));
        // 4B 01CF
        gbc.setState(0x2e7c, 0x938a, 0x8bf0, 0x7f6c, 0xa86e, 0xff80, 0x1, 0x1);
        gbc.writeMem(0x2e7c, { 0x4b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x938a, gbc.sp());
        EXPECT(0x2e7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01D0
        gbc.setState(0x144e, 0x559, 0xc740, 0x9104, 0xa376, 0x9cb0, 0x0, 0x0);
        gbc.writeMem(0x144e, { 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x559, gbc.sp());
        EXPECT(0x144f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01D1
        gbc.setState(0x95cc, 0x8fe1, 0x3e70, 0x2bc2, 0xed3, 0x925c, 0x1, 0x0);
        gbc.writeMem(0x95cc, { 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8fe1, gbc.sp());
        EXPECT(0x95cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x95cc));
        // 4B 01D2
        gbc.setState(0x2b70, 0x965f, 0x5320, 0xb095, 0xa0d6, 0x8b93, 0x1, 0x1);
        gbc.writeMem(0x2b70, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x965f, gbc.sp());
        EXPECT(0x2b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01D3
        gbc.setState(0xb715, 0x3015, 0xc8f0, 0x4d73, 0x4024, 0xea67, 0x0, 0x0);
        gbc.writeMem(0xb715, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3015, gbc.sp());
        EXPECT(0xb716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb715));
        // 4B 01D4
        gbc.setState(0x923a, 0x20b0, 0x90c0, 0xf9df, 0x947b, 0x9e0, 0x1, 0x0);
        gbc.writeMem(0x923a, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0x923b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x923a));
        // 4B 01D6
        gbc.setState(0x4e7e, 0xfb50, 0xa5b0, 0xa187, 0x70ba, 0xe158, 0x1, 0x1);
        gbc.writeMem(0x4e7e, { 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb50, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01D7
        gbc.setState(0xc383, 0x20b0, 0x8c0, 0xb576, 0x1289, 0x3446, 0x1, 0x1);
        gbc.writeMem(0xc383, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x20b0, gbc.sp());
        EXPECT(0xc384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc383));
        // 4B 01D8
        gbc.setState(0x3b19, 0xfabd, 0xdc40, 0x275, 0x8dc6, 0x2331, 0x1, 0x1);
        gbc.writeMem(0x3b19, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfabd, gbc.sp());
        EXPECT(0x3b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01D9
        gbc.setState(0xd015, 0x6523, 0x7340, 0x7b31, 0x36fa, 0xdc59, 0x0, 0x0);
        gbc.writeMem(0xd015, { 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6523, gbc.sp());
        EXPECT(0xd016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd015));
        // 4B 01DA
        gbc.setState(0xa3c1, 0x24f9, 0x6830, 0x2d, 0x376d, 0x8d2d, 0x0, 0x1);
        gbc.writeMem(0xa3c1, { 0x4b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x24f9, gbc.sp());
        EXPECT(0xa3c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa3c1));
        // 4B 01DB
        gbc.setState(0x49ae, 0x677e, 0x3f10, 0xd5ff, 0x8da9, 0x5263, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0x49af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01DC
        gbc.setState(0x300d, 0xcdeb, 0xc830, 0x6400, 0xb2fe, 0x1ff3, 0x1, 0x1);
        gbc.writeMem(0x300d, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0x300e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01DD
        gbc.setState(0x74c6, 0xc560, 0x7050, 0x86e8, 0x9152, 0x5d00, 0x0, 0x0);
        gbc.writeMem(0x74c6, { 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc560, gbc.sp());
        EXPECT(0x74c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01DE
        gbc.setState(0xdb81, 0xccfc, 0xfa00, 0xe6c4, 0x906, 0xb0cf, 0x0, 0x1);
        gbc.writeMem(0xdb81, { 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xccfc, gbc.sp());
        EXPECT(0xdb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdb81));
        // 4B 01DF
        gbc.setState(0x463c, 0x8894, 0xc560, 0xda3d, 0x9ea, 0xd93b, 0x1, 0x1);
        gbc.writeMem(0x463c, { 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x8894, gbc.sp());
        EXPECT(0x463d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01E0
        gbc.setState(0x3aa7, 0x882b, 0x8680, 0x2a95, 0xb46, 0xa526, 0x1, 0x0);
        gbc.writeMem(0x3aa7, { 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0x3aa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01E1
        gbc.setState(0x2b3e, 0x6cbf, 0x8590, 0x955a, 0xcfaf, 0x9348, 0x0, 0x1);
        gbc.writeMem(0x2b3e, { 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6cbf, gbc.sp());
        EXPECT(0x2b3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01E3
        gbc.setState(0x8d8d, 0xc6a0, 0x13b0, 0xeb27, 0x9e08, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x8d8d, { 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc6a0, gbc.sp());
        EXPECT(0x8d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8d8d));
        // 4B 01E4
        gbc.setState(0xbd51, 0x7d97, 0x8290, 0x1ec2, 0xb07f, 0x6290, 0x1, 0x1);
        gbc.writeMem(0xbd51, { 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7d97, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbd51));
        // 4B 01E5
        gbc.setState(0xa112, 0xa1b0, 0x3660, 0x32a1, 0x1a15, 0x99c6, 0x1, 0x1);
        gbc.writeMem(0xa112, { 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa1b0, gbc.sp());
        EXPECT(0xa113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa112));
        // 4B 01E7
        gbc.setState(0xa755, 0x46cc, 0x4800, 0x5e7f, 0x55d6, 0x870, 0x0, 0x1);
        gbc.writeMem(0xa755, { 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x46cc, gbc.sp());
        EXPECT(0xa756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa755));
        // 4B 01E8
        gbc.setState(0x5272, 0x15e7, 0xcee0, 0x224d, 0x2bde, 0x94ad, 0x0, 0x0);
        gbc.writeMem(0x5272, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x15e7, gbc.sp());
        EXPECT(0x5273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01E9
        gbc.setState(0x9e6e, 0x8b3b, 0x7b60, 0x30b6, 0xcfb4, 0xd77d, 0x1, 0x1);
        gbc.writeMem(0x9e6e, { 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8b3b, gbc.sp());
        EXPECT(0x9e6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9e6e));
        // 4B 01EA
        gbc.setState(0x80e9, 0xdbd3, 0x7e00, 0xb602, 0xc4b2, 0xfd60, 0x1, 0x0);
        gbc.writeMem(0x80e9, { 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xdbd3, gbc.sp());
        EXPECT(0x80ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x80e9));
        // 4B 01EB
        gbc.setState(0x9ac, 0xe23e, 0xb0, 0xf554, 0xf52b, 0xd77, 0x1, 0x0);
        gbc.writeMem(0x9ac, { 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe23e, gbc.sp());
        EXPECT(0x9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01EC
        gbc.setState(0x40d7, 0xd40f, 0x18e0, 0x859e, 0xe27a, 0x96d3, 0x1, 0x0);
        gbc.writeMem(0x40d7, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd40f, gbc.sp());
        EXPECT(0x40d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01ED
        gbc.setState(0x5ea4, 0x1057, 0x2530, 0x7b0b, 0x4726, 0x8c8a, 0x0, 0x0);
        gbc.writeMem(0x5ea4, { 0x4b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1057, gbc.sp());
        EXPECT(0x5ea5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01EE
        gbc.setState(0xc313, 0xcb6b, 0xdbc0, 0xb21d, 0x55bd, 0x5961, 0x0, 0x0);
        gbc.writeMem(0xc313, { 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcb6b, gbc.sp());
        EXPECT(0xc314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc313));
        // 4B 01EF
        gbc.setState(0x369, 0xfa09, 0x23c0, 0x7460, 0xdca8, 0x25b5, 0x0, 0x0);
        gbc.writeMem(0x369, { 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfa09, gbc.sp());
        EXPECT(0x36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01F0
        gbc.setState(0xb4a2, 0x627f, 0x4850, 0xfe91, 0xf246, 0x3f7f, 0x1, 0x0);
        gbc.writeMem(0xb4a2, { 0x4b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x627f, gbc.sp());
        EXPECT(0xb4a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb4a2));
        // 4B 01F1
        gbc.setState(0x6cf0, 0xc3e5, 0x61d0, 0x6298, 0x4c16, 0x8cc0, 0x0, 0x0);
        gbc.writeMem(0x6cf0, { 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc3e5, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01F2
        gbc.setState(0xad45, 0x7164, 0x7a10, 0x36ec, 0x162f, 0xebee, 0x0, 0x0);
        gbc.writeMem(0xad45, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7164, gbc.sp());
        EXPECT(0xad46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xad45));
        // 4B 01F3
        gbc.setState(0x1fd5, 0xdaba, 0xeb50, 0x546, 0x2034, 0x7bd7, 0x1, 0x1);
        gbc.writeMem(0x1fd5, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0x1fd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01F5
        gbc.setState(0xb18e, 0x4734, 0x3050, 0xa926, 0xa02c, 0x526e, 0x1, 0x1);
        gbc.writeMem(0xb18e, { 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0xb18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb18e));
        // 4B 01F6
        gbc.setState(0x38b, 0x9faf, 0x610, 0x52c6, 0x9152, 0xabec, 0x0, 0x0);
        gbc.writeMem(0x38b, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9faf, gbc.sp());
        EXPECT(0x38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01F7
        gbc.setState(0x4395, 0x6374, 0xd290, 0x1261, 0x151, 0xdf2, 0x1, 0x0);
        gbc.writeMem(0x4395, { 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x6374, gbc.sp());
        EXPECT(0x4396, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01F8
        gbc.setState(0x2592, 0xb984, 0x8400, 0xd94a, 0x2b20, 0xe33a, 0x0, 0x0);
        gbc.writeMem(0x2592, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb984, gbc.sp());
        EXPECT(0x2593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 01F9
        gbc.setState(0x3680, 0x7f04, 0x23b0, 0x5724, 0xcc8c, 0x1666, 0x0, 0x1);
        gbc.writeMem(0x3680, { 0x4b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7f04, gbc.sp());
        EXPECT(0x3681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01FB
        gbc.setState(0xe9be, 0x8e6f, 0xbf00, 0x45d3, 0x6996, 0xedfb, 0x0, 0x0);
        gbc.writeMem(0xe9be, { 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8e6f, gbc.sp());
        EXPECT(0xe9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe9be));
        // 4B 01FC
        gbc.setState(0xac00, 0x1dcf, 0x9370, 0xb16e, 0x6e61, 0x27b, 0x0, 0x1);
        gbc.writeMem(0xac00, { 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1dcf, gbc.sp());
        EXPECT(0xac01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xac00));
        // 4B 01FD
        gbc.setState(0xb7ea, 0x50d1, 0x5de0, 0x9664, 0xaa57, 0xe999, 0x1, 0x0);
        gbc.writeMem(0xb7ea, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x50d1, gbc.sp());
        EXPECT(0xb7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb7ea));
        // 4B 01FE
        gbc.setState(0x5e3d, 0xf488, 0xe7f0, 0xdaa2, 0xa907, 0xe3eb, 0x0, 0x1);
        gbc.writeMem(0x5e3d, { 0x4b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf488, gbc.sp());
        EXPECT(0x5e3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 01FF
        gbc.setState(0xbf, 0xd962, 0x3990, 0x16d2, 0xb48c, 0x9c05, 0x0, 0x0);
        gbc.writeMem(0xbf, { 0x4b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd962, gbc.sp());
        EXPECT(0xc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0200
        gbc.setState(0x4ea8, 0x9d2d, 0xdaa0, 0x33f5, 0x1b11, 0x826d, 0x0, 0x0);
        gbc.writeMem(0x4ea8, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d2d, gbc.sp());
        EXPECT(0x4ea9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0201
        gbc.setState(0x2fd7, 0xe14, 0x41c0, 0xf27d, 0x801e, 0x97a7, 0x0, 0x1);
        gbc.writeMem(0x2fd7, { 0x4b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe14, gbc.sp());
        EXPECT(0x2fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0202
        gbc.setState(0x2912, 0x7afe, 0x11b0, 0xd148, 0xd051, 0x37e0, 0x0, 0x0);
        gbc.writeMem(0x2912, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7afe, gbc.sp());
        EXPECT(0x2913, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0203
        gbc.setState(0xe401, 0x4f66, 0xa20, 0x9f0a, 0x9bdc, 0xb301, 0x1, 0x1);
        gbc.writeMem(0xe401, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4f66, gbc.sp());
        EXPECT(0xe402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe401));
        // 4B 0204
        gbc.setState(0x4267, 0xee4a, 0xb0c0, 0x353f, 0xecb8, 0xc516, 0x1, 0x0);
        gbc.writeMem(0x4267, { 0x4b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0x4268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0205
        gbc.setState(0xca10, 0xacad, 0xd050, 0xc29b, 0xde0a, 0xb2a2, 0x1, 0x1);
        gbc.writeMem(0xca10, { 0x4b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xacad, gbc.sp());
        EXPECT(0xca11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca10));
        // 4B 0206
        gbc.setState(0x9021, 0xbd02, 0xed40, 0x2628, 0x5caa, 0x3af5, 0x1, 0x1);
        gbc.writeMem(0x9021, { 0x4b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0x9022, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9021));
        // 4B 0207
        gbc.setState(0x1e3f, 0x2ea8, 0xb600, 0x5acd, 0xe332, 0xa3a4, 0x1, 0x1);
        gbc.writeMem(0x1e3f, { 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2ea8, gbc.sp());
        EXPECT(0x1e40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0208
        gbc.setState(0x5dcc, 0xc166, 0xd5d0, 0xe3c7, 0x9ff8, 0xaeef, 0x1, 0x0);
        gbc.writeMem(0x5dcc, { 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc166, gbc.sp());
        EXPECT(0x5dcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0209
        gbc.setState(0xb30e, 0x6c90, 0xc270, 0xa7f7, 0x7f16, 0x1e38, 0x0, 0x1);
        gbc.writeMem(0xb30e, { 0x4b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6c90, gbc.sp());
        EXPECT(0xb30f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb30e));
        // 4B 020A
        gbc.setState(0xd494, 0xcf54, 0xe2d0, 0x9268, 0xd94, 0x3bb6, 0x1, 0x0);
        gbc.writeMem(0xd494, { 0x4b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcf54, gbc.sp());
        EXPECT(0xd495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd494));
        // 4B 020B
        gbc.setState(0x462a, 0x743d, 0x35c0, 0xc8cf, 0xb928, 0xae4c, 0x1, 0x0);
        gbc.writeMem(0x462a, { 0x4b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0x462b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 020C
        gbc.setState(0x381e, 0x1736, 0x46e0, 0xf058, 0xfd5b, 0x97a7, 0x0, 0x1);
        gbc.writeMem(0x381e, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0x381f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 020D
        gbc.setState(0x5f59, 0xef5c, 0xbf20, 0x43bd, 0x51b6, 0x1e72, 0x0, 0x1);
        gbc.writeMem(0x5f59, { 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xef5c, gbc.sp());
        EXPECT(0x5f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 020E
        gbc.setState(0xd87b, 0xae9b, 0xf8a0, 0x1efa, 0x3fef, 0x6065, 0x1, 0x0);
        gbc.writeMem(0xd87b, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xae9b, gbc.sp());
        EXPECT(0xd87c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd87b));
        // 4B 0210
        gbc.setState(0xd987, 0x8cbf, 0x24f0, 0x7aba, 0x3936, 0x1410, 0x0, 0x0);
        gbc.writeMem(0xd987, { 0x4b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8cbf, gbc.sp());
        EXPECT(0xd988, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd987));
        // 4B 0211
        gbc.setState(0xac08, 0x3294, 0x59c0, 0x2ac3, 0x96b5, 0x7d6b, 0x1, 0x0);
        gbc.writeMem(0xac08, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0xac09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xac08));
        // 4B 0212
        gbc.setState(0x750d, 0xe4c3, 0x9d10, 0xedc9, 0xe8d5, 0x6a6c, 0x1, 0x1);
        gbc.writeMem(0x750d, { 0x4b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe4c3, gbc.sp());
        EXPECT(0x750e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0213
        gbc.setState(0x1713, 0x299c, 0x2e50, 0xbccc, 0xc44d, 0xd26c, 0x1, 0x0);
        gbc.writeMem(0x1713, { 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x1714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0214
        gbc.setState(0xca07, 0x7da3, 0x5df0, 0xac23, 0x47e2, 0xef38, 0x1, 0x0);
        gbc.writeMem(0xca07, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7da3, gbc.sp());
        EXPECT(0xca08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca07));
        // 4B 0215
        gbc.setState(0x9553, 0x8abe, 0x8e60, 0xa3af, 0x1dc0, 0xc566, 0x0, 0x1);
        gbc.writeMem(0x9553, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8abe, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9553));
        // 4B 0216
        gbc.setState(0x5b66, 0xd4e8, 0x5300, 0xd1d8, 0x314, 0x56c0, 0x0, 0x1);
        gbc.writeMem(0x5b66, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0217
        gbc.setState(0x995e, 0x12ce, 0x9960, 0x2925, 0xb247, 0xc97, 0x0, 0x0);
        gbc.writeMem(0x995e, { 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x995f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x995e));
        // 4B 0218
        gbc.setState(0x1001, 0x99fa, 0xf430, 0xd01a, 0x443e, 0x99c1, 0x0, 0x0);
        gbc.writeMem(0x1001, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x99fa, gbc.sp());
        EXPECT(0x1002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0219
        gbc.setState(0x71f7, 0xb614, 0xe4e0, 0x70ed, 0xc49, 0x9d97, 0x0, 0x1);
        gbc.writeMem(0x71f7, { 0x4b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb614, gbc.sp());
        EXPECT(0x71f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 021A
        gbc.setState(0x1068, 0x35b5, 0x5dc0, 0xab4a, 0xbc2a, 0xf91e, 0x1, 0x1);
        gbc.writeMem(0x1068, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x35b5, gbc.sp());
        EXPECT(0x1069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 021B
        gbc.setState(0x371a, 0x2c60, 0xe0f0, 0x24ce, 0x7562, 0xa433, 0x1, 0x1);
        gbc.writeMem(0x371a, { 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2c60, gbc.sp());
        EXPECT(0x371b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 021C
        gbc.setState(0xab79, 0x3894, 0x4d50, 0xb2c3, 0xb073, 0xb1aa, 0x1, 0x0);
        gbc.writeMem(0xab79, { 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3894, gbc.sp());
        EXPECT(0xab7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xab79));
        // 4B 021D
        gbc.setState(0x319f, 0xf7ef, 0xcc20, 0x74ed, 0x6d32, 0x2e22, 0x0, 0x0);
        gbc.writeMem(0x319f, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0x31a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 021E
        gbc.setState(0xd820, 0xb112, 0xd5c0, 0xf6ee, 0xcf4f, 0x1e5, 0x0, 0x1);
        gbc.writeMem(0xd820, { 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb112, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd820));
        // 4B 021F
        gbc.setState(0x1f34, 0xaca3, 0x7530, 0x9d4b, 0x3800, 0xef61, 0x0, 0x1);
        gbc.writeMem(0x1f34, { 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaca3, gbc.sp());
        EXPECT(0x1f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0220
        gbc.setState(0xc5c6, 0x7ce, 0xe7f0, 0x39de, 0xe51b, 0xfd8d, 0x1, 0x0);
        gbc.writeMem(0xc5c6, { 0x4b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7ce, gbc.sp());
        EXPECT(0xc5c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc5c6));
        // 4B 0221
        gbc.setState(0x7091, 0xb093, 0x8690, 0x3182, 0x4086, 0xcd43, 0x0, 0x0);
        gbc.writeMem(0x7091, { 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb093, gbc.sp());
        EXPECT(0x7092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0222
        gbc.setState(0x72d4, 0x7ee2, 0xe040, 0x1574, 0x754a, 0x1c37, 0x0, 0x1);
        gbc.writeMem(0x72d4, { 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7ee2, gbc.sp());
        EXPECT(0x72d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0223
        gbc.setState(0x13de, 0xad58, 0x9b80, 0xb434, 0x1cd6, 0xc594, 0x1, 0x0);
        gbc.writeMem(0x13de, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xad58, gbc.sp());
        EXPECT(0x13df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0224
        gbc.setState(0x4499, 0x5853, 0x5cb0, 0x96eb, 0x620e, 0x2bc3, 0x1, 0x0);
        gbc.writeMem(0x4499, { 0x4b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5853, gbc.sp());
        EXPECT(0x449a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0225
        gbc.setState(0x92f5, 0xf009, 0xc640, 0x288a, 0x832a, 0x22cc, 0x1, 0x0);
        gbc.writeMem(0x92f5, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x92f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x92f5));
        // 4B 0226
        gbc.setState(0xd121, 0x768e, 0x3d60, 0xefac, 0x2ac4, 0x8a49, 0x0, 0x1);
        gbc.writeMem(0xd121, { 0x4b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x768e, gbc.sp());
        EXPECT(0xd122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd121));
        // 4B 0227
        gbc.setState(0xc282, 0xd14e, 0xd470, 0x7be3, 0x607, 0x4fc2, 0x0, 0x0);
        gbc.writeMem(0xc282, { 0x4b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc282));
        // 4B 0228
        gbc.setState(0x949c, 0xdf30, 0xc5e0, 0xa133, 0x12df, 0xf0b8, 0x1, 0x1);
        gbc.writeMem(0x949c, { 0x4b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x949d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x949c));
        // 4B 0229
        gbc.setState(0x2b42, 0xd558, 0x47b0, 0x194c, 0x1add, 0x77a2, 0x0, 0x0);
        gbc.writeMem(0x2b42, { 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd558, gbc.sp());
        EXPECT(0x2b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 022A
        gbc.setState(0x8a03, 0x6867, 0x4bc0, 0x1b3f, 0xd4b4, 0xa4b6, 0x1, 0x1);
        gbc.writeMem(0x8a03, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0x8a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8a03));
        // 4B 022B
        gbc.setState(0xf96, 0xca52, 0x9b80, 0x3bd, 0xe2e2, 0x44b6, 0x1, 0x0);
        gbc.writeMem(0xf96, { 0x4b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xca52, gbc.sp());
        EXPECT(0xf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 022C
        gbc.setState(0x6a6d, 0xac1b, 0x420, 0xff13, 0x4db9, 0xffd6, 0x0, 0x1);
        gbc.writeMem(0x6a6d, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xac1b, gbc.sp());
        EXPECT(0x6a6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 022D
        gbc.setState(0x1a12, 0x48aa, 0x3e50, 0x1d01, 0xd26c, 0x7c84, 0x1, 0x0);
        gbc.writeMem(0x1a12, { 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x48aa, gbc.sp());
        EXPECT(0x1a13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 022E
        gbc.setState(0x3819, 0x4f16, 0xa220, 0x45c4, 0x9f45, 0x3330, 0x1, 0x1);
        gbc.writeMem(0x3819, { 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0x381a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 022F
        gbc.setState(0x4889, 0xa61b, 0x6970, 0xde76, 0xa2d1, 0x6e7d, 0x0, 0x1);
        gbc.writeMem(0x4889, { 0x4b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa61b, gbc.sp());
        EXPECT(0x488a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0230
        gbc.setState(0xa54d, 0xb83d, 0x75a0, 0xac7e, 0x3443, 0x281a, 0x0, 0x0);
        gbc.writeMem(0xa54d, { 0x4b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa54d));
        // 4B 0231
        gbc.setState(0x7c63, 0xab75, 0xd9c0, 0x158b, 0xdb7c, 0xe010, 0x0, 0x1);
        gbc.writeMem(0x7c63, { 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xab75, gbc.sp());
        EXPECT(0x7c64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0232
        gbc.setState(0x3c74, 0x852d, 0x92e0, 0xe2d1, 0xc05f, 0xf871, 0x1, 0x1);
        gbc.writeMem(0x3c74, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x852d, gbc.sp());
        EXPECT(0x3c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0233
        gbc.setState(0x7e51, 0xd17d, 0xb530, 0xa62e, 0x7431, 0x2b0c, 0x0, 0x1);
        gbc.writeMem(0x7e51, { 0x4b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd17d, gbc.sp());
        EXPECT(0x7e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0234
        gbc.setState(0xa311, 0xf582, 0x8e30, 0x4e0f, 0xe007, 0x5347, 0x0, 0x0);
        gbc.writeMem(0xa311, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf582, gbc.sp());
        EXPECT(0xa312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa311));
        // 4B 0236
        gbc.setState(0x64c0, 0x4f86, 0xfdf0, 0xc480, 0xda39, 0xd2b9, 0x1, 0x1);
        gbc.writeMem(0x64c0, { 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4f86, gbc.sp());
        EXPECT(0x64c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0237
        gbc.setState(0xe09, 0x9760, 0xf520, 0x2e8b, 0x3ee8, 0x8a9d, 0x0, 0x1);
        gbc.writeMem(0xe09, { 0x4b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9760, gbc.sp());
        EXPECT(0xe0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0238
        gbc.setState(0x3a13, 0x82e0, 0x3ae0, 0x7c0f, 0xa71c, 0x9790, 0x0, 0x1);
        gbc.writeMem(0x3a13, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x82e0, gbc.sp());
        EXPECT(0x3a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0239
        gbc.setState(0x350a, 0xc8a4, 0x10b0, 0x9f9, 0xd324, 0x60a6, 0x0, 0x1);
        gbc.writeMem(0x350a, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc8a4, gbc.sp());
        EXPECT(0x350b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 023A
        gbc.setState(0xacd5, 0xf5e, 0x3c60, 0xda54, 0x60cb, 0xc6dd, 0x0, 0x0);
        gbc.writeMem(0xacd5, { 0x4b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xf5e, gbc.sp());
        EXPECT(0xacd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xacd5));
        // 4B 023B
        gbc.setState(0xe9b7, 0x4f50, 0x3fd0, 0xbd7, 0x7d5c, 0x2acf, 0x0, 0x0);
        gbc.writeMem(0xe9b7, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x4f50, gbc.sp());
        EXPECT(0xe9b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe9b7));
        // 4B 023C
        gbc.setState(0xed12, 0xc4f2, 0xd000, 0x803c, 0x2e74, 0xbbe2, 0x0, 0x1);
        gbc.writeMem(0xed12, { 0x4b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc4f2, gbc.sp());
        EXPECT(0xed13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xed12));
        // 4B 023D
        gbc.setState(0xb292, 0x28e7, 0x8980, 0xb6d8, 0xaad, 0x59b8, 0x1, 0x0);
        gbc.writeMem(0xb292, { 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x28e7, gbc.sp());
        EXPECT(0xb293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb292));
        // 4B 023F
        gbc.setState(0x3b28, 0x800d, 0xb040, 0xe021, 0x6c52, 0x5dd5, 0x1, 0x0);
        gbc.writeMem(0x3b28, { 0x4b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x800d, gbc.sp());
        EXPECT(0x3b29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0240
        gbc.setState(0xc375, 0x5d82, 0x7800, 0xa4b6, 0xd57f, 0xdec2, 0x1, 0x0);
        gbc.writeMem(0xc375, { 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5d82, gbc.sp());
        EXPECT(0xc376, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc375));
        // 4B 0242
        gbc.setState(0x2056, 0xd4db, 0xf4a0, 0xb517, 0xe98f, 0x3df3, 0x0, 0x1);
        gbc.writeMem(0x2056, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0x2057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0243
        gbc.setState(0x9c7, 0xca2c, 0xad40, 0xc306, 0x209e, 0x2624, 0x0, 0x0);
        gbc.writeMem(0x9c7, { 0x4b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xca2c, gbc.sp());
        EXPECT(0x9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0244
        gbc.setState(0xa1a8, 0x9ceb, 0x5940, 0x36ab, 0xfa3, 0x7591, 0x0, 0x1);
        gbc.writeMem(0xa1a8, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ceb, gbc.sp());
        EXPECT(0xa1a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa1a8));
        // 4B 0245
        gbc.setState(0x5ee8, 0x6f53, 0x4b0, 0x3100, 0xd855, 0xc9ab, 0x1, 0x0);
        gbc.writeMem(0x5ee8, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6f53, gbc.sp());
        EXPECT(0x5ee9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0246
        gbc.setState(0x5f55, 0x2951, 0x30c0, 0x838e, 0xc429, 0xfbec, 0x0, 0x0);
        gbc.writeMem(0x5f55, { 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2951, gbc.sp());
        EXPECT(0x5f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0247
        gbc.setState(0xa4f8, 0xe99c, 0x1330, 0xcae1, 0x4ca6, 0x6122, 0x0, 0x0);
        gbc.writeMem(0xa4f8, { 0x4b });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe99c, gbc.sp());
        EXPECT(0xa4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa4f8));
        // 4B 0249
        gbc.setState(0xb3d0, 0x8f, 0xe200, 0xf8b9, 0x5e41, 0xddfb, 0x1, 0x1);
        gbc.writeMem(0xb3d0, { 0x4b });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8f, gbc.sp());
        EXPECT(0xb3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb3d0));
        // 4B 024A
        gbc.setState(0x2b4d, 0x713, 0x8f40, 0x6976, 0x6648, 0xf50d, 0x0, 0x0);
        gbc.writeMem(0x2b4d, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x713, gbc.sp());
        EXPECT(0x2b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 024B
        gbc.setState(0x1fd3, 0x397f, 0x7410, 0x9c8b, 0xb91b, 0xe88, 0x0, 0x0);
        gbc.writeMem(0x1fd3, { 0x4b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x397f, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 024C
        gbc.setState(0xde3d, 0x7813, 0x8ee0, 0xc902, 0xc8c5, 0x13e8, 0x1, 0x0);
        gbc.writeMem(0xde3d, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7813, gbc.sp());
        EXPECT(0xde3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xde3d));
        // 4B 024D
        gbc.setState(0x34a8, 0xda9e, 0xfaf0, 0xcba2, 0xba6e, 0x6a82, 0x1, 0x1);
        gbc.writeMem(0x34a8, { 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xda9e, gbc.sp());
        EXPECT(0x34a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 024E
        gbc.setState(0xbe8b, 0xe8a2, 0xce40, 0xd460, 0xb46a, 0xfb75, 0x1, 0x1);
        gbc.writeMem(0xbe8b, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xe8a2, gbc.sp());
        EXPECT(0xbe8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbe8b));
        // 4B 024F
        gbc.setState(0x68df, 0x9574, 0x58d0, 0x20d9, 0x27ab, 0xbcc3, 0x1, 0x1);
        gbc.writeMem(0x68df, { 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9574, gbc.sp());
        EXPECT(0x68e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0250
        gbc.setState(0x9105, 0x82b, 0x83f0, 0x5a9e, 0xf464, 0xf74b, 0x0, 0x1);
        gbc.writeMem(0x9105, { 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x82b, gbc.sp());
        EXPECT(0x9106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9105));
        // 4B 0251
        gbc.setState(0xe4db, 0x39af, 0xb1f0, 0x970f, 0x3da6, 0x40a3, 0x0, 0x0);
        gbc.writeMem(0xe4db, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x39af, gbc.sp());
        EXPECT(0xe4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe4db));
        // 4B 0252
        gbc.setState(0x3c86, 0xba17, 0x940, 0x9794, 0x87c9, 0x774a, 0x1, 0x1);
        gbc.writeMem(0x3c86, { 0x4b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xba17, gbc.sp());
        EXPECT(0x3c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0253
        gbc.setState(0x90ed, 0xf4a6, 0xe5c0, 0x2d06, 0x1fff, 0x21e8, 0x1, 0x0);
        gbc.writeMem(0x90ed, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf4a6, gbc.sp());
        EXPECT(0x90ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x90ed));
        // 4B 0254
        gbc.setState(0x28eb, 0x6a3d, 0xcd20, 0xf1b3, 0x2e52, 0x6813, 0x0, 0x1);
        gbc.writeMem(0x28eb, { 0x4b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6a3d, gbc.sp());
        EXPECT(0x28ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0255
        gbc.setState(0x38c8, 0x9939, 0xf40, 0x3307, 0xb3cd, 0x1354, 0x1, 0x1);
        gbc.writeMem(0x38c8, { 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x38c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0256
        gbc.setState(0xd3d0, 0x7c24, 0x440, 0xd209, 0x4ed4, 0x6b78, 0x1, 0x1);
        gbc.writeMem(0xd3d0, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7c24, gbc.sp());
        EXPECT(0xd3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd3d0));
        // 4B 0257
        gbc.setState(0xe939, 0x2b94, 0x46a0, 0x85fe, 0xe7c1, 0xfc1a, 0x1, 0x0);
        gbc.writeMem(0xe939, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0xe93a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe939));
        // 4B 0259
        gbc.setState(0xc8d, 0x2c94, 0x430, 0xc75c, 0x9327, 0x5d72, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0x4b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2c94, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 025A
        gbc.setState(0xdd0f, 0x59c6, 0x2030, 0x52c8, 0x255c, 0x5427, 0x0, 0x1);
        gbc.writeMem(0xdd0f, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x59c6, gbc.sp());
        EXPECT(0xdd10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdd0f));
        // 4B 025C
        gbc.setState(0xb17f, 0xc4af, 0x2080, 0xcd82, 0x5dd9, 0xea4a, 0x0, 0x0);
        gbc.writeMem(0xb17f, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xc4af, gbc.sp());
        EXPECT(0xb180, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb17f));
        // 4B 025D
        gbc.setState(0x8156, 0xca23, 0xdd0, 0x3aef, 0x8967, 0xcad3, 0x1, 0x1);
        gbc.writeMem(0x8156, { 0x4b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xca23, gbc.sp());
        EXPECT(0x8157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8156));
        // 4B 025E
        gbc.setState(0x9813, 0x983d, 0xba40, 0xfd76, 0x6eeb, 0x4108, 0x1, 0x1);
        gbc.writeMem(0x9813, { 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x983d, gbc.sp());
        EXPECT(0x9814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9813));
        // 4B 025F
        gbc.setState(0x7c3, 0x7826, 0x11b0, 0x2559, 0x1bb9, 0x655a, 0x1, 0x0);
        gbc.writeMem(0x7c3, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7826, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0260
        gbc.setState(0x9c5f, 0xc69a, 0x5570, 0x59d7, 0xb204, 0x700, 0x1, 0x1);
        gbc.writeMem(0x9c5f, { 0x4b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xc69a, gbc.sp());
        EXPECT(0x9c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9c5f));
        // 4B 0261
        gbc.setState(0x9382, 0x8546, 0xf6b0, 0xafb5, 0xbafc, 0x76f1, 0x1, 0x1);
        gbc.writeMem(0x9382, { 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x8546, gbc.sp());
        EXPECT(0x9383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9382));
        // 4B 0262
        gbc.setState(0xcb4c, 0xfe39, 0x2a50, 0xc21b, 0x88e4, 0xa583, 0x0, 0x1);
        gbc.writeMem(0xcb4c, { 0x4b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xfe39, gbc.sp());
        EXPECT(0xcb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb4c));
        // 4B 0263
        gbc.setState(0x4670, 0x403d, 0xcc40, 0x8f54, 0x1522, 0x1f42, 0x1, 0x1);
        gbc.writeMem(0x4670, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0264
        gbc.setState(0xaf70, 0xa3a6, 0xf1c0, 0x53be, 0x313a, 0x795c, 0x1, 0x0);
        gbc.writeMem(0xaf70, { 0x4b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa3a6, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaf70));
        // 4B 0265
        gbc.setState(0x278f, 0x89cc, 0x4e10, 0x9381, 0x92b9, 0xcdd, 0x1, 0x1);
        gbc.writeMem(0x278f, { 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x89cc, gbc.sp());
        EXPECT(0x2790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0266
        gbc.setState(0x596e, 0x7b5f, 0x6710, 0x17ae, 0x66e7, 0xf100, 0x1, 0x1);
        gbc.writeMem(0x596e, { 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7b5f, gbc.sp());
        EXPECT(0x596f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0267
        gbc.setState(0x2b54, 0x9be2, 0x5540, 0xd5a1, 0x66b, 0xa21f, 0x0, 0x1);
        gbc.writeMem(0x2b54, { 0x4b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9be2, gbc.sp());
        EXPECT(0x2b55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0268
        gbc.setState(0xdcfd, 0xc62e, 0xd660, 0x6d20, 0xced4, 0xb9ee, 0x1, 0x0);
        gbc.writeMem(0xdcfd, { 0x4b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc62e, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdcfd));
        // 4B 0269
        gbc.setState(0x5821, 0x252f, 0x8920, 0xedb1, 0x9641, 0x4018, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x252f, gbc.sp());
        EXPECT(0x5822, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 026A
        gbc.setState(0x4012, 0x482c, 0xb3e0, 0xe990, 0xef2a, 0x4adc, 0x1, 0x0);
        gbc.writeMem(0x4012, { 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 026B
        gbc.setState(0x3d1a, 0xc809, 0x2ea0, 0x8438, 0xf62, 0x83bc, 0x0, 0x1);
        gbc.writeMem(0x3d1a, { 0x4b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc809, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 026C
        gbc.setState(0x73d9, 0x1de, 0xdec0, 0x9763, 0x135b, 0x5fba, 0x1, 0x1);
        gbc.writeMem(0x73d9, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1de, gbc.sp());
        EXPECT(0x73da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 026D
        gbc.setState(0x76a2, 0x10d6, 0x7360, 0x5117, 0xe259, 0x19b8, 0x1, 0x1);
        gbc.writeMem(0x76a2, { 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x10d6, gbc.sp());
        EXPECT(0x76a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 026E
        gbc.setState(0xc57e, 0xb07d, 0xced0, 0x154e, 0xc581, 0xc552, 0x1, 0x0);
        gbc.writeMem(0xc57e, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0xc57f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc57e));
        // 4B 026F
        gbc.setState(0x29c4, 0xf03c, 0x3720, 0x4510, 0xfb8b, 0x54ca, 0x1, 0x1);
        gbc.writeMem(0x29c4, { 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf03c, gbc.sp());
        EXPECT(0x29c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0270
        gbc.setState(0xb274, 0xa862, 0xdf70, 0x4cce, 0xa5f4, 0xfc81, 0x0, 0x1);
        gbc.writeMem(0xb274, { 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa862, gbc.sp());
        EXPECT(0xb275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb274));
        // 4B 0271
        gbc.setState(0xeb58, 0x30bc, 0xa310, 0xe6aa, 0x34c8, 0xc0f6, 0x0, 0x1);
        gbc.writeMem(0xeb58, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x30bc, gbc.sp());
        EXPECT(0xeb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xeb58));
        // 4B 0272
        gbc.setState(0x53cb, 0xb3bb, 0x1610, 0xb35e, 0x547f, 0xceb8, 0x1, 0x0);
        gbc.writeMem(0x53cb, { 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb3bb, gbc.sp());
        EXPECT(0x53cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0273
        gbc.setState(0x52ff, 0x1cac, 0x4e70, 0xa205, 0x1bde, 0x3d94, 0x0, 0x0);
        gbc.writeMem(0x52ff, { 0x4b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1cac, gbc.sp());
        EXPECT(0x5300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0274
        gbc.setState(0x6a76, 0x98de, 0x1b80, 0x77bf, 0xa8c, 0x44ca, 0x1, 0x0);
        gbc.writeMem(0x6a76, { 0x4b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x98de, gbc.sp());
        EXPECT(0x6a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0275
        gbc.setState(0x41f9, 0x55e7, 0x2040, 0x3ed5, 0x670e, 0xb25a, 0x1, 0x0);
        gbc.writeMem(0x41f9, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x55e7, gbc.sp());
        EXPECT(0x41fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0276
        gbc.setState(0x2787, 0x299c, 0x89e0, 0x5ab2, 0xe38, 0xd11c, 0x1, 0x0);
        gbc.writeMem(0x2787, { 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x299c, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0277
        gbc.setState(0xb0a3, 0x5089, 0x51e0, 0x86b8, 0xdff6, 0x6003, 0x1, 0x0);
        gbc.writeMem(0xb0a3, { 0x4b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5089, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb0a3));
        // 4B 0278
        gbc.setState(0x3150, 0xf764, 0xa030, 0x9831, 0x3aa1, 0x2634, 0x0, 0x0);
        gbc.writeMem(0x3150, { 0x4b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf764, gbc.sp());
        EXPECT(0x3151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0279
        gbc.setState(0x2d34, 0xabde, 0xbf40, 0xc385, 0x668f, 0xbc98, 0x0, 0x0);
        gbc.writeMem(0x2d34, { 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xabde, gbc.sp());
        EXPECT(0x2d35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 027A
        gbc.setState(0x4b86, 0x1839, 0xb360, 0xe86c, 0xc78c, 0x26d4, 0x1, 0x0);
        gbc.writeMem(0x4b86, { 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1839, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 027B
        gbc.setState(0x41aa, 0x53d, 0x2130, 0x5845, 0x2063, 0x1ecb, 0x1, 0x1);
        gbc.writeMem(0x41aa, { 0x4b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x53d, gbc.sp());
        EXPECT(0x41ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 027C
        gbc.setState(0xe63a, 0xab89, 0x3ba0, 0xbec6, 0xa392, 0x6724, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xab89, gbc.sp());
        EXPECT(0xe63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe63a));
        // 4B 027D
        gbc.setState(0x300, 0xd146, 0x5ee0, 0xf287, 0x21bc, 0x99d0, 0x1, 0x1);
        gbc.writeMem(0x300, { 0x4b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd146, gbc.sp());
        EXPECT(0x301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 027F
        gbc.setState(0x84f7, 0x9d82, 0x10e0, 0x8493, 0x19f3, 0x1156, 0x0, 0x1);
        gbc.writeMem(0x84f7, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x84f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x84f7));
        // 4B 0280
        gbc.setState(0xba43, 0x8b20, 0x7840, 0x925a, 0x5770, 0x6763, 0x0, 0x1);
        gbc.writeMem(0xba43, { 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x8b20, gbc.sp());
        EXPECT(0xba44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xba43));
        // 4B 0281
        gbc.setState(0x49ac, 0x5f22, 0x8610, 0xf3e7, 0x4403, 0xcd7e, 0x1, 0x1);
        gbc.writeMem(0x49ac, { 0x4b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x5f22, gbc.sp());
        EXPECT(0x49ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0282
        gbc.setState(0xbeeb, 0x28b2, 0xf4f0, 0x62d3, 0x1c18, 0xe439, 0x0, 0x0);
        gbc.writeMem(0xbeeb, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x28b2, gbc.sp());
        EXPECT(0xbeec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbeeb));
        // 4B 0283
        gbc.setState(0x68cc, 0xeb2f, 0xf220, 0xdac6, 0x92fa, 0x61c, 0x0, 0x1);
        gbc.writeMem(0x68cc, { 0x4b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xeb2f, gbc.sp());
        EXPECT(0x68cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0284
        gbc.setState(0xdf77, 0x5827, 0xe3c0, 0xac04, 0x7513, 0xd2bc, 0x0, 0x1);
        gbc.writeMem(0xdf77, { 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5827, gbc.sp());
        EXPECT(0xdf78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdf77));
        // 4B 0285
        gbc.setState(0xda36, 0x6563, 0xaf70, 0x27a3, 0x73d4, 0x422f, 0x1, 0x1);
        gbc.writeMem(0xda36, { 0x4b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6563, gbc.sp());
        EXPECT(0xda37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xda36));
        // 4B 0286
        gbc.setState(0x87d9, 0x3b67, 0x4450, 0xb694, 0x4b6d, 0xec3d, 0x0, 0x0);
        gbc.writeMem(0x87d9, { 0x4b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3b67, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x87d9));
        // 4B 0287
        gbc.setState(0x7570, 0xf16d, 0x370, 0xa4b6, 0x9820, 0x60da, 0x1, 0x0);
        gbc.writeMem(0x7570, { 0x4b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf16d, gbc.sp());
        EXPECT(0x7571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0288
        gbc.setState(0xb539, 0x9e8f, 0x80e0, 0x39df, 0x80b1, 0x1be5, 0x1, 0x0);
        gbc.writeMem(0xb539, { 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9e8f, gbc.sp());
        EXPECT(0xb53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb539));
        // 4B 0289
        gbc.setState(0xfb0, 0x73d3, 0xe570, 0x1f74, 0x5f4f, 0x4df5, 0x0, 0x0);
        gbc.writeMem(0xfb0, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x73d3, gbc.sp());
        EXPECT(0xfb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 028A
        gbc.setState(0x9727, 0x7888, 0xda40, 0x8654, 0x468c, 0xe11e, 0x1, 0x0);
        gbc.writeMem(0x9727, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x7888, gbc.sp());
        EXPECT(0x9728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9727));
        // 4B 028B
        gbc.setState(0x97dd, 0xf08c, 0xa8b0, 0x26d9, 0x7c8c, 0xb81e, 0x0, 0x0);
        gbc.writeMem(0x97dd, { 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf08c, gbc.sp());
        EXPECT(0x97de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x97dd));
        // 4B 028C
        gbc.setState(0x91ec, 0xe71f, 0x5f60, 0xe8bf, 0x1902, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0x91ec, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe71f, gbc.sp());
        EXPECT(0x91ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x91ec));
        // 4B 028D
        gbc.setState(0x2a18, 0x7100, 0x3ff0, 0x101e, 0x75d7, 0xd3f2, 0x0, 0x1);
        gbc.writeMem(0x2a18, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x2a19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 028E
        gbc.setState(0x99d7, 0x8363, 0xa320, 0x5ea9, 0x1677, 0x4e36, 0x0, 0x1);
        gbc.writeMem(0x99d7, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8363, gbc.sp());
        EXPECT(0x99d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99d7));
        // 4B 028F
        gbc.setState(0xf35, 0x577a, 0xebf0, 0x7616, 0x1307, 0xe887, 0x1, 0x1);
        gbc.writeMem(0xf35, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x577a, gbc.sp());
        EXPECT(0xf36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0290
        gbc.setState(0x15dc, 0xd019, 0xb4d0, 0xe7a9, 0xf5c8, 0x8ad0, 0x1, 0x0);
        gbc.writeMem(0x15dc, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0x15dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0291
        gbc.setState(0x52b2, 0x39be, 0xd130, 0xbfc8, 0xad8d, 0x7807, 0x1, 0x0);
        gbc.writeMem(0x52b2, { 0x4b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x39be, gbc.sp());
        EXPECT(0x52b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0293
        gbc.setState(0xc8ef, 0xb9ae, 0x38a0, 0x7201, 0xacd5, 0x939, 0x0, 0x0);
        gbc.writeMem(0xc8ef, { 0x4b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb9ae, gbc.sp());
        EXPECT(0xc8f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc8ef));
        // 4B 0294
        gbc.setState(0xd50f, 0x2d9c, 0xe020, 0xe4af, 0x44c7, 0x7357, 0x0, 0x0);
        gbc.writeMem(0xd50f, { 0x4b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x2d9c, gbc.sp());
        EXPECT(0xd510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd50f));
        // 4B 0295
        gbc.setState(0x56ee, 0x7512, 0xf3e0, 0x8c98, 0x2621, 0x7c33, 0x0, 0x0);
        gbc.writeMem(0x56ee, { 0x4b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7512, gbc.sp());
        EXPECT(0x56ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0296
        gbc.setState(0x5d13, 0x3b18, 0x1750, 0xc181, 0xa800, 0xc1d7, 0x0, 0x0);
        gbc.writeMem(0x5d13, { 0x4b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3b18, gbc.sp());
        EXPECT(0x5d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0297
        gbc.setState(0xdb03, 0x1fd5, 0x3740, 0x54f4, 0x1229, 0xbd0c, 0x0, 0x0);
        gbc.writeMem(0xdb03, { 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1fd5, gbc.sp());
        EXPECT(0xdb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdb03));
        // 4B 0299
        gbc.setState(0xdc0c, 0x65f2, 0x5db0, 0x8cce, 0x2851, 0x7a1c, 0x1, 0x0);
        gbc.writeMem(0xdc0c, { 0x4b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0xdc0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdc0c));
        // 4B 029A
        gbc.setState(0x1246, 0xefe1, 0xd220, 0x6183, 0x8396, 0x8b2f, 0x0, 0x0);
        gbc.writeMem(0x1246, { 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xefe1, gbc.sp());
        EXPECT(0x1247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 029B
        gbc.setState(0x89a9, 0xb3c2, 0x9e40, 0x64c9, 0x2436, 0xd4a9, 0x0, 0x0);
        gbc.writeMem(0x89a9, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb3c2, gbc.sp());
        EXPECT(0x89aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x89a9));
        // 4B 029C
        gbc.setState(0x5a33, 0xc3ba, 0x9960, 0x52da, 0xb994, 0xb0f5, 0x1, 0x1);
        gbc.writeMem(0x5a33, { 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0x5a34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 029D
        gbc.setState(0xa427, 0x5e89, 0x6430, 0x8600, 0x53f9, 0xe221, 0x1, 0x0);
        gbc.writeMem(0xa427, { 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5e89, gbc.sp());
        EXPECT(0xa428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa427));
        // 4B 029E
        gbc.setState(0xee5a, 0xde8d, 0x6230, 0x15b0, 0xce33, 0x8dbf, 0x1, 0x0);
        gbc.writeMem(0xee5a, { 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xde8d, gbc.sp());
        EXPECT(0xee5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xee5a));
        // 4B 029F
        gbc.setState(0x3551, 0x60bc, 0xddd0, 0x3601, 0x4de7, 0x3d8e, 0x1, 0x1);
        gbc.writeMem(0x3551, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x60bc, gbc.sp());
        EXPECT(0x3552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02A0
        gbc.setState(0x1fae, 0x2901, 0x49b0, 0x6c28, 0x6647, 0x9732, 0x0, 0x1);
        gbc.writeMem(0x1fae, { 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2901, gbc.sp());
        EXPECT(0x1faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02A1
        gbc.setState(0x5da0, 0x7b5a, 0x7770, 0x92af, 0xc5c5, 0x5b8, 0x1, 0x0);
        gbc.writeMem(0x5da0, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0x5da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02A2
        gbc.setState(0x1ab2, 0xcfb, 0xc7a0, 0x991, 0x5178, 0x27ba, 0x1, 0x1);
        gbc.writeMem(0x1ab2, { 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcfb, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02A3
        gbc.setState(0xd5d7, 0x9fdb, 0x10e0, 0xf0aa, 0x8a0d, 0x2586, 0x0, 0x1);
        gbc.writeMem(0xd5d7, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9fdb, gbc.sp());
        EXPECT(0xd5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd5d7));
        // 4B 02A4
        gbc.setState(0xd73d, 0xafea, 0x6390, 0xdc9d, 0xf186, 0xb4d3, 0x0, 0x1);
        gbc.writeMem(0xd73d, { 0x4b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xafea, gbc.sp());
        EXPECT(0xd73e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd73d));
        // 4B 02A5
        gbc.setState(0xe209, 0x6e90, 0xcff0, 0x94c7, 0x1f3c, 0x91cc, 0x0, 0x0);
        gbc.writeMem(0xe209, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6e90, gbc.sp());
        EXPECT(0xe20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe209));
        // 4B 02A6
        gbc.setState(0x8265, 0xd41a, 0x6b70, 0x4595, 0x6558, 0x6056, 0x0, 0x0);
        gbc.writeMem(0x8265, { 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd41a, gbc.sp());
        EXPECT(0x8266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8265));
        // 4B 02A8
        gbc.setState(0x193f, 0x2dd0, 0x3bc0, 0x57e5, 0xa92a, 0xcbe1, 0x0, 0x0);
        gbc.writeMem(0x193f, { 0x4b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0x1940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02A9
        gbc.setState(0x7c7c, 0x1f64, 0x85a0, 0xdb74, 0xa6d4, 0xbe96, 0x1, 0x1);
        gbc.writeMem(0x7c7c, { 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1f64, gbc.sp());
        EXPECT(0x7c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02AA
        gbc.setState(0x953e, 0x5a7d, 0xc610, 0x9279, 0x3c8a, 0x3f27, 0x0, 0x1);
        gbc.writeMem(0x953e, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5a7d, gbc.sp());
        EXPECT(0x953f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x953e));
        // 4B 02AB
        gbc.setState(0xcd3f, 0xe75f, 0xddd0, 0xc4be, 0xed2b, 0x8da, 0x1, 0x1);
        gbc.writeMem(0xcd3f, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xe75f, gbc.sp());
        EXPECT(0xcd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcd3f));
        // 4B 02AC
        gbc.setState(0xed1e, 0x651b, 0x5050, 0xdcaa, 0x12ce, 0xf1e, 0x1, 0x1);
        gbc.writeMem(0xed1e, { 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0xed1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xed1e));
        // 4B 02AD
        gbc.setState(0x843b, 0x941f, 0x3420, 0xd7b9, 0xbe6, 0x323e, 0x0, 0x1);
        gbc.writeMem(0x843b, { 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x941f, gbc.sp());
        EXPECT(0x843c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x843b));
        // 4B 02AE
        gbc.setState(0x71b4, 0x3f2a, 0x9520, 0xa71d, 0x8ac4, 0x41dd, 0x1, 0x0);
        gbc.writeMem(0x71b4, { 0x4b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3f2a, gbc.sp());
        EXPECT(0x71b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02AF
        gbc.setState(0xd298, 0xb72e, 0x9a10, 0x59eb, 0x2689, 0xae53, 0x1, 0x1);
        gbc.writeMem(0xd298, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb72e, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd298));
        // 4B 02B0
        gbc.setState(0x9705, 0x8ee4, 0x47f0, 0xc133, 0x423a, 0x7eb1, 0x1, 0x1);
        gbc.writeMem(0x9705, { 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8ee4, gbc.sp());
        EXPECT(0x9706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9705));
        // 4B 02B1
        gbc.setState(0x7f98, 0xf524, 0xa500, 0xdd60, 0x918e, 0x8cd2, 0x1, 0x0);
        gbc.writeMem(0x7f98, { 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf524, gbc.sp());
        EXPECT(0x7f99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02B2
        gbc.setState(0x52d0, 0xd488, 0x1870, 0x7b9, 0xa116, 0x8654, 0x0, 0x1);
        gbc.writeMem(0x52d0, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd488, gbc.sp());
        EXPECT(0x52d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02B3
        gbc.setState(0xde91, 0xec11, 0xbfe0, 0x92bb, 0x179d, 0x1caf, 0x0, 0x1);
        gbc.writeMem(0xde91, { 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0xde92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xde91));
        // 4B 02B5
        gbc.setState(0xe7a0, 0x217a, 0x1260, 0x87ba, 0x3eff, 0x19f0, 0x1, 0x1);
        gbc.writeMem(0xe7a0, { 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x217a, gbc.sp());
        EXPECT(0xe7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe7a0));
        // 4B 02B6
        gbc.setState(0x88bb, 0x8e10, 0xc070, 0x5c8f, 0xffa8, 0xbb5a, 0x0, 0x0);
        gbc.writeMem(0x88bb, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8e10, gbc.sp());
        EXPECT(0x88bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x88bb));
        // 4B 02B7
        gbc.setState(0x7fff, 0x9827, 0x41f0, 0x5a86, 0x87e2, 0xc63d, 0x0, 0x0);
        gbc.writeMem(0x7fff, { 0x4b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9827, gbc.sp());
        EXPECT(0x8000, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02B8
        gbc.setState(0x755b, 0xdad0, 0xa810, 0xba41, 0xf545, 0x5ab8, 0x1, 0x1);
        gbc.writeMem(0x755b, { 0x4b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xdad0, gbc.sp());
        EXPECT(0x755c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02BA
        gbc.setState(0x2391, 0xb648, 0xacc0, 0x971b, 0x423f, 0x46b3, 0x0, 0x1);
        gbc.writeMem(0x2391, { 0x4b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb648, gbc.sp());
        EXPECT(0x2392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02BB
        gbc.setState(0xb169, 0xa04e, 0x4c70, 0xe999, 0x3fd0, 0x8129, 0x0, 0x0);
        gbc.writeMem(0xb169, { 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa04e, gbc.sp());
        EXPECT(0xb16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb169));
        // 4B 02BC
        gbc.setState(0x1179, 0x11c2, 0xa5f0, 0x54e5, 0x8ead, 0x729b, 0x1, 0x0);
        gbc.writeMem(0x1179, { 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x11c2, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02BD
        gbc.setState(0x8470, 0xf067, 0xf410, 0xcac0, 0x83b5, 0x8f55, 0x0, 0x1);
        gbc.writeMem(0x8470, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf067, gbc.sp());
        EXPECT(0x8471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8470));
        // 4B 02BE
        gbc.setState(0xb002, 0x7a05, 0xec20, 0x17a5, 0xe2c7, 0xb1c6, 0x0, 0x1);
        gbc.writeMem(0xb002, { 0x4b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7a05, gbc.sp());
        EXPECT(0xb003, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb002));
        // 4B 02BF
        gbc.setState(0x6ce8, 0x7c3c, 0xb800, 0x5f32, 0x9519, 0x680a, 0x1, 0x0);
        gbc.writeMem(0x6ce8, { 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7c3c, gbc.sp());
        EXPECT(0x6ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02C0
        gbc.setState(0x5ca, 0xcc19, 0x9170, 0xa08d, 0xcb24, 0xa1a8, 0x1, 0x0);
        gbc.writeMem(0x5ca, { 0x4b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xcc19, gbc.sp());
        EXPECT(0x5cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02C1
        gbc.setState(0xe048, 0xe88e, 0x29a0, 0x1dfe, 0xfc47, 0xbbb, 0x1, 0x1);
        gbc.writeMem(0xe048, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe88e, gbc.sp());
        EXPECT(0xe049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe048));
        // 4B 02C2
        gbc.setState(0x846d, 0xe941, 0x190, 0x3647, 0xda9d, 0x8857, 0x0, 0x1);
        gbc.writeMem(0x846d, { 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0x846e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x846d));
        // 4B 02C3
        gbc.setState(0x7c07, 0xe8a6, 0xf850, 0x59fa, 0xdb56, 0x85f5, 0x1, 0x1);
        gbc.writeMem(0x7c07, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xe8a6, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02C4
        gbc.setState(0xddd4, 0x5817, 0x8f60, 0x1a85, 0x2f38, 0x8ed, 0x1, 0x1);
        gbc.writeMem(0xddd4, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5817, gbc.sp());
        EXPECT(0xddd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xddd4));
        // 4B 02C5
        gbc.setState(0xc022, 0x1cd8, 0x9880, 0xe4f0, 0x9fc7, 0x110e, 0x0, 0x0);
        gbc.writeMem(0xc022, { 0x4b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1cd8, gbc.sp());
        EXPECT(0xc023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc022));
        // 4B 02C6
        gbc.setState(0x7513, 0x5f02, 0xb8a0, 0xc3a0, 0xf5f5, 0xa9de, 0x1, 0x0);
        gbc.writeMem(0x7513, { 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5f02, gbc.sp());
        EXPECT(0x7514, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02C7
        gbc.setState(0x42fc, 0x4619, 0xfe40, 0x1630, 0x35aa, 0x5592, 0x0, 0x0);
        gbc.writeMem(0x42fc, { 0x4b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4619, gbc.sp());
        EXPECT(0x42fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02C8
        gbc.setState(0x6c33, 0xfb5d, 0xc1c0, 0xa532, 0x797c, 0xcc10, 0x0, 0x0);
        gbc.writeMem(0x6c33, { 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfb5d, gbc.sp());
        EXPECT(0x6c34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02C9
        gbc.setState(0x916c, 0x88dc, 0xcf70, 0xa273, 0xb663, 0x8491, 0x0, 0x1);
        gbc.writeMem(0x916c, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x88dc, gbc.sp());
        EXPECT(0x916d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x916c));
        // 4B 02CA
        gbc.setState(0x90e5, 0x9318, 0x1650, 0xee43, 0xd9c4, 0xfb6b, 0x1, 0x0);
        gbc.writeMem(0x90e5, { 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9318, gbc.sp());
        EXPECT(0x90e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x90e5));
        // 4B 02CB
        gbc.setState(0x5b91, 0x2c84, 0xebf0, 0x176a, 0x50b7, 0x8a7c, 0x1, 0x1);
        gbc.writeMem(0x5b91, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2c84, gbc.sp());
        EXPECT(0x5b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02CC
        gbc.setState(0xafad, 0x6139, 0x3aa0, 0x9532, 0x6cce, 0x6018, 0x0, 0x1);
        gbc.writeMem(0xafad, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6139, gbc.sp());
        EXPECT(0xafae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xafad));
        // 4B 02CD
        gbc.setState(0x68b8, 0xc0ad, 0x77a0, 0xaa5e, 0xeff3, 0xc1ad, 0x1, 0x0);
        gbc.writeMem(0x68b8, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc0ad, gbc.sp());
        EXPECT(0x68b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02CE
        gbc.setState(0x1a88, 0x6131, 0xd980, 0x514, 0x1ae3, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0x1a88, { 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6131, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02CF
        gbc.setState(0xcb12, 0x27fc, 0x2fa0, 0xd719, 0x451e, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0xcb12, { 0x4b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xcb13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb12));
        // 4B 02D0
        gbc.setState(0x8585, 0xd4d1, 0x97f0, 0x9ab8, 0xa1ab, 0xa430, 0x1, 0x0);
        gbc.writeMem(0x8585, { 0x4b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd4d1, gbc.sp());
        EXPECT(0x8586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8585));
        // 4B 02D1
        gbc.setState(0x573, 0x468d, 0x3790, 0x1d52, 0x8f58, 0xa373, 0x1, 0x0);
        gbc.writeMem(0x573, { 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x468d, gbc.sp());
        EXPECT(0x574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02D2
        gbc.setState(0x9c78, 0x1f7a, 0x47b0, 0xc6f6, 0x13a0, 0xb860, 0x1, 0x1);
        gbc.writeMem(0x9c78, { 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1f7a, gbc.sp());
        EXPECT(0x9c79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9c78));
        // 4B 02D3
        gbc.setState(0x7059, 0xfbf0, 0x56b0, 0xbba, 0xbe19, 0xeb65, 0x0, 0x1);
        gbc.writeMem(0x7059, { 0x4b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfbf0, gbc.sp());
        EXPECT(0x705a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02D4
        gbc.setState(0xa01, 0x52ef, 0xd330, 0x8c6e, 0x107a, 0x327c, 0x0, 0x1);
        gbc.writeMem(0xa01, { 0x4b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x52ef, gbc.sp());
        EXPECT(0xa02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02D5
        gbc.setState(0x6361, 0x5c6d, 0x6490, 0x196a, 0xe06d, 0xc747, 0x0, 0x1);
        gbc.writeMem(0x6361, { 0x4b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x5c6d, gbc.sp());
        EXPECT(0x6362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02D6
        gbc.setState(0x94a4, 0xb91d, 0xe3b0, 0x8d2, 0xf7f1, 0xf348, 0x0, 0x1);
        gbc.writeMem(0x94a4, { 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb91d, gbc.sp());
        EXPECT(0x94a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x94a4));
        // 4B 02D7
        gbc.setState(0xb851, 0x2947, 0x96b0, 0xc386, 0xf65e, 0xe135, 0x0, 0x1);
        gbc.writeMem(0xb851, { 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2947, gbc.sp());
        EXPECT(0xb852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb851));
        // 4B 02D8
        gbc.setState(0x62aa, 0x1c14, 0x5a00, 0x811a, 0x4e14, 0x47a5, 0x1, 0x0);
        gbc.writeMem(0x62aa, { 0x4b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1c14, gbc.sp());
        EXPECT(0x62ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02D9
        gbc.setState(0x8472, 0x60, 0x9220, 0x1c74, 0xbd0a, 0x42, 0x1, 0x0);
        gbc.writeMem(0x8472, { 0x4b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x60, gbc.sp());
        EXPECT(0x8473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8472));
        // 4B 02DA
        gbc.setState(0x7f96, 0xe2c1, 0x8740, 0x8f56, 0x9f0b, 0xa457, 0x1, 0x0);
        gbc.writeMem(0x7f96, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe2c1, gbc.sp());
        EXPECT(0x7f97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02DB
        gbc.setState(0x548f, 0xb678, 0x8750, 0x4a3d, 0x170c, 0xe452, 0x1, 0x1);
        gbc.writeMem(0x548f, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x5490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02DC
        gbc.setState(0xcd12, 0x333, 0xb690, 0xf39, 0x63c0, 0x9024, 0x0, 0x0);
        gbc.writeMem(0xcd12, { 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x333, gbc.sp());
        EXPECT(0xcd13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcd12));
        // 4B 02DD
        gbc.setState(0x1b7d, 0x841, 0x8420, 0xebb6, 0xba79, 0x8450, 0x1, 0x1);
        gbc.writeMem(0x1b7d, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x841, gbc.sp());
        EXPECT(0x1b7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02DE
        gbc.setState(0xc426, 0x9e6e, 0x7a50, 0x22ff, 0xe0b5, 0xec48, 0x0, 0x0);
        gbc.writeMem(0xc426, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x9e6e, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc426));
        // 4B 02DF
        gbc.setState(0xcbe4, 0x3a8d, 0x8540, 0x7ef2, 0xb1d4, 0xea4f, 0x1, 0x0);
        gbc.writeMem(0xcbe4, { 0x4b });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3a8d, gbc.sp());
        EXPECT(0xcbe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcbe4));
        // 4B 02E0
        gbc.setState(0x1a03, 0x1b59, 0xa300, 0x42f5, 0x352a, 0x5859, 0x1, 0x1);
        gbc.writeMem(0x1a03, { 0x4b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1b59, gbc.sp());
        EXPECT(0x1a04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02E1
        gbc.setState(0x9bed, 0x4385, 0x3600, 0x4ecd, 0x4d40, 0xc804, 0x1, 0x1);
        gbc.writeMem(0x9bed, { 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4385, gbc.sp());
        EXPECT(0x9bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9bed));
        // 4B 02E2
        gbc.setState(0x3a68, 0x4516, 0x19b0, 0x18f6, 0x4d3f, 0x4cb2, 0x0, 0x1);
        gbc.writeMem(0x3a68, { 0x4b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x4516, gbc.sp());
        EXPECT(0x3a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02E3
        gbc.setState(0x545a, 0x55e8, 0xda10, 0x79b2, 0x1473, 0x4b3d, 0x1, 0x0);
        gbc.writeMem(0x545a, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x55e8, gbc.sp());
        EXPECT(0x545b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02E4
        gbc.setState(0x1625, 0x87cb, 0xccf0, 0x53f9, 0x7f0b, 0x51ac, 0x1, 0x0);
        gbc.writeMem(0x1625, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x87cb, gbc.sp());
        EXPECT(0x1626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02E6
        gbc.setState(0x2f7d, 0xe09d, 0x30e0, 0x8fb6, 0xf68f, 0xd285, 0x0, 0x1);
        gbc.writeMem(0x2f7d, { 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe09d, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02E7
        gbc.setState(0x84d3, 0xe01f, 0x7200, 0x569c, 0xcdc8, 0xab16, 0x1, 0x0);
        gbc.writeMem(0x84d3, { 0x4b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe01f, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x84d3));
        // 4B 02E8
        gbc.setState(0x8eb5, 0xe4e8, 0xf50, 0x36b5, 0x11dc, 0xb85a, 0x1, 0x1);
        gbc.writeMem(0x8eb5, { 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0x8eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8eb5));
        // 4B 02E9
        gbc.setState(0x7982, 0xf00f, 0x7ed0, 0x4955, 0x8b45, 0x3987, 0x0, 0x0);
        gbc.writeMem(0x7982, { 0x4b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf00f, gbc.sp());
        EXPECT(0x7983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02EA
        gbc.setState(0xadb9, 0xaa5, 0xf6e0, 0x7ebe, 0xd6e2, 0x45c0, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0x4b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaa5, gbc.sp());
        EXPECT(0xadba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xadb9));
        // 4B 02EB
        gbc.setState(0xd511, 0x2f00, 0x77a0, 0x5a13, 0x45d8, 0x89fd, 0x1, 0x0);
        gbc.writeMem(0xd511, { 0x4b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0xd512, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd511));
        // 4B 02EC
        gbc.setState(0x1122, 0x3cf, 0xf7f0, 0xb10b, 0xa66a, 0xb645, 0x0, 0x0);
        gbc.writeMem(0x1122, { 0x4b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3cf, gbc.sp());
        EXPECT(0x1123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02ED
        gbc.setState(0x5c7, 0x8d41, 0x28f0, 0xe7b7, 0xb617, 0x9cfb, 0x0, 0x1);
        gbc.writeMem(0x5c7, { 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x8d41, gbc.sp());
        EXPECT(0x5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02EE
        gbc.setState(0xb26e, 0x44e5, 0xcec0, 0x6b6c, 0xce68, 0x18de, 0x1, 0x1);
        gbc.writeMem(0xb26e, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x44e5, gbc.sp());
        EXPECT(0xb26f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb26e));
        // 4B 02EF
        gbc.setState(0xbb3b, 0xd52c, 0xda00, 0xf8cf, 0x3b69, 0x3205, 0x1, 0x1);
        gbc.writeMem(0xbb3b, { 0x4b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd52c, gbc.sp());
        EXPECT(0xbb3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbb3b));
        // 4B 02F0
        gbc.setState(0xb220, 0x8a7c, 0xd810, 0xba69, 0x2f01, 0x8fda, 0x1, 0x1);
        gbc.writeMem(0xb220, { 0x4b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8a7c, gbc.sp());
        EXPECT(0xb221, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb220));
        // 4B 02F2
        gbc.setState(0xa3a, 0xe5ff, 0x6270, 0x144f, 0x7ba6, 0x6603, 0x1, 0x1);
        gbc.writeMem(0xa3a, { 0x4b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe5ff, gbc.sp());
        EXPECT(0xa3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02F3
        gbc.setState(0xebe8, 0x5b03, 0xf4d0, 0xec6, 0xd6c2, 0x5566, 0x0, 0x1);
        gbc.writeMem(0xebe8, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0xebe9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xebe8));
        // 4B 02F4
        gbc.setState(0xef65, 0xa5f2, 0xe960, 0xdd18, 0x6e96, 0x8eef, 0x1, 0x0);
        gbc.writeMem(0xef65, { 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa5f2, gbc.sp());
        EXPECT(0xef66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xef65));
        // 4B 02F5
        gbc.setState(0xdc4a, 0x3c86, 0xfad0, 0x808b, 0x5270, 0x8c20, 0x1, 0x0);
        gbc.writeMem(0xdc4a, { 0x4b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3c86, gbc.sp());
        EXPECT(0xdc4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdc4a));
        // 4B 02F6
        gbc.setState(0x6e7d, 0x2de7, 0xb290, 0xb641, 0xf2a5, 0x8afa, 0x1, 0x0);
        gbc.writeMem(0x6e7d, { 0x4b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2de7, gbc.sp());
        EXPECT(0x6e7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02F7
        gbc.setState(0xce39, 0x4793, 0xfd20, 0x4f1d, 0x4911, 0xc51b, 0x1, 0x1);
        gbc.writeMem(0xce39, { 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4793, gbc.sp());
        EXPECT(0xce3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xce39));
        // 4B 02F8
        gbc.setState(0xcb58, 0x49bd, 0x2540, 0x22ff, 0xc637, 0x366c, 0x1, 0x0);
        gbc.writeMem(0xcb58, { 0x4b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x49bd, gbc.sp());
        EXPECT(0xcb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb58));
        // 4B 02F9
        gbc.setState(0x3118, 0xda91, 0x100, 0xde11, 0x8d70, 0x19ef, 0x1, 0x1);
        gbc.writeMem(0x3118, { 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xda91, gbc.sp());
        EXPECT(0x3119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02FB
        gbc.setState(0x10bb, 0xb77e, 0xf420, 0xdc41, 0xe052, 0xef93, 0x0, 0x0);
        gbc.writeMem(0x10bb, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb77e, gbc.sp());
        EXPECT(0x10bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02FC
        gbc.setState(0xdd3, 0x7b5d, 0x7620, 0x5929, 0xbd81, 0xa6f3, 0x1, 0x0);
        gbc.writeMem(0xdd3, { 0x4b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7b5d, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 02FD
        gbc.setState(0x62ea, 0xb2c5, 0x8250, 0xa25c, 0x3431, 0x89d4, 0x1, 0x0);
        gbc.writeMem(0x62ea, { 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb2c5, gbc.sp());
        EXPECT(0x62eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 02FE
        gbc.setState(0xd215, 0xe30e, 0x6120, 0xf12f, 0xbc30, 0x536d, 0x1, 0x0);
        gbc.writeMem(0xd215, { 0x4b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe30e, gbc.sp());
        EXPECT(0xd216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd215));
        // 4B 02FF
        gbc.setState(0xbdd0, 0x8fba, 0x36f0, 0xc970, 0x56b8, 0x5a2b, 0x0, 0x1);
        gbc.writeMem(0xbdd0, { 0x4b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbdd0));
        // 4B 0300
        gbc.setState(0x497e, 0xda4f, 0xff50, 0x232a, 0xda79, 0x2986, 0x1, 0x1);
        gbc.writeMem(0x497e, { 0x4b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xda4f, gbc.sp());
        EXPECT(0x497f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0301
        gbc.setState(0xac12, 0x23b, 0x3f60, 0x50e7, 0x3f08, 0x2a76, 0x0, 0x1);
        gbc.writeMem(0xac12, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x23b, gbc.sp());
        EXPECT(0xac13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xac12));
        // 4B 0302
        gbc.setState(0x5a4d, 0xfa6a, 0x26a0, 0xb716, 0x12c, 0xc65f, 0x0, 0x1);
        gbc.writeMem(0x5a4d, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfa6a, gbc.sp());
        EXPECT(0x5a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0303
        gbc.setState(0xef63, 0x45cf, 0xb9f0, 0x13c0, 0x614f, 0xe16b, 0x0, 0x1);
        gbc.writeMem(0xef63, { 0x4b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x45cf, gbc.sp());
        EXPECT(0xef64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xef63));
        // 4B 0304
        gbc.setState(0x27de, 0x52da, 0xdd80, 0xf148, 0x9aff, 0xf68f, 0x1, 0x0);
        gbc.writeMem(0x27de, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x52da, gbc.sp());
        EXPECT(0x27df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0305
        gbc.setState(0x610d, 0x440, 0x1840, 0xe48b, 0x83b3, 0xb9d6, 0x1, 0x1);
        gbc.writeMem(0x610d, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x440, gbc.sp());
        EXPECT(0x610e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0306
        gbc.setState(0xccc, 0xdc21, 0x2c70, 0x8747, 0xd72e, 0xaea0, 0x0, 0x1);
        gbc.writeMem(0xccc, { 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdc21, gbc.sp());
        EXPECT(0xccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0307
        gbc.setState(0x25bd, 0x801d, 0xc010, 0x2e4d, 0xdc5e, 0x7684, 0x1, 0x1);
        gbc.writeMem(0x25bd, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x801d, gbc.sp());
        EXPECT(0x25be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0308
        gbc.setState(0x54b1, 0x4ea9, 0xba20, 0xde4e, 0x6bda, 0xb10b, 0x0, 0x1);
        gbc.writeMem(0x54b1, { 0x4b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4ea9, gbc.sp());
        EXPECT(0x54b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0309
        gbc.setState(0x1fa7, 0x745b, 0x670, 0xeacc, 0x75aa, 0xebf, 0x1, 0x1);
        gbc.writeMem(0x1fa7, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x745b, gbc.sp());
        EXPECT(0x1fa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 030A
        gbc.setState(0xbfef, 0xf86c, 0xc9f0, 0xe2e3, 0x1097, 0xbeec, 0x1, 0x0);
        gbc.writeMem(0xbfef, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf86c, gbc.sp());
        EXPECT(0xbff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbfef));
        // 4B 030B
        gbc.setState(0x324, 0x21fb, 0xccf0, 0x7b43, 0xe81b, 0xa3e0, 0x1, 0x0);
        gbc.writeMem(0x324, { 0x4b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x21fb, gbc.sp());
        EXPECT(0x325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 030C
        gbc.setState(0xbe15, 0xcf8d, 0x260, 0xa341, 0xc1e1, 0xd14c, 0x1, 0x1);
        gbc.writeMem(0xbe15, { 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xcf8d, gbc.sp());
        EXPECT(0xbe16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbe15));
        // 4B 030D
        gbc.setState(0x17e2, 0x31c7, 0xb060, 0xba9, 0x3912, 0x4827, 0x0, 0x1);
        gbc.writeMem(0x17e2, { 0x4b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x31c7, gbc.sp());
        EXPECT(0x17e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 030E
        gbc.setState(0x32f1, 0x8b97, 0xf950, 0xd27b, 0x9412, 0xd086, 0x0, 0x1);
        gbc.writeMem(0x32f1, { 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8b97, gbc.sp());
        EXPECT(0x32f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 030F
        gbc.setState(0x2a0d, 0x225b, 0x8730, 0x56a3, 0x87c1, 0x13d9, 0x1, 0x0);
        gbc.writeMem(0x2a0d, { 0x4b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x225b, gbc.sp());
        EXPECT(0x2a0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0310
        gbc.setState(0xd2ae, 0x1800, 0xc9f0, 0x642, 0xbf07, 0x3bb1, 0x0, 0x1);
        gbc.writeMem(0xd2ae, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1800, gbc.sp());
        EXPECT(0xd2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd2ae));
        // 4B 0311
        gbc.setState(0x65f5, 0xdbf5, 0x280, 0x47b1, 0x9cfd, 0xe383, 0x1, 0x1);
        gbc.writeMem(0x65f5, { 0x4b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdbf5, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0312
        gbc.setState(0xc320, 0x337d, 0x8f10, 0xce7, 0x2535, 0x8fa5, 0x1, 0x1);
        gbc.writeMem(0xc320, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x337d, gbc.sp());
        EXPECT(0xc321, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc320));
        // 4B 0313
        gbc.setState(0x964b, 0x427d, 0xae20, 0xde04, 0x6901, 0x4947, 0x1, 0x1);
        gbc.writeMem(0x964b, { 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x427d, gbc.sp());
        EXPECT(0x964c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x964b));
        // 4B 0314
        gbc.setState(0x9265, 0xe7ed, 0xa180, 0x3eda, 0x2a6b, 0x2eab, 0x1, 0x1);
        gbc.writeMem(0x9265, { 0x4b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe7ed, gbc.sp());
        EXPECT(0x9266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9265));
        // 4B 0315
        gbc.setState(0x9acc, 0x89b7, 0xbb90, 0xb1c0, 0x883b, 0x9b31, 0x0, 0x0);
        gbc.writeMem(0x9acc, { 0x4b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x89b7, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9acc));
        // 4B 0316
        gbc.setState(0x182d, 0xcfdb, 0x6b40, 0x813f, 0x36de, 0x7027, 0x1, 0x0);
        gbc.writeMem(0x182d, { 0x4b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcfdb, gbc.sp());
        EXPECT(0x182e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0317
        gbc.setState(0x16ba, 0x356a, 0xd9a0, 0x4b46, 0x5fc2, 0xde6b, 0x1, 0x1);
        gbc.writeMem(0x16ba, { 0x4b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x356a, gbc.sp());
        EXPECT(0x16bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0318
        gbc.setState(0x3e99, 0xbae9, 0x2830, 0x3efc, 0xb382, 0xb072, 0x1, 0x0);
        gbc.writeMem(0x3e99, { 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xbae9, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0319
        gbc.setState(0x91bc, 0xfc4b, 0xc1a0, 0x458b, 0x7bb4, 0x468d, 0x1, 0x0);
        gbc.writeMem(0x91bc, { 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfc4b, gbc.sp());
        EXPECT(0x91bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x91bc));
        // 4B 031A
        gbc.setState(0x62bd, 0x28de, 0x1680, 0x241c, 0xbcc3, 0x6c59, 0x1, 0x1);
        gbc.writeMem(0x62bd, { 0x4b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x62be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 031B
        gbc.setState(0xb63, 0xe222, 0x5ba0, 0x32fc, 0xb3a2, 0x9db6, 0x1, 0x1);
        gbc.writeMem(0xb63, { 0x4b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe222, gbc.sp());
        EXPECT(0xb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 031C
        gbc.setState(0xa0e1, 0xf5cd, 0xb180, 0xd1b, 0x6cab, 0x29c, 0x1, 0x1);
        gbc.writeMem(0xa0e1, { 0x4b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf5cd, gbc.sp());
        EXPECT(0xa0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa0e1));
        // 4B 031D
        gbc.setState(0x5204, 0xcaa0, 0x4b60, 0xd296, 0xfb3c, 0xad95, 0x1, 0x0);
        gbc.writeMem(0x5204, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xcaa0, gbc.sp());
        EXPECT(0x5205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 031E
        gbc.setState(0x8c8f, 0x2fc2, 0x9070, 0x2c94, 0x6e5c, 0x52e0, 0x1, 0x1);
        gbc.writeMem(0x8c8f, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x2fc2, gbc.sp());
        EXPECT(0x8c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8c8f));
        // 4B 031F
        gbc.setState(0xd175, 0x42ed, 0x7b50, 0xc330, 0xbc7f, 0xb520, 0x1, 0x0);
        gbc.writeMem(0xd175, { 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x42ed, gbc.sp());
        EXPECT(0xd176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd175));
        // 4B 0320
        gbc.setState(0x44c7, 0xed7b, 0x7810, 0xffe, 0xdc96, 0x957f, 0x0, 0x1);
        gbc.writeMem(0x44c7, { 0x4b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0321
        gbc.setState(0x1de8, 0x6943, 0x8f20, 0x7c7c, 0xb00f, 0x9127, 0x0, 0x0);
        gbc.writeMem(0x1de8, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6943, gbc.sp());
        EXPECT(0x1de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0322
        gbc.setState(0xe599, 0x7125, 0x6500, 0x14be, 0x7c35, 0x5c3b, 0x0, 0x1);
        gbc.writeMem(0xe599, { 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0xe59a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe599));
        // 4B 0323
        gbc.setState(0x990b, 0xc517, 0x4fc0, 0x5308, 0x1ba7, 0xf784, 0x1, 0x0);
        gbc.writeMem(0x990b, { 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc517, gbc.sp());
        EXPECT(0x990c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x990b));
        // 4B 0324
        gbc.setState(0xef43, 0xc2e7, 0xbf20, 0xdb29, 0x85eb, 0x5768, 0x0, 0x1);
        gbc.writeMem(0xef43, { 0x4b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc2e7, gbc.sp());
        EXPECT(0xef44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xef43));
        // 4B 0325
        gbc.setState(0x2a5, 0x37fa, 0x9fa0, 0x86bd, 0xf526, 0x5967, 0x0, 0x0);
        gbc.writeMem(0x2a5, { 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x37fa, gbc.sp());
        EXPECT(0x2a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0326
        gbc.setState(0x6a88, 0xdcb2, 0xdb70, 0x498b, 0xd5e4, 0x7b3a, 0x0, 0x0);
        gbc.writeMem(0x6a88, { 0x4b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xdcb2, gbc.sp());
        EXPECT(0x6a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0327
        gbc.setState(0x15d, 0x3aa5, 0x2620, 0x5a83, 0xfbd6, 0x540e, 0x1, 0x0);
        gbc.writeMem(0x15d, { 0x4b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3aa5, gbc.sp());
        EXPECT(0x15e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0328
        gbc.setState(0xca29, 0x3477, 0x3e90, 0xfcc6, 0xc851, 0x8dd7, 0x0, 0x1);
        gbc.writeMem(0xca29, { 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0xca2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca29));
        // 4B 0329
        gbc.setState(0xe53f, 0x7b7a, 0xfa0, 0x460f, 0x30c9, 0x1071, 0x0, 0x0);
        gbc.writeMem(0xe53f, { 0x4b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7b7a, gbc.sp());
        EXPECT(0xe540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe53f));
        // 4B 032A
        gbc.setState(0x4751, 0x2cb4, 0xf920, 0xbee7, 0xe8d3, 0x89b6, 0x1, 0x0);
        gbc.writeMem(0x4751, { 0x4b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2cb4, gbc.sp());
        EXPECT(0x4752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 032B
        gbc.setState(0x2a49, 0x22af, 0xcfb0, 0x2c7b, 0xb109, 0xe75f, 0x1, 0x1);
        gbc.writeMem(0x2a49, { 0x4b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x22af, gbc.sp());
        EXPECT(0x2a4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 032C
        gbc.setState(0x2637, 0xc8b8, 0xde80, 0x80ae, 0x7d9f, 0x9438, 0x1, 0x0);
        gbc.writeMem(0x2637, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc8b8, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 032D
        gbc.setState(0x448d, 0x190e, 0x4aa0, 0x39d7, 0xb533, 0x67ac, 0x1, 0x1);
        gbc.writeMem(0x448d, { 0x4b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x190e, gbc.sp());
        EXPECT(0x448e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 032E
        gbc.setState(0x4fb5, 0x9dd2, 0x47f0, 0x39af, 0x591a, 0x1f77, 0x0, 0x0);
        gbc.writeMem(0x4fb5, { 0x4b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9dd2, gbc.sp());
        EXPECT(0x4fb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 032F
        gbc.setState(0x3233, 0xd424, 0x2b20, 0x8509, 0xfa5f, 0x117a, 0x0, 0x1);
        gbc.writeMem(0x3233, { 0x4b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd424, gbc.sp());
        EXPECT(0x3234, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0330
        gbc.setState(0x36b7, 0xcce5, 0x4f50, 0x609a, 0x4f1b, 0x1771, 0x1, 0x0);
        gbc.writeMem(0x36b7, { 0x4b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xcce5, gbc.sp());
        EXPECT(0x36b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0331
        gbc.setState(0x5fc1, 0x82d6, 0x4630, 0xe45d, 0x8684, 0x2988, 0x1, 0x1);
        gbc.writeMem(0x5fc1, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x82d6, gbc.sp());
        EXPECT(0x5fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0332
        gbc.setState(0xa583, 0x7b12, 0x4ca0, 0xba62, 0xcb9, 0x4e9d, 0x1, 0x0);
        gbc.writeMem(0xa583, { 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7b12, gbc.sp());
        EXPECT(0xa584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa583));
        // 4B 0333
        gbc.setState(0x1428, 0x6431, 0xd560, 0x60eb, 0xa7aa, 0x4aec, 0x1, 0x1);
        gbc.writeMem(0x1428, { 0x4b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6431, gbc.sp());
        EXPECT(0x1429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0334
        gbc.setState(0x57ad, 0x364a, 0xa570, 0xaecd, 0x3444, 0x935, 0x0, 0x0);
        gbc.writeMem(0x57ad, { 0x4b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x364a, gbc.sp());
        EXPECT(0x57ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0335
        gbc.setState(0x5ed0, 0x683e, 0x7ab0, 0xa8ad, 0xa2f, 0x7f2e, 0x1, 0x0);
        gbc.writeMem(0x5ed0, { 0x4b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x683e, gbc.sp());
        EXPECT(0x5ed1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0336
        gbc.setState(0xb1da, 0x8a0, 0x33d0, 0xbe12, 0x48b7, 0xb709, 0x0, 0x1);
        gbc.writeMem(0xb1da, { 0x4b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8a0, gbc.sp());
        EXPECT(0xb1db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb1da));
        // 4B 0337
        gbc.setState(0xd216, 0x3090, 0x5900, 0x7552, 0xc48f, 0x7bea, 0x1, 0x0);
        gbc.writeMem(0xd216, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3090, gbc.sp());
        EXPECT(0xd217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd216));
        // 4B 0338
        gbc.setState(0x6a1e, 0xbf43, 0x5870, 0x54d7, 0xccdc, 0x82b4, 0x0, 0x1);
        gbc.writeMem(0x6a1e, { 0x4b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbf43, gbc.sp());
        EXPECT(0x6a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0339
        gbc.setState(0x69d7, 0x9066, 0x4360, 0xe9c8, 0xa66f, 0x6727, 0x1, 0x0);
        gbc.writeMem(0x69d7, { 0x4b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0x69d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 033A
        gbc.setState(0xb28d, 0x2321, 0x2760, 0x9ad9, 0xa0e6, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0xb28d, { 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2321, gbc.sp());
        EXPECT(0xb28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb28d));
        // 4B 033B
        gbc.setState(0x8ced, 0x9286, 0x9a00, 0xb16d, 0x5f84, 0x3c7f, 0x0, 0x1);
        gbc.writeMem(0x8ced, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0x8cee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8ced));
        // 4B 033C
        gbc.setState(0x7f7, 0xa892, 0xc060, 0x9668, 0x4299, 0x158d, 0x1, 0x0);
        gbc.writeMem(0x7f7, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa892, gbc.sp());
        EXPECT(0x7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 033D
        gbc.setState(0xb323, 0x8c72, 0xc640, 0x13c2, 0xf8e1, 0x839e, 0x1, 0x0);
        gbc.writeMem(0xb323, { 0x4b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8c72, gbc.sp());
        EXPECT(0xb324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb323));
        // 4B 033E
        gbc.setState(0xf7f, 0x55f7, 0x8210, 0x6f73, 0x304, 0xa959, 0x1, 0x1);
        gbc.writeMem(0xf7f, { 0x4b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x55f7, gbc.sp());
        EXPECT(0xf80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 033F
        gbc.setState(0x6131, 0x7e0, 0x57a0, 0x45, 0x724f, 0x78f0, 0x0, 0x0);
        gbc.writeMem(0x6131, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x7e0, gbc.sp());
        EXPECT(0x6132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0340
        gbc.setState(0x5729, 0xd2b6, 0x20b0, 0x7ed6, 0xc18b, 0xfe62, 0x0, 0x0);
        gbc.writeMem(0x5729, { 0x4b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xd2b6, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0341
        gbc.setState(0x9a6, 0x6e51, 0xfb70, 0x4c72, 0x922c, 0x4acb, 0x1, 0x1);
        gbc.writeMem(0x9a6, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6e51, gbc.sp());
        EXPECT(0x9a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0343
        gbc.setState(0xda17, 0x87b5, 0x5fd0, 0x7b89, 0xaac2, 0x1af, 0x0, 0x1);
        gbc.writeMem(0xda17, { 0x4b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x87b5, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xda17));
        // 4B 0344
        gbc.setState(0xcf3e, 0xaf9b, 0xbc20, 0x76d4, 0x17ef, 0x9488, 0x0, 0x1);
        gbc.writeMem(0xcf3e, { 0x4b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xaf9b, gbc.sp());
        EXPECT(0xcf3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf3e));
        // 4B 0345
        gbc.setState(0x68ed, 0xdecf, 0x9ed0, 0xdf58, 0xef17, 0xda4c, 0x1, 0x0);
        gbc.writeMem(0x68ed, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdecf, gbc.sp());
        EXPECT(0x68ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0346
        gbc.setState(0xc2b5, 0x39aa, 0xef20, 0x7c17, 0x5b24, 0x4da0, 0x0, 0x1);
        gbc.writeMem(0xc2b5, { 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x39aa, gbc.sp());
        EXPECT(0xc2b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc2b5));
        // 4B 0347
        gbc.setState(0xe157, 0xf0bb, 0x5200, 0x956b, 0xd9fe, 0xffbe, 0x1, 0x0);
        gbc.writeMem(0xe157, { 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf0bb, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe157));
        // 4B 0348
        gbc.setState(0x7474, 0x8999, 0x4060, 0x8fdf, 0x7568, 0xad7d, 0x1, 0x0);
        gbc.writeMem(0x7474, { 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8999, gbc.sp());
        EXPECT(0x7475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0349
        gbc.setState(0x59ea, 0x8535, 0xdf20, 0x31ab, 0x1b01, 0x910, 0x1, 0x0);
        gbc.writeMem(0x59ea, { 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8535, gbc.sp());
        EXPECT(0x59eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 034A
        gbc.setState(0x365d, 0x81d4, 0xe990, 0xf886, 0x117b, 0x5b43, 0x1, 0x0);
        gbc.writeMem(0x365d, { 0x4b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x81d4, gbc.sp());
        EXPECT(0x365e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 034B
        gbc.setState(0x4380, 0x1d87, 0x1aa0, 0x8e8e, 0x43d, 0xaee6, 0x1, 0x1);
        gbc.writeMem(0x4380, { 0x4b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1d87, gbc.sp());
        EXPECT(0x4381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 034C
        gbc.setState(0x8381, 0x9840, 0x6e20, 0x8682, 0xfd40, 0x40c8, 0x0, 0x0);
        gbc.writeMem(0x8381, { 0x4b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9840, gbc.sp());
        EXPECT(0x8382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8381));
        // 4B 034D
        gbc.setState(0x715b, 0x6cce, 0x6750, 0x65f6, 0x88ea, 0x1448, 0x0, 0x1);
        gbc.writeMem(0x715b, { 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6cce, gbc.sp());
        EXPECT(0x715c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 034E
        gbc.setState(0x7f69, 0xf5bc, 0xb330, 0x77e9, 0xbbaa, 0x35c, 0x0, 0x1);
        gbc.writeMem(0x7f69, { 0x4b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf5bc, gbc.sp());
        EXPECT(0x7f6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 034F
        gbc.setState(0xa291, 0x28bb, 0xc850, 0xf1c5, 0xc21, 0x4417, 0x1, 0x1);
        gbc.writeMem(0xa291, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x28bb, gbc.sp());
        EXPECT(0xa292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa291));
        // 4B 0350
        gbc.setState(0x81f6, 0xaafc, 0xde90, 0x56d, 0x9f19, 0x9bee, 0x1, 0x0);
        gbc.writeMem(0x81f6, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xaafc, gbc.sp());
        EXPECT(0x81f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x81f6));
        // 4B 0351
        gbc.setState(0x52f4, 0x52e1, 0x3a20, 0xaa45, 0x2ed7, 0x2996, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0x4b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x52e1, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0352
        gbc.setState(0xdd15, 0xed0c, 0x9a40, 0x8e11, 0xe09d, 0x5713, 0x1, 0x1);
        gbc.writeMem(0xdd15, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xed0c, gbc.sp());
        EXPECT(0xdd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdd15));
        // 4B 0353
        gbc.setState(0x1c98, 0xd4b, 0xaed0, 0xefaf, 0x9ed2, 0x6c35, 0x1, 0x1);
        gbc.writeMem(0x1c98, { 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd4b, gbc.sp());
        EXPECT(0x1c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0354
        gbc.setState(0x3b02, 0x137b, 0x4290, 0x7a32, 0xc0ae, 0xaf8b, 0x0, 0x0);
        gbc.writeMem(0x3b02, { 0x4b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x137b, gbc.sp());
        EXPECT(0x3b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0356
        gbc.setState(0xbf06, 0xd072, 0xc450, 0x1320, 0xb287, 0x82dc, 0x1, 0x1);
        gbc.writeMem(0xbf06, { 0x4b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd072, gbc.sp());
        EXPECT(0xbf07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbf06));
        // 4B 0357
        gbc.setState(0xf16, 0xd1d9, 0x1e80, 0x5f6a, 0xfa01, 0x5f8, 0x0, 0x1);
        gbc.writeMem(0xf16, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd1d9, gbc.sp());
        EXPECT(0xf17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0358
        gbc.setState(0xe815, 0xa43e, 0x3440, 0xe2a0, 0xb9d8, 0x740b, 0x1, 0x1);
        gbc.writeMem(0xe815, { 0x4b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa43e, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe815));
        // 4B 0359
        gbc.setState(0x5dc5, 0xfaa1, 0x7b70, 0x25b2, 0x93d5, 0xdeb1, 0x0, 0x0);
        gbc.writeMem(0x5dc5, { 0x4b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xfaa1, gbc.sp());
        EXPECT(0x5dc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 035A
        gbc.setState(0x43e8, 0x2623, 0xb680, 0x37d8, 0x5f61, 0x7ea8, 0x1, 0x1);
        gbc.writeMem(0x43e8, { 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2623, gbc.sp());
        EXPECT(0x43e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 035B
        gbc.setState(0xc162, 0xcf4, 0xd0, 0x8d57, 0x5806, 0x30dc, 0x0, 0x1);
        gbc.writeMem(0xc162, { 0x4b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcf4, gbc.sp());
        EXPECT(0xc163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc162));
        // 4B 035C
        gbc.setState(0xcfcb, 0x46ce, 0x2950, 0x101c, 0x4a37, 0x480, 0x0, 0x1);
        gbc.writeMem(0xcfcb, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x46ce, gbc.sp());
        EXPECT(0xcfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcfcb));
        // 4B 035D
        gbc.setState(0xd565, 0xe556, 0xd4e0, 0xf374, 0xfe9c, 0xe6b6, 0x0, 0x0);
        gbc.writeMem(0xd565, { 0x4b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0xd566, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd565));
        // 4B 035E
        gbc.setState(0x7f7, 0xcad1, 0x6710, 0x245f, 0xe3ba, 0x3130, 0x1, 0x1);
        gbc.writeMem(0x7f7, { 0x4b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcad1, gbc.sp());
        EXPECT(0x7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0360
        gbc.setState(0x6153, 0x89cb, 0xde80, 0xd67, 0xc4d7, 0x6bbd, 0x0, 0x0);
        gbc.writeMem(0x6153, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x89cb, gbc.sp());
        EXPECT(0x6154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0361
        gbc.setState(0x1524, 0xd2dd, 0x4650, 0x2247, 0xa994, 0x2299, 0x0, 0x0);
        gbc.writeMem(0x1524, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd2dd, gbc.sp());
        EXPECT(0x1525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0362
        gbc.setState(0x455b, 0xc02e, 0x29a0, 0x6f75, 0xf1a, 0xf19b, 0x1, 0x0);
        gbc.writeMem(0x455b, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xc02e, gbc.sp());
        EXPECT(0x455c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0363
        gbc.setState(0x9c11, 0x66b8, 0x1530, 0xdf4c, 0x5b63, 0x32, 0x0, 0x1);
        gbc.writeMem(0x9c11, { 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x66b8, gbc.sp());
        EXPECT(0x9c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9c11));
        // 4B 0365
        gbc.setState(0x1c2c, 0x661d, 0xef50, 0x5dbf, 0xbaa6, 0xd464, 0x1, 0x1);
        gbc.writeMem(0x1c2c, { 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x661d, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0366
        gbc.setState(0x246, 0x871a, 0x1590, 0x4a66, 0x8c54, 0xb2b8, 0x1, 0x1);
        gbc.writeMem(0x246, { 0x4b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x871a, gbc.sp());
        EXPECT(0x247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0367
        gbc.setState(0xb270, 0x6910, 0x65f0, 0xbb20, 0x2b28, 0x7622, 0x1, 0x1);
        gbc.writeMem(0xb270, { 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6910, gbc.sp());
        EXPECT(0xb271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb270));
        // 4B 0368
        gbc.setState(0x6e54, 0x3660, 0xe100, 0x3918, 0xc1dc, 0xb330, 0x1, 0x1);
        gbc.writeMem(0x6e54, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3660, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0369
        gbc.setState(0x6e4f, 0x1616, 0x8150, 0xf26c, 0x2d5b, 0xa93f, 0x1, 0x1);
        gbc.writeMem(0x6e4f, { 0x4b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1616, gbc.sp());
        EXPECT(0x6e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 036A
        gbc.setState(0xb2ef, 0x7c37, 0xee70, 0x8df5, 0xcd19, 0x2425, 0x1, 0x1);
        gbc.writeMem(0xb2ef, { 0x4b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0xb2f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb2ef));
        // 4B 036B
        gbc.setState(0xc17e, 0xab71, 0x5610, 0xb030, 0x77f5, 0xe242, 0x1, 0x0);
        gbc.writeMem(0xc17e, { 0x4b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0xc17f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc17e));
        // 4B 036C
        gbc.setState(0x78c3, 0x280, 0xeb00, 0xe700, 0x32c8, 0xe0bb, 0x0, 0x0);
        gbc.writeMem(0x78c3, { 0x4b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x280, gbc.sp());
        EXPECT(0x78c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 036D
        gbc.setState(0xe5bd, 0xbe50, 0xd760, 0x4a1, 0xeaf7, 0xdc9c, 0x0, 0x1);
        gbc.writeMem(0xe5bd, { 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbe50, gbc.sp());
        EXPECT(0xe5be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe5bd));
        // 4B 036E
        gbc.setState(0x5300, 0x9ef3, 0x5420, 0xad2, 0xafe5, 0xadf, 0x1, 0x0);
        gbc.writeMem(0x5300, { 0x4b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9ef3, gbc.sp());
        EXPECT(0x5301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 036F
        gbc.setState(0xbdc1, 0x2556, 0xb460, 0x297a, 0x9385, 0xfe4d, 0x0, 0x0);
        gbc.writeMem(0xbdc1, { 0x4b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x2556, gbc.sp());
        EXPECT(0xbdc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbdc1));
        // 4B 0370
        gbc.setState(0x5423, 0xbed8, 0xac0, 0xc495, 0xf4be, 0xd127, 0x0, 0x1);
        gbc.writeMem(0x5423, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xbed8, gbc.sp());
        EXPECT(0x5424, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0371
        gbc.setState(0xc463, 0xc819, 0xca40, 0x565d, 0x5ff8, 0xafce, 0x1, 0x0);
        gbc.writeMem(0xc463, { 0x4b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc819, gbc.sp());
        EXPECT(0xc464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc463));
        // 4B 0372
        gbc.setState(0x6188, 0x2148, 0xd2c0, 0x9e68, 0x3eae, 0x1b68, 0x1, 0x1);
        gbc.writeMem(0x6188, { 0x4b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2148, gbc.sp());
        EXPECT(0x6189, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0373
        gbc.setState(0xe33b, 0x5fad, 0xc8e0, 0x19ce, 0xd56f, 0x1ac4, 0x1, 0x1);
        gbc.writeMem(0xe33b, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5fad, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe33b));
        // 4B 0374
        gbc.setState(0xc8d, 0x601a, 0xe1f0, 0x8f67, 0xf881, 0xc838, 0x1, 0x1);
        gbc.writeMem(0xc8d, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x601a, gbc.sp());
        EXPECT(0xc8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0375
        gbc.setState(0xd118, 0x4907, 0xe3b0, 0xa6ec, 0x33f1, 0xd4ed, 0x1, 0x0);
        gbc.writeMem(0xd118, { 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x4907, gbc.sp());
        EXPECT(0xd119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd118));
        // 4B 0376
        gbc.setState(0x1909, 0x30fd, 0xfd20, 0x994f, 0x8b09, 0x3d, 0x1, 0x1);
        gbc.writeMem(0x1909, { 0x4b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x30fd, gbc.sp());
        EXPECT(0x190a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0377
        gbc.setState(0xc6fc, 0x7313, 0xb8a0, 0x34dc, 0x18a, 0xde2, 0x1, 0x1);
        gbc.writeMem(0xc6fc, { 0x4b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7313, gbc.sp());
        EXPECT(0xc6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc6fc));
        // 4B 0378
        gbc.setState(0x6d3, 0x54ae, 0x160, 0x8a69, 0xadb9, 0xcb4c, 0x1, 0x0);
        gbc.writeMem(0x6d3, { 0x4b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x54ae, gbc.sp());
        EXPECT(0x6d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0379
        gbc.setState(0x4b2d, 0xa9e8, 0xe1a0, 0x3561, 0xc8d0, 0xbf3f, 0x1, 0x1);
        gbc.writeMem(0x4b2d, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x4b2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 037A
        gbc.setState(0x8211, 0x2930, 0x83f0, 0x75ca, 0xf9e9, 0xfec3, 0x1, 0x1);
        gbc.writeMem(0x8211, { 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2930, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8211));
        // 4B 037B
        gbc.setState(0x7c9f, 0x6de5, 0xbd90, 0x381c, 0x92ec, 0x4bb9, 0x0, 0x1);
        gbc.writeMem(0x7c9f, { 0x4b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6de5, gbc.sp());
        EXPECT(0x7ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 037C
        gbc.setState(0xe617, 0xe1e6, 0x96f0, 0x8ac4, 0xcc5, 0xd1bf, 0x0, 0x1);
        gbc.writeMem(0xe617, { 0x4b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe1e6, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe617));
        // 4B 037D
        gbc.setState(0x797, 0x2872, 0x9ed0, 0x37e2, 0x8523, 0xfcf2, 0x0, 0x1);
        gbc.writeMem(0x797, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2872, gbc.sp());
        EXPECT(0x798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 037E
        gbc.setState(0xdb43, 0x9f2c, 0x3e70, 0xcb39, 0x6c15, 0xd631, 0x1, 0x1);
        gbc.writeMem(0xdb43, { 0x4b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9f2c, gbc.sp());
        EXPECT(0xdb44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdb43));
        // 4B 037F
        gbc.setState(0x70a8, 0xe109, 0x93a0, 0x150e, 0xe83, 0x9bf8, 0x0, 0x0);
        gbc.writeMem(0x70a8, { 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe109, gbc.sp());
        EXPECT(0x70a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0380
        gbc.setState(0xc271, 0xd909, 0x9940, 0x11cf, 0xe640, 0x57c0, 0x0, 0x0);
        gbc.writeMem(0xc271, { 0x4b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0xc272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc271));
        // 4B 0381
        gbc.setState(0xf3f, 0xe584, 0x9f90, 0xe9bf, 0x80d0, 0xe4f3, 0x0, 0x1);
        gbc.writeMem(0xf3f, { 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe584, gbc.sp());
        EXPECT(0xf40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0382
        gbc.setState(0x5b0, 0x37ef, 0xdf80, 0xdfff, 0x3a7f, 0xe0b4, 0x0, 0x1);
        gbc.writeMem(0x5b0, { 0x4b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x37ef, gbc.sp());
        EXPECT(0x5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0383
        gbc.setState(0xaf05, 0xcee7, 0xe330, 0x24, 0x6e64, 0x9f5b, 0x0, 0x0);
        gbc.writeMem(0xaf05, { 0x4b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcee7, gbc.sp());
        EXPECT(0xaf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaf05));
        // 4B 0384
        gbc.setState(0x13d6, 0xe8e4, 0xa00, 0xfa95, 0xbbfd, 0x81f8, 0x0, 0x0);
        gbc.writeMem(0x13d6, { 0x4b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe8e4, gbc.sp());
        EXPECT(0x13d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0385
        gbc.setState(0x9a42, 0x36f4, 0x4d10, 0x7e9f, 0x77f1, 0x393, 0x1, 0x1);
        gbc.writeMem(0x9a42, { 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x36f4, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9a42));
        // 4B 0386
        gbc.setState(0xedea, 0x619b, 0x8f30, 0xc32, 0x367a, 0xbfb3, 0x0, 0x1);
        gbc.writeMem(0xedea, { 0x4b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x619b, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xedea));
        // 4B 0387
        gbc.setState(0x8c91, 0x6d4f, 0x9fa0, 0x37e6, 0xb054, 0xbbe3, 0x0, 0x0);
        gbc.writeMem(0x8c91, { 0x4b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6d4f, gbc.sp());
        EXPECT(0x8c92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8c91));
        // 4B 0388
        gbc.setState(0x999, 0x2fb1, 0xdc70, 0xcd2f, 0x457f, 0x40ce, 0x0, 0x1);
        gbc.writeMem(0x999, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2fb1, gbc.sp());
        EXPECT(0x99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0389
        gbc.setState(0x99e9, 0xbbf7, 0x4690, 0x2537, 0x711d, 0xaa47, 0x0, 0x0);
        gbc.writeMem(0x99e9, { 0x4b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xbbf7, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99e9));
        // 4B 038A
        gbc.setState(0xcf5e, 0x9f8f, 0xae80, 0x1c37, 0xf93a, 0x3de4, 0x0, 0x0);
        gbc.writeMem(0xcf5e, { 0x4b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9f8f, gbc.sp());
        EXPECT(0xcf5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcf5e));
        // 4B 038B
        gbc.setState(0xa12a, 0x5edf, 0xde20, 0xd0fa, 0x9909, 0xe9e4, 0x0, 0x1);
        gbc.writeMem(0xa12a, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5edf, gbc.sp());
        EXPECT(0xa12b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa12a));
        // 4B 038D
        gbc.setState(0xc83d, 0xa1c0, 0xdc40, 0xa9c4, 0x7231, 0xdc0b, 0x1, 0x1);
        gbc.writeMem(0xc83d, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa1c0, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc83d));
        // 4B 038E
        gbc.setState(0x6bdd, 0x63c3, 0x7430, 0x7baf, 0xbd26, 0x8d41, 0x0, 0x0);
        gbc.writeMem(0x6bdd, { 0x4b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x63c3, gbc.sp());
        EXPECT(0x6bde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 038F
        gbc.setState(0x3b5a, 0xd41d, 0x1280, 0x81f7, 0x397a, 0xc2c9, 0x1, 0x1);
        gbc.writeMem(0x3b5a, { 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd41d, gbc.sp());
        EXPECT(0x3b5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0390
        gbc.setState(0xbb9, 0x6192, 0xb6c0, 0x2015, 0x4c66, 0xc5f9, 0x1, 0x0);
        gbc.writeMem(0xbb9, { 0x4b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6192, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0391
        gbc.setState(0x92bd, 0xeacb, 0x1200, 0x153c, 0xcede, 0xd5eb, 0x0, 0x0);
        gbc.writeMem(0x92bd, { 0x4b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xeacb, gbc.sp());
        EXPECT(0x92be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x92bd));
        // 4B 0392
        gbc.setState(0x7ccd, 0x79c6, 0x6f90, 0xad50, 0xfcaf, 0x1860, 0x1, 0x1);
        gbc.writeMem(0x7ccd, { 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0x7cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0393
        gbc.setState(0xc736, 0x36ab, 0xa6b0, 0x31f8, 0xdbce, 0x6a75, 0x1, 0x1);
        gbc.writeMem(0xc736, { 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x36ab, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc736));
        // 4B 0395
        gbc.setState(0x8d0a, 0xc75d, 0x40f0, 0x6dcd, 0xfa23, 0x17a6, 0x1, 0x0);
        gbc.writeMem(0x8d0a, { 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc75d, gbc.sp());
        EXPECT(0x8d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8d0a));
        // 4B 0396
        gbc.setState(0xc819, 0x2648, 0x9830, 0x7ac7, 0x9fda, 0xdd3f, 0x0, 0x0);
        gbc.writeMem(0xc819, { 0x4b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2648, gbc.sp());
        EXPECT(0xc81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc819));
        // 4B 0397
        gbc.setState(0x3527, 0x779a, 0x1e90, 0x7610, 0x8392, 0x605b, 0x1, 0x0);
        gbc.writeMem(0x3527, { 0x4b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0x3528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 0398
        gbc.setState(0x688e, 0x35ac, 0xc9a0, 0x485f, 0x617, 0xa037, 0x0, 0x1);
        gbc.writeMem(0x688e, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x35ac, gbc.sp());
        EXPECT(0x688f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 0399
        gbc.setState(0x3b1f, 0x32d1, 0xef70, 0x8828, 0x6771, 0x4caa, 0x1, 0x1);
        gbc.writeMem(0x3b1f, { 0x4b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x32d1, gbc.sp());
        EXPECT(0x3b20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 039A
        gbc.setState(0xe19a, 0xefd3, 0xe180, 0x6551, 0xee47, 0xeed5, 0x0, 0x1);
        gbc.writeMem(0xe19a, { 0x4b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xefd3, gbc.sp());
        EXPECT(0xe19b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe19a));
        // 4B 039B
        gbc.setState(0x305c, 0x7f55, 0x19c0, 0x9916, 0x3f0a, 0x468, 0x1, 0x1);
        gbc.writeMem(0x305c, { 0x4b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f55, gbc.sp());
        EXPECT(0x305d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 039C
        gbc.setState(0x54c1, 0x27a3, 0x8ef0, 0x48b, 0x5ad5, 0xf76, 0x0, 0x1);
        gbc.writeMem(0x54c1, { 0x4b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x27a3, gbc.sp());
        EXPECT(0x54c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 039E
        gbc.setState(0x90e9, 0x7785, 0x8440, 0xda18, 0x4042, 0xd212, 0x0, 0x0);
        gbc.writeMem(0x90e9, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7785, gbc.sp());
        EXPECT(0x90ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x90e9));
        // 4B 039F
        gbc.setState(0x46b0, 0xf2ac, 0xf880, 0x36ab, 0x4335, 0x8f25, 0x1, 0x1);
        gbc.writeMem(0x46b0, { 0x4b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf2ac, gbc.sp());
        EXPECT(0x46b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03A0
        gbc.setState(0x8112, 0x4727, 0x1830, 0xb788, 0xdd64, 0x918d, 0x0, 0x1);
        gbc.writeMem(0x8112, { 0x4b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4727, gbc.sp());
        EXPECT(0x8113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8112));
        // 4B 03A1
        gbc.setState(0x9428, 0xc0bd, 0xc0f0, 0xf5f2, 0x1f33, 0x3d72, 0x0, 0x0);
        gbc.writeMem(0x9428, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0x9429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9428));
        // 4B 03A2
        gbc.setState(0x641b, 0x3e94, 0x8470, 0x5ea6, 0x93cf, 0xe626, 0x0, 0x1);
        gbc.writeMem(0x641b, { 0x4b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3e94, gbc.sp());
        EXPECT(0x641c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03A3
        gbc.setState(0x9f41, 0x4c32, 0x9ed0, 0x7d9f, 0xe037, 0x742c, 0x0, 0x0);
        gbc.writeMem(0x9f41, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4c32, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9f41));
        // 4B 03A4
        gbc.setState(0x43a0, 0x8424, 0x88a0, 0xaffb, 0x9c10, 0x5ad1, 0x0, 0x1);
        gbc.writeMem(0x43a0, { 0x4b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8424, gbc.sp());
        EXPECT(0x43a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03A5
        gbc.setState(0x19c0, 0x2a76, 0xce40, 0x187c, 0x7acd, 0x82a6, 0x0, 0x0);
        gbc.writeMem(0x19c0, { 0x4b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2a76, gbc.sp());
        EXPECT(0x19c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03A6
        gbc.setState(0xb925, 0x6eff, 0xded0, 0x248f, 0xaf07, 0xc234, 0x1, 0x0);
        gbc.writeMem(0xb925, { 0x4b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x6eff, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb925));
        // 4B 03A7
        gbc.setState(0x667f, 0x334a, 0xddc0, 0x5bed, 0xf631, 0xe966, 0x0, 0x1);
        gbc.writeMem(0x667f, { 0x4b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x334a, gbc.sp());
        EXPECT(0x6680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03A8
        gbc.setState(0xc6bd, 0xce57, 0x9aa0, 0xdca2, 0x8c8, 0xb92b, 0x0, 0x1);
        gbc.writeMem(0xc6bd, { 0x4b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xce57, gbc.sp());
        EXPECT(0xc6be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc6bd));
        // 4B 03A9
        gbc.setState(0x4581, 0xc700, 0xf470, 0x8372, 0x2b21, 0xa8d5, 0x1, 0x1);
        gbc.writeMem(0x4581, { 0x4b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc700, gbc.sp());
        EXPECT(0x4582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03AA
        gbc.setState(0x5544, 0x442c, 0x10c0, 0x1b7c, 0xeaf4, 0x513a, 0x0, 0x1);
        gbc.writeMem(0x5544, { 0x4b });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x442c, gbc.sp());
        EXPECT(0x5545, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03AB
        gbc.setState(0x5f74, 0xc21a, 0x5360, 0x8c9b, 0xcf84, 0xbb8d, 0x0, 0x1);
        gbc.writeMem(0x5f74, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc21a, gbc.sp());
        EXPECT(0x5f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03AC
        gbc.setState(0xe59d, 0x757c, 0x4c40, 0x286f, 0x506f, 0x33c8, 0x0, 0x1);
        gbc.writeMem(0xe59d, { 0x4b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x757c, gbc.sp());
        EXPECT(0xe59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe59d));
        // 4B 03AD
        gbc.setState(0xe88f, 0xc2fb, 0x2830, 0xb8d5, 0x2e63, 0x33c, 0x0, 0x1);
        gbc.writeMem(0xe88f, { 0x4b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc2fb, gbc.sp());
        EXPECT(0xe890, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe88f));
        // 4B 03AE
        gbc.setState(0xa757, 0xe305, 0x6910, 0x21b, 0x19f6, 0xde7d, 0x1, 0x0);
        gbc.writeMem(0xa757, { 0x4b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0xa758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa757));
        // 4B 03B0
        gbc.setState(0x11c0, 0xc2fa, 0xaad0, 0x8b64, 0x4535, 0x6c90, 0x0, 0x0);
        gbc.writeMem(0x11c0, { 0x4b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc2fa, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03B1
        gbc.setState(0xca6d, 0x725d, 0x1110, 0xb5a0, 0x73e0, 0x54d4, 0x1, 0x1);
        gbc.writeMem(0xca6d, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x725d, gbc.sp());
        EXPECT(0xca6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xca6d));
        // 4B 03B2
        gbc.setState(0xd9c2, 0x704b, 0xa220, 0xf805, 0x708b, 0x5897, 0x1, 0x0);
        gbc.writeMem(0xd9c2, { 0x4b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x704b, gbc.sp());
        EXPECT(0xd9c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd9c2));
        // 4B 03B3
        gbc.setState(0xc2e1, 0x7260, 0x73e0, 0xb061, 0x58b0, 0x4c81, 0x1, 0x0);
        gbc.writeMem(0xc2e1, { 0x4b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x7260, gbc.sp());
        EXPECT(0xc2e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc2e1));
        // 4B 03B4
        gbc.setState(0xd919, 0xc376, 0xdca0, 0xbe40, 0x7a6, 0x45de, 0x0, 0x0);
        gbc.writeMem(0xd919, { 0x4b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc376, gbc.sp());
        EXPECT(0xd91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xd919));
        // 4B 03B5
        gbc.setState(0x785d, 0xcd5d, 0x5340, 0xed, 0x928b, 0xee2a, 0x1, 0x0);
        gbc.writeMem(0x785d, { 0x4b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcd5d, gbc.sp());
        EXPECT(0x785e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03B6
        gbc.setState(0x1101, 0x818, 0x33a0, 0xc6fc, 0x996f, 0x9504, 0x1, 0x0);
        gbc.writeMem(0x1101, { 0x4b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x818, gbc.sp());
        EXPECT(0x1102, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03B7
        gbc.setState(0x87d6, 0xd853, 0xc720, 0x4dd3, 0x514a, 0xa5d2, 0x0, 0x1);
        gbc.writeMem(0x87d6, { 0x4b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x87d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x87d6));
        // 4B 03B8
        gbc.setState(0x4b42, 0xea6d, 0xc10, 0x5843, 0xc0cd, 0x38bd, 0x1, 0x1);
        gbc.writeMem(0x4b42, { 0x4b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xea6d, gbc.sp());
        EXPECT(0x4b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03B9
        gbc.setState(0x9a7e, 0x5199, 0xc800, 0x94b2, 0xc487, 0x8f11, 0x1, 0x0);
        gbc.writeMem(0x9a7e, { 0x4b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5199, gbc.sp());
        EXPECT(0x9a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9a7e));
        // 4B 03BA
        gbc.setState(0x1d22, 0x8e7f, 0x1140, 0x17de, 0xeda9, 0x14b1, 0x1, 0x1);
        gbc.writeMem(0x1d22, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8e7f, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03BB
        gbc.setState(0x1f7a, 0xdc74, 0x2ce0, 0xf65a, 0xd8d1, 0xd144, 0x0, 0x0);
        gbc.writeMem(0x1f7a, { 0x4b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xdc74, gbc.sp());
        EXPECT(0x1f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03BC
        gbc.setState(0x72e2, 0x89e6, 0x7020, 0x7a8d, 0x2765, 0xd21b, 0x1, 0x1);
        gbc.writeMem(0x72e2, { 0x4b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x89e6, gbc.sp());
        EXPECT(0x72e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03BE
        gbc.setState(0x7f0, 0xf5af, 0x9370, 0x8235, 0x294b, 0xf78d, 0x1, 0x1);
        gbc.writeMem(0x7f0, { 0x4b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xf5af, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03BF
        gbc.setState(0xa7d2, 0x407c, 0x5780, 0x587f, 0x5725, 0xb1df, 0x1, 0x1);
        gbc.writeMem(0xa7d2, { 0x4b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x407c, gbc.sp());
        EXPECT(0xa7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xa7d2));
        // 4B 03C0
        gbc.setState(0x9ac2, 0x775a, 0x69b0, 0xc70, 0x127f, 0x4050, 0x1, 0x0);
        gbc.writeMem(0x9ac2, { 0x4b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x775a, gbc.sp());
        EXPECT(0x9ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9ac2));
        // 4B 03C1
        gbc.setState(0x78d9, 0x4569, 0x8f0, 0xf5d4, 0x37f3, 0x83a7, 0x0, 0x0);
        gbc.writeMem(0x78d9, { 0x4b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4569, gbc.sp());
        EXPECT(0x78da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03C2
        gbc.setState(0xebea, 0xa2e2, 0x5910, 0xb956, 0xeaab, 0x22d1, 0x1, 0x1);
        gbc.writeMem(0xebea, { 0x4b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa2e2, gbc.sp());
        EXPECT(0xebeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xebea));
        // 4B 03C3
        gbc.setState(0x565b, 0xb736, 0x30a0, 0x3ad1, 0x407d, 0xae39, 0x1, 0x1);
        gbc.writeMem(0x565b, { 0x4b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb736, gbc.sp());
        EXPECT(0x565c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03C4
        gbc.setState(0x975a, 0x2810, 0x80e0, 0xb95c, 0x7bb3, 0xd97a, 0x0, 0x0);
        gbc.writeMem(0x975a, { 0x4b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x975b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x975a));
        // 4B 03C5
        gbc.setState(0xe49e, 0xd868, 0x8370, 0x9765, 0xc335, 0x8dc5, 0x1, 0x0);
        gbc.writeMem(0xe49e, { 0x4b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xd868, gbc.sp());
        EXPECT(0xe49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe49e));
        // 4B 03C6
        gbc.setState(0x5545, 0xf4b1, 0x2ac0, 0x98c3, 0x17ce, 0xdd1c, 0x1, 0x0);
        gbc.writeMem(0x5545, { 0x4b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf4b1, gbc.sp());
        EXPECT(0x5546, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03C9
        gbc.setState(0x84c0, 0x215, 0xc110, 0x1a66, 0x57e5, 0xbe9a, 0x0, 0x0);
        gbc.writeMem(0x84c0, { 0x4b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x215, gbc.sp());
        EXPECT(0x84c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x84c0));
        // 4B 03CA
        gbc.setState(0x3713, 0xa800, 0x7f30, 0x465c, 0x9306, 0x187, 0x0, 0x0);
        gbc.writeMem(0x3713, { 0x4b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xa800, gbc.sp());
        EXPECT(0x3714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03CB
        gbc.setState(0x347b, 0xabfb, 0x6d90, 0x7e9b, 0x61ac, 0x75f3, 0x1, 0x0);
        gbc.writeMem(0x347b, { 0x4b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xabfb, gbc.sp());
        EXPECT(0x347c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03CC
        gbc.setState(0x1f8f, 0x7b51, 0xf550, 0x4254, 0xf679, 0x3b8d, 0x1, 0x1);
        gbc.writeMem(0x1f8f, { 0x4b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7b51, gbc.sp());
        EXPECT(0x1f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03CD
        gbc.setState(0x9701, 0xc2a, 0x65c0, 0xb07e, 0x650e, 0x87b3, 0x0, 0x0);
        gbc.writeMem(0x9701, { 0x4b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc2a, gbc.sp());
        EXPECT(0x9702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9701));
        // 4B 03CE
        gbc.setState(0xac5d, 0x8f88, 0x4180, 0x6694, 0x327e, 0x7094, 0x0, 0x0);
        gbc.writeMem(0xac5d, { 0x4b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8f88, gbc.sp());
        EXPECT(0xac5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xac5d));
        // 4B 03CF
        gbc.setState(0x5480, 0xd25e, 0x4d40, 0x8bd5, 0x4fc4, 0x8fa, 0x1, 0x0);
        gbc.writeMem(0x5480, { 0x4b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd25e, gbc.sp());
        EXPECT(0x5481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03D0
        gbc.setState(0xe0d2, 0xd0ac, 0xfb20, 0xc9ca, 0xc190, 0x9696, 0x1, 0x0);
        gbc.writeMem(0xe0d2, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd0ac, gbc.sp());
        EXPECT(0xe0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe0d2));
        // 4B 03D1
        gbc.setState(0xb2c5, 0x58ec, 0xa6b0, 0x97a8, 0x7d7a, 0xaf26, 0x0, 0x0);
        gbc.writeMem(0xb2c5, { 0x4b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x58ec, gbc.sp());
        EXPECT(0xb2c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb2c5));
        // 4B 03D2
        gbc.setState(0x26f2, 0x3294, 0xc080, 0x6251, 0x914, 0x2437, 0x1, 0x0);
        gbc.writeMem(0x26f2, { 0x4b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3294, gbc.sp());
        EXPECT(0x26f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03D3
        gbc.setState(0xe38a, 0x8c49, 0x3f50, 0x9356, 0xc5a2, 0x8cc2, 0x0, 0x0);
        gbc.writeMem(0xe38a, { 0x4b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x8c49, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe38a));
        // 4B 03D4
        gbc.setState(0xb9c9, 0xe730, 0x7cc0, 0x3ed, 0xf2eb, 0x8738, 0x0, 0x0);
        gbc.writeMem(0xb9c9, { 0x4b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe730, gbc.sp());
        EXPECT(0xb9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xb9c9));
        // 4B 03D5
        gbc.setState(0xe74f, 0xebfb, 0xa980, 0xed4, 0x76dc, 0x3591, 0x1, 0x1);
        gbc.writeMem(0xe74f, { 0x4b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xebfb, gbc.sp());
        EXPECT(0xe750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xe74f));
        // 4B 03D6
        gbc.setState(0xdc3c, 0x296d, 0x6fd0, 0xc3ae, 0xf6a0, 0xb16e, 0x0, 0x1);
        gbc.writeMem(0xdc3c, { 0x4b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x296d, gbc.sp());
        EXPECT(0xdc3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xdc3c));
        // 4B 03D7
        gbc.setState(0x2fe3, 0xc3ff, 0x90b0, 0x341e, 0x6515, 0x2773, 0x1, 0x1);
        gbc.writeMem(0x2fe3, { 0x4b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc3ff, gbc.sp());
        EXPECT(0x2fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03D8
        gbc.setState(0x2139, 0x36f9, 0xd1c0, 0x3f38, 0x7850, 0xe98e, 0x1, 0x1);
        gbc.writeMem(0x2139, { 0x4b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0x213a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03D9
        gbc.setState(0xbc78, 0xd019, 0x49e0, 0x3440, 0xa6ef, 0x2400, 0x0, 0x1);
        gbc.writeMem(0xbc78, { 0x4b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd019, gbc.sp());
        EXPECT(0xbc79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbc78));
        // 4B 03DA
        gbc.setState(0x17d6, 0x5166, 0x11e0, 0x3b39, 0xa34d, 0x9795, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0x4b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5166, gbc.sp());
        EXPECT(0x17d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03DB
        gbc.setState(0xcb9c, 0x8bb3, 0x4010, 0x987b, 0xaeea, 0xe096, 0x1, 0x0);
        gbc.writeMem(0xcb9c, { 0x4b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8bb3, gbc.sp());
        EXPECT(0xcb9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb9c));
        // 4B 03DC
        gbc.setState(0xcb76, 0xc901, 0x5040, 0xabc8, 0x8d9f, 0x7277, 0x1, 0x1);
        gbc.writeMem(0xcb76, { 0x4b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0xcb77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcb76));
        // 4B 03DD
        gbc.setState(0x36, 0xada7, 0x2900, 0x9195, 0xe0da, 0xa0ee, 0x0, 0x1);
        gbc.writeMem(0x36, { 0x4b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xada7, gbc.sp());
        EXPECT(0x37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03DE
        gbc.setState(0x747c, 0xecbc, 0x9e30, 0x9e5, 0x4d3f, 0x8155, 0x0, 0x1);
        gbc.writeMem(0x747c, { 0x4b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xecbc, gbc.sp());
        EXPECT(0x747d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03DF
        gbc.setState(0x6b3e, 0x97c4, 0xb0e0, 0x418f, 0xc60, 0x320b, 0x1, 0x0);
        gbc.writeMem(0x6b3e, { 0x4b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x97c4, gbc.sp());
        EXPECT(0x6b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03E0
        gbc.setState(0xc054, 0xd5ac, 0xc9c0, 0x9978, 0xb711, 0xf8a7, 0x0, 0x1);
        gbc.writeMem(0xc054, { 0x4b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd5ac, gbc.sp());
        EXPECT(0xc055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xc054));
        // 4B 03E1
        gbc.setState(0xbcc4, 0xeb5d, 0xd750, 0x5c45, 0x8993, 0x6c41, 0x0, 0x1);
        gbc.writeMem(0xbcc4, { 0x4b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xeb5d, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xbcc4));
        // 4B 03E2
        gbc.setState(0x881a, 0x3cea, 0xe5b0, 0x291f, 0x30f6, 0xb57b, 0x0, 0x0);
        gbc.writeMem(0x881a, { 0x4b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3cea, gbc.sp());
        EXPECT(0x881b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x881a));
        // 4B 03E3
        gbc.setState(0x9dda, 0xde9c, 0x3190, 0x18b9, 0xb2cf, 0x96dc, 0x0, 0x1);
        gbc.writeMem(0x9dda, { 0x4b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xde9c, gbc.sp());
        EXPECT(0x9ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9dda));
        // 4B 03E4
        gbc.setState(0x5f8e, 0x32f8, 0x3710, 0x1eb3, 0x2cea, 0x3ada, 0x0, 0x0);
        gbc.writeMem(0x5f8e, { 0x4b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x32f8, gbc.sp());
        EXPECT(0x5f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 4B 03E5
        gbc.setState(0x99a3, 0x7a0b, 0x8940, 0x9b07, 0xcd9c, 0x29fd, 0x0, 0x0);
        gbc.writeMem(0x99a3, { 0x4b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7a0b, gbc.sp());
        EXPECT(0x99a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x99a3));
        // 4B 03E6
        gbc.setState(0x6dc4, 0x6dcc, 0x52a0, 0x5e23, 0x298, 0x4131, 0x1, 0x0);
        gbc.writeMem(0x6dc4, { 0x4b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6dcc, gbc.sp());
        EXPECT(0x6dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 4B 03E7
        gbc.setState(0x31f6, 0xaca0, 0xfbb0, 0xc5f7, 0xc66f, 0xfa43, 0x1, 0x1);
        gbc.writeMem(0x31f6, { 0x4b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaca0, gbc.sp());
        EXPECT(0x31f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
