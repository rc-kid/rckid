    TEST(gbcemu, opcode_c5) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // C5 0006
        gbc.setState(0x9127, 0xc0b7, 0x9230, 0xa353, 0x1a56, 0x34bd, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xc5 });
        gbc.writeMem(0xc0b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc0b5, gbc.sp());
        EXPECT(0x9128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9127));
        EXPECT(0x53, gbc.readMem(0xc0b5));
        EXPECT(0xa3, gbc.readMem(0xc0b6));
        // C5 0007
        gbc.setState(0x1578, 0xe19b, 0xba20, 0xff86, 0x1535, 0x87fb, 0x1, 0x0);
        gbc.writeMem(0x1578, { 0xc5 });
        gbc.writeMem(0xe199, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x1579, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xe199));
        EXPECT(0xff, gbc.readMem(0xe19a));
        // C5 0008
        gbc.setState(0xbe5f, 0xfa52, 0x1010, 0xbdc7, 0x28f, 0x9d09, 0x1, 0x0);
        gbc.writeMem(0xbe5f, { 0xc5 });
        gbc.writeMem(0xfa50, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0xbe60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbe5f));
        EXPECT(0xc7, gbc.readMem(0xfa50));
        EXPECT(0xbd, gbc.readMem(0xfa51));
        // C5 0009
        gbc.setState(0x9c85, 0xbc7b, 0xf030, 0xfc1f, 0x55ef, 0x285b, 0x0, 0x1);
        gbc.writeMem(0x9c85, { 0xc5 });
        gbc.writeMem(0xbc79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc79, gbc.sp());
        EXPECT(0x9c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9c85));
        EXPECT(0x1f, gbc.readMem(0xbc79));
        EXPECT(0xfc, gbc.readMem(0xbc7a));
        // C5 000B
        gbc.setState(0xebb0, 0xd624, 0xe100, 0x88a3, 0x235f, 0xb2f2, 0x0, 0x1);
        gbc.writeMem(0xd622, { 0x0, 0x0 });
        gbc.writeMem(0xebb0, { 0xc5 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0xebb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd622));
        EXPECT(0x88, gbc.readMem(0xd623));
        EXPECT(0xc5, gbc.readMem(0xebb0));
        // C5 000F
        gbc.setState(0x3c0f, 0xb180, 0x7ac0, 0x17c6, 0xd56c, 0x5108, 0x0, 0x1);
        gbc.writeMem(0x3c0f, { 0xc5 });
        gbc.writeMem(0xb17e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0x3c10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xb17e));
        EXPECT(0x17, gbc.readMem(0xb17f));
        // C5 0014
        gbc.setState(0xcc54, 0x81d7, 0x3660, 0xb62e, 0xcac3, 0x6116, 0x0, 0x1);
        gbc.writeMem(0x81d5, { 0x0, 0x0 });
        gbc.writeMem(0xcc54, { 0xc5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x81d5, gbc.sp());
        EXPECT(0xcc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x81d5));
        EXPECT(0xb6, gbc.readMem(0x81d6));
        EXPECT(0xc5, gbc.readMem(0xcc54));
        // C5 0016
        gbc.setState(0xac62, 0xfe6a, 0x5cd0, 0xa098, 0x1eef, 0x8f2c, 0x0, 0x0);
        gbc.writeMem(0xac62, { 0xc5 });
        gbc.writeMem(0xfe68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfe68, gbc.sp());
        EXPECT(0xac63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xac62));
        EXPECT(0x98, gbc.readMem(0xfe68));
        EXPECT(0xa0, gbc.readMem(0xfe69));
        // C5 0017
        gbc.setState(0x1f5d, 0xadd3, 0x9ac0, 0xc663, 0x4844, 0x3a3, 0x1, 0x1);
        gbc.writeMem(0x1f5d, { 0xc5 });
        gbc.writeMem(0xadd1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xadd1, gbc.sp());
        EXPECT(0x1f5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xadd1));
        EXPECT(0xc6, gbc.readMem(0xadd2));
        // C5 001A
        gbc.setState(0x3b0f, 0xdf18, 0xead0, 0x362d, 0xf552, 0xc023, 0x0, 0x1);
        gbc.writeMem(0x3b0f, { 0xc5 });
        gbc.writeMem(0xdf16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdf16, gbc.sp());
        EXPECT(0x3b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xdf16));
        EXPECT(0x36, gbc.readMem(0xdf17));
        // C5 001C
        gbc.setState(0x1d45, 0xb467, 0x6b10, 0xdbf, 0xf25, 0xbbdb, 0x0, 0x0);
        gbc.writeMem(0x1d45, { 0xc5 });
        gbc.writeMem(0xb465, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb465, gbc.sp());
        EXPECT(0x1d46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb465));
        EXPECT(0xd, gbc.readMem(0xb466));
        // C5 0020
        gbc.setState(0xd6b9, 0x9126, 0x8180, 0xa1ff, 0xdcab, 0x1fc, 0x0, 0x1);
        gbc.writeMem(0x9124, { 0x0, 0x0 });
        gbc.writeMem(0xd6b9, { 0xc5 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9124, gbc.sp());
        EXPECT(0xd6ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9124));
        EXPECT(0xa1, gbc.readMem(0x9125));
        EXPECT(0xc5, gbc.readMem(0xd6b9));
        // C5 0021
        gbc.setState(0x70b8, 0xd5fb, 0x8430, 0xa88e, 0xd1b7, 0x460d, 0x0, 0x0);
        gbc.writeMem(0x70b8, { 0xc5 });
        gbc.writeMem(0xd5f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd5f9, gbc.sp());
        EXPECT(0x70b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd5f9));
        EXPECT(0xa8, gbc.readMem(0xd5fa));
        // C5 0024
        gbc.setState(0x9549, 0x91ea, 0xb790, 0x5a58, 0x10dd, 0x2f44, 0x0, 0x0);
        gbc.writeMem(0x91e8, { 0x0, 0x0 });
        gbc.writeMem(0x9549, { 0xc5 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0x954a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x91e8));
        EXPECT(0x5a, gbc.readMem(0x91e9));
        EXPECT(0xc5, gbc.readMem(0x9549));
        // C5 0025
        gbc.setState(0x706e, 0xa606, 0x5720, 0x9b07, 0x7052, 0x3ac2, 0x0, 0x0);
        gbc.writeMem(0x706e, { 0xc5 });
        gbc.writeMem(0xa604, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa604, gbc.sp());
        EXPECT(0x706f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xa604));
        EXPECT(0x9b, gbc.readMem(0xa605));
        // C5 0026
        gbc.setState(0x74d0, 0xacb9, 0xf8f0, 0x6f54, 0x90a4, 0x8645, 0x0, 0x0);
        gbc.writeMem(0x74d0, { 0xc5 });
        gbc.writeMem(0xacb7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xacb7, gbc.sp());
        EXPECT(0x74d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xacb7));
        EXPECT(0x6f, gbc.readMem(0xacb8));
        // C5 002C
        gbc.setState(0x295a, 0xa725, 0xe2b0, 0xf419, 0x1427, 0x82c2, 0x0, 0x0);
        gbc.writeMem(0x295a, { 0xc5 });
        gbc.writeMem(0xa723, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa723, gbc.sp());
        EXPECT(0x295b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa723));
        EXPECT(0xf4, gbc.readMem(0xa724));
        // C5 002D
        gbc.setState(0xb991, 0xfd63, 0xe790, 0x1a3c, 0x8ab4, 0xd6a, 0x0, 0x0);
        gbc.writeMem(0xb991, { 0xc5 });
        gbc.writeMem(0xfd61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xb992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb991));
        EXPECT(0x3c, gbc.readMem(0xfd61));
        EXPECT(0x1a, gbc.readMem(0xfd62));
        // C5 0032
        gbc.setState(0x7ecf, 0xedd8, 0xb7b0, 0x1261, 0x4a66, 0xb21, 0x1, 0x1);
        gbc.writeMem(0x7ecf, { 0xc5 });
        gbc.writeMem(0xedd6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x7ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xedd6));
        EXPECT(0x12, gbc.readMem(0xedd7));
        // C5 0033
        gbc.setState(0x7c3b, 0xbb1a, 0x6700, 0x9f02, 0xb2db, 0x6904, 0x1, 0x0);
        gbc.writeMem(0x7c3b, { 0xc5 });
        gbc.writeMem(0xbb18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbb18, gbc.sp());
        EXPECT(0x7c3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbb18));
        EXPECT(0x9f, gbc.readMem(0xbb19));
        // C5 0034
        gbc.setState(0xb1f9, 0xbf8f, 0x6e80, 0x6808, 0x2209, 0x3350, 0x1, 0x0);
        gbc.writeMem(0xb1f9, { 0xc5 });
        gbc.writeMem(0xbf8d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbf8d, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb1f9));
        EXPECT(0x8, gbc.readMem(0xbf8d));
        EXPECT(0x68, gbc.readMem(0xbf8e));
        // C5 0035
        gbc.setState(0x8247, 0x9ac5, 0xf760, 0xd3ae, 0xd37, 0xb6e4, 0x0, 0x1);
        gbc.writeMem(0x8247, { 0xc5 });
        gbc.writeMem(0x9ac3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9ac3, gbc.sp());
        EXPECT(0x8248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8247));
        EXPECT(0xae, gbc.readMem(0x9ac3));
        EXPECT(0xd3, gbc.readMem(0x9ac4));
        // C5 0036
        gbc.setState(0x2ab8, 0xabc7, 0x7340, 0xb870, 0xf925, 0x2ce0, 0x0, 0x1);
        gbc.writeMem(0x2ab8, { 0xc5 });
        gbc.writeMem(0xabc5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xabc5, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xabc5));
        EXPECT(0xb8, gbc.readMem(0xabc6));
        // C5 0037
        gbc.setState(0x5a40, 0xc5bc, 0x5900, 0x815e, 0x12f7, 0xed58, 0x1, 0x0);
        gbc.writeMem(0x5a40, { 0xc5 });
        gbc.writeMem(0xc5ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc5ba, gbc.sp());
        EXPECT(0x5a41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc5ba));
        EXPECT(0x81, gbc.readMem(0xc5bb));
        // C5 0038
        gbc.setState(0xaf17, 0xdd97, 0x7080, 0xf8da, 0xc68c, 0xfbbc, 0x1, 0x0);
        gbc.writeMem(0xaf17, { 0xc5 });
        gbc.writeMem(0xdd95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdd95, gbc.sp());
        EXPECT(0xaf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xaf17));
        EXPECT(0xda, gbc.readMem(0xdd95));
        EXPECT(0xf8, gbc.readMem(0xdd96));
        // C5 003F
        gbc.setState(0xaf86, 0x8930, 0xa840, 0x4475, 0x430b, 0xdacd, 0x0, 0x0);
        gbc.writeMem(0x892e, { 0x0, 0x0 });
        gbc.writeMem(0xaf86, { 0xc5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x892e, gbc.sp());
        EXPECT(0xaf87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x892e));
        EXPECT(0x44, gbc.readMem(0x892f));
        EXPECT(0xc5, gbc.readMem(0xaf86));
        // C5 0040
        gbc.setState(0x3483, 0xbc83, 0x6c60, 0xc4ba, 0xe2c8, 0xe77, 0x0, 0x1);
        gbc.writeMem(0x3483, { 0xc5 });
        gbc.writeMem(0xbc81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbc81, gbc.sp());
        EXPECT(0x3484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbc81));
        EXPECT(0xc4, gbc.readMem(0xbc82));
        // C5 0046
        gbc.setState(0xec8c, 0x8c24, 0x8eb0, 0x9a7f, 0x21, 0x188a, 0x1, 0x0);
        gbc.writeMem(0x8c22, { 0x0, 0x0 });
        gbc.writeMem(0xec8c, { 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c22, gbc.sp());
        EXPECT(0xec8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8c22));
        EXPECT(0x9a, gbc.readMem(0x8c23));
        EXPECT(0xc5, gbc.readMem(0xec8c));
        // C5 004A
        gbc.setState(0x4da0, 0xa83f, 0x4380, 0xd6e7, 0x5c68, 0x50db, 0x0, 0x0);
        gbc.writeMem(0x4da0, { 0xc5 });
        gbc.writeMem(0xa83d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa83d, gbc.sp());
        EXPECT(0x4da1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xa83d));
        EXPECT(0xd6, gbc.readMem(0xa83e));
        // C5 004B
        gbc.setState(0x6edb, 0xd061, 0x3e30, 0x99cb, 0xfbbc, 0x2bd7, 0x1, 0x0);
        gbc.writeMem(0x6edb, { 0xc5 });
        gbc.writeMem(0xd05f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd05f, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05f));
        EXPECT(0x99, gbc.readMem(0xd060));
        // C5 004C
        gbc.setState(0xe74, 0xc3c2, 0xb070, 0xdfb6, 0xd026, 0x47b, 0x0, 0x1);
        gbc.writeMem(0xe74, { 0xc5 });
        gbc.writeMem(0xc3c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc3c0, gbc.sp());
        EXPECT(0xe75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xc3c0));
        EXPECT(0xdf, gbc.readMem(0xc3c1));
        // C5 004E
        gbc.setState(0x1f43, 0xfa22, 0x3dc0, 0xf165, 0x8d37, 0xb31b, 0x0, 0x0);
        gbc.writeMem(0x1f43, { 0xc5 });
        gbc.writeMem(0xfa20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfa20, gbc.sp());
        EXPECT(0x1f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xfa20));
        EXPECT(0xf1, gbc.readMem(0xfa21));
        // C5 004F
        gbc.setState(0xcdb7, 0xf4f7, 0x4110, 0x9c58, 0xee4c, 0x5adf, 0x0, 0x1);
        gbc.writeMem(0xcdb7, { 0xc5 });
        gbc.writeMem(0xf4f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf4f5, gbc.sp());
        EXPECT(0xcdb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xcdb7));
        EXPECT(0x58, gbc.readMem(0xf4f5));
        EXPECT(0x9c, gbc.readMem(0xf4f6));
        // C5 0054
        gbc.setState(0x7d9f, 0xc77f, 0xf260, 0x8d69, 0xeeef, 0x9055, 0x1, 0x1);
        gbc.writeMem(0x7d9f, { 0xc5 });
        gbc.writeMem(0xc77d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc77d, gbc.sp());
        EXPECT(0x7da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc77d));
        EXPECT(0x8d, gbc.readMem(0xc77e));
        // C5 0056
        gbc.setState(0x8f28, 0xb653, 0x7e40, 0xa041, 0xbe20, 0x3ce5, 0x1, 0x0);
        gbc.writeMem(0x8f28, { 0xc5 });
        gbc.writeMem(0xb651, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb651, gbc.sp());
        EXPECT(0x8f29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8f28));
        EXPECT(0x41, gbc.readMem(0xb651));
        EXPECT(0xa0, gbc.readMem(0xb652));
        // C5 0057
        gbc.setState(0xb2a3, 0xe97d, 0xcc0, 0x8254, 0xfa08, 0x78a4, 0x1, 0x1);
        gbc.writeMem(0xb2a3, { 0xc5 });
        gbc.writeMem(0xe97b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xe97b, gbc.sp());
        EXPECT(0xb2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb2a3));
        EXPECT(0x54, gbc.readMem(0xe97b));
        EXPECT(0x82, gbc.readMem(0xe97c));
        // C5 005B
        gbc.setState(0x38af, 0xad98, 0x23d0, 0x9b55, 0x33b7, 0x2015, 0x1, 0x0);
        gbc.writeMem(0x38af, { 0xc5 });
        gbc.writeMem(0xad96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xad96, gbc.sp());
        EXPECT(0x38b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xad96));
        EXPECT(0x9b, gbc.readMem(0xad97));
        // C5 005C
        gbc.setState(0xd7cd, 0x8029, 0xea0, 0x8f0b, 0x179c, 0xc8e1, 0x1, 0x0);
        gbc.writeMem(0x8027, { 0x0, 0x0 });
        gbc.writeMem(0xd7cd, { 0xc5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8027, gbc.sp());
        EXPECT(0xd7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8027));
        EXPECT(0x8f, gbc.readMem(0x8028));
        EXPECT(0xc5, gbc.readMem(0xd7cd));
        // C5 005F
        gbc.setState(0xc655, 0xce78, 0x4720, 0x64a8, 0x4641, 0xc557, 0x1, 0x0);
        gbc.writeMem(0xc655, { 0xc5 });
        gbc.writeMem(0xce76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xce76, gbc.sp());
        EXPECT(0xc656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc655));
        EXPECT(0xa8, gbc.readMem(0xce76));
        EXPECT(0x64, gbc.readMem(0xce77));
        // C5 0062
        gbc.setState(0x6e79, 0xcc03, 0x460, 0x60c6, 0xff1a, 0x35a1, 0x1, 0x1);
        gbc.writeMem(0x6e79, { 0xc5 });
        gbc.writeMem(0xcc01, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0x6e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcc01));
        EXPECT(0x60, gbc.readMem(0xcc02));
        // C5 0063
        gbc.setState(0xe9b3, 0xe66c, 0x50f0, 0x7c2e, 0xbb84, 0xf140, 0x0, 0x1);
        gbc.writeMem(0xe66a, { 0x0, 0x0 });
        gbc.writeMem(0xe9b3, { 0xc5 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe66a, gbc.sp());
        EXPECT(0xe9b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xe66a));
        EXPECT(0x7c, gbc.readMem(0xe66b));
        EXPECT(0xc5, gbc.readMem(0xe9b3));
        // C5 0065
        gbc.setState(0x5cba, 0xbd2e, 0xab80, 0x15ec, 0xdd36, 0x8602, 0x0, 0x0);
        gbc.writeMem(0x5cba, { 0xc5 });
        gbc.writeMem(0xbd2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xbd2c, gbc.sp());
        EXPECT(0x5cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xbd2c));
        EXPECT(0x15, gbc.readMem(0xbd2d));
        // C5 0066
        gbc.setState(0x216d, 0xe8aa, 0x1a70, 0x3565, 0x188b, 0x5d60, 0x1, 0x0);
        gbc.writeMem(0x216d, { 0xc5 });
        gbc.writeMem(0xe8a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe8a8, gbc.sp());
        EXPECT(0x216e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe8a8));
        EXPECT(0x35, gbc.readMem(0xe8a9));
        // C5 006C
        gbc.setState(0x74a4, 0x8d2f, 0xafa0, 0xdfd4, 0x2ed9, 0x6ad8, 0x0, 0x1);
        gbc.writeMem(0x74a4, { 0xc5 });
        gbc.writeMem(0x8d2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8d2d, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x8d2d));
        EXPECT(0xdf, gbc.readMem(0x8d2e));
        // C5 0072
        gbc.setState(0x34d0, 0xf8be, 0xc5b0, 0xaf8c, 0x1ffa, 0x7e3d, 0x1, 0x1);
        gbc.writeMem(0x34d0, { 0xc5 });
        gbc.writeMem(0xf8bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf8bc, gbc.sp());
        EXPECT(0x34d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xf8bc));
        EXPECT(0xaf, gbc.readMem(0xf8bd));
        // C5 0073
        gbc.setState(0xe6eb, 0x8192, 0xcdd0, 0xdb2e, 0xe110, 0x4a89, 0x1, 0x0);
        gbc.writeMem(0x8190, { 0x0, 0x0 });
        gbc.writeMem(0xe6eb, { 0xc5 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8190, gbc.sp());
        EXPECT(0xe6ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0x8190));
        EXPECT(0xdb, gbc.readMem(0x8191));
        EXPECT(0xc5, gbc.readMem(0xe6eb));
        // C5 0074
        gbc.setState(0x308e, 0x9cd9, 0x1ad0, 0x6c41, 0x49a1, 0xfc18, 0x0, 0x1);
        gbc.writeMem(0x308e, { 0xc5 });
        gbc.writeMem(0x9cd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9cd7, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0x9cd7));
        EXPECT(0x6c, gbc.readMem(0x9cd8));
        // C5 0078
        gbc.setState(0xca89, 0xbbf5, 0xebe0, 0x27d0, 0x5757, 0x8722, 0x1, 0x1);
        gbc.writeMem(0xbbf3, { 0x0, 0x0 });
        gbc.writeMem(0xca89, { 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbbf3, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xbbf3));
        EXPECT(0x27, gbc.readMem(0xbbf4));
        EXPECT(0xc5, gbc.readMem(0xca89));
        // C5 007A
        gbc.setState(0x2eca, 0xf729, 0x8b10, 0x867e, 0xade1, 0xb471, 0x0, 0x0);
        gbc.writeMem(0x2eca, { 0xc5 });
        gbc.writeMem(0xf727, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf727, gbc.sp());
        EXPECT(0x2ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xf727));
        EXPECT(0x86, gbc.readMem(0xf728));
        // C5 007B
        gbc.setState(0xee79, 0xe548, 0xd750, 0x78f6, 0x631, 0x7ca8, 0x0, 0x1);
        gbc.writeMem(0xe546, { 0x0, 0x0 });
        gbc.writeMem(0xee79, { 0xc5 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe546, gbc.sp());
        EXPECT(0xee7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xe546));
        EXPECT(0x78, gbc.readMem(0xe547));
        EXPECT(0xc5, gbc.readMem(0xee79));
        // C5 007C
        gbc.setState(0xc25, 0xa578, 0x1a10, 0x66d4, 0x8b59, 0x7232, 0x0, 0x1);
        gbc.writeMem(0xc25, { 0xc5 });
        gbc.writeMem(0xa576, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa576, gbc.sp());
        EXPECT(0xc26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xa576));
        EXPECT(0x66, gbc.readMem(0xa577));
        // C5 007E
        gbc.setState(0x9e27, 0xee76, 0xb410, 0x996, 0x4244, 0x83bb, 0x1, 0x0);
        gbc.writeMem(0x9e27, { 0xc5 });
        gbc.writeMem(0xee74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee74, gbc.sp());
        EXPECT(0x9e28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9e27));
        EXPECT(0x96, gbc.readMem(0xee74));
        EXPECT(0x9, gbc.readMem(0xee75));
        // C5 007F
        gbc.setState(0xfc1, 0xd5e3, 0xa90, 0xc529, 0x8f1, 0x7b70, 0x1, 0x0);
        gbc.writeMem(0xfc1, { 0xc5 });
        gbc.writeMem(0xd5e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd5e1, gbc.sp());
        EXPECT(0xfc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd5e1));
        EXPECT(0xc5, gbc.readMem(0xd5e2));
        // C5 0080
        gbc.setState(0x7d49, 0xaa9f, 0x8a60, 0x9289, 0x3745, 0x7f13, 0x1, 0x0);
        gbc.writeMem(0x7d49, { 0xc5 });
        gbc.writeMem(0xaa9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xaa9d, gbc.sp());
        EXPECT(0x7d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xaa9d));
        EXPECT(0x92, gbc.readMem(0xaa9e));
        // C5 0082
        gbc.setState(0x54ac, 0xf579, 0x8b90, 0xa24b, 0x89a, 0xa52a, 0x0, 0x0);
        gbc.writeMem(0x54ac, { 0xc5 });
        gbc.writeMem(0xf577, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf577, gbc.sp());
        EXPECT(0x54ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xf577));
        EXPECT(0xa2, gbc.readMem(0xf578));
        // C5 0083
        gbc.setState(0xd29, 0xecf1, 0x4db0, 0x4aa5, 0xb7ed, 0x7411, 0x1, 0x0);
        gbc.writeMem(0xd29, { 0xc5 });
        gbc.writeMem(0xecef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xecef, gbc.sp());
        EXPECT(0xd2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xecef));
        EXPECT(0x4a, gbc.readMem(0xecf0));
        // C5 0087
        gbc.setState(0xe70d, 0xafa8, 0x7b90, 0x92b6, 0x518d, 0x774, 0x0, 0x0);
        gbc.writeMem(0xafa6, { 0x0, 0x0 });
        gbc.writeMem(0xe70d, { 0xc5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xafa6, gbc.sp());
        EXPECT(0xe70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xafa6));
        EXPECT(0x92, gbc.readMem(0xafa7));
        EXPECT(0xc5, gbc.readMem(0xe70d));
        // C5 008A
        gbc.setState(0x3d6b, 0xf41b, 0x7140, 0x1fbb, 0x19c6, 0x2191, 0x1, 0x0);
        gbc.writeMem(0x3d6b, { 0xc5 });
        gbc.writeMem(0xf419, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf419, gbc.sp());
        EXPECT(0x3d6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xf419));
        EXPECT(0x1f, gbc.readMem(0xf41a));
        // C5 008C
        gbc.setState(0x3b2, 0x8499, 0xf600, 0x14de, 0x5176, 0xdb5f, 0x1, 0x1);
        gbc.writeMem(0x3b2, { 0xc5 });
        gbc.writeMem(0x8497, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8497, gbc.sp());
        EXPECT(0x3b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x8497));
        EXPECT(0x14, gbc.readMem(0x8498));
        // C5 0091
        gbc.setState(0x70a6, 0xcb83, 0xafd0, 0xa557, 0x2e2c, 0xd086, 0x0, 0x0);
        gbc.writeMem(0x70a6, { 0xc5 });
        gbc.writeMem(0xcb81, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcb81, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xcb81));
        EXPECT(0xa5, gbc.readMem(0xcb82));
        // C5 0092
        gbc.setState(0x1f8b, 0xf625, 0xb850, 0x58cc, 0x9b4a, 0x4762, 0x0, 0x0);
        gbc.writeMem(0x1f8b, { 0xc5 });
        gbc.writeMem(0xf623, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf623, gbc.sp());
        EXPECT(0x1f8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xf623));
        EXPECT(0x58, gbc.readMem(0xf624));
        // C5 0093
        gbc.setState(0x7e98, 0xcf40, 0x6e30, 0x3660, 0x5e3f, 0x82d6, 0x1, 0x1);
        gbc.writeMem(0x7e98, { 0xc5 });
        gbc.writeMem(0xcf3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcf3e, gbc.sp());
        EXPECT(0x7e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xcf3e));
        EXPECT(0x36, gbc.readMem(0xcf3f));
        // C5 0097
        gbc.setState(0x5350, 0x8fe1, 0xb0c0, 0x80c8, 0x49e3, 0x456, 0x1, 0x1);
        gbc.writeMem(0x5350, { 0xc5 });
        gbc.writeMem(0x8fdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8fdf, gbc.sp());
        EXPECT(0x5351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x8fdf));
        EXPECT(0x80, gbc.readMem(0x8fe0));
        // C5 0098
        gbc.setState(0x5ec2, 0xef23, 0xf2b0, 0x5f7b, 0xdb03, 0x9a54, 0x1, 0x0);
        gbc.writeMem(0x5ec2, { 0xc5 });
        gbc.writeMem(0xef21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xef21, gbc.sp());
        EXPECT(0x5ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xef21));
        EXPECT(0x5f, gbc.readMem(0xef22));
        // C5 0099
        gbc.setState(0x7cd9, 0xff1f, 0xf3f0, 0xa433, 0x7d06, 0xdd7a, 0x0, 0x1);
        gbc.writeMem(0x7cd9, { 0xc5 });
        gbc.writeMem(0xff1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x7cda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xff1d));
        EXPECT(0xa4, gbc.readMem(0xff1e));
        // C5 009B
        gbc.setState(0x7186, 0xe34a, 0x1d40, 0x3714, 0x3f02, 0xe750, 0x0, 0x1);
        gbc.writeMem(0x7186, { 0xc5 });
        gbc.writeMem(0xe348, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe348, gbc.sp());
        EXPECT(0x7187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xe348));
        EXPECT(0x37, gbc.readMem(0xe349));
        // C5 009E
        gbc.setState(0x3399, 0x8a7b, 0xbac0, 0x6e19, 0xc29e, 0x7f67, 0x1, 0x0);
        gbc.writeMem(0x3399, { 0xc5 });
        gbc.writeMem(0x8a79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8a79, gbc.sp());
        EXPECT(0x339a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0x8a79));
        EXPECT(0x6e, gbc.readMem(0x8a7a));
        // C5 009F
        gbc.setState(0x2ebc, 0xdbe8, 0x71b0, 0x4055, 0x4832, 0x8c90, 0x0, 0x0);
        gbc.writeMem(0x2ebc, { 0xc5 });
        gbc.writeMem(0xdbe6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xdbe6, gbc.sp());
        EXPECT(0x2ebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xdbe6));
        EXPECT(0x40, gbc.readMem(0xdbe7));
        // C5 00A2
        gbc.setState(0x63c8, 0xf399, 0x5c90, 0x7275, 0xa406, 0x86b4, 0x0, 0x0);
        gbc.writeMem(0x63c8, { 0xc5 });
        gbc.writeMem(0xf397, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf397, gbc.sp());
        EXPECT(0x63c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xf397));
        EXPECT(0x72, gbc.readMem(0xf398));
        // C5 00A4
        gbc.setState(0x2e57, 0xd1b4, 0x1830, 0x4abb, 0x6749, 0x623d, 0x1, 0x0);
        gbc.writeMem(0x2e57, { 0xc5 });
        gbc.writeMem(0xd1b2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd1b2, gbc.sp());
        EXPECT(0x2e58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd1b2));
        EXPECT(0x4a, gbc.readMem(0xd1b3));
        // C5 00A6
        gbc.setState(0x655, 0xc544, 0xc560, 0x1718, 0x5166, 0x9aad, 0x0, 0x0);
        gbc.writeMem(0x655, { 0xc5 });
        gbc.writeMem(0xc542, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0x656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc542));
        EXPECT(0x17, gbc.readMem(0xc543));
        // C5 00AB
        gbc.setState(0x6c6e, 0xe08e, 0xb8c0, 0xc865, 0x19e8, 0xcb11, 0x1, 0x0);
        gbc.writeMem(0x6c6e, { 0xc5 });
        gbc.writeMem(0xe08c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe08c, gbc.sp());
        EXPECT(0x6c6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xe08c));
        EXPECT(0xc8, gbc.readMem(0xe08d));
        // C5 00AD
        gbc.setState(0xe186, 0x8639, 0x4a40, 0x95cb, 0x2184, 0xa1e2, 0x1, 0x1);
        gbc.writeMem(0x8637, { 0x0, 0x0 });
        gbc.writeMem(0xe186, { 0xc5 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8637, gbc.sp());
        EXPECT(0xe187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8637));
        EXPECT(0x95, gbc.readMem(0x8638));
        EXPECT(0xc5, gbc.readMem(0xe186));
        // C5 00AF
        gbc.setState(0xce40, 0xd30f, 0xebb0, 0x516b, 0x6d37, 0xe352, 0x0, 0x1);
        gbc.writeMem(0xce40, { 0xc5 });
        gbc.writeMem(0xd30d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd30d, gbc.sp());
        EXPECT(0xce41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xce40));
        EXPECT(0x6b, gbc.readMem(0xd30d));
        EXPECT(0x51, gbc.readMem(0xd30e));
        // C5 00B0
        gbc.setState(0xda33, 0xc478, 0xa000, 0x16e1, 0xcba6, 0x8ebe, 0x1, 0x1);
        gbc.writeMem(0xc476, { 0x0, 0x0 });
        gbc.writeMem(0xda33, { 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc476, gbc.sp());
        EXPECT(0xda34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xc476));
        EXPECT(0x16, gbc.readMem(0xc477));
        EXPECT(0xc5, gbc.readMem(0xda33));
        // C5 00B3
        gbc.setState(0x54dd, 0xe06e, 0xb1d0, 0xec0b, 0x6f34, 0x8543, 0x1, 0x1);
        gbc.writeMem(0x54dd, { 0xc5 });
        gbc.writeMem(0xe06c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe06c, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe06c));
        EXPECT(0xec, gbc.readMem(0xe06d));
        // C5 00B4
        gbc.setState(0x69b5, 0xcbf3, 0x46c0, 0x7463, 0x4fc9, 0x1538, 0x1, 0x0);
        gbc.writeMem(0x69b5, { 0xc5 });
        gbc.writeMem(0xcbf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xcbf1, gbc.sp());
        EXPECT(0x69b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xcbf1));
        EXPECT(0x74, gbc.readMem(0xcbf2));
        // C5 00B5
        gbc.setState(0xda93, 0x971f, 0x61d0, 0x8d16, 0x6543, 0x511b, 0x0, 0x1);
        gbc.writeMem(0x971d, { 0x0, 0x0 });
        gbc.writeMem(0xda93, { 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x971d, gbc.sp());
        EXPECT(0xda94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x971d));
        EXPECT(0x8d, gbc.readMem(0x971e));
        EXPECT(0xc5, gbc.readMem(0xda93));
        // C5 00B6
        gbc.setState(0x3ce6, 0xfc35, 0xf5e0, 0x7da2, 0x7457, 0xf76, 0x1, 0x1);
        gbc.writeMem(0x3ce6, { 0xc5 });
        gbc.writeMem(0xfc33, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfc33, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xfc33));
        EXPECT(0x7d, gbc.readMem(0xfc34));
        // C5 00B7
        gbc.setState(0x77b6, 0x9d6d, 0xabc0, 0x93, 0xf812, 0xae44, 0x1, 0x1);
        gbc.writeMem(0x77b6, { 0xc5 });
        gbc.writeMem(0x9d6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9d6b, gbc.sp());
        EXPECT(0x77b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x9d6b));
        EXPECT(0x0, gbc.readMem(0x9d6c));
        // C5 00B8
        gbc.setState(0x2746, 0xc0c3, 0xc100, 0xade8, 0x82b9, 0xd7e6, 0x1, 0x0);
        gbc.writeMem(0x2746, { 0xc5 });
        gbc.writeMem(0xc0c1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xc0c1, gbc.sp());
        EXPECT(0x2747, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc0c1));
        EXPECT(0xad, gbc.readMem(0xc0c2));
        // C5 00B9
        gbc.setState(0x570c, 0xd972, 0xe680, 0x78f7, 0x180e, 0xbf42, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0xc5 });
        gbc.writeMem(0xd970, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd970, gbc.sp());
        EXPECT(0x570d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd970));
        EXPECT(0x78, gbc.readMem(0xd971));
        // C5 00BB
        gbc.setState(0x78f8, 0xfef8, 0x66a0, 0xebed, 0x72a0, 0x8cd3, 0x0, 0x0);
        gbc.writeMem(0x78f8, { 0xc5 });
        gbc.writeMem(0xfef6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xfef6, gbc.sp());
        EXPECT(0x78f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xfef6));
        EXPECT(0xeb, gbc.readMem(0xfef7));
        // C5 00BC
        gbc.setState(0x967b, 0xfb7b, 0xd5e0, 0x676b, 0x5fb8, 0x8e8e, 0x0, 0x0);
        gbc.writeMem(0x967b, { 0xc5 });
        gbc.writeMem(0xfb79, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfb79, gbc.sp());
        EXPECT(0x967c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x967b));
        EXPECT(0x6b, gbc.readMem(0xfb79));
        EXPECT(0x67, gbc.readMem(0xfb7a));
        // C5 00BF
        gbc.setState(0xb1ff, 0x9822, 0x2a90, 0x6b45, 0x4187, 0x9405, 0x1, 0x1);
        gbc.writeMem(0x9820, { 0x0, 0x0 });
        gbc.writeMem(0xb1ff, { 0xc5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9820, gbc.sp());
        EXPECT(0xb200, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x9820));
        EXPECT(0x6b, gbc.readMem(0x9821));
        EXPECT(0xc5, gbc.readMem(0xb1ff));
        // C5 00C0
        gbc.setState(0x4ce1, 0x8bcf, 0xba90, 0x5233, 0x947b, 0x6530, 0x1, 0x0);
        gbc.writeMem(0x4ce1, { 0xc5 });
        gbc.writeMem(0x8bcd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8bcd, gbc.sp());
        EXPECT(0x4ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x8bcd));
        EXPECT(0x52, gbc.readMem(0x8bce));
        // C5 00C1
        gbc.setState(0x69cd, 0xd646, 0x25c0, 0x989c, 0xda67, 0xb4c8, 0x1, 0x1);
        gbc.writeMem(0x69cd, { 0xc5 });
        gbc.writeMem(0xd644, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0x69ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0xd644));
        EXPECT(0x98, gbc.readMem(0xd645));
        // C5 00C2
        gbc.setState(0x2ad4, 0x8592, 0x5070, 0xaccc, 0xec82, 0x555c, 0x0, 0x0);
        gbc.writeMem(0x2ad4, { 0xc5 });
        gbc.writeMem(0x8590, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8590, gbc.sp());
        EXPECT(0x2ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x8590));
        EXPECT(0xac, gbc.readMem(0x8591));
        // C5 00C3
        gbc.setState(0x4acc, 0xb62a, 0x590, 0x5253, 0xf8af, 0xf089, 0x1, 0x0);
        gbc.writeMem(0x4acc, { 0xc5 });
        gbc.writeMem(0xb628, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xb628, gbc.sp());
        EXPECT(0x4acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xb628));
        EXPECT(0x52, gbc.readMem(0xb629));
        // C5 00C9
        gbc.setState(0x3312, 0x9d19, 0xd360, 0x50e, 0xeddd, 0x879, 0x1, 0x1);
        gbc.writeMem(0x3312, { 0xc5 });
        gbc.writeMem(0x9d17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9d17, gbc.sp());
        EXPECT(0x3313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0x9d17));
        EXPECT(0x5, gbc.readMem(0x9d18));
        // C5 00CB
        gbc.setState(0x2164, 0xe66f, 0xf060, 0x6946, 0x7fa5, 0xcb1e, 0x0, 0x0);
        gbc.writeMem(0x2164, { 0xc5 });
        gbc.writeMem(0xe66d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe66d, gbc.sp());
        EXPECT(0x2165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe66d));
        EXPECT(0x69, gbc.readMem(0xe66e));
        // C5 00CF
        gbc.setState(0x2f41, 0xaa68, 0x4db0, 0xacd9, 0xa2f2, 0xd376, 0x0, 0x0);
        gbc.writeMem(0x2f41, { 0xc5 });
        gbc.writeMem(0xaa66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xaa66, gbc.sp());
        EXPECT(0x2f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaa66));
        EXPECT(0xac, gbc.readMem(0xaa67));
        // C5 00D6
        gbc.setState(0xa3, 0x9133, 0x30, 0xa2a7, 0xf797, 0xbd1d, 0x0, 0x0);
        gbc.writeMem(0xa3, { 0xc5 });
        gbc.writeMem(0x9131, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0xa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0x9131));
        EXPECT(0xa2, gbc.readMem(0x9132));
        // C5 00DB
        gbc.setState(0x1dae, 0xfb3f, 0x9180, 0xe22f, 0x4b4d, 0xf867, 0x0, 0x1);
        gbc.writeMem(0x1dae, { 0xc5 });
        gbc.writeMem(0xfb3d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0x1daf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfb3d));
        EXPECT(0xe2, gbc.readMem(0xfb3e));
        // C5 00DC
        gbc.setState(0x78c1, 0xab96, 0x130, 0xbba1, 0xcb6d, 0xa7f7, 0x0, 0x0);
        gbc.writeMem(0x78c1, { 0xc5 });
        gbc.writeMem(0xab94, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xab94, gbc.sp());
        EXPECT(0x78c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xab94));
        EXPECT(0xbb, gbc.readMem(0xab95));
        // C5 00DE
        gbc.setState(0xb770, 0xdd21, 0x3820, 0x4c5e, 0xe965, 0xd1c6, 0x0, 0x0);
        gbc.writeMem(0xb770, { 0xc5 });
        gbc.writeMem(0xdd1f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb770));
        EXPECT(0x5e, gbc.readMem(0xdd1f));
        EXPECT(0x4c, gbc.readMem(0xdd20));
        // C5 00E1
        gbc.setState(0xb9d8, 0xe619, 0x9470, 0x3e8b, 0xed18, 0xeaf0, 0x0, 0x1);
        gbc.writeMem(0xb9d8, { 0xc5 });
        gbc.writeMem(0xe617, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe617, gbc.sp());
        EXPECT(0xb9d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb9d8));
        EXPECT(0x8b, gbc.readMem(0xe617));
        EXPECT(0x3e, gbc.readMem(0xe618));
        // C5 00E2
        gbc.setState(0xda27, 0xde65, 0x43c0, 0x73a, 0xe27e, 0xb311, 0x1, 0x1);
        gbc.writeMem(0xda27, { 0xc5 });
        gbc.writeMem(0xde63, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xde63, gbc.sp());
        EXPECT(0xda28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xda27));
        EXPECT(0x3a, gbc.readMem(0xde63));
        EXPECT(0x7, gbc.readMem(0xde64));
        // C5 00E4
        gbc.setState(0x6784, 0xac89, 0xfc30, 0x43d6, 0x8eca, 0xb9b, 0x0, 0x1);
        gbc.writeMem(0x6784, { 0xc5 });
        gbc.writeMem(0xac87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xac87, gbc.sp());
        EXPECT(0x6785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xac87));
        EXPECT(0x43, gbc.readMem(0xac88));
        // C5 00E6
        gbc.setState(0x286f, 0xce9b, 0x63d0, 0xb3, 0xebdd, 0x2f9b, 0x0, 0x1);
        gbc.writeMem(0x286f, { 0xc5 });
        gbc.writeMem(0xce99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xce99, gbc.sp());
        EXPECT(0x2870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xce99));
        EXPECT(0x0, gbc.readMem(0xce9a));
        // C5 00E7
        gbc.setState(0x3e35, 0x84ae, 0x4d0, 0xd0f3, 0x7e56, 0xac99, 0x1, 0x1);
        gbc.writeMem(0x3e35, { 0xc5 });
        gbc.writeMem(0x84ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x3e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x84ac));
        EXPECT(0xd0, gbc.readMem(0x84ad));
        // C5 00E8
        gbc.setState(0x1142, 0xbc40, 0x3980, 0x2c10, 0xe8cf, 0x2fa2, 0x0, 0x0);
        gbc.writeMem(0x1142, { 0xc5 });
        gbc.writeMem(0xbc3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xbc3e, gbc.sp());
        EXPECT(0x1143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xbc3e));
        EXPECT(0x2c, gbc.readMem(0xbc3f));
        // C5 00E9
        gbc.setState(0xc114, 0xa8a1, 0x26d0, 0xd9f3, 0xe78c, 0xcfe, 0x1, 0x0);
        gbc.writeMem(0xa89f, { 0x0, 0x0 });
        gbc.writeMem(0xc114, { 0xc5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa89f, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xa89f));
        EXPECT(0xd9, gbc.readMem(0xa8a0));
        EXPECT(0xc5, gbc.readMem(0xc114));
        // C5 00EB
        gbc.setState(0x50a6, 0x9ee7, 0xf700, 0xeec3, 0xa305, 0x3a77, 0x1, 0x1);
        gbc.writeMem(0x50a6, { 0xc5 });
        gbc.writeMem(0x9ee5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9ee5, gbc.sp());
        EXPECT(0x50a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x9ee5));
        EXPECT(0xee, gbc.readMem(0x9ee6));
        // C5 00ED
        gbc.setState(0x7ea, 0xba22, 0xb930, 0x990, 0x6dc2, 0x925d, 0x0, 0x0);
        gbc.writeMem(0x7ea, { 0xc5 });
        gbc.writeMem(0xba20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x7eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xba20));
        EXPECT(0x9, gbc.readMem(0xba21));
        // C5 00EE
        gbc.setState(0x8653, 0x9b91, 0xc510, 0x34d7, 0x9724, 0xcb43, 0x0, 0x0);
        gbc.writeMem(0x8653, { 0xc5 });
        gbc.writeMem(0x9b8f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9b8f, gbc.sp());
        EXPECT(0x8654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8653));
        EXPECT(0xd7, gbc.readMem(0x9b8f));
        EXPECT(0x34, gbc.readMem(0x9b90));
        // C5 00EF
        gbc.setState(0xec9b, 0x856f, 0x2480, 0x7751, 0x794f, 0xc4be, 0x0, 0x1);
        gbc.writeMem(0x856d, { 0x0, 0x0 });
        gbc.writeMem(0xec9b, { 0xc5 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x856d, gbc.sp());
        EXPECT(0xec9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x856d));
        EXPECT(0x77, gbc.readMem(0x856e));
        EXPECT(0xc5, gbc.readMem(0xec9b));
        // C5 00F0
        gbc.setState(0xcbfb, 0x9fc0, 0xfbb0, 0xde98, 0xe30c, 0xda2b, 0x1, 0x1);
        gbc.writeMem(0x9fbe, { 0x0, 0x0 });
        gbc.writeMem(0xcbfb, { 0xc5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9fbe, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x9fbe));
        EXPECT(0xde, gbc.readMem(0x9fbf));
        EXPECT(0xc5, gbc.readMem(0xcbfb));
        // C5 00F3
        gbc.setState(0x307c, 0xbdb4, 0xacf0, 0x5c8b, 0x77b2, 0xc6cf, 0x0, 0x0);
        gbc.writeMem(0x307c, { 0xc5 });
        gbc.writeMem(0xbdb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbdb2, gbc.sp());
        EXPECT(0x307d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbdb2));
        EXPECT(0x5c, gbc.readMem(0xbdb3));
        // C5 00F4
        gbc.setState(0x7f66, 0xdb2f, 0x91b0, 0x9596, 0x9779, 0x7cc6, 0x0, 0x0);
        gbc.writeMem(0x7f66, { 0xc5 });
        gbc.writeMem(0xdb2d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xdb2d, gbc.sp());
        EXPECT(0x7f67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0xdb2d));
        EXPECT(0x95, gbc.readMem(0xdb2e));
        // C5 00F5
        gbc.setState(0xa0b6, 0x9734, 0xe5c0, 0x464e, 0x222a, 0xc1ac, 0x1, 0x1);
        gbc.writeMem(0x9732, { 0x0, 0x0 });
        gbc.writeMem(0xa0b6, { 0xc5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9732, gbc.sp());
        EXPECT(0xa0b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x9732));
        EXPECT(0x46, gbc.readMem(0x9733));
        EXPECT(0xc5, gbc.readMem(0xa0b6));
        // C5 00F6
        gbc.setState(0xb0f1, 0xdce2, 0x25d0, 0x2d58, 0xd933, 0xf49, 0x1, 0x0);
        gbc.writeMem(0xb0f1, { 0xc5 });
        gbc.writeMem(0xdce0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0xb0f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb0f1));
        EXPECT(0x58, gbc.readMem(0xdce0));
        EXPECT(0x2d, gbc.readMem(0xdce1));
        // C5 00FB
        gbc.setState(0x2bc0, 0xf85f, 0xc5d0, 0x193c, 0xac9b, 0x3491, 0x1, 0x1);
        gbc.writeMem(0x2bc0, { 0xc5 });
        gbc.writeMem(0xf85d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf85d, gbc.sp());
        EXPECT(0x2bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xf85d));
        EXPECT(0x19, gbc.readMem(0xf85e));
        // C5 00FC
        gbc.setState(0xc1aa, 0x888b, 0xcc00, 0x62ca, 0x22e6, 0x44d0, 0x1, 0x0);
        gbc.writeMem(0x8889, { 0x0, 0x0 });
        gbc.writeMem(0xc1aa, { 0xc5 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8889, gbc.sp());
        EXPECT(0xc1ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x8889));
        EXPECT(0x62, gbc.readMem(0x888a));
        EXPECT(0xc5, gbc.readMem(0xc1aa));
        // C5 00FE
        gbc.setState(0x537b, 0xc79e, 0x4160, 0x10cc, 0x34d3, 0x4406, 0x0, 0x1);
        gbc.writeMem(0x537b, { 0xc5 });
        gbc.writeMem(0xc79c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc79c, gbc.sp());
        EXPECT(0x537c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc79c));
        EXPECT(0x10, gbc.readMem(0xc79d));
        // C5 00FF
        gbc.setState(0x8120, 0x8d70, 0x4a10, 0xa305, 0x1c0b, 0x92b8, 0x0, 0x1);
        gbc.writeMem(0x8120, { 0xc5 });
        gbc.writeMem(0x8d6e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8d6e, gbc.sp());
        EXPECT(0x8121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8120));
        EXPECT(0x5, gbc.readMem(0x8d6e));
        EXPECT(0xa3, gbc.readMem(0x8d6f));
        // C5 0101
        gbc.setState(0x345a, 0xb723, 0x5a30, 0x2fa1, 0xd6f3, 0x9a70, 0x1, 0x1);
        gbc.writeMem(0x345a, { 0xc5 });
        gbc.writeMem(0xb721, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x345b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb721));
        EXPECT(0x2f, gbc.readMem(0xb722));
        // C5 0102
        gbc.setState(0xca71, 0xe7ba, 0xe020, 0x818d, 0xd986, 0x1788, 0x0, 0x0);
        gbc.writeMem(0xca71, { 0xc5 });
        gbc.writeMem(0xe7b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe7b8, gbc.sp());
        EXPECT(0xca72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xca71));
        EXPECT(0x8d, gbc.readMem(0xe7b8));
        EXPECT(0x81, gbc.readMem(0xe7b9));
        // C5 0106
        gbc.setState(0x4534, 0xef19, 0x7c0, 0xe332, 0xbee, 0xe278, 0x1, 0x0);
        gbc.writeMem(0x4534, { 0xc5 });
        gbc.writeMem(0xef17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xef17, gbc.sp());
        EXPECT(0x4535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xef17));
        EXPECT(0xe3, gbc.readMem(0xef18));
        // C5 0107
        gbc.setState(0x2442, 0xa06f, 0xa7c0, 0xe82c, 0xc624, 0x2a18, 0x1, 0x1);
        gbc.writeMem(0x2442, { 0xc5 });
        gbc.writeMem(0xa06d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0x2443, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa06d));
        EXPECT(0xe8, gbc.readMem(0xa06e));
        // C5 0109
        gbc.setState(0x67b0, 0xd8b6, 0x7910, 0xe88e, 0xbc2a, 0x1028, 0x0, 0x0);
        gbc.writeMem(0x67b0, { 0xc5 });
        gbc.writeMem(0xd8b4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd8b4, gbc.sp());
        EXPECT(0x67b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xd8b4));
        EXPECT(0xe8, gbc.readMem(0xd8b5));
        // C5 010B
        gbc.setState(0xb640, 0xb7d5, 0xfe0, 0x9fea, 0x53ec, 0xf8fe, 0x0, 0x0);
        gbc.writeMem(0xb640, { 0xc5 });
        gbc.writeMem(0xb7d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb7d3, gbc.sp());
        EXPECT(0xb641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb640));
        EXPECT(0xea, gbc.readMem(0xb7d3));
        EXPECT(0x9f, gbc.readMem(0xb7d4));
        // C5 010C
        gbc.setState(0x62a4, 0x9518, 0xf1a0, 0xa7f, 0x1433, 0xa9e4, 0x0, 0x0);
        gbc.writeMem(0x62a4, { 0xc5 });
        gbc.writeMem(0x9516, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9516, gbc.sp());
        EXPECT(0x62a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x9516));
        EXPECT(0xa, gbc.readMem(0x9517));
        // C5 010D
        gbc.setState(0xb67b, 0xe735, 0x1950, 0x2162, 0x3ea8, 0xac4, 0x0, 0x0);
        gbc.writeMem(0xb67b, { 0xc5 });
        gbc.writeMem(0xe733, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xe733, gbc.sp());
        EXPECT(0xb67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb67b));
        EXPECT(0x62, gbc.readMem(0xe733));
        EXPECT(0x21, gbc.readMem(0xe734));
        // C5 010E
        gbc.setState(0x6890, 0xeea0, 0xfa70, 0x8909, 0x542e, 0x1a15, 0x1, 0x1);
        gbc.writeMem(0x6890, { 0xc5 });
        gbc.writeMem(0xee9e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xee9e, gbc.sp());
        EXPECT(0x6891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xee9e));
        EXPECT(0x89, gbc.readMem(0xee9f));
        // C5 010F
        gbc.setState(0xf6f, 0xbbae, 0xc20, 0x3db4, 0x3413, 0x953, 0x0, 0x1);
        gbc.writeMem(0xf6f, { 0xc5 });
        gbc.writeMem(0xbbac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xbbac, gbc.sp());
        EXPECT(0xf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xbbac));
        EXPECT(0x3d, gbc.readMem(0xbbad));
        // C5 0114
        gbc.setState(0x3378, 0xb799, 0x8590, 0x9266, 0xe332, 0x33b9, 0x0, 0x1);
        gbc.writeMem(0x3378, { 0xc5 });
        gbc.writeMem(0xb797, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x3379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xb797));
        EXPECT(0x92, gbc.readMem(0xb798));
        // C5 0116
        gbc.setState(0x7cb8, 0x91de, 0x7da0, 0x380a, 0x629, 0xbac7, 0x1, 0x0);
        gbc.writeMem(0x7cb8, { 0xc5 });
        gbc.writeMem(0x91dc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x91dc, gbc.sp());
        EXPECT(0x7cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x91dc));
        EXPECT(0x38, gbc.readMem(0x91dd));
        // C5 0117
        gbc.setState(0xac1f, 0xbe6a, 0x9e10, 0x8479, 0x9b89, 0xc9b5, 0x0, 0x0);
        gbc.writeMem(0xac1f, { 0xc5 });
        gbc.writeMem(0xbe68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbe68, gbc.sp());
        EXPECT(0xac20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xac1f));
        EXPECT(0x79, gbc.readMem(0xbe68));
        EXPECT(0x84, gbc.readMem(0xbe69));
        // C5 0118
        gbc.setState(0xbe19, 0xc91a, 0x7ec0, 0x6317, 0x4c6f, 0x148d, 0x1, 0x0);
        gbc.writeMem(0xbe19, { 0xc5 });
        gbc.writeMem(0xc918, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0xbe1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbe19));
        EXPECT(0x17, gbc.readMem(0xc918));
        EXPECT(0x63, gbc.readMem(0xc919));
        // C5 0119
        gbc.setState(0x9044, 0x8675, 0xc440, 0x9470, 0xbe9c, 0x8e21, 0x1, 0x1);
        gbc.writeMem(0x8673, { 0x0, 0x0 });
        gbc.writeMem(0x9044, { 0xc5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8673, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x8673));
        EXPECT(0x94, gbc.readMem(0x8674));
        EXPECT(0xc5, gbc.readMem(0x9044));
        // C5 011C
        gbc.setState(0x832d, 0xf6d3, 0xbd90, 0x4c4c, 0xc5c7, 0xaa9e, 0x0, 0x1);
        gbc.writeMem(0x832d, { 0xc5 });
        gbc.writeMem(0xf6d1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf6d1, gbc.sp());
        EXPECT(0x832e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x832d));
        EXPECT(0x4c, gbc.readMem(0xf6d1));
        EXPECT(0x4c, gbc.readMem(0xf6d2));
        // C5 011D
        gbc.setState(0x9575, 0x834b, 0x6340, 0xe960, 0xd282, 0xbffa, 0x0, 0x0);
        gbc.writeMem(0x8349, { 0x0, 0x0 });
        gbc.writeMem(0x9575, { 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8349, gbc.sp());
        EXPECT(0x9576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x8349));
        EXPECT(0xe9, gbc.readMem(0x834a));
        EXPECT(0xc5, gbc.readMem(0x9575));
        // C5 011E
        gbc.setState(0xb8e8, 0xba18, 0x8b20, 0x967e, 0xca6e, 0xc847, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xc5 });
        gbc.writeMem(0xba16, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xba16, gbc.sp());
        EXPECT(0xb8e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb8e8));
        EXPECT(0x7e, gbc.readMem(0xba16));
        EXPECT(0x96, gbc.readMem(0xba17));
        // C5 0123
        gbc.setState(0x1371, 0xa25f, 0xd1c0, 0x9f8a, 0xd5e6, 0x3fd1, 0x1, 0x1);
        gbc.writeMem(0x1371, { 0xc5 });
        gbc.writeMem(0xa25d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa25d, gbc.sp());
        EXPECT(0x1372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xa25d));
        EXPECT(0x9f, gbc.readMem(0xa25e));
        // C5 0124
        gbc.setState(0x4be9, 0xa0c8, 0x2640, 0x59c2, 0x625b, 0xefda, 0x1, 0x1);
        gbc.writeMem(0x4be9, { 0xc5 });
        gbc.writeMem(0xa0c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa0c6, gbc.sp());
        EXPECT(0x4bea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xa0c6));
        EXPECT(0x59, gbc.readMem(0xa0c7));
        // C5 0125
        gbc.setState(0xa3c7, 0xded6, 0x8c30, 0xee59, 0xaad8, 0x963e, 0x1, 0x1);
        gbc.writeMem(0xa3c7, { 0xc5 });
        gbc.writeMem(0xded4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0xa3c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa3c7));
        EXPECT(0x59, gbc.readMem(0xded4));
        EXPECT(0xee, gbc.readMem(0xded5));
        // C5 0127
        gbc.setState(0x62e4, 0x8d85, 0xfd00, 0x8a30, 0x4c3a, 0x8fff, 0x0, 0x0);
        gbc.writeMem(0x62e4, { 0xc5 });
        gbc.writeMem(0x8d83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8d83, gbc.sp());
        EXPECT(0x62e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0x8d83));
        EXPECT(0x8a, gbc.readMem(0x8d84));
        // C5 0129
        gbc.setState(0x2d21, 0xd350, 0xa400, 0x6946, 0x83b3, 0xce97, 0x1, 0x1);
        gbc.writeMem(0x2d21, { 0xc5 });
        gbc.writeMem(0xd34e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xd34e, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xd34e));
        EXPECT(0x69, gbc.readMem(0xd34f));
        // C5 012C
        gbc.setState(0x7348, 0x803c, 0x1310, 0x98ef, 0xb000, 0x79ce, 0x1, 0x0);
        gbc.writeMem(0x7348, { 0xc5 });
        gbc.writeMem(0x803a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x803a, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0x803a));
        EXPECT(0x98, gbc.readMem(0x803b));
        // C5 012E
        gbc.setState(0xbf0c, 0x9248, 0xec60, 0x1ba9, 0xddfc, 0x41e9, 0x1, 0x0);
        gbc.writeMem(0x9246, { 0x0, 0x0 });
        gbc.writeMem(0xbf0c, { 0xc5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0xbf0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x9246));
        EXPECT(0x1b, gbc.readMem(0x9247));
        EXPECT(0xc5, gbc.readMem(0xbf0c));
        // C5 0131
        gbc.setState(0x234, 0x8b1f, 0xe760, 0xbd51, 0xc892, 0x7b8d, 0x1, 0x1);
        gbc.writeMem(0x234, { 0xc5 });
        gbc.writeMem(0x8b1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b1d, gbc.sp());
        EXPECT(0x235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8b1d));
        EXPECT(0xbd, gbc.readMem(0x8b1e));
        // C5 0132
        gbc.setState(0xa7e0, 0xc08d, 0x90a0, 0x8511, 0x4237, 0xb81c, 0x0, 0x1);
        gbc.writeMem(0xa7e0, { 0xc5 });
        gbc.writeMem(0xc08b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc08b, gbc.sp());
        EXPECT(0xa7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa7e0));
        EXPECT(0x11, gbc.readMem(0xc08b));
        EXPECT(0x85, gbc.readMem(0xc08c));
        // C5 0133
        gbc.setState(0xb37d, 0xd6c8, 0x7e90, 0x7cbe, 0x139, 0x14e7, 0x0, 0x1);
        gbc.writeMem(0xb37d, { 0xc5 });
        gbc.writeMem(0xd6c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd6c6, gbc.sp());
        EXPECT(0xb37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb37d));
        EXPECT(0xbe, gbc.readMem(0xd6c6));
        EXPECT(0x7c, gbc.readMem(0xd6c7));
        // C5 0135
        gbc.setState(0xc2b, 0xb919, 0x9220, 0x60d9, 0x9e0e, 0xe202, 0x1, 0x1);
        gbc.writeMem(0xc2b, { 0xc5 });
        gbc.writeMem(0xb917, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb917, gbc.sp());
        EXPECT(0xc2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xb917));
        EXPECT(0x60, gbc.readMem(0xb918));
        // C5 0138
        gbc.setState(0x1946, 0xf63a, 0x7170, 0xf948, 0x1aa1, 0x102a, 0x0, 0x0);
        gbc.writeMem(0x1946, { 0xc5 });
        gbc.writeMem(0xf638, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf638, gbc.sp());
        EXPECT(0x1947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf638));
        EXPECT(0xf9, gbc.readMem(0xf639));
        // C5 013B
        gbc.setState(0x6b6f, 0x8e2e, 0xe030, 0xa75a, 0xc0df, 0x761e, 0x0, 0x1);
        gbc.writeMem(0x6b6f, { 0xc5 });
        gbc.writeMem(0x8e2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8e2c, gbc.sp());
        EXPECT(0x6b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8e2c));
        EXPECT(0xa7, gbc.readMem(0x8e2d));
        // C5 013D
        gbc.setState(0x8529, 0xf596, 0x6b30, 0x42aa, 0x77bd, 0x5e96, 0x1, 0x0);
        gbc.writeMem(0x8529, { 0xc5 });
        gbc.writeMem(0xf594, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0x852a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8529));
        EXPECT(0xaa, gbc.readMem(0xf594));
        EXPECT(0x42, gbc.readMem(0xf595));
        // C5 0140
        gbc.setState(0x875f, 0x8e9d, 0x23b0, 0xcfba, 0xbf0a, 0x4d6e, 0x0, 0x1);
        gbc.writeMem(0x875f, { 0xc5 });
        gbc.writeMem(0x8e9b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8e9b, gbc.sp());
        EXPECT(0x8760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x875f));
        EXPECT(0xba, gbc.readMem(0x8e9b));
        EXPECT(0xcf, gbc.readMem(0x8e9c));
        // C5 0141
        gbc.setState(0x480b, 0xf76a, 0xfe90, 0xd3c0, 0x40c3, 0xd76a, 0x0, 0x0);
        gbc.writeMem(0x480b, { 0xc5 });
        gbc.writeMem(0xf768, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf768, gbc.sp());
        EXPECT(0x480c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf768));
        EXPECT(0xd3, gbc.readMem(0xf769));
        // C5 0142
        gbc.setState(0xe5e8, 0xd5ce, 0x61e0, 0xd310, 0x814, 0x253d, 0x1, 0x1);
        gbc.writeMem(0xd5cc, { 0x0, 0x0 });
        gbc.writeMem(0xe5e8, { 0xc5 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd5cc, gbc.sp());
        EXPECT(0xe5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xd5cc));
        EXPECT(0xd3, gbc.readMem(0xd5cd));
        EXPECT(0xc5, gbc.readMem(0xe5e8));
        // C5 0143
        gbc.setState(0xd8cb, 0xd6b6, 0xeb80, 0xd6c, 0x831f, 0xd78f, 0x1, 0x1);
        gbc.writeMem(0xd6b4, { 0x0, 0x0 });
        gbc.writeMem(0xd8cb, { 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0xd8cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xd6b4));
        EXPECT(0xd, gbc.readMem(0xd6b5));
        EXPECT(0xc5, gbc.readMem(0xd8cb));
        // C5 0145
        gbc.setState(0x7ece, 0xc4c2, 0x52b0, 0x6192, 0x4f3e, 0xb8ac, 0x0, 0x1);
        gbc.writeMem(0x7ece, { 0xc5 });
        gbc.writeMem(0xc4c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc4c0, gbc.sp());
        EXPECT(0x7ecf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc4c0));
        EXPECT(0x61, gbc.readMem(0xc4c1));
        // C5 0147
        gbc.setState(0x6895, 0xb0e9, 0x9a80, 0x6b85, 0xbe8b, 0xc17f, 0x1, 0x0);
        gbc.writeMem(0x6895, { 0xc5 });
        gbc.writeMem(0xb0e7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb0e7, gbc.sp());
        EXPECT(0x6896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xb0e7));
        EXPECT(0x6b, gbc.readMem(0xb0e8));
        // C5 0148
        gbc.setState(0xe078, 0xfc22, 0xf3c0, 0x85f8, 0x754f, 0xc18f, 0x0, 0x0);
        gbc.writeMem(0xe078, { 0xc5 });
        gbc.writeMem(0xfc20, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfc20, gbc.sp());
        EXPECT(0xe079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe078));
        EXPECT(0xf8, gbc.readMem(0xfc20));
        EXPECT(0x85, gbc.readMem(0xfc21));
        // C5 014A
        gbc.setState(0x2d49, 0xa594, 0x5fc0, 0xccf6, 0x6bb4, 0x2163, 0x1, 0x0);
        gbc.writeMem(0x2d49, { 0xc5 });
        gbc.writeMem(0xa592, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x2d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xa592));
        EXPECT(0xcc, gbc.readMem(0xa593));
        // C5 014B
        gbc.setState(0x6771, 0xa17b, 0xea40, 0x452, 0x16f8, 0x1145, 0x1, 0x0);
        gbc.writeMem(0x6771, { 0xc5 });
        gbc.writeMem(0xa179, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xa179, gbc.sp());
        EXPECT(0x6772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa179));
        EXPECT(0x4, gbc.readMem(0xa17a));
        // C5 014C
        gbc.setState(0x9b4c, 0xc42b, 0xba40, 0xf051, 0x2d35, 0x5da1, 0x0, 0x0);
        gbc.writeMem(0x9b4c, { 0xc5 });
        gbc.writeMem(0xc429, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc429, gbc.sp());
        EXPECT(0x9b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9b4c));
        EXPECT(0x51, gbc.readMem(0xc429));
        EXPECT(0xf0, gbc.readMem(0xc42a));
        // C5 014D
        gbc.setState(0x358a, 0xd26e, 0x7910, 0x9eb4, 0x2aa6, 0xfe3d, 0x1, 0x0);
        gbc.writeMem(0x358a, { 0xc5 });
        gbc.writeMem(0xd26c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd26c, gbc.sp());
        EXPECT(0x358b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd26c));
        EXPECT(0x9e, gbc.readMem(0xd26d));
        // C5 014F
        gbc.setState(0xe563, 0x9254, 0xab40, 0xec9e, 0xd35b, 0xde65, 0x1, 0x0);
        gbc.writeMem(0x9252, { 0x0, 0x0 });
        gbc.writeMem(0xe563, { 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x9252, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9252));
        EXPECT(0xec, gbc.readMem(0x9253));
        EXPECT(0xc5, gbc.readMem(0xe563));
        // C5 0151
        gbc.setState(0xc0d3, 0xda73, 0x6a20, 0xb9bf, 0x133f, 0x1218, 0x1, 0x0);
        gbc.writeMem(0xc0d3, { 0xc5 });
        gbc.writeMem(0xda71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xda71, gbc.sp());
        EXPECT(0xc0d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc0d3));
        EXPECT(0xbf, gbc.readMem(0xda71));
        EXPECT(0xb9, gbc.readMem(0xda72));
        // C5 0152
        gbc.setState(0x7fea, 0xf978, 0x8900, 0x19c0, 0x5501, 0x64a, 0x0, 0x1);
        gbc.writeMem(0x7fea, { 0xc5 });
        gbc.writeMem(0xf976, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf976, gbc.sp());
        EXPECT(0x7feb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xf976));
        EXPECT(0x19, gbc.readMem(0xf977));
        // C5 0153
        gbc.setState(0xb9a0, 0x948c, 0x80a0, 0xe627, 0x50e8, 0x19c, 0x1, 0x1);
        gbc.writeMem(0x948a, { 0x0, 0x0 });
        gbc.writeMem(0xb9a0, { 0xc5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x948a, gbc.sp());
        EXPECT(0xb9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x948a));
        EXPECT(0xe6, gbc.readMem(0x948b));
        EXPECT(0xc5, gbc.readMem(0xb9a0));
        // C5 0154
        gbc.setState(0x26e7, 0x82ec, 0x7360, 0x1200, 0xc92c, 0x386f, 0x1, 0x0);
        gbc.writeMem(0x26e7, { 0xc5 });
        gbc.writeMem(0x82ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x82ea, gbc.sp());
        EXPECT(0x26e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x82ea));
        EXPECT(0x12, gbc.readMem(0x82eb));
        // C5 0156
        gbc.setState(0x428c, 0xafa7, 0xc7f0, 0x24e7, 0xe87, 0xc3ed, 0x0, 0x1);
        gbc.writeMem(0x428c, { 0xc5 });
        gbc.writeMem(0xafa5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xafa5, gbc.sp());
        EXPECT(0x428d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xafa5));
        EXPECT(0x24, gbc.readMem(0xafa6));
        // C5 0158
        gbc.setState(0x7f0e, 0xecd7, 0x56a0, 0x8c57, 0x45e7, 0x60ad, 0x0, 0x0);
        gbc.writeMem(0x7f0e, { 0xc5 });
        gbc.writeMem(0xecd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xecd5, gbc.sp());
        EXPECT(0x7f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xecd5));
        EXPECT(0x8c, gbc.readMem(0xecd6));
        // C5 0159
        gbc.setState(0x7b77, 0x9a2e, 0xa830, 0x364a, 0xec08, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x7b77, { 0xc5 });
        gbc.writeMem(0x9a2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x7b78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9a2c));
        EXPECT(0x36, gbc.readMem(0x9a2d));
        // C5 015C
        gbc.setState(0xe613, 0x8860, 0xf030, 0x7dbd, 0x1253, 0x181d, 0x0, 0x1);
        gbc.writeMem(0x885e, { 0x0, 0x0 });
        gbc.writeMem(0xe613, { 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0xe614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x885e));
        EXPECT(0x7d, gbc.readMem(0x885f));
        EXPECT(0xc5, gbc.readMem(0xe613));
        // C5 015E
        gbc.setState(0x37c8, 0xd2a4, 0xab60, 0xe38d, 0x7310, 0xcf56, 0x1, 0x0);
        gbc.writeMem(0x37c8, { 0xc5 });
        gbc.writeMem(0xd2a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd2a2, gbc.sp());
        EXPECT(0x37c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xd2a2));
        EXPECT(0xe3, gbc.readMem(0xd2a3));
        // C5 015F
        gbc.setState(0x4d15, 0xe4ee, 0xdb60, 0xdb3, 0x5b3d, 0xae74, 0x1, 0x0);
        gbc.writeMem(0x4d15, { 0xc5 });
        gbc.writeMem(0xe4ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xe4ec, gbc.sp());
        EXPECT(0x4d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xe4ec));
        EXPECT(0xd, gbc.readMem(0xe4ed));
        // C5 0165
        gbc.setState(0x271, 0xb7dc, 0xe500, 0x5705, 0x9e64, 0xbf10, 0x0, 0x0);
        gbc.writeMem(0x271, { 0xc5 });
        gbc.writeMem(0xb7da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb7da, gbc.sp());
        EXPECT(0x272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb7da));
        EXPECT(0x57, gbc.readMem(0xb7db));
        // C5 0168
        gbc.setState(0x1437, 0xf71c, 0xc360, 0x49bd, 0x218b, 0xb0ea, 0x1, 0x1);
        gbc.writeMem(0x1437, { 0xc5 });
        gbc.writeMem(0xf71a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf71a, gbc.sp());
        EXPECT(0x1438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xf71a));
        EXPECT(0x49, gbc.readMem(0xf71b));
        // C5 0169
        gbc.setState(0x2, 0x93ae, 0x810, 0xbb08, 0xa967, 0xb7e4, 0x1, 0x0);
        gbc.writeMem(0x2, { 0xc5 });
        gbc.writeMem(0x93ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x93ac, gbc.sp());
        EXPECT(0x3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x93ac));
        EXPECT(0xbb, gbc.readMem(0x93ad));
        // C5 016A
        gbc.setState(0xb081, 0x9a79, 0x2550, 0x6b9, 0x4d95, 0x84b2, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0x0, 0x0 });
        gbc.writeMem(0xb081, { 0xc5 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9a77, gbc.sp());
        EXPECT(0xb082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9a77));
        EXPECT(0x6, gbc.readMem(0x9a78));
        EXPECT(0xc5, gbc.readMem(0xb081));
        // C5 016B
        gbc.setState(0xbc43, 0xddf9, 0x3ac0, 0x8d33, 0x714e, 0xb9de, 0x0, 0x0);
        gbc.writeMem(0xbc43, { 0xc5 });
        gbc.writeMem(0xddf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xddf7, gbc.sp());
        EXPECT(0xbc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbc43));
        EXPECT(0x33, gbc.readMem(0xddf7));
        EXPECT(0x8d, gbc.readMem(0xddf8));
        // C5 016D
        gbc.setState(0x99a5, 0xdbf5, 0xfbd0, 0x2b86, 0x9eb7, 0x5a61, 0x0, 0x0);
        gbc.writeMem(0x99a5, { 0xc5 });
        gbc.writeMem(0xdbf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdbf3, gbc.sp());
        EXPECT(0x99a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x99a5));
        EXPECT(0x86, gbc.readMem(0xdbf3));
        EXPECT(0x2b, gbc.readMem(0xdbf4));
        // C5 0171
        gbc.setState(0x8e98, 0x89e6, 0x40f0, 0x285e, 0xffca, 0x61e8, 0x0, 0x1);
        gbc.writeMem(0x89e4, { 0x0, 0x0 });
        gbc.writeMem(0x8e98, { 0xc5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x89e4, gbc.sp());
        EXPECT(0x8e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x89e4));
        EXPECT(0x28, gbc.readMem(0x89e5));
        EXPECT(0xc5, gbc.readMem(0x8e98));
        // C5 0175
        gbc.setState(0x9ba4, 0xe546, 0x3110, 0x73fc, 0x3ef3, 0xc1a7, 0x1, 0x0);
        gbc.writeMem(0x9ba4, { 0xc5 });
        gbc.writeMem(0xe544, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe544, gbc.sp());
        EXPECT(0x9ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9ba4));
        EXPECT(0xfc, gbc.readMem(0xe544));
        EXPECT(0x73, gbc.readMem(0xe545));
        // C5 0176
        gbc.setState(0x9354, 0xc907, 0x1430, 0xa00b, 0x4f02, 0xdc7e, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xc5 });
        gbc.writeMem(0xc905, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0x9355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9354));
        EXPECT(0xb, gbc.readMem(0xc905));
        EXPECT(0xa0, gbc.readMem(0xc906));
        // C5 0177
        gbc.setState(0xe8a7, 0xf52d, 0x8010, 0x7fd0, 0x2e86, 0xeccd, 0x0, 0x0);
        gbc.writeMem(0xe8a7, { 0xc5 });
        gbc.writeMem(0xf52b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf52b, gbc.sp());
        EXPECT(0xe8a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe8a7));
        EXPECT(0xd0, gbc.readMem(0xf52b));
        EXPECT(0x7f, gbc.readMem(0xf52c));
        // C5 017A
        gbc.setState(0x5934, 0xf8fa, 0xf680, 0x3df6, 0xf4fd, 0xe2c5, 0x1, 0x1);
        gbc.writeMem(0x5934, { 0xc5 });
        gbc.writeMem(0xf8f8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf8f8, gbc.sp());
        EXPECT(0x5935, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xf8f8));
        EXPECT(0x3d, gbc.readMem(0xf8f9));
        // C5 017B
        gbc.setState(0xab3d, 0xa2f9, 0x14e0, 0x2e04, 0x641f, 0x7753, 0x0, 0x1);
        gbc.writeMem(0xa2f7, { 0x0, 0x0 });
        gbc.writeMem(0xab3d, { 0xc5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa2f7, gbc.sp());
        EXPECT(0xab3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xa2f7));
        EXPECT(0x2e, gbc.readMem(0xa2f8));
        EXPECT(0xc5, gbc.readMem(0xab3d));
        // C5 017C
        gbc.setState(0xdcb0, 0xd6d4, 0xd090, 0x77b5, 0x9399, 0x9e29, 0x1, 0x0);
        gbc.writeMem(0xd6d2, { 0x0, 0x0 });
        gbc.writeMem(0xdcb0, { 0xc5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd6d2, gbc.sp());
        EXPECT(0xdcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xd6d2));
        EXPECT(0x77, gbc.readMem(0xd6d3));
        EXPECT(0xc5, gbc.readMem(0xdcb0));
        // C5 017D
        gbc.setState(0xdc70, 0xdf4d, 0x4f00, 0x4a7a, 0x39d9, 0x915d, 0x1, 0x1);
        gbc.writeMem(0xdc70, { 0xc5 });
        gbc.writeMem(0xdf4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdf4b, gbc.sp());
        EXPECT(0xdc71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdc70));
        EXPECT(0x7a, gbc.readMem(0xdf4b));
        EXPECT(0x4a, gbc.readMem(0xdf4c));
        // C5 0181
        gbc.setState(0x41fd, 0xe63a, 0x6560, 0xb8c9, 0xa773, 0x562f, 0x0, 0x0);
        gbc.writeMem(0x41fd, { 0xc5 });
        gbc.writeMem(0xe638, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xe638, gbc.sp());
        EXPECT(0x41fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe638));
        EXPECT(0xb8, gbc.readMem(0xe639));
        // C5 0184
        gbc.setState(0x3e99, 0xe759, 0x3720, 0x521c, 0x15b6, 0x5ed5, 0x1, 0x1);
        gbc.writeMem(0x3e99, { 0xc5 });
        gbc.writeMem(0xe757, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xe757, gbc.sp());
        EXPECT(0x3e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xe757));
        EXPECT(0x52, gbc.readMem(0xe758));
        // C5 0185
        gbc.setState(0x8a56, 0xeb51, 0x9070, 0xf46d, 0x4511, 0x9f4, 0x1, 0x0);
        gbc.writeMem(0x8a56, { 0xc5 });
        gbc.writeMem(0xeb4f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xeb4f, gbc.sp());
        EXPECT(0x8a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8a56));
        EXPECT(0x6d, gbc.readMem(0xeb4f));
        EXPECT(0xf4, gbc.readMem(0xeb50));
        // C5 0186
        gbc.setState(0x46fb, 0xa91d, 0xd820, 0x1572, 0x4c41, 0x1c34, 0x1, 0x0);
        gbc.writeMem(0x46fb, { 0xc5 });
        gbc.writeMem(0xa91b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa91b, gbc.sp());
        EXPECT(0x46fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xa91b));
        EXPECT(0x15, gbc.readMem(0xa91c));
        // C5 0187
        gbc.setState(0x3af8, 0xb466, 0x520, 0xbde6, 0xbed3, 0x814d, 0x1, 0x1);
        gbc.writeMem(0x3af8, { 0xc5 });
        gbc.writeMem(0xb464, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xb464, gbc.sp());
        EXPECT(0x3af9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xb464));
        EXPECT(0xbd, gbc.readMem(0xb465));
        // C5 0188
        gbc.setState(0x1334, 0xba0d, 0xce80, 0x77a8, 0xbd8, 0x3fa, 0x1, 0x0);
        gbc.writeMem(0x1334, { 0xc5 });
        gbc.writeMem(0xba0b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xba0b, gbc.sp());
        EXPECT(0x1335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xba0b));
        EXPECT(0x77, gbc.readMem(0xba0c));
        // C5 0189
        gbc.setState(0x60e, 0xe359, 0x3f20, 0xc8a3, 0xc16e, 0xf7f3, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0xc5 });
        gbc.writeMem(0xe357, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe357, gbc.sp());
        EXPECT(0x60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe357));
        EXPECT(0xc8, gbc.readMem(0xe358));
        // C5 018C
        gbc.setState(0xe355, 0x976b, 0x3e70, 0xac1, 0x512b, 0x563a, 0x1, 0x1);
        gbc.writeMem(0x9769, { 0x0, 0x0 });
        gbc.writeMem(0xe355, { 0xc5 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9769, gbc.sp());
        EXPECT(0xe356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9769));
        EXPECT(0xa, gbc.readMem(0x976a));
        EXPECT(0xc5, gbc.readMem(0xe355));
        // C5 018E
        gbc.setState(0x8234, 0xb392, 0xdd00, 0x4f47, 0xf665, 0xad7a, 0x0, 0x1);
        gbc.writeMem(0x8234, { 0xc5 });
        gbc.writeMem(0xb390, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb390, gbc.sp());
        EXPECT(0x8235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8234));
        EXPECT(0x47, gbc.readMem(0xb390));
        EXPECT(0x4f, gbc.readMem(0xb391));
        // C5 0196
        gbc.setState(0x9c2c, 0xadee, 0xc590, 0x2ef0, 0xb151, 0x1187, 0x0, 0x0);
        gbc.writeMem(0x9c2c, { 0xc5 });
        gbc.writeMem(0xadec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xadec, gbc.sp());
        EXPECT(0x9c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9c2c));
        EXPECT(0xf0, gbc.readMem(0xadec));
        EXPECT(0x2e, gbc.readMem(0xaded));
        // C5 0197
        gbc.setState(0xd879, 0xf4c0, 0x9d70, 0xb056, 0xcada, 0x5a16, 0x1, 0x0);
        gbc.writeMem(0xd879, { 0xc5 });
        gbc.writeMem(0xf4be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf4be, gbc.sp());
        EXPECT(0xd87a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd879));
        EXPECT(0x56, gbc.readMem(0xf4be));
        EXPECT(0xb0, gbc.readMem(0xf4bf));
        // C5 0199
        gbc.setState(0x9477, 0x8245, 0xa220, 0x959c, 0xfe3a, 0xbde2, 0x0, 0x0);
        gbc.writeMem(0x8243, { 0x0, 0x0 });
        gbc.writeMem(0x9477, { 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8243, gbc.sp());
        EXPECT(0x9478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9c, gbc.readMem(0x8243));
        EXPECT(0x95, gbc.readMem(0x8244));
        EXPECT(0xc5, gbc.readMem(0x9477));
        // C5 019B
        gbc.setState(0xea7c, 0xfea6, 0x6400, 0xe804, 0x2086, 0xcf0e, 0x0, 0x1);
        gbc.writeMem(0xea7c, { 0xc5 });
        gbc.writeMem(0xfea4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfea4, gbc.sp());
        EXPECT(0xea7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xea7c));
        EXPECT(0x4, gbc.readMem(0xfea4));
        EXPECT(0xe8, gbc.readMem(0xfea5));
        // C5 019F
        gbc.setState(0xc654, 0x82d0, 0x7e90, 0x2e33, 0xc8e7, 0xf052, 0x1, 0x0);
        gbc.writeMem(0x82ce, { 0x0, 0x0 });
        gbc.writeMem(0xc654, { 0xc5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x82ce, gbc.sp());
        EXPECT(0xc655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0x82ce));
        EXPECT(0x2e, gbc.readMem(0x82cf));
        EXPECT(0xc5, gbc.readMem(0xc654));
        // C5 01A1
        gbc.setState(0xd542, 0xc17d, 0xd620, 0x1cc7, 0x8166, 0x3b25, 0x1, 0x0);
        gbc.writeMem(0xc17b, { 0x0, 0x0 });
        gbc.writeMem(0xd542, { 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc17b, gbc.sp());
        EXPECT(0xd543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xc17b));
        EXPECT(0x1c, gbc.readMem(0xc17c));
        EXPECT(0xc5, gbc.readMem(0xd542));
        // C5 01A3
        gbc.setState(0xb0bc, 0xd28a, 0x3ab0, 0x2df2, 0xa590, 0x500, 0x0, 0x1);
        gbc.writeMem(0xb0bc, { 0xc5 });
        gbc.writeMem(0xd288, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd288, gbc.sp());
        EXPECT(0xb0bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb0bc));
        EXPECT(0xf2, gbc.readMem(0xd288));
        EXPECT(0x2d, gbc.readMem(0xd289));
        // C5 01A4
        gbc.setState(0xd98d, 0xb3f0, 0x6310, 0xf7e3, 0xb4f3, 0xdb66, 0x1, 0x0);
        gbc.writeMem(0xb3ee, { 0x0, 0x0 });
        gbc.writeMem(0xd98d, { 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb3ee, gbc.sp());
        EXPECT(0xd98e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xb3ee));
        EXPECT(0xf7, gbc.readMem(0xb3ef));
        EXPECT(0xc5, gbc.readMem(0xd98d));
        // C5 01A5
        gbc.setState(0x4f0f, 0x9278, 0xd500, 0x7862, 0x7c4, 0x4a43, 0x1, 0x1);
        gbc.writeMem(0x4f0f, { 0xc5 });
        gbc.writeMem(0x9276, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x4f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9276));
        EXPECT(0x78, gbc.readMem(0x9277));
        // C5 01A6
        gbc.setState(0x2a65, 0xd72c, 0xa7a0, 0xd761, 0xc7c1, 0xbb69, 0x0, 0x0);
        gbc.writeMem(0x2a65, { 0xc5 });
        gbc.writeMem(0xd72a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd72a, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd72a));
        EXPECT(0xd7, gbc.readMem(0xd72b));
        // C5 01A7
        gbc.setState(0x5c5c, 0xd6b8, 0xdb60, 0x5f77, 0x6d3b, 0x3e0a, 0x0, 0x1);
        gbc.writeMem(0x5c5c, { 0xc5 });
        gbc.writeMem(0xd6b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0x5c5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xd6b6));
        EXPECT(0x5f, gbc.readMem(0xd6b7));
        // C5 01A8
        gbc.setState(0x6b95, 0x80a7, 0xaab0, 0xb5a, 0x8906, 0x219d, 0x1, 0x1);
        gbc.writeMem(0x6b95, { 0xc5 });
        gbc.writeMem(0x80a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x80a5, gbc.sp());
        EXPECT(0x6b96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x80a5));
        EXPECT(0xb, gbc.readMem(0x80a6));
        // C5 01A9
        gbc.setState(0xc934, 0x9c8c, 0x79b0, 0x8b88, 0xdaef, 0x745, 0x0, 0x0);
        gbc.writeMem(0x9c8a, { 0x0, 0x0 });
        gbc.writeMem(0xc934, { 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9c8a, gbc.sp());
        EXPECT(0xc935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x9c8a));
        EXPECT(0x8b, gbc.readMem(0x9c8b));
        EXPECT(0xc5, gbc.readMem(0xc934));
        // C5 01AA
        gbc.setState(0xdacb, 0x88b2, 0xef90, 0xced5, 0xe5b2, 0xebbe, 0x1, 0x0);
        gbc.writeMem(0x88b0, { 0x0, 0x0 });
        gbc.writeMem(0xdacb, { 0xc5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x88b0, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x88b0));
        EXPECT(0xce, gbc.readMem(0x88b1));
        EXPECT(0xc5, gbc.readMem(0xdacb));
        // C5 01AD
        gbc.setState(0x5ffe, 0x95a3, 0x2f40, 0x31be, 0xd321, 0x3655, 0x1, 0x0);
        gbc.writeMem(0x5ffe, { 0xc5 });
        gbc.writeMem(0x95a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x95a1, gbc.sp());
        EXPECT(0x5fff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x95a1));
        EXPECT(0x31, gbc.readMem(0x95a2));
        // C5 01AF
        gbc.setState(0x9764, 0xbf09, 0x2b70, 0xd83e, 0x5ac, 0xc236, 0x1, 0x0);
        gbc.writeMem(0x9764, { 0xc5 });
        gbc.writeMem(0xbf07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xbf07, gbc.sp());
        EXPECT(0x9765, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9764));
        EXPECT(0x3e, gbc.readMem(0xbf07));
        EXPECT(0xd8, gbc.readMem(0xbf08));
        // C5 01B1
        gbc.setState(0x299c, 0xa4b1, 0x4f10, 0xe395, 0x5a5c, 0xd446, 0x0, 0x1);
        gbc.writeMem(0x299c, { 0xc5 });
        gbc.writeMem(0xa4af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa4af, gbc.sp());
        EXPECT(0x299d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa4af));
        EXPECT(0xe3, gbc.readMem(0xa4b0));
        // C5 01B2
        gbc.setState(0x6fc, 0x8158, 0xf7c0, 0xbae1, 0x791c, 0xb2a9, 0x1, 0x0);
        gbc.writeMem(0x6fc, { 0xc5 });
        gbc.writeMem(0x8156, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8156, gbc.sp());
        EXPECT(0x6fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8156));
        EXPECT(0xba, gbc.readMem(0x8157));
        // C5 01B4
        gbc.setState(0xdfe4, 0xfe26, 0x3330, 0x5381, 0xbd15, 0xdce6, 0x0, 0x0);
        gbc.writeMem(0xdfe4, { 0xc5 });
        gbc.writeMem(0xfe24, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfe24, gbc.sp());
        EXPECT(0xdfe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdfe4));
        EXPECT(0x81, gbc.readMem(0xfe24));
        EXPECT(0x53, gbc.readMem(0xfe25));
        // C5 01B7
        gbc.setState(0xcb8f, 0x896a, 0xf060, 0x79bc, 0xb819, 0xddee, 0x1, 0x0);
        gbc.writeMem(0x8968, { 0x0, 0x0 });
        gbc.writeMem(0xcb8f, { 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x8968, gbc.sp());
        EXPECT(0xcb90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x8968));
        EXPECT(0x79, gbc.readMem(0x8969));
        EXPECT(0xc5, gbc.readMem(0xcb8f));
        // C5 01B9
        gbc.setState(0x3460, 0xebf3, 0x61d0, 0x2140, 0x76d9, 0xe688, 0x0, 0x0);
        gbc.writeMem(0x3460, { 0xc5 });
        gbc.writeMem(0xebf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xebf1, gbc.sp());
        EXPECT(0x3461, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xebf1));
        EXPECT(0x21, gbc.readMem(0xebf2));
        // C5 01BA
        gbc.setState(0x2488, 0xf606, 0xc0a0, 0x2d1c, 0x80b7, 0x66ca, 0x0, 0x0);
        gbc.writeMem(0x2488, { 0xc5 });
        gbc.writeMem(0xf604, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf604, gbc.sp());
        EXPECT(0x2489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf604));
        EXPECT(0x2d, gbc.readMem(0xf605));
        // C5 01BB
        gbc.setState(0xcc26, 0xd608, 0x85f0, 0x78e6, 0xcdc6, 0xa1ea, 0x0, 0x0);
        gbc.writeMem(0xcc26, { 0xc5 });
        gbc.writeMem(0xd606, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd606, gbc.sp());
        EXPECT(0xcc27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xcc26));
        EXPECT(0xe6, gbc.readMem(0xd606));
        EXPECT(0x78, gbc.readMem(0xd607));
        // C5 01BC
        gbc.setState(0x1e22, 0xb534, 0xca40, 0xe921, 0x7a0, 0x937d, 0x0, 0x1);
        gbc.writeMem(0x1e22, { 0xc5 });
        gbc.writeMem(0xb532, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb532, gbc.sp());
        EXPECT(0x1e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xb532));
        EXPECT(0xe9, gbc.readMem(0xb533));
        // C5 01BF
        gbc.setState(0xdf6e, 0xaa62, 0xa010, 0x1485, 0xcb41, 0xb83c, 0x0, 0x1);
        gbc.writeMem(0xaa60, { 0x0, 0x0 });
        gbc.writeMem(0xdf6e, { 0xc5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa60, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xaa60));
        EXPECT(0x14, gbc.readMem(0xaa61));
        EXPECT(0xc5, gbc.readMem(0xdf6e));
        // C5 01C0
        gbc.setState(0x28d8, 0x927f, 0x1690, 0x5cad, 0x741a, 0x2cef, 0x0, 0x1);
        gbc.writeMem(0x28d8, { 0xc5 });
        gbc.writeMem(0x927d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x927d, gbc.sp());
        EXPECT(0x28d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x927d));
        EXPECT(0x5c, gbc.readMem(0x927e));
        // C5 01C1
        gbc.setState(0x2e39, 0xd841, 0x26a0, 0x8485, 0x556b, 0x903d, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0xc5 });
        gbc.writeMem(0xd83f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd83f, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xd83f));
        EXPECT(0x84, gbc.readMem(0xd840));
        // C5 01C2
        gbc.setState(0x9a3f, 0xb539, 0x8060, 0x3997, 0x5345, 0xf0aa, 0x1, 0x1);
        gbc.writeMem(0x9a3f, { 0xc5 });
        gbc.writeMem(0xb537, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb537, gbc.sp());
        EXPECT(0x9a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9a3f));
        EXPECT(0x97, gbc.readMem(0xb537));
        EXPECT(0x39, gbc.readMem(0xb538));
        // C5 01C4
        gbc.setState(0xc6f2, 0xd2cf, 0x3de0, 0x4213, 0xa0e9, 0xb148, 0x1, 0x0);
        gbc.writeMem(0xc6f2, { 0xc5 });
        gbc.writeMem(0xd2cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd2cd, gbc.sp());
        EXPECT(0xc6f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc6f2));
        EXPECT(0x13, gbc.readMem(0xd2cd));
        EXPECT(0x42, gbc.readMem(0xd2ce));
        // C5 01C7
        gbc.setState(0x7cee, 0xcabe, 0x5570, 0xe9c4, 0x9d8d, 0xc61e, 0x1, 0x1);
        gbc.writeMem(0x7cee, { 0xc5 });
        gbc.writeMem(0xcabc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcabc, gbc.sp());
        EXPECT(0x7cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xcabc));
        EXPECT(0xe9, gbc.readMem(0xcabd));
        // C5 01C9
        gbc.setState(0x21fe, 0xb9b5, 0x1ef0, 0x702d, 0xaebe, 0x2365, 0x1, 0x1);
        gbc.writeMem(0x21fe, { 0xc5 });
        gbc.writeMem(0xb9b3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x21ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb9b3));
        EXPECT(0x70, gbc.readMem(0xb9b4));
        // C5 01CD
        gbc.setState(0xe0bf, 0x9ea4, 0x45a0, 0x83db, 0x7506, 0x5c38, 0x0, 0x0);
        gbc.writeMem(0x9ea2, { 0x0, 0x0 });
        gbc.writeMem(0xe0bf, { 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9ea2, gbc.sp());
        EXPECT(0xe0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x9ea2));
        EXPECT(0x83, gbc.readMem(0x9ea3));
        EXPECT(0xc5, gbc.readMem(0xe0bf));
        // C5 01CF
        gbc.setState(0x1b84, 0xa8f0, 0x8ef0, 0x9ca7, 0xa4f4, 0x4381, 0x0, 0x0);
        gbc.writeMem(0x1b84, { 0xc5 });
        gbc.writeMem(0xa8ee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa8ee, gbc.sp());
        EXPECT(0x1b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa8ee));
        EXPECT(0x9c, gbc.readMem(0xa8ef));
        // C5 01D2
        gbc.setState(0x2df4, 0xca5a, 0x17c0, 0xf943, 0x6bbb, 0x76db, 0x1, 0x1);
        gbc.writeMem(0x2df4, { 0xc5 });
        gbc.writeMem(0xca58, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xca58, gbc.sp());
        EXPECT(0x2df5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xca58));
        EXPECT(0xf9, gbc.readMem(0xca59));
        // C5 01D3
        gbc.setState(0xd4fb, 0xdd30, 0x7ed0, 0xcd34, 0xe869, 0x64bf, 0x0, 0x0);
        gbc.writeMem(0xd4fb, { 0xc5 });
        gbc.writeMem(0xdd2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdd2e, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd4fb));
        EXPECT(0x34, gbc.readMem(0xdd2e));
        EXPECT(0xcd, gbc.readMem(0xdd2f));
        // C5 01D5
        gbc.setState(0x36b4, 0xda73, 0xc1e0, 0xe9ab, 0x2431, 0xce3e, 0x1, 0x1);
        gbc.writeMem(0x36b4, { 0xc5 });
        gbc.writeMem(0xda71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xda71, gbc.sp());
        EXPECT(0x36b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xda71));
        EXPECT(0xe9, gbc.readMem(0xda72));
        // C5 01D7
        gbc.setState(0x7666, 0xca42, 0x3720, 0xd278, 0xd92b, 0xc504, 0x0, 0x0);
        gbc.writeMem(0x7666, { 0xc5 });
        gbc.writeMem(0xca40, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xca40, gbc.sp());
        EXPECT(0x7667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xca40));
        EXPECT(0xd2, gbc.readMem(0xca41));
        // C5 01DB
        gbc.setState(0x9737, 0xee1c, 0x3480, 0x54df, 0xe602, 0x2b72, 0x0, 0x0);
        gbc.writeMem(0x9737, { 0xc5 });
        gbc.writeMem(0xee1a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xee1a, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9737));
        EXPECT(0xdf, gbc.readMem(0xee1a));
        EXPECT(0x54, gbc.readMem(0xee1b));
        // C5 01DC
        gbc.setState(0x8be8, 0xf999, 0xf230, 0x4a86, 0x6375, 0x5ca8, 0x0, 0x0);
        gbc.writeMem(0x8be8, { 0xc5 });
        gbc.writeMem(0xf997, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf997, gbc.sp());
        EXPECT(0x8be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8be8));
        EXPECT(0x86, gbc.readMem(0xf997));
        EXPECT(0x4a, gbc.readMem(0xf998));
        // C5 01DF
        gbc.setState(0x7568, 0xe464, 0x7460, 0x15a3, 0xe7a6, 0xea40, 0x0, 0x1);
        gbc.writeMem(0x7568, { 0xc5 });
        gbc.writeMem(0xe462, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x7569, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe462));
        EXPECT(0x15, gbc.readMem(0xe463));
        // C5 01E2
        gbc.setState(0xec93, 0xd71c, 0x8ed0, 0x25d1, 0xb202, 0xa2d2, 0x0, 0x0);
        gbc.writeMem(0xd71a, { 0x0, 0x0 });
        gbc.writeMem(0xec93, { 0xc5 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd71a, gbc.sp());
        EXPECT(0xec94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd71a));
        EXPECT(0x25, gbc.readMem(0xd71b));
        EXPECT(0xc5, gbc.readMem(0xec93));
        // C5 01E5
        gbc.setState(0x2b8a, 0xe968, 0x7e10, 0x6555, 0x56e9, 0x143b, 0x1, 0x1);
        gbc.writeMem(0x2b8a, { 0xc5 });
        gbc.writeMem(0xe966, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe966, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe966));
        EXPECT(0x65, gbc.readMem(0xe967));
        // C5 01E6
        gbc.setState(0x7ed5, 0x83d9, 0x7a0, 0x4e42, 0xde89, 0x5848, 0x1, 0x1);
        gbc.writeMem(0x7ed5, { 0xc5 });
        gbc.writeMem(0x83d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x7ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x83d7));
        EXPECT(0x4e, gbc.readMem(0x83d8));
        // C5 01E7
        gbc.setState(0x7131, 0x8638, 0x88e0, 0x355b, 0x50f1, 0x77, 0x1, 0x1);
        gbc.writeMem(0x7131, { 0xc5 });
        gbc.writeMem(0x8636, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0x7132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8636));
        EXPECT(0x35, gbc.readMem(0x8637));
        // C5 01E9
        gbc.setState(0xb063, 0xa707, 0xa8e0, 0xe52c, 0x8501, 0x679b, 0x1, 0x0);
        gbc.writeMem(0xa705, { 0x0, 0x0 });
        gbc.writeMem(0xb063, { 0xc5 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0xb064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xa705));
        EXPECT(0xe5, gbc.readMem(0xa706));
        EXPECT(0xc5, gbc.readMem(0xb063));
        // C5 01EA
        gbc.setState(0x56c9, 0xf070, 0x95c0, 0x8e27, 0xf8f3, 0x42f2, 0x1, 0x1);
        gbc.writeMem(0x56c9, { 0xc5 });
        gbc.writeMem(0xf06e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf06e, gbc.sp());
        EXPECT(0x56ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xf06e));
        EXPECT(0x8e, gbc.readMem(0xf06f));
        // C5 01EC
        gbc.setState(0x18f4, 0xb075, 0x4560, 0x9104, 0x86c2, 0xd1c2, 0x0, 0x1);
        gbc.writeMem(0x18f4, { 0xc5 });
        gbc.writeMem(0xb073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb073, gbc.sp());
        EXPECT(0x18f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xb073));
        EXPECT(0x91, gbc.readMem(0xb074));
        // C5 01EF
        gbc.setState(0x6989, 0xdce2, 0x1160, 0xa1d2, 0x9d43, 0x771e, 0x0, 0x1);
        gbc.writeMem(0x6989, { 0xc5 });
        gbc.writeMem(0xdce0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xdce0, gbc.sp());
        EXPECT(0x698a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd2, gbc.readMem(0xdce0));
        EXPECT(0xa1, gbc.readMem(0xdce1));
        // C5 01F0
        gbc.setState(0xe00a, 0xde15, 0x7210, 0xe542, 0x16b8, 0x741, 0x0, 0x1);
        gbc.writeMem(0xde13, { 0x0, 0x0 });
        gbc.writeMem(0xe00a, { 0xc5 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xde13, gbc.sp());
        EXPECT(0xe00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xde13));
        EXPECT(0xe5, gbc.readMem(0xde14));
        EXPECT(0xc5, gbc.readMem(0xe00a));
        // C5 01F2
        gbc.setState(0xedcc, 0xb0f3, 0x2c40, 0xd233, 0xb963, 0xff25, 0x0, 0x1);
        gbc.writeMem(0xb0f1, { 0x0, 0x0 });
        gbc.writeMem(0xedcc, { 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0xedcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb0f1));
        EXPECT(0xd2, gbc.readMem(0xb0f2));
        EXPECT(0xc5, gbc.readMem(0xedcc));
        // C5 01F3
        gbc.setState(0x79e0, 0xd5a2, 0x4cd0, 0xf269, 0x8b9c, 0x5cb5, 0x1, 0x1);
        gbc.writeMem(0x79e0, { 0xc5 });
        gbc.writeMem(0xd5a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xd5a0, gbc.sp());
        EXPECT(0x79e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xd5a0));
        EXPECT(0xf2, gbc.readMem(0xd5a1));
        // C5 01F6
        gbc.setState(0x4e39, 0x8937, 0x9120, 0xf592, 0x42ab, 0xcda, 0x0, 0x0);
        gbc.writeMem(0x4e39, { 0xc5 });
        gbc.writeMem(0x8935, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8935, gbc.sp());
        EXPECT(0x4e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8935));
        EXPECT(0xf5, gbc.readMem(0x8936));
        // C5 01F8
        gbc.setState(0xb41a, 0xb0a7, 0xac10, 0xcd0e, 0x7d32, 0xa093, 0x1, 0x0);
        gbc.writeMem(0xb0a5, { 0x0, 0x0 });
        gbc.writeMem(0xb41a, { 0xc5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb0a5, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xb0a5));
        EXPECT(0xcd, gbc.readMem(0xb0a6));
        EXPECT(0xc5, gbc.readMem(0xb41a));
        // C5 01F9
        gbc.setState(0x5250, 0xc0b2, 0x8330, 0xa771, 0x73a4, 0xf519, 0x1, 0x0);
        gbc.writeMem(0x5250, { 0xc5 });
        gbc.writeMem(0xc0b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x5251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xc0b0));
        EXPECT(0xa7, gbc.readMem(0xc0b1));
        // C5 01FD
        gbc.setState(0xa435, 0xfdbf, 0x4080, 0x95d4, 0xfd7f, 0x86f0, 0x0, 0x0);
        gbc.writeMem(0xa435, { 0xc5 });
        gbc.writeMem(0xfdbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xfdbd, gbc.sp());
        EXPECT(0xa436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa435));
        EXPECT(0xd4, gbc.readMem(0xfdbd));
        EXPECT(0x95, gbc.readMem(0xfdbe));
        // C5 01FE
        gbc.setState(0xc157, 0xbda0, 0xc950, 0x7e92, 0xb13b, 0x4255, 0x1, 0x1);
        gbc.writeMem(0xbd9e, { 0x0, 0x0 });
        gbc.writeMem(0xc157, { 0xc5 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xbd9e, gbc.sp());
        EXPECT(0xc158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xbd9e));
        EXPECT(0x7e, gbc.readMem(0xbd9f));
        EXPECT(0xc5, gbc.readMem(0xc157));
        // C5 0201
        gbc.setState(0x6a30, 0xa97c, 0x5a0, 0x879e, 0xf5c6, 0x2981, 0x1, 0x1);
        gbc.writeMem(0x6a30, { 0xc5 });
        gbc.writeMem(0xa97a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa97a, gbc.sp());
        EXPECT(0x6a31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa97a));
        EXPECT(0x87, gbc.readMem(0xa97b));
        // C5 0202
        gbc.setState(0xa3ec, 0xa178, 0xa280, 0x608e, 0x16b2, 0xf27c, 0x0, 0x1);
        gbc.writeMem(0xa176, { 0x0, 0x0 });
        gbc.writeMem(0xa3ec, { 0xc5 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa176, gbc.sp());
        EXPECT(0xa3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xa176));
        EXPECT(0x60, gbc.readMem(0xa177));
        EXPECT(0xc5, gbc.readMem(0xa3ec));
        // C5 0204
        gbc.setState(0xea9b, 0xf33c, 0x1b10, 0x3282, 0xbb17, 0x20fc, 0x1, 0x1);
        gbc.writeMem(0xea9b, { 0xc5 });
        gbc.writeMem(0xf33a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf33a, gbc.sp());
        EXPECT(0xea9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xea9b));
        EXPECT(0x82, gbc.readMem(0xf33a));
        EXPECT(0x32, gbc.readMem(0xf33b));
        // C5 0207
        gbc.setState(0xb1ac, 0xed31, 0x540, 0xa83d, 0xe1, 0x2851, 0x0, 0x1);
        gbc.writeMem(0xb1ac, { 0xc5 });
        gbc.writeMem(0xed2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xed2f, gbc.sp());
        EXPECT(0xb1ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb1ac));
        EXPECT(0x3d, gbc.readMem(0xed2f));
        EXPECT(0xa8, gbc.readMem(0xed30));
        // C5 0208
        gbc.setState(0xd77a, 0x8010, 0xf090, 0x5e82, 0x80d5, 0xfd8c, 0x1, 0x1);
        gbc.writeMem(0x800e, { 0x0, 0x0 });
        gbc.writeMem(0xd77a, { 0xc5 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0xd77b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0x800e));
        EXPECT(0x5e, gbc.readMem(0x800f));
        EXPECT(0xc5, gbc.readMem(0xd77a));
        // C5 0209
        gbc.setState(0xdcb7, 0xccaa, 0x8c30, 0xe6aa, 0x4aa5, 0x5443, 0x1, 0x0);
        gbc.writeMem(0xcca8, { 0x0, 0x0 });
        gbc.writeMem(0xdcb7, { 0xc5 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0xdcb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xcca8));
        EXPECT(0xe6, gbc.readMem(0xcca9));
        EXPECT(0xc5, gbc.readMem(0xdcb7));
        // C5 020D
        gbc.setState(0x1b19, 0xb987, 0xcb70, 0x69c8, 0x6b75, 0x2871, 0x0, 0x0);
        gbc.writeMem(0x1b19, { 0xc5 });
        gbc.writeMem(0xb985, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xb985, gbc.sp());
        EXPECT(0x1b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb985));
        EXPECT(0x69, gbc.readMem(0xb986));
        // C5 020E
        gbc.setState(0x1339, 0xdc74, 0xab10, 0xb43c, 0x3408, 0xeb80, 0x0, 0x0);
        gbc.writeMem(0x1339, { 0xc5 });
        gbc.writeMem(0xdc72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xdc72, gbc.sp());
        EXPECT(0x133a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xdc72));
        EXPECT(0xb4, gbc.readMem(0xdc73));
        // C5 0210
        gbc.setState(0x3d, 0xa3d5, 0xb470, 0x806f, 0xa182, 0xd36f, 0x0, 0x0);
        gbc.writeMem(0x3d, { 0xc5 });
        gbc.writeMem(0xa3d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa3d3, gbc.sp());
        EXPECT(0x3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa3d3));
        EXPECT(0x80, gbc.readMem(0xa3d4));
        // C5 0216
        gbc.setState(0xa962, 0xcd49, 0x40f0, 0x1e5d, 0x38e5, 0xc95d, 0x1, 0x1);
        gbc.writeMem(0xa962, { 0xc5 });
        gbc.writeMem(0xcd47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xcd47, gbc.sp());
        EXPECT(0xa963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa962));
        EXPECT(0x5d, gbc.readMem(0xcd47));
        EXPECT(0x1e, gbc.readMem(0xcd48));
        // C5 0217
        gbc.setState(0x1115, 0xb83f, 0x3830, 0x2ddd, 0x40ba, 0xc286, 0x1, 0x1);
        gbc.writeMem(0x1115, { 0xc5 });
        gbc.writeMem(0xb83d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb83d, gbc.sp());
        EXPECT(0x1116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xb83d));
        EXPECT(0x2d, gbc.readMem(0xb83e));
        // C5 021A
        gbc.setState(0x421e, 0xc807, 0x24b0, 0x1fd7, 0xe9c1, 0xc9c9, 0x1, 0x1);
        gbc.writeMem(0x421e, { 0xc5 });
        gbc.writeMem(0xc805, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc805, gbc.sp());
        EXPECT(0x421f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc805));
        EXPECT(0x1f, gbc.readMem(0xc806));
        // C5 021B
        gbc.setState(0xd4ae, 0xdf6c, 0x8c30, 0x44cc, 0xc764, 0x5320, 0x0, 0x0);
        gbc.writeMem(0xd4ae, { 0xc5 });
        gbc.writeMem(0xdf6a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdf6a, gbc.sp());
        EXPECT(0xd4af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd4ae));
        EXPECT(0xcc, gbc.readMem(0xdf6a));
        EXPECT(0x44, gbc.readMem(0xdf6b));
        // C5 021C
        gbc.setState(0x4bc9, 0x996e, 0xd990, 0xa4e5, 0xd461, 0x8f57, 0x1, 0x1);
        gbc.writeMem(0x4bc9, { 0xc5 });
        gbc.writeMem(0x996c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x996c, gbc.sp());
        EXPECT(0x4bca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x996c));
        EXPECT(0xa4, gbc.readMem(0x996d));
        // C5 021D
        gbc.setState(0xb76d, 0xe693, 0x53b0, 0xa2d2, 0x6d03, 0x992c, 0x1, 0x0);
        gbc.writeMem(0xb76d, { 0xc5 });
        gbc.writeMem(0xe691, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe691, gbc.sp());
        EXPECT(0xb76e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb76d));
        EXPECT(0xd2, gbc.readMem(0xe691));
        EXPECT(0xa2, gbc.readMem(0xe692));
        // C5 021F
        gbc.setState(0xe78c, 0xa312, 0xd600, 0x2116, 0xc6ab, 0xa4bc, 0x0, 0x0);
        gbc.writeMem(0xa310, { 0x0, 0x0 });
        gbc.writeMem(0xe78c, { 0xc5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa310, gbc.sp());
        EXPECT(0xe78d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xa310));
        EXPECT(0x21, gbc.readMem(0xa311));
        EXPECT(0xc5, gbc.readMem(0xe78c));
        // C5 0225
        gbc.setState(0x419e, 0xd2d8, 0x2ef0, 0x4eee, 0x1c8b, 0x78aa, 0x0, 0x0);
        gbc.writeMem(0x419e, { 0xc5 });
        gbc.writeMem(0xd2d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd2d6, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xd2d6));
        EXPECT(0x4e, gbc.readMem(0xd2d7));
        // C5 0227
        gbc.setState(0xa188, 0xdae7, 0x7fd0, 0xba4, 0xc34, 0x821f, 0x0, 0x0);
        gbc.writeMem(0xa188, { 0xc5 });
        gbc.writeMem(0xdae5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xdae5, gbc.sp());
        EXPECT(0xa189, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa188));
        EXPECT(0xa4, gbc.readMem(0xdae5));
        EXPECT(0xb, gbc.readMem(0xdae6));
        // C5 022A
        gbc.setState(0x84bb, 0xffc0, 0xc050, 0x50f0, 0xf04b, 0xf1ae, 0x0, 0x0);
        gbc.writeMem(0x84bb, { 0xc5 });
        gbc.writeMem(0xffbe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xffbe, gbc.sp());
        EXPECT(0x84bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x84bb));
        EXPECT(0xf0, gbc.readMem(0xffbe));
        EXPECT(0x50, gbc.readMem(0xffbf));
        // C5 022C
        gbc.setState(0x403a, 0xed1a, 0x94d0, 0x5849, 0xf028, 0x62de, 0x1, 0x0);
        gbc.writeMem(0x403a, { 0xc5 });
        gbc.writeMem(0xed18, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0x403b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xed18));
        EXPECT(0x58, gbc.readMem(0xed19));
        // C5 022F
        gbc.setState(0xd070, 0xbb84, 0x9210, 0x49ea, 0xa438, 0xa79b, 0x0, 0x0);
        gbc.writeMem(0xbb82, { 0x0, 0x0 });
        gbc.writeMem(0xd070, { 0xc5 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0xd071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xbb82));
        EXPECT(0x49, gbc.readMem(0xbb83));
        EXPECT(0xc5, gbc.readMem(0xd070));
        // C5 0232
        gbc.setState(0xc3c6, 0x8334, 0xe980, 0x7b1a, 0x6a55, 0x613c, 0x0, 0x0);
        gbc.writeMem(0x8332, { 0x0, 0x0 });
        gbc.writeMem(0xc3c6, { 0xc5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8332, gbc.sp());
        EXPECT(0xc3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x8332));
        EXPECT(0x7b, gbc.readMem(0x8333));
        EXPECT(0xc5, gbc.readMem(0xc3c6));
        // C5 0233
        gbc.setState(0x72af, 0xdfa8, 0x2d00, 0xaf5b, 0x417c, 0x4516, 0x1, 0x1);
        gbc.writeMem(0x72af, { 0xc5 });
        gbc.writeMem(0xdfa6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdfa6, gbc.sp());
        EXPECT(0x72b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xdfa6));
        EXPECT(0xaf, gbc.readMem(0xdfa7));
        // C5 0235
        gbc.setState(0x1c11, 0xe4a4, 0x3ed0, 0x971f, 0x5863, 0x4316, 0x0, 0x1);
        gbc.writeMem(0x1c11, { 0xc5 });
        gbc.writeMem(0xe4a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe4a2, gbc.sp());
        EXPECT(0x1c12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe4a2));
        EXPECT(0x97, gbc.readMem(0xe4a3));
        // C5 0236
        gbc.setState(0x18c, 0xb88d, 0xa9d0, 0x5b99, 0x197, 0x1c2b, 0x0, 0x0);
        gbc.writeMem(0x18c, { 0xc5 });
        gbc.writeMem(0xb88b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb88b, gbc.sp());
        EXPECT(0x18d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xb88b));
        EXPECT(0x5b, gbc.readMem(0xb88c));
        // C5 023E
        gbc.setState(0x3be1, 0xc750, 0x9dc0, 0x95f3, 0xedad, 0x8754, 0x0, 0x1);
        gbc.writeMem(0x3be1, { 0xc5 });
        gbc.writeMem(0xc74e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xc74e, gbc.sp());
        EXPECT(0x3be2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xc74e));
        EXPECT(0x95, gbc.readMem(0xc74f));
        // C5 0240
        gbc.setState(0xc08f, 0xb39e, 0x6300, 0x53e5, 0x1f82, 0x7a96, 0x0, 0x0);
        gbc.writeMem(0xb39c, { 0x0, 0x0 });
        gbc.writeMem(0xc08f, { 0xc5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0xc090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xb39c));
        EXPECT(0x53, gbc.readMem(0xb39d));
        EXPECT(0xc5, gbc.readMem(0xc08f));
        // C5 0241
        gbc.setState(0x5956, 0x9ee0, 0xf180, 0xd748, 0xe249, 0xde11, 0x0, 0x1);
        gbc.writeMem(0x5956, { 0xc5 });
        gbc.writeMem(0x9ede, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9ede, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x9ede));
        EXPECT(0xd7, gbc.readMem(0x9edf));
        // C5 0243
        gbc.setState(0x6367, 0xad99, 0x72d0, 0x6849, 0x72a1, 0x2a, 0x1, 0x0);
        gbc.writeMem(0x6367, { 0xc5 });
        gbc.writeMem(0xad97, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xad97, gbc.sp());
        EXPECT(0x6368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xad97));
        EXPECT(0x68, gbc.readMem(0xad98));
        // C5 0245
        gbc.setState(0x155c, 0xaf4a, 0xde20, 0x4eab, 0x5bce, 0x61e6, 0x0, 0x1);
        gbc.writeMem(0x155c, { 0xc5 });
        gbc.writeMem(0xaf48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaf48, gbc.sp());
        EXPECT(0x155d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xaf48));
        EXPECT(0x4e, gbc.readMem(0xaf49));
        // C5 0251
        gbc.setState(0x1296, 0xe60a, 0x28e0, 0xce69, 0x9f87, 0x19cd, 0x0, 0x0);
        gbc.writeMem(0x1296, { 0xc5 });
        gbc.writeMem(0xe608, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe608, gbc.sp());
        EXPECT(0x1297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xe608));
        EXPECT(0xce, gbc.readMem(0xe609));
        // C5 0252
        gbc.setState(0xbf70, 0xbae7, 0xaa90, 0x4fa, 0x20a5, 0x8dea, 0x0, 0x0);
        gbc.writeMem(0xbae5, { 0x0, 0x0 });
        gbc.writeMem(0xbf70, { 0xc5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xbae5));
        EXPECT(0x4, gbc.readMem(0xbae6));
        EXPECT(0xc5, gbc.readMem(0xbf70));
        // C5 0253
        gbc.setState(0x17ca, 0xfea3, 0x4360, 0x9f68, 0x5135, 0x641f, 0x1, 0x1);
        gbc.writeMem(0x17ca, { 0xc5 });
        gbc.writeMem(0xfea1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xfea1, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xfea1));
        EXPECT(0x9f, gbc.readMem(0xfea2));
        // C5 0254
        gbc.setState(0x7506, 0xf501, 0x3480, 0xd8f6, 0x9c1a, 0x5918, 0x0, 0x0);
        gbc.writeMem(0x7506, { 0xc5 });
        gbc.writeMem(0xf4ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0x7507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xf4ff));
        EXPECT(0xd8, gbc.readMem(0xf500));
        // C5 0255
        gbc.setState(0x9118, 0xfbbd, 0xb920, 0x650a, 0xac44, 0xfb43, 0x1, 0x0);
        gbc.writeMem(0x9118, { 0xc5 });
        gbc.writeMem(0xfbbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfbbb, gbc.sp());
        EXPECT(0x9119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9118));
        EXPECT(0xa, gbc.readMem(0xfbbb));
        EXPECT(0x65, gbc.readMem(0xfbbc));
        // C5 0256
        gbc.setState(0x6b0c, 0xe444, 0xdd40, 0x2ae3, 0x372a, 0xe71b, 0x1, 0x0);
        gbc.writeMem(0x6b0c, { 0xc5 });
        gbc.writeMem(0xe442, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe442, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe442));
        EXPECT(0x2a, gbc.readMem(0xe443));
        // C5 0257
        gbc.setState(0xdfaf, 0xa68a, 0xdc70, 0x960c, 0xe1b9, 0x3fe1, 0x1, 0x0);
        gbc.writeMem(0xa688, { 0x0, 0x0 });
        gbc.writeMem(0xdfaf, { 0xc5 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa688, gbc.sp());
        EXPECT(0xdfb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xa688));
        EXPECT(0x96, gbc.readMem(0xa689));
        EXPECT(0xc5, gbc.readMem(0xdfaf));
        // C5 025A
        gbc.setState(0xc419, 0x9d06, 0x4bf0, 0x7fc5, 0x43a2, 0x5ffc, 0x0, 0x1);
        gbc.writeMem(0x9d04, { 0x0, 0x0 });
        gbc.writeMem(0xc419, { 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9d04, gbc.sp());
        EXPECT(0xc41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9d04));
        EXPECT(0x7f, gbc.readMem(0x9d05));
        EXPECT(0xc5, gbc.readMem(0xc419));
        // C5 025B
        gbc.setState(0xa5d8, 0xfa55, 0xca90, 0x77c3, 0xaece, 0x79fc, 0x0, 0x0);
        gbc.writeMem(0xa5d8, { 0xc5 });
        gbc.writeMem(0xfa53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xfa53, gbc.sp());
        EXPECT(0xa5d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa5d8));
        EXPECT(0xc3, gbc.readMem(0xfa53));
        EXPECT(0x77, gbc.readMem(0xfa54));
        // C5 025C
        gbc.setState(0x67f5, 0x9292, 0xcc10, 0x14b1, 0xfa, 0xe41d, 0x1, 0x1);
        gbc.writeMem(0x67f5, { 0xc5 });
        gbc.writeMem(0x9290, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0x67f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x9290));
        EXPECT(0x14, gbc.readMem(0x9291));
        // C5 025D
        gbc.setState(0x56d9, 0xfce7, 0x9c0, 0x71cf, 0x3951, 0xf85d, 0x0, 0x0);
        gbc.writeMem(0x56d9, { 0xc5 });
        gbc.writeMem(0xfce5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfce5, gbc.sp());
        EXPECT(0x56da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xfce5));
        EXPECT(0x71, gbc.readMem(0xfce6));
        // C5 0263
        gbc.setState(0x7d1c, 0xe0e4, 0x7e90, 0xb4eb, 0xb34b, 0xc57c, 0x1, 0x0);
        gbc.writeMem(0x7d1c, { 0xc5 });
        gbc.writeMem(0xe0e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe0e2, gbc.sp());
        EXPECT(0x7d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xe0e2));
        EXPECT(0xb4, gbc.readMem(0xe0e3));
        // C5 0267
        gbc.setState(0x6d57, 0x9193, 0x3e50, 0xa94c, 0x1a57, 0x4793, 0x1, 0x1);
        gbc.writeMem(0x6d57, { 0xc5 });
        gbc.writeMem(0x9191, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0x6d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x9191));
        EXPECT(0xa9, gbc.readMem(0x9192));
        // C5 0269
        gbc.setState(0x59b2, 0xba04, 0xb5f0, 0x9f74, 0x40a0, 0x8227, 0x1, 0x0);
        gbc.writeMem(0x59b2, { 0xc5 });
        gbc.writeMem(0xba02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xba02, gbc.sp());
        EXPECT(0x59b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xba02));
        EXPECT(0x9f, gbc.readMem(0xba03));
        // C5 026B
        gbc.setState(0x8893, 0x8fca, 0xf820, 0x5de0, 0xc192, 0x88c3, 0x0, 0x0);
        gbc.writeMem(0x8893, { 0xc5 });
        gbc.writeMem(0x8fc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8fc8, gbc.sp());
        EXPECT(0x8894, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8893));
        EXPECT(0xe0, gbc.readMem(0x8fc8));
        EXPECT(0x5d, gbc.readMem(0x8fc9));
        // C5 026C
        gbc.setState(0x6c89, 0xda7c, 0x52d0, 0xd14e, 0xb3d3, 0x5bd4, 0x0, 0x1);
        gbc.writeMem(0x6c89, { 0xc5 });
        gbc.writeMem(0xda7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xda7a, gbc.sp());
        EXPECT(0x6c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xda7a));
        EXPECT(0xd1, gbc.readMem(0xda7b));
        // C5 026D
        gbc.setState(0x6f5f, 0xe1d4, 0x64a0, 0x1955, 0x101e, 0x1144, 0x1, 0x0);
        gbc.writeMem(0x6f5f, { 0xc5 });
        gbc.writeMem(0xe1d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe1d2, gbc.sp());
        EXPECT(0x6f60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe1d2));
        EXPECT(0x19, gbc.readMem(0xe1d3));
        // C5 026E
        gbc.setState(0x8006, 0x9116, 0x6d20, 0x19f3, 0xd3a6, 0xd4a, 0x0, 0x0);
        gbc.writeMem(0x8006, { 0xc5 });
        gbc.writeMem(0x9114, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9114, gbc.sp());
        EXPECT(0x8007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8006));
        EXPECT(0xf3, gbc.readMem(0x9114));
        EXPECT(0x19, gbc.readMem(0x9115));
        // C5 026F
        gbc.setState(0x81ce, 0x8fb0, 0xc640, 0x510, 0x115e, 0xbee6, 0x1, 0x1);
        gbc.writeMem(0x81ce, { 0xc5 });
        gbc.writeMem(0x8fae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8fae, gbc.sp());
        EXPECT(0x81cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x81ce));
        EXPECT(0x10, gbc.readMem(0x8fae));
        EXPECT(0x5, gbc.readMem(0x8faf));
        // C5 0270
        gbc.setState(0x8f5, 0xf19a, 0xb7c0, 0xad56, 0x47e7, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x8f5, { 0xc5 });
        gbc.writeMem(0xf198, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf198, gbc.sp());
        EXPECT(0x8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xf198));
        EXPECT(0xad, gbc.readMem(0xf199));
        // C5 0273
        gbc.setState(0xa50a, 0xf24c, 0xbe0, 0xcc1f, 0xa960, 0x32fa, 0x0, 0x1);
        gbc.writeMem(0xa50a, { 0xc5 });
        gbc.writeMem(0xf24a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xf24a, gbc.sp());
        EXPECT(0xa50b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa50a));
        EXPECT(0x1f, gbc.readMem(0xf24a));
        EXPECT(0xcc, gbc.readMem(0xf24b));
        // C5 0275
        gbc.setState(0xb9b2, 0xc035, 0x7bd0, 0x7e16, 0xa132, 0xa032, 0x0, 0x1);
        gbc.writeMem(0xb9b2, { 0xc5 });
        gbc.writeMem(0xc033, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc033, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb9b2));
        EXPECT(0x16, gbc.readMem(0xc033));
        EXPECT(0x7e, gbc.readMem(0xc034));
        // C5 0279
        gbc.setState(0xe722, 0xaa05, 0xe0a0, 0x8da9, 0x1c03, 0xf75c, 0x1, 0x0);
        gbc.writeMem(0xaa03, { 0x0, 0x0 });
        gbc.writeMem(0xe722, { 0xc5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaa03, gbc.sp());
        EXPECT(0xe723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xaa03));
        EXPECT(0x8d, gbc.readMem(0xaa04));
        EXPECT(0xc5, gbc.readMem(0xe722));
        // C5 027B
        gbc.setState(0x250, 0xdd2c, 0x8d20, 0x161d, 0x7741, 0xe2a, 0x1, 0x0);
        gbc.writeMem(0x250, { 0xc5 });
        gbc.writeMem(0xdd2a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdd2a, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xdd2a));
        EXPECT(0x16, gbc.readMem(0xdd2b));
        // C5 027C
        gbc.setState(0xdccf, 0xaa20, 0x3170, 0xe751, 0xbfa3, 0x7b28, 0x0, 0x0);
        gbc.writeMem(0xaa1e, { 0x0, 0x0 });
        gbc.writeMem(0xdccf, { 0xc5 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xaa1e, gbc.sp());
        EXPECT(0xdcd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xaa1e));
        EXPECT(0xe7, gbc.readMem(0xaa1f));
        EXPECT(0xc5, gbc.readMem(0xdccf));
        // C5 027E
        gbc.setState(0x2cd3, 0xb60d, 0xae0, 0xf001, 0x99fb, 0x6e14, 0x1, 0x1);
        gbc.writeMem(0x2cd3, { 0xc5 });
        gbc.writeMem(0xb60b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xb60b));
        EXPECT(0xf0, gbc.readMem(0xb60c));
        // C5 027F
        gbc.setState(0x51d2, 0x974f, 0x8ab0, 0x8e3e, 0xbc1a, 0x590c, 0x1, 0x0);
        gbc.writeMem(0x51d2, { 0xc5 });
        gbc.writeMem(0x974d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x974d, gbc.sp());
        EXPECT(0x51d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x974d));
        EXPECT(0x8e, gbc.readMem(0x974e));
        // C5 0282
        gbc.setState(0x2cf3, 0xa04f, 0x2aa0, 0xacaf, 0xe73, 0xd74f, 0x1, 0x1);
        gbc.writeMem(0x2cf3, { 0xc5 });
        gbc.writeMem(0xa04d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa04d, gbc.sp());
        EXPECT(0x2cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa04d));
        EXPECT(0xac, gbc.readMem(0xa04e));
        // C5 0283
        gbc.setState(0xea05, 0xe6ad, 0xa350, 0x2cad, 0x2479, 0x6420, 0x0, 0x0);
        gbc.writeMem(0xe6ab, { 0x0, 0x0 });
        gbc.writeMem(0xea05, { 0xc5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe6ab, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe6ab));
        EXPECT(0x2c, gbc.readMem(0xe6ac));
        EXPECT(0xc5, gbc.readMem(0xea05));
        // C5 0284
        gbc.setState(0xc1c, 0xa18e, 0x1ae0, 0x2c3d, 0xbf0a, 0xd67, 0x0, 0x0);
        gbc.writeMem(0xc1c, { 0xc5 });
        gbc.writeMem(0xa18c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xa18c, gbc.sp());
        EXPECT(0xc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa18c));
        EXPECT(0x2c, gbc.readMem(0xa18d));
        // C5 0288
        gbc.setState(0x61db, 0x9d8b, 0x4460, 0xf10a, 0x73eb, 0xbaec, 0x1, 0x0);
        gbc.writeMem(0x61db, { 0xc5 });
        gbc.writeMem(0x9d89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9d89, gbc.sp());
        EXPECT(0x61dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0x9d89));
        EXPECT(0xf1, gbc.readMem(0x9d8a));
        // C5 028D
        gbc.setState(0xad5f, 0xc44a, 0x8400, 0x695, 0x6f98, 0xeb02, 0x0, 0x1);
        gbc.writeMem(0xad5f, { 0xc5 });
        gbc.writeMem(0xc448, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc448, gbc.sp());
        EXPECT(0xad60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xad5f));
        EXPECT(0x95, gbc.readMem(0xc448));
        EXPECT(0x6, gbc.readMem(0xc449));
        // C5 0296
        gbc.setState(0x58ae, 0xb085, 0xed80, 0x15c8, 0x6f58, 0xff9, 0x0, 0x0);
        gbc.writeMem(0x58ae, { 0xc5 });
        gbc.writeMem(0xb083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb083, gbc.sp());
        EXPECT(0x58af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb083));
        EXPECT(0x15, gbc.readMem(0xb084));
        // C5 0297
        gbc.setState(0x1091, 0xe7dc, 0x27f0, 0x5c35, 0x7dfe, 0x5064, 0x1, 0x0);
        gbc.writeMem(0x1091, { 0xc5 });
        gbc.writeMem(0xe7da, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0x1092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe7da));
        EXPECT(0x5c, gbc.readMem(0xe7db));
        // C5 029A
        gbc.setState(0x8db3, 0x9588, 0x8790, 0xc882, 0x4563, 0x227f, 0x0, 0x1);
        gbc.writeMem(0x8db3, { 0xc5 });
        gbc.writeMem(0x9586, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9586, gbc.sp());
        EXPECT(0x8db4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8db3));
        EXPECT(0x82, gbc.readMem(0x9586));
        EXPECT(0xc8, gbc.readMem(0x9587));
        // C5 029C
        gbc.setState(0x9ba7, 0xffc6, 0x2df0, 0xa421, 0xbf42, 0x56c8, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0xc5 });
        gbc.writeMem(0xffc4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xffc4, gbc.sp());
        EXPECT(0x9ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9ba7));
        EXPECT(0x21, gbc.readMem(0xffc4));
        EXPECT(0xa4, gbc.readMem(0xffc5));
        // C5 029D
        gbc.setState(0xbcb0, 0xa8ed, 0xea10, 0x78c9, 0x72d3, 0xb6e3, 0x0, 0x0);
        gbc.writeMem(0xa8eb, { 0x0, 0x0 });
        gbc.writeMem(0xbcb0, { 0xc5 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa8eb, gbc.sp());
        EXPECT(0xbcb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xa8eb));
        EXPECT(0x78, gbc.readMem(0xa8ec));
        EXPECT(0xc5, gbc.readMem(0xbcb0));
        // C5 029F
        gbc.setState(0x5032, 0x88e5, 0xa620, 0xd0ed, 0xe232, 0x398d, 0x1, 0x1);
        gbc.writeMem(0x5032, { 0xc5 });
        gbc.writeMem(0x88e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x88e3, gbc.sp());
        EXPECT(0x5033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x88e3));
        EXPECT(0xd0, gbc.readMem(0x88e4));
        // C5 02A2
        gbc.setState(0x8728, 0xad24, 0x75f0, 0xbfa, 0xcca4, 0x3984, 0x1, 0x0);
        gbc.writeMem(0x8728, { 0xc5 });
        gbc.writeMem(0xad22, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xad22, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8728));
        EXPECT(0xfa, gbc.readMem(0xad22));
        EXPECT(0xb, gbc.readMem(0xad23));
        // C5 02A3
        gbc.setState(0x396a, 0xbe79, 0xfc00, 0x3f2d, 0x8131, 0x8c4e, 0x0, 0x0);
        gbc.writeMem(0x396a, { 0xc5 });
        gbc.writeMem(0xbe77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbe77, gbc.sp());
        EXPECT(0x396b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xbe77));
        EXPECT(0x3f, gbc.readMem(0xbe78));
        // C5 02A7
        gbc.setState(0xa70c, 0xbbf7, 0x71b0, 0xb729, 0x7e4f, 0x22dc, 0x0, 0x1);
        gbc.writeMem(0xa70c, { 0xc5 });
        gbc.writeMem(0xbbf5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0xa70d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa70c));
        EXPECT(0x29, gbc.readMem(0xbbf5));
        EXPECT(0xb7, gbc.readMem(0xbbf6));
        // C5 02A8
        gbc.setState(0xa976, 0xfb94, 0x1a60, 0x376b, 0xb61d, 0xe42, 0x1, 0x1);
        gbc.writeMem(0xa976, { 0xc5 });
        gbc.writeMem(0xfb92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfb92, gbc.sp());
        EXPECT(0xa977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa976));
        EXPECT(0x6b, gbc.readMem(0xfb92));
        EXPECT(0x37, gbc.readMem(0xfb93));
        // C5 02A9
        gbc.setState(0x6850, 0xbcd8, 0x2e40, 0x4e9e, 0x6ba3, 0xc65c, 0x0, 0x0);
        gbc.writeMem(0x6850, { 0xc5 });
        gbc.writeMem(0xbcd6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbcd6, gbc.sp());
        EXPECT(0x6851, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbcd6));
        EXPECT(0x4e, gbc.readMem(0xbcd7));
        // C5 02AB
        gbc.setState(0x889, 0xeed4, 0x8aa0, 0x4364, 0xeaa6, 0xfe01, 0x1, 0x0);
        gbc.writeMem(0x889, { 0xc5 });
        gbc.writeMem(0xeed2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0x88a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xeed2));
        EXPECT(0x43, gbc.readMem(0xeed3));
        // C5 02AE
        gbc.setState(0xd72e, 0xf350, 0x4900, 0x3c4a, 0xf1d, 0xfe31, 0x0, 0x0);
        gbc.writeMem(0xd72e, { 0xc5 });
        gbc.writeMem(0xf34e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xf34e, gbc.sp());
        EXPECT(0xd72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd72e));
        EXPECT(0x4a, gbc.readMem(0xf34e));
        EXPECT(0x3c, gbc.readMem(0xf34f));
        // C5 02B1
        gbc.setState(0x75cc, 0xa370, 0x45f0, 0x5663, 0xa8ac, 0x37fc, 0x1, 0x0);
        gbc.writeMem(0x75cc, { 0xc5 });
        gbc.writeMem(0xa36e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa36e, gbc.sp());
        EXPECT(0x75cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xa36e));
        EXPECT(0x56, gbc.readMem(0xa36f));
        // C5 02B4
        gbc.setState(0x354f, 0x9269, 0xad40, 0xd062, 0xee85, 0x48fa, 0x0, 0x0);
        gbc.writeMem(0x354f, { 0xc5 });
        gbc.writeMem(0x9267, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0x3550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0x9267));
        EXPECT(0xd0, gbc.readMem(0x9268));
        // C5 02B7
        gbc.setState(0xbf79, 0xa8ff, 0x74d0, 0xeb0, 0x5250, 0xac0, 0x0, 0x1);
        gbc.writeMem(0xa8fd, { 0x0, 0x0 });
        gbc.writeMem(0xbf79, { 0xc5 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa8fd, gbc.sp());
        EXPECT(0xbf7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xa8fd));
        EXPECT(0xe, gbc.readMem(0xa8fe));
        EXPECT(0xc5, gbc.readMem(0xbf79));
        // C5 02B9
        gbc.setState(0xd735, 0xe3bc, 0x1990, 0x1833, 0x112a, 0x4a8f, 0x0, 0x0);
        gbc.writeMem(0xd735, { 0xc5 });
        gbc.writeMem(0xe3ba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe3ba, gbc.sp());
        EXPECT(0xd736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd735));
        EXPECT(0x33, gbc.readMem(0xe3ba));
        EXPECT(0x18, gbc.readMem(0xe3bb));
        // C5 02BA
        gbc.setState(0x522, 0xf8af, 0x3420, 0x3fb7, 0x326c, 0x5a71, 0x0, 0x1);
        gbc.writeMem(0x522, { 0xc5 });
        gbc.writeMem(0xf8ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf8ad, gbc.sp());
        EXPECT(0x523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf8ad));
        EXPECT(0x3f, gbc.readMem(0xf8ae));
        // C5 02BD
        gbc.setState(0xa18f, 0xde90, 0xda70, 0x8624, 0x9e9d, 0x9c3c, 0x1, 0x0);
        gbc.writeMem(0xa18f, { 0xc5 });
        gbc.writeMem(0xde8e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xde8e, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa18f));
        EXPECT(0x24, gbc.readMem(0xde8e));
        EXPECT(0x86, gbc.readMem(0xde8f));
        // C5 02BE
        gbc.setState(0xcdaf, 0xaed9, 0x40f0, 0x79f3, 0xbf4a, 0x79f9, 0x1, 0x1);
        gbc.writeMem(0xaed7, { 0x0, 0x0 });
        gbc.writeMem(0xcdaf, { 0xc5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaed7, gbc.sp());
        EXPECT(0xcdb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xaed7));
        EXPECT(0x79, gbc.readMem(0xaed8));
        EXPECT(0xc5, gbc.readMem(0xcdaf));
        // C5 02C0
        gbc.setState(0xac96, 0x85cd, 0x9970, 0x5e71, 0x165, 0xca1d, 0x0, 0x1);
        gbc.writeMem(0x85cb, { 0x0, 0x0 });
        gbc.writeMem(0xac96, { 0xc5 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x85cb, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x85cb));
        EXPECT(0x5e, gbc.readMem(0x85cc));
        EXPECT(0xc5, gbc.readMem(0xac96));
        // C5 02C2
        gbc.setState(0x5770, 0xd564, 0x2ae0, 0x3d44, 0x7125, 0x7927, 0x1, 0x1);
        gbc.writeMem(0x5770, { 0xc5 });
        gbc.writeMem(0xd562, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd562, gbc.sp());
        EXPECT(0x5771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd562));
        EXPECT(0x3d, gbc.readMem(0xd563));
        // C5 02C3
        gbc.setState(0x2112, 0xf6f4, 0x87e0, 0x7c16, 0x626c, 0xa06b, 0x0, 0x1);
        gbc.writeMem(0x2112, { 0xc5 });
        gbc.writeMem(0xf6f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xf6f2, gbc.sp());
        EXPECT(0x2113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xf6f2));
        EXPECT(0x7c, gbc.readMem(0xf6f3));
        // C5 02C5
        gbc.setState(0xd483, 0xcc33, 0x7ac0, 0x4ce5, 0xdbf4, 0x45ba, 0x1, 0x0);
        gbc.writeMem(0xcc31, { 0x0, 0x0 });
        gbc.writeMem(0xd483, { 0xc5 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xcc31, gbc.sp());
        EXPECT(0xd484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xcc31));
        EXPECT(0x4c, gbc.readMem(0xcc32));
        EXPECT(0xc5, gbc.readMem(0xd483));
        // C5 02C9
        gbc.setState(0x2ace, 0xb1c4, 0xff50, 0x40cf, 0x7636, 0x3325, 0x1, 0x0);
        gbc.writeMem(0x2ace, { 0xc5 });
        gbc.writeMem(0xb1c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb1c2, gbc.sp());
        EXPECT(0x2acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xb1c2));
        EXPECT(0x40, gbc.readMem(0xb1c3));
        // C5 02CC
        gbc.setState(0x1ec2, 0x891b, 0x5fc0, 0x30a2, 0xf051, 0xbe4, 0x0, 0x1);
        gbc.writeMem(0x1ec2, { 0xc5 });
        gbc.writeMem(0x8919, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0x1ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x8919));
        EXPECT(0x30, gbc.readMem(0x891a));
        // C5 02D1
        gbc.setState(0x271c, 0xb2c1, 0x8980, 0x644c, 0xbcd2, 0x6783, 0x1, 0x0);
        gbc.writeMem(0x271c, { 0xc5 });
        gbc.writeMem(0xb2bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb2bf, gbc.sp());
        EXPECT(0x271d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xb2bf));
        EXPECT(0x64, gbc.readMem(0xb2c0));
        // C5 02D4
        gbc.setState(0xb287, 0xc189, 0xe080, 0x48ee, 0x1d11, 0xf513, 0x0, 0x1);
        gbc.writeMem(0xb287, { 0xc5 });
        gbc.writeMem(0xc187, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc187, gbc.sp());
        EXPECT(0xb288, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb287));
        EXPECT(0xee, gbc.readMem(0xc187));
        EXPECT(0x48, gbc.readMem(0xc188));
        // C5 02D7
        gbc.setState(0xc6c8, 0x953d, 0x5a20, 0xd9c7, 0x64b7, 0x4c15, 0x0, 0x1);
        gbc.writeMem(0x953b, { 0x0, 0x0 });
        gbc.writeMem(0xc6c8, { 0xc5 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x953b, gbc.sp());
        EXPECT(0xc6c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0x953b));
        EXPECT(0xd9, gbc.readMem(0x953c));
        EXPECT(0xc5, gbc.readMem(0xc6c8));
        // C5 02D8
        gbc.setState(0xceac, 0xa98b, 0x9d0, 0x97e2, 0x7ed2, 0xb36d, 0x0, 0x1);
        gbc.writeMem(0xa989, { 0x0, 0x0 });
        gbc.writeMem(0xceac, { 0xc5 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa989, gbc.sp());
        EXPECT(0xcead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xa989));
        EXPECT(0x97, gbc.readMem(0xa98a));
        EXPECT(0xc5, gbc.readMem(0xceac));
        // C5 02D9
        gbc.setState(0xe8b9, 0x8151, 0x3af0, 0x2396, 0xca00, 0xd976, 0x1, 0x0);
        gbc.writeMem(0x814f, { 0x0, 0x0 });
        gbc.writeMem(0xe8b9, { 0xc5 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x814f, gbc.sp());
        EXPECT(0xe8ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x814f));
        EXPECT(0x23, gbc.readMem(0x8150));
        EXPECT(0xc5, gbc.readMem(0xe8b9));
        // C5 02DA
        gbc.setState(0x1d55, 0xba79, 0xbfd0, 0x25b7, 0x2f47, 0x4db3, 0x0, 0x0);
        gbc.writeMem(0x1d55, { 0xc5 });
        gbc.writeMem(0xba77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xba77, gbc.sp());
        EXPECT(0x1d56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xba77));
        EXPECT(0x25, gbc.readMem(0xba78));
        // C5 02DF
        gbc.setState(0xba42, 0xa1b8, 0xa9e0, 0xed48, 0xfd81, 0xf16e, 0x0, 0x1);
        gbc.writeMem(0xa1b6, { 0x0, 0x0 });
        gbc.writeMem(0xba42, { 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0xba43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xa1b6));
        EXPECT(0xed, gbc.readMem(0xa1b7));
        EXPECT(0xc5, gbc.readMem(0xba42));
        // C5 02E3
        gbc.setState(0xd432, 0xef31, 0xbad0, 0x1bb4, 0xd493, 0xc5b1, 0x0, 0x0);
        gbc.writeMem(0xd432, { 0xc5 });
        gbc.writeMem(0xef2f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xef2f, gbc.sp());
        EXPECT(0xd433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd432));
        EXPECT(0xb4, gbc.readMem(0xef2f));
        EXPECT(0x1b, gbc.readMem(0xef30));
        // C5 02E4
        gbc.setState(0x82c1, 0xdd5f, 0xa310, 0x2e03, 0x866f, 0x565f, 0x1, 0x1);
        gbc.writeMem(0x82c1, { 0xc5 });
        gbc.writeMem(0xdd5d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdd5d, gbc.sp());
        EXPECT(0x82c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x82c1));
        EXPECT(0x3, gbc.readMem(0xdd5d));
        EXPECT(0x2e, gbc.readMem(0xdd5e));
        // C5 02E6
        gbc.setState(0x5b18, 0x8393, 0x90e0, 0x203, 0xaea6, 0x5ce, 0x0, 0x0);
        gbc.writeMem(0x5b18, { 0xc5 });
        gbc.writeMem(0x8391, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x5b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8391));
        EXPECT(0x2, gbc.readMem(0x8392));
        // C5 02E7
        gbc.setState(0x9c4a, 0xb7fb, 0xc4a0, 0x926a, 0xd5e, 0x8910, 0x1, 0x0);
        gbc.writeMem(0x9c4a, { 0xc5 });
        gbc.writeMem(0xb7f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb7f9, gbc.sp());
        EXPECT(0x9c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9c4a));
        EXPECT(0x6a, gbc.readMem(0xb7f9));
        EXPECT(0x92, gbc.readMem(0xb7fa));
        // C5 02E8
        gbc.setState(0xe657, 0xe9ce, 0x2730, 0x53ff, 0xa4a6, 0xb578, 0x1, 0x1);
        gbc.writeMem(0xe657, { 0xc5 });
        gbc.writeMem(0xe9cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0xe658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe657));
        EXPECT(0xff, gbc.readMem(0xe9cc));
        EXPECT(0x53, gbc.readMem(0xe9cd));
        // C5 02E9
        gbc.setState(0x5360, 0x8cc9, 0xd0e0, 0xee67, 0x3b79, 0x5e42, 0x0, 0x1);
        gbc.writeMem(0x5360, { 0xc5 });
        gbc.writeMem(0x8cc7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8cc7, gbc.sp());
        EXPECT(0x5361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8cc7));
        EXPECT(0xee, gbc.readMem(0x8cc8));
        // C5 02EC
        gbc.setState(0xa594, 0x9342, 0x1a90, 0xc139, 0x6de3, 0x91f8, 0x0, 0x0);
        gbc.writeMem(0x9340, { 0x0, 0x0 });
        gbc.writeMem(0xa594, { 0xc5 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9340, gbc.sp());
        EXPECT(0xa595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x9340));
        EXPECT(0xc1, gbc.readMem(0x9341));
        EXPECT(0xc5, gbc.readMem(0xa594));
        // C5 02F0
        gbc.setState(0x7f4, 0xc08b, 0x4220, 0x6ce8, 0x4b1c, 0x2f3f, 0x1, 0x1);
        gbc.writeMem(0x7f4, { 0xc5 });
        gbc.writeMem(0xc089, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xc089));
        EXPECT(0x6c, gbc.readMem(0xc08a));
        // C5 02F1
        gbc.setState(0x68f4, 0xf7f5, 0x9cb0, 0x1c22, 0xa63c, 0x2230, 0x1, 0x0);
        gbc.writeMem(0x68f4, { 0xc5 });
        gbc.writeMem(0xf7f3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0x68f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xf7f3));
        EXPECT(0x1c, gbc.readMem(0xf7f4));
        // C5 02F3
        gbc.setState(0xd2bd, 0xece3, 0x6350, 0x6c9, 0x1a3a, 0x1e62, 0x0, 0x0);
        gbc.writeMem(0xd2bd, { 0xc5 });
        gbc.writeMem(0xece1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xece1, gbc.sp());
        EXPECT(0xd2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd2bd));
        EXPECT(0xc9, gbc.readMem(0xece1));
        EXPECT(0x6, gbc.readMem(0xece2));
        // C5 02F4
        gbc.setState(0xe044, 0xf52c, 0xe4b0, 0xe0ea, 0xe55e, 0x6280, 0x0, 0x1);
        gbc.writeMem(0xe044, { 0xc5 });
        gbc.writeMem(0xf52a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf52a, gbc.sp());
        EXPECT(0xe045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe044));
        EXPECT(0xea, gbc.readMem(0xf52a));
        EXPECT(0xe0, gbc.readMem(0xf52b));
        // C5 02F5
        gbc.setState(0xe40d, 0xa47c, 0x3ce0, 0x6759, 0x8edb, 0x15ff, 0x1, 0x1);
        gbc.writeMem(0xa47a, { 0x0, 0x0 });
        gbc.writeMem(0xe40d, { 0xc5 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa47a, gbc.sp());
        EXPECT(0xe40e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa47a));
        EXPECT(0x67, gbc.readMem(0xa47b));
        EXPECT(0xc5, gbc.readMem(0xe40d));
        // C5 02F8
        gbc.setState(0x75e1, 0xdaad, 0x3970, 0x2928, 0xaafc, 0x89eb, 0x0, 0x1);
        gbc.writeMem(0x75e1, { 0xc5 });
        gbc.writeMem(0xdaab, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdaab, gbc.sp());
        EXPECT(0x75e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x28, gbc.readMem(0xdaab));
        EXPECT(0x29, gbc.readMem(0xdaac));
        // C5 02FA
        gbc.setState(0x2835, 0xa914, 0x8860, 0x90ca, 0x4bd9, 0x1ec2, 0x1, 0x1);
        gbc.writeMem(0x2835, { 0xc5 });
        gbc.writeMem(0xa912, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xa912, gbc.sp());
        EXPECT(0x2836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xa912));
        EXPECT(0x90, gbc.readMem(0xa913));
        // C5 0300
        gbc.setState(0x8200, 0xfad7, 0x5590, 0x2aa4, 0x1aed, 0x5f8d, 0x0, 0x0);
        gbc.writeMem(0x8200, { 0xc5 });
        gbc.writeMem(0xfad5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xfad5, gbc.sp());
        EXPECT(0x8201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8200));
        EXPECT(0xa4, gbc.readMem(0xfad5));
        EXPECT(0x2a, gbc.readMem(0xfad6));
        // C5 0302
        gbc.setState(0x3c56, 0xd011, 0xba10, 0x8a79, 0x8ca0, 0xf64b, 0x1, 0x1);
        gbc.writeMem(0x3c56, { 0xc5 });
        gbc.writeMem(0xd00f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd00f, gbc.sp());
        EXPECT(0x3c57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xd00f));
        EXPECT(0x8a, gbc.readMem(0xd010));
        // C5 0303
        gbc.setState(0x9601, 0xc387, 0x2770, 0x4d06, 0x55a9, 0x41ac, 0x0, 0x1);
        gbc.writeMem(0x9601, { 0xc5 });
        gbc.writeMem(0xc385, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc385, gbc.sp());
        EXPECT(0x9602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9601));
        EXPECT(0x6, gbc.readMem(0xc385));
        EXPECT(0x4d, gbc.readMem(0xc386));
        // C5 0309
        gbc.setState(0x13bf, 0xfa0a, 0xa020, 0x142c, 0x70bf, 0xe9d9, 0x1, 0x1);
        gbc.writeMem(0x13bf, { 0xc5 });
        gbc.writeMem(0xfa08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfa08, gbc.sp());
        EXPECT(0x13c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xfa08));
        EXPECT(0x14, gbc.readMem(0xfa09));
        // C5 030C
        gbc.setState(0x2df5, 0xc99b, 0x14b0, 0x3c29, 0xc45d, 0x41a0, 0x0, 0x1);
        gbc.writeMem(0x2df5, { 0xc5 });
        gbc.writeMem(0xc999, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc999, gbc.sp());
        EXPECT(0x2df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc999));
        EXPECT(0x3c, gbc.readMem(0xc99a));
        // C5 030E
        gbc.setState(0x4072, 0x9a01, 0xac30, 0xbb6, 0x4769, 0x9163, 0x1, 0x0);
        gbc.writeMem(0x4072, { 0xc5 });
        gbc.writeMem(0x99ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x99ff, gbc.sp());
        EXPECT(0x4073, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x99ff));
        EXPECT(0xb, gbc.readMem(0x9a00));
        // C5 0310
        gbc.setState(0x1f0e, 0xddac, 0x9eb0, 0x3c66, 0x59b, 0xd68e, 0x1, 0x1);
        gbc.writeMem(0x1f0e, { 0xc5 });
        gbc.writeMem(0xddaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x1f0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xddaa));
        EXPECT(0x3c, gbc.readMem(0xddab));
        // C5 0311
        gbc.setState(0xa6df, 0xf596, 0x3590, 0x482b, 0x7560, 0x4dc2, 0x1, 0x1);
        gbc.writeMem(0xa6df, { 0xc5 });
        gbc.writeMem(0xf594, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0xa6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa6df));
        EXPECT(0x2b, gbc.readMem(0xf594));
        EXPECT(0x48, gbc.readMem(0xf595));
        // C5 0312
        gbc.setState(0x5944, 0xfdb7, 0xbdd0, 0x5a4c, 0xf501, 0x59e6, 0x1, 0x0);
        gbc.writeMem(0x5944, { 0xc5 });
        gbc.writeMem(0xfdb5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfdb5, gbc.sp());
        EXPECT(0x5945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xfdb5));
        EXPECT(0x5a, gbc.readMem(0xfdb6));
        // C5 0313
        gbc.setState(0xe0a3, 0xd7d0, 0x2c60, 0x9f2b, 0x6543, 0x3c91, 0x0, 0x0);
        gbc.writeMem(0xd7ce, { 0x0, 0x0 });
        gbc.writeMem(0xe0a3, { 0xc5 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd7ce, gbc.sp());
        EXPECT(0xe0a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd7ce));
        EXPECT(0x9f, gbc.readMem(0xd7cf));
        EXPECT(0xc5, gbc.readMem(0xe0a3));
        // C5 0314
        gbc.setState(0xa58f, 0xdbdf, 0x1740, 0x5ec2, 0xa5fb, 0x2576, 0x0, 0x0);
        gbc.writeMem(0xa58f, { 0xc5 });
        gbc.writeMem(0xdbdd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xdbdd, gbc.sp());
        EXPECT(0xa590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa58f));
        EXPECT(0xc2, gbc.readMem(0xdbdd));
        EXPECT(0x5e, gbc.readMem(0xdbde));
        // C5 0318
        gbc.setState(0x206a, 0xd079, 0xf510, 0xad83, 0xa293, 0x6299, 0x0, 0x0);
        gbc.writeMem(0x206a, { 0xc5 });
        gbc.writeMem(0xd077, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd077, gbc.sp());
        EXPECT(0x206b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xd077));
        EXPECT(0xad, gbc.readMem(0xd078));
        // C5 031A
        gbc.setState(0x136e, 0xf901, 0xc5b0, 0xf2e6, 0x7b75, 0xc97f, 0x1, 0x0);
        gbc.writeMem(0x136e, { 0xc5 });
        gbc.writeMem(0xf8ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf8ff, gbc.sp());
        EXPECT(0x136f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xf8ff));
        EXPECT(0xf2, gbc.readMem(0xf900));
        // C5 031D
        gbc.setState(0x2c34, 0xd751, 0xcb90, 0xf3a3, 0xc17c, 0x5671, 0x1, 0x0);
        gbc.writeMem(0x2c34, { 0xc5 });
        gbc.writeMem(0xd74f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd74f, gbc.sp());
        EXPECT(0x2c35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xd74f));
        EXPECT(0xf3, gbc.readMem(0xd750));
        // C5 0321
        gbc.setState(0x8f99, 0x9a9f, 0xcd70, 0x14e0, 0x42ca, 0xc7c, 0x0, 0x1);
        gbc.writeMem(0x8f99, { 0xc5 });
        gbc.writeMem(0x9a9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9a9d, gbc.sp());
        EXPECT(0x8f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8f99));
        EXPECT(0xe0, gbc.readMem(0x9a9d));
        EXPECT(0x14, gbc.readMem(0x9a9e));
        // C5 0322
        gbc.setState(0x508c, 0xa39b, 0xdb80, 0x5445, 0x5ef0, 0xd16d, 0x0, 0x1);
        gbc.writeMem(0x508c, { 0xc5 });
        gbc.writeMem(0xa399, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa399, gbc.sp());
        EXPECT(0x508d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xa399));
        EXPECT(0x54, gbc.readMem(0xa39a));
        // C5 0323
        gbc.setState(0x3632, 0xb697, 0x98f0, 0x406b, 0xb8f9, 0x4c2f, 0x0, 0x1);
        gbc.writeMem(0x3632, { 0xc5 });
        gbc.writeMem(0xb695, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb695, gbc.sp());
        EXPECT(0x3633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xb695));
        EXPECT(0x40, gbc.readMem(0xb696));
        // C5 0326
        gbc.setState(0xd259, 0xa4b3, 0x45d0, 0xea10, 0x8b3f, 0xadf0, 0x0, 0x0);
        gbc.writeMem(0xa4b1, { 0x0, 0x0 });
        gbc.writeMem(0xd259, { 0xc5 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xa4b1, gbc.sp());
        EXPECT(0xd25a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xa4b1));
        EXPECT(0xea, gbc.readMem(0xa4b2));
        EXPECT(0xc5, gbc.readMem(0xd259));
        // C5 0327
        gbc.setState(0x5e50, 0x9fa1, 0xaa50, 0x5469, 0xf5fd, 0x7e55, 0x0, 0x1);
        gbc.writeMem(0x5e50, { 0xc5 });
        gbc.writeMem(0x9f9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9f9f, gbc.sp());
        EXPECT(0x5e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9f9f));
        EXPECT(0x54, gbc.readMem(0x9fa0));
        // C5 0329
        gbc.setState(0xea4b, 0xf46a, 0x56e0, 0xa656, 0x9136, 0xbf80, 0x0, 0x0);
        gbc.writeMem(0xea4b, { 0xc5 });
        gbc.writeMem(0xf468, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf468, gbc.sp());
        EXPECT(0xea4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xea4b));
        EXPECT(0x56, gbc.readMem(0xf468));
        EXPECT(0xa6, gbc.readMem(0xf469));
        // C5 032B
        gbc.setState(0xe997, 0x94ff, 0x27d0, 0xac93, 0xae4f, 0x4bda, 0x0, 0x1);
        gbc.writeMem(0x94fd, { 0x0, 0x0 });
        gbc.writeMem(0xe997, { 0xc5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x94fd, gbc.sp());
        EXPECT(0xe998, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x94fd));
        EXPECT(0xac, gbc.readMem(0x94fe));
        EXPECT(0xc5, gbc.readMem(0xe997));
        // C5 032C
        gbc.setState(0xd6ec, 0xfc39, 0x45f0, 0x3e11, 0x584c, 0x2c47, 0x0, 0x1);
        gbc.writeMem(0xd6ec, { 0xc5 });
        gbc.writeMem(0xfc37, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfc37, gbc.sp());
        EXPECT(0xd6ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xd6ec));
        EXPECT(0x11, gbc.readMem(0xfc37));
        EXPECT(0x3e, gbc.readMem(0xfc38));
        // C5 032D
        gbc.setState(0x7c1f, 0xc9db, 0x65c0, 0x38bb, 0x795a, 0x1181, 0x0, 0x0);
        gbc.writeMem(0x7c1f, { 0xc5 });
        gbc.writeMem(0xc9d9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc9d9, gbc.sp());
        EXPECT(0x7c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xc9d9));
        EXPECT(0x38, gbc.readMem(0xc9da));
        // C5 0330
        gbc.setState(0x132a, 0xa37f, 0x5eb0, 0x8387, 0xf656, 0x111e, 0x1, 0x0);
        gbc.writeMem(0x132a, { 0xc5 });
        gbc.writeMem(0xa37d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa37d, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa37d));
        EXPECT(0x83, gbc.readMem(0xa37e));
        // C5 0333
        gbc.setState(0x3ff3, 0x90a1, 0x990, 0x1f8b, 0x83d8, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0x3ff3, { 0xc5 });
        gbc.writeMem(0x909f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x909f, gbc.sp());
        EXPECT(0x3ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x909f));
        EXPECT(0x1f, gbc.readMem(0x90a0));
        // C5 0335
        gbc.setState(0x9857, 0xc4f6, 0xbee0, 0x5647, 0x2808, 0x3769, 0x1, 0x0);
        gbc.writeMem(0x9857, { 0xc5 });
        gbc.writeMem(0xc4f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc4f4, gbc.sp());
        EXPECT(0x9858, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9857));
        EXPECT(0x47, gbc.readMem(0xc4f4));
        EXPECT(0x56, gbc.readMem(0xc4f5));
        // C5 0336
        gbc.setState(0x23f7, 0xc22a, 0xb50, 0xe57c, 0x8d7b, 0xb9fc, 0x0, 0x1);
        gbc.writeMem(0x23f7, { 0xc5 });
        gbc.writeMem(0xc228, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc228, gbc.sp());
        EXPECT(0x23f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xc228));
        EXPECT(0xe5, gbc.readMem(0xc229));
        // C5 033A
        gbc.setState(0x50a9, 0xdb99, 0xfc50, 0x5db0, 0x897, 0x2014, 0x0, 0x0);
        gbc.writeMem(0x50a9, { 0xc5 });
        gbc.writeMem(0xdb97, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdb97, gbc.sp());
        EXPECT(0x50aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xdb97));
        EXPECT(0x5d, gbc.readMem(0xdb98));
        // C5 033C
        gbc.setState(0x5a50, 0xd90b, 0xff40, 0x90ec, 0x1d87, 0x9329, 0x1, 0x1);
        gbc.writeMem(0x5a50, { 0xc5 });
        gbc.writeMem(0xd909, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd909, gbc.sp());
        EXPECT(0x5a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xd909));
        EXPECT(0x90, gbc.readMem(0xd90a));
        // C5 033D
        gbc.setState(0xe070, 0xe90d, 0x5640, 0xf74e, 0x4ba5, 0x887a, 0x1, 0x1);
        gbc.writeMem(0xe070, { 0xc5 });
        gbc.writeMem(0xe90b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe90b, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xe070));
        EXPECT(0x4e, gbc.readMem(0xe90b));
        EXPECT(0xf7, gbc.readMem(0xe90c));
        // C5 0342
        gbc.setState(0x992a, 0xb5b9, 0x2dc0, 0xc86, 0x20a3, 0xe7aa, 0x0, 0x0);
        gbc.writeMem(0x992a, { 0xc5 });
        gbc.writeMem(0xb5b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0x992b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x992a));
        EXPECT(0x86, gbc.readMem(0xb5b7));
        EXPECT(0xc, gbc.readMem(0xb5b8));
        // C5 0344
        gbc.setState(0xbb3b, 0xbe2b, 0xe860, 0xc5fd, 0x40ac, 0x1fd1, 0x0, 0x0);
        gbc.writeMem(0xbb3b, { 0xc5 });
        gbc.writeMem(0xbe29, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0xbb3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbb3b));
        EXPECT(0xfd, gbc.readMem(0xbe29));
        EXPECT(0xc5, gbc.readMem(0xbe2a));
        // C5 0345
        gbc.setState(0xb757, 0xc440, 0x9400, 0xb8e3, 0x5eed, 0x8fbf, 0x1, 0x1);
        gbc.writeMem(0xb757, { 0xc5 });
        gbc.writeMem(0xc43e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc43e, gbc.sp());
        EXPECT(0xb758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xb757));
        EXPECT(0xe3, gbc.readMem(0xc43e));
        EXPECT(0xb8, gbc.readMem(0xc43f));
        // C5 0347
        gbc.setState(0xe3ff, 0x9b71, 0xabd0, 0xd4c1, 0xe45b, 0xd8a8, 0x0, 0x0);
        gbc.writeMem(0x9b6f, { 0x0, 0x0 });
        gbc.writeMem(0xe3ff, { 0xc5 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9b6f, gbc.sp());
        EXPECT(0xe400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x9b6f));
        EXPECT(0xd4, gbc.readMem(0x9b70));
        EXPECT(0xc5, gbc.readMem(0xe3ff));
        // C5 0349
        gbc.setState(0x880, 0xc440, 0x34a0, 0x4fa6, 0x8480, 0x3e37, 0x0, 0x1);
        gbc.writeMem(0x880, { 0xc5 });
        gbc.writeMem(0xc43e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc43e, gbc.sp());
        EXPECT(0x881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xc43e));
        EXPECT(0x4f, gbc.readMem(0xc43f));
        // C5 034B
        gbc.setState(0x74dd, 0xe505, 0x8c40, 0xad2b, 0x2136, 0x851d, 0x0, 0x0);
        gbc.writeMem(0x74dd, { 0xc5 });
        gbc.writeMem(0xe503, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe503, gbc.sp());
        EXPECT(0x74de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xe503));
        EXPECT(0xad, gbc.readMem(0xe504));
        // C5 034E
        gbc.setState(0x3ead, 0xdefb, 0xdc0, 0x347, 0xda26, 0x14cf, 0x0, 0x1);
        gbc.writeMem(0x3ead, { 0xc5 });
        gbc.writeMem(0xdef9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0x3eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xdef9));
        EXPECT(0x3, gbc.readMem(0xdefa));
        // C5 0352
        gbc.setState(0x8fe3, 0xb836, 0x8d0, 0x1472, 0xa882, 0x8f78, 0x0, 0x0);
        gbc.writeMem(0x8fe3, { 0xc5 });
        gbc.writeMem(0xb834, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb834, gbc.sp());
        EXPECT(0x8fe4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8fe3));
        EXPECT(0x72, gbc.readMem(0xb834));
        EXPECT(0x14, gbc.readMem(0xb835));
        // C5 0356
        gbc.setState(0xe4dd, 0xe4aa, 0x36e0, 0xf48c, 0x5fe2, 0x9a92, 0x0, 0x0);
        gbc.writeMem(0xe4a8, { 0x0, 0x0 });
        gbc.writeMem(0xe4dd, { 0xc5 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xe4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe4a8));
        EXPECT(0xf4, gbc.readMem(0xe4a9));
        EXPECT(0xc5, gbc.readMem(0xe4dd));
        // C5 0357
        gbc.setState(0x3e85, 0x8387, 0xc510, 0x995, 0xff5b, 0xa448, 0x0, 0x0);
        gbc.writeMem(0x3e85, { 0xc5 });
        gbc.writeMem(0x8385, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8385, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8385));
        EXPECT(0x9, gbc.readMem(0x8386));
        // C5 0359
        gbc.setState(0x3be5, 0x9bcc, 0x120, 0x5bb5, 0x3057, 0x8d08, 0x1, 0x1);
        gbc.writeMem(0x3be5, { 0xc5 });
        gbc.writeMem(0x9bca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x3be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0x9bca));
        EXPECT(0x5b, gbc.readMem(0x9bcb));
        // C5 035A
        gbc.setState(0x85e4, 0xfd56, 0x4b70, 0x87f5, 0x7d42, 0x694c, 0x0, 0x1);
        gbc.writeMem(0x85e4, { 0xc5 });
        gbc.writeMem(0xfd54, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfd54, gbc.sp());
        EXPECT(0x85e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x85e4));
        EXPECT(0xf5, gbc.readMem(0xfd54));
        EXPECT(0x87, gbc.readMem(0xfd55));
        // C5 035B
        gbc.setState(0xa509, 0xe5b2, 0xf740, 0xefc1, 0xfce2, 0x9b0d, 0x0, 0x0);
        gbc.writeMem(0xa509, { 0xc5 });
        gbc.writeMem(0xe5b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe5b0, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa509));
        EXPECT(0xc1, gbc.readMem(0xe5b0));
        EXPECT(0xef, gbc.readMem(0xe5b1));
        // C5 035C
        gbc.setState(0x3e2a, 0x96d9, 0x7f00, 0xd954, 0xcf81, 0xa007, 0x0, 0x1);
        gbc.writeMem(0x3e2a, { 0xc5 });
        gbc.writeMem(0x96d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x96d7, gbc.sp());
        EXPECT(0x3e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x96d7));
        EXPECT(0xd9, gbc.readMem(0x96d8));
        // C5 035D
        gbc.setState(0x4a1c, 0xb1a9, 0xbbb0, 0xe4fe, 0xab9a, 0x212d, 0x1, 0x0);
        gbc.writeMem(0x4a1c, { 0xc5 });
        gbc.writeMem(0xb1a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb1a7, gbc.sp());
        EXPECT(0x4a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xb1a7));
        EXPECT(0xe4, gbc.readMem(0xb1a8));
        // C5 035F
        gbc.setState(0x365e, 0x8383, 0x3870, 0xe0d9, 0x6791, 0xbcf9, 0x0, 0x0);
        gbc.writeMem(0x365e, { 0xc5 });
        gbc.writeMem(0x8381, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8381, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x8381));
        EXPECT(0xe0, gbc.readMem(0x8382));
        // C5 0364
        gbc.setState(0xde3, 0xf2cb, 0x4f70, 0x71d8, 0x679f, 0xdd6a, 0x1, 0x1);
        gbc.writeMem(0xde3, { 0xc5 });
        gbc.writeMem(0xf2c9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf2c9, gbc.sp());
        EXPECT(0xde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xf2c9));
        EXPECT(0x71, gbc.readMem(0xf2ca));
        // C5 0365
        gbc.setState(0xbdd0, 0xc67e, 0x4350, 0x5718, 0x21af, 0x6e1d, 0x1, 0x1);
        gbc.writeMem(0xbdd0, { 0xc5 });
        gbc.writeMem(0xc67c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc67c, gbc.sp());
        EXPECT(0xbdd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbdd0));
        EXPECT(0x18, gbc.readMem(0xc67c));
        EXPECT(0x57, gbc.readMem(0xc67d));
        // C5 0366
        gbc.setState(0x9335, 0xd82a, 0xf230, 0xe6e7, 0x5df5, 0x25d1, 0x0, 0x1);
        gbc.writeMem(0x9335, { 0xc5 });
        gbc.writeMem(0xd828, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd828, gbc.sp());
        EXPECT(0x9336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9335));
        EXPECT(0xe7, gbc.readMem(0xd828));
        EXPECT(0xe6, gbc.readMem(0xd829));
        // C5 036A
        gbc.setState(0xa7e7, 0xa23d, 0x2b20, 0xff4a, 0x7429, 0x1b97, 0x1, 0x1);
        gbc.writeMem(0xa23b, { 0x0, 0x0 });
        gbc.writeMem(0xa7e7, { 0xc5 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa23b, gbc.sp());
        EXPECT(0xa7e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa23b));
        EXPECT(0xff, gbc.readMem(0xa23c));
        EXPECT(0xc5, gbc.readMem(0xa7e7));
        // C5 036B
        gbc.setState(0xd397, 0xa36e, 0x320, 0x206f, 0xaf1, 0x81d8, 0x1, 0x0);
        gbc.writeMem(0xa36c, { 0x0, 0x0 });
        gbc.writeMem(0xd397, { 0xc5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0xd398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa36c));
        EXPECT(0x20, gbc.readMem(0xa36d));
        EXPECT(0xc5, gbc.readMem(0xd397));
        // C5 036C
        gbc.setState(0x768, 0xfbd1, 0x5ec0, 0x6fc, 0xebfc, 0xd01d, 0x0, 0x0);
        gbc.writeMem(0x768, { 0xc5 });
        gbc.writeMem(0xfbcf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfbcf, gbc.sp());
        EXPECT(0x769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xfbcf));
        EXPECT(0x6, gbc.readMem(0xfbd0));
        // C5 036E
        gbc.setState(0xc456, 0xe4d2, 0xcd30, 0x24c5, 0x575d, 0x7d4f, 0x1, 0x0);
        gbc.writeMem(0xc456, { 0xc5 });
        gbc.writeMem(0xe4d0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe4d0, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc456));
        EXPECT(0xc5, gbc.readMem(0xe4d0));
        EXPECT(0x24, gbc.readMem(0xe4d1));
        // C5 036F
        gbc.setState(0x71a7, 0xc04d, 0x6d40, 0xf481, 0x61f0, 0x391a, 0x0, 0x1);
        gbc.writeMem(0x71a7, { 0xc5 });
        gbc.writeMem(0xc04b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc04b, gbc.sp());
        EXPECT(0x71a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xc04b));
        EXPECT(0xf4, gbc.readMem(0xc04c));
        // C5 0371
        gbc.setState(0x79ee, 0xcd09, 0x7340, 0x3589, 0x4586, 0x232e, 0x1, 0x0);
        gbc.writeMem(0x79ee, { 0xc5 });
        gbc.writeMem(0xcd07, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xcd07, gbc.sp());
        EXPECT(0x79ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xcd07));
        EXPECT(0x35, gbc.readMem(0xcd08));
        // C5 0372
        gbc.setState(0x8933, 0xfe05, 0x3f30, 0xc247, 0x7707, 0x7988, 0x1, 0x1);
        gbc.writeMem(0x8933, { 0xc5 });
        gbc.writeMem(0xfe03, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfe03, gbc.sp());
        EXPECT(0x8934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8933));
        EXPECT(0x47, gbc.readMem(0xfe03));
        EXPECT(0xc2, gbc.readMem(0xfe04));
        // C5 0373
        gbc.setState(0x3499, 0xe47f, 0x37e0, 0x1636, 0x1823, 0x240, 0x1, 0x1);
        gbc.writeMem(0x3499, { 0xc5 });
        gbc.writeMem(0xe47d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe47d, gbc.sp());
        EXPECT(0x349a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe47d));
        EXPECT(0x16, gbc.readMem(0xe47e));
        // C5 0374
        gbc.setState(0x18a2, 0x9fc4, 0x4f50, 0x76a5, 0xb9a7, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x18a2, { 0xc5 });
        gbc.writeMem(0x9fc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0x18a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x9fc2));
        EXPECT(0x76, gbc.readMem(0x9fc3));
        // C5 0376
        gbc.setState(0x88f3, 0xc7ed, 0x8050, 0xc5de, 0x7bde, 0x28ff, 0x1, 0x1);
        gbc.writeMem(0x88f3, { 0xc5 });
        gbc.writeMem(0xc7eb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc7eb, gbc.sp());
        EXPECT(0x88f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x88f3));
        EXPECT(0xde, gbc.readMem(0xc7eb));
        EXPECT(0xc5, gbc.readMem(0xc7ec));
        // C5 0379
        gbc.setState(0xbcbb, 0xec93, 0xe800, 0x48b7, 0xab90, 0xf91f, 0x0, 0x1);
        gbc.writeMem(0xbcbb, { 0xc5 });
        gbc.writeMem(0xec91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec91, gbc.sp());
        EXPECT(0xbcbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbcbb));
        EXPECT(0xb7, gbc.readMem(0xec91));
        EXPECT(0x48, gbc.readMem(0xec92));
        // C5 037C
        gbc.setState(0x5a74, 0xca17, 0x5420, 0x7e46, 0xff48, 0x7efa, 0x1, 0x1);
        gbc.writeMem(0x5a74, { 0xc5 });
        gbc.writeMem(0xca15, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xca15, gbc.sp());
        EXPECT(0x5a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xca15));
        EXPECT(0x7e, gbc.readMem(0xca16));
        // C5 037D
        gbc.setState(0xc4a1, 0xaddc, 0x8700, 0xb4d0, 0x5c5b, 0xf51f, 0x0, 0x1);
        gbc.writeMem(0xadda, { 0x0, 0x0 });
        gbc.writeMem(0xc4a1, { 0xc5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xadda, gbc.sp());
        EXPECT(0xc4a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xadda));
        EXPECT(0xb4, gbc.readMem(0xaddb));
        EXPECT(0xc5, gbc.readMem(0xc4a1));
        // C5 037E
        gbc.setState(0xac7d, 0xea51, 0xa3f0, 0x1e65, 0x31dd, 0x2f3b, 0x0, 0x0);
        gbc.writeMem(0xac7d, { 0xc5 });
        gbc.writeMem(0xea4f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea4f, gbc.sp());
        EXPECT(0xac7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xac7d));
        EXPECT(0x65, gbc.readMem(0xea4f));
        EXPECT(0x1e, gbc.readMem(0xea50));
        // C5 0380
        gbc.setState(0x97ac, 0x922d, 0x8f60, 0x2cd7, 0xef99, 0xc52d, 0x0, 0x1);
        gbc.writeMem(0x922b, { 0x0, 0x0 });
        gbc.writeMem(0x97ac, { 0xc5 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x922b, gbc.sp());
        EXPECT(0x97ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x922b));
        EXPECT(0x2c, gbc.readMem(0x922c));
        EXPECT(0xc5, gbc.readMem(0x97ac));
        // C5 0383
        gbc.setState(0xc0b0, 0x908f, 0xb6d0, 0xd601, 0x9655, 0xf5e8, 0x1, 0x1);
        gbc.writeMem(0x908d, { 0x0, 0x0 });
        gbc.writeMem(0xc0b0, { 0xc5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0xc0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x908d));
        EXPECT(0xd6, gbc.readMem(0x908e));
        EXPECT(0xc5, gbc.readMem(0xc0b0));
        // C5 0390
        gbc.setState(0xa05, 0x967e, 0xc900, 0x1c5f, 0x7029, 0x67df, 0x1, 0x0);
        gbc.writeMem(0xa05, { 0xc5 });
        gbc.writeMem(0x967c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x967c));
        EXPECT(0x1c, gbc.readMem(0x967d));
        // C5 0391
        gbc.setState(0x38ab, 0x8e68, 0x74a0, 0x2910, 0x37ff, 0xe4c7, 0x0, 0x0);
        gbc.writeMem(0x38ab, { 0xc5 });
        gbc.writeMem(0x8e66, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0x38ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x8e66));
        EXPECT(0x29, gbc.readMem(0x8e67));
        // C5 0393
        gbc.setState(0x2497, 0xb426, 0x7f70, 0xce72, 0x657c, 0xefdf, 0x1, 0x1);
        gbc.writeMem(0x2497, { 0xc5 });
        gbc.writeMem(0xb424, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb424, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xb424));
        EXPECT(0xce, gbc.readMem(0xb425));
        // C5 0396
        gbc.setState(0x5d7d, 0xe727, 0x33c0, 0xcb83, 0x2a3d, 0x9555, 0x1, 0x1);
        gbc.writeMem(0x5d7d, { 0xc5 });
        gbc.writeMem(0xe725, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe725, gbc.sp());
        EXPECT(0x5d7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xe725));
        EXPECT(0xcb, gbc.readMem(0xe726));
        // C5 0399
        gbc.setState(0x193, 0xa304, 0xbb0, 0x368c, 0xd21, 0xb1bc, 0x1, 0x0);
        gbc.writeMem(0x193, { 0xc5 });
        gbc.writeMem(0xa302, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa302, gbc.sp());
        EXPECT(0x194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa302));
        EXPECT(0x36, gbc.readMem(0xa303));
        // C5 039B
        gbc.setState(0x45f0, 0xafc3, 0xae20, 0x5d8c, 0x70d3, 0x2647, 0x0, 0x1);
        gbc.writeMem(0x45f0, { 0xc5 });
        gbc.writeMem(0xafc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xafc1, gbc.sp());
        EXPECT(0x45f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xafc1));
        EXPECT(0x5d, gbc.readMem(0xafc2));
        // C5 039C
        gbc.setState(0x9efd, 0xeea3, 0xf6b0, 0xac7, 0xde26, 0x9ccb, 0x1, 0x1);
        gbc.writeMem(0x9efd, { 0xc5 });
        gbc.writeMem(0xeea1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0x9efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9efd));
        EXPECT(0xc7, gbc.readMem(0xeea1));
        EXPECT(0xa, gbc.readMem(0xeea2));
        // C5 039D
        gbc.setState(0x7c64, 0x83fc, 0xa200, 0xf4c, 0xf143, 0x5ae6, 0x0, 0x0);
        gbc.writeMem(0x7c64, { 0xc5 });
        gbc.writeMem(0x83fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x83fa, gbc.sp());
        EXPECT(0x7c65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x83fa));
        EXPECT(0xf, gbc.readMem(0x83fb));
        // C5 039E
        gbc.setState(0xe3df, 0x922e, 0xeba0, 0x5739, 0xb556, 0x433b, 0x1, 0x1);
        gbc.writeMem(0x922c, { 0x0, 0x0 });
        gbc.writeMem(0xe3df, { 0xc5 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x922c, gbc.sp());
        EXPECT(0xe3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x922c));
        EXPECT(0x57, gbc.readMem(0x922d));
        EXPECT(0xc5, gbc.readMem(0xe3df));
        // C5 03A0
        gbc.setState(0x1d0f, 0xbbe5, 0x9520, 0x1d39, 0x4ac8, 0xc397, 0x1, 0x1);
        gbc.writeMem(0x1d0f, { 0xc5 });
        gbc.writeMem(0xbbe3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbbe3, gbc.sp());
        EXPECT(0x1d10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbbe3));
        EXPECT(0x1d, gbc.readMem(0xbbe4));
        // C5 03AA
        gbc.setState(0xbf21, 0xca2d, 0xcb50, 0xe58a, 0x8192, 0x7c0e, 0x1, 0x0);
        gbc.writeMem(0xbf21, { 0xc5 });
        gbc.writeMem(0xca2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xca2b, gbc.sp());
        EXPECT(0xbf22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbf21));
        EXPECT(0x8a, gbc.readMem(0xca2b));
        EXPECT(0xe5, gbc.readMem(0xca2c));
        // C5 03AB
        gbc.setState(0x6135, 0xe9d4, 0xacf0, 0xc58, 0x5590, 0xd5c5, 0x0, 0x0);
        gbc.writeMem(0x6135, { 0xc5 });
        gbc.writeMem(0xe9d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe9d2, gbc.sp());
        EXPECT(0x6136, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xe9d2));
        EXPECT(0xc, gbc.readMem(0xe9d3));
        // C5 03AD
        gbc.setState(0x16fb, 0xfeca, 0x46d0, 0x2024, 0x1a3e, 0x6153, 0x1, 0x1);
        gbc.writeMem(0x16fb, { 0xc5 });
        gbc.writeMem(0xfec8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xfec8, gbc.sp());
        EXPECT(0x16fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xfec8));
        EXPECT(0x20, gbc.readMem(0xfec9));
        // C5 03AE
        gbc.setState(0x6e10, 0x9d84, 0x1700, 0x5796, 0x4828, 0xe919, 0x1, 0x1);
        gbc.writeMem(0x6e10, { 0xc5 });
        gbc.writeMem(0x9d82, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9d82, gbc.sp());
        EXPECT(0x6e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9d82));
        EXPECT(0x57, gbc.readMem(0x9d83));
        // C5 03AF
        gbc.setState(0xdefc, 0xf321, 0x8250, 0x7326, 0x9d10, 0xda8e, 0x0, 0x1);
        gbc.writeMem(0xdefc, { 0xc5 });
        gbc.writeMem(0xf31f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf31f, gbc.sp());
        EXPECT(0xdefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xdefc));
        EXPECT(0x26, gbc.readMem(0xf31f));
        EXPECT(0x73, gbc.readMem(0xf320));
        // C5 03B0
        gbc.setState(0x9665, 0xfa85, 0xee10, 0xf6f5, 0x9ec9, 0x8dbd, 0x0, 0x1);
        gbc.writeMem(0x9665, { 0xc5 });
        gbc.writeMem(0xfa83, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xfa83, gbc.sp());
        EXPECT(0x9666, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9665));
        EXPECT(0xf5, gbc.readMem(0xfa83));
        EXPECT(0xf6, gbc.readMem(0xfa84));
        // C5 03B2
        gbc.setState(0x966c, 0x9159, 0xa950, 0x83dd, 0x3fbc, 0xd888, 0x0, 0x1);
        gbc.writeMem(0x9157, { 0x0, 0x0 });
        gbc.writeMem(0x966c, { 0xc5 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x9157, gbc.sp());
        EXPECT(0x966d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9157));
        EXPECT(0x83, gbc.readMem(0x9158));
        EXPECT(0xc5, gbc.readMem(0x966c));
        // C5 03B5
        gbc.setState(0xc198, 0xdd88, 0x5ac0, 0x30c, 0x3c7f, 0xb175, 0x1, 0x1);
        gbc.writeMem(0xc198, { 0xc5 });
        gbc.writeMem(0xdd86, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdd86, gbc.sp());
        EXPECT(0xc199, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc198));
        EXPECT(0xc, gbc.readMem(0xdd86));
        EXPECT(0x3, gbc.readMem(0xdd87));
        // C5 03B6
        gbc.setState(0xa6d2, 0x9a76, 0x1710, 0x1357, 0xc4fb, 0x205d, 0x1, 0x1);
        gbc.writeMem(0x9a74, { 0x0, 0x0 });
        gbc.writeMem(0xa6d2, { 0xc5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a74, gbc.sp());
        EXPECT(0xa6d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x9a74));
        EXPECT(0x13, gbc.readMem(0x9a75));
        EXPECT(0xc5, gbc.readMem(0xa6d2));
        // C5 03B7
        gbc.setState(0x2053, 0x8476, 0x8f70, 0x139d, 0xa6a3, 0x766, 0x1, 0x1);
        gbc.writeMem(0x2053, { 0xc5 });
        gbc.writeMem(0x8474, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8474, gbc.sp());
        EXPECT(0x2054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x8474));
        EXPECT(0x13, gbc.readMem(0x8475));
        // C5 03B9
        gbc.setState(0xefb6, 0xd881, 0x2190, 0x9716, 0x10d7, 0xbbde, 0x1, 0x0);
        gbc.writeMem(0xd87f, { 0x0, 0x0 });
        gbc.writeMem(0xefb6, { 0xc5 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd87f, gbc.sp());
        EXPECT(0xefb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd87f));
        EXPECT(0x97, gbc.readMem(0xd880));
        EXPECT(0xc5, gbc.readMem(0xefb6));
        // C5 03BA
        gbc.setState(0x2ae0, 0xcb50, 0x6d0, 0xb9b7, 0x9401, 0x2dd5, 0x1, 0x0);
        gbc.writeMem(0x2ae0, { 0xc5 });
        gbc.writeMem(0xcb4e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xcb4e, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcb4e));
        EXPECT(0xb9, gbc.readMem(0xcb4f));
        // C5 03BF
        gbc.setState(0xdd65, 0xbc38, 0x8aa0, 0x5758, 0x37ca, 0x4bf7, 0x1, 0x0);
        gbc.writeMem(0xbc36, { 0x0, 0x0 });
        gbc.writeMem(0xdd65, { 0xc5 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbc36, gbc.sp());
        EXPECT(0xdd66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbc36));
        EXPECT(0x57, gbc.readMem(0xbc37));
        EXPECT(0xc5, gbc.readMem(0xdd65));
        // C5 03C1
        gbc.setState(0xab15, 0xc2ac, 0xd6e0, 0xf3f, 0xff3a, 0x8262, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0xc5 });
        gbc.writeMem(0xc2aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc2aa, gbc.sp());
        EXPECT(0xab16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xab15));
        EXPECT(0x3f, gbc.readMem(0xc2aa));
        EXPECT(0xf, gbc.readMem(0xc2ab));
        // C5 03C2
        gbc.setState(0xc64f, 0xea40, 0x8dc0, 0x9009, 0xe644, 0x1cb1, 0x1, 0x1);
        gbc.writeMem(0xc64f, { 0xc5 });
        gbc.writeMem(0xea3e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xea3e, gbc.sp());
        EXPECT(0xc650, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc64f));
        EXPECT(0x9, gbc.readMem(0xea3e));
        EXPECT(0x90, gbc.readMem(0xea3f));
        // C5 03C4
        gbc.setState(0x4b5e, 0x82d9, 0x69f0, 0xb31d, 0xb274, 0xb851, 0x1, 0x0);
        gbc.writeMem(0x4b5e, { 0xc5 });
        gbc.writeMem(0x82d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x82d7, gbc.sp());
        EXPECT(0x4b5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x82d7));
        EXPECT(0xb3, gbc.readMem(0x82d8));
        // C5 03C7
        gbc.setState(0xbaa5, 0xe10c, 0x3590, 0x1609, 0x8adf, 0xef5e, 0x1, 0x0);
        gbc.writeMem(0xbaa5, { 0xc5 });
        gbc.writeMem(0xe10a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0xbaa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbaa5));
        EXPECT(0x9, gbc.readMem(0xe10a));
        EXPECT(0x16, gbc.readMem(0xe10b));
        // C5 03CC
        gbc.setState(0x9981, 0xeddf, 0xcd0, 0xe741, 0x7071, 0xf290, 0x0, 0x1);
        gbc.writeMem(0x9981, { 0xc5 });
        gbc.writeMem(0xeddd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xeddd, gbc.sp());
        EXPECT(0x9982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9981));
        EXPECT(0x41, gbc.readMem(0xeddd));
        EXPECT(0xe7, gbc.readMem(0xedde));
        // C5 03CE
        gbc.setState(0xe713, 0xe310, 0xd40, 0xb585, 0x965c, 0xa418, 0x0, 0x0);
        gbc.writeMem(0xe30e, { 0x0, 0x0 });
        gbc.writeMem(0xe713, { 0xc5 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe30e, gbc.sp());
        EXPECT(0xe714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xe30e));
        EXPECT(0xb5, gbc.readMem(0xe30f));
        EXPECT(0xc5, gbc.readMem(0xe713));
        // C5 03CF
        gbc.setState(0x14a7, 0xe82d, 0x1e60, 0x26e4, 0xc76b, 0xb704, 0x1, 0x0);
        gbc.writeMem(0x14a7, { 0xc5 });
        gbc.writeMem(0xe82b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0x14a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xe82b));
        EXPECT(0x26, gbc.readMem(0xe82c));
        // C5 03D0
        gbc.setState(0xa934, 0xf18f, 0xb610, 0xf4b9, 0x4e07, 0xe63d, 0x0, 0x0);
        gbc.writeMem(0xa934, { 0xc5 });
        gbc.writeMem(0xf18d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0xa935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa934));
        EXPECT(0xb9, gbc.readMem(0xf18d));
        EXPECT(0xf4, gbc.readMem(0xf18e));
        // C5 03D3
        gbc.setState(0xb4d7, 0x8902, 0x4b10, 0x515d, 0xc79f, 0x9c7, 0x0, 0x0);
        gbc.writeMem(0x8900, { 0x0, 0x0 });
        gbc.writeMem(0xb4d7, { 0xc5 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8900, gbc.sp());
        EXPECT(0xb4d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8900));
        EXPECT(0x51, gbc.readMem(0x8901));
        EXPECT(0xc5, gbc.readMem(0xb4d7));
        // C5 03D4
        gbc.setState(0x34, 0xafd6, 0xf480, 0x794b, 0xc815, 0xde7a, 0x1, 0x0);
        gbc.writeMem(0x34, { 0xc5 });
        gbc.writeMem(0xafd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xafd4, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xafd4));
        EXPECT(0x79, gbc.readMem(0xafd5));
        // C5 03D7
        gbc.setState(0x4d5c, 0x81e4, 0xe2d0, 0xddec, 0x300, 0x6f2b, 0x0, 0x1);
        gbc.writeMem(0x4d5c, { 0xc5 });
        gbc.writeMem(0x81e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x81e2, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x81e2));
        EXPECT(0xdd, gbc.readMem(0x81e3));
        // C5 03D8
        gbc.setState(0x9541, 0xf906, 0xbdc0, 0x11b1, 0x58be, 0x9c67, 0x0, 0x1);
        gbc.writeMem(0x9541, { 0xc5 });
        gbc.writeMem(0xf904, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf904, gbc.sp());
        EXPECT(0x9542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9541));
        EXPECT(0xb1, gbc.readMem(0xf904));
        EXPECT(0x11, gbc.readMem(0xf905));
        // C5 03DC
        gbc.setState(0x48b7, 0xc0b2, 0xa4b0, 0x6227, 0x261d, 0x690a, 0x0, 0x1);
        gbc.writeMem(0x48b7, { 0xc5 });
        gbc.writeMem(0xc0b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc0b0, gbc.sp());
        EXPECT(0x48b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc0b0));
        EXPECT(0x62, gbc.readMem(0xc0b1));
        // C5 03DD
        gbc.setState(0x475c, 0xea25, 0x1250, 0xfe6e, 0x9878, 0x7b10, 0x1, 0x0);
        gbc.writeMem(0x475c, { 0xc5 });
        gbc.writeMem(0xea23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xea23, gbc.sp());
        EXPECT(0x475d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xea23));
        EXPECT(0xfe, gbc.readMem(0xea24));
        // C5 03DE
        gbc.setState(0x8e65, 0xeab1, 0x7a30, 0x2db6, 0xff87, 0xb18, 0x0, 0x0);
        gbc.writeMem(0x8e65, { 0xc5 });
        gbc.writeMem(0xeaaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xeaaf, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8e65));
        EXPECT(0xb6, gbc.readMem(0xeaaf));
        EXPECT(0x2d, gbc.readMem(0xeab0));
        // C5 03DF
        gbc.setState(0x9b67, 0xdbf3, 0x3fe0, 0xe511, 0xe1ad, 0x6a42, 0x1, 0x1);
        gbc.writeMem(0x9b67, { 0xc5 });
        gbc.writeMem(0xdbf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdbf1, gbc.sp());
        EXPECT(0x9b68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x9b67));
        EXPECT(0x11, gbc.readMem(0xdbf1));
        EXPECT(0xe5, gbc.readMem(0xdbf2));
        // C5 03E0
        gbc.setState(0x8f28, 0x8594, 0xe00, 0x59d8, 0x525a, 0xb6b7, 0x0, 0x1);
        gbc.writeMem(0x8592, { 0x0, 0x0 });
        gbc.writeMem(0x8f28, { 0xc5 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8592, gbc.sp());
        EXPECT(0x8f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x8592));
        EXPECT(0x59, gbc.readMem(0x8593));
        EXPECT(0xc5, gbc.readMem(0x8f28));
        // C5 03E2
        gbc.setState(0xcad7, 0xf592, 0x9820, 0x5654, 0x23fa, 0x3bc5, 0x1, 0x1);
        gbc.writeMem(0xcad7, { 0xc5 });
        gbc.writeMem(0xf590, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0xcad8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xcad7));
        EXPECT(0x54, gbc.readMem(0xf590));
        EXPECT(0x56, gbc.readMem(0xf591));
        // C5 03E3
        gbc.setState(0x5745, 0xa565, 0xc360, 0xa9eb, 0x3c1a, 0x6055, 0x1, 0x0);
        gbc.writeMem(0x5745, { 0xc5 });
        gbc.writeMem(0xa563, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa563, gbc.sp());
        EXPECT(0x5746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa563));
        EXPECT(0xa9, gbc.readMem(0xa564));
        // C5 03E7
        gbc.setState(0xa4aa, 0x8c02, 0x2b0, 0xb385, 0x8a59, 0xd7d, 0x1, 0x1);
        gbc.writeMem(0x8c00, { 0x0, 0x0 });
        gbc.writeMem(0xa4aa, { 0xc5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x8c00, gbc.sp());
        EXPECT(0xa4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x8c00));
        EXPECT(0xb3, gbc.readMem(0x8c01));
        EXPECT(0xc5, gbc.readMem(0xa4aa));
    }
