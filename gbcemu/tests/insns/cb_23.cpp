#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_23)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_23) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 23 0000
        gbc.setState(0xb6f2, 0x7fe6, 0xc420, 0xe309, 0x17f, 0xc71b, 0x0, 0x1);
        gbc.writeMem(0xb6f2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7fe6);
        EXPECT(gbc.pc(), 0xb6f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6f2), 0xcb);
        EXPECT(gbc.readMem(0xb6f3), 0x23);
        // CB 23 0001
        gbc.setState(0xbb99, 0xfcd0, 0x9e90, 0x9824, 0x6060, 0xdf26, 0x1, 0x1);
        gbc.writeMem(0xbb99, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xfcd0);
        EXPECT(gbc.pc(), 0xbb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb99), 0xcb);
        EXPECT(gbc.readMem(0xbb9a), 0x23);
        // CB 23 0002
        gbc.setState(0x2d10, 0x1a84, 0x96d0, 0x292, 0xfc47, 0xdcd8, 0x0, 0x0);
        gbc.writeMem(0x2d10, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1a84);
        EXPECT(gbc.pc(), 0x2d12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0004
        gbc.setState(0x8cb1, 0x387, 0x19e0, 0x5551, 0xc9bd, 0xaee4, 0x0, 0x1);
        gbc.writeMem(0x8cb1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x387);
        EXPECT(gbc.pc(), 0x8cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cb1), 0xcb);
        EXPECT(gbc.readMem(0x8cb2), 0x23);
        // CB 23 0005
        gbc.setState(0xe584, 0x2dc4, 0xb80, 0xb202, 0x8b36, 0x9c09, 0x0, 0x0);
        gbc.writeMem(0xe584, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x2dc4);
        EXPECT(gbc.pc(), 0xe586);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe584), 0xcb);
        EXPECT(gbc.readMem(0xe585), 0x23);
        // CB 23 0006
        gbc.setState(0xc435, 0xa700, 0x6250, 0x41a1, 0x779c, 0x8f6, 0x1, 0x0);
        gbc.writeMem(0xc435, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xa700);
        EXPECT(gbc.pc(), 0xc437);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc435), 0xcb);
        EXPECT(gbc.readMem(0xc436), 0x23);
        // CB 23 0007
        gbc.setState(0x272c, 0x5646, 0x9780, 0xb72f, 0x3ffe, 0xc263, 0x0, 0x1);
        gbc.writeMem(0x272c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x272e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0008
        gbc.setState(0x3c35, 0xeb57, 0xd570, 0x1b53, 0x7b4b, 0xc01b, 0x0, 0x0);
        gbc.writeMem(0x3c35, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xeb57);
        EXPECT(gbc.pc(), 0x3c37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0009
        gbc.setState(0x253d, 0x5a5d, 0xe4a0, 0x29c, 0x288d, 0xcfe8, 0x0, 0x1);
        gbc.writeMem(0x253d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x5a5d);
        EXPECT(gbc.pc(), 0x253f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 000A
        gbc.setState(0x768f, 0x5ed6, 0xd430, 0x2696, 0x648f, 0x17d6, 0x0, 0x1);
        gbc.writeMem(0x768f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5ed6);
        EXPECT(gbc.pc(), 0x7691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 000B
        gbc.setState(0xba7d, 0xeb00, 0x78f0, 0xe66a, 0xcbe0, 0xe9a5, 0x1, 0x1);
        gbc.writeMem(0xba7d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xeb00);
        EXPECT(gbc.pc(), 0xba7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7d), 0xcb);
        EXPECT(gbc.readMem(0xba7e), 0x23);
        // CB 23 000C
        gbc.setState(0x495c, 0xd6b5, 0x3da0, 0x7cd9, 0x3e81, 0xcf5d, 0x1, 0x1);
        gbc.writeMem(0x495c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd6b5);
        EXPECT(gbc.pc(), 0x495e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 000D
        gbc.setState(0xeff0, 0xdae1, 0xdac0, 0x3df6, 0x687e, 0xaac4, 0x0, 0x0);
        gbc.writeMem(0xeff0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdae1);
        EXPECT(gbc.pc(), 0xeff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff0), 0xcb);
        EXPECT(gbc.readMem(0xeff1), 0x23);
        // CB 23 000E
        gbc.setState(0x82e2, 0x9303, 0x93e0, 0xdeea, 0x5bef, 0x3b58, 0x0, 0x1);
        gbc.writeMem(0x82e2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9303);
        EXPECT(gbc.pc(), 0x82e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82e2), 0xcb);
        EXPECT(gbc.readMem(0x82e3), 0x23);
        // CB 23 000F
        gbc.setState(0xe4c9, 0xf8b9, 0x5520, 0x60a6, 0xca70, 0x75d2, 0x1, 0x0);
        gbc.writeMem(0xe4c9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xf8b9);
        EXPECT(gbc.pc(), 0xe4cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c9), 0xcb);
        EXPECT(gbc.readMem(0xe4ca), 0x23);
        // CB 23 0010
        gbc.setState(0xa9cc, 0x3a7, 0xc070, 0xac1f, 0x5aa3, 0xb603, 0x0, 0x0);
        gbc.writeMem(0xa9cc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3a7);
        EXPECT(gbc.pc(), 0xa9ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cc), 0xcb);
        EXPECT(gbc.readMem(0xa9cd), 0x23);
        // CB 23 0011
        gbc.setState(0xe431, 0x4f5f, 0xc760, 0x4503, 0xbd07, 0x9e01, 0x0, 0x1);
        gbc.writeMem(0xe431, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4f5f);
        EXPECT(gbc.pc(), 0xe433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe431), 0xcb);
        EXPECT(gbc.readMem(0xe432), 0x23);
        // CB 23 0012
        gbc.setState(0x214, 0x72ad, 0xf0c0, 0x8f5, 0x596c, 0x9dd6, 0x1, 0x1);
        gbc.writeMem(0x214, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x72ad);
        EXPECT(gbc.pc(), 0x216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0013
        gbc.setState(0xd161, 0x64fe, 0xf290, 0xf784, 0xa3dd, 0x6664, 0x0, 0x1);
        gbc.writeMem(0xd161, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x64fe);
        EXPECT(gbc.pc(), 0xd163);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd161), 0xcb);
        EXPECT(gbc.readMem(0xd162), 0x23);
        // CB 23 0014
        gbc.setState(0x4c2f, 0x7e9a, 0x3100, 0x8d38, 0xc82c, 0x5c1d, 0x0, 0x0);
        gbc.writeMem(0x4c2f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7e9a);
        EXPECT(gbc.pc(), 0x4c31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0015
        gbc.setState(0x6d6c, 0xc5e9, 0x5940, 0x54b2, 0xad48, 0xa48f, 0x0, 0x0);
        gbc.writeMem(0x6d6c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc5e9);
        EXPECT(gbc.pc(), 0x6d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0016
        gbc.setState(0xa0ad, 0xba69, 0x71d0, 0x1ab1, 0xdaa5, 0xa6e3, 0x1, 0x1);
        gbc.writeMem(0xa0ad, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xba69);
        EXPECT(gbc.pc(), 0xa0af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0ad), 0xcb);
        EXPECT(gbc.readMem(0xa0ae), 0x23);
        // CB 23 0017
        gbc.setState(0x4d45, 0xfb60, 0xa7e0, 0x4585, 0x2ee8, 0x706c, 0x0, 0x1);
        gbc.writeMem(0x4d45, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfb60);
        EXPECT(gbc.pc(), 0x4d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0018
        gbc.setState(0xb63, 0x52f8, 0xa590, 0xa715, 0x69b9, 0x64b1, 0x1, 0x1);
        gbc.writeMem(0xb63, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x52f8);
        EXPECT(gbc.pc(), 0xb65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 001A
        gbc.setState(0x10d, 0xbe99, 0x4f10, 0x1d14, 0x7ad4, 0x5d64, 0x0, 0x1);
        gbc.writeMem(0x10d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbe99);
        EXPECT(gbc.pc(), 0x10f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 001B
        gbc.setState(0xac7f, 0x37d3, 0x6e60, 0x64a, 0x83d0, 0x7797, 0x1, 0x0);
        gbc.writeMem(0xac7f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x37d3);
        EXPECT(gbc.pc(), 0xac81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac7f), 0xcb);
        EXPECT(gbc.readMem(0xac80), 0x23);
        // CB 23 001C
        gbc.setState(0x55e3, 0x402c, 0xac70, 0xba58, 0x7bb4, 0x3241, 0x0, 0x1);
        gbc.writeMem(0x55e3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x402c);
        EXPECT(gbc.pc(), 0x55e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 001D
        gbc.setState(0x14ab, 0xf5d, 0xae80, 0x1aa5, 0x4ea0, 0xb6e7, 0x0, 0x1);
        gbc.writeMem(0x14ab, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xf5d);
        EXPECT(gbc.pc(), 0x14ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 001E
        gbc.setState(0x999a, 0xd97, 0x4750, 0xb5f2, 0xe016, 0x8b48, 0x1, 0x1);
        gbc.writeMem(0x999a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xd97);
        EXPECT(gbc.pc(), 0x999c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x999a), 0xcb);
        EXPECT(gbc.readMem(0x999b), 0x23);
        // CB 23 001F
        gbc.setState(0xac8b, 0x6675, 0x52d0, 0x84a, 0xf1f0, 0xccd4, 0x1, 0x0);
        gbc.writeMem(0xac8b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6675);
        EXPECT(gbc.pc(), 0xac8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac8b), 0xcb);
        EXPECT(gbc.readMem(0xac8c), 0x23);
        // CB 23 0020
        gbc.setState(0x1187, 0x354a, 0x56b0, 0x8fdd, 0x5399, 0x2c24, 0x0, 0x1);
        gbc.writeMem(0x1187, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x354a);
        EXPECT(gbc.pc(), 0x1189);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0021
        gbc.setState(0xd49, 0x1786, 0x6fb0, 0x44a8, 0x2645, 0x9254, 0x0, 0x1);
        gbc.writeMem(0xd49, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1786);
        EXPECT(gbc.pc(), 0xd4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0022
        gbc.setState(0xc04c, 0xe2bd, 0x5300, 0xec7a, 0xa6ce, 0xef8d, 0x1, 0x1);
        gbc.writeMem(0xc04c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xe2bd);
        EXPECT(gbc.pc(), 0xc04e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc04c), 0xcb);
        EXPECT(gbc.readMem(0xc04d), 0x23);
        // CB 23 0024
        gbc.setState(0x6aff, 0x3646, 0xecc0, 0xe190, 0x7286, 0xb053, 0x0, 0x1);
        gbc.writeMem(0x6aff, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3646);
        EXPECT(gbc.pc(), 0x6b01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0025
        gbc.setState(0xf0c, 0x3dd9, 0x6160, 0x6f96, 0x9a69, 0x12b, 0x0, 0x1);
        gbc.writeMem(0xf0c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3dd9);
        EXPECT(gbc.pc(), 0xf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0026
        gbc.setState(0xb446, 0xaeae, 0xd10, 0x263e, 0x6e6b, 0x3cfa, 0x0, 0x1);
        gbc.writeMem(0xb446, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xaeae);
        EXPECT(gbc.pc(), 0xb448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb446), 0xcb);
        EXPECT(gbc.readMem(0xb447), 0x23);
        // CB 23 0027
        gbc.setState(0xcccf, 0x22e6, 0x1870, 0xe074, 0xe397, 0xd07f, 0x1, 0x0);
        gbc.writeMem(0xcccf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x22e6);
        EXPECT(gbc.pc(), 0xccd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcccf), 0xcb);
        EXPECT(gbc.readMem(0xccd0), 0x23);
        // CB 23 0028
        gbc.setState(0x56b8, 0x3e80, 0x1760, 0xeabf, 0x36d2, 0x1737, 0x0, 0x0);
        gbc.writeMem(0x56b8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3e80);
        EXPECT(gbc.pc(), 0x56ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0029
        gbc.setState(0x3ff4, 0xe60f, 0x3f70, 0x29cb, 0x1336, 0xa9dd, 0x0, 0x1);
        gbc.writeMem(0x3ff4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe60f);
        EXPECT(gbc.pc(), 0x3ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 002A
        gbc.setState(0xed20, 0x7d64, 0x9350, 0x5024, 0x2d21, 0x86ed, 0x0, 0x1);
        gbc.writeMem(0xed20, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x7d64);
        EXPECT(gbc.pc(), 0xed22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed20), 0xcb);
        EXPECT(gbc.readMem(0xed21), 0x23);
        // CB 23 002B
        gbc.setState(0xdb93, 0xb365, 0x4ae0, 0x62c2, 0x8027, 0x9fd9, 0x0, 0x1);
        gbc.writeMem(0xdb93, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0xdb95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb93), 0xcb);
        EXPECT(gbc.readMem(0xdb94), 0x23);
        // CB 23 002C
        gbc.setState(0x1ecd, 0xcb48, 0x4f30, 0x18bd, 0xf7e9, 0x1abb, 0x1, 0x1);
        gbc.writeMem(0x1ecd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xcb48);
        EXPECT(gbc.pc(), 0x1ecf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 002D
        gbc.setState(0x2a2b, 0x2052, 0x5c80, 0x43bf, 0xf3a7, 0x59b3, 0x1, 0x1);
        gbc.writeMem(0x2a2b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x2052);
        EXPECT(gbc.pc(), 0x2a2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 002E
        gbc.setState(0x657e, 0x8e64, 0xe650, 0x1ba8, 0xe28b, 0x143d, 0x0, 0x1);
        gbc.writeMem(0x657e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8e64);
        EXPECT(gbc.pc(), 0x6580);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 002F
        gbc.setState(0x5e59, 0xaa65, 0xc700, 0x352, 0x7cc8, 0x3cd3, 0x1, 0x1);
        gbc.writeMem(0x5e59, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaa65);
        EXPECT(gbc.pc(), 0x5e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0031
        gbc.setState(0xb07d, 0xf501, 0x37c0, 0xe0c3, 0x9b82, 0x88c6, 0x0, 0x1);
        gbc.writeMem(0xb07d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0xb07f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07d), 0xcb);
        EXPECT(gbc.readMem(0xb07e), 0x23);
        // CB 23 0032
        gbc.setState(0x49c2, 0x64f1, 0xe5e0, 0xe371, 0x5f01, 0xe73d, 0x0, 0x1);
        gbc.writeMem(0x49c2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x64f1);
        EXPECT(gbc.pc(), 0x49c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0033
        gbc.setState(0x55a3, 0x2b5, 0x3260, 0xe7cc, 0x146a, 0xdbf1, 0x0, 0x1);
        gbc.writeMem(0x55a3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2b5);
        EXPECT(gbc.pc(), 0x55a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0034
        gbc.setState(0x7d53, 0x6b70, 0xbf20, 0x8a40, 0xdf14, 0x1366, 0x0, 0x1);
        gbc.writeMem(0x7d53, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6b70);
        EXPECT(gbc.pc(), 0x7d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0035
        gbc.setState(0x4de, 0x9b1a, 0xee00, 0xa9c7, 0x880f, 0x310f, 0x1, 0x0);
        gbc.writeMem(0x4de, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9b1a);
        EXPECT(gbc.pc(), 0x4e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0036
        gbc.setState(0xe242, 0x3199, 0x8c60, 0xc13d, 0xf8b1, 0x5c7e, 0x1, 0x0);
        gbc.writeMem(0xe242, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x3199);
        EXPECT(gbc.pc(), 0xe244);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe242), 0xcb);
        EXPECT(gbc.readMem(0xe243), 0x23);
        // CB 23 0037
        gbc.setState(0xabaf, 0x44a7, 0x750, 0x2690, 0xe573, 0xff7b, 0x0, 0x1);
        gbc.writeMem(0xabaf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x44a7);
        EXPECT(gbc.pc(), 0xabb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabaf), 0xcb);
        EXPECT(gbc.readMem(0xabb0), 0x23);
        // CB 23 0038
        gbc.setState(0xe4e2, 0x9957, 0x1400, 0x2d87, 0x6460, 0x9198, 0x0, 0x1);
        gbc.writeMem(0xe4e2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9957);
        EXPECT(gbc.pc(), 0xe4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e2), 0xcb);
        EXPECT(gbc.readMem(0xe4e3), 0x23);
        // CB 23 003A
        gbc.setState(0x4b95, 0x23f7, 0xd9b0, 0xb6c4, 0x4582, 0x5f83, 0x0, 0x1);
        gbc.writeMem(0x4b95, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x23f7);
        EXPECT(gbc.pc(), 0x4b97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 003B
        gbc.setState(0x6d4c, 0x414a, 0x71a0, 0x6444, 0x9e10, 0x64f2, 0x0, 0x1);
        gbc.writeMem(0x6d4c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x414a);
        EXPECT(gbc.pc(), 0x6d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 003C
        gbc.setState(0xbb1e, 0x9b32, 0x66c0, 0x4d74, 0xd23c, 0xe747, 0x0, 0x1);
        gbc.writeMem(0xbb1e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9b32);
        EXPECT(gbc.pc(), 0xbb20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb1e), 0xcb);
        EXPECT(gbc.readMem(0xbb1f), 0x23);
        // CB 23 003D
        gbc.setState(0x9b72, 0x7f31, 0xb60, 0xa3b0, 0x179a, 0x55e5, 0x1, 0x1);
        gbc.writeMem(0x9b72, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7f31);
        EXPECT(gbc.pc(), 0x9b74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b72), 0xcb);
        EXPECT(gbc.readMem(0x9b73), 0x23);
        // CB 23 003E
        gbc.setState(0x5e23, 0x879d, 0x17e0, 0xbbef, 0xb72, 0x2763, 0x0, 0x1);
        gbc.writeMem(0x5e23, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x879d);
        EXPECT(gbc.pc(), 0x5e25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 003F
        gbc.setState(0xa781, 0x83b3, 0xd1a0, 0x8e25, 0x4b9f, 0x92cd, 0x0, 0x1);
        gbc.writeMem(0xa781, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x83b3);
        EXPECT(gbc.pc(), 0xa783);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa781), 0xcb);
        EXPECT(gbc.readMem(0xa782), 0x23);
        // CB 23 0040
        gbc.setState(0x6ec9, 0x769b, 0x9ec0, 0x56ad, 0xcceb, 0x47cd, 0x0, 0x0);
        gbc.writeMem(0x6ec9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x769b);
        EXPECT(gbc.pc(), 0x6ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0041
        gbc.setState(0x5419, 0x5613, 0x9bc0, 0x2131, 0x27fb, 0xbad9, 0x1, 0x0);
        gbc.writeMem(0x5419, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5613);
        EXPECT(gbc.pc(), 0x541b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0042
        gbc.setState(0x580a, 0x4b2d, 0xfcf0, 0x8d14, 0xcf5d, 0x2945, 0x0, 0x1);
        gbc.writeMem(0x580a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4b2d);
        EXPECT(gbc.pc(), 0x580c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0044
        gbc.setState(0x2f35, 0x5a8a, 0xaa70, 0x3306, 0x9a19, 0x1485, 0x0, 0x1);
        gbc.writeMem(0x2f35, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5a8a);
        EXPECT(gbc.pc(), 0x2f37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0045
        gbc.setState(0x51c1, 0x2f9b, 0xa4e0, 0x36cd, 0xf10c, 0xa005, 0x0, 0x1);
        gbc.writeMem(0x51c1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x2f9b);
        EXPECT(gbc.pc(), 0x51c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0046
        gbc.setState(0x3370, 0x9a81, 0xab10, 0x6df8, 0xa17c, 0x6cc, 0x1, 0x0);
        gbc.writeMem(0x3370, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9a81);
        EXPECT(gbc.pc(), 0x3372);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0047
        gbc.setState(0x65b1, 0xa68d, 0xe8e0, 0x90ef, 0xe401, 0x5b72, 0x0, 0x0);
        gbc.writeMem(0x65b1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xa68d);
        EXPECT(gbc.pc(), 0x65b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0049
        gbc.setState(0xfa1, 0xebf1, 0x4c20, 0xbe7a, 0x9ad7, 0x724a, 0x0, 0x1);
        gbc.writeMem(0xfa1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xebf1);
        EXPECT(gbc.pc(), 0xfa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 004A
        gbc.setState(0x7025, 0xfb47, 0x9bc0, 0xd082, 0x53c, 0xfacc, 0x0, 0x1);
        gbc.writeMem(0x7025, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xfb47);
        EXPECT(gbc.pc(), 0x7027);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 004B
        gbc.setState(0xac02, 0x98bb, 0x700, 0xe3aa, 0x70f2, 0x6cfb, 0x0, 0x0);
        gbc.writeMem(0xac02, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x98bb);
        EXPECT(gbc.pc(), 0xac04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac02), 0xcb);
        EXPECT(gbc.readMem(0xac03), 0x23);
        // CB 23 004C
        gbc.setState(0xd448, 0x94be, 0x3840, 0xfa44, 0xf411, 0xaf0f, 0x1, 0x1);
        gbc.writeMem(0xd448, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x94be);
        EXPECT(gbc.pc(), 0xd44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd448), 0xcb);
        EXPECT(gbc.readMem(0xd449), 0x23);
        // CB 23 004D
        gbc.setState(0x39eb, 0x410b, 0x6e20, 0xe560, 0x6030, 0x44, 0x1, 0x1);
        gbc.writeMem(0x39eb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x410b);
        EXPECT(gbc.pc(), 0x39ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 004E
        gbc.setState(0x49c5, 0x7ad8, 0x1cb0, 0x9a02, 0xd5a5, 0xb8f4, 0x1, 0x1);
        gbc.writeMem(0x49c5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7ad8);
        EXPECT(gbc.pc(), 0x49c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 004F
        gbc.setState(0x1b2b, 0x10d5, 0xb550, 0x810f, 0x79fa, 0x743c, 0x1, 0x0);
        gbc.writeMem(0x1b2b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x10d5);
        EXPECT(gbc.pc(), 0x1b2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0052
        gbc.setState(0x864c, 0x92ca, 0xeb0, 0xa262, 0xfc46, 0xd024, 0x0, 0x0);
        gbc.writeMem(0x864c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x92ca);
        EXPECT(gbc.pc(), 0x864e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864c), 0xcb);
        EXPECT(gbc.readMem(0x864d), 0x23);
        // CB 23 0053
        gbc.setState(0x9d3, 0xeac5, 0xed50, 0x3d67, 0xac6e, 0xf3fb, 0x1, 0x0);
        gbc.writeMem(0x9d3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xeac5);
        EXPECT(gbc.pc(), 0x9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0054
        gbc.setState(0xefea, 0xc450, 0xe3b0, 0x6050, 0xfee2, 0x1c71, 0x0, 0x0);
        gbc.writeMem(0xefea, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc450);
        EXPECT(gbc.pc(), 0xefec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefea), 0xcb);
        EXPECT(gbc.readMem(0xefeb), 0x23);
        // CB 23 0055
        gbc.setState(0xa4cc, 0xe352, 0x4f50, 0x3dc2, 0x137d, 0x80e9, 0x0, 0x0);
        gbc.writeMem(0xa4cc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe352);
        EXPECT(gbc.pc(), 0xa4ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4cc), 0xcb);
        EXPECT(gbc.readMem(0xa4cd), 0x23);
        // CB 23 0056
        gbc.setState(0xc0ca, 0xb7c4, 0x5420, 0x27a, 0x2a09, 0x2153, 0x1, 0x1);
        gbc.writeMem(0xc0ca, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb7c4);
        EXPECT(gbc.pc(), 0xc0cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ca), 0xcb);
        EXPECT(gbc.readMem(0xc0cb), 0x23);
        // CB 23 0057
        gbc.setState(0x52e, 0xee1a, 0xd490, 0xa311, 0x9040, 0xd4f6, 0x1, 0x1);
        gbc.writeMem(0x52e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xee1a);
        EXPECT(gbc.pc(), 0x530);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0059
        gbc.setState(0x50ce, 0x3091, 0xc730, 0xa294, 0x920f, 0xfbf2, 0x0, 0x1);
        gbc.writeMem(0x50ce, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3091);
        EXPECT(gbc.pc(), 0x50d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 005A
        gbc.setState(0xde1d, 0xeffd, 0xe0f0, 0xca59, 0x19eb, 0xbd8, 0x0, 0x1);
        gbc.writeMem(0xde1d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xeffd);
        EXPECT(gbc.pc(), 0xde1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde1d), 0xcb);
        EXPECT(gbc.readMem(0xde1e), 0x23);
        // CB 23 005B
        gbc.setState(0x630f, 0x8706, 0x9570, 0xdbcd, 0xecce, 0x6a60, 0x1, 0x1);
        gbc.writeMem(0x630f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8706);
        EXPECT(gbc.pc(), 0x6311);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 005C
        gbc.setState(0x18b1, 0xe0de, 0x53d0, 0x8e53, 0x8b5e, 0xbe26, 0x1, 0x1);
        gbc.writeMem(0x18b1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe0de);
        EXPECT(gbc.pc(), 0x18b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 005D
        gbc.setState(0xc63e, 0x4117, 0x97e0, 0xa4aa, 0xb97, 0x48a8, 0x1, 0x0);
        gbc.writeMem(0xc63e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x4117);
        EXPECT(gbc.pc(), 0xc640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc63e), 0xcb);
        EXPECT(gbc.readMem(0xc63f), 0x23);
        // CB 23 005E
        gbc.setState(0xd886, 0xe4a6, 0xd940, 0x2cec, 0x6faf, 0xa366, 0x0, 0x1);
        gbc.writeMem(0xd886, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe4a6);
        EXPECT(gbc.pc(), 0xd888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd886), 0xcb);
        EXPECT(gbc.readMem(0xd887), 0x23);
        // CB 23 005F
        gbc.setState(0x5ac, 0xedf8, 0xa590, 0x6aa9, 0x66fd, 0x2a04, 0x0, 0x0);
        gbc.writeMem(0x5ac, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xedf8);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0060
        gbc.setState(0x2de2, 0xd86c, 0xa1a0, 0x2039, 0x3ee6, 0xf6ad, 0x0, 0x0);
        gbc.writeMem(0x2de2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd86c);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0061
        gbc.setState(0xd07b, 0x8775, 0xcce0, 0xd628, 0x48c8, 0x382f, 0x0, 0x1);
        gbc.writeMem(0xd07b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x8775);
        EXPECT(gbc.pc(), 0xd07d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd07b), 0xcb);
        EXPECT(gbc.readMem(0xd07c), 0x23);
        // CB 23 0062
        gbc.setState(0x5efd, 0xb3d9, 0xfa00, 0x2830, 0xa090, 0x481b, 0x1, 0x1);
        gbc.writeMem(0x5efd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb3d9);
        EXPECT(gbc.pc(), 0x5eff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0063
        gbc.setState(0x5476, 0x5f1d, 0x9550, 0x2802, 0x36e9, 0x4792, 0x1, 0x1);
        gbc.writeMem(0x5476, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5f1d);
        EXPECT(gbc.pc(), 0x5478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0064
        gbc.setState(0x957a, 0xbfac, 0x6770, 0x1aa5, 0x753c, 0x4754, 0x1, 0x0);
        gbc.writeMem(0x957a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xbfac);
        EXPECT(gbc.pc(), 0x957c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957a), 0xcb);
        EXPECT(gbc.readMem(0x957b), 0x23);
        // CB 23 0065
        gbc.setState(0x2418, 0xb7bd, 0xf990, 0x3eeb, 0x2a97, 0xb61b, 0x0, 0x1);
        gbc.writeMem(0x2418, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb7bd);
        EXPECT(gbc.pc(), 0x241a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0066
        gbc.setState(0xd72d, 0x599a, 0x3100, 0xa894, 0xedbc, 0xc28a, 0x0, 0x0);
        gbc.writeMem(0xd72d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x599a);
        EXPECT(gbc.pc(), 0xd72f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72d), 0xcb);
        EXPECT(gbc.readMem(0xd72e), 0x23);
        // CB 23 0067
        gbc.setState(0x1c21, 0xae9c, 0x6270, 0x6516, 0x30bf, 0xb20d, 0x1, 0x0);
        gbc.writeMem(0x1c21, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xae9c);
        EXPECT(gbc.pc(), 0x1c23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0068
        gbc.setState(0x2345, 0x320, 0x9450, 0xb710, 0x9725, 0xeca, 0x1, 0x1);
        gbc.writeMem(0x2345, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x320);
        EXPECT(gbc.pc(), 0x2347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0069
        gbc.setState(0x9171, 0x2a50, 0x6c00, 0xc670, 0x79cc, 0x757d, 0x0, 0x0);
        gbc.writeMem(0x9171, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2a50);
        EXPECT(gbc.pc(), 0x9173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9171), 0xcb);
        EXPECT(gbc.readMem(0x9172), 0x23);
        // CB 23 006A
        gbc.setState(0x1c71, 0x4017, 0x9ee0, 0xf360, 0x182e, 0xb950, 0x0, 0x0);
        gbc.writeMem(0x1c71, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4017);
        EXPECT(gbc.pc(), 0x1c73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 006B
        gbc.setState(0x3675, 0xb170, 0xdda0, 0xc69d, 0x972c, 0xe07b, 0x0, 0x1);
        gbc.writeMem(0x3675, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0x3677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 006C
        gbc.setState(0x3406, 0xf902, 0x2240, 0x1568, 0x7fc9, 0x94aa, 0x0, 0x0);
        gbc.writeMem(0x3406, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf902);
        EXPECT(gbc.pc(), 0x3408);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 006E
        gbc.setState(0x4549, 0x2857, 0xed50, 0x2463, 0x27a6, 0x81a8, 0x1, 0x0);
        gbc.writeMem(0x4549, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2857);
        EXPECT(gbc.pc(), 0x454b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 006F
        gbc.setState(0xc249, 0xf011, 0xb0, 0xcb4e, 0xc994, 0x7036, 0x1, 0x0);
        gbc.writeMem(0xc249, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf011);
        EXPECT(gbc.pc(), 0xc24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc249), 0xcb);
        EXPECT(gbc.readMem(0xc24a), 0x23);
        // CB 23 0071
        gbc.setState(0xc6c2, 0xbed5, 0xf050, 0x8cf8, 0xf9c2, 0x2bc2, 0x1, 0x1);
        gbc.writeMem(0xc6c2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbed5);
        EXPECT(gbc.pc(), 0xc6c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c2), 0xcb);
        EXPECT(gbc.readMem(0xc6c3), 0x23);
        // CB 23 0072
        gbc.setState(0x12cf, 0xaed, 0x6780, 0x84c2, 0xac31, 0xaba3, 0x0, 0x1);
        gbc.writeMem(0x12cf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaed);
        EXPECT(gbc.pc(), 0x12d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0075
        gbc.setState(0x89a3, 0x3ba, 0xb7f0, 0x7f32, 0x1463, 0xa5b6, 0x0, 0x1);
        gbc.writeMem(0x89a3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x3ba);
        EXPECT(gbc.pc(), 0x89a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89a3), 0xcb);
        EXPECT(gbc.readMem(0x89a4), 0x23);
        // CB 23 0076
        gbc.setState(0x1e67, 0x3bc, 0x25b0, 0x6542, 0xc108, 0x4cc0, 0x1, 0x1);
        gbc.writeMem(0x1e67, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3bc);
        EXPECT(gbc.pc(), 0x1e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0077
        gbc.setState(0xe6df, 0xd3f7, 0xeb80, 0x1ead, 0x3f9f, 0x7ca5, 0x1, 0x1);
        gbc.writeMem(0xe6df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd3f7);
        EXPECT(gbc.pc(), 0xe6e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6df), 0xcb);
        EXPECT(gbc.readMem(0xe6e0), 0x23);
        // CB 23 0078
        gbc.setState(0xdafd, 0x6d29, 0xf660, 0x440, 0x18d8, 0x3e7b, 0x0, 0x1);
        gbc.writeMem(0xdafd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6d29);
        EXPECT(gbc.pc(), 0xdaff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdafd), 0xcb);
        EXPECT(gbc.readMem(0xdafe), 0x23);
        // CB 23 0079
        gbc.setState(0x8cd3, 0xeafb, 0x1ee0, 0xd774, 0xa77, 0xa270, 0x1, 0x1);
        gbc.writeMem(0x8cd3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xeafb);
        EXPECT(gbc.pc(), 0x8cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd3), 0xcb);
        EXPECT(gbc.readMem(0x8cd4), 0x23);
        // CB 23 007A
        gbc.setState(0x5668, 0x141a, 0x65c0, 0x5db, 0xe4f1, 0x884d, 0x0, 0x0);
        gbc.writeMem(0x5668, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x141a);
        EXPECT(gbc.pc(), 0x566a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 007B
        gbc.setState(0xef74, 0x99b0, 0x1ed0, 0xd888, 0xcd13, 0x86e5, 0x0, 0x1);
        gbc.writeMem(0xef74, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x99b0);
        EXPECT(gbc.pc(), 0xef76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef74), 0xcb);
        EXPECT(gbc.readMem(0xef75), 0x23);
        // CB 23 007D
        gbc.setState(0xacaf, 0x95dc, 0xde80, 0xebb7, 0x78d7, 0x2b73, 0x1, 0x1);
        gbc.writeMem(0xacaf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x95dc);
        EXPECT(gbc.pc(), 0xacb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacaf), 0xcb);
        EXPECT(gbc.readMem(0xacb0), 0x23);
        // CB 23 007E
        gbc.setState(0x7676, 0xbf2, 0x4800, 0x898c, 0x3640, 0x2bfd, 0x0, 0x1);
        gbc.writeMem(0x7676, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xbf2);
        EXPECT(gbc.pc(), 0x7678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 007F
        gbc.setState(0xc372, 0x8f08, 0x1020, 0x8535, 0x9cf4, 0xb25d, 0x1, 0x1);
        gbc.writeMem(0xc372, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8f08);
        EXPECT(gbc.pc(), 0xc374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc372), 0xcb);
        EXPECT(gbc.readMem(0xc373), 0x23);
        // CB 23 0080
        gbc.setState(0xc2ff, 0x8ee8, 0x1ed0, 0x1c88, 0x701f, 0x6443, 0x0, 0x0);
        gbc.writeMem(0xc2ff, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0xc301);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ff), 0xcb);
        EXPECT(gbc.readMem(0xc300), 0x23);
        // CB 23 0081
        gbc.setState(0x8ea6, 0x478f, 0x7130, 0x40ae, 0xef34, 0x1a39, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x478f);
        EXPECT(gbc.pc(), 0x8ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea6), 0xcb);
        EXPECT(gbc.readMem(0x8ea7), 0x23);
        // CB 23 0082
        gbc.setState(0xca06, 0x8962, 0x90e0, 0x0, 0x635e, 0xea48, 0x0, 0x0);
        gbc.writeMem(0xca06, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8962);
        EXPECT(gbc.pc(), 0xca08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca06), 0xcb);
        EXPECT(gbc.readMem(0xca07), 0x23);
        // CB 23 0083
        gbc.setState(0x79e7, 0x67ef, 0x2a0, 0x53b7, 0xd02b, 0x66bf, 0x1, 0x0);
        gbc.writeMem(0x79e7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0x79e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0084
        gbc.setState(0xc943, 0x7a73, 0x7b90, 0x2dc8, 0x7798, 0x8082, 0x1, 0x1);
        gbc.writeMem(0xc943, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x7a73);
        EXPECT(gbc.pc(), 0xc945);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc943), 0xcb);
        EXPECT(gbc.readMem(0xc944), 0x23);
        // CB 23 0085
        gbc.setState(0xc076, 0x7fda, 0x76a0, 0x4dc2, 0x10a2, 0xa999, 0x0, 0x0);
        gbc.writeMem(0xc076, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7fda);
        EXPECT(gbc.pc(), 0xc078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc076), 0xcb);
        EXPECT(gbc.readMem(0xc077), 0x23);
        // CB 23 0087
        gbc.setState(0x9554, 0x3dff, 0x8ed0, 0x19e8, 0x4a31, 0xf7bb, 0x0, 0x1);
        gbc.writeMem(0x9554, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3dff);
        EXPECT(gbc.pc(), 0x9556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9554), 0xcb);
        EXPECT(gbc.readMem(0x9555), 0x23);
        // CB 23 0088
        gbc.setState(0x8eee, 0x50b9, 0xd970, 0xa223, 0xef28, 0x874f, 0x0, 0x0);
        gbc.writeMem(0x8eee, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x50b9);
        EXPECT(gbc.pc(), 0x8ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eee), 0xcb);
        EXPECT(gbc.readMem(0x8eef), 0x23);
        // CB 23 0089
        gbc.setState(0x81fa, 0x7b1a, 0x9a40, 0x69ab, 0x4411, 0xce1, 0x0, 0x0);
        gbc.writeMem(0x81fa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x7b1a);
        EXPECT(gbc.pc(), 0x81fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81fa), 0xcb);
        EXPECT(gbc.readMem(0x81fb), 0x23);
        // CB 23 008A
        gbc.setState(0x535b, 0x9115, 0xe360, 0x866e, 0x9b9c, 0xe23, 0x1, 0x0);
        gbc.writeMem(0x535b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x9115);
        EXPECT(gbc.pc(), 0x535d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 008B
        gbc.setState(0xcf31, 0xe6cd, 0x20c0, 0xab74, 0x4ab, 0x720f, 0x1, 0x0);
        gbc.writeMem(0xcf31, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xe6cd);
        EXPECT(gbc.pc(), 0xcf33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf31), 0xcb);
        EXPECT(gbc.readMem(0xcf32), 0x23);
        // CB 23 008C
        gbc.setState(0x881d, 0x71fc, 0xefe0, 0x4d7a, 0xb942, 0x4799, 0x0, 0x1);
        gbc.writeMem(0x881d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x71fc);
        EXPECT(gbc.pc(), 0x881f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x881d), 0xcb);
        EXPECT(gbc.readMem(0x881e), 0x23);
        // CB 23 008D
        gbc.setState(0x650, 0xb29d, 0x8080, 0xd1cd, 0x25b, 0xfb9d, 0x1, 0x1);
        gbc.writeMem(0x650, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb29d);
        EXPECT(gbc.pc(), 0x652);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 008E
        gbc.setState(0x4a26, 0x56b6, 0x8180, 0xd7e8, 0xe0d2, 0x3671, 0x0, 0x0);
        gbc.writeMem(0x4a26, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x56b6);
        EXPECT(gbc.pc(), 0x4a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 008F
        gbc.setState(0x89b1, 0x9ee0, 0x33b0, 0x256f, 0x5814, 0x50e0, 0x0, 0x0);
        gbc.writeMem(0x89b1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9ee0);
        EXPECT(gbc.pc(), 0x89b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b1), 0xcb);
        EXPECT(gbc.readMem(0x89b2), 0x23);
        // CB 23 0090
        gbc.setState(0x9a89, 0x5e89, 0x1790, 0x2969, 0xf337, 0x2625, 0x1, 0x0);
        gbc.writeMem(0x9a89, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5e89);
        EXPECT(gbc.pc(), 0x9a8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a89), 0xcb);
        EXPECT(gbc.readMem(0x9a8a), 0x23);
        // CB 23 0091
        gbc.setState(0x7131, 0x58f2, 0x2a30, 0x8f3a, 0xb57e, 0xf077, 0x1, 0x0);
        gbc.writeMem(0x7131, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x58f2);
        EXPECT(gbc.pc(), 0x7133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0092
        gbc.setState(0x7371, 0x4c37, 0xf0d0, 0x9672, 0x8370, 0x3dd4, 0x1, 0x1);
        gbc.writeMem(0x7371, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4c37);
        EXPECT(gbc.pc(), 0x7373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0093
        gbc.setState(0xdb44, 0x873c, 0x9550, 0x697f, 0xd1e9, 0x280a, 0x1, 0x1);
        gbc.writeMem(0xdb44, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x873c);
        EXPECT(gbc.pc(), 0xdb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb44), 0xcb);
        EXPECT(gbc.readMem(0xdb45), 0x23);
        // CB 23 0094
        gbc.setState(0xb3ff, 0x311a, 0x9770, 0x7c, 0x72a6, 0x9564, 0x1, 0x1);
        gbc.writeMem(0xb3ff, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x311a);
        EXPECT(gbc.pc(), 0xb401);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3ff), 0xcb);
        EXPECT(gbc.readMem(0xb400), 0x23);
        // CB 23 0095
        gbc.setState(0x9203, 0x28a8, 0x24e0, 0xef3f, 0xe99b, 0x1fb4, 0x1, 0x0);
        gbc.writeMem(0x9203, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x28a8);
        EXPECT(gbc.pc(), 0x9205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9203), 0xcb);
        EXPECT(gbc.readMem(0x9204), 0x23);
        // CB 23 0096
        gbc.setState(0x2caf, 0x2e23, 0x500, 0x6e91, 0xb5e1, 0x85a4, 0x1, 0x1);
        gbc.writeMem(0x2caf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2e23);
        EXPECT(gbc.pc(), 0x2cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0097
        gbc.setState(0x4864, 0x771e, 0x8b40, 0xe5c5, 0x2d8a, 0xb615, 0x1, 0x0);
        gbc.writeMem(0x4864, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x771e);
        EXPECT(gbc.pc(), 0x4866);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0098
        gbc.setState(0x3135, 0x5de7, 0x7880, 0x703a, 0xabd0, 0xacbd, 0x1, 0x1);
        gbc.writeMem(0x3135, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x5de7);
        EXPECT(gbc.pc(), 0x3137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 009A
        gbc.setState(0x9d0a, 0x381f, 0x7d90, 0xe349, 0x42a9, 0x8883, 0x0, 0x1);
        gbc.writeMem(0x9d0a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x381f);
        EXPECT(gbc.pc(), 0x9d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d0a), 0xcb);
        EXPECT(gbc.readMem(0x9d0b), 0x23);
        // CB 23 009B
        gbc.setState(0xa259, 0x9f0e, 0xf7d0, 0xb3eb, 0xbb94, 0xb39d, 0x1, 0x0);
        gbc.writeMem(0xa259, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x9f0e);
        EXPECT(gbc.pc(), 0xa25b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa259), 0xcb);
        EXPECT(gbc.readMem(0xa25a), 0x23);
        // CB 23 009C
        gbc.setState(0x9dc8, 0x38d6, 0xb430, 0xd4b5, 0x734a, 0x51c0, 0x1, 0x0);
        gbc.writeMem(0x9dc8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x38d6);
        EXPECT(gbc.pc(), 0x9dca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dc8), 0xcb);
        EXPECT(gbc.readMem(0x9dc9), 0x23);
        // CB 23 009D
        gbc.setState(0xca46, 0x7c9c, 0x6d80, 0x1d, 0x16c6, 0x7c2d, 0x1, 0x1);
        gbc.writeMem(0xca46, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x7c9c);
        EXPECT(gbc.pc(), 0xca48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca46), 0xcb);
        EXPECT(gbc.readMem(0xca47), 0x23);
        // CB 23 009E
        gbc.setState(0x8840, 0x17c0, 0x45e0, 0x2a47, 0xb7e, 0x7007, 0x1, 0x1);
        gbc.writeMem(0x8840, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x17c0);
        EXPECT(gbc.pc(), 0x8842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8840), 0xcb);
        EXPECT(gbc.readMem(0x8841), 0x23);
        // CB 23 00A0
        gbc.setState(0x72dc, 0x7869, 0xaa90, 0xa820, 0xa27a, 0x40b8, 0x0, 0x1);
        gbc.writeMem(0x72dc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7869);
        EXPECT(gbc.pc(), 0x72de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00A2
        gbc.setState(0xc34, 0xb551, 0xc330, 0x7d73, 0x2b02, 0xf785, 0x1, 0x0);
        gbc.writeMem(0xc34, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb551);
        EXPECT(gbc.pc(), 0xc36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00A3
        gbc.setState(0x8515, 0x8f3c, 0xef40, 0x32e3, 0x3ee1, 0x5d38, 0x0, 0x0);
        gbc.writeMem(0x8515, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x8f3c);
        EXPECT(gbc.pc(), 0x8517);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8515), 0xcb);
        EXPECT(gbc.readMem(0x8516), 0x23);
        // CB 23 00A4
        gbc.setState(0x4ab8, 0xfc43, 0xbfc0, 0x3c68, 0xbff5, 0xb159, 0x0, 0x1);
        gbc.writeMem(0x4ab8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xfc43);
        EXPECT(gbc.pc(), 0x4aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00A5
        gbc.setState(0x49b9, 0xccd4, 0x6400, 0x2b45, 0x7738, 0x7507, 0x1, 0x0);
        gbc.writeMem(0x49b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xccd4);
        EXPECT(gbc.pc(), 0x49bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00A6
        gbc.setState(0x7ae0, 0x95bf, 0xeb20, 0xf29a, 0x653a, 0xff5c, 0x1, 0x1);
        gbc.writeMem(0x7ae0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x95bf);
        EXPECT(gbc.pc(), 0x7ae2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00A7
        gbc.setState(0x8912, 0xfe7d, 0x8fd0, 0x1fb9, 0x32d8, 0x5efb, 0x0, 0x1);
        gbc.writeMem(0x8912, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xfe7d);
        EXPECT(gbc.pc(), 0x8914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8912), 0xcb);
        EXPECT(gbc.readMem(0x8913), 0x23);
        // CB 23 00A8
        gbc.setState(0x1338, 0x95b9, 0x9150, 0xcb77, 0x9391, 0x748f, 0x0, 0x1);
        gbc.writeMem(0x1338, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x95b9);
        EXPECT(gbc.pc(), 0x133a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00A9
        gbc.setState(0x1ded, 0xcf76, 0xcd10, 0xbcbd, 0xe3d6, 0xb2ee, 0x0, 0x1);
        gbc.writeMem(0x1ded, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf76);
        EXPECT(gbc.pc(), 0x1def);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00AA
        gbc.setState(0x3d3, 0xe18b, 0x1e0, 0xc5c5, 0x9eca, 0x25aa, 0x0, 0x1);
        gbc.writeMem(0x3d3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe18b);
        EXPECT(gbc.pc(), 0x3d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00AB
        gbc.setState(0xca03, 0x64c9, 0x57c0, 0x6d16, 0x5f6b, 0xbbc6, 0x1, 0x1);
        gbc.writeMem(0xca03, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x64c9);
        EXPECT(gbc.pc(), 0xca05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca03), 0xcb);
        EXPECT(gbc.readMem(0xca04), 0x23);
        // CB 23 00AC
        gbc.setState(0x646a, 0xc2a3, 0x8250, 0x7560, 0x1b4f, 0xf6b0, 0x0, 0x1);
        gbc.writeMem(0x646a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc2a3);
        EXPECT(gbc.pc(), 0x646c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00AD
        gbc.setState(0xb185, 0x64db, 0x1850, 0xafdf, 0xdd5c, 0x8035, 0x1, 0x0);
        gbc.writeMem(0xb185, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x64db);
        EXPECT(gbc.pc(), 0xb187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb185), 0xcb);
        EXPECT(gbc.readMem(0xb186), 0x23);
        // CB 23 00AE
        gbc.setState(0x1caf, 0x887a, 0xc5b0, 0x3b63, 0xcb9c, 0xf35c, 0x1, 0x0);
        gbc.writeMem(0x1caf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x887a);
        EXPECT(gbc.pc(), 0x1cb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00AF
        gbc.setState(0x5f1d, 0xf290, 0x25d0, 0xff, 0x16ff, 0x621, 0x1, 0x0);
        gbc.writeMem(0x5f1d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf290);
        EXPECT(gbc.pc(), 0x5f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00B0
        gbc.setState(0xcf38, 0x2d42, 0x4d20, 0xe402, 0xc8fd, 0xb67f, 0x0, 0x0);
        gbc.writeMem(0xcf38, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2d42);
        EXPECT(gbc.pc(), 0xcf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf38), 0xcb);
        EXPECT(gbc.readMem(0xcf39), 0x23);
        // CB 23 00B1
        gbc.setState(0xb130, 0xec17, 0xe6c0, 0xc893, 0xbbbf, 0xeea0, 0x0, 0x1);
        gbc.writeMem(0xb130, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xec17);
        EXPECT(gbc.pc(), 0xb132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb130), 0xcb);
        EXPECT(gbc.readMem(0xb131), 0x23);
        // CB 23 00B2
        gbc.setState(0xbc64, 0x8457, 0xf50, 0x4d3b, 0xed72, 0x384b, 0x1, 0x1);
        gbc.writeMem(0xbc64, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8457);
        EXPECT(gbc.pc(), 0xbc66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc64), 0xcb);
        EXPECT(gbc.readMem(0xbc65), 0x23);
        // CB 23 00B3
        gbc.setState(0xb98c, 0x237, 0x4480, 0x7b82, 0x78cb, 0x9988, 0x1, 0x0);
        gbc.writeMem(0xb98c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x237);
        EXPECT(gbc.pc(), 0xb98e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb98c), 0xcb);
        EXPECT(gbc.readMem(0xb98d), 0x23);
        // CB 23 00B4
        gbc.setState(0x7558, 0xa2bb, 0x1a30, 0xc7ea, 0xe6ba, 0xa06e, 0x0, 0x1);
        gbc.writeMem(0x7558, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xa2bb);
        EXPECT(gbc.pc(), 0x755a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00B5
        gbc.setState(0x757d, 0x4fc7, 0x1c70, 0x1fa, 0x6a8b, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0x757d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4fc7);
        EXPECT(gbc.pc(), 0x757f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00B6
        gbc.setState(0x38d2, 0xafc7, 0x1430, 0xe27b, 0xc36e, 0xd8df, 0x1, 0x1);
        gbc.writeMem(0x38d2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xafc7);
        EXPECT(gbc.pc(), 0x38d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00B7
        gbc.setState(0x12e4, 0x9135, 0x4510, 0x7a20, 0x2afb, 0xefcb, 0x0, 0x1);
        gbc.writeMem(0x12e4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x9135);
        EXPECT(gbc.pc(), 0x12e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00B8
        gbc.setState(0xa290, 0xcb49, 0x84a0, 0x366d, 0x4c83, 0xd8b, 0x0, 0x1);
        gbc.writeMem(0xa290, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcb49);
        EXPECT(gbc.pc(), 0xa292);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa290), 0xcb);
        EXPECT(gbc.readMem(0xa291), 0x23);
        // CB 23 00B9
        gbc.setState(0x2001, 0xfc52, 0x540, 0x44bd, 0xe89a, 0xb40d, 0x0, 0x1);
        gbc.writeMem(0x2001, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfc52);
        EXPECT(gbc.pc(), 0x2003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00BA
        gbc.setState(0xb4dd, 0x1786, 0x1b20, 0x73a1, 0x1f0c, 0x1e35, 0x1, 0x0);
        gbc.writeMem(0xb4dd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1786);
        EXPECT(gbc.pc(), 0xb4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4dd), 0xcb);
        EXPECT(gbc.readMem(0xb4de), 0x23);
        // CB 23 00BB
        gbc.setState(0x351b, 0x70ad, 0xbe10, 0x356b, 0x81eb, 0x9eb2, 0x0, 0x0);
        gbc.writeMem(0x351b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x70ad);
        EXPECT(gbc.pc(), 0x351d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00BC
        gbc.setState(0xcbaa, 0xcd9f, 0x4010, 0xca83, 0xae5c, 0xe35d, 0x0, 0x1);
        gbc.writeMem(0xcbaa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xcd9f);
        EXPECT(gbc.pc(), 0xcbac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbaa), 0xcb);
        EXPECT(gbc.readMem(0xcbab), 0x23);
        // CB 23 00BD
        gbc.setState(0x86ed, 0x6af, 0x3a80, 0x785b, 0xb0a2, 0xd83f, 0x1, 0x0);
        gbc.writeMem(0x86ed, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6af);
        EXPECT(gbc.pc(), 0x86ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ed), 0xcb);
        EXPECT(gbc.readMem(0x86ee), 0x23);
        // CB 23 00BE
        gbc.setState(0xc7d8, 0x7444, 0xbdf0, 0x17fe, 0xff6b, 0x6fef, 0x0, 0x0);
        gbc.writeMem(0xc7d8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7444);
        EXPECT(gbc.pc(), 0xc7da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7d8), 0xcb);
        EXPECT(gbc.readMem(0xc7d9), 0x23);
        // CB 23 00BF
        gbc.setState(0x6001, 0x858f, 0xba80, 0x5913, 0x4daa, 0xc1c7, 0x0, 0x1);
        gbc.writeMem(0x6001, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x858f);
        EXPECT(gbc.pc(), 0x6003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00C0
        gbc.setState(0xa05, 0x8981, 0x99e0, 0xdb2d, 0xb69, 0xfc68, 0x1, 0x1);
        gbc.writeMem(0xa05, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x8981);
        EXPECT(gbc.pc(), 0xa07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00C1
        gbc.setState(0x2755, 0x7d2e, 0xb700, 0xa625, 0xe956, 0x6d88, 0x1, 0x0);
        gbc.writeMem(0x2755, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x7d2e);
        EXPECT(gbc.pc(), 0x2757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00C2
        gbc.setState(0xbfce, 0xb526, 0x90b0, 0x1bf5, 0xbd70, 0xc4b3, 0x1, 0x0);
        gbc.writeMem(0xbfce, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb526);
        EXPECT(gbc.pc(), 0xbfd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfce), 0xcb);
        EXPECT(gbc.readMem(0xbfcf), 0x23);
        // CB 23 00C3
        gbc.setState(0x9983, 0x6ddb, 0x950, 0x3bcd, 0x46ee, 0xa487, 0x0, 0x0);
        gbc.writeMem(0x9983, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6ddb);
        EXPECT(gbc.pc(), 0x9985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9983), 0xcb);
        EXPECT(gbc.readMem(0x9984), 0x23);
        // CB 23 00C4
        gbc.setState(0x6f52, 0x519f, 0xc210, 0x435e, 0x607, 0x7fc9, 0x1, 0x0);
        gbc.writeMem(0x6f52, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x519f);
        EXPECT(gbc.pc(), 0x6f54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00C5
        gbc.setState(0xe3a3, 0x36d4, 0x4ad0, 0x3845, 0xb44b, 0x2a33, 0x0, 0x0);
        gbc.writeMem(0xe3a3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x36d4);
        EXPECT(gbc.pc(), 0xe3a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3a3), 0xcb);
        EXPECT(gbc.readMem(0xe3a4), 0x23);
        // CB 23 00C6
        gbc.setState(0x4fe8, 0xa165, 0x6970, 0xb89b, 0xd144, 0x7d3c, 0x0, 0x0);
        gbc.writeMem(0x4fe8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa165);
        EXPECT(gbc.pc(), 0x4fea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00C7
        gbc.setState(0x1b2c, 0xbc75, 0x40d0, 0x4ea7, 0x1c68, 0x94c9, 0x0, 0x1);
        gbc.writeMem(0x1b2c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xbc75);
        EXPECT(gbc.pc(), 0x1b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00C8
        gbc.setState(0xda6d, 0x71c, 0xa50, 0x9d57, 0xf354, 0x517a, 0x1, 0x1);
        gbc.writeMem(0xda6d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x71c);
        EXPECT(gbc.pc(), 0xda6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda6d), 0xcb);
        EXPECT(gbc.readMem(0xda6e), 0x23);
        // CB 23 00C9
        gbc.setState(0xc5d0, 0xbb47, 0x8910, 0x5999, 0xb112, 0x8ff9, 0x0, 0x0);
        gbc.writeMem(0xc5d0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbb47);
        EXPECT(gbc.pc(), 0xc5d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d0), 0xcb);
        EXPECT(gbc.readMem(0xc5d1), 0x23);
        // CB 23 00CA
        gbc.setState(0xa81b, 0x4700, 0xfc80, 0xe361, 0xbd57, 0x509d, 0x0, 0x0);
        gbc.writeMem(0xa81b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x4700);
        EXPECT(gbc.pc(), 0xa81d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa81b), 0xcb);
        EXPECT(gbc.readMem(0xa81c), 0x23);
        // CB 23 00CB
        gbc.setState(0xddf0, 0x23f3, 0xad50, 0xe1de, 0x6979, 0xb333, 0x0, 0x0);
        gbc.writeMem(0xddf0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x23f3);
        EXPECT(gbc.pc(), 0xddf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf0), 0xcb);
        EXPECT(gbc.readMem(0xddf1), 0x23);
        // CB 23 00CC
        gbc.setState(0x7bea, 0x6bc6, 0x70b0, 0xc82b, 0x25b3, 0x98cd, 0x1, 0x1);
        gbc.writeMem(0x7bea, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x6bc6);
        EXPECT(gbc.pc(), 0x7bec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00CD
        gbc.setState(0x26a, 0x2321, 0x17e0, 0x1f2a, 0xd9a9, 0xf266, 0x0, 0x0);
        gbc.writeMem(0x26a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2321);
        EXPECT(gbc.pc(), 0x26c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00CE
        gbc.setState(0x26d9, 0x7731, 0xd130, 0xf5f5, 0x5597, 0x8261, 0x1, 0x0);
        gbc.writeMem(0x26d9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7731);
        EXPECT(gbc.pc(), 0x26db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00CF
        gbc.setState(0x78db, 0xd9ef, 0xef30, 0xea4f, 0xcc13, 0xe84e, 0x0, 0x0);
        gbc.writeMem(0x78db, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd9ef);
        EXPECT(gbc.pc(), 0x78dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00D0
        gbc.setState(0x7838, 0x5c8f, 0xfff0, 0x24a8, 0x9d6f, 0x7349, 0x1, 0x1);
        gbc.writeMem(0x7838, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5c8f);
        EXPECT(gbc.pc(), 0x783a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00D1
        gbc.setState(0x662f, 0x25bc, 0xdd50, 0x6560, 0xa8c5, 0x4c7, 0x1, 0x0);
        gbc.writeMem(0x662f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x25bc);
        EXPECT(gbc.pc(), 0x6631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00D2
        gbc.setState(0x1fa5, 0xcd8d, 0x8d00, 0xbd8, 0xac69, 0xf59a, 0x1, 0x0);
        gbc.writeMem(0x1fa5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xcd8d);
        EXPECT(gbc.pc(), 0x1fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00D3
        gbc.setState(0x67f0, 0xc193, 0x4330, 0x1eab, 0x3bac, 0xe24b, 0x1, 0x0);
        gbc.writeMem(0x67f0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc193);
        EXPECT(gbc.pc(), 0x67f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00D4
        gbc.setState(0x1f0, 0xdf45, 0x3140, 0x9a32, 0xa632, 0x3aff, 0x0, 0x0);
        gbc.writeMem(0x1f0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xdf45);
        EXPECT(gbc.pc(), 0x1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00D5
        gbc.setState(0x1082, 0xb024, 0xf7b0, 0x48fb, 0x869d, 0xb39, 0x1, 0x1);
        gbc.writeMem(0x1082, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xb024);
        EXPECT(gbc.pc(), 0x1084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00D6
        gbc.setState(0x89d1, 0x9c60, 0x2290, 0xea1, 0xb15a, 0x668b, 0x1, 0x0);
        gbc.writeMem(0x89d1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x9c60);
        EXPECT(gbc.pc(), 0x89d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89d1), 0xcb);
        EXPECT(gbc.readMem(0x89d2), 0x23);
        // CB 23 00D7
        gbc.setState(0x3001, 0x73bf, 0x8f80, 0x6e6c, 0x6214, 0xef37, 0x1, 0x0);
        gbc.writeMem(0x3001, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x73bf);
        EXPECT(gbc.pc(), 0x3003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00D8
        gbc.setState(0xa65f, 0xcdc7, 0x68f0, 0x7c70, 0x9285, 0xc675, 0x0, 0x0);
        gbc.writeMem(0xa65f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xcdc7);
        EXPECT(gbc.pc(), 0xa661);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65f), 0xcb);
        EXPECT(gbc.readMem(0xa660), 0x23);
        // CB 23 00D9
        gbc.setState(0x1bb4, 0x2510, 0x1930, 0xc753, 0xcd6c, 0x2abc, 0x0, 0x1);
        gbc.writeMem(0x1bb4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2510);
        EXPECT(gbc.pc(), 0x1bb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00DA
        gbc.setState(0xbeef, 0xf74b, 0x460, 0x53db, 0x8210, 0x5c5, 0x1, 0x1);
        gbc.writeMem(0xbeef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf74b);
        EXPECT(gbc.pc(), 0xbef1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeef), 0xcb);
        EXPECT(gbc.readMem(0xbef0), 0x23);
        // CB 23 00DB
        gbc.setState(0x6b2f, 0x5dbd, 0x7400, 0xda8b, 0x2c36, 0x483a, 0x0, 0x1);
        gbc.writeMem(0x6b2f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x5dbd);
        EXPECT(gbc.pc(), 0x6b31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00DC
        gbc.setState(0xe56d, 0xfb46, 0x9610, 0x3849, 0xd6fd, 0xd9df, 0x1, 0x1);
        gbc.writeMem(0xe56d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xfb46);
        EXPECT(gbc.pc(), 0xe56f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56d), 0xcb);
        EXPECT(gbc.readMem(0xe56e), 0x23);
        // CB 23 00DD
        gbc.setState(0x5561, 0x6105, 0x5130, 0xcecc, 0x19be, 0x8c6a, 0x0, 0x1);
        gbc.writeMem(0x5561, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6105);
        EXPECT(gbc.pc(), 0x5563);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00DE
        gbc.setState(0x3bab, 0x6bc6, 0xd530, 0xa350, 0xa079, 0xdf3b, 0x1, 0x0);
        gbc.writeMem(0x3bab, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x6bc6);
        EXPECT(gbc.pc(), 0x3bad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00E0
        gbc.setState(0x2ba9, 0xbcdb, 0xf970, 0xc645, 0x6171, 0xc739, 0x1, 0x1);
        gbc.writeMem(0x2ba9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbcdb);
        EXPECT(gbc.pc(), 0x2bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00E1
        gbc.setState(0xddf5, 0x7d7f, 0xc030, 0x4559, 0xb40d, 0x880b, 0x1, 0x1);
        gbc.writeMem(0xddf5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7d7f);
        EXPECT(gbc.pc(), 0xddf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddf5), 0xcb);
        EXPECT(gbc.readMem(0xddf6), 0x23);
        // CB 23 00E2
        gbc.setState(0x9c02, 0x50c9, 0x25e0, 0x8b96, 0xf834, 0x35eb, 0x0, 0x0);
        gbc.writeMem(0x9c02, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x50c9);
        EXPECT(gbc.pc(), 0x9c04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c02), 0xcb);
        EXPECT(gbc.readMem(0x9c03), 0x23);
        // CB 23 00E3
        gbc.setState(0xd41a, 0xfe22, 0x97b0, 0x1d64, 0x1cfe, 0x24a1, 0x1, 0x1);
        gbc.writeMem(0xd41a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xfe22);
        EXPECT(gbc.pc(), 0xd41c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd41a), 0xcb);
        EXPECT(gbc.readMem(0xd41b), 0x23);
        // CB 23 00E4
        gbc.setState(0x6018, 0xfc9b, 0xeb70, 0xd2ec, 0xe6d6, 0x52f5, 0x0, 0x0);
        gbc.writeMem(0x6018, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfc9b);
        EXPECT(gbc.pc(), 0x601a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00E5
        gbc.setState(0x7d10, 0xf20d, 0xb840, 0x913b, 0x5bce, 0x6b3, 0x1, 0x1);
        gbc.writeMem(0x7d10, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf20d);
        EXPECT(gbc.pc(), 0x7d12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00E6
        gbc.setState(0x4b91, 0x3b9, 0x1f40, 0xc5fb, 0x4a20, 0xa212, 0x1, 0x1);
        gbc.writeMem(0x4b91, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3b9);
        EXPECT(gbc.pc(), 0x4b93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00E7
        gbc.setState(0x4af9, 0x92f6, 0xad60, 0x594a, 0x1c67, 0xe1d7, 0x1, 0x1);
        gbc.writeMem(0x4af9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x92f6);
        EXPECT(gbc.pc(), 0x4afb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00E8
        gbc.setState(0x4739, 0x4f7, 0xd2a0, 0xfc4c, 0xf046, 0x4bc4, 0x1, 0x0);
        gbc.writeMem(0x4739, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4f7);
        EXPECT(gbc.pc(), 0x473b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00E9
        gbc.setState(0xcdf2, 0xc20b, 0x7f60, 0x223c, 0x212a, 0xa4f2, 0x1, 0x0);
        gbc.writeMem(0xcdf2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xc20b);
        EXPECT(gbc.pc(), 0xcdf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf2), 0xcb);
        EXPECT(gbc.readMem(0xcdf3), 0x23);
        // CB 23 00EA
        gbc.setState(0x6734, 0xb2b2, 0xcc80, 0x186d, 0x5980, 0xc4c1, 0x1, 0x0);
        gbc.writeMem(0x6734, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb2b2);
        EXPECT(gbc.pc(), 0x6736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00EB
        gbc.setState(0xed8f, 0x60cf, 0xc6c0, 0x2825, 0x6083, 0x18d, 0x1, 0x1);
        gbc.writeMem(0xed8f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x60cf);
        EXPECT(gbc.pc(), 0xed91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed8f), 0xcb);
        EXPECT(gbc.readMem(0xed90), 0x23);
        // CB 23 00EC
        gbc.setState(0x80d3, 0xd7b0, 0xd7d0, 0x8748, 0x23fc, 0x8b9, 0x1, 0x0);
        gbc.writeMem(0x80d3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xd7b0);
        EXPECT(gbc.pc(), 0x80d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d3), 0xcb);
        EXPECT(gbc.readMem(0x80d4), 0x23);
        // CB 23 00ED
        gbc.setState(0xcc43, 0x6005, 0xa7e0, 0x1cd9, 0xf68e, 0x45db, 0x1, 0x1);
        gbc.writeMem(0xcc43, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6005);
        EXPECT(gbc.pc(), 0xcc45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc43), 0xcb);
        EXPECT(gbc.readMem(0xcc44), 0x23);
        // CB 23 00EE
        gbc.setState(0xc3f0, 0xdbbd, 0xe100, 0x7405, 0x5112, 0x4ab0, 0x1, 0x1);
        gbc.writeMem(0xc3f0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xdbbd);
        EXPECT(gbc.pc(), 0xc3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3f0), 0xcb);
        EXPECT(gbc.readMem(0xc3f1), 0x23);
        // CB 23 00EF
        gbc.setState(0x5f8, 0x28b1, 0x8dd0, 0x2976, 0xa82d, 0x3c11, 0x1, 0x1);
        gbc.writeMem(0x5f8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x28b1);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00F1
        gbc.setState(0x69f3, 0xe411, 0xf50, 0x3d48, 0x54c4, 0x7130, 0x0, 0x0);
        gbc.writeMem(0x69f3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe411);
        EXPECT(gbc.pc(), 0x69f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00F2
        gbc.setState(0xd279, 0x35ad, 0x5950, 0x3d88, 0x2d43, 0x6632, 0x0, 0x1);
        gbc.writeMem(0xd279, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x35ad);
        EXPECT(gbc.pc(), 0xd27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd279), 0xcb);
        EXPECT(gbc.readMem(0xd27a), 0x23);
        // CB 23 00F3
        gbc.setState(0x376b, 0x124, 0xd4f0, 0xba27, 0xe4de, 0xbfbe, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x124);
        EXPECT(gbc.pc(), 0x376d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00F4
        gbc.setState(0x4c27, 0x5582, 0x5400, 0x65e6, 0x258c, 0xa169, 0x1, 0x0);
        gbc.writeMem(0x4c27, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5582);
        EXPECT(gbc.pc(), 0x4c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00F5
        gbc.setState(0xbda5, 0x4f4, 0x3f70, 0xc8e4, 0x619d, 0x78b0, 0x1, 0x0);
        gbc.writeMem(0xbda5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4f4);
        EXPECT(gbc.pc(), 0xbda7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbda5), 0xcb);
        EXPECT(gbc.readMem(0xbda6), 0x23);
        // CB 23 00F6
        gbc.setState(0x8e48, 0x5e9, 0x95f0, 0x85c6, 0x5a0b, 0x2e4d, 0x1, 0x1);
        gbc.writeMem(0x8e48, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5e9);
        EXPECT(gbc.pc(), 0x8e4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e48), 0xcb);
        EXPECT(gbc.readMem(0x8e49), 0x23);
        // CB 23 00F7
        gbc.setState(0x98d, 0xce92, 0x2b70, 0x2f4e, 0x9b2, 0xe5e8, 0x0, 0x1);
        gbc.writeMem(0x98d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xce92);
        EXPECT(gbc.pc(), 0x98f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00F8
        gbc.setState(0xb641, 0x6238, 0xf080, 0xee66, 0x124e, 0x7065, 0x1, 0x0);
        gbc.writeMem(0xb641, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6238);
        EXPECT(gbc.pc(), 0xb643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb641), 0xcb);
        EXPECT(gbc.readMem(0xb642), 0x23);
        // CB 23 00F9
        gbc.setState(0xe6ec, 0xd9c1, 0xbe80, 0xb00d, 0x6d3e, 0x96, 0x1, 0x0);
        gbc.writeMem(0xe6ec, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd9c1);
        EXPECT(gbc.pc(), 0xe6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6ec), 0xcb);
        EXPECT(gbc.readMem(0xe6ed), 0x23);
        // CB 23 00FA
        gbc.setState(0xa902, 0x402c, 0xfbc0, 0xe01d, 0x4f78, 0x19b6, 0x1, 0x0);
        gbc.writeMem(0xa902, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x402c);
        EXPECT(gbc.pc(), 0xa904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa902), 0xcb);
        EXPECT(gbc.readMem(0xa903), 0x23);
        // CB 23 00FB
        gbc.setState(0x6939, 0x7622, 0xd5e0, 0xf29d, 0x5a45, 0x3227, 0x0, 0x1);
        gbc.writeMem(0x6939, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7622);
        EXPECT(gbc.pc(), 0x693b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 00FC
        gbc.setState(0x295f, 0x21d4, 0xa9c0, 0x2b1f, 0x64fd, 0x9517, 0x0, 0x0);
        gbc.writeMem(0x295f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x21d4);
        EXPECT(gbc.pc(), 0x2961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 00FD
        gbc.setState(0xcc00, 0x6157, 0x6bb0, 0xb7d3, 0x550d, 0xe720, 0x1, 0x1);
        gbc.writeMem(0xcc00, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0xcc02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc00), 0xcb);
        EXPECT(gbc.readMem(0xcc01), 0x23);
        // CB 23 00FE
        gbc.setState(0xb803, 0xc9ad, 0x5a80, 0xa21d, 0x8915, 0x4d8d, 0x0, 0x1);
        gbc.writeMem(0xb803, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc9ad);
        EXPECT(gbc.pc(), 0xb805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb803), 0xcb);
        EXPECT(gbc.readMem(0xb804), 0x23);
        // CB 23 00FF
        gbc.setState(0xb754, 0x9804, 0xff90, 0x365, 0xd54c, 0x8c44, 0x1, 0x1);
        gbc.writeMem(0xb754, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9804);
        EXPECT(gbc.pc(), 0xb756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb754), 0xcb);
        EXPECT(gbc.readMem(0xb755), 0x23);
        // CB 23 0100
        gbc.setState(0xeba7, 0xfa3a, 0xc010, 0xbc70, 0x5c8e, 0x133c, 0x0, 0x1);
        gbc.writeMem(0xeba7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfa3a);
        EXPECT(gbc.pc(), 0xeba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeba7), 0xcb);
        EXPECT(gbc.readMem(0xeba8), 0x23);
        // CB 23 0101
        gbc.setState(0xec49, 0x9a9f, 0xbcb0, 0x6804, 0x80b2, 0xbbc2, 0x0, 0x1);
        gbc.writeMem(0xec49, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x9a9f);
        EXPECT(gbc.pc(), 0xec4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec49), 0xcb);
        EXPECT(gbc.readMem(0xec4a), 0x23);
        // CB 23 0103
        gbc.setState(0x52b9, 0x5796, 0xccb0, 0xeef4, 0x7e4d, 0xb059, 0x1, 0x1);
        gbc.writeMem(0x52b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x5796);
        EXPECT(gbc.pc(), 0x52bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0104
        gbc.setState(0x8a02, 0xbe05, 0xe010, 0x2710, 0xd171, 0x3dc7, 0x0, 0x1);
        gbc.writeMem(0x8a02, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xbe05);
        EXPECT(gbc.pc(), 0x8a04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a02), 0xcb);
        EXPECT(gbc.readMem(0x8a03), 0x23);
        // CB 23 0105
        gbc.setState(0x5810, 0xc31c, 0xda10, 0x987e, 0x57f7, 0xd314, 0x1, 0x0);
        gbc.writeMem(0x5810, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc31c);
        EXPECT(gbc.pc(), 0x5812);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0107
        gbc.setState(0x1f22, 0xa903, 0x96c0, 0xaaa5, 0xa31d, 0x9911, 0x0, 0x0);
        gbc.writeMem(0x1f22, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa903);
        EXPECT(gbc.pc(), 0x1f24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0108
        gbc.setState(0x2d05, 0x6147, 0xf320, 0x8802, 0xe277, 0xc59b, 0x1, 0x0);
        gbc.writeMem(0x2d05, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6147);
        EXPECT(gbc.pc(), 0x2d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0109
        gbc.setState(0x1570, 0x40b0, 0xc4a0, 0x2236, 0xe0f3, 0x2325, 0x0, 0x1);
        gbc.writeMem(0x1570, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x40b0);
        EXPECT(gbc.pc(), 0x1572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 010A
        gbc.setState(0xb736, 0x4c84, 0x3470, 0xc557, 0x9d92, 0x94bc, 0x0, 0x0);
        gbc.writeMem(0xb736, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4c84);
        EXPECT(gbc.pc(), 0xb738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb736), 0xcb);
        EXPECT(gbc.readMem(0xb737), 0x23);
        // CB 23 010C
        gbc.setState(0xeb02, 0x7b75, 0xce20, 0x5e0e, 0x2292, 0xc7ff, 0x1, 0x0);
        gbc.writeMem(0xeb02, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7b75);
        EXPECT(gbc.pc(), 0xeb04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb02), 0xcb);
        EXPECT(gbc.readMem(0xeb03), 0x23);
        // CB 23 010D
        gbc.setState(0x71f4, 0xbd00, 0xa0b0, 0xc544, 0xabf4, 0xb4b3, 0x0, 0x0);
        gbc.writeMem(0x71f4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xbd00);
        EXPECT(gbc.pc(), 0x71f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 010E
        gbc.setState(0xa0c2, 0xe1b9, 0xe360, 0xb14f, 0xd36b, 0x46aa, 0x1, 0x1);
        gbc.writeMem(0xa0c2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe1b9);
        EXPECT(gbc.pc(), 0xa0c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0c2), 0xcb);
        EXPECT(gbc.readMem(0xa0c3), 0x23);
        // CB 23 010F
        gbc.setState(0x57c4, 0x9ab8, 0x9c60, 0x7f3b, 0xefb2, 0x34ed, 0x0, 0x0);
        gbc.writeMem(0x57c4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9ab8);
        EXPECT(gbc.pc(), 0x57c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0110
        gbc.setState(0xb1bc, 0x2019, 0xf440, 0x4509, 0x3c7c, 0x2481, 0x1, 0x0);
        gbc.writeMem(0xb1bc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2019);
        EXPECT(gbc.pc(), 0xb1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1bc), 0xcb);
        EXPECT(gbc.readMem(0xb1bd), 0x23);
        // CB 23 0111
        gbc.setState(0x91a5, 0x8449, 0x4ce0, 0xc882, 0x8bfe, 0xd541, 0x0, 0x0);
        gbc.writeMem(0x91a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8449);
        EXPECT(gbc.pc(), 0x91a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a5), 0xcb);
        EXPECT(gbc.readMem(0x91a6), 0x23);
        // CB 23 0112
        gbc.setState(0xdbe6, 0xac6d, 0x8ae0, 0x6315, 0x275c, 0xadd0, 0x0, 0x1);
        gbc.writeMem(0xdbe6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xac6d);
        EXPECT(gbc.pc(), 0xdbe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbe6), 0xcb);
        EXPECT(gbc.readMem(0xdbe7), 0x23);
        // CB 23 0113
        gbc.setState(0x8eed, 0x8855, 0xac00, 0xd758, 0x2c97, 0x19e7, 0x1, 0x0);
        gbc.writeMem(0x8eed, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8855);
        EXPECT(gbc.pc(), 0x8eef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eed), 0xcb);
        EXPECT(gbc.readMem(0x8eee), 0x23);
        // CB 23 0114
        gbc.setState(0x3f02, 0xd60e, 0x1780, 0x3e18, 0xd2e9, 0x3598, 0x1, 0x0);
        gbc.writeMem(0x3f02, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd60e);
        EXPECT(gbc.pc(), 0x3f04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0115
        gbc.setState(0xd0b1, 0xeb97, 0x84f0, 0xb5f8, 0x2ba, 0x1937, 0x1, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xeb97);
        EXPECT(gbc.pc(), 0xd0b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b1), 0xcb);
        EXPECT(gbc.readMem(0xd0b2), 0x23);
        // CB 23 0116
        gbc.setState(0x10ef, 0xa999, 0x59d0, 0x6ba7, 0x4bdb, 0x6100, 0x0, 0x1);
        gbc.writeMem(0x10ef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa999);
        EXPECT(gbc.pc(), 0x10f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0117
        gbc.setState(0xc677, 0xe175, 0x5110, 0xe430, 0x68fb, 0x15c3, 0x0, 0x1);
        gbc.writeMem(0xc677, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe175);
        EXPECT(gbc.pc(), 0xc679);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc677), 0xcb);
        EXPECT(gbc.readMem(0xc678), 0x23);
        // CB 23 0118
        gbc.setState(0xe033, 0x999, 0xb7d0, 0x5446, 0x1282, 0xbca7, 0x0, 0x1);
        gbc.writeMem(0xe033, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x999);
        EXPECT(gbc.pc(), 0xe035);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe033), 0xcb);
        EXPECT(gbc.readMem(0xe034), 0x23);
        // CB 23 0119
        gbc.setState(0x7c28, 0x6d81, 0x7730, 0xa732, 0x1f32, 0x182d, 0x1, 0x1);
        gbc.writeMem(0x7c28, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x7c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 011B
        gbc.setState(0x286c, 0x2f64, 0xf7d0, 0xfe82, 0x7805, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0x286c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2f64);
        EXPECT(gbc.pc(), 0x286e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 011C
        gbc.setState(0xaf2d, 0xc4bb, 0xd220, 0xa144, 0x9ad5, 0x60be, 0x1, 0x1);
        gbc.writeMem(0xaf2d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc4bb);
        EXPECT(gbc.pc(), 0xaf2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf2d), 0xcb);
        EXPECT(gbc.readMem(0xaf2e), 0x23);
        // CB 23 011F
        gbc.setState(0xa2a6, 0x8d48, 0xaf90, 0xeab0, 0x351c, 0xc8bd, 0x1, 0x0);
        gbc.writeMem(0xa2a6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8d48);
        EXPECT(gbc.pc(), 0xa2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a6), 0xcb);
        EXPECT(gbc.readMem(0xa2a7), 0x23);
        // CB 23 0120
        gbc.setState(0x2273, 0x7131, 0xaca0, 0x788, 0xa4a5, 0xc0b, 0x0, 0x1);
        gbc.writeMem(0x2273, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7131);
        EXPECT(gbc.pc(), 0x2275);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0121
        gbc.setState(0xbb5c, 0xc2f0, 0x9720, 0x9493, 0xcdf6, 0xd0a4, 0x1, 0x0);
        gbc.writeMem(0xbb5c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc2f0);
        EXPECT(gbc.pc(), 0xbb5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb5c), 0xcb);
        EXPECT(gbc.readMem(0xbb5d), 0x23);
        // CB 23 0122
        gbc.setState(0x7fdd, 0x5912, 0xbb80, 0x745b, 0x8120, 0x344d, 0x0, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5912);
        EXPECT(gbc.pc(), 0x7fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0123
        gbc.setState(0x5144, 0x51eb, 0x6b60, 0x7229, 0x8879, 0x50ca, 0x1, 0x1);
        gbc.writeMem(0x5144, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x51eb);
        EXPECT(gbc.pc(), 0x5146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0124
        gbc.setState(0xcb6d, 0x9bf1, 0x95b0, 0x811d, 0x1c67, 0xaaed, 0x1, 0x0);
        gbc.writeMem(0xcb6d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0xcb6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb6d), 0xcb);
        EXPECT(gbc.readMem(0xcb6e), 0x23);
        // CB 23 0125
        gbc.setState(0x7e80, 0x49c, 0xa70, 0x942, 0x9b66, 0x45b4, 0x1, 0x1);
        gbc.writeMem(0x7e80, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x49c);
        EXPECT(gbc.pc(), 0x7e82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0126
        gbc.setState(0xcccc, 0x63b6, 0x1370, 0x3b06, 0x69c6, 0x65b8, 0x1, 0x1);
        gbc.writeMem(0xcccc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x63b6);
        EXPECT(gbc.pc(), 0xccce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcccc), 0xcb);
        EXPECT(gbc.readMem(0xcccd), 0x23);
        // CB 23 0127
        gbc.setState(0x3479, 0xc9c8, 0xa6d0, 0x8992, 0xc214, 0x6295, 0x1, 0x0);
        gbc.writeMem(0x3479, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc9c8);
        EXPECT(gbc.pc(), 0x347b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0128
        gbc.setState(0x60c, 0x6629, 0x1710, 0x9fb2, 0xf1bd, 0x2564, 0x1, 0x1);
        gbc.writeMem(0x60c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6629);
        EXPECT(gbc.pc(), 0x60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0129
        gbc.setState(0x6d35, 0xc7ce, 0xd8f0, 0xdd3c, 0x367a, 0x11c7, 0x0, 0x1);
        gbc.writeMem(0x6d35, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xc7ce);
        EXPECT(gbc.pc(), 0x6d37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 012A
        gbc.setState(0x5589, 0x12ae, 0xdc50, 0x937f, 0x556f, 0xa4b7, 0x1, 0x1);
        gbc.writeMem(0x5589, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x12ae);
        EXPECT(gbc.pc(), 0x558b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 012B
        gbc.setState(0x1999, 0x4ba, 0xdc70, 0x843c, 0x61ee, 0xc82, 0x1, 0x1);
        gbc.writeMem(0x1999, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4ba);
        EXPECT(gbc.pc(), 0x199b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 012C
        gbc.setState(0x95df, 0xe5b1, 0xbe20, 0x3024, 0x5bc7, 0x5f65, 0x1, 0x0);
        gbc.writeMem(0x95df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xe5b1);
        EXPECT(gbc.pc(), 0x95e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95df), 0xcb);
        EXPECT(gbc.readMem(0x95e0), 0x23);
        // CB 23 012D
        gbc.setState(0x41e7, 0x5fa0, 0xcbb0, 0xecd7, 0x2120, 0xf245, 0x0, 0x1);
        gbc.writeMem(0x41e7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x5fa0);
        EXPECT(gbc.pc(), 0x41e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 012E
        gbc.setState(0xe25f, 0x9ba7, 0x5fd0, 0x7560, 0xa108, 0x6bbb, 0x0, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9ba7);
        EXPECT(gbc.pc(), 0xe261);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe25f), 0xcb);
        EXPECT(gbc.readMem(0xe260), 0x23);
        // CB 23 012F
        gbc.setState(0x8d75, 0x2cd5, 0x8bd0, 0x54ec, 0x72b2, 0xda63, 0x0, 0x0);
        gbc.writeMem(0x8d75, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2cd5);
        EXPECT(gbc.pc(), 0x8d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d75), 0xcb);
        EXPECT(gbc.readMem(0x8d76), 0x23);
        // CB 23 0130
        gbc.setState(0x1067, 0x48b, 0xdfc0, 0xcee1, 0xc63e, 0xe9ab, 0x0, 0x0);
        gbc.writeMem(0x1067, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x48b);
        EXPECT(gbc.pc(), 0x1069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0131
        gbc.setState(0x73c2, 0xf260, 0x2110, 0x2bb6, 0xfcd5, 0x67eb, 0x0, 0x0);
        gbc.writeMem(0x73c2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xf260);
        EXPECT(gbc.pc(), 0x73c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0132
        gbc.setState(0x6c1d, 0x5a17, 0xc0a0, 0xaa19, 0x5b71, 0x420e, 0x1, 0x1);
        gbc.writeMem(0x6c1d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x5a17);
        EXPECT(gbc.pc(), 0x6c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0133
        gbc.setState(0xccf1, 0xb76, 0x5920, 0xaf6a, 0x74f8, 0x2131, 0x0, 0x1);
        gbc.writeMem(0xccf1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xb76);
        EXPECT(gbc.pc(), 0xccf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccf1), 0xcb);
        EXPECT(gbc.readMem(0xccf2), 0x23);
        // CB 23 0135
        gbc.setState(0xcd49, 0x6f87, 0x8fb0, 0x301a, 0xb85d, 0x56fe, 0x1, 0x1);
        gbc.writeMem(0xcd49, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6f87);
        EXPECT(gbc.pc(), 0xcd4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd49), 0xcb);
        EXPECT(gbc.readMem(0xcd4a), 0x23);
        // CB 23 0136
        gbc.setState(0x5334, 0xcfe0, 0x23a0, 0x383c, 0xa9c9, 0x574, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcfe0);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0137
        gbc.setState(0xdb15, 0xffb6, 0x6d50, 0x40a6, 0xe21b, 0x3808, 0x0, 0x1);
        gbc.writeMem(0xdb15, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xffb6);
        EXPECT(gbc.pc(), 0xdb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb15), 0xcb);
        EXPECT(gbc.readMem(0xdb16), 0x23);
        // CB 23 0138
        gbc.setState(0xa0cd, 0x4d92, 0x1710, 0x54f2, 0x38a, 0x4ed8, 0x1, 0x0);
        gbc.writeMem(0xa0cd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x4d92);
        EXPECT(gbc.pc(), 0xa0cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0cd), 0xcb);
        EXPECT(gbc.readMem(0xa0ce), 0x23);
        // CB 23 0139
        gbc.setState(0x2533, 0xa788, 0xb9b0, 0x290f, 0x570e, 0x6d4, 0x1, 0x0);
        gbc.writeMem(0x2533, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa788);
        EXPECT(gbc.pc(), 0x2535);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 013A
        gbc.setState(0x5bfb, 0xa90a, 0xa540, 0xdced, 0x532f, 0x6ffa, 0x1, 0x0);
        gbc.writeMem(0x5bfb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa90a);
        EXPECT(gbc.pc(), 0x5bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 013B
        gbc.setState(0x48dc, 0xfb57, 0xf990, 0xca24, 0x1fe5, 0x4918, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfb57);
        EXPECT(gbc.pc(), 0x48de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 013C
        gbc.setState(0x701d, 0x7222, 0xc270, 0x73bb, 0x3c90, 0x801d, 0x0, 0x1);
        gbc.writeMem(0x701d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x7222);
        EXPECT(gbc.pc(), 0x701f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 013D
        gbc.setState(0xb797, 0xfcad, 0x1880, 0x7406, 0x650b, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0xb797, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xfcad);
        EXPECT(gbc.pc(), 0xb799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb797), 0xcb);
        EXPECT(gbc.readMem(0xb798), 0x23);
        // CB 23 013E
        gbc.setState(0x142f, 0x9c88, 0x3fd0, 0x553, 0x43ac, 0x1cc1, 0x1, 0x0);
        gbc.writeMem(0x142f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9c88);
        EXPECT(gbc.pc(), 0x1431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 013F
        gbc.setState(0x7380, 0xb6f6, 0x6660, 0x7d2b, 0x1795, 0xaeb0, 0x1, 0x1);
        gbc.writeMem(0x7380, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb6f6);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0141
        gbc.setState(0xdd05, 0xd9c1, 0x9d50, 0x734c, 0xd365, 0xf9d7, 0x0, 0x0);
        gbc.writeMem(0xdd05, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xd9c1);
        EXPECT(gbc.pc(), 0xdd07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd05), 0xcb);
        EXPECT(gbc.readMem(0xdd06), 0x23);
        // CB 23 0142
        gbc.setState(0x54f3, 0xe79, 0x6290, 0xf83, 0x6f6d, 0x4d37, 0x1, 0x0);
        gbc.writeMem(0x54f3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe79);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0143
        gbc.setState(0xc463, 0x6ba3, 0x9ee0, 0xd16a, 0xf276, 0x777c, 0x1, 0x0);
        gbc.writeMem(0xc463, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6ba3);
        EXPECT(gbc.pc(), 0xc465);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc463), 0xcb);
        EXPECT(gbc.readMem(0xc464), 0x23);
        // CB 23 0144
        gbc.setState(0x2989, 0x51b6, 0xb8e0, 0xb3b8, 0x24b9, 0xda68, 0x1, 0x1);
        gbc.writeMem(0x2989, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x51b6);
        EXPECT(gbc.pc(), 0x298b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0145
        gbc.setState(0x6d43, 0xdd5d, 0x8290, 0x1ad4, 0x209a, 0xe979, 0x1, 0x1);
        gbc.writeMem(0x6d43, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xdd5d);
        EXPECT(gbc.pc(), 0x6d45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0146
        gbc.setState(0x4a8c, 0xb912, 0x9e90, 0x6162, 0x6dd4, 0xe982, 0x0, 0x0);
        gbc.writeMem(0x4a8c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xb912);
        EXPECT(gbc.pc(), 0x4a8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0147
        gbc.setState(0x8989, 0x4b68, 0x9240, 0x3a6f, 0x8350, 0x542c, 0x0, 0x0);
        gbc.writeMem(0x8989, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x4b68);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0x23);
        // CB 23 0148
        gbc.setState(0x35, 0x9143, 0x8510, 0xa7df, 0x4580, 0x54bc, 0x1, 0x1);
        gbc.writeMem(0x35, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9143);
        EXPECT(gbc.pc(), 0x37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0149
        gbc.setState(0xc62d, 0xd20f, 0x9f10, 0x17de, 0xa016, 0x639e, 0x0, 0x1);
        gbc.writeMem(0xc62d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xd20f);
        EXPECT(gbc.pc(), 0xc62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62d), 0xcb);
        EXPECT(gbc.readMem(0xc62e), 0x23);
        // CB 23 014A
        gbc.setState(0x829d, 0xe5ae, 0x3020, 0xdd46, 0xb4e5, 0xb92b, 0x1, 0x0);
        gbc.writeMem(0x829d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe5ae);
        EXPECT(gbc.pc(), 0x829f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x829d), 0xcb);
        EXPECT(gbc.readMem(0x829e), 0x23);
        // CB 23 014B
        gbc.setState(0x8f9f, 0xb1e0, 0x8d50, 0x3fdd, 0x79e3, 0x6640, 0x1, 0x0);
        gbc.writeMem(0x8f9f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb1e0);
        EXPECT(gbc.pc(), 0x8fa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f9f), 0xcb);
        EXPECT(gbc.readMem(0x8fa0), 0x23);
        // CB 23 014C
        gbc.setState(0x767e, 0x53c4, 0x5530, 0x68bb, 0x4cb4, 0xbfdf, 0x0, 0x0);
        gbc.writeMem(0x767e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x53c4);
        EXPECT(gbc.pc(), 0x7680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 014D
        gbc.setState(0x502d, 0xde70, 0x870, 0x75c5, 0x582c, 0x6b42, 0x1, 0x0);
        gbc.writeMem(0x502d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xde70);
        EXPECT(gbc.pc(), 0x502f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 014E
        gbc.setState(0x2649, 0x9eab, 0x20d0, 0xf006, 0xce5b, 0xa2f4, 0x1, 0x1);
        gbc.writeMem(0x2649, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x9eab);
        EXPECT(gbc.pc(), 0x264b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 014F
        gbc.setState(0xbf50, 0x1549, 0xc490, 0xe155, 0x4590, 0x1f42, 0x0, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x1549);
        EXPECT(gbc.pc(), 0xbf52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf50), 0xcb);
        EXPECT(gbc.readMem(0xbf51), 0x23);
        // CB 23 0150
        gbc.setState(0xa98b, 0x5570, 0xf950, 0x9202, 0x3de5, 0xe52d, 0x0, 0x0);
        gbc.writeMem(0xa98b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5570);
        EXPECT(gbc.pc(), 0xa98d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa98b), 0xcb);
        EXPECT(gbc.readMem(0xa98c), 0x23);
        // CB 23 0151
        gbc.setState(0xaf90, 0x4f52, 0xebb0, 0x351f, 0xaea1, 0x14eb, 0x0, 0x1);
        gbc.writeMem(0xaf90, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4f52);
        EXPECT(gbc.pc(), 0xaf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf90), 0xcb);
        EXPECT(gbc.readMem(0xaf91), 0x23);
        // CB 23 0152
        gbc.setState(0x17c8, 0x675d, 0xd70, 0xa4f3, 0x5678, 0x6614, 0x1, 0x1);
        gbc.writeMem(0x17c8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x675d);
        EXPECT(gbc.pc(), 0x17ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0153
        gbc.setState(0x7f67, 0x274e, 0xef20, 0xcff4, 0x6a8c, 0x74a5, 0x0, 0x1);
        gbc.writeMem(0x7f67, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x274e);
        EXPECT(gbc.pc(), 0x7f69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0154
        gbc.setState(0x9f42, 0x3742, 0x1140, 0xe4da, 0x68e1, 0x3ce3, 0x1, 0x0);
        gbc.writeMem(0x9f42, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3742);
        EXPECT(gbc.pc(), 0x9f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f42), 0xcb);
        EXPECT(gbc.readMem(0x9f43), 0x23);
        // CB 23 0155
        gbc.setState(0xe8f0, 0xc374, 0x4150, 0x79f7, 0xf149, 0xbcc1, 0x1, 0x1);
        gbc.writeMem(0xe8f0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0xe8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f0), 0xcb);
        EXPECT(gbc.readMem(0xe8f1), 0x23);
        // CB 23 0156
        gbc.setState(0x57be, 0xbdf6, 0x70, 0x92f8, 0x3785, 0x6ffb, 0x0, 0x1);
        gbc.writeMem(0x57be, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbdf6);
        EXPECT(gbc.pc(), 0x57c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0157
        gbc.setState(0x61a1, 0xa328, 0x39e0, 0xcc83, 0xebf3, 0x24d4, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xa328);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0158
        gbc.setState(0x7c85, 0x8de0, 0x6780, 0xc525, 0x2ab0, 0xce5e, 0x0, 0x1);
        gbc.writeMem(0x7c85, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8de0);
        EXPECT(gbc.pc(), 0x7c87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0159
        gbc.setState(0x6869, 0x92eb, 0x9320, 0x126f, 0x16b7, 0x8e7d, 0x0, 0x0);
        gbc.writeMem(0x6869, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x92eb);
        EXPECT(gbc.pc(), 0x686b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 015A
        gbc.setState(0x436, 0x526c, 0xc560, 0x325c, 0xa8e4, 0x3e5, 0x0, 0x1);
        gbc.writeMem(0x436, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x526c);
        EXPECT(gbc.pc(), 0x438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 015B
        gbc.setState(0x92b9, 0x57f, 0xbf40, 0xde8, 0xf06b, 0xfa8a, 0x1, 0x1);
        gbc.writeMem(0x92b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x57f);
        EXPECT(gbc.pc(), 0x92bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b9), 0xcb);
        EXPECT(gbc.readMem(0x92ba), 0x23);
        // CB 23 015C
        gbc.setState(0x3902, 0x580c, 0xb4a0, 0xf16b, 0x2395, 0x972b, 0x0, 0x1);
        gbc.writeMem(0x3902, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x580c);
        EXPECT(gbc.pc(), 0x3904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 015D
        gbc.setState(0xd403, 0xfa7b, 0xae70, 0xa2e7, 0xcea5, 0xc7a8, 0x1, 0x1);
        gbc.writeMem(0xd403, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfa7b);
        EXPECT(gbc.pc(), 0xd405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd403), 0xcb);
        EXPECT(gbc.readMem(0xd404), 0x23);
        // CB 23 015E
        gbc.setState(0xbf79, 0xdf3a, 0xfb00, 0x13c1, 0x440, 0x94d2, 0x1, 0x0);
        gbc.writeMem(0xbf79, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xdf3a);
        EXPECT(gbc.pc(), 0xbf7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf79), 0xcb);
        EXPECT(gbc.readMem(0xbf7a), 0x23);
        // CB 23 015F
        gbc.setState(0x606f, 0x23ff, 0x6060, 0x820f, 0x75ee, 0x6ca7, 0x0, 0x1);
        gbc.writeMem(0x606f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x23ff);
        EXPECT(gbc.pc(), 0x6071);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0160
        gbc.setState(0x3e4d, 0xcec9, 0x92c0, 0x259c, 0x2ba7, 0xf25c, 0x1, 0x0);
        gbc.writeMem(0x3e4d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcec9);
        EXPECT(gbc.pc(), 0x3e4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0161
        gbc.setState(0x479a, 0xa98c, 0x7d90, 0xb820, 0x110f, 0x3cd, 0x0, 0x0);
        gbc.writeMem(0x479a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa98c);
        EXPECT(gbc.pc(), 0x479c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0162
        gbc.setState(0xc232, 0xa23a, 0x6930, 0xde07, 0x81b8, 0x848d, 0x0, 0x0);
        gbc.writeMem(0xc232, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa23a);
        EXPECT(gbc.pc(), 0xc234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc232), 0xcb);
        EXPECT(gbc.readMem(0xc233), 0x23);
        // CB 23 0163
        gbc.setState(0xa3f3, 0x1da4, 0xff00, 0x3798, 0x9697, 0x6158, 0x0, 0x0);
        gbc.writeMem(0xa3f3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x1da4);
        EXPECT(gbc.pc(), 0xa3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3f3), 0xcb);
        EXPECT(gbc.readMem(0xa3f4), 0x23);
        // CB 23 0164
        gbc.setState(0xe966, 0x6875, 0xb4b0, 0x4587, 0x3b2f, 0x612e, 0x0, 0x0);
        gbc.writeMem(0xe966, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6875);
        EXPECT(gbc.pc(), 0xe968);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe966), 0xcb);
        EXPECT(gbc.readMem(0xe967), 0x23);
        // CB 23 0165
        gbc.setState(0xe6dd, 0x41ce, 0x2040, 0xf744, 0xe1d7, 0x19a8, 0x0, 0x0);
        gbc.writeMem(0xe6dd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x41ce);
        EXPECT(gbc.pc(), 0xe6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6dd), 0xcb);
        EXPECT(gbc.readMem(0xe6de), 0x23);
        // CB 23 0167
        gbc.setState(0xcbdc, 0x40e5, 0x6de0, 0x572d, 0xedf2, 0x7588, 0x1, 0x1);
        gbc.writeMem(0xcbdc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x40e5);
        EXPECT(gbc.pc(), 0xcbde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbdc), 0xcb);
        EXPECT(gbc.readMem(0xcbdd), 0x23);
        // CB 23 0168
        gbc.setState(0x4635, 0x5b9, 0xd190, 0x88d2, 0xf68a, 0xd227, 0x0, 0x1);
        gbc.writeMem(0x4635, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x5b9);
        EXPECT(gbc.pc(), 0x4637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0169
        gbc.setState(0xa064, 0xe290, 0x84f0, 0xbfbc, 0x3678, 0x8a13, 0x0, 0x0);
        gbc.writeMem(0xa064, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe290);
        EXPECT(gbc.pc(), 0xa066);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa064), 0xcb);
        EXPECT(gbc.readMem(0xa065), 0x23);
        // CB 23 016A
        gbc.setState(0xdacb, 0xc844, 0x9d30, 0x91d6, 0x5ef6, 0x7bd, 0x0, 0x0);
        gbc.writeMem(0xdacb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc844);
        EXPECT(gbc.pc(), 0xdacd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdacb), 0xcb);
        EXPECT(gbc.readMem(0xdacc), 0x23);
        // CB 23 016B
        gbc.setState(0x8dab, 0x2430, 0xeb90, 0xef95, 0x4f69, 0x5c8, 0x0, 0x1);
        gbc.writeMem(0x8dab, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2430);
        EXPECT(gbc.pc(), 0x8dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dab), 0xcb);
        EXPECT(gbc.readMem(0x8dac), 0x23);
        // CB 23 016C
        gbc.setState(0x9fc9, 0xe4fe, 0xbc90, 0x28e8, 0xd805, 0x3f0b, 0x0, 0x1);
        gbc.writeMem(0x9fc9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe4fe);
        EXPECT(gbc.pc(), 0x9fcb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fc9), 0xcb);
        EXPECT(gbc.readMem(0x9fca), 0x23);
        // CB 23 016E
        gbc.setState(0x5520, 0xad17, 0x8ab0, 0x6958, 0x4d88, 0xdb3b, 0x0, 0x1);
        gbc.writeMem(0x5520, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xad17);
        EXPECT(gbc.pc(), 0x5522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 016F
        gbc.setState(0xd23e, 0xdf90, 0x93c0, 0xf49e, 0xb24b, 0x72d, 0x1, 0x0);
        gbc.writeMem(0xd23e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xdf90);
        EXPECT(gbc.pc(), 0xd240);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23e), 0xcb);
        EXPECT(gbc.readMem(0xd23f), 0x23);
        // CB 23 0170
        gbc.setState(0x9ccd, 0x1238, 0xbbd0, 0x536c, 0x598e, 0x5c31, 0x0, 0x1);
        gbc.writeMem(0x9ccd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x1238);
        EXPECT(gbc.pc(), 0x9ccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccd), 0xcb);
        EXPECT(gbc.readMem(0x9cce), 0x23);
        // CB 23 0171
        gbc.setState(0x5d7e, 0x8503, 0x4510, 0x76c5, 0xd6ad, 0x475a, 0x0, 0x0);
        gbc.writeMem(0x5d7e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8503);
        EXPECT(gbc.pc(), 0x5d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0172
        gbc.setState(0x191b, 0x5326, 0xe600, 0xf400, 0xe70b, 0x83a7, 0x0, 0x1);
        gbc.writeMem(0x191b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x5326);
        EXPECT(gbc.pc(), 0x191d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0173
        gbc.setState(0x501a, 0x9923, 0x5290, 0xba18, 0x1479, 0x3634, 0x1, 0x1);
        gbc.writeMem(0x501a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x9923);
        EXPECT(gbc.pc(), 0x501c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0175
        gbc.setState(0x4640, 0xee5a, 0x7520, 0xc2d8, 0xb37b, 0xcb5c, 0x0, 0x1);
        gbc.writeMem(0x4640, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xee5a);
        EXPECT(gbc.pc(), 0x4642);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0176
        gbc.setState(0xd4d1, 0x46d, 0x6960, 0xf3f1, 0xf295, 0x5c36, 0x0, 0x0);
        gbc.writeMem(0xd4d1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x46d);
        EXPECT(gbc.pc(), 0xd4d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4d1), 0xcb);
        EXPECT(gbc.readMem(0xd4d2), 0x23);
        // CB 23 0177
        gbc.setState(0x4ce6, 0xfca3, 0x5e60, 0xc10f, 0x69, 0x5d47, 0x1, 0x1);
        gbc.writeMem(0x4ce6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfca3);
        EXPECT(gbc.pc(), 0x4ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0178
        gbc.setState(0x1232, 0x60e4, 0x5900, 0xeb4c, 0xed87, 0x7c72, 0x0, 0x0);
        gbc.writeMem(0x1232, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x60e4);
        EXPECT(gbc.pc(), 0x1234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0179
        gbc.setState(0x3aa6, 0xdda, 0x6230, 0x2a1, 0x872e, 0x17ef, 0x0, 0x0);
        gbc.writeMem(0x3aa6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xdda);
        EXPECT(gbc.pc(), 0x3aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 017A
        gbc.setState(0x1f8c, 0xe7e5, 0x2720, 0xdd1b, 0x5bd4, 0xd713, 0x0, 0x0);
        gbc.writeMem(0x1f8c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe7e5);
        EXPECT(gbc.pc(), 0x1f8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 017B
        gbc.setState(0x2328, 0xe6eb, 0x3b20, 0xcba1, 0xb288, 0x956e, 0x1, 0x1);
        gbc.writeMem(0x2328, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe6eb);
        EXPECT(gbc.pc(), 0x232a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 017D
        gbc.setState(0x610a, 0x605e, 0xbba0, 0x7bd5, 0x3c7a, 0x9e41, 0x1, 0x0);
        gbc.writeMem(0x610a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x605e);
        EXPECT(gbc.pc(), 0x610c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 017F
        gbc.setState(0xb377, 0xa2c4, 0xd5a0, 0xc5c5, 0x97c, 0x13b3, 0x1, 0x0);
        gbc.writeMem(0xb377, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa2c4);
        EXPECT(gbc.pc(), 0xb379);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb377), 0xcb);
        EXPECT(gbc.readMem(0xb378), 0x23);
        // CB 23 0180
        gbc.setState(0x21e7, 0x17ae, 0xd9c0, 0xe93d, 0x6b0f, 0x4bb9, 0x1, 0x0);
        gbc.writeMem(0x21e7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x17ae);
        EXPECT(gbc.pc(), 0x21e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0181
        gbc.setState(0x44d1, 0xafb7, 0x2950, 0x97ea, 0x861d, 0x9ccc, 0x1, 0x0);
        gbc.writeMem(0x44d1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xafb7);
        EXPECT(gbc.pc(), 0x44d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0182
        gbc.setState(0xd7f9, 0xd458, 0x8ea0, 0xa352, 0xd8a9, 0x2bf3, 0x0, 0x0);
        gbc.writeMem(0xd7f9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0xd7fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f9), 0xcb);
        EXPECT(gbc.readMem(0xd7fa), 0x23);
        // CB 23 0183
        gbc.setState(0xafd5, 0xba1d, 0xc710, 0x34dd, 0xf62f, 0x35de, 0x0, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xba1d);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0x23);
        // CB 23 0185
        gbc.setState(0xeabc, 0x4bf3, 0x8020, 0x4b76, 0xe948, 0x579b, 0x0, 0x1);
        gbc.writeMem(0xeabc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4bf3);
        EXPECT(gbc.pc(), 0xeabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeabc), 0xcb);
        EXPECT(gbc.readMem(0xeabd), 0x23);
        // CB 23 0186
        gbc.setState(0xc73, 0x5a00, 0x8400, 0x3650, 0xa50c, 0xe290, 0x1, 0x0);
        gbc.writeMem(0xc73, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5a00);
        EXPECT(gbc.pc(), 0xc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0187
        gbc.setState(0x3825, 0x8ffd, 0x6b0, 0xe9b2, 0xec1d, 0xaf47, 0x0, 0x1);
        gbc.writeMem(0x3825, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8ffd);
        EXPECT(gbc.pc(), 0x3827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0188
        gbc.setState(0xefd5, 0xb460, 0x970, 0x5817, 0xa7c5, 0xfe1f, 0x0, 0x0);
        gbc.writeMem(0xefd5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb460);
        EXPECT(gbc.pc(), 0xefd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefd5), 0xcb);
        EXPECT(gbc.readMem(0xefd6), 0x23);
        // CB 23 0189
        gbc.setState(0x7c5e, 0xbe43, 0xff10, 0x2f02, 0x3260, 0xb278, 0x1, 0x0);
        gbc.writeMem(0x7c5e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbe43);
        EXPECT(gbc.pc(), 0x7c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 018A
        gbc.setState(0x6c7f, 0x1a76, 0xe430, 0x3a05, 0x5e68, 0x858a, 0x1, 0x0);
        gbc.writeMem(0x6c7f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1a76);
        EXPECT(gbc.pc(), 0x6c81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 018B
        gbc.setState(0xa1b3, 0x47f, 0xed70, 0x494f, 0x7f61, 0x3fb, 0x0, 0x0);
        gbc.writeMem(0xa1b3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x47f);
        EXPECT(gbc.pc(), 0xa1b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b3), 0xcb);
        EXPECT(gbc.readMem(0xa1b4), 0x23);
        // CB 23 018D
        gbc.setState(0x1f4c, 0xa9d1, 0x3850, 0xc1d9, 0xdd0a, 0x9c23, 0x1, 0x0);
        gbc.writeMem(0x1f4c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa9d1);
        EXPECT(gbc.pc(), 0x1f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 018E
        gbc.setState(0x6531, 0x971b, 0xc50, 0x398f, 0x704f, 0xea1c, 0x0, 0x0);
        gbc.writeMem(0x6531, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x971b);
        EXPECT(gbc.pc(), 0x6533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 018F
        gbc.setState(0x9ae4, 0xdd4d, 0x6560, 0xa043, 0xc2fe, 0x6047, 0x1, 0x1);
        gbc.writeMem(0x9ae4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0x9ae6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ae4), 0xcb);
        EXPECT(gbc.readMem(0x9ae5), 0x23);
        // CB 23 0190
        gbc.setState(0x8508, 0x5918, 0x5d10, 0x6855, 0x90fa, 0xe41f, 0x0, 0x1);
        gbc.writeMem(0x8508, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5918);
        EXPECT(gbc.pc(), 0x850a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8508), 0xcb);
        EXPECT(gbc.readMem(0x8509), 0x23);
        // CB 23 0191
        gbc.setState(0xe476, 0x33b7, 0xb5b0, 0x8e39, 0xca06, 0x7d86, 0x1, 0x0);
        gbc.writeMem(0xe476, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x33b7);
        EXPECT(gbc.pc(), 0xe478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe476), 0xcb);
        EXPECT(gbc.readMem(0xe477), 0x23);
        // CB 23 0192
        gbc.setState(0x4520, 0x772f, 0xdf00, 0xda76, 0xc547, 0xe6a2, 0x0, 0x1);
        gbc.writeMem(0x4520, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x772f);
        EXPECT(gbc.pc(), 0x4522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0193
        gbc.setState(0xd246, 0x9ec2, 0x59a0, 0x6c25, 0x8101, 0x57cd, 0x1, 0x1);
        gbc.writeMem(0xd246, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9ec2);
        EXPECT(gbc.pc(), 0xd248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd246), 0xcb);
        EXPECT(gbc.readMem(0xd247), 0x23);
        // CB 23 0194
        gbc.setState(0x220f, 0xfe3f, 0x5470, 0x3354, 0x8cd0, 0x3e7a, 0x0, 0x1);
        gbc.writeMem(0x220f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0x2211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0195
        gbc.setState(0x2811, 0xfbd4, 0xec10, 0xd0de, 0xbd56, 0xec30, 0x1, 0x0);
        gbc.writeMem(0x2811, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xfbd4);
        EXPECT(gbc.pc(), 0x2813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0196
        gbc.setState(0x821a, 0x59bc, 0xac90, 0x81b0, 0x2362, 0xae7b, 0x0, 0x0);
        gbc.writeMem(0x821a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x59bc);
        EXPECT(gbc.pc(), 0x821c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x821a), 0xcb);
        EXPECT(gbc.readMem(0x821b), 0x23);
        // CB 23 0197
        gbc.setState(0xd625, 0x1097, 0x7ee0, 0xdcd, 0x410e, 0xac20, 0x1, 0x0);
        gbc.writeMem(0xd625, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1097);
        EXPECT(gbc.pc(), 0xd627);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd625), 0xcb);
        EXPECT(gbc.readMem(0xd626), 0x23);
        // CB 23 0198
        gbc.setState(0xa247, 0xbe6a, 0x7110, 0xd6e2, 0x8f85, 0xfc79, 0x1, 0x1);
        gbc.writeMem(0xa247, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xbe6a);
        EXPECT(gbc.pc(), 0xa249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa247), 0xcb);
        EXPECT(gbc.readMem(0xa248), 0x23);
        // CB 23 0199
        gbc.setState(0x5bbd, 0x6f39, 0x8d00, 0xdbce, 0xe6ff, 0xbb0d, 0x0, 0x1);
        gbc.writeMem(0x5bbd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6f39);
        EXPECT(gbc.pc(), 0x5bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 019A
        gbc.setState(0x73b8, 0xd5c3, 0x6ce0, 0x1f03, 0x723c, 0x3f6, 0x1, 0x0);
        gbc.writeMem(0x73b8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd5c3);
        EXPECT(gbc.pc(), 0x73ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 019B
        gbc.setState(0xae85, 0xc8df, 0xa4e0, 0xe55b, 0xb171, 0x9a55, 0x0, 0x1);
        gbc.writeMem(0xae85, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xc8df);
        EXPECT(gbc.pc(), 0xae87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae85), 0xcb);
        EXPECT(gbc.readMem(0xae86), 0x23);
        // CB 23 019C
        gbc.setState(0xd2c, 0xc428, 0xbe60, 0x402f, 0xab9d, 0x25, 0x0, 0x0);
        gbc.writeMem(0xd2c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xc428);
        EXPECT(gbc.pc(), 0xd2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 019D
        gbc.setState(0xb383, 0x6b6c, 0x20f0, 0xcc72, 0x9891, 0x23b9, 0x1, 0x1);
        gbc.writeMem(0xb383, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x6b6c);
        EXPECT(gbc.pc(), 0xb385);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb383), 0xcb);
        EXPECT(gbc.readMem(0xb384), 0x23);
        // CB 23 019E
        gbc.setState(0xe84c, 0xa3b9, 0xc470, 0x9b94, 0xecdc, 0x85fa, 0x1, 0x1);
        gbc.writeMem(0xe84c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa3b9);
        EXPECT(gbc.pc(), 0xe84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe84c), 0xcb);
        EXPECT(gbc.readMem(0xe84d), 0x23);
        // CB 23 019F
        gbc.setState(0x3e6e, 0x7eef, 0x4be0, 0x9161, 0x40f, 0x2031, 0x1, 0x0);
        gbc.writeMem(0x3e6e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x7eef);
        EXPECT(gbc.pc(), 0x3e70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01A0
        gbc.setState(0xd3a, 0x280f, 0x7840, 0x41be, 0x9926, 0x2079, 0x0, 0x1);
        gbc.writeMem(0xd3a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x280f);
        EXPECT(gbc.pc(), 0xd3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01A1
        gbc.setState(0xd58c, 0x8121, 0xe540, 0xe2fc, 0x898c, 0x852a, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8121);
        EXPECT(gbc.pc(), 0xd58e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58c), 0xcb);
        EXPECT(gbc.readMem(0xd58d), 0x23);
        // CB 23 01A2
        gbc.setState(0x236f, 0x9212, 0xd70, 0xb083, 0x67fa, 0x2d1c, 0x0, 0x1);
        gbc.writeMem(0x236f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x9212);
        EXPECT(gbc.pc(), 0x2371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01A3
        gbc.setState(0x1ea6, 0x1b08, 0x5e60, 0xcae1, 0x656a, 0x94bf, 0x1, 0x1);
        gbc.writeMem(0x1ea6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1b08);
        EXPECT(gbc.pc(), 0x1ea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01A5
        gbc.setState(0x4782, 0xab8b, 0x2a20, 0x4b02, 0xa015, 0x8860, 0x0, 0x1);
        gbc.writeMem(0x4782, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0x4784);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01A6
        gbc.setState(0x256a, 0xb2a6, 0xd450, 0x2f4e, 0xfa6f, 0xc84e, 0x0, 0x0);
        gbc.writeMem(0x256a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb2a6);
        EXPECT(gbc.pc(), 0x256c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01A7
        gbc.setState(0x3e4b, 0x19eb, 0x2310, 0x1231, 0xbdff, 0x8692, 0x0, 0x1);
        gbc.writeMem(0x3e4b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x19eb);
        EXPECT(gbc.pc(), 0x3e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01A8
        gbc.setState(0xe61c, 0xb6d9, 0x79e0, 0xa9d6, 0xaaf4, 0xf107, 0x0, 0x0);
        gbc.writeMem(0xe61c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb6d9);
        EXPECT(gbc.pc(), 0xe61e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe61c), 0xcb);
        EXPECT(gbc.readMem(0xe61d), 0x23);
        // CB 23 01A9
        gbc.setState(0x2cac, 0x34b3, 0xfcf0, 0x6cb5, 0xedda, 0xe288, 0x0, 0x1);
        gbc.writeMem(0x2cac, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x34b3);
        EXPECT(gbc.pc(), 0x2cae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01AA
        gbc.setState(0x4249, 0xf501, 0x1060, 0x88fe, 0x7063, 0x1564, 0x1, 0x0);
        gbc.writeMem(0x4249, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf501);
        EXPECT(gbc.pc(), 0x424b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01AB
        gbc.setState(0xdefc, 0xede5, 0x6f50, 0x3930, 0x3671, 0xbff4, 0x1, 0x0);
        gbc.writeMem(0xdefc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xede5);
        EXPECT(gbc.pc(), 0xdefe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdefc), 0xcb);
        EXPECT(gbc.readMem(0xdefd), 0x23);
        // CB 23 01AC
        gbc.setState(0x1a8e, 0x3435, 0x6360, 0xad44, 0xc700, 0xe6bf, 0x1, 0x0);
        gbc.writeMem(0x1a8e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3435);
        EXPECT(gbc.pc(), 0x1a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01AD
        gbc.setState(0x4ddd, 0xe773, 0x17b0, 0xd31f, 0x15f8, 0x593d, 0x0, 0x1);
        gbc.writeMem(0x4ddd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe773);
        EXPECT(gbc.pc(), 0x4ddf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01AE
        gbc.setState(0xe0a5, 0x4e2b, 0x9820, 0xb7b9, 0xcf0f, 0x743e, 0x1, 0x0);
        gbc.writeMem(0xe0a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x4e2b);
        EXPECT(gbc.pc(), 0xe0a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0a5), 0xcb);
        EXPECT(gbc.readMem(0xe0a6), 0x23);
        // CB 23 01AF
        gbc.setState(0x9401, 0x116, 0x8f00, 0xdcd3, 0x9728, 0x9ea4, 0x0, 0x1);
        gbc.writeMem(0x9401, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x116);
        EXPECT(gbc.pc(), 0x9403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9401), 0xcb);
        EXPECT(gbc.readMem(0x9402), 0x23);
        // CB 23 01B1
        gbc.setState(0xabc5, 0x732, 0xe510, 0x834a, 0xdd04, 0xc608, 0x1, 0x1);
        gbc.writeMem(0xabc5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x732);
        EXPECT(gbc.pc(), 0xabc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc5), 0xcb);
        EXPECT(gbc.readMem(0xabc6), 0x23);
        // CB 23 01B2
        gbc.setState(0x208e, 0xb5eb, 0xba90, 0xd18a, 0x3b7b, 0xa036, 0x0, 0x1);
        gbc.writeMem(0x208e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb5eb);
        EXPECT(gbc.pc(), 0x2090);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01B3
        gbc.setState(0x3148, 0xbba0, 0x57f0, 0x208, 0x76a6, 0xcc83, 0x1, 0x0);
        gbc.writeMem(0x3148, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xbba0);
        EXPECT(gbc.pc(), 0x314a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01B4
        gbc.setState(0x1599, 0xb14a, 0x2a70, 0x91d0, 0x2e99, 0x45af, 0x1, 0x0);
        gbc.writeMem(0x1599, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb14a);
        EXPECT(gbc.pc(), 0x159b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01B5
        gbc.setState(0x77ae, 0x71d8, 0x1a00, 0xf707, 0xd68b, 0xdbc2, 0x0, 0x1);
        gbc.writeMem(0x77ae, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x71d8);
        EXPECT(gbc.pc(), 0x77b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01B7
        gbc.setState(0x41cc, 0x369c, 0xfeb0, 0x678, 0x97ac, 0x8efe, 0x0, 0x1);
        gbc.writeMem(0x41cc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x369c);
        EXPECT(gbc.pc(), 0x41ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01B8
        gbc.setState(0x4b26, 0xf8da, 0x1cf0, 0xf85e, 0x83bb, 0xe8b3, 0x0, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf8da);
        EXPECT(gbc.pc(), 0x4b28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01B9
        gbc.setState(0x207c, 0x30e5, 0xdcf0, 0x21e3, 0xb665, 0x748f, 0x1, 0x0);
        gbc.writeMem(0x207c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x30e5);
        EXPECT(gbc.pc(), 0x207e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01BA
        gbc.setState(0xd2f, 0x8072, 0x15d0, 0xa087, 0x9153, 0x6d86, 0x1, 0x0);
        gbc.writeMem(0xd2f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8072);
        EXPECT(gbc.pc(), 0xd31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01BB
        gbc.setState(0x990f, 0xafb9, 0xb240, 0x8ff1, 0x6e51, 0xc277, 0x1, 0x0);
        gbc.writeMem(0x990f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xafb9);
        EXPECT(gbc.pc(), 0x9911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990f), 0xcb);
        EXPECT(gbc.readMem(0x9910), 0x23);
        // CB 23 01BC
        gbc.setState(0xd023, 0x28b9, 0x51d0, 0x222e, 0x1a1f, 0xc5c, 0x0, 0x1);
        gbc.writeMem(0xd023, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x28b9);
        EXPECT(gbc.pc(), 0xd025);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd023), 0xcb);
        EXPECT(gbc.readMem(0xd024), 0x23);
        // CB 23 01BD
        gbc.setState(0x40c9, 0x1334, 0xe350, 0xccec, 0xf94f, 0x63db, 0x0, 0x0);
        gbc.writeMem(0x40c9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1334);
        EXPECT(gbc.pc(), 0x40cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01BE
        gbc.setState(0xcb3b, 0xc64e, 0x60c0, 0x4aaf, 0x397b, 0xbf4e, 0x0, 0x0);
        gbc.writeMem(0xcb3b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc64e);
        EXPECT(gbc.pc(), 0xcb3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3b), 0xcb);
        EXPECT(gbc.readMem(0xcb3c), 0x23);
        // CB 23 01BF
        gbc.setState(0x9121, 0x8eb5, 0x5b90, 0x9b15, 0x61d1, 0x5344, 0x0, 0x0);
        gbc.writeMem(0x9121, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8eb5);
        EXPECT(gbc.pc(), 0x9123);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9121), 0xcb);
        EXPECT(gbc.readMem(0x9122), 0x23);
        // CB 23 01C0
        gbc.setState(0x3926, 0xd8c6, 0xc540, 0xcc0a, 0x750, 0x3801, 0x0, 0x0);
        gbc.writeMem(0x3926, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd8c6);
        EXPECT(gbc.pc(), 0x3928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01C1
        gbc.setState(0x126, 0x4e2e, 0xa6f0, 0x3b54, 0x7bce, 0x114d, 0x0, 0x1);
        gbc.writeMem(0x126, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x4e2e);
        EXPECT(gbc.pc(), 0x128);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01C2
        gbc.setState(0x10c8, 0x9a27, 0xfda0, 0x71b7, 0x74e4, 0xc000, 0x1, 0x1);
        gbc.writeMem(0x10c8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x9a27);
        EXPECT(gbc.pc(), 0x10ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01C3
        gbc.setState(0x4308, 0x4588, 0x9d60, 0x687a, 0xd8b6, 0x304e, 0x0, 0x0);
        gbc.writeMem(0x4308, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4588);
        EXPECT(gbc.pc(), 0x430a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01C4
        gbc.setState(0x4006, 0x9ae7, 0xca40, 0xa289, 0xeea9, 0x3997, 0x0, 0x1);
        gbc.writeMem(0x4006, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9ae7);
        EXPECT(gbc.pc(), 0x4008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01C5
        gbc.setState(0xcea2, 0xebb8, 0xa540, 0xa8ac, 0x5378, 0xebdc, 0x0, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xebb8);
        EXPECT(gbc.pc(), 0xcea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcea2), 0xcb);
        EXPECT(gbc.readMem(0xcea3), 0x23);
        // CB 23 01C6
        gbc.setState(0x9e07, 0xb115, 0x9c80, 0xe3c4, 0x4e7a, 0xabd6, 0x1, 0x0);
        gbc.writeMem(0x9e07, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb115);
        EXPECT(gbc.pc(), 0x9e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e07), 0xcb);
        EXPECT(gbc.readMem(0x9e08), 0x23);
        // CB 23 01C7
        gbc.setState(0x1a5f, 0x3144, 0x3ef0, 0xa2b8, 0xfd52, 0x84f7, 0x0, 0x1);
        gbc.writeMem(0x1a5f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3144);
        EXPECT(gbc.pc(), 0x1a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01C8
        gbc.setState(0xa267, 0x54e9, 0x10d0, 0x6a3a, 0xb759, 0xf20c, 0x0, 0x1);
        gbc.writeMem(0xa267, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x54e9);
        EXPECT(gbc.pc(), 0xa269);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa267), 0xcb);
        EXPECT(gbc.readMem(0xa268), 0x23);
        // CB 23 01C9
        gbc.setState(0x5cc3, 0x53d0, 0xbdb0, 0x4cd5, 0xcffd, 0xc2db, 0x1, 0x0);
        gbc.writeMem(0x5cc3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x53d0);
        EXPECT(gbc.pc(), 0x5cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01CA
        gbc.setState(0x1456, 0x579d, 0x2530, 0xaaf6, 0xf6fb, 0x9a99, 0x0, 0x1);
        gbc.writeMem(0x1456, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x579d);
        EXPECT(gbc.pc(), 0x1458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01CB
        gbc.setState(0x240c, 0xc57d, 0xd200, 0x53b7, 0x42ab, 0x4022, 0x0, 0x1);
        gbc.writeMem(0x240c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc57d);
        EXPECT(gbc.pc(), 0x240e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01CC
        gbc.setState(0x40e9, 0x9f48, 0x14c0, 0xf3e1, 0x94ce, 0x6ef9, 0x0, 0x0);
        gbc.writeMem(0x40e9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9f48);
        EXPECT(gbc.pc(), 0x40eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01CD
        gbc.setState(0xf7c, 0x36b8, 0x17e0, 0xe802, 0x629c, 0x81ec, 0x1, 0x1);
        gbc.writeMem(0xf7c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x36b8);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01CE
        gbc.setState(0x8452, 0xca3c, 0xa9d0, 0xeda7, 0xfa7, 0x8337, 0x1, 0x1);
        gbc.writeMem(0x8452, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xca3c);
        EXPECT(gbc.pc(), 0x8454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8452), 0xcb);
        EXPECT(gbc.readMem(0x8453), 0x23);
        // CB 23 01CF
        gbc.setState(0x2709, 0xa9d2, 0xe9a0, 0x1b40, 0x9b96, 0xa951, 0x0, 0x0);
        gbc.writeMem(0x2709, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xa9d2);
        EXPECT(gbc.pc(), 0x270b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01D0
        gbc.setState(0x812a, 0xaea0, 0x7fb0, 0x8ff7, 0x52f, 0x5f49, 0x0, 0x1);
        gbc.writeMem(0x812a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xaea0);
        EXPECT(gbc.pc(), 0x812c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x812a), 0xcb);
        EXPECT(gbc.readMem(0x812b), 0x23);
        // CB 23 01D1
        gbc.setState(0x281a, 0x3518, 0xf740, 0xf8a4, 0xd8a5, 0xb4b, 0x0, 0x1);
        gbc.writeMem(0x281a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3518);
        EXPECT(gbc.pc(), 0x281c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01D2
        gbc.setState(0xb61f, 0xd8d5, 0xa520, 0x708, 0x3457, 0x9cab, 0x0, 0x0);
        gbc.writeMem(0xb61f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd8d5);
        EXPECT(gbc.pc(), 0xb621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb61f), 0xcb);
        EXPECT(gbc.readMem(0xb620), 0x23);
        // CB 23 01D3
        gbc.setState(0x395d, 0x6fa9, 0x5210, 0x9943, 0xe53a, 0xd416, 0x0, 0x0);
        gbc.writeMem(0x395d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6fa9);
        EXPECT(gbc.pc(), 0x395f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01D4
        gbc.setState(0x58d3, 0xeded, 0xad0, 0x42cf, 0xee7c, 0x38df, 0x1, 0x0);
        gbc.writeMem(0x58d3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeded);
        EXPECT(gbc.pc(), 0x58d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01D5
        gbc.setState(0xc906, 0x704c, 0xc080, 0x159e, 0x42f8, 0x24c9, 0x1, 0x1);
        gbc.writeMem(0xc906, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x704c);
        EXPECT(gbc.pc(), 0xc908);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc906), 0xcb);
        EXPECT(gbc.readMem(0xc907), 0x23);
        // CB 23 01D6
        gbc.setState(0x95fe, 0xef70, 0x7f90, 0x8359, 0xfe45, 0x7723, 0x0, 0x1);
        gbc.writeMem(0x95fe, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xef70);
        EXPECT(gbc.pc(), 0x9600);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95fe), 0xcb);
        EXPECT(gbc.readMem(0x95ff), 0x23);
        // CB 23 01D7
        gbc.setState(0x9bc6, 0x49f9, 0x2b30, 0xa622, 0xe7ca, 0x8b3, 0x0, 0x1);
        gbc.writeMem(0x9bc6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x49f9);
        EXPECT(gbc.pc(), 0x9bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc6), 0xcb);
        EXPECT(gbc.readMem(0x9bc7), 0x23);
        // CB 23 01D8
        gbc.setState(0x8874, 0x93c0, 0x2720, 0xdaa0, 0x3e7d, 0xce19, 0x1, 0x0);
        gbc.writeMem(0x8874, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x93c0);
        EXPECT(gbc.pc(), 0x8876);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8874), 0xcb);
        EXPECT(gbc.readMem(0x8875), 0x23);
        // CB 23 01D9
        gbc.setState(0x5194, 0xa847, 0x5090, 0xe953, 0x6203, 0x9239, 0x1, 0x0);
        gbc.writeMem(0x5194, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa847);
        EXPECT(gbc.pc(), 0x5196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01DB
        gbc.setState(0x4b4e, 0xb592, 0xaff0, 0x12ae, 0xe1b, 0xc3c7, 0x1, 0x1);
        gbc.writeMem(0x4b4e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xb592);
        EXPECT(gbc.pc(), 0x4b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01DC
        gbc.setState(0x3f1a, 0x8de3, 0x53d0, 0x725f, 0x573b, 0xb7ab, 0x1, 0x1);
        gbc.writeMem(0x3f1a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x8de3);
        EXPECT(gbc.pc(), 0x3f1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01DD
        gbc.setState(0xad04, 0xc4d7, 0xc1d0, 0x3dc0, 0x6f3d, 0xdef1, 0x0, 0x1);
        gbc.writeMem(0xad04, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc4d7);
        EXPECT(gbc.pc(), 0xad06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad04), 0xcb);
        EXPECT(gbc.readMem(0xad05), 0x23);
        // CB 23 01DE
        gbc.setState(0x7fc2, 0xdbf7, 0xe860, 0xc317, 0xa859, 0xd91f, 0x1, 0x0);
        gbc.writeMem(0x7fc2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdbf7);
        EXPECT(gbc.pc(), 0x7fc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01DF
        gbc.setState(0x412c, 0xa2af, 0x61b0, 0xa398, 0xa93f, 0x1006, 0x0, 0x1);
        gbc.writeMem(0x412c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa2af);
        EXPECT(gbc.pc(), 0x412e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01E0
        gbc.setState(0xaea8, 0x7c2d, 0xd5f0, 0x4729, 0xf393, 0x4574, 0x0, 0x0);
        gbc.writeMem(0xaea8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x7c2d);
        EXPECT(gbc.pc(), 0xaeaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaea8), 0xcb);
        EXPECT(gbc.readMem(0xaea9), 0x23);
        // CB 23 01E1
        gbc.setState(0x86d4, 0x9adc, 0xefe0, 0x537e, 0xf720, 0x97bb, 0x0, 0x0);
        gbc.writeMem(0x86d4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x9adc);
        EXPECT(gbc.pc(), 0x86d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d4), 0xcb);
        EXPECT(gbc.readMem(0x86d5), 0x23);
        // CB 23 01E2
        gbc.setState(0x5252, 0xf3ff, 0xe460, 0x7d2d, 0x1370, 0x2e93, 0x1, 0x0);
        gbc.writeMem(0x5252, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf3ff);
        EXPECT(gbc.pc(), 0x5254);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01E3
        gbc.setState(0x4c78, 0x7a18, 0x2840, 0x4b70, 0xe83b, 0xe041, 0x1, 0x1);
        gbc.writeMem(0x4c78, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x7a18);
        EXPECT(gbc.pc(), 0x4c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01E4
        gbc.setState(0x1612, 0xc278, 0xcc20, 0xf32c, 0xfa27, 0xb406, 0x0, 0x0);
        gbc.writeMem(0x1612, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc278);
        EXPECT(gbc.pc(), 0x1614);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01E5
        gbc.setState(0x2236, 0xf147, 0x3800, 0xab97, 0x6d22, 0xd3a0, 0x0, 0x1);
        gbc.writeMem(0x2236, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf147);
        EXPECT(gbc.pc(), 0x2238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01E6
        gbc.setState(0x5d65, 0x320d, 0x5ac0, 0x88da, 0x5f9a, 0x4e3d, 0x0, 0x0);
        gbc.writeMem(0x5d65, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x320d);
        EXPECT(gbc.pc(), 0x5d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01E7
        gbc.setState(0xb70c, 0xe587, 0xd5b0, 0xa8b1, 0xc95b, 0x8b89, 0x1, 0x1);
        gbc.writeMem(0xb70c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe587);
        EXPECT(gbc.pc(), 0xb70e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb70c), 0xcb);
        EXPECT(gbc.readMem(0xb70d), 0x23);
        // CB 23 01E8
        gbc.setState(0xa37e, 0x5e7a, 0x98d0, 0xcfc0, 0xd999, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0xa37e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5e7a);
        EXPECT(gbc.pc(), 0xa380);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa37e), 0xcb);
        EXPECT(gbc.readMem(0xa37f), 0x23);
        // CB 23 01E9
        gbc.setState(0x26e0, 0x4483, 0x1640, 0xbb02, 0x3ef5, 0xc69e, 0x0, 0x1);
        gbc.writeMem(0x26e0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4483);
        EXPECT(gbc.pc(), 0x26e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01EA
        gbc.setState(0xdb3c, 0x9685, 0xf440, 0x8f56, 0x7f31, 0xf07b, 0x1, 0x0);
        gbc.writeMem(0xdb3c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x9685);
        EXPECT(gbc.pc(), 0xdb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3c), 0xcb);
        EXPECT(gbc.readMem(0xdb3d), 0x23);
        // CB 23 01EB
        gbc.setState(0x40a5, 0x4f90, 0x79f0, 0xc9a6, 0xb9e7, 0x1a36, 0x1, 0x0);
        gbc.writeMem(0x40a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x4f90);
        EXPECT(gbc.pc(), 0x40a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01EC
        gbc.setState(0x4392, 0xbd56, 0xd30, 0x8967, 0xeb51, 0xe2f7, 0x1, 0x1);
        gbc.writeMem(0x4392, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xbd56);
        EXPECT(gbc.pc(), 0x4394);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01ED
        gbc.setState(0x3804, 0xb620, 0xe6f0, 0x534c, 0xa2c8, 0xa185, 0x1, 0x1);
        gbc.writeMem(0x3804, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xb620);
        EXPECT(gbc.pc(), 0x3806);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01EE
        gbc.setState(0xde08, 0xe686, 0xb2b0, 0xff57, 0xbc14, 0xea53, 0x0, 0x1);
        gbc.writeMem(0xde08, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe686);
        EXPECT(gbc.pc(), 0xde0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde08), 0xcb);
        EXPECT(gbc.readMem(0xde09), 0x23);
        // CB 23 01EF
        gbc.setState(0x9cf9, 0x311e, 0xdd0, 0x2622, 0xcce7, 0x8ad8, 0x1, 0x1);
        gbc.writeMem(0x9cf9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x311e);
        EXPECT(gbc.pc(), 0x9cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf9), 0xcb);
        EXPECT(gbc.readMem(0x9cfa), 0x23);
        // CB 23 01F0
        gbc.setState(0xb621, 0xf253, 0xef20, 0xb135, 0x74da, 0x817a, 0x1, 0x0);
        gbc.writeMem(0xb621, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xf253);
        EXPECT(gbc.pc(), 0xb623);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb621), 0xcb);
        EXPECT(gbc.readMem(0xb622), 0x23);
        // CB 23 01F2
        gbc.setState(0x399b, 0xbd97, 0xfa10, 0x6628, 0x6fb8, 0xd616, 0x0, 0x0);
        gbc.writeMem(0x399b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xbd97);
        EXPECT(gbc.pc(), 0x399d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 01F3
        gbc.setState(0x7f0a, 0x3467, 0x7400, 0xc2c5, 0x4004, 0x61a8, 0x1, 0x0);
        gbc.writeMem(0x7f0a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3467);
        EXPECT(gbc.pc(), 0x7f0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01F4
        gbc.setState(0xca9a, 0x46c1, 0x2ba0, 0xe9c9, 0x1bfd, 0xbbd9, 0x1, 0x1);
        gbc.writeMem(0xca9a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x46c1);
        EXPECT(gbc.pc(), 0xca9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9a), 0xcb);
        EXPECT(gbc.readMem(0xca9b), 0x23);
        // CB 23 01F5
        gbc.setState(0x9843, 0x417e, 0x6390, 0xcbd0, 0xa491, 0xc1f7, 0x1, 0x1);
        gbc.writeMem(0x9843, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x417e);
        EXPECT(gbc.pc(), 0x9845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9843), 0xcb);
        EXPECT(gbc.readMem(0x9844), 0x23);
        // CB 23 01F6
        gbc.setState(0x56bf, 0x4b1d, 0x1c70, 0xa502, 0x9630, 0xb9db, 0x1, 0x1);
        gbc.writeMem(0x56bf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x4b1d);
        EXPECT(gbc.pc(), 0x56c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01F7
        gbc.setState(0x963, 0xc665, 0x2b30, 0xf39e, 0x494a, 0x58a, 0x0, 0x1);
        gbc.writeMem(0x963, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0x965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01F8
        gbc.setState(0x6c8d, 0xf1b2, 0x2060, 0x43f8, 0x906d, 0xc09f, 0x0, 0x1);
        gbc.writeMem(0x6c8d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf1b2);
        EXPECT(gbc.pc(), 0x6c8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01F9
        gbc.setState(0xbf1f, 0x61ad, 0xb970, 0xd873, 0x109d, 0xecbc, 0x0, 0x1);
        gbc.writeMem(0xbf1f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x61ad);
        EXPECT(gbc.pc(), 0xbf21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf1f), 0xcb);
        EXPECT(gbc.readMem(0xbf20), 0x23);
        // CB 23 01FA
        gbc.setState(0x5fdb, 0xbae9, 0xa670, 0x5c02, 0x9d59, 0xe166, 0x1, 0x0);
        gbc.writeMem(0x5fdb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbae9);
        EXPECT(gbc.pc(), 0x5fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01FB
        gbc.setState(0x29c2, 0xfa35, 0x60f0, 0xdc8d, 0xe858, 0x4081, 0x0, 0x0);
        gbc.writeMem(0x29c2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfa35);
        EXPECT(gbc.pc(), 0x29c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 01FC
        gbc.setState(0x8b10, 0xe137, 0xc0c0, 0x44dc, 0x71aa, 0x658e, 0x1, 0x0);
        gbc.writeMem(0x8b10, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xe137);
        EXPECT(gbc.pc(), 0x8b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b10), 0xcb);
        EXPECT(gbc.readMem(0x8b11), 0x23);
        // CB 23 01FD
        gbc.setState(0x922f, 0x6f17, 0x9960, 0x2b72, 0x320d, 0xe35e, 0x0, 0x0);
        gbc.writeMem(0x922f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6f17);
        EXPECT(gbc.pc(), 0x9231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x922f), 0xcb);
        EXPECT(gbc.readMem(0x9230), 0x23);
        // CB 23 01FE
        gbc.setState(0x15b6, 0x129c, 0x680, 0xb695, 0xd946, 0xd23d, 0x0, 0x0);
        gbc.writeMem(0x15b6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x129c);
        EXPECT(gbc.pc(), 0x15b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0200
        gbc.setState(0xe05d, 0x53cb, 0xfae0, 0x626c, 0x4027, 0x493f, 0x1, 0x1);
        gbc.writeMem(0xe05d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x53cb);
        EXPECT(gbc.pc(), 0xe05f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe05d), 0xcb);
        EXPECT(gbc.readMem(0xe05e), 0x23);
        // CB 23 0201
        gbc.setState(0x7d68, 0xc32b, 0xc080, 0x23f7, 0xde93, 0x53e9, 0x1, 0x1);
        gbc.writeMem(0x7d68, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xc32b);
        EXPECT(gbc.pc(), 0x7d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0202
        gbc.setState(0x7404, 0xd5d6, 0xfde0, 0x288f, 0x8bf2, 0x7344, 0x1, 0x0);
        gbc.writeMem(0x7404, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd5d6);
        EXPECT(gbc.pc(), 0x7406);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0204
        gbc.setState(0x13d7, 0xf2fe, 0xa0e0, 0x4a52, 0x959, 0x7719, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf2fe);
        EXPECT(gbc.pc(), 0x13d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0205
        gbc.setState(0x49fb, 0xd7d3, 0xf6d0, 0x6b0a, 0xef, 0xbb91, 0x0, 0x1);
        gbc.writeMem(0x49fb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xd7d3);
        EXPECT(gbc.pc(), 0x49fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0206
        gbc.setState(0x54a5, 0x94fe, 0xb3b0, 0x2913, 0xb1c7, 0xc76b, 0x1, 0x0);
        gbc.writeMem(0x54a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x94fe);
        EXPECT(gbc.pc(), 0x54a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0207
        gbc.setState(0x5681, 0x4ce8, 0xe40, 0x26, 0xbdbb, 0x886a, 0x1, 0x1);
        gbc.writeMem(0x5681, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0x5683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0208
        gbc.setState(0x850c, 0x8ba2, 0x6010, 0x8cc, 0x51ae, 0x391, 0x1, 0x0);
        gbc.writeMem(0x850c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x8ba2);
        EXPECT(gbc.pc(), 0x850e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850c), 0xcb);
        EXPECT(gbc.readMem(0x850d), 0x23);
        // CB 23 0209
        gbc.setState(0x2561, 0x2a22, 0xfc30, 0xc2c6, 0xe91e, 0x996, 0x1, 0x1);
        gbc.writeMem(0x2561, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x2a22);
        EXPECT(gbc.pc(), 0x2563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 020A
        gbc.setState(0x439e, 0x983d, 0x9760, 0xa5e, 0xad7b, 0x1a14, 0x0, 0x0);
        gbc.writeMem(0x439e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x983d);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 020B
        gbc.setState(0xc4de, 0xe7aa, 0xcec0, 0x83d7, 0xba46, 0x2064, 0x0, 0x0);
        gbc.writeMem(0xc4de, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe7aa);
        EXPECT(gbc.pc(), 0xc4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4de), 0xcb);
        EXPECT(gbc.readMem(0xc4df), 0x23);
        // CB 23 020C
        gbc.setState(0x1ade, 0x9ad1, 0x7f50, 0xf94b, 0xb96c, 0x2f38, 0x1, 0x1);
        gbc.writeMem(0x1ade, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x9ad1);
        EXPECT(gbc.pc(), 0x1ae0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 020D
        gbc.setState(0x8adc, 0xf1e8, 0x9fe0, 0x44df, 0xc910, 0xcf38, 0x0, 0x0);
        gbc.writeMem(0x8adc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf1e8);
        EXPECT(gbc.pc(), 0x8ade);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8adc), 0xcb);
        EXPECT(gbc.readMem(0x8add), 0x23);
        // CB 23 020E
        gbc.setState(0x2192, 0x56db, 0xb0d0, 0x737a, 0x508f, 0xc0be, 0x0, 0x0);
        gbc.writeMem(0x2192, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x56db);
        EXPECT(gbc.pc(), 0x2194);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 020F
        gbc.setState(0xa67c, 0xbe20, 0xbea0, 0xe55d, 0xc39c, 0x7b2c, 0x1, 0x1);
        gbc.writeMem(0xa67c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbe20);
        EXPECT(gbc.pc(), 0xa67e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67c), 0xcb);
        EXPECT(gbc.readMem(0xa67d), 0x23);
        // CB 23 0210
        gbc.setState(0xceb4, 0x9a70, 0xe140, 0x203f, 0x8ff1, 0xdc45, 0x1, 0x1);
        gbc.writeMem(0xceb4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x9a70);
        EXPECT(gbc.pc(), 0xceb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb4), 0xcb);
        EXPECT(gbc.readMem(0xceb5), 0x23);
        // CB 23 0211
        gbc.setState(0x2626, 0x569e, 0x9f0, 0x345, 0xbd1d, 0xd6e9, 0x1, 0x0);
        gbc.writeMem(0x2626, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0x2628);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0212
        gbc.setState(0xb973, 0xc135, 0xaf60, 0x6791, 0x600f, 0xf939, 0x0, 0x0);
        gbc.writeMem(0xb973, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xc135);
        EXPECT(gbc.pc(), 0xb975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb973), 0xcb);
        EXPECT(gbc.readMem(0xb974), 0x23);
        // CB 23 0213
        gbc.setState(0x2e47, 0xa7e3, 0x71d0, 0x9f9, 0xa141, 0xd38f, 0x1, 0x1);
        gbc.writeMem(0x2e47, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa7e3);
        EXPECT(gbc.pc(), 0x2e49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0214
        gbc.setState(0xe1df, 0x20bc, 0x61b0, 0x1f9e, 0x7a7e, 0x419f, 0x0, 0x0);
        gbc.writeMem(0xe1df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0xe1e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1df), 0xcb);
        EXPECT(gbc.readMem(0xe1e0), 0x23);
        // CB 23 0215
        gbc.setState(0xa871, 0x92c5, 0x55a0, 0xd474, 0x58d3, 0xd61b, 0x1, 0x0);
        gbc.writeMem(0xa871, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x92c5);
        EXPECT(gbc.pc(), 0xa873);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa871), 0xcb);
        EXPECT(gbc.readMem(0xa872), 0x23);
        // CB 23 0216
        gbc.setState(0x1597, 0x6d67, 0x120, 0x2836, 0x2df4, 0xa771, 0x1, 0x1);
        gbc.writeMem(0x1597, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6d67);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0217
        gbc.setState(0xd813, 0xcbe5, 0x2090, 0xc252, 0x96d3, 0x36a, 0x1, 0x1);
        gbc.writeMem(0xd813, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xcbe5);
        EXPECT(gbc.pc(), 0xd815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd813), 0xcb);
        EXPECT(gbc.readMem(0xd814), 0x23);
        // CB 23 0218
        gbc.setState(0x770b, 0xab51, 0x5220, 0x13f0, 0x9263, 0xc0f5, 0x1, 0x0);
        gbc.writeMem(0x770b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xab51);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0219
        gbc.setState(0x80a5, 0x74a9, 0xd3e0, 0x2725, 0x76b, 0x876c, 0x0, 0x0);
        gbc.writeMem(0x80a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x74a9);
        EXPECT(gbc.pc(), 0x80a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80a5), 0xcb);
        EXPECT(gbc.readMem(0x80a6), 0x23);
        // CB 23 021A
        gbc.setState(0xade6, 0x4a46, 0x5390, 0x5055, 0xb464, 0x3b86, 0x1, 0x0);
        gbc.writeMem(0xade6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4a46);
        EXPECT(gbc.pc(), 0xade8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xade6), 0xcb);
        EXPECT(gbc.readMem(0xade7), 0x23);
        // CB 23 021B
        gbc.setState(0xb436, 0x5a82, 0xfef0, 0x4fbc, 0xe315, 0xe928, 0x0, 0x1);
        gbc.writeMem(0xb436, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5a82);
        EXPECT(gbc.pc(), 0xb438);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb436), 0xcb);
        EXPECT(gbc.readMem(0xb437), 0x23);
        // CB 23 021C
        gbc.setState(0xb1c, 0x9d1a, 0x26c0, 0x80c9, 0x460d, 0xd3d2, 0x1, 0x1);
        gbc.writeMem(0xb1c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x9d1a);
        EXPECT(gbc.pc(), 0xb1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 021D
        gbc.setState(0x77e2, 0xfaf5, 0xd610, 0x2752, 0xe0a3, 0x3062, 0x1, 0x1);
        gbc.writeMem(0x77e2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xfaf5);
        EXPECT(gbc.pc(), 0x77e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 021E
        gbc.setState(0x63a7, 0x859d, 0x2940, 0xa886, 0x57a4, 0xabb9, 0x1, 0x0);
        gbc.writeMem(0x63a7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x859d);
        EXPECT(gbc.pc(), 0x63a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 021F
        gbc.setState(0xc0c6, 0x73bc, 0xa8a0, 0x1117, 0xf58a, 0x62f6, 0x0, 0x0);
        gbc.writeMem(0xc0c6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x73bc);
        EXPECT(gbc.pc(), 0xc0c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c6), 0xcb);
        EXPECT(gbc.readMem(0xc0c7), 0x23);
        // CB 23 0220
        gbc.setState(0x9489, 0x5bbb, 0xac90, 0x3020, 0xfbc2, 0x99d9, 0x0, 0x1);
        gbc.writeMem(0x9489, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x5bbb);
        EXPECT(gbc.pc(), 0x948b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9489), 0xcb);
        EXPECT(gbc.readMem(0x948a), 0x23);
        // CB 23 0221
        gbc.setState(0x5971, 0xffd6, 0xf50, 0xe24e, 0x1fb3, 0x2fec, 0x0, 0x0);
        gbc.writeMem(0x5971, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xffd6);
        EXPECT(gbc.pc(), 0x5973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0222
        gbc.setState(0xc8d6, 0xd874, 0xd50, 0xc871, 0xc351, 0xdebe, 0x0, 0x0);
        gbc.writeMem(0xc8d6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xd874);
        EXPECT(gbc.pc(), 0xc8d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8d6), 0xcb);
        EXPECT(gbc.readMem(0xc8d7), 0x23);
        // CB 23 0223
        gbc.setState(0x3257, 0x4313, 0x4580, 0x9405, 0x20, 0xf4d2, 0x1, 0x0);
        gbc.writeMem(0x3257, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4313);
        EXPECT(gbc.pc(), 0x3259);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0224
        gbc.setState(0xaa53, 0x3bc, 0x24b0, 0x76ab, 0x2a3, 0xb88d, 0x1, 0x0);
        gbc.writeMem(0xaa53, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3bc);
        EXPECT(gbc.pc(), 0xaa55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa53), 0xcb);
        EXPECT(gbc.readMem(0xaa54), 0x23);
        // CB 23 0225
        gbc.setState(0xa5a, 0x2251, 0xf700, 0x1a88, 0x69e9, 0x13d7, 0x0, 0x0);
        gbc.writeMem(0xa5a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x2251);
        EXPECT(gbc.pc(), 0xa5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0226
        gbc.setState(0x1f45, 0xd158, 0x7ed0, 0xab20, 0x38df, 0x2079, 0x0, 0x1);
        gbc.writeMem(0x1f45, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd158);
        EXPECT(gbc.pc(), 0x1f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0227
        gbc.setState(0xe9b9, 0x8ec, 0x14a0, 0x8d68, 0xc8ab, 0xc9f6, 0x1, 0x1);
        gbc.writeMem(0xe9b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8ec);
        EXPECT(gbc.pc(), 0xe9bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9b9), 0xcb);
        EXPECT(gbc.readMem(0xe9ba), 0x23);
        // CB 23 0228
        gbc.setState(0xead2, 0xfd8f, 0xfb20, 0x48b5, 0x8f64, 0x92c2, 0x1, 0x1);
        gbc.writeMem(0xead2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfd8f);
        EXPECT(gbc.pc(), 0xead4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead2), 0xcb);
        EXPECT(gbc.readMem(0xead3), 0x23);
        // CB 23 0229
        gbc.setState(0x17dc, 0x7e56, 0x5060, 0xbfe3, 0x8389, 0xefd8, 0x0, 0x0);
        gbc.writeMem(0x17dc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7e56);
        EXPECT(gbc.pc(), 0x17de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 022A
        gbc.setState(0xd6ef, 0x2121, 0x6010, 0x66d0, 0x447f, 0xb7b9, 0x0, 0x0);
        gbc.writeMem(0xd6ef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x23);
        // CB 23 022B
        gbc.setState(0x867f, 0x4a93, 0x9940, 0xa9f, 0x73cb, 0xd096, 0x1, 0x0);
        gbc.writeMem(0x867f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4a93);
        EXPECT(gbc.pc(), 0x8681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x867f), 0xcb);
        EXPECT(gbc.readMem(0x8680), 0x23);
        // CB 23 022D
        gbc.setState(0x233a, 0xc54f, 0x5410, 0xf2ea, 0xde44, 0x5f4a, 0x1, 0x0);
        gbc.writeMem(0x233a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc54f);
        EXPECT(gbc.pc(), 0x233c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 022E
        gbc.setState(0xbfae, 0x2aef, 0x3bd0, 0x28f9, 0x8653, 0x5193, 0x0, 0x1);
        gbc.writeMem(0xbfae, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2aef);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfae), 0xcb);
        EXPECT(gbc.readMem(0xbfaf), 0x23);
        // CB 23 022F
        gbc.setState(0xcf12, 0x26e0, 0x6010, 0xf5e5, 0xc19, 0xa239, 0x1, 0x1);
        gbc.writeMem(0xcf12, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x26e0);
        EXPECT(gbc.pc(), 0xcf14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf12), 0xcb);
        EXPECT(gbc.readMem(0xcf13), 0x23);
        // CB 23 0230
        gbc.setState(0x9597, 0x995c, 0x3220, 0x85f9, 0xa012, 0x108, 0x1, 0x0);
        gbc.writeMem(0x9597, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0x9599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9597), 0xcb);
        EXPECT(gbc.readMem(0x9598), 0x23);
        // CB 23 0231
        gbc.setState(0x8045, 0xae55, 0xc1a0, 0x4986, 0x451a, 0xe0ab, 0x1, 0x1);
        gbc.writeMem(0x8045, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xae55);
        EXPECT(gbc.pc(), 0x8047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8045), 0xcb);
        EXPECT(gbc.readMem(0x8046), 0x23);
        // CB 23 0232
        gbc.setState(0xd6ef, 0x7152, 0xb980, 0x81af, 0xb7aa, 0xbafc, 0x1, 0x1);
        gbc.writeMem(0xd6ef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7152);
        EXPECT(gbc.pc(), 0xd6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ef), 0xcb);
        EXPECT(gbc.readMem(0xd6f0), 0x23);
        // CB 23 0233
        gbc.setState(0xeeec, 0x49c2, 0x6bb0, 0xc3ad, 0x2b4c, 0xddf5, 0x1, 0x1);
        gbc.writeMem(0xeeec, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x49c2);
        EXPECT(gbc.pc(), 0xeeee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeec), 0xcb);
        EXPECT(gbc.readMem(0xeeed), 0x23);
        // CB 23 0234
        gbc.setState(0x9204, 0x2639, 0x5bc0, 0x5ad7, 0x9896, 0x458f, 0x1, 0x0);
        gbc.writeMem(0x9204, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2639);
        EXPECT(gbc.pc(), 0x9206);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9204), 0xcb);
        EXPECT(gbc.readMem(0x9205), 0x23);
        // CB 23 0235
        gbc.setState(0xe7e9, 0xf7d5, 0x7f80, 0xcc34, 0x1c73, 0x6521, 0x0, 0x0);
        gbc.writeMem(0xe7e9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf7d5);
        EXPECT(gbc.pc(), 0xe7eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7e9), 0xcb);
        EXPECT(gbc.readMem(0xe7ea), 0x23);
        // CB 23 0236
        gbc.setState(0xb912, 0xe9b0, 0x8310, 0xb748, 0xf42, 0x7888, 0x0, 0x1);
        gbc.writeMem(0xb912, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0xb914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb912), 0xcb);
        EXPECT(gbc.readMem(0xb913), 0x23);
        // CB 23 0237
        gbc.setState(0xe2b5, 0x17ce, 0x7810, 0xf7aa, 0x6e6f, 0xd28f, 0x1, 0x1);
        gbc.writeMem(0xe2b5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x17ce);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2b5), 0xcb);
        EXPECT(gbc.readMem(0xe2b6), 0x23);
        // CB 23 0238
        gbc.setState(0x69e9, 0x6618, 0x7ee0, 0xe824, 0x4c70, 0xe935, 0x0, 0x1);
        gbc.writeMem(0x69e9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6618);
        EXPECT(gbc.pc(), 0x69eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 023A
        gbc.setState(0x9a12, 0xfc56, 0xa450, 0x9d38, 0xd0e0, 0xa75a, 0x1, 0x0);
        gbc.writeMem(0x9a12, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfc56);
        EXPECT(gbc.pc(), 0x9a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a12), 0xcb);
        EXPECT(gbc.readMem(0x9a13), 0x23);
        // CB 23 023B
        gbc.setState(0x1a26, 0xa532, 0x44f0, 0x9308, 0x41da, 0x7fc9, 0x0, 0x0);
        gbc.writeMem(0x1a26, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa532);
        EXPECT(gbc.pc(), 0x1a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 023C
        gbc.setState(0x30a0, 0xd17f, 0x8890, 0x7c0f, 0x71a1, 0xc23, 0x1, 0x1);
        gbc.writeMem(0x30a0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd17f);
        EXPECT(gbc.pc(), 0x30a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 023D
        gbc.setState(0xe5e3, 0x4ffd, 0xa120, 0x3bd6, 0x9672, 0x5814, 0x0, 0x0);
        gbc.writeMem(0xe5e3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4ffd);
        EXPECT(gbc.pc(), 0xe5e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5e3), 0xcb);
        EXPECT(gbc.readMem(0xe5e4), 0x23);
        // CB 23 023F
        gbc.setState(0x36ad, 0x17, 0x12d0, 0x65b2, 0xa2ab, 0xfbca, 0x0, 0x1);
        gbc.writeMem(0x36ad, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x17);
        EXPECT(gbc.pc(), 0x36af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0240
        gbc.setState(0xabe8, 0x6874, 0xb440, 0xcc72, 0x29, 0x5ca4, 0x0, 0x1);
        gbc.writeMem(0xabe8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6874);
        EXPECT(gbc.pc(), 0xabea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe8), 0xcb);
        EXPECT(gbc.readMem(0xabe9), 0x23);
        // CB 23 0241
        gbc.setState(0x8947, 0xf79a, 0x8aa0, 0x26cc, 0x6c75, 0x9906, 0x0, 0x1);
        gbc.writeMem(0x8947, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xf79a);
        EXPECT(gbc.pc(), 0x8949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8947), 0xcb);
        EXPECT(gbc.readMem(0x8948), 0x23);
        // CB 23 0242
        gbc.setState(0x6a21, 0xa69a, 0xd6f0, 0xaba9, 0xc1b7, 0xd816, 0x0, 0x0);
        gbc.writeMem(0x6a21, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xa69a);
        EXPECT(gbc.pc(), 0x6a23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0243
        gbc.setState(0x6214, 0x14d0, 0x33d0, 0x61b5, 0x47e7, 0x8ffc, 0x1, 0x1);
        gbc.writeMem(0x6214, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x14d0);
        EXPECT(gbc.pc(), 0x6216);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0244
        gbc.setState(0x6015, 0xf9eb, 0x8430, 0xbd63, 0xc3fa, 0xc2ae, 0x0, 0x0);
        gbc.writeMem(0x6015, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf9eb);
        EXPECT(gbc.pc(), 0x6017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0245
        gbc.setState(0x4050, 0xdd49, 0x2fd0, 0xa345, 0x4fc, 0x6190, 0x1, 0x0);
        gbc.writeMem(0x4050, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xdd49);
        EXPECT(gbc.pc(), 0x4052);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0246
        gbc.setState(0xd928, 0x7702, 0xea90, 0x71a2, 0x5fb, 0x6385, 0x1, 0x1);
        gbc.writeMem(0xd928, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7702);
        EXPECT(gbc.pc(), 0xd92a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd928), 0xcb);
        EXPECT(gbc.readMem(0xd929), 0x23);
        // CB 23 0247
        gbc.setState(0x3c20, 0xb1b6, 0x92c0, 0x5706, 0xe0c6, 0xcd9d, 0x0, 0x0);
        gbc.writeMem(0x3c20, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb1b6);
        EXPECT(gbc.pc(), 0x3c22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0248
        gbc.setState(0x393b, 0xf144, 0x9f20, 0x67d3, 0xb85f, 0xdef8, 0x0, 0x0);
        gbc.writeMem(0x393b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf144);
        EXPECT(gbc.pc(), 0x393d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0249
        gbc.setState(0x5aa1, 0x8454, 0x62b0, 0xfa35, 0x3baa, 0xd7e9, 0x1, 0x0);
        gbc.writeMem(0x5aa1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8454);
        EXPECT(gbc.pc(), 0x5aa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 024A
        gbc.setState(0x57f5, 0x6d81, 0x5d30, 0x8b39, 0x8e50, 0x167e, 0x1, 0x1);
        gbc.writeMem(0x57f5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6d81);
        EXPECT(gbc.pc(), 0x57f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 024B
        gbc.setState(0x151c, 0x8016, 0x2a10, 0x7c81, 0x5b94, 0x344b, 0x0, 0x1);
        gbc.writeMem(0x151c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8016);
        EXPECT(gbc.pc(), 0x151e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 024C
        gbc.setState(0x388e, 0x5b4d, 0xe460, 0x2843, 0x8f1d, 0x39b2, 0x1, 0x1);
        gbc.writeMem(0x388e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5b4d);
        EXPECT(gbc.pc(), 0x3890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 024D
        gbc.setState(0x1cf6, 0xdf4f, 0x53f0, 0x2464, 0x3fbb, 0x35, 0x1, 0x0);
        gbc.writeMem(0x1cf6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xdf4f);
        EXPECT(gbc.pc(), 0x1cf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 024E
        gbc.setState(0x5174, 0x153f, 0xac20, 0x1c7a, 0xef00, 0xb81e, 0x1, 0x0);
        gbc.writeMem(0x5174, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x153f);
        EXPECT(gbc.pc(), 0x5176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 024F
        gbc.setState(0xe2a3, 0xc38c, 0x6f20, 0xd456, 0xe0a4, 0x238f, 0x1, 0x0);
        gbc.writeMem(0xe2a3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc38c);
        EXPECT(gbc.pc(), 0xe2a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2a3), 0xcb);
        EXPECT(gbc.readMem(0xe2a4), 0x23);
        // CB 23 0250
        gbc.setState(0x7be0, 0xd2ef, 0xef20, 0xdcce, 0xf606, 0xd0fe, 0x1, 0x0);
        gbc.writeMem(0x7be0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd2ef);
        EXPECT(gbc.pc(), 0x7be2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0251
        gbc.setState(0x2087, 0x753e, 0x3c80, 0xdfa, 0xaa5a, 0x32c8, 0x1, 0x0);
        gbc.writeMem(0x2087, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x753e);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0252
        gbc.setState(0xb3c4, 0x1c74, 0x46f0, 0x4be, 0xc7fe, 0x4278, 0x1, 0x1);
        gbc.writeMem(0xb3c4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x1c74);
        EXPECT(gbc.pc(), 0xb3c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3c4), 0xcb);
        EXPECT(gbc.readMem(0xb3c5), 0x23);
        // CB 23 0253
        gbc.setState(0x7042, 0xc091, 0xa0c0, 0x8caf, 0xb1c7, 0x7a58, 0x0, 0x0);
        gbc.writeMem(0x7042, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc091);
        EXPECT(gbc.pc(), 0x7044);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0255
        gbc.setState(0xd5c, 0x30d0, 0x3be0, 0xdff2, 0x6e7e, 0x9cea, 0x1, 0x0);
        gbc.writeMem(0xd5c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0xd5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0256
        gbc.setState(0xde51, 0xc11f, 0x1380, 0x4a19, 0x237d, 0x75bc, 0x1, 0x0);
        gbc.writeMem(0xde51, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc11f);
        EXPECT(gbc.pc(), 0xde53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde51), 0xcb);
        EXPECT(gbc.readMem(0xde52), 0x23);
        // CB 23 0257
        gbc.setState(0x7c82, 0x803d, 0x5860, 0x3480, 0xa04b, 0xe1a8, 0x0, 0x1);
        gbc.writeMem(0x7c82, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x803d);
        EXPECT(gbc.pc(), 0x7c84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0258
        gbc.setState(0x6d75, 0xd367, 0x8cb0, 0xd660, 0x2dab, 0x6501, 0x1, 0x1);
        gbc.writeMem(0x6d75, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x6d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0259
        gbc.setState(0x42e, 0x6afa, 0xce80, 0xa1ad, 0x320b, 0x9835, 0x0, 0x0);
        gbc.writeMem(0x42e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6afa);
        EXPECT(gbc.pc(), 0x430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 025A
        gbc.setState(0x1abe, 0xd64c, 0x9590, 0x6ff8, 0x7b54, 0x752a, 0x0, 0x1);
        gbc.writeMem(0x1abe, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd64c);
        EXPECT(gbc.pc(), 0x1ac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 025B
        gbc.setState(0xd315, 0xcf4c, 0x7b0, 0x6024, 0x594c, 0x54a6, 0x1, 0x0);
        gbc.writeMem(0xd315, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcf4c);
        EXPECT(gbc.pc(), 0xd317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd315), 0xcb);
        EXPECT(gbc.readMem(0xd316), 0x23);
        // CB 23 025C
        gbc.setState(0xc721, 0xfb38, 0xd8e0, 0x40e4, 0x377a, 0x9a8d, 0x1, 0x1);
        gbc.writeMem(0xc721, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xfb38);
        EXPECT(gbc.pc(), 0xc723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc721), 0xcb);
        EXPECT(gbc.readMem(0xc722), 0x23);
        // CB 23 025D
        gbc.setState(0x8ac3, 0x4a06, 0x98d0, 0xe3f8, 0xaa3c, 0xe65, 0x0, 0x0);
        gbc.writeMem(0x8ac3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4a06);
        EXPECT(gbc.pc(), 0x8ac5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ac3), 0xcb);
        EXPECT(gbc.readMem(0x8ac4), 0x23);
        // CB 23 025E
        gbc.setState(0xb4b0, 0x4476, 0x7fc0, 0xd051, 0xf305, 0x68f7, 0x0, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4476);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x23);
        // CB 23 025F
        gbc.setState(0xac29, 0x372f, 0x6c60, 0x6d43, 0xe47c, 0x5809, 0x0, 0x0);
        gbc.writeMem(0xac29, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x372f);
        EXPECT(gbc.pc(), 0xac2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac29), 0xcb);
        EXPECT(gbc.readMem(0xac2a), 0x23);
        // CB 23 0260
        gbc.setState(0x4745, 0x36ab, 0x5c70, 0xfbd6, 0x90e1, 0xf127, 0x1, 0x0);
        gbc.writeMem(0x4745, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x36ab);
        EXPECT(gbc.pc(), 0x4747);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0261
        gbc.setState(0xbc5f, 0xe01b, 0x3b30, 0xd31e, 0x4e4a, 0x8c8c, 0x1, 0x1);
        gbc.writeMem(0xbc5f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe01b);
        EXPECT(gbc.pc(), 0xbc61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc5f), 0xcb);
        EXPECT(gbc.readMem(0xbc60), 0x23);
        // CB 23 0262
        gbc.setState(0x2420, 0x97f0, 0x2de0, 0xf34f, 0xac3e, 0x413c, 0x1, 0x0);
        gbc.writeMem(0x2420, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x97f0);
        EXPECT(gbc.pc(), 0x2422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0263
        gbc.setState(0x84de, 0x2977, 0x6770, 0xf6c2, 0xaa89, 0x4e2a, 0x1, 0x0);
        gbc.writeMem(0x84de, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2977);
        EXPECT(gbc.pc(), 0x84e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84de), 0xcb);
        EXPECT(gbc.readMem(0x84df), 0x23);
        // CB 23 0264
        gbc.setState(0x2925, 0xa1c, 0x89f0, 0x4e3a, 0x8f8d, 0xc79, 0x1, 0x1);
        gbc.writeMem(0x2925, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa1c);
        EXPECT(gbc.pc(), 0x2927);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0265
        gbc.setState(0xc69e, 0x4d6e, 0x6060, 0x2c5e, 0x40e7, 0x5c01, 0x0, 0x0);
        gbc.writeMem(0xc69e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4d6e);
        EXPECT(gbc.pc(), 0xc6a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc69e), 0xcb);
        EXPECT(gbc.readMem(0xc69f), 0x23);
        // CB 23 0266
        gbc.setState(0x3606, 0xa816, 0x4460, 0xb4f5, 0xc234, 0xdc6d, 0x1, 0x1);
        gbc.writeMem(0x3606, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa816);
        EXPECT(gbc.pc(), 0x3608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0267
        gbc.setState(0x537d, 0x524, 0xafe0, 0x43bd, 0x5fd7, 0xa9b4, 0x1, 0x0);
        gbc.writeMem(0x537d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x524);
        EXPECT(gbc.pc(), 0x537f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0268
        gbc.setState(0x106c, 0xf9d5, 0xe180, 0x2b7e, 0x18da, 0xbc3c, 0x1, 0x0);
        gbc.writeMem(0x106c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xf9d5);
        EXPECT(gbc.pc(), 0x106e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0269
        gbc.setState(0x6164, 0x74fc, 0x7920, 0x737b, 0x6e91, 0x9e03, 0x1, 0x0);
        gbc.writeMem(0x6164, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x74fc);
        EXPECT(gbc.pc(), 0x6166);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 026A
        gbc.setState(0xdf82, 0x5d5a, 0xa320, 0x62dd, 0x2d47, 0xd2ff, 0x1, 0x0);
        gbc.writeMem(0xdf82, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5d5a);
        EXPECT(gbc.pc(), 0xdf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf82), 0xcb);
        EXPECT(gbc.readMem(0xdf83), 0x23);
        // CB 23 026B
        gbc.setState(0x78a6, 0x4134, 0xb120, 0x2ecd, 0xbdb3, 0x8000, 0x0, 0x0);
        gbc.writeMem(0x78a6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x4134);
        EXPECT(gbc.pc(), 0x78a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 026D
        gbc.setState(0x8001, 0x29a5, 0x1700, 0x69d1, 0x11f8, 0xc716, 0x0, 0x0);
        gbc.writeMem(0x8001, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x29a5);
        EXPECT(gbc.pc(), 0x8003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8001), 0xcb);
        EXPECT(gbc.readMem(0x8002), 0x23);
        // CB 23 026E
        gbc.setState(0xb1f8, 0x6f2d, 0xaca0, 0x57bc, 0x3629, 0x3fc2, 0x0, 0x0);
        gbc.writeMem(0xb1f8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6f2d);
        EXPECT(gbc.pc(), 0xb1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1f8), 0xcb);
        EXPECT(gbc.readMem(0xb1f9), 0x23);
        // CB 23 026F
        gbc.setState(0x5f94, 0x59b1, 0x49f0, 0xf7f, 0xe51c, 0x389d, 0x1, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x59b1);
        EXPECT(gbc.pc(), 0x5f96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0270
        gbc.setState(0xe776, 0x534, 0xb990, 0x673b, 0x8dd4, 0x7a02, 0x0, 0x0);
        gbc.writeMem(0xe776, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x534);
        EXPECT(gbc.pc(), 0xe778);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe776), 0xcb);
        EXPECT(gbc.readMem(0xe777), 0x23);
        // CB 23 0271
        gbc.setState(0x28ba, 0x48ba, 0x3c70, 0x5a0e, 0xe30c, 0x27db, 0x0, 0x1);
        gbc.writeMem(0x28ba, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0x28bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0272
        gbc.setState(0x6a8e, 0xb411, 0xa690, 0x3e64, 0x9efc, 0x591, 0x0, 0x0);
        gbc.writeMem(0x6a8e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb411);
        EXPECT(gbc.pc(), 0x6a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0273
        gbc.setState(0xa91f, 0x53a3, 0x47a0, 0xa92f, 0x10bb, 0x8837, 0x0, 0x0);
        gbc.writeMem(0xa91f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x53a3);
        EXPECT(gbc.pc(), 0xa921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa91f), 0xcb);
        EXPECT(gbc.readMem(0xa920), 0x23);
        // CB 23 0274
        gbc.setState(0x1530, 0x1f45, 0xe440, 0x9ddf, 0x7c3a, 0xb4f0, 0x1, 0x0);
        gbc.writeMem(0x1530, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x1f45);
        EXPECT(gbc.pc(), 0x1532);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0275
        gbc.setState(0xa45e, 0xf2f0, 0xf180, 0xb6c, 0xaccd, 0xf769, 0x1, 0x0);
        gbc.writeMem(0xa45e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf2f0);
        EXPECT(gbc.pc(), 0xa460);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa45e), 0xcb);
        EXPECT(gbc.readMem(0xa45f), 0x23);
        // CB 23 0277
        gbc.setState(0xef7f, 0xe00, 0x3910, 0x6b95, 0x5aa7, 0xfde4, 0x0, 0x1);
        gbc.writeMem(0xef7f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe00);
        EXPECT(gbc.pc(), 0xef81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7f), 0xcb);
        EXPECT(gbc.readMem(0xef80), 0x23);
        // CB 23 0278
        gbc.setState(0xcf26, 0x296a, 0xf0f0, 0xb697, 0x1df, 0x7743, 0x1, 0x1);
        gbc.writeMem(0xcf26, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x296a);
        EXPECT(gbc.pc(), 0xcf28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf26), 0xcb);
        EXPECT(gbc.readMem(0xcf27), 0x23);
        // CB 23 0279
        gbc.setState(0x4df5, 0xaece, 0x6af0, 0xdfaf, 0xf21, 0x7712, 0x1, 0x0);
        gbc.writeMem(0x4df5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xaece);
        EXPECT(gbc.pc(), 0x4df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 027A
        gbc.setState(0xb4ef, 0x5baf, 0xa20, 0x14fb, 0x3a8b, 0x5a98, 0x1, 0x1);
        gbc.writeMem(0xb4ef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x5baf);
        EXPECT(gbc.pc(), 0xb4f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ef), 0xcb);
        EXPECT(gbc.readMem(0xb4f0), 0x23);
        // CB 23 027B
        gbc.setState(0x9580, 0xce5d, 0xfd20, 0xa5e9, 0xe83, 0xf284, 0x0, 0x0);
        gbc.writeMem(0x9580, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xce5d);
        EXPECT(gbc.pc(), 0x9582);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9580), 0xcb);
        EXPECT(gbc.readMem(0x9581), 0x23);
        // CB 23 027C
        gbc.setState(0x2fc5, 0xc450, 0xc100, 0x3b3b, 0x8619, 0xf22f, 0x0, 0x0);
        gbc.writeMem(0x2fc5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc450);
        EXPECT(gbc.pc(), 0x2fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 027D
        gbc.setState(0x6ad7, 0xbb49, 0x14e0, 0x4b1c, 0xb8bc, 0x1afa, 0x0, 0x0);
        gbc.writeMem(0x6ad7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xbb49);
        EXPECT(gbc.pc(), 0x6ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 027E
        gbc.setState(0x7b41, 0xdfe8, 0x1680, 0x77bc, 0xf282, 0x4e28, 0x0, 0x1);
        gbc.writeMem(0x7b41, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdfe8);
        EXPECT(gbc.pc(), 0x7b43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 027F
        gbc.setState(0xc95a, 0xe40, 0xb750, 0xdab0, 0x7c66, 0xa11d, 0x0, 0x1);
        gbc.writeMem(0xc95a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe40);
        EXPECT(gbc.pc(), 0xc95c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc95a), 0xcb);
        EXPECT(gbc.readMem(0xc95b), 0x23);
        // CB 23 0280
        gbc.setState(0x9738, 0xc761, 0x1a80, 0x45f9, 0xdb4c, 0xbbbd, 0x0, 0x0);
        gbc.writeMem(0x9738, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xc761);
        EXPECT(gbc.pc(), 0x973a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9738), 0xcb);
        EXPECT(gbc.readMem(0x9739), 0x23);
        // CB 23 0281
        gbc.setState(0xcd1, 0x104, 0xbf50, 0x87ff, 0x8dc8, 0x2698, 0x0, 0x0);
        gbc.writeMem(0xcd1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x104);
        EXPECT(gbc.pc(), 0xcd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0282
        gbc.setState(0x402a, 0x124b, 0x5c90, 0xbcda, 0xc6b2, 0x1936, 0x1, 0x0);
        gbc.writeMem(0x402a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x124b);
        EXPECT(gbc.pc(), 0x402c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0283
        gbc.setState(0x91ab, 0xc74c, 0x7400, 0x7944, 0xe488, 0xf9b1, 0x0, 0x1);
        gbc.writeMem(0x91ab, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc74c);
        EXPECT(gbc.pc(), 0x91ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91ab), 0xcb);
        EXPECT(gbc.readMem(0x91ac), 0x23);
        // CB 23 0284
        gbc.setState(0xe207, 0x334f, 0x1250, 0xe0a9, 0x3242, 0xa1f7, 0x1, 0x0);
        gbc.writeMem(0xe207, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x334f);
        EXPECT(gbc.pc(), 0xe209);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe207), 0xcb);
        EXPECT(gbc.readMem(0xe208), 0x23);
        // CB 23 0285
        gbc.setState(0xcd0f, 0x2389, 0xa510, 0xfbe2, 0xd5dc, 0x5528, 0x1, 0x1);
        gbc.writeMem(0xcd0f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x2389);
        EXPECT(gbc.pc(), 0xcd11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd0f), 0xcb);
        EXPECT(gbc.readMem(0xcd10), 0x23);
        // CB 23 0286
        gbc.setState(0xa592, 0x7dc9, 0x5a60, 0xaa42, 0x6661, 0x3510, 0x0, 0x1);
        gbc.writeMem(0xa592, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7dc9);
        EXPECT(gbc.pc(), 0xa594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa592), 0xcb);
        EXPECT(gbc.readMem(0xa593), 0x23);
        // CB 23 0287
        gbc.setState(0xee9e, 0xd779, 0x3600, 0xa1d6, 0x1b19, 0x2eab, 0x1, 0x1);
        gbc.writeMem(0xee9e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd779);
        EXPECT(gbc.pc(), 0xeea0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee9e), 0xcb);
        EXPECT(gbc.readMem(0xee9f), 0x23);
        // CB 23 0288
        gbc.setState(0x62a6, 0x7d85, 0x7350, 0xc819, 0xd734, 0x5335, 0x0, 0x1);
        gbc.writeMem(0x62a6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7d85);
        EXPECT(gbc.pc(), 0x62a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0289
        gbc.setState(0xa10b, 0x5b72, 0x3180, 0xb721, 0xf93d, 0xc3e1, 0x1, 0x1);
        gbc.writeMem(0xa10b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5b72);
        EXPECT(gbc.pc(), 0xa10d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10b), 0xcb);
        EXPECT(gbc.readMem(0xa10c), 0x23);
        // CB 23 028A
        gbc.setState(0xc977, 0xf407, 0xc60, 0x239a, 0x16a, 0x367e, 0x1, 0x1);
        gbc.writeMem(0xc977, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf407);
        EXPECT(gbc.pc(), 0xc979);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc977), 0xcb);
        EXPECT(gbc.readMem(0xc978), 0x23);
        // CB 23 028B
        gbc.setState(0x3644, 0xefe3, 0x5f0, 0x4d33, 0x23ae, 0x43a1, 0x0, 0x1);
        gbc.writeMem(0x3644, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xefe3);
        EXPECT(gbc.pc(), 0x3646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 028C
        gbc.setState(0xb7d3, 0x2a4e, 0x3e70, 0x55b0, 0xac0b, 0x5fe5, 0x1, 0x0);
        gbc.writeMem(0xb7d3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2a4e);
        EXPECT(gbc.pc(), 0xb7d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7d3), 0xcb);
        EXPECT(gbc.readMem(0xb7d4), 0x23);
        // CB 23 028D
        gbc.setState(0x72bb, 0x555c, 0xc470, 0x6d1b, 0xc1f6, 0x4db2, 0x0, 0x0);
        gbc.writeMem(0x72bb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x555c);
        EXPECT(gbc.pc(), 0x72bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 028E
        gbc.setState(0x8367, 0xeef7, 0x7f30, 0x322e, 0x1f24, 0x8de3, 0x1, 0x1);
        gbc.writeMem(0x8367, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeef7);
        EXPECT(gbc.pc(), 0x8369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8367), 0xcb);
        EXPECT(gbc.readMem(0x8368), 0x23);
        // CB 23 028F
        gbc.setState(0x970a, 0x3b66, 0x9460, 0x711b, 0x4f80, 0x76c5, 0x0, 0x1);
        gbc.writeMem(0x970a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3b66);
        EXPECT(gbc.pc(), 0x970c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970a), 0xcb);
        EXPECT(gbc.readMem(0x970b), 0x23);
        // CB 23 0291
        gbc.setState(0x2ed3, 0x91bb, 0xdce0, 0x496b, 0x4ec9, 0xadc5, 0x0, 0x0);
        gbc.writeMem(0x2ed3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x91bb);
        EXPECT(gbc.pc(), 0x2ed5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0292
        gbc.setState(0xdf63, 0xf5f5, 0x79c0, 0x33f3, 0xa4d1, 0xa6ea, 0x1, 0x0);
        gbc.writeMem(0xdf63, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf5f5);
        EXPECT(gbc.pc(), 0xdf65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf63), 0xcb);
        EXPECT(gbc.readMem(0xdf64), 0x23);
        // CB 23 0293
        gbc.setState(0xafaa, 0x4882, 0xb540, 0x161c, 0x96f0, 0x53e4, 0x0, 0x1);
        gbc.writeMem(0xafaa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4882);
        EXPECT(gbc.pc(), 0xafac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafaa), 0xcb);
        EXPECT(gbc.readMem(0xafab), 0x23);
        // CB 23 0294
        gbc.setState(0x2185, 0x8c73, 0x7500, 0x8ccd, 0xbeaf, 0x6a0, 0x1, 0x0);
        gbc.writeMem(0x2185, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x8c73);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0295
        gbc.setState(0x2a81, 0xc745, 0x9800, 0xd9a9, 0xf698, 0x3902, 0x0, 0x1);
        gbc.writeMem(0x2a81, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xc745);
        EXPECT(gbc.pc(), 0x2a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0296
        gbc.setState(0xcf72, 0x50c7, 0x15c0, 0x6556, 0xd52a, 0xb733, 0x0, 0x0);
        gbc.writeMem(0xcf72, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x50c7);
        EXPECT(gbc.pc(), 0xcf74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf72), 0xcb);
        EXPECT(gbc.readMem(0xcf73), 0x23);
        // CB 23 0297
        gbc.setState(0xdabb, 0xf840, 0xfc20, 0x4e8e, 0x6ca9, 0xa29, 0x1, 0x1);
        gbc.writeMem(0xdabb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf840);
        EXPECT(gbc.pc(), 0xdabd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdabb), 0xcb);
        EXPECT(gbc.readMem(0xdabc), 0x23);
        // CB 23 0298
        gbc.setState(0x31c0, 0xf196, 0x6dd0, 0x6bce, 0x84dd, 0x839d, 0x1, 0x1);
        gbc.writeMem(0x31c0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf196);
        EXPECT(gbc.pc(), 0x31c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0299
        gbc.setState(0xbcb0, 0x935d, 0xb690, 0xd0ad, 0x607d, 0xb4c1, 0x0, 0x1);
        gbc.writeMem(0xbcb0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x935d);
        EXPECT(gbc.pc(), 0xbcb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb0), 0xcb);
        EXPECT(gbc.readMem(0xbcb1), 0x23);
        // CB 23 029A
        gbc.setState(0xd885, 0x613f, 0x950, 0xc349, 0xefd4, 0x5d5f, 0x1, 0x1);
        gbc.writeMem(0xd885, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x613f);
        EXPECT(gbc.pc(), 0xd887);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd885), 0xcb);
        EXPECT(gbc.readMem(0xd886), 0x23);
        // CB 23 029B
        gbc.setState(0x4db7, 0xce98, 0xab20, 0x74e2, 0x993b, 0x87f9, 0x0, 0x1);
        gbc.writeMem(0x4db7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xce98);
        EXPECT(gbc.pc(), 0x4db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 029C
        gbc.setState(0xd7d4, 0xc32c, 0x64b0, 0x2133, 0x15d5, 0x6a97, 0x1, 0x0);
        gbc.writeMem(0xd7d4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc32c);
        EXPECT(gbc.pc(), 0xd7d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7d4), 0xcb);
        EXPECT(gbc.readMem(0xd7d5), 0x23);
        // CB 23 029D
        gbc.setState(0x7302, 0x2f7e, 0xe40, 0xc9d8, 0xdf3a, 0x641d, 0x0, 0x1);
        gbc.writeMem(0x7302, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2f7e);
        EXPECT(gbc.pc(), 0x7304);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 029E
        gbc.setState(0xb507, 0x1553, 0x5970, 0x32d, 0x6f82, 0x8ae7, 0x1, 0x1);
        gbc.writeMem(0xb507, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1553);
        EXPECT(gbc.pc(), 0xb509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb507), 0xcb);
        EXPECT(gbc.readMem(0xb508), 0x23);
        // CB 23 029F
        gbc.setState(0x34ac, 0x8150, 0x43a0, 0x258e, 0xb4d0, 0x3dcc, 0x0, 0x0);
        gbc.writeMem(0x34ac, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8150);
        EXPECT(gbc.pc(), 0x34ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02A0
        gbc.setState(0xe9cf, 0x26, 0xac10, 0xe61e, 0x738b, 0x1a7d, 0x1, 0x0);
        gbc.writeMem(0xe9cf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x26);
        EXPECT(gbc.pc(), 0xe9d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9cf), 0xcb);
        EXPECT(gbc.readMem(0xe9d0), 0x23);
        // CB 23 02A1
        gbc.setState(0x2928, 0x5ffa, 0xac10, 0xcc53, 0x13b, 0x3af0, 0x1, 0x1);
        gbc.writeMem(0x2928, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5ffa);
        EXPECT(gbc.pc(), 0x292a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02A2
        gbc.setState(0xa919, 0xdb74, 0x86b0, 0x7ff5, 0x30e7, 0xc20f, 0x1, 0x1);
        gbc.writeMem(0xa919, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xdb74);
        EXPECT(gbc.pc(), 0xa91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa919), 0xcb);
        EXPECT(gbc.readMem(0xa91a), 0x23);
        // CB 23 02A3
        gbc.setState(0xd2be, 0x1e28, 0x9aa0, 0x7113, 0x4fde, 0xacc8, 0x1, 0x1);
        gbc.writeMem(0xd2be, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1e28);
        EXPECT(gbc.pc(), 0xd2c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2be), 0xcb);
        EXPECT(gbc.readMem(0xd2bf), 0x23);
        // CB 23 02A5
        gbc.setState(0x8a11, 0x351e, 0x9170, 0x33e9, 0xffcd, 0x2f36, 0x1, 0x0);
        gbc.writeMem(0x8a11, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x8a13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a11), 0xcb);
        EXPECT(gbc.readMem(0x8a12), 0x23);
        // CB 23 02A6
        gbc.setState(0x747c, 0xac30, 0x8900, 0x262f, 0xb949, 0xcd96, 0x1, 0x1);
        gbc.writeMem(0x747c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xac30);
        EXPECT(gbc.pc(), 0x747e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02A7
        gbc.setState(0xa323, 0xa530, 0xcd20, 0x9dbc, 0x7e6f, 0x317a, 0x0, 0x0);
        gbc.writeMem(0xa323, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa530);
        EXPECT(gbc.pc(), 0xa325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa323), 0xcb);
        EXPECT(gbc.readMem(0xa324), 0x23);
        // CB 23 02A8
        gbc.setState(0xe6a5, 0xa90d, 0x7d20, 0x98a6, 0x127c, 0xb725, 0x0, 0x0);
        gbc.writeMem(0xe6a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xa90d);
        EXPECT(gbc.pc(), 0xe6a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6a5), 0xcb);
        EXPECT(gbc.readMem(0xe6a6), 0x23);
        // CB 23 02A9
        gbc.setState(0x45f9, 0x8cce, 0x4450, 0x276, 0x164b, 0xe3f6, 0x0, 0x0);
        gbc.writeMem(0x45f9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x8cce);
        EXPECT(gbc.pc(), 0x45fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02AA
        gbc.setState(0xda9b, 0xdf93, 0x2190, 0x389f, 0xfe9a, 0xc502, 0x0, 0x0);
        gbc.writeMem(0xda9b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdf93);
        EXPECT(gbc.pc(), 0xda9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda9b), 0xcb);
        EXPECT(gbc.readMem(0xda9c), 0x23);
        // CB 23 02AB
        gbc.setState(0x4f6a, 0xc17d, 0xba10, 0x95b8, 0x1bdc, 0x67d2, 0x0, 0x0);
        gbc.writeMem(0x4f6a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc17d);
        EXPECT(gbc.pc(), 0x4f6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02AE
        gbc.setState(0x2c0a, 0xf1bb, 0xcfc0, 0xc0a4, 0xde57, 0xe6ac, 0x0, 0x1);
        gbc.writeMem(0x2c0a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf1bb);
        EXPECT(gbc.pc(), 0x2c0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02AF
        gbc.setState(0x407d, 0x20ff, 0xf840, 0x31aa, 0xc306, 0x516b, 0x0, 0x1);
        gbc.writeMem(0x407d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x20ff);
        EXPECT(gbc.pc(), 0x407f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02B0
        gbc.setState(0xd66e, 0x322f, 0xb9d0, 0x5ab1, 0x1e81, 0x2f91, 0x0, 0x0);
        gbc.writeMem(0xd66e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x322f);
        EXPECT(gbc.pc(), 0xd670);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66e), 0xcb);
        EXPECT(gbc.readMem(0xd66f), 0x23);
        // CB 23 02B1
        gbc.setState(0x8539, 0x75e4, 0xd350, 0x47f3, 0x8fd3, 0xa86b, 0x0, 0x1);
        gbc.writeMem(0x8539, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x75e4);
        EXPECT(gbc.pc(), 0x853b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8539), 0xcb);
        EXPECT(gbc.readMem(0x853a), 0x23);
        // CB 23 02B2
        gbc.setState(0x3469, 0x5514, 0x66e0, 0x6b07, 0x64e6, 0x732c, 0x1, 0x1);
        gbc.writeMem(0x3469, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5514);
        EXPECT(gbc.pc(), 0x346b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02B3
        gbc.setState(0x9286, 0xe62c, 0x8350, 0xadcb, 0xfd40, 0xa04a, 0x0, 0x1);
        gbc.writeMem(0x9286, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe62c);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9286), 0xcb);
        EXPECT(gbc.readMem(0x9287), 0x23);
        // CB 23 02B4
        gbc.setState(0x593a, 0xdd90, 0x4050, 0x793c, 0xb247, 0x18c7, 0x1, 0x1);
        gbc.writeMem(0x593a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xdd90);
        EXPECT(gbc.pc(), 0x593c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02B5
        gbc.setState(0x288c, 0x61a5, 0xd110, 0x24aa, 0x5242, 0x77c8, 0x1, 0x1);
        gbc.writeMem(0x288c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x61a5);
        EXPECT(gbc.pc(), 0x288e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02B6
        gbc.setState(0xe7bf, 0xab58, 0x7660, 0x893f, 0x82ef, 0x8b1b, 0x0, 0x0);
        gbc.writeMem(0xe7bf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xab58);
        EXPECT(gbc.pc(), 0xe7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7bf), 0xcb);
        EXPECT(gbc.readMem(0xe7c0), 0x23);
        // CB 23 02B7
        gbc.setState(0x1ed4, 0xb494, 0x6aa0, 0x61f7, 0x7dcf, 0xef7, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xb494);
        EXPECT(gbc.pc(), 0x1ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02B9
        gbc.setState(0x19b6, 0x13a2, 0x6f0, 0xd9f3, 0xd69d, 0xe7f4, 0x0, 0x0);
        gbc.writeMem(0x19b6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x13a2);
        EXPECT(gbc.pc(), 0x19b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02BA
        gbc.setState(0x202c, 0x6fde, 0xe410, 0xe6b2, 0xd8c0, 0xb004, 0x0, 0x1);
        gbc.writeMem(0x202c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6fde);
        EXPECT(gbc.pc(), 0x202e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02BB
        gbc.setState(0x349d, 0xacf8, 0xd7b0, 0xe180, 0xe3aa, 0x5620, 0x0, 0x1);
        gbc.writeMem(0x349d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xacf8);
        EXPECT(gbc.pc(), 0x349f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02BC
        gbc.setState(0x2e5a, 0xd5ab, 0x57a0, 0x3c3c, 0x9eba, 0x89af, 0x0, 0x1);
        gbc.writeMem(0x2e5a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd5ab);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02BD
        gbc.setState(0x3ef4, 0x24e3, 0xd980, 0x3e83, 0x85e4, 0xdf8b, 0x1, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x24e3);
        EXPECT(gbc.pc(), 0x3ef6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02BE
        gbc.setState(0xb58d, 0xd4e5, 0xccd0, 0xa89e, 0xe739, 0xb98c, 0x0, 0x0);
        gbc.writeMem(0xb58d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd4e5);
        EXPECT(gbc.pc(), 0xb58f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb58d), 0xcb);
        EXPECT(gbc.readMem(0xb58e), 0x23);
        // CB 23 02BF
        gbc.setState(0x3b43, 0x653, 0xc820, 0xefd5, 0xd4d2, 0x5649, 0x0, 0x1);
        gbc.writeMem(0x3b43, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x653);
        EXPECT(gbc.pc(), 0x3b45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02C0
        gbc.setState(0x34bd, 0x62e6, 0xac80, 0x960a, 0xee94, 0x204b, 0x1, 0x0);
        gbc.writeMem(0x34bd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x62e6);
        EXPECT(gbc.pc(), 0x34bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02C1
        gbc.setState(0xacda, 0x6d17, 0x1570, 0x665, 0x1e83, 0x529c, 0x1, 0x1);
        gbc.writeMem(0xacda, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6d17);
        EXPECT(gbc.pc(), 0xacdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacda), 0xcb);
        EXPECT(gbc.readMem(0xacdb), 0x23);
        // CB 23 02C2
        gbc.setState(0x543f, 0x231d, 0x7260, 0x15fe, 0x1d81, 0xaa8, 0x1, 0x0);
        gbc.writeMem(0x543f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x231d);
        EXPECT(gbc.pc(), 0x5441);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02C3
        gbc.setState(0xb3a6, 0x369b, 0x55d0, 0x4ed7, 0xabba, 0x9d2c, 0x1, 0x1);
        gbc.writeMem(0xb3a6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x369b);
        EXPECT(gbc.pc(), 0xb3a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a6), 0xcb);
        EXPECT(gbc.readMem(0xb3a7), 0x23);
        // CB 23 02C4
        gbc.setState(0x6418, 0x6bb1, 0xc8b0, 0xab3d, 0x899c, 0x6a5c, 0x0, 0x1);
        gbc.writeMem(0x6418, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6bb1);
        EXPECT(gbc.pc(), 0x641a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02C5
        gbc.setState(0xd5b9, 0x30ad, 0x480, 0x75fe, 0xfdaa, 0x52f4, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x30ad);
        EXPECT(gbc.pc(), 0xd5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b9), 0xcb);
        EXPECT(gbc.readMem(0xd5ba), 0x23);
        // CB 23 02C6
        gbc.setState(0xb208, 0x23d7, 0x5e10, 0xe71c, 0x6c40, 0xef9d, 0x0, 0x1);
        gbc.writeMem(0xb208, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x23d7);
        EXPECT(gbc.pc(), 0xb20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb208), 0xcb);
        EXPECT(gbc.readMem(0xb209), 0x23);
        // CB 23 02C7
        gbc.setState(0x1320, 0xa71d, 0xb6b0, 0x4018, 0xd896, 0x7d67, 0x1, 0x0);
        gbc.writeMem(0x1320, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa71d);
        EXPECT(gbc.pc(), 0x1322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02C8
        gbc.setState(0xdf2a, 0x5397, 0x1800, 0x1f31, 0xb885, 0x7f69, 0x0, 0x0);
        gbc.writeMem(0xdf2a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x5397);
        EXPECT(gbc.pc(), 0xdf2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf2a), 0xcb);
        EXPECT(gbc.readMem(0xdf2b), 0x23);
        // CB 23 02C9
        gbc.setState(0x16a1, 0x5365, 0x8390, 0x577, 0x6c16, 0xa794, 0x1, 0x1);
        gbc.writeMem(0x16a1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5365);
        EXPECT(gbc.pc(), 0x16a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02CA
        gbc.setState(0x277c, 0xb501, 0x1f20, 0x79d8, 0xfa4d, 0x9c5c, 0x1, 0x1);
        gbc.writeMem(0x277c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb501);
        EXPECT(gbc.pc(), 0x277e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02CB
        gbc.setState(0x2b8b, 0x9736, 0x5410, 0x6916, 0xffd0, 0x908c, 0x0, 0x0);
        gbc.writeMem(0x2b8b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9736);
        EXPECT(gbc.pc(), 0x2b8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02CC
        gbc.setState(0x167f, 0xd289, 0x5cd0, 0xacdf, 0x4643, 0x798f, 0x1, 0x0);
        gbc.writeMem(0x167f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd289);
        EXPECT(gbc.pc(), 0x1681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02CD
        gbc.setState(0xc9a1, 0x6460, 0x9aa0, 0x2ea9, 0xe6f8, 0x8a6e, 0x1, 0x1);
        gbc.writeMem(0xc9a1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x6460);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9a1), 0xcb);
        EXPECT(gbc.readMem(0xc9a2), 0x23);
        // CB 23 02CE
        gbc.setState(0xb784, 0xb501, 0x5b70, 0x49ce, 0xfce4, 0xc758, 0x1, 0x0);
        gbc.writeMem(0xb784, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb501);
        EXPECT(gbc.pc(), 0xb786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb784), 0xcb);
        EXPECT(gbc.readMem(0xb785), 0x23);
        // CB 23 02CF
        gbc.setState(0x2dc6, 0x3941, 0xad10, 0x790e, 0x449d, 0x61c3, 0x0, 0x1);
        gbc.writeMem(0x2dc6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3941);
        EXPECT(gbc.pc(), 0x2dc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02D0
        gbc.setState(0x69a8, 0xe311, 0x9280, 0x1339, 0xe8c2, 0xda1a, 0x0, 0x1);
        gbc.writeMem(0x69a8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe311);
        EXPECT(gbc.pc(), 0x69aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02D1
        gbc.setState(0x96d0, 0x9fca, 0x2f10, 0x5efd, 0x726f, 0xaebf, 0x0, 0x1);
        gbc.writeMem(0x96d0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9fca);
        EXPECT(gbc.pc(), 0x96d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d0), 0xcb);
        EXPECT(gbc.readMem(0x96d1), 0x23);
        // CB 23 02D2
        gbc.setState(0x6bad, 0xeef1, 0xce40, 0x649d, 0xcdf8, 0xe590, 0x1, 0x0);
        gbc.writeMem(0x6bad, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xeef1);
        EXPECT(gbc.pc(), 0x6baf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02D3
        gbc.setState(0x96af, 0x7a14, 0xe3e0, 0xb8a5, 0x82bb, 0x6f3b, 0x1, 0x0);
        gbc.writeMem(0x96af, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7a14);
        EXPECT(gbc.pc(), 0x96b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96af), 0xcb);
        EXPECT(gbc.readMem(0x96b0), 0x23);
        // CB 23 02D4
        gbc.setState(0x36d6, 0x9086, 0xc240, 0xf9ca, 0x3d9b, 0x3219, 0x0, 0x0);
        gbc.writeMem(0x36d6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9086);
        EXPECT(gbc.pc(), 0x36d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02D5
        gbc.setState(0x5342, 0x3cfd, 0x2040, 0x9f08, 0x9f, 0xab47, 0x0, 0x0);
        gbc.writeMem(0x5342, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3cfd);
        EXPECT(gbc.pc(), 0x5344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02D6
        gbc.setState(0xa306, 0x1874, 0xbb40, 0x869d, 0x13c8, 0xca0, 0x1, 0x0);
        gbc.writeMem(0xa306, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1874);
        EXPECT(gbc.pc(), 0xa308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa306), 0xcb);
        EXPECT(gbc.readMem(0xa307), 0x23);
        // CB 23 02D7
        gbc.setState(0xce10, 0x6cd9, 0xd720, 0xec26, 0x5f4e, 0xf819, 0x0, 0x0);
        gbc.writeMem(0xce10, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x6cd9);
        EXPECT(gbc.pc(), 0xce12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce10), 0xcb);
        EXPECT(gbc.readMem(0xce11), 0x23);
        // CB 23 02D8
        gbc.setState(0x1a77, 0x6848, 0x71c0, 0xf1dd, 0x3801, 0x9d5d, 0x1, 0x1);
        gbc.writeMem(0x1a77, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6848);
        EXPECT(gbc.pc(), 0x1a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02D9
        gbc.setState(0xa8a7, 0xe062, 0x6f20, 0x6221, 0xa061, 0x8124, 0x1, 0x1);
        gbc.writeMem(0xa8a7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xe062);
        EXPECT(gbc.pc(), 0xa8a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8a7), 0xcb);
        EXPECT(gbc.readMem(0xa8a8), 0x23);
        // CB 23 02DA
        gbc.setState(0xda5b, 0x8d6d, 0xc7d0, 0x389c, 0xcb5e, 0xcbb1, 0x0, 0x0);
        gbc.writeMem(0xda5b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x8d6d);
        EXPECT(gbc.pc(), 0xda5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda5b), 0xcb);
        EXPECT(gbc.readMem(0xda5c), 0x23);
        // CB 23 02DB
        gbc.setState(0xa3e7, 0x383b, 0xd500, 0xc5b1, 0x24c8, 0x425c, 0x0, 0x0);
        gbc.writeMem(0xa3e7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x383b);
        EXPECT(gbc.pc(), 0xa3e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e7), 0xcb);
        EXPECT(gbc.readMem(0xa3e8), 0x23);
        // CB 23 02DC
        gbc.setState(0x789e, 0x1760, 0xe80, 0xc346, 0x63bc, 0x9bcc, 0x1, 0x0);
        gbc.writeMem(0x789e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1760);
        EXPECT(gbc.pc(), 0x78a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02DD
        gbc.setState(0x9146, 0x93e6, 0xa680, 0x9d0, 0x3cda, 0xaa60, 0x1, 0x1);
        gbc.writeMem(0x9146, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0x9148);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9146), 0xcb);
        EXPECT(gbc.readMem(0x9147), 0x23);
        // CB 23 02DE
        gbc.setState(0x7d8c, 0xe67c, 0x4f80, 0xe672, 0x2c5f, 0xcaca, 0x1, 0x1);
        gbc.writeMem(0x7d8c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe67c);
        EXPECT(gbc.pc(), 0x7d8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02DF
        gbc.setState(0x3318, 0xa8b4, 0x4bc0, 0x9155, 0xc45c, 0x1a89, 0x0, 0x1);
        gbc.writeMem(0x3318, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa8b4);
        EXPECT(gbc.pc(), 0x331a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02E0
        gbc.setState(0x16ce, 0x5a4d, 0xe9a0, 0xd641, 0x8c77, 0x67d5, 0x1, 0x0);
        gbc.writeMem(0x16ce, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5a4d);
        EXPECT(gbc.pc(), 0x16d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02E1
        gbc.setState(0xae4b, 0x40eb, 0xed40, 0xa187, 0xa1af, 0xfce1, 0x0, 0x1);
        gbc.writeMem(0xae4b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x40eb);
        EXPECT(gbc.pc(), 0xae4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4b), 0xcb);
        EXPECT(gbc.readMem(0xae4c), 0x23);
        // CB 23 02E2
        gbc.setState(0xa38e, 0x72c1, 0xbbb0, 0x6711, 0x2536, 0x1f50, 0x1, 0x0);
        gbc.writeMem(0xa38e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x72c1);
        EXPECT(gbc.pc(), 0xa390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa38e), 0xcb);
        EXPECT(gbc.readMem(0xa38f), 0x23);
        // CB 23 02E3
        gbc.setState(0xbe7f, 0xfbc5, 0xd0b0, 0xb84b, 0x3d21, 0xe9da, 0x0, 0x1);
        gbc.writeMem(0xbe7f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfbc5);
        EXPECT(gbc.pc(), 0xbe81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe7f), 0xcb);
        EXPECT(gbc.readMem(0xbe80), 0x23);
        // CB 23 02E4
        gbc.setState(0x6e14, 0xc7d7, 0x8820, 0x968a, 0xe34, 0xd40e, 0x0, 0x1);
        gbc.writeMem(0x6e14, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xc7d7);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02E5
        gbc.setState(0xf58, 0x5fe3, 0x73c0, 0x403b, 0x177d, 0xfd6b, 0x0, 0x1);
        gbc.writeMem(0xf58, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5fe3);
        EXPECT(gbc.pc(), 0xf5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02E7
        gbc.setState(0xd8ed, 0xa128, 0x4880, 0x1776, 0x5822, 0x5d1, 0x1, 0x1);
        gbc.writeMem(0xd8ed, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xa128);
        EXPECT(gbc.pc(), 0xd8ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8ed), 0xcb);
        EXPECT(gbc.readMem(0xd8ee), 0x23);
        // CB 23 02E8
        gbc.setState(0x2d0d, 0xf5d7, 0x7e40, 0xc784, 0xd749, 0x9e42, 0x0, 0x0);
        gbc.writeMem(0x2d0d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf5d7);
        EXPECT(gbc.pc(), 0x2d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02E9
        gbc.setState(0xecd7, 0x1928, 0x63d0, 0x80b3, 0x6ad, 0x9009, 0x0, 0x0);
        gbc.writeMem(0xecd7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1928);
        EXPECT(gbc.pc(), 0xecd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecd7), 0xcb);
        EXPECT(gbc.readMem(0xecd8), 0x23);
        // CB 23 02EA
        gbc.setState(0x3e2b, 0xb31b, 0xeed0, 0x1e72, 0x3f03, 0x407c, 0x0, 0x0);
        gbc.writeMem(0x3e2b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x3e2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02EB
        gbc.setState(0xd3ae, 0xb76, 0xb770, 0x7f56, 0x4d0d, 0xa29d, 0x0, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb76);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3ae), 0xcb);
        EXPECT(gbc.readMem(0xd3af), 0x23);
        // CB 23 02EC
        gbc.setState(0xa629, 0xa5eb, 0x3b40, 0x823b, 0xcfc6, 0x4dc7, 0x0, 0x0);
        gbc.writeMem(0xa629, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa5eb);
        EXPECT(gbc.pc(), 0xa62b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa629), 0xcb);
        EXPECT(gbc.readMem(0xa62a), 0x23);
        // CB 23 02ED
        gbc.setState(0xafb7, 0xd2e4, 0xed30, 0x3411, 0x8a35, 0xe49, 0x0, 0x1);
        gbc.writeMem(0xafb7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xd2e4);
        EXPECT(gbc.pc(), 0xafb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafb7), 0xcb);
        EXPECT(gbc.readMem(0xafb8), 0x23);
        // CB 23 02EE
        gbc.setState(0x3641, 0x17d6, 0x2230, 0x4669, 0x1404, 0x6084, 0x1, 0x1);
        gbc.writeMem(0x3641, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x17d6);
        EXPECT(gbc.pc(), 0x3643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02EF
        gbc.setState(0x337a, 0x64d1, 0x9730, 0xf8b2, 0x371c, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0x337a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x64d1);
        EXPECT(gbc.pc(), 0x337c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02F0
        gbc.setState(0x14a7, 0x6444, 0x870, 0xd60d, 0x5eeb, 0x19ac, 0x0, 0x0);
        gbc.writeMem(0x14a7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6444);
        EXPECT(gbc.pc(), 0x14a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02F1
        gbc.setState(0xdca0, 0xe44f, 0x8350, 0x82fd, 0xd6d4, 0x2151, 0x0, 0x1);
        gbc.writeMem(0xdca0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe44f);
        EXPECT(gbc.pc(), 0xdca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca0), 0xcb);
        EXPECT(gbc.readMem(0xdca1), 0x23);
        // CB 23 02F3
        gbc.setState(0x9488, 0xe14b, 0xe970, 0x27f0, 0xb088, 0x296b, 0x1, 0x1);
        gbc.writeMem(0x9488, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe14b);
        EXPECT(gbc.pc(), 0x948a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9488), 0xcb);
        EXPECT(gbc.readMem(0x9489), 0x23);
        // CB 23 02F4
        gbc.setState(0xc30, 0x4224, 0xb000, 0x5092, 0xb72c, 0x36c6, 0x1, 0x0);
        gbc.writeMem(0xc30, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x4224);
        EXPECT(gbc.pc(), 0xc32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02F5
        gbc.setState(0x80aa, 0xbadf, 0x39c0, 0x762b, 0x774, 0xb762, 0x0, 0x1);
        gbc.writeMem(0x80aa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xbadf);
        EXPECT(gbc.pc(), 0x80ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80aa), 0xcb);
        EXPECT(gbc.readMem(0x80ab), 0x23);
        // CB 23 02F6
        gbc.setState(0xaaea, 0x28fa, 0x8fe0, 0x8ed4, 0xc861, 0x3120, 0x1, 0x1);
        gbc.writeMem(0xaaea, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x28fa);
        EXPECT(gbc.pc(), 0xaaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaea), 0xcb);
        EXPECT(gbc.readMem(0xaaeb), 0x23);
        // CB 23 02F7
        gbc.setState(0xc58e, 0xc000, 0x370, 0xc86a, 0x741b, 0x1898, 0x0, 0x1);
        gbc.writeMem(0xc58e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc000);
        EXPECT(gbc.pc(), 0xc590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc58e), 0xcb);
        EXPECT(gbc.readMem(0xc58f), 0x23);
        // CB 23 02F8
        gbc.setState(0xe26b, 0xc087, 0xcdf0, 0xb2ba, 0x4066, 0x28d, 0x1, 0x0);
        gbc.writeMem(0xe26b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc087);
        EXPECT(gbc.pc(), 0xe26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26b), 0xcb);
        EXPECT(gbc.readMem(0xe26c), 0x23);
        // CB 23 02F9
        gbc.setState(0x369d, 0xe753, 0x7980, 0xd165, 0xfc51, 0xc83a, 0x0, 0x1);
        gbc.writeMem(0x369d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe753);
        EXPECT(gbc.pc(), 0x369f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02FA
        gbc.setState(0x418d, 0x6494, 0xa620, 0xba7d, 0x59a7, 0xceed, 0x0, 0x1);
        gbc.writeMem(0x418d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6494);
        EXPECT(gbc.pc(), 0x418f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02FB
        gbc.setState(0xb9f3, 0x441d, 0xa580, 0x1368, 0x79b9, 0x5825, 0x1, 0x1);
        gbc.writeMem(0xb9f3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x441d);
        EXPECT(gbc.pc(), 0xb9f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f3), 0xcb);
        EXPECT(gbc.readMem(0xb9f4), 0x23);
        // CB 23 02FD
        gbc.setState(0x1836, 0x10f2, 0x2e80, 0x4f27, 0x84bb, 0x7387, 0x1, 0x0);
        gbc.writeMem(0x1836, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x10f2);
        EXPECT(gbc.pc(), 0x1838);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 02FE
        gbc.setState(0x7a25, 0x23d0, 0x10c0, 0x230c, 0xc438, 0xc4d2, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x23d0);
        EXPECT(gbc.pc(), 0x7a27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 02FF
        gbc.setState(0x270d, 0x6b84, 0x9cd0, 0xbd8a, 0xa4c8, 0x7d0, 0x1, 0x1);
        gbc.writeMem(0x270d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6b84);
        EXPECT(gbc.pc(), 0x270f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0300
        gbc.setState(0x7431, 0x700a, 0xc550, 0x8073, 0x4b77, 0xe8ec, 0x0, 0x0);
        gbc.writeMem(0x7431, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x700a);
        EXPECT(gbc.pc(), 0x7433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0301
        gbc.setState(0x4c1d, 0x3133, 0xdb80, 0x6a14, 0x611e, 0x486e, 0x1, 0x1);
        gbc.writeMem(0x4c1d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3133);
        EXPECT(gbc.pc(), 0x4c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0302
        gbc.setState(0x5e6a, 0x149b, 0x8580, 0x2cfa, 0xce5, 0xe9b, 0x1, 0x1);
        gbc.writeMem(0x5e6a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x149b);
        EXPECT(gbc.pc(), 0x5e6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0303
        gbc.setState(0xac83, 0x9ccd, 0xcfb0, 0x109c, 0x907, 0x83d9, 0x1, 0x1);
        gbc.writeMem(0xac83, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9ccd);
        EXPECT(gbc.pc(), 0xac85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac83), 0xcb);
        EXPECT(gbc.readMem(0xac84), 0x23);
        // CB 23 0304
        gbc.setState(0x7a55, 0xaf95, 0x4720, 0x491e, 0xa3ca, 0xdce8, 0x0, 0x1);
        gbc.writeMem(0x7a55, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xaf95);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0305
        gbc.setState(0x38df, 0x8880, 0x9c00, 0xca2c, 0xd18b, 0xcc6f, 0x1, 0x0);
        gbc.writeMem(0x38df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8880);
        EXPECT(gbc.pc(), 0x38e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0306
        gbc.setState(0x3737, 0x588a, 0x610, 0x858d, 0x6d85, 0x9d6c, 0x0, 0x0);
        gbc.writeMem(0x3737, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x588a);
        EXPECT(gbc.pc(), 0x3739);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0307
        gbc.setState(0x6223, 0xd6f9, 0x1280, 0xe9a7, 0x5c32, 0x51a4, 0x0, 0x1);
        gbc.writeMem(0x6223, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd6f9);
        EXPECT(gbc.pc(), 0x6225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0308
        gbc.setState(0xef97, 0x278c, 0xfe10, 0x13f3, 0xf4c6, 0xf5a7, 0x1, 0x0);
        gbc.writeMem(0xef97, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x278c);
        EXPECT(gbc.pc(), 0xef99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef97), 0xcb);
        EXPECT(gbc.readMem(0xef98), 0x23);
        // CB 23 0309
        gbc.setState(0x7fd5, 0xeaa, 0x78d0, 0x8175, 0x4b96, 0x38e5, 0x1, 0x1);
        gbc.writeMem(0x7fd5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xeaa);
        EXPECT(gbc.pc(), 0x7fd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 030A
        gbc.setState(0xe24c, 0xe380, 0xe6e0, 0x4d09, 0x2c39, 0xf9d4, 0x0, 0x1);
        gbc.writeMem(0xe24c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe380);
        EXPECT(gbc.pc(), 0xe24e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24c), 0xcb);
        EXPECT(gbc.readMem(0xe24d), 0x23);
        // CB 23 030B
        gbc.setState(0x9df4, 0x38a8, 0x8b30, 0xe338, 0x9df7, 0xc4d4, 0x1, 0x0);
        gbc.writeMem(0x9df4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x38a8);
        EXPECT(gbc.pc(), 0x9df6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df4), 0xcb);
        EXPECT(gbc.readMem(0x9df5), 0x23);
        // CB 23 030C
        gbc.setState(0x3566, 0x126a, 0x90b0, 0xe3e5, 0x8645, 0x758e, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x126a);
        EXPECT(gbc.pc(), 0x3568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 030D
        gbc.setState(0x30a0, 0xda37, 0x7a40, 0xabf5, 0x9fcf, 0x8c9b, 0x1, 0x1);
        gbc.writeMem(0x30a0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xda37);
        EXPECT(gbc.pc(), 0x30a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 030E
        gbc.setState(0x1a3a, 0x62c6, 0x7ab0, 0x5f62, 0x6e19, 0x587b, 0x0, 0x0);
        gbc.writeMem(0x1a3a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x62c6);
        EXPECT(gbc.pc(), 0x1a3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 030F
        gbc.setState(0xb98f, 0x21ff, 0xb0d0, 0xca5f, 0x864f, 0x19f6, 0x0, 0x0);
        gbc.writeMem(0xb98f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x21ff);
        EXPECT(gbc.pc(), 0xb991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb98f), 0xcb);
        EXPECT(gbc.readMem(0xb990), 0x23);
        // CB 23 0310
        gbc.setState(0xaa82, 0x8727, 0x43e0, 0x2610, 0x9378, 0x6707, 0x1, 0x1);
        gbc.writeMem(0xaa82, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8727);
        EXPECT(gbc.pc(), 0xaa84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa82), 0xcb);
        EXPECT(gbc.readMem(0xaa83), 0x23);
        // CB 23 0311
        gbc.setState(0xe342, 0x4dd4, 0xe9c0, 0x8e55, 0x95df, 0x46bb, 0x0, 0x1);
        gbc.writeMem(0xe342, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4dd4);
        EXPECT(gbc.pc(), 0xe344);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe342), 0xcb);
        EXPECT(gbc.readMem(0xe343), 0x23);
        // CB 23 0313
        gbc.setState(0x3f16, 0x6aa3, 0xe7a0, 0x9e78, 0x2323, 0xc38d, 0x1, 0x1);
        gbc.writeMem(0x3f16, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6aa3);
        EXPECT(gbc.pc(), 0x3f18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0314
        gbc.setState(0xa39b, 0x9d06, 0x9940, 0xc6a, 0x27fb, 0xb84b, 0x1, 0x0);
        gbc.writeMem(0xa39b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9d06);
        EXPECT(gbc.pc(), 0xa39d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa39b), 0xcb);
        EXPECT(gbc.readMem(0xa39c), 0x23);
        // CB 23 0315
        gbc.setState(0xc50f, 0xd0fd, 0x840, 0xf57c, 0x40d8, 0xebf7, 0x1, 0x0);
        gbc.writeMem(0xc50f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd0fd);
        EXPECT(gbc.pc(), 0xc511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50f), 0xcb);
        EXPECT(gbc.readMem(0xc510), 0x23);
        // CB 23 0316
        gbc.setState(0x5338, 0x64ba, 0xfae0, 0x5563, 0x70ff, 0xa1b1, 0x1, 0x0);
        gbc.writeMem(0x5338, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x64ba);
        EXPECT(gbc.pc(), 0x533a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0317
        gbc.setState(0xa03a, 0x5d75, 0x6830, 0x2dc1, 0xb99d, 0xa38d, 0x1, 0x0);
        gbc.writeMem(0xa03a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5d75);
        EXPECT(gbc.pc(), 0xa03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa03a), 0xcb);
        EXPECT(gbc.readMem(0xa03b), 0x23);
        // CB 23 0318
        gbc.setState(0x5f30, 0xf634, 0x5c20, 0x6ed6, 0x1be7, 0x94c2, 0x0, 0x0);
        gbc.writeMem(0x5f30, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf634);
        EXPECT(gbc.pc(), 0x5f32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0319
        gbc.setState(0x7d, 0x1a48, 0xccc0, 0x54bf, 0x9d1a, 0xabdf, 0x0, 0x1);
        gbc.writeMem(0x7d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1a48);
        EXPECT(gbc.pc(), 0x7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 031A
        gbc.setState(0x1dc1, 0x622d, 0x5b90, 0xedfa, 0x6a48, 0x9f5f, 0x1, 0x1);
        gbc.writeMem(0x1dc1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x622d);
        EXPECT(gbc.pc(), 0x1dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 031B
        gbc.setState(0x7d0a, 0xbabf, 0x6030, 0xadc3, 0x70bf, 0xb711, 0x0, 0x0);
        gbc.writeMem(0x7d0a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbabf);
        EXPECT(gbc.pc(), 0x7d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 031C
        gbc.setState(0x3852, 0x3c6e, 0x2400, 0x5564, 0x5896, 0x4b2e, 0x1, 0x1);
        gbc.writeMem(0x3852, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3c6e);
        EXPECT(gbc.pc(), 0x3854);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 031D
        gbc.setState(0x4958, 0xc154, 0xb340, 0x8f9, 0x9a9c, 0x13c1, 0x0, 0x1);
        gbc.writeMem(0x4958, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc154);
        EXPECT(gbc.pc(), 0x495a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 031E
        gbc.setState(0x173c, 0xf318, 0x7160, 0x2694, 0xd04e, 0x10f6, 0x0, 0x1);
        gbc.writeMem(0x173c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf318);
        EXPECT(gbc.pc(), 0x173e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 031F
        gbc.setState(0xb833, 0xccfb, 0xef0, 0xd89, 0x5083, 0xcc53, 0x0, 0x0);
        gbc.writeMem(0xb833, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xccfb);
        EXPECT(gbc.pc(), 0xb835);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb833), 0xcb);
        EXPECT(gbc.readMem(0xb834), 0x23);
        // CB 23 0320
        gbc.setState(0x558d, 0x9fb5, 0xd270, 0xbc36, 0x3023, 0x5d66, 0x0, 0x0);
        gbc.writeMem(0x558d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x9fb5);
        EXPECT(gbc.pc(), 0x558f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0321
        gbc.setState(0xc0dc, 0xc08f, 0x8a80, 0x61ba, 0x97b4, 0x3340, 0x0, 0x1);
        gbc.writeMem(0xc0dc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc08f);
        EXPECT(gbc.pc(), 0xc0de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0dc), 0xcb);
        EXPECT(gbc.readMem(0xc0dd), 0x23);
        // CB 23 0322
        gbc.setState(0xcb5b, 0xd5d2, 0x20f0, 0x5b6c, 0xc03c, 0xdd45, 0x0, 0x1);
        gbc.writeMem(0xcb5b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xd5d2);
        EXPECT(gbc.pc(), 0xcb5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5b), 0xcb);
        EXPECT(gbc.readMem(0xcb5c), 0x23);
        // CB 23 0323
        gbc.setState(0x7b5a, 0x4c28, 0x890, 0x4deb, 0xe39f, 0xcdd3, 0x0, 0x1);
        gbc.writeMem(0x7b5a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x4c28);
        EXPECT(gbc.pc(), 0x7b5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0324
        gbc.setState(0x4f43, 0x2c1d, 0xda90, 0x9c40, 0x1bbd, 0xe0a1, 0x1, 0x0);
        gbc.writeMem(0x4f43, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2c1d);
        EXPECT(gbc.pc(), 0x4f45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0325
        gbc.setState(0xa35c, 0xd717, 0xc7a0, 0x3e17, 0xb583, 0xd794, 0x0, 0x1);
        gbc.writeMem(0xa35c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd717);
        EXPECT(gbc.pc(), 0xa35e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa35c), 0xcb);
        EXPECT(gbc.readMem(0xa35d), 0x23);
        // CB 23 0326
        gbc.setState(0x1e18, 0xe69b, 0x8c80, 0x9691, 0xdbc6, 0xa2d0, 0x1, 0x1);
        gbc.writeMem(0x1e18, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe69b);
        EXPECT(gbc.pc(), 0x1e1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0327
        gbc.setState(0x1665, 0xd139, 0x7920, 0x1f10, 0x1910, 0x3139, 0x0, 0x0);
        gbc.writeMem(0x1665, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd139);
        EXPECT(gbc.pc(), 0x1667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0328
        gbc.setState(0x2c78, 0x8ee8, 0x6e30, 0xfdbe, 0x2e71, 0xc98f, 0x1, 0x0);
        gbc.writeMem(0x2c78, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8ee8);
        EXPECT(gbc.pc(), 0x2c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0329
        gbc.setState(0x3b31, 0xd9eb, 0xf2e0, 0x970f, 0xfb9a, 0x79dc, 0x1, 0x0);
        gbc.writeMem(0x3b31, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xd9eb);
        EXPECT(gbc.pc(), 0x3b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 032A
        gbc.setState(0x659d, 0xcea7, 0x3830, 0x343d, 0x9530, 0x58d1, 0x1, 0x0);
        gbc.writeMem(0x659d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xcea7);
        EXPECT(gbc.pc(), 0x659f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 032B
        gbc.setState(0xcfaf, 0x881e, 0x1280, 0xd23e, 0xb83b, 0x8fa8, 0x1, 0x0);
        gbc.writeMem(0xcfaf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x881e);
        EXPECT(gbc.pc(), 0xcfb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfaf), 0xcb);
        EXPECT(gbc.readMem(0xcfb0), 0x23);
        // CB 23 032C
        gbc.setState(0xcc2a, 0x291b, 0x8880, 0x5d4d, 0x81d7, 0x994c, 0x1, 0x1);
        gbc.writeMem(0xcc2a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x291b);
        EXPECT(gbc.pc(), 0xcc2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc2a), 0xcb);
        EXPECT(gbc.readMem(0xcc2b), 0x23);
        // CB 23 032D
        gbc.setState(0x3544, 0x646e, 0x5290, 0x4904, 0x1fc8, 0x242b, 0x0, 0x0);
        gbc.writeMem(0x3544, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x646e);
        EXPECT(gbc.pc(), 0x3546);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 032E
        gbc.setState(0x2e34, 0x108d, 0x93c0, 0x5746, 0xfd95, 0xe6c4, 0x0, 0x0);
        gbc.writeMem(0x2e34, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x108d);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 032F
        gbc.setState(0x3cfd, 0x8adf, 0xafd0, 0x9b7d, 0xa283, 0xeb8c, 0x0, 0x1);
        gbc.writeMem(0x3cfd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8adf);
        EXPECT(gbc.pc(), 0x3cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0331
        gbc.setState(0x23b5, 0xf24, 0xe930, 0xecae, 0x415e, 0xf4a9, 0x0, 0x0);
        gbc.writeMem(0x23b5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf24);
        EXPECT(gbc.pc(), 0x23b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0332
        gbc.setState(0xa1bd, 0xc27d, 0xfe0, 0x5281, 0x35b6, 0xffc9, 0x1, 0x0);
        gbc.writeMem(0xa1bd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xc27d);
        EXPECT(gbc.pc(), 0xa1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bd), 0xcb);
        EXPECT(gbc.readMem(0xa1be), 0x23);
        // CB 23 0333
        gbc.setState(0xa1b9, 0xe6b0, 0x8080, 0xb3fb, 0x9a50, 0x3b6e, 0x0, 0x0);
        gbc.writeMem(0xa1b9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe6b0);
        EXPECT(gbc.pc(), 0xa1bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1b9), 0xcb);
        EXPECT(gbc.readMem(0xa1ba), 0x23);
        // CB 23 0334
        gbc.setState(0x3f13, 0x8e46, 0x87d0, 0xad1a, 0xa616, 0xba14, 0x0, 0x1);
        gbc.writeMem(0x3f13, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8e46);
        EXPECT(gbc.pc(), 0x3f15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0335
        gbc.setState(0x65f2, 0x7a1d, 0xc1c0, 0xfe8f, 0xaead, 0x8470, 0x0, 0x0);
        gbc.writeMem(0x65f2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x7a1d);
        EXPECT(gbc.pc(), 0x65f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0336
        gbc.setState(0x3588, 0xd383, 0xd660, 0xaa6f, 0xbd92, 0xb78e, 0x1, 0x1);
        gbc.writeMem(0x3588, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd383);
        EXPECT(gbc.pc(), 0x358a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0337
        gbc.setState(0x68c1, 0xdb5a, 0x62a0, 0x40b, 0x939b, 0x25a1, 0x0, 0x1);
        gbc.writeMem(0x68c1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xdb5a);
        EXPECT(gbc.pc(), 0x68c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0338
        gbc.setState(0xcc71, 0x7713, 0x8e10, 0x2f0d, 0x9ab5, 0x9576, 0x1, 0x1);
        gbc.writeMem(0xcc71, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x7713);
        EXPECT(gbc.pc(), 0xcc73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc71), 0xcb);
        EXPECT(gbc.readMem(0xcc72), 0x23);
        // CB 23 0339
        gbc.setState(0x3705, 0x9364, 0xd550, 0x4808, 0x88a5, 0xc3c, 0x0, 0x0);
        gbc.writeMem(0x3705, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9364);
        EXPECT(gbc.pc(), 0x3707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 033A
        gbc.setState(0xd902, 0xfe0d, 0x92b0, 0x84a4, 0x79ea, 0xb2a5, 0x0, 0x0);
        gbc.writeMem(0xd902, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xfe0d);
        EXPECT(gbc.pc(), 0xd904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd902), 0xcb);
        EXPECT(gbc.readMem(0xd903), 0x23);
        // CB 23 033B
        gbc.setState(0x9946, 0x5c47, 0x87f0, 0x8ebc, 0x999c, 0x1741, 0x1, 0x1);
        gbc.writeMem(0x9946, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x5c47);
        EXPECT(gbc.pc(), 0x9948);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9946), 0xcb);
        EXPECT(gbc.readMem(0x9947), 0x23);
        // CB 23 033C
        gbc.setState(0x50ae, 0xc0f7, 0xccf0, 0x467e, 0xb4e1, 0x31ed, 0x1, 0x1);
        gbc.writeMem(0x50ae, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc0f7);
        EXPECT(gbc.pc(), 0x50b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 033D
        gbc.setState(0x433c, 0xc863, 0x1610, 0x6581, 0xb09e, 0x9e4e, 0x1, 0x1);
        gbc.writeMem(0x433c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xc863);
        EXPECT(gbc.pc(), 0x433e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 033E
        gbc.setState(0xc2a6, 0x992, 0xfe30, 0xe54c, 0xf456, 0x1293, 0x1, 0x0);
        gbc.writeMem(0xc2a6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x992);
        EXPECT(gbc.pc(), 0xc2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a6), 0xcb);
        EXPECT(gbc.readMem(0xc2a7), 0x23);
        // CB 23 033F
        gbc.setState(0x838c, 0xa9c5, 0x2020, 0x2b9f, 0x6ccd, 0xddec, 0x1, 0x1);
        gbc.writeMem(0x838c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xa9c5);
        EXPECT(gbc.pc(), 0x838e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x838c), 0xcb);
        EXPECT(gbc.readMem(0x838d), 0x23);
        // CB 23 0340
        gbc.setState(0x6aef, 0xda1b, 0xfe50, 0xf1ba, 0xf321, 0x6821, 0x1, 0x1);
        gbc.writeMem(0x6aef, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xda1b);
        EXPECT(gbc.pc(), 0x6af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0341
        gbc.setState(0x7861, 0x9373, 0x6690, 0xd32, 0x9f8c, 0x3cf3, 0x1, 0x1);
        gbc.writeMem(0x7861, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9373);
        EXPECT(gbc.pc(), 0x7863);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0342
        gbc.setState(0x1e30, 0x4a21, 0x36b0, 0x8a25, 0x3146, 0x6639, 0x1, 0x1);
        gbc.writeMem(0x1e30, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4a21);
        EXPECT(gbc.pc(), 0x1e32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0343
        gbc.setState(0x28b8, 0x1319, 0xf890, 0x104e, 0xc7f4, 0x25e, 0x1, 0x1);
        gbc.writeMem(0x28b8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1319);
        EXPECT(gbc.pc(), 0x28ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0344
        gbc.setState(0x4da9, 0xe521, 0x95c0, 0x4729, 0x8a55, 0xbadb, 0x0, 0x0);
        gbc.writeMem(0x4da9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xe521);
        EXPECT(gbc.pc(), 0x4dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0345
        gbc.setState(0x4394, 0x41da, 0xc2d0, 0xaa42, 0x2ae7, 0x98c1, 0x1, 0x0);
        gbc.writeMem(0x4394, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x41da);
        EXPECT(gbc.pc(), 0x4396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0346
        gbc.setState(0xca86, 0x8447, 0x7430, 0x1e71, 0x3f9d, 0xa0f8, 0x0, 0x0);
        gbc.writeMem(0xca86, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x8447);
        EXPECT(gbc.pc(), 0xca88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca86), 0xcb);
        EXPECT(gbc.readMem(0xca87), 0x23);
        // CB 23 0347
        gbc.setState(0xcc26, 0x7100, 0xddd0, 0x26a8, 0x5fe3, 0x9687, 0x0, 0x0);
        gbc.writeMem(0xcc26, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7100);
        EXPECT(gbc.pc(), 0xcc28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc26), 0xcb);
        EXPECT(gbc.readMem(0xcc27), 0x23);
        // CB 23 0348
        gbc.setState(0x2c6b, 0x3142, 0xc50, 0x9081, 0x212, 0xba6b, 0x1, 0x0);
        gbc.writeMem(0x2c6b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x3142);
        EXPECT(gbc.pc(), 0x2c6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0349
        gbc.setState(0xbf6d, 0x69cf, 0xb410, 0xe4d7, 0x4634, 0xc8f4, 0x1, 0x1);
        gbc.writeMem(0xbf6d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x69cf);
        EXPECT(gbc.pc(), 0xbf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf6d), 0xcb);
        EXPECT(gbc.readMem(0xbf6e), 0x23);
        // CB 23 034A
        gbc.setState(0x34cb, 0x8615, 0xf200, 0xd334, 0x2925, 0x4f51, 0x1, 0x0);
        gbc.writeMem(0x34cb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8615);
        EXPECT(gbc.pc(), 0x34cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 034B
        gbc.setState(0x4fb7, 0x2a12, 0xdde0, 0x3efa, 0x69e5, 0xf6e5, 0x0, 0x1);
        gbc.writeMem(0x4fb7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x2a12);
        EXPECT(gbc.pc(), 0x4fb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 034D
        gbc.setState(0x3453, 0x23fc, 0x7660, 0x6319, 0x2ae0, 0x88e0, 0x0, 0x0);
        gbc.writeMem(0x3453, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x23fc);
        EXPECT(gbc.pc(), 0x3455);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 034E
        gbc.setState(0x512d, 0xdff, 0x33f0, 0xd7f6, 0x171f, 0x1db9, 0x1, 0x0);
        gbc.writeMem(0x512d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdff);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 034F
        gbc.setState(0xaef2, 0x80f5, 0x44c0, 0xc3e8, 0x8411, 0x3282, 0x1, 0x0);
        gbc.writeMem(0xaef2, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x80f5);
        EXPECT(gbc.pc(), 0xaef4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef2), 0xcb);
        EXPECT(gbc.readMem(0xaef3), 0x23);
        // CB 23 0350
        gbc.setState(0x5ab0, 0x411d, 0xebf0, 0x7fdb, 0xd7d4, 0xa993, 0x1, 0x0);
        gbc.writeMem(0x5ab0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x411d);
        EXPECT(gbc.pc(), 0x5ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0351
        gbc.setState(0xe623, 0xfea8, 0x78e0, 0x1dd4, 0xc8dc, 0xe167, 0x1, 0x0);
        gbc.writeMem(0xe623, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfea8);
        EXPECT(gbc.pc(), 0xe625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe623), 0xcb);
        EXPECT(gbc.readMem(0xe624), 0x23);
        // CB 23 0352
        gbc.setState(0xdbf9, 0x841b, 0xb640, 0x6fee, 0xa7d, 0x333b, 0x1, 0x1);
        gbc.writeMem(0xdbf9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x841b);
        EXPECT(gbc.pc(), 0xdbfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf9), 0xcb);
        EXPECT(gbc.readMem(0xdbfa), 0x23);
        // CB 23 0353
        gbc.setState(0x85f8, 0x35d8, 0x4240, 0xfeee, 0xa6de, 0x3337, 0x1, 0x0);
        gbc.writeMem(0x85f8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x35d8);
        EXPECT(gbc.pc(), 0x85fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f8), 0xcb);
        EXPECT(gbc.readMem(0x85f9), 0x23);
        // CB 23 0354
        gbc.setState(0x50ad, 0x2537, 0x2ab0, 0x1b99, 0xbb26, 0xb1cd, 0x0, 0x0);
        gbc.writeMem(0x50ad, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2537);
        EXPECT(gbc.pc(), 0x50af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0355
        gbc.setState(0xee8a, 0xe361, 0xa3a0, 0x331d, 0x1842, 0x1646, 0x0, 0x1);
        gbc.writeMem(0xee8a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe361);
        EXPECT(gbc.pc(), 0xee8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee8a), 0xcb);
        EXPECT(gbc.readMem(0xee8b), 0x23);
        // CB 23 0356
        gbc.setState(0x764d, 0x1494, 0x2850, 0xcb8b, 0x2f35, 0x734b, 0x1, 0x1);
        gbc.writeMem(0x764d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1494);
        EXPECT(gbc.pc(), 0x764f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0358
        gbc.setState(0x7df7, 0xc0e1, 0xf6d0, 0x525e, 0x4ddb, 0x1b83, 0x1, 0x1);
        gbc.writeMem(0x7df7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc0e1);
        EXPECT(gbc.pc(), 0x7df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0359
        gbc.setState(0x791b, 0xf6b8, 0xda70, 0x8dcd, 0x49d2, 0x9d8d, 0x0, 0x0);
        gbc.writeMem(0x791b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf6b8);
        EXPECT(gbc.pc(), 0x791d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 035A
        gbc.setState(0xd5b6, 0x65d9, 0xa4f0, 0x6927, 0x9ef8, 0x6b7f, 0x1, 0x1);
        gbc.writeMem(0xd5b6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x65d9);
        EXPECT(gbc.pc(), 0xd5b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b6), 0xcb);
        EXPECT(gbc.readMem(0xd5b7), 0x23);
        // CB 23 035B
        gbc.setState(0x9501, 0xc691, 0xa670, 0x93ae, 0xd6d, 0xf534, 0x0, 0x1);
        gbc.writeMem(0x9501, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xc691);
        EXPECT(gbc.pc(), 0x9503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9501), 0xcb);
        EXPECT(gbc.readMem(0x9502), 0x23);
        // CB 23 035C
        gbc.setState(0x3fa4, 0x1662, 0x10c0, 0xd89c, 0x2c7a, 0x9853, 0x0, 0x0);
        gbc.writeMem(0x3fa4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1662);
        EXPECT(gbc.pc(), 0x3fa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 035D
        gbc.setState(0x8d28, 0x4f5a, 0xd0a0, 0xdad9, 0xf987, 0x949a, 0x1, 0x0);
        gbc.writeMem(0x8d28, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4f5a);
        EXPECT(gbc.pc(), 0x8d2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d28), 0xcb);
        EXPECT(gbc.readMem(0x8d29), 0x23);
        // CB 23 035E
        gbc.setState(0xa250, 0xa46d, 0x94b0, 0xe70a, 0x5ea1, 0x9722, 0x0, 0x0);
        gbc.writeMem(0xa250, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xa46d);
        EXPECT(gbc.pc(), 0xa252);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa250), 0xcb);
        EXPECT(gbc.readMem(0xa251), 0x23);
        // CB 23 035F
        gbc.setState(0x56dd, 0xeb01, 0xbcc0, 0x3300, 0x3250, 0xd1fb, 0x0, 0x0);
        gbc.writeMem(0x56dd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xeb01);
        EXPECT(gbc.pc(), 0x56df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0360
        gbc.setState(0x1abe, 0x143f, 0xe470, 0x78ec, 0x8721, 0x1dc1, 0x1, 0x1);
        gbc.writeMem(0x1abe, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x143f);
        EXPECT(gbc.pc(), 0x1ac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0361
        gbc.setState(0x6cae, 0xfed8, 0xf080, 0x467f, 0xe83b, 0xc6a3, 0x1, 0x1);
        gbc.writeMem(0x6cae, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xfed8);
        EXPECT(gbc.pc(), 0x6cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0362
        gbc.setState(0x900c, 0x3af5, 0xfcc0, 0x69b0, 0xb947, 0x8197, 0x1, 0x1);
        gbc.writeMem(0x900c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x3af5);
        EXPECT(gbc.pc(), 0x900e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x900c), 0xcb);
        EXPECT(gbc.readMem(0x900d), 0x23);
        // CB 23 0363
        gbc.setState(0xcdc3, 0x5253, 0x2320, 0x1a1, 0xe8f3, 0x7d86, 0x1, 0x1);
        gbc.writeMem(0xcdc3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5253);
        EXPECT(gbc.pc(), 0xcdc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc3), 0xcb);
        EXPECT(gbc.readMem(0xcdc4), 0x23);
        // CB 23 0364
        gbc.setState(0xed09, 0x2b21, 0x26f0, 0xb2ad, 0xdea4, 0xceb9, 0x0, 0x1);
        gbc.writeMem(0xed09, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2b21);
        EXPECT(gbc.pc(), 0xed0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed09), 0xcb);
        EXPECT(gbc.readMem(0xed0a), 0x23);
        // CB 23 0366
        gbc.setState(0x4f98, 0xfe4, 0x9690, 0x8272, 0x6a20, 0xab47, 0x1, 0x1);
        gbc.writeMem(0x4f98, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfe4);
        EXPECT(gbc.pc(), 0x4f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0367
        gbc.setState(0x4f72, 0x3662, 0xd160, 0x35ce, 0x8e2, 0x70a7, 0x0, 0x1);
        gbc.writeMem(0x4f72, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3662);
        EXPECT(gbc.pc(), 0x4f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0368
        gbc.setState(0x64bb, 0x9ef1, 0x7e90, 0x3507, 0x8809, 0x1f68, 0x0, 0x0);
        gbc.writeMem(0x64bb, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9ef1);
        EXPECT(gbc.pc(), 0x64bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0369
        gbc.setState(0x887, 0x3dc9, 0x8110, 0x4c4d, 0x1e15, 0xe398, 0x1, 0x0);
        gbc.writeMem(0x887, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3dc9);
        EXPECT(gbc.pc(), 0x889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 036B
        gbc.setState(0x5884, 0xdb6, 0x1500, 0x96cd, 0xc33c, 0xf2ee, 0x1, 0x1);
        gbc.writeMem(0x5884, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xdb6);
        EXPECT(gbc.pc(), 0x5886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 036D
        gbc.setState(0x9548, 0x3560, 0x8d50, 0x2fab, 0x8c73, 0xe8ab, 0x0, 0x1);
        gbc.writeMem(0x9548, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3560);
        EXPECT(gbc.pc(), 0x954a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9548), 0xcb);
        EXPECT(gbc.readMem(0x9549), 0x23);
        // CB 23 036E
        gbc.setState(0xca05, 0xacc, 0x4b90, 0xfd23, 0xa918, 0xecf0, 0x1, 0x1);
        gbc.writeMem(0xca05, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xacc);
        EXPECT(gbc.pc(), 0xca07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca05), 0xcb);
        EXPECT(gbc.readMem(0xca06), 0x23);
        // CB 23 036F
        gbc.setState(0x8d74, 0x5e6b, 0xc8b0, 0x9d5, 0xbfe, 0x92a0, 0x0, 0x1);
        gbc.writeMem(0x8d74, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5e6b);
        EXPECT(gbc.pc(), 0x8d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d74), 0xcb);
        EXPECT(gbc.readMem(0x8d75), 0x23);
        // CB 23 0370
        gbc.setState(0xd653, 0x604, 0xa160, 0x3060, 0x3dae, 0x325d, 0x0, 0x0);
        gbc.writeMem(0xd653, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x604);
        EXPECT(gbc.pc(), 0xd655);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd653), 0xcb);
        EXPECT(gbc.readMem(0xd654), 0x23);
        // CB 23 0371
        gbc.setState(0xb2ec, 0x7927, 0x8c0, 0x8685, 0x98c, 0x1f5c, 0x1, 0x0);
        gbc.writeMem(0xb2ec, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7927);
        EXPECT(gbc.pc(), 0xb2ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ec), 0xcb);
        EXPECT(gbc.readMem(0xb2ed), 0x23);
        // CB 23 0372
        gbc.setState(0xb9c3, 0x8e8f, 0xdac0, 0xa80f, 0x79dc, 0x22e9, 0x1, 0x0);
        gbc.writeMem(0xb9c3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8e8f);
        EXPECT(gbc.pc(), 0xb9c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9c3), 0xcb);
        EXPECT(gbc.readMem(0xb9c4), 0x23);
        // CB 23 0373
        gbc.setState(0x9f9c, 0xee2f, 0xf840, 0x10b0, 0x387f, 0x4b4, 0x0, 0x1);
        gbc.writeMem(0x9f9c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xee2f);
        EXPECT(gbc.pc(), 0x9f9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9c), 0xcb);
        EXPECT(gbc.readMem(0x9f9d), 0x23);
        // CB 23 0374
        gbc.setState(0x505a, 0xf072, 0xd3e0, 0x70d, 0xee6c, 0xb19c, 0x0, 0x1);
        gbc.writeMem(0x505a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xf072);
        EXPECT(gbc.pc(), 0x505c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0375
        gbc.setState(0x82bd, 0xc25, 0xab10, 0x2554, 0xb4ac, 0x86ee, 0x1, 0x1);
        gbc.writeMem(0x82bd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc25);
        EXPECT(gbc.pc(), 0x82bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82bd), 0xcb);
        EXPECT(gbc.readMem(0x82be), 0x23);
        // CB 23 0376
        gbc.setState(0x85b0, 0x2c48, 0xae10, 0x97a, 0x8e25, 0x8fbf, 0x0, 0x1);
        gbc.writeMem(0x85b0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2c48);
        EXPECT(gbc.pc(), 0x85b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b0), 0xcb);
        EXPECT(gbc.readMem(0x85b1), 0x23);
        // CB 23 0377
        gbc.setState(0xbdbd, 0x5884, 0x2ba0, 0x1504, 0x79f5, 0xf24f, 0x1, 0x0);
        gbc.writeMem(0xbdbd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x5884);
        EXPECT(gbc.pc(), 0xbdbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdbd), 0xcb);
        EXPECT(gbc.readMem(0xbdbe), 0x23);
        // CB 23 0378
        gbc.setState(0x97b5, 0x2736, 0xa0c0, 0xc5ee, 0x5185, 0xc29e, 0x1, 0x1);
        gbc.writeMem(0x97b5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2736);
        EXPECT(gbc.pc(), 0x97b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97b5), 0xcb);
        EXPECT(gbc.readMem(0x97b6), 0x23);
        // CB 23 0379
        gbc.setState(0x6528, 0xa5bd, 0xc180, 0xda01, 0x7241, 0x16c3, 0x1, 0x1);
        gbc.writeMem(0x6528, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa5bd);
        EXPECT(gbc.pc(), 0x652a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 037A
        gbc.setState(0xc163, 0xaab8, 0xfae0, 0xc8de, 0xfdd1, 0xf29a, 0x1, 0x0);
        gbc.writeMem(0xc163, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xaab8);
        EXPECT(gbc.pc(), 0xc165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc163), 0xcb);
        EXPECT(gbc.readMem(0xc164), 0x23);
        // CB 23 037B
        gbc.setState(0xb6e8, 0xf164, 0x25e0, 0x7f5d, 0x859f, 0x86d6, 0x0, 0x1);
        gbc.writeMem(0xb6e8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf164);
        EXPECT(gbc.pc(), 0xb6ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e8), 0xcb);
        EXPECT(gbc.readMem(0xb6e9), 0x23);
        // CB 23 037C
        gbc.setState(0xc456, 0x508e, 0xe570, 0xcd04, 0xedd7, 0xde64, 0x0, 0x0);
        gbc.writeMem(0xc456, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x508e);
        EXPECT(gbc.pc(), 0xc458);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc456), 0xcb);
        EXPECT(gbc.readMem(0xc457), 0x23);
        // CB 23 037D
        gbc.setState(0xb2dc, 0x7fb3, 0x1cc0, 0x9c8f, 0xa98b, 0xb808, 0x0, 0x1);
        gbc.writeMem(0xb2dc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x7fb3);
        EXPECT(gbc.pc(), 0xb2de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2dc), 0xcb);
        EXPECT(gbc.readMem(0xb2dd), 0x23);
        // CB 23 037E
        gbc.setState(0x16ca, 0x25d2, 0xc790, 0xb826, 0xef12, 0x4a0e, 0x1, 0x0);
        gbc.writeMem(0x16ca, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x25d2);
        EXPECT(gbc.pc(), 0x16cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 037F
        gbc.setState(0xe8b6, 0x5dfc, 0x4020, 0xd7b6, 0xd497, 0x15a8, 0x1, 0x1);
        gbc.writeMem(0xe8b6, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x5dfc);
        EXPECT(gbc.pc(), 0xe8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b6), 0xcb);
        EXPECT(gbc.readMem(0xe8b7), 0x23);
        // CB 23 0380
        gbc.setState(0x7c2e, 0x51d6, 0x5c20, 0xebdb, 0xd0c3, 0x829d, 0x1, 0x0);
        gbc.writeMem(0x7c2e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x51d6);
        EXPECT(gbc.pc(), 0x7c30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0381
        gbc.setState(0x7efa, 0xa636, 0x6800, 0x5d90, 0xac44, 0xcd3a, 0x0, 0x0);
        gbc.writeMem(0x7efa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xa636);
        EXPECT(gbc.pc(), 0x7efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 0382
        gbc.setState(0xbae7, 0x2b38, 0x4150, 0x7c08, 0x619b, 0x7a5, 0x1, 0x1);
        gbc.writeMem(0xbae7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x2b38);
        EXPECT(gbc.pc(), 0xbae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbae7), 0xcb);
        EXPECT(gbc.readMem(0xbae8), 0x23);
        // CB 23 0383
        gbc.setState(0x5019, 0x3425, 0xa9f0, 0xa3e1, 0xdd7, 0x901e, 0x1, 0x0);
        gbc.writeMem(0x5019, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3425);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0384
        gbc.setState(0xeaed, 0xb0b7, 0xc900, 0xa8fd, 0xdd38, 0x5f28, 0x1, 0x0);
        gbc.writeMem(0xeaed, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb0b7);
        EXPECT(gbc.pc(), 0xeaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaed), 0xcb);
        EXPECT(gbc.readMem(0xeaee), 0x23);
        // CB 23 0385
        gbc.setState(0x71c3, 0xadc3, 0x1f20, 0xc2d0, 0x2ffa, 0xe69, 0x1, 0x0);
        gbc.writeMem(0x71c3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xadc3);
        EXPECT(gbc.pc(), 0x71c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0386
        gbc.setState(0xdd44, 0xbff6, 0x3170, 0xe5af, 0x9b58, 0x62f1, 0x1, 0x1);
        gbc.writeMem(0xdd44, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbff6);
        EXPECT(gbc.pc(), 0xdd46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd44), 0xcb);
        EXPECT(gbc.readMem(0xdd45), 0x23);
        // CB 23 0387
        gbc.setState(0x9ef5, 0x5cc6, 0xb5e0, 0xd38c, 0xac23, 0x77fb, 0x1, 0x0);
        gbc.writeMem(0x9ef5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0x9ef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef5), 0xcb);
        EXPECT(gbc.readMem(0x9ef6), 0x23);
        // CB 23 0388
        gbc.setState(0xd750, 0xaef2, 0xb8b0, 0xa78f, 0x6e1, 0x5d61, 0x0, 0x0);
        gbc.writeMem(0xd750, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaef2);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd750), 0xcb);
        EXPECT(gbc.readMem(0xd751), 0x23);
        // CB 23 0389
        gbc.setState(0xdc86, 0xbf21, 0xe450, 0xbcc6, 0xec0, 0x7375, 0x0, 0x0);
        gbc.writeMem(0xdc86, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xbf21);
        EXPECT(gbc.pc(), 0xdc88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc86), 0xcb);
        EXPECT(gbc.readMem(0xdc87), 0x23);
        // CB 23 038A
        gbc.setState(0xb166, 0xe937, 0x24b0, 0xa1d1, 0x5e53, 0x76f8, 0x1, 0x0);
        gbc.writeMem(0xb166, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe937);
        EXPECT(gbc.pc(), 0xb168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb166), 0xcb);
        EXPECT(gbc.readMem(0xb167), 0x23);
        // CB 23 038B
        gbc.setState(0xcff5, 0x4f5b, 0x780, 0xc127, 0x8609, 0x847a, 0x1, 0x1);
        gbc.writeMem(0xcff5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x4f5b);
        EXPECT(gbc.pc(), 0xcff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcff5), 0xcb);
        EXPECT(gbc.readMem(0xcff6), 0x23);
        // CB 23 038C
        gbc.setState(0x4076, 0x2201, 0x9b30, 0xf36b, 0xfd21, 0xd3ab, 0x0, 0x0);
        gbc.writeMem(0x4076, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x2201);
        EXPECT(gbc.pc(), 0x4078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 038D
        gbc.setState(0xd579, 0xbb39, 0xdc80, 0x718d, 0x8f20, 0xc08b, 0x0, 0x1);
        gbc.writeMem(0xd579, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbb39);
        EXPECT(gbc.pc(), 0xd57b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd579), 0xcb);
        EXPECT(gbc.readMem(0xd57a), 0x23);
        // CB 23 038E
        gbc.setState(0x3f3, 0xcd4c, 0xe8b0, 0xf8ad, 0x1259, 0x5961, 0x1, 0x0);
        gbc.writeMem(0x3f3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xcd4c);
        EXPECT(gbc.pc(), 0x3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 038F
        gbc.setState(0xd5af, 0x7743, 0x5550, 0xd18c, 0x8db0, 0xd2a0, 0x1, 0x1);
        gbc.writeMem(0xd5af, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7743);
        EXPECT(gbc.pc(), 0xd5b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5af), 0xcb);
        EXPECT(gbc.readMem(0xd5b0), 0x23);
        // CB 23 0390
        gbc.setState(0x34ee, 0x81ae, 0x1020, 0x734d, 0x1e9b, 0x8bb9, 0x1, 0x1);
        gbc.writeMem(0x34ee, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x81ae);
        EXPECT(gbc.pc(), 0x34f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0391
        gbc.setState(0x6631, 0xbde2, 0xbb40, 0xa4a3, 0xa1b3, 0xea5b, 0x1, 0x0);
        gbc.writeMem(0x6631, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbde2);
        EXPECT(gbc.pc(), 0x6633);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0392
        gbc.setState(0x1eb4, 0x8278, 0x1270, 0xb85, 0x98f6, 0x1c36, 0x1, 0x0);
        gbc.writeMem(0x1eb4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x8278);
        EXPECT(gbc.pc(), 0x1eb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0393
        gbc.setState(0xb1b7, 0x87aa, 0xc990, 0x3f30, 0xc61d, 0x1905, 0x1, 0x1);
        gbc.writeMem(0xb1b7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x87aa);
        EXPECT(gbc.pc(), 0xb1b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1b7), 0xcb);
        EXPECT(gbc.readMem(0xb1b8), 0x23);
        // CB 23 0394
        gbc.setState(0x8e91, 0x66eb, 0x4c40, 0x960f, 0xf673, 0xedf3, 0x0, 0x1);
        gbc.writeMem(0x8e91, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x66eb);
        EXPECT(gbc.pc(), 0x8e93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e91), 0xcb);
        EXPECT(gbc.readMem(0x8e92), 0x23);
        // CB 23 0395
        gbc.setState(0xb50c, 0xc736, 0xf730, 0xda84, 0x3df4, 0x58a5, 0x1, 0x1);
        gbc.writeMem(0xb50c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc736);
        EXPECT(gbc.pc(), 0xb50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb50c), 0xcb);
        EXPECT(gbc.readMem(0xb50d), 0x23);
        // CB 23 0396
        gbc.setState(0x3a0d, 0x1b13, 0x74b0, 0x5481, 0x2dd1, 0x8601, 0x0, 0x1);
        gbc.writeMem(0x3a0d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1b13);
        EXPECT(gbc.pc(), 0x3a0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 0398
        gbc.setState(0x876c, 0x4fad, 0xd680, 0x3bb8, 0x971b, 0x61d2, 0x1, 0x0);
        gbc.writeMem(0x876c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4fad);
        EXPECT(gbc.pc(), 0x876e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876c), 0xcb);
        EXPECT(gbc.readMem(0x876d), 0x23);
        // CB 23 0399
        gbc.setState(0xb1b8, 0x998a, 0x39d0, 0x575e, 0x4fbd, 0xedb7, 0x0, 0x1);
        gbc.writeMem(0xb1b8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x998a);
        EXPECT(gbc.pc(), 0xb1ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1b8), 0xcb);
        EXPECT(gbc.readMem(0xb1b9), 0x23);
        // CB 23 039A
        gbc.setState(0xdb84, 0xf1e9, 0x8dc0, 0xd808, 0x208d, 0x7563, 0x1, 0x0);
        gbc.writeMem(0xdb84, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xf1e9);
        EXPECT(gbc.pc(), 0xdb86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb84), 0xcb);
        EXPECT(gbc.readMem(0xdb85), 0x23);
        // CB 23 039B
        gbc.setState(0x33a5, 0xa8a9, 0xce80, 0xa1cd, 0xd68f, 0x5a4f, 0x1, 0x1);
        gbc.writeMem(0x33a5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xa8a9);
        EXPECT(gbc.pc(), 0x33a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 039C
        gbc.setState(0xb3cc, 0x2121, 0xff90, 0x2241, 0x5ecf, 0xebda, 0x0, 0x0);
        gbc.writeMem(0xb3cc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2121);
        EXPECT(gbc.pc(), 0xb3ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3cc), 0xcb);
        EXPECT(gbc.readMem(0xb3cd), 0x23);
        // CB 23 039D
        gbc.setState(0x622c, 0x44d3, 0x70f0, 0xb7b1, 0x5fdb, 0x450c, 0x1, 0x1);
        gbc.writeMem(0x622c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x44d3);
        EXPECT(gbc.pc(), 0x622e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 039E
        gbc.setState(0x2246, 0x6d95, 0xa880, 0xcd84, 0x5b9e, 0xad2c, 0x1, 0x0);
        gbc.writeMem(0x2246, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x6d95);
        EXPECT(gbc.pc(), 0x2248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 039F
        gbc.setState(0x6e2e, 0xc399, 0x7f00, 0xd7a8, 0x7cca, 0xc04d, 0x1, 0x0);
        gbc.writeMem(0x6e2e, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x6e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03A0
        gbc.setState(0x4989, 0xe93f, 0xa440, 0x4e08, 0x17e9, 0x9e1d, 0x1, 0x0);
        gbc.writeMem(0x4989, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xe93f);
        EXPECT(gbc.pc(), 0x498b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03A1
        gbc.setState(0x45d9, 0x59a4, 0xc8b0, 0x8dee, 0x73f9, 0xebdb, 0x0, 0x0);
        gbc.writeMem(0x45d9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x59a4);
        EXPECT(gbc.pc(), 0x45db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03A2
        gbc.setState(0x253, 0x44df, 0x15e0, 0x4a62, 0xde75, 0x80f5, 0x1, 0x0);
        gbc.writeMem(0x253, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x44df);
        EXPECT(gbc.pc(), 0x255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03A3
        gbc.setState(0x3150, 0xafe0, 0xee0, 0x734e, 0x189f, 0x2119, 0x0, 0x0);
        gbc.writeMem(0x3150, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xafe0);
        EXPECT(gbc.pc(), 0x3152);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03A4
        gbc.setState(0x9755, 0xdd9a, 0x47f0, 0x8be0, 0xe54f, 0xaa65, 0x1, 0x0);
        gbc.writeMem(0x9755, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdd9a);
        EXPECT(gbc.pc(), 0x9757);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9755), 0xcb);
        EXPECT(gbc.readMem(0x9756), 0x23);
        // CB 23 03A5
        gbc.setState(0x2202, 0x2d1f, 0x9cd0, 0x9d85, 0x4320, 0xf3ac, 0x0, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2d1f);
        EXPECT(gbc.pc(), 0x2204);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03A6
        gbc.setState(0x79e1, 0x7d4c, 0xf130, 0x2d52, 0x48f, 0xebb9, 0x1, 0x1);
        gbc.writeMem(0x79e1, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7d4c);
        EXPECT(gbc.pc(), 0x79e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03A7
        gbc.setState(0xa2aa, 0x1ae8, 0xd350, 0x4755, 0xc550, 0x69be, 0x1, 0x0);
        gbc.writeMem(0xa2aa, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x1ae8);
        EXPECT(gbc.pc(), 0xa2ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2aa), 0xcb);
        EXPECT(gbc.readMem(0xa2ab), 0x23);
        // CB 23 03A8
        gbc.setState(0xe104, 0xbc02, 0xdd80, 0x9dfd, 0x22f, 0x8c19, 0x1, 0x0);
        gbc.writeMem(0xe104, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xbc02);
        EXPECT(gbc.pc(), 0xe106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe104), 0xcb);
        EXPECT(gbc.readMem(0xe105), 0x23);
        // CB 23 03A9
        gbc.setState(0x6eb5, 0x3048, 0x8ee0, 0x4d71, 0x708c, 0xafb0, 0x1, 0x0);
        gbc.writeMem(0x6eb5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3048);
        EXPECT(gbc.pc(), 0x6eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03AA
        gbc.setState(0x560a, 0xe150, 0xd270, 0xfec8, 0xf0c5, 0x8a5f, 0x0, 0x0);
        gbc.writeMem(0x560a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe150);
        EXPECT(gbc.pc(), 0x560c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03AB
        gbc.setState(0xdd13, 0x69a3, 0x9e90, 0x3d14, 0x9390, 0x42ee, 0x0, 0x1);
        gbc.writeMem(0xdd13, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x69a3);
        EXPECT(gbc.pc(), 0xdd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd13), 0xcb);
        EXPECT(gbc.readMem(0xdd14), 0x23);
        // CB 23 03AC
        gbc.setState(0xe2cc, 0x21b5, 0xd6d0, 0x78e3, 0x2892, 0xd637, 0x0, 0x0);
        gbc.writeMem(0xe2cc, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x21b5);
        EXPECT(gbc.pc(), 0xe2ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2cc), 0xcb);
        EXPECT(gbc.readMem(0xe2cd), 0x23);
        // CB 23 03AE
        gbc.setState(0xd2da, 0x3c8, 0x5cb0, 0x2d12, 0x582d, 0x29af, 0x1, 0x1);
        gbc.writeMem(0xd2da, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3c8);
        EXPECT(gbc.pc(), 0xd2dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2da), 0xcb);
        EXPECT(gbc.readMem(0xd2db), 0x23);
        // CB 23 03AF
        gbc.setState(0xa514, 0x9f9e, 0xe160, 0x2312, 0x3809, 0xd7e6, 0x0, 0x1);
        gbc.writeMem(0xa514, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9f9e);
        EXPECT(gbc.pc(), 0xa516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa514), 0xcb);
        EXPECT(gbc.readMem(0xa515), 0x23);
        // CB 23 03B0
        gbc.setState(0x6999, 0x4895, 0xd920, 0x6eeb, 0x97ad, 0x8f8a, 0x1, 0x0);
        gbc.writeMem(0x6999, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4895);
        EXPECT(gbc.pc(), 0x699b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03B2
        gbc.setState(0x2555, 0x9434, 0xf7d0, 0x91a3, 0xdc49, 0x1974, 0x0, 0x1);
        gbc.writeMem(0x2555, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0x2557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03B3
        gbc.setState(0xbfb8, 0x4ce4, 0x17e0, 0x53bb, 0xa63, 0xc596, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4ce4);
        EXPECT(gbc.pc(), 0xbfba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb8), 0xcb);
        EXPECT(gbc.readMem(0xbfb9), 0x23);
        // CB 23 03B4
        gbc.setState(0x380d, 0xf2a3, 0xe3d0, 0x27fb, 0xfcee, 0xed4f, 0x1, 0x1);
        gbc.writeMem(0x380d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0x380f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03B5
        gbc.setState(0x520c, 0xf896, 0xa290, 0xa8f3, 0x76b3, 0xf935, 0x1, 0x1);
        gbc.writeMem(0x520c, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf896);
        EXPECT(gbc.pc(), 0x520e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03B6
        gbc.setState(0xe5df, 0x59be, 0xfe80, 0x1cd3, 0xdaed, 0x6fff, 0x1, 0x0);
        gbc.writeMem(0xe5df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x59be);
        EXPECT(gbc.pc(), 0xe5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5df), 0xcb);
        EXPECT(gbc.readMem(0xe5e0), 0x23);
        // CB 23 03B7
        gbc.setState(0x634b, 0x966f, 0xd520, 0x1a8d, 0xfd28, 0xe289, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x966f);
        EXPECT(gbc.pc(), 0x634d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03B8
        gbc.setState(0x940a, 0x6341, 0xab00, 0x7cbf, 0x7a, 0xab7f, 0x0, 0x0);
        gbc.writeMem(0x940a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x6341);
        EXPECT(gbc.pc(), 0x940c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x940a), 0xcb);
        EXPECT(gbc.readMem(0x940b), 0x23);
        // CB 23 03B9
        gbc.setState(0xe68, 0x6b91, 0x7970, 0x8f93, 0x2be7, 0x38ac, 0x0, 0x0);
        gbc.writeMem(0xe68, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6b91);
        EXPECT(gbc.pc(), 0xe6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03BA
        gbc.setState(0xbd09, 0x953d, 0x52c0, 0xd505, 0xc7e9, 0x8673, 0x0, 0x0);
        gbc.writeMem(0xbd09, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x953d);
        EXPECT(gbc.pc(), 0xbd0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd09), 0xcb);
        EXPECT(gbc.readMem(0xbd0a), 0x23);
        // CB 23 03BB
        gbc.setState(0x93df, 0x3721, 0xcee0, 0xde18, 0x2b98, 0x83c4, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x3721);
        EXPECT(gbc.pc(), 0x93e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93df), 0xcb);
        EXPECT(gbc.readMem(0x93e0), 0x23);
        // CB 23 03BD
        gbc.setState(0xebbd, 0x3059, 0x6ca0, 0x13f4, 0x2085, 0x885d, 0x0, 0x0);
        gbc.writeMem(0xebbd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3059);
        EXPECT(gbc.pc(), 0xebbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebbd), 0xcb);
        EXPECT(gbc.readMem(0xebbe), 0x23);
        // CB 23 03BE
        gbc.setState(0x3ed8, 0x8613, 0x4c0, 0xf7ea, 0xdc1b, 0xd607, 0x1, 0x0);
        gbc.writeMem(0x3ed8, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8613);
        EXPECT(gbc.pc(), 0x3eda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03BF
        gbc.setState(0x1920, 0xf126, 0x13c0, 0xb428, 0x8df2, 0x21f7, 0x0, 0x1);
        gbc.writeMem(0x1920, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xf126);
        EXPECT(gbc.pc(), 0x1922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03C0
        gbc.setState(0x2efe, 0x7c82, 0xf9a0, 0xbf81, 0x9f86, 0xb9e4, 0x1, 0x0);
        gbc.writeMem(0x2efe, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7c82);
        EXPECT(gbc.pc(), 0x2f00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03C1
        gbc.setState(0x9082, 0x3cad, 0xb800, 0xaa5d, 0xcc01, 0x549e, 0x0, 0x1);
        gbc.writeMem(0x9082, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x3cad);
        EXPECT(gbc.pc(), 0x9084);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9082), 0xcb);
        EXPECT(gbc.readMem(0x9083), 0x23);
        // CB 23 03C2
        gbc.setState(0x1016, 0x6571, 0xd350, 0x4a7b, 0xc802, 0x8089, 0x1, 0x1);
        gbc.writeMem(0x1016, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6571);
        EXPECT(gbc.pc(), 0x1018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03C4
        gbc.setState(0xbd87, 0x6053, 0xa400, 0x32eb, 0x2a89, 0x685d, 0x0, 0x1);
        gbc.writeMem(0xbd87, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6053);
        EXPECT(gbc.pc(), 0xbd89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd87), 0xcb);
        EXPECT(gbc.readMem(0xbd88), 0x23);
        // CB 23 03C5
        gbc.setState(0x38f, 0x4af9, 0x1690, 0xffce, 0xe94e, 0x6957, 0x0, 0x0);
        gbc.writeMem(0x38f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x4af9);
        EXPECT(gbc.pc(), 0x391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03C6
        gbc.setState(0x5c86, 0x1229, 0x3e0, 0x6bf6, 0x342e, 0x6e0e, 0x1, 0x0);
        gbc.writeMem(0x5c86, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1229);
        EXPECT(gbc.pc(), 0x5c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03C7
        gbc.setState(0x6f6f, 0xae90, 0x1280, 0xf6d, 0xb7a4, 0x9baa, 0x0, 0x0);
        gbc.writeMem(0x6f6f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xae90);
        EXPECT(gbc.pc(), 0x6f71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03C8
        gbc.setState(0x833a, 0x7b47, 0xe330, 0xaec7, 0xc391, 0x58d5, 0x1, 0x0);
        gbc.writeMem(0x833a, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7b47);
        EXPECT(gbc.pc(), 0x833c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833a), 0xcb);
        EXPECT(gbc.readMem(0x833b), 0x23);
        // CB 23 03C9
        gbc.setState(0x3f63, 0x43ed, 0x5820, 0x27ce, 0x3843, 0x74b9, 0x1, 0x1);
        gbc.writeMem(0x3f63, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x43ed);
        EXPECT(gbc.pc(), 0x3f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03CA
        gbc.setState(0x50a9, 0xdf7d, 0xff80, 0xfac7, 0x5f06, 0x79ce, 0x0, 0x0);
        gbc.writeMem(0x50a9, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdf7d);
        EXPECT(gbc.pc(), 0x50ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03CB
        gbc.setState(0xe3d7, 0xfbfe, 0x2af0, 0x7975, 0xea2e, 0xce66, 0x1, 0x0);
        gbc.writeMem(0xe3d7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xfbfe);
        EXPECT(gbc.pc(), 0xe3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d7), 0xcb);
        EXPECT(gbc.readMem(0xe3d8), 0x23);
        // CB 23 03CC
        gbc.setState(0xaf6d, 0x9595, 0xc570, 0xbe3d, 0x8aa2, 0x7751, 0x1, 0x1);
        gbc.writeMem(0xaf6d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9595);
        EXPECT(gbc.pc(), 0xaf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6d), 0xcb);
        EXPECT(gbc.readMem(0xaf6e), 0x23);
        // CB 23 03CD
        gbc.setState(0x9e47, 0x4a4f, 0x8550, 0x7c45, 0x3b4e, 0xd250, 0x0, 0x0);
        gbc.writeMem(0x9e47, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x4a4f);
        EXPECT(gbc.pc(), 0x9e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e47), 0xcb);
        EXPECT(gbc.readMem(0x9e48), 0x23);
        // CB 23 03CE
        gbc.setState(0xc27f, 0x93c5, 0x21c0, 0x2453, 0xff58, 0x4d63, 0x1, 0x1);
        gbc.writeMem(0xc27f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x93c5);
        EXPECT(gbc.pc(), 0xc281);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27f), 0xcb);
        EXPECT(gbc.readMem(0xc280), 0x23);
        // CB 23 03CF
        gbc.setState(0x47ee, 0x3cd7, 0x72e0, 0xc069, 0x4d6, 0xaedb, 0x0, 0x1);
        gbc.writeMem(0x47ee, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x3cd7);
        EXPECT(gbc.pc(), 0x47f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03D0
        gbc.setState(0xc5b3, 0x83e2, 0xeb90, 0x6290, 0x504f, 0x24c6, 0x1, 0x1);
        gbc.writeMem(0xc5b3, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x83e2);
        EXPECT(gbc.pc(), 0xc5b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b3), 0xcb);
        EXPECT(gbc.readMem(0xc5b4), 0x23);
        // CB 23 03D1
        gbc.setState(0x39a4, 0xcab5, 0x7a50, 0x8772, 0xefc9, 0xbce1, 0x1, 0x1);
        gbc.writeMem(0x39a4, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcab5);
        EXPECT(gbc.pc(), 0x39a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03D2
        gbc.setState(0x7a75, 0xe703, 0x4700, 0xf451, 0x4b68, 0x7913, 0x0, 0x0);
        gbc.writeMem(0x7a75, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe703);
        EXPECT(gbc.pc(), 0x7a77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03D4
        gbc.setState(0x17bf, 0xbfb2, 0xbcf0, 0x6916, 0x2349, 0x3e00, 0x1, 0x1);
        gbc.writeMem(0x17bf, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xbfb2);
        EXPECT(gbc.pc(), 0x17c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03D5
        gbc.setState(0xb5c5, 0xba1, 0x4660, 0xfc54, 0x2bed, 0x54ed, 0x0, 0x1);
        gbc.writeMem(0xb5c5, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xba1);
        EXPECT(gbc.pc(), 0xb5c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5c5), 0xcb);
        EXPECT(gbc.readMem(0xb5c6), 0x23);
        // CB 23 03D6
        gbc.setState(0xd876, 0x9c75, 0x86e0, 0x18c, 0x2a26, 0x97da, 0x1, 0x0);
        gbc.writeMem(0xd876, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0xd878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd876), 0xcb);
        EXPECT(gbc.readMem(0xd877), 0x23);
        // CB 23 03D7
        gbc.setState(0x4fdd, 0x539f, 0x74f0, 0xfd96, 0x235d, 0x2859, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0x4fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03D8
        gbc.setState(0xec0b, 0x88e8, 0x2a20, 0x9b0f, 0xddc8, 0xddec, 0x1, 0x0);
        gbc.writeMem(0xec0b, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x88e8);
        EXPECT(gbc.pc(), 0xec0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0b), 0xcb);
        EXPECT(gbc.readMem(0xec0c), 0x23);
        // CB 23 03D9
        gbc.setState(0xa478, 0x95a5, 0x240, 0x4066, 0xd759, 0x3e68, 0x1, 0x1);
        gbc.writeMem(0xa478, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x95a5);
        EXPECT(gbc.pc(), 0xa47a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa478), 0xcb);
        EXPECT(gbc.readMem(0xa479), 0x23);
        // CB 23 03DA
        gbc.setState(0x760f, 0x183b, 0x2230, 0x27b5, 0xae0c, 0xe122, 0x1, 0x1);
        gbc.writeMem(0x760f, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x183b);
        EXPECT(gbc.pc(), 0x7611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03DB
        gbc.setState(0x3a10, 0x27bf, 0x19f0, 0xcceb, 0x21cf, 0x1f9d, 0x1, 0x1);
        gbc.writeMem(0x3a10, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x27bf);
        EXPECT(gbc.pc(), 0x3a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03DC
        gbc.setState(0x4d7d, 0x2ec, 0x14e0, 0x2e2a, 0xfff5, 0xf3b1, 0x0, 0x1);
        gbc.writeMem(0x4d7d, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ec);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03DD
        gbc.setState(0x40ec, 0xea98, 0x42b0, 0x6a24, 0xb83e, 0x6c0d, 0x0, 0x1);
        gbc.writeMem(0x40ec, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xea98);
        EXPECT(gbc.pc(), 0x40ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03DE
        gbc.setState(0xaa80, 0x9d58, 0x4480, 0x1e81, 0x41c3, 0x9c84, 0x1, 0x0);
        gbc.writeMem(0xaa80, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9d58);
        EXPECT(gbc.pc(), 0xaa82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa80), 0xcb);
        EXPECT(gbc.readMem(0xaa81), 0x23);
        // CB 23 03DF
        gbc.setState(0xba84, 0xa352, 0x2e70, 0x1157, 0xd45b, 0x49bf, 0x0, 0x0);
        gbc.writeMem(0xba84, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa352);
        EXPECT(gbc.pc(), 0xba86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba84), 0xcb);
        EXPECT(gbc.readMem(0xba85), 0x23);
        // CB 23 03E0
        gbc.setState(0xe7c7, 0xf73f, 0x91c0, 0xb270, 0x8190, 0xa49, 0x1, 0x0);
        gbc.writeMem(0xe7c7, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf73f);
        EXPECT(gbc.pc(), 0xe7c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c7), 0xcb);
        EXPECT(gbc.readMem(0xe7c8), 0x23);
        // CB 23 03E2
        gbc.setState(0x8759, 0xdf9e, 0x6d10, 0xbe1b, 0x6f90, 0x1a7c, 0x0, 0x1);
        gbc.writeMem(0x8759, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xdf9e);
        EXPECT(gbc.pc(), 0x875b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8759), 0xcb);
        EXPECT(gbc.readMem(0x875a), 0x23);
        // CB 23 03E3
        gbc.setState(0x5505, 0x45de, 0x7250, 0xde98, 0x3180, 0x3dff, 0x1, 0x0);
        gbc.writeMem(0x5505, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x45de);
        EXPECT(gbc.pc(), 0x5507);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 23 03E4
        gbc.setState(0x6d42, 0x7062, 0x6ae0, 0xb4a2, 0xd937, 0x4e9, 0x1, 0x1);
        gbc.writeMem(0x6d42, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x7062);
        EXPECT(gbc.pc(), 0x6d44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03E5
        gbc.setState(0xce45, 0xf9cc, 0xdff0, 0xc0aa, 0xb51d, 0xd061, 0x1, 0x0);
        gbc.writeMem(0xce45, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf9cc);
        EXPECT(gbc.pc(), 0xce47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce45), 0xcb);
        EXPECT(gbc.readMem(0xce46), 0x23);
        // CB 23 03E6
        gbc.setState(0x1a0, 0x16eb, 0x4a70, 0x7200, 0xdd19, 0x40e4, 0x0, 0x1);
        gbc.writeMem(0x1a0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x16eb);
        EXPECT(gbc.pc(), 0x1a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 23 03E7
        gbc.setState(0xa1f0, 0x1c93, 0xa3e0, 0xad43, 0x7a1a, 0x46e6, 0x1, 0x0);
        gbc.writeMem(0xa1f0, { 0xcb, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1c93);
        EXPECT(gbc.pc(), 0xa1f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1f0), 0xcb);
        EXPECT(gbc.readMem(0xa1f1), 0x23);
    }
}
#endif
