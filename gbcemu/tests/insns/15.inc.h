    TEST(gbcemu, opcode_15) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 15 0000
        gbc.setState(0x7679, 0x197e, 0xd920, 0x5338, 0x660c, 0xfedb, 0x1, 0x0);
        gbc.writeMem(0x7679, { 0x15 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x197e, gbc.sp());
        EXPECT(0x767a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0001
        gbc.setState(0xe3e2, 0x3f80, 0xc350, 0x76e2, 0x4c01, 0x8d68, 0x1, 0x0);
        gbc.writeMem(0xe3e2, { 0x15 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f80, gbc.sp());
        EXPECT(0xe3e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe3e2));
        // 15 0002
        gbc.setState(0xd8b4, 0x16e2, 0x3880, 0xc0db, 0x4bb, 0x5aea, 0x0, 0x1);
        gbc.writeMem(0xd8b4, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0xd8b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd8b4));
        // 15 0003
        gbc.setState(0xc166, 0x3dff, 0x7860, 0x5fbc, 0xd94f, 0xe100, 0x0, 0x1);
        gbc.writeMem(0xc166, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3dff, gbc.sp());
        EXPECT(0xc167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc166));
        // 15 0004
        gbc.setState(0x996, 0xe9f0, 0xac00, 0x7721, 0x2688, 0x46de, 0x1, 0x1);
        gbc.writeMem(0x996, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe9f0, gbc.sp());
        EXPECT(0x997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0005
        gbc.setState(0x48d5, 0x2e94, 0xdb20, 0x63, 0x8c0a, 0xa9d0, 0x0, 0x0);
        gbc.writeMem(0x48d5, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2e94, gbc.sp());
        EXPECT(0x48d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0006
        gbc.setState(0x9663, 0x13c8, 0x3110, 0x7b68, 0xebac, 0xe031, 0x1, 0x1);
        gbc.writeMem(0x9663, { 0x15 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x13c8, gbc.sp());
        EXPECT(0x9664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9663));
        // 15 0007
        gbc.setState(0x4faf, 0xf2af, 0xad0, 0x7637, 0xed55, 0xb5d7, 0x0, 0x0);
        gbc.writeMem(0x4faf, { 0x15 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf2af, gbc.sp());
        EXPECT(0x4fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0008
        gbc.setState(0x3aa0, 0xc0bf, 0x8140, 0x8bae, 0xbb6c, 0x75a5, 0x1, 0x0);
        gbc.writeMem(0x3aa0, { 0x15 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0x3aa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0009
        gbc.setState(0xed22, 0x21f5, 0xd8d0, 0x9052, 0x765b, 0x18da, 0x0, 0x1);
        gbc.writeMem(0xed22, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x21f5, gbc.sp());
        EXPECT(0xed23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xed22));
        // 15 000A
        gbc.setState(0x73c6, 0x3543, 0x45e0, 0x88a6, 0x47e1, 0x1924, 0x0, 0x0);
        gbc.writeMem(0x73c6, { 0x15 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3543, gbc.sp());
        EXPECT(0x73c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 000B
        gbc.setState(0xc4b0, 0xab8a, 0x9410, 0x579b, 0x39bc, 0x5ab0, 0x1, 0x1);
        gbc.writeMem(0xc4b0, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xab8a, gbc.sp());
        EXPECT(0xc4b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc4b0));
        // 15 000C
        gbc.setState(0x87a1, 0x8d0d, 0xbac0, 0xd798, 0x6ac0, 0x7385, 0x1, 0x1);
        gbc.writeMem(0x87a1, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8d0d, gbc.sp());
        EXPECT(0x87a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x87a1));
        // 15 000D
        gbc.setState(0x54de, 0x7f2f, 0x1260, 0x441, 0x930c, 0xf298, 0x0, 0x1);
        gbc.writeMem(0x54de, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7f2f, gbc.sp());
        EXPECT(0x54df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 000F
        gbc.setState(0x9a9b, 0x1b08, 0x180, 0x54c, 0x7467, 0x8bb7, 0x0, 0x0);
        gbc.writeMem(0x9a9b, { 0x15 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1b08, gbc.sp());
        EXPECT(0x9a9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9a9b));
        // 15 0010
        gbc.setState(0x122b, 0xf713, 0xcfa0, 0x978e, 0x3f15, 0xf01a, 0x0, 0x1);
        gbc.writeMem(0x122b, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf713, gbc.sp());
        EXPECT(0x122c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0011
        gbc.setState(0xdc44, 0xc183, 0xa960, 0xe642, 0x613f, 0xf28a, 0x0, 0x1);
        gbc.writeMem(0xdc44, { 0x15 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc183, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdc44));
        // 15 0012
        gbc.setState(0xc5e1, 0x82ab, 0x5cd0, 0xd9fc, 0xc3c, 0xc93f, 0x0, 0x0);
        gbc.writeMem(0xc5e1, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x82ab, gbc.sp());
        EXPECT(0xc5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc5e1));
        // 15 0013
        gbc.setState(0xe557, 0x164e, 0x32f0, 0x55d3, 0xf9ad, 0x4326, 0x1, 0x0);
        gbc.writeMem(0xe557, { 0x15 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x164e, gbc.sp());
        EXPECT(0xe558, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe557));
        // 15 0014
        gbc.setState(0x51b7, 0x4da5, 0x3e60, 0xc690, 0x4a66, 0x79b8, 0x1, 0x1);
        gbc.writeMem(0x51b7, { 0x15 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4da5, gbc.sp());
        EXPECT(0x51b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0015
        gbc.setState(0x297f, 0x1499, 0xb660, 0xbc2f, 0x9468, 0xca6b, 0x1, 0x1);
        gbc.writeMem(0x297f, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1499, gbc.sp());
        EXPECT(0x2980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0016
        gbc.setState(0x6db9, 0x464a, 0x7b40, 0x67f6, 0x55ee, 0xaa61, 0x1, 0x1);
        gbc.writeMem(0x6db9, { 0x15 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x464a, gbc.sp());
        EXPECT(0x6dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0017
        gbc.setState(0x882c, 0xa91f, 0x6980, 0x8de7, 0x147, 0x9b8e, 0x1, 0x0);
        gbc.writeMem(0x882c, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa91f, gbc.sp());
        EXPECT(0x882d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x882c));
        // 15 0018
        gbc.setState(0x1e85, 0x8e61, 0x260, 0x3b9e, 0x7ffd, 0x70af, 0x0, 0x1);
        gbc.writeMem(0x1e85, { 0x15 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e61, gbc.sp());
        EXPECT(0x1e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0019
        gbc.setState(0xe1f2, 0xdddd, 0x3920, 0x9a9a, 0xf33, 0x377a, 0x0, 0x1);
        gbc.writeMem(0xe1f2, { 0x15 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xdddd, gbc.sp());
        EXPECT(0xe1f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe1f2));
        // 15 001A
        gbc.setState(0xd228, 0x1256, 0xa3c0, 0xa370, 0xdc95, 0xeb69, 0x1, 0x0);
        gbc.writeMem(0xd228, { 0x15 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1256, gbc.sp());
        EXPECT(0xd229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd228));
        // 15 001B
        gbc.setState(0xb7e, 0x9446, 0x7730, 0x365, 0x8927, 0x8476, 0x1, 0x1);
        gbc.writeMem(0xb7e, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9446, gbc.sp());
        EXPECT(0xb7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 001C
        gbc.setState(0xafd9, 0x84e0, 0x8800, 0x2ee1, 0xda74, 0x2590, 0x1, 0x0);
        gbc.writeMem(0xafd9, { 0x15 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x84e0, gbc.sp());
        EXPECT(0xafda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xafd9));
        // 15 001D
        gbc.setState(0x4566, 0xf42e, 0x2490, 0xcdfb, 0x341d, 0x2c15, 0x0, 0x1);
        gbc.writeMem(0x4566, { 0x15 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf42e, gbc.sp());
        EXPECT(0x4567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 001E
        gbc.setState(0xe804, 0xf97, 0xae10, 0x5ab7, 0x1cb9, 0x60bf, 0x1, 0x1);
        gbc.writeMem(0xe804, { 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xe805, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe804));
        // 15 001F
        gbc.setState(0xa688, 0x4bf1, 0x2ab0, 0x1e55, 0x2a7b, 0x3d86, 0x0, 0x1);
        gbc.writeMem(0xa688, { 0x15 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x4bf1, gbc.sp());
        EXPECT(0xa689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa688));
        // 15 0020
        gbc.setState(0xd476, 0x7cf3, 0x6400, 0x58e, 0x3705, 0xfe91, 0x1, 0x0);
        gbc.writeMem(0xd476, { 0x15 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7cf3, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd476));
        // 15 0021
        gbc.setState(0xe93b, 0xbe8c, 0xdf70, 0x6470, 0x58bc, 0xa583, 0x0, 0x1);
        gbc.writeMem(0xe93b, { 0x15 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0xe93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe93b));
        // 15 0022
        gbc.setState(0x8234, 0x361c, 0xaba0, 0x2f7d, 0x7cd9, 0x867f, 0x1, 0x1);
        gbc.writeMem(0x8234, { 0x15 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x361c, gbc.sp());
        EXPECT(0x8235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8234));
        // 15 0023
        gbc.setState(0x7183, 0x7b91, 0x97a0, 0xe5d3, 0x74c3, 0xec54, 0x0, 0x1);
        gbc.writeMem(0x7183, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7b91, gbc.sp());
        EXPECT(0x7184, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0024
        gbc.setState(0xdfdf, 0x3ab1, 0xd120, 0x842a, 0x83a9, 0x26bd, 0x1, 0x0);
        gbc.writeMem(0xdfdf, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3ab1, gbc.sp());
        EXPECT(0xdfe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfdf));
        // 15 0025
        gbc.setState(0xe0f8, 0x1bb6, 0x9370, 0x1a52, 0xb3ca, 0xaa6b, 0x1, 0x0);
        gbc.writeMem(0xe0f8, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1bb6, gbc.sp());
        EXPECT(0xe0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe0f8));
        // 15 0026
        gbc.setState(0xec61, 0xeb37, 0x8a30, 0xffc5, 0x6752, 0xb993, 0x1, 0x1);
        gbc.writeMem(0xec61, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeb37, gbc.sp());
        EXPECT(0xec62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xec61));
        // 15 0027
        gbc.setState(0x48dc, 0x77e0, 0xf950, 0xb1e5, 0xb65a, 0xe018, 0x0, 0x1);
        gbc.writeMem(0x48dc, { 0x15 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x77e0, gbc.sp());
        EXPECT(0x48dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0028
        gbc.setState(0x26f7, 0xb1b1, 0x8ec0, 0xa801, 0x38eb, 0xe7df, 0x0, 0x1);
        gbc.writeMem(0x26f7, { 0x15 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb1b1, gbc.sp());
        EXPECT(0x26f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0029
        gbc.setState(0xd58c, 0xd0ce, 0x80e0, 0xfd7e, 0xb1c3, 0x9ded, 0x1, 0x1);
        gbc.writeMem(0xd58c, { 0x15 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd0ce, gbc.sp());
        EXPECT(0xd58d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd58c));
        // 15 002A
        gbc.setState(0x86d9, 0xef25, 0xc430, 0x3d05, 0x4583, 0xa589, 0x1, 0x0);
        gbc.writeMem(0x86d9, { 0x15 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xef25, gbc.sp());
        EXPECT(0x86da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x86d9));
        // 15 002B
        gbc.setState(0xa0e5, 0xca3b, 0xa420, 0xab62, 0xb2b0, 0xd798, 0x1, 0x0);
        gbc.writeMem(0xa0e5, { 0x15 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xca3b, gbc.sp());
        EXPECT(0xa0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa0e5));
        // 15 002C
        gbc.setState(0xcc7a, 0x4bf8, 0xf060, 0x5d37, 0xaefe, 0xca9f, 0x0, 0x0);
        gbc.writeMem(0xcc7a, { 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4bf8, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcc7a));
        // 15 002D
        gbc.setState(0xd05, 0x5b3, 0x7720, 0x3692, 0x120c, 0xd762, 0x1, 0x1);
        gbc.writeMem(0xd05, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5b3, gbc.sp());
        EXPECT(0xd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 002E
        gbc.setState(0x4016, 0xac3d, 0x4720, 0xd0b3, 0x850d, 0xe725, 0x0, 0x0);
        gbc.writeMem(0x4016, { 0x15 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac3d, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 002F
        gbc.setState(0xfda, 0x87b8, 0x2d40, 0x7f49, 0xb994, 0x33c8, 0x0, 0x0);
        gbc.writeMem(0xfda, { 0x15 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x87b8, gbc.sp());
        EXPECT(0xfdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0030
        gbc.setState(0x908b, 0xe5cd, 0xf6f0, 0x38d2, 0xac8a, 0x15c5, 0x0, 0x1);
        gbc.writeMem(0x908b, { 0x15 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x908b));
        // 15 0031
        gbc.setState(0x95d0, 0x9b19, 0x5760, 0x8723, 0x3cdc, 0x6b12, 0x1, 0x1);
        gbc.writeMem(0x95d0, { 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9b19, gbc.sp());
        EXPECT(0x95d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x95d0));
        // 15 0032
        gbc.setState(0xe26a, 0x7ed4, 0x5180, 0xa500, 0xfa09, 0x2d83, 0x1, 0x1);
        gbc.writeMem(0xe26a, { 0x15 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0xe26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe26a));
        // 15 0033
        gbc.setState(0x3d5a, 0x2371, 0xd8a0, 0xa943, 0xe9d3, 0x6623, 0x0, 0x1);
        gbc.writeMem(0x3d5a, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2371, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0035
        gbc.setState(0x24ab, 0xdab1, 0x6f70, 0x8385, 0x87c4, 0xd312, 0x1, 0x1);
        gbc.writeMem(0x24ab, { 0x15 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xdab1, gbc.sp());
        EXPECT(0x24ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0037
        gbc.setState(0xe1b7, 0x3a7b, 0x4e70, 0x8cef, 0x1352, 0x2277, 0x1, 0x1);
        gbc.writeMem(0xe1b7, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x3a7b, gbc.sp());
        EXPECT(0xe1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe1b7));
        // 15 0038
        gbc.setState(0xb6f7, 0xea5c, 0x7010, 0x852e, 0xba06, 0x4d50, 0x1, 0x0);
        gbc.writeMem(0xb6f7, { 0x15 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xea5c, gbc.sp());
        EXPECT(0xb6f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb6f7));
        // 15 0039
        gbc.setState(0x9af1, 0xf37d, 0x5470, 0x422b, 0x4527, 0x2df, 0x0, 0x0);
        gbc.writeMem(0x9af1, { 0x15 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf37d, gbc.sp());
        EXPECT(0x9af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9af1));
        // 15 003A
        gbc.setState(0x4a3f, 0x7508, 0x3b0, 0x97bd, 0xaffd, 0x9c18, 0x0, 0x0);
        gbc.writeMem(0x4a3f, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7508, gbc.sp());
        EXPECT(0x4a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 003B
        gbc.setState(0x767, 0xeb29, 0xae50, 0x965d, 0xf210, 0x13b7, 0x0, 0x0);
        gbc.writeMem(0x767, { 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeb29, gbc.sp());
        EXPECT(0x768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 003C
        gbc.setState(0xe9bd, 0x1618, 0xcb20, 0x836b, 0x3f29, 0x931b, 0x0, 0x0);
        gbc.writeMem(0xe9bd, { 0x15 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1618, gbc.sp());
        EXPECT(0xe9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe9bd));
        // 15 003D
        gbc.setState(0xbf17, 0xdb3c, 0x6650, 0x11f1, 0xf19a, 0xc1ba, 0x0, 0x1);
        gbc.writeMem(0xbf17, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xdb3c, gbc.sp());
        EXPECT(0xbf18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbf17));
        // 15 003E
        gbc.setState(0xd95f, 0x556e, 0x4ea0, 0x59d7, 0xcc85, 0x64b1, 0x0, 0x0);
        gbc.writeMem(0xd95f, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0xd960, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd95f));
        // 15 003F
        gbc.setState(0x1b06, 0xc44c, 0x9ca0, 0x3e3e, 0x7a2a, 0xd4a3, 0x1, 0x0);
        gbc.writeMem(0x1b06, { 0x15 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc44c, gbc.sp());
        EXPECT(0x1b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0040
        gbc.setState(0x1842, 0xf596, 0x7760, 0xa6d2, 0x3252, 0x3f6d, 0x1, 0x1);
        gbc.writeMem(0x1842, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf596, gbc.sp());
        EXPECT(0x1843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0041
        gbc.setState(0x28ff, 0xcfe6, 0x26d0, 0xd1c1, 0xa9fd, 0x976d, 0x1, 0x1);
        gbc.writeMem(0x28ff, { 0x15 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcfe6, gbc.sp());
        EXPECT(0x2900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0042
        gbc.setState(0x1761, 0x1a74, 0x3c90, 0x5cf4, 0x3e3, 0x4d89, 0x0, 0x1);
        gbc.writeMem(0x1761, { 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1a74, gbc.sp());
        EXPECT(0x1762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0043
        gbc.setState(0xae1e, 0x1398, 0x3aa0, 0xcc6f, 0xe7a7, 0xb75e, 0x1, 0x0);
        gbc.writeMem(0xae1e, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x1398, gbc.sp());
        EXPECT(0xae1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xae1e));
        // 15 0044
        gbc.setState(0xdd85, 0x50d2, 0xc1b0, 0xd613, 0x3ccf, 0xd383, 0x0, 0x0);
        gbc.writeMem(0xdd85, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x50d2, gbc.sp());
        EXPECT(0xdd86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd85));
        // 15 0045
        gbc.setState(0x1ccd, 0xbb81, 0x9790, 0x6e1b, 0xa474, 0x4c2a, 0x1, 0x1);
        gbc.writeMem(0x1ccd, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xbb81, gbc.sp());
        EXPECT(0x1cce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0046
        gbc.setState(0x55ca, 0x3e04, 0xaab0, 0xcd03, 0x464e, 0x3380, 0x0, 0x1);
        gbc.writeMem(0x55ca, { 0x15 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3e04, gbc.sp());
        EXPECT(0x55cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0047
        gbc.setState(0x88bd, 0xd7c0, 0xe840, 0xd4dc, 0x4d74, 0xe142, 0x0, 0x1);
        gbc.writeMem(0x88bd, { 0x15 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd7c0, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x88bd));
        // 15 0048
        gbc.setState(0x78ec, 0x988c, 0x6990, 0x42ac, 0xff66, 0x417d, 0x0, 0x0);
        gbc.writeMem(0x78ec, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x988c, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0049
        gbc.setState(0x9ddb, 0xa4ef, 0xb1f0, 0x96cf, 0x3145, 0xee29, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa4ef, gbc.sp());
        EXPECT(0x9ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9ddb));
        // 15 004A
        gbc.setState(0x17ca, 0x5d2b, 0x3430, 0xb278, 0xa2e6, 0x8699, 0x0, 0x0);
        gbc.writeMem(0x17ca, { 0x15 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5d2b, gbc.sp());
        EXPECT(0x17cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 004B
        gbc.setState(0x2e38, 0x1407, 0x9090, 0x6830, 0x1c8c, 0x58b5, 0x0, 0x0);
        gbc.writeMem(0x2e38, { 0x15 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1407, gbc.sp());
        EXPECT(0x2e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 004C
        gbc.setState(0x45e4, 0xfb6b, 0xe440, 0x17ba, 0x308a, 0x8d59, 0x1, 0x0);
        gbc.writeMem(0x45e4, { 0x15 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xfb6b, gbc.sp());
        EXPECT(0x45e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 004D
        gbc.setState(0x4cd9, 0xf6b7, 0x38a0, 0x1470, 0xa9ba, 0x625d, 0x1, 0x0);
        gbc.writeMem(0x4cd9, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf6b7, gbc.sp());
        EXPECT(0x4cda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 004E
        gbc.setState(0xda5a, 0x4f07, 0xe940, 0x6de, 0x8ec3, 0x2b1d, 0x1, 0x1);
        gbc.writeMem(0xda5a, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4f07, gbc.sp());
        EXPECT(0xda5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xda5a));
        // 15 004F
        gbc.setState(0xc2c3, 0xd413, 0xac90, 0xa72d, 0x1295, 0xf993, 0x0, 0x0);
        gbc.writeMem(0xc2c3, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd413, gbc.sp());
        EXPECT(0xc2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc2c3));
        // 15 0050
        gbc.setState(0x4e96, 0x2ea5, 0xc400, 0x532f, 0x3cb5, 0xd468, 0x1, 0x1);
        gbc.writeMem(0x4e96, { 0x15 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2ea5, gbc.sp());
        EXPECT(0x4e97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0051
        gbc.setState(0x403b, 0x28de, 0xe340, 0x5b, 0x4d90, 0x3977, 0x1, 0x1);
        gbc.writeMem(0x403b, { 0x15 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x28de, gbc.sp());
        EXPECT(0x403c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0052
        gbc.setState(0x4a3, 0x4c42, 0x7c00, 0xbdca, 0xa048, 0x3110, 0x1, 0x0);
        gbc.writeMem(0x4a3, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4c42, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0053
        gbc.setState(0xc435, 0x7452, 0x9420, 0x7be6, 0x4ae5, 0x9e84, 0x1, 0x0);
        gbc.writeMem(0xc435, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0xc436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc435));
        // 15 0054
        gbc.setState(0x740, 0x3f46, 0xae0, 0x8d98, 0x8f68, 0xcd5e, 0x1, 0x1);
        gbc.writeMem(0x740, { 0x15 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3f46, gbc.sp());
        EXPECT(0x741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0055
        gbc.setState(0xb0a0, 0xe29f, 0x1210, 0x8b85, 0x9b96, 0x627f, 0x1, 0x0);
        gbc.writeMem(0xb0a0, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe29f, gbc.sp());
        EXPECT(0xb0a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb0a0));
        // 15 0056
        gbc.setState(0xe2d0, 0x9ed8, 0x2b10, 0x6a9b, 0xa015, 0x3dd4, 0x0, 0x0);
        gbc.writeMem(0xe2d0, { 0x15 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9ed8, gbc.sp());
        EXPECT(0xe2d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe2d0));
        // 15 0057
        gbc.setState(0xe27f, 0x33b6, 0x2c50, 0x3a4d, 0x5e4b, 0xa78e, 0x0, 0x0);
        gbc.writeMem(0xe27f, { 0x15 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe27f));
        // 15 0058
        gbc.setState(0x8f29, 0x9577, 0xb710, 0xdbeb, 0x51ca, 0xdca7, 0x0, 0x0);
        gbc.writeMem(0x8f29, { 0x15 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9577, gbc.sp());
        EXPECT(0x8f2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8f29));
        // 15 0059
        gbc.setState(0x63a, 0x9177, 0xd5b0, 0x5a6a, 0x29e1, 0xa4aa, 0x0, 0x0);
        gbc.writeMem(0x63a, { 0x15 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9177, gbc.sp());
        EXPECT(0x63b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 005A
        gbc.setState(0xc663, 0x9479, 0xa880, 0x3cc9, 0x34bc, 0x4f98, 0x0, 0x0);
        gbc.writeMem(0xc663, { 0x15 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9479, gbc.sp());
        EXPECT(0xc664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc663));
        // 15 005B
        gbc.setState(0x5eab, 0x4c6a, 0x1db0, 0xc354, 0xce7c, 0x5eff, 0x1, 0x1);
        gbc.writeMem(0x5eab, { 0x15 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4c6a, gbc.sp());
        EXPECT(0x5eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 005C
        gbc.setState(0x4793, 0x5611, 0x7690, 0xa61c, 0xe058, 0x6993, 0x0, 0x1);
        gbc.writeMem(0x4793, { 0x15 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5611, gbc.sp());
        EXPECT(0x4794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 005D
        gbc.setState(0x6d70, 0xc9fc, 0xb220, 0x7c41, 0xc5db, 0x4327, 0x1, 0x0);
        gbc.writeMem(0x6d70, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xc9fc, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 005E
        gbc.setState(0x57a2, 0xa120, 0x72b0, 0xbb71, 0xb3b8, 0x4fa7, 0x0, 0x1);
        gbc.writeMem(0x57a2, { 0x15 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa120, gbc.sp());
        EXPECT(0x57a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 005F
        gbc.setState(0xb189, 0xac87, 0xc6a0, 0xa5e1, 0xaadb, 0xeab4, 0x1, 0x0);
        gbc.writeMem(0xb189, { 0x15 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xac87, gbc.sp());
        EXPECT(0xb18a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb189));
        // 15 0060
        gbc.setState(0x131c, 0x7626, 0x1b30, 0x93d2, 0xe82e, 0x51b0, 0x0, 0x1);
        gbc.writeMem(0x131c, { 0x15 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7626, gbc.sp());
        EXPECT(0x131d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0061
        gbc.setState(0xcf22, 0x99de, 0xb370, 0x1bf7, 0x459d, 0x6d9e, 0x1, 0x1);
        gbc.writeMem(0xcf22, { 0x15 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x99de, gbc.sp());
        EXPECT(0xcf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf22));
        // 15 0062
        gbc.setState(0xe0a7, 0x2832, 0x5890, 0xa92, 0xf858, 0x5117, 0x1, 0x1);
        gbc.writeMem(0xe0a7, { 0x15 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2832, gbc.sp());
        EXPECT(0xe0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe0a7));
        // 15 0063
        gbc.setState(0xe7ad, 0xe6d1, 0x9cd0, 0x666e, 0xdbee, 0x5e5c, 0x1, 0x1);
        gbc.writeMem(0xe7ad, { 0x15 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe6d1, gbc.sp());
        EXPECT(0xe7ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe7ad));
        // 15 0064
        gbc.setState(0xc257, 0x9b5a, 0xda60, 0x8d99, 0x511, 0xa808, 0x1, 0x1);
        gbc.writeMem(0xc257, { 0x15 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9b5a, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc257));
        // 15 0065
        gbc.setState(0x4ac9, 0x3c36, 0xd770, 0xe522, 0xb0e7, 0x4a8d, 0x0, 0x1);
        gbc.writeMem(0x4ac9, { 0x15 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3c36, gbc.sp());
        EXPECT(0x4aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0066
        gbc.setState(0x3699, 0xfc8f, 0x2820, 0x5d95, 0x95c5, 0xce89, 0x1, 0x1);
        gbc.writeMem(0x3699, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfc8f, gbc.sp());
        EXPECT(0x369a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0067
        gbc.setState(0xdb2c, 0x7231, 0xc8b0, 0x3140, 0x5db2, 0xa8a8, 0x0, 0x1);
        gbc.writeMem(0xdb2c, { 0x15 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x7231, gbc.sp());
        EXPECT(0xdb2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb2c));
        // 15 0068
        gbc.setState(0x4c11, 0x191e, 0xf4b0, 0x9c32, 0x2721, 0x5ed4, 0x1, 0x0);
        gbc.writeMem(0x4c11, { 0x15 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x191e, gbc.sp());
        EXPECT(0x4c12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0069
        gbc.setState(0xe2f2, 0x8554, 0x25b0, 0x9b3c, 0xf1ed, 0x95d5, 0x1, 0x1);
        gbc.writeMem(0xe2f2, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8554, gbc.sp());
        EXPECT(0xe2f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe2f2));
        // 15 006B
        gbc.setState(0x1145, 0x19f0, 0x4c00, 0x1604, 0xf95e, 0x51c2, 0x1, 0x1);
        gbc.writeMem(0x1145, { 0x15 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x19f0, gbc.sp());
        EXPECT(0x1146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 006C
        gbc.setState(0x8376, 0xd342, 0x6920, 0xbf57, 0x6d50, 0x2563, 0x0, 0x0);
        gbc.writeMem(0x8376, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd342, gbc.sp());
        EXPECT(0x8377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8376));
        // 15 006D
        gbc.setState(0xc715, 0x4ba0, 0x1120, 0x6740, 0x659d, 0x91e6, 0x0, 0x1);
        gbc.writeMem(0xc715, { 0x15 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x4ba0, gbc.sp());
        EXPECT(0xc716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc715));
        // 15 006E
        gbc.setState(0x5a7d, 0x4497, 0x3700, 0x161b, 0x8de1, 0x6880, 0x0, 0x1);
        gbc.writeMem(0x5a7d, { 0x15 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4497, gbc.sp());
        EXPECT(0x5a7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 006F
        gbc.setState(0x35d5, 0x1422, 0x6710, 0xfc50, 0x2a7, 0x3a90, 0x0, 0x1);
        gbc.writeMem(0x35d5, { 0x15 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1422, gbc.sp());
        EXPECT(0x35d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0070
        gbc.setState(0x5d5d, 0x56c2, 0x7e10, 0x399a, 0x19f9, 0x1a91, 0x1, 0x1);
        gbc.writeMem(0x5d5d, { 0x15 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x56c2, gbc.sp());
        EXPECT(0x5d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0071
        gbc.setState(0x14d5, 0x9676, 0xf6f0, 0x29ad, 0xf5e5, 0xc970, 0x1, 0x1);
        gbc.writeMem(0x14d5, { 0x15 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9676, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0072
        gbc.setState(0x514f, 0xc73a, 0xf5c0, 0x8f59, 0x139c, 0x8fcd, 0x0, 0x0);
        gbc.writeMem(0x514f, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc73a, gbc.sp());
        EXPECT(0x5150, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0073
        gbc.setState(0xc1c3, 0x3e68, 0x400, 0x5c1, 0xb414, 0x4934, 0x1, 0x0);
        gbc.writeMem(0xc1c3, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3e68, gbc.sp());
        EXPECT(0xc1c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc1c3));
        // 15 0074
        gbc.setState(0xa73c, 0xc12c, 0x87a0, 0xc513, 0x73b6, 0x330a, 0x1, 0x0);
        gbc.writeMem(0xa73c, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc12c, gbc.sp());
        EXPECT(0xa73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa73c));
        // 15 0075
        gbc.setState(0x6495, 0x3517, 0x1110, 0x692b, 0x89dc, 0x8761, 0x1, 0x0);
        gbc.writeMem(0x6495, { 0x15 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3517, gbc.sp());
        EXPECT(0x6496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0076
        gbc.setState(0x48ce, 0x9588, 0xd1b0, 0x459f, 0xf574, 0xc744, 0x1, 0x0);
        gbc.writeMem(0x48ce, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9588, gbc.sp());
        EXPECT(0x48cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0077
        gbc.setState(0xb7ce, 0xc8cf, 0xbe40, 0x14f8, 0x6417, 0x8125, 0x1, 0x1);
        gbc.writeMem(0xb7ce, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc8cf, gbc.sp());
        EXPECT(0xb7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb7ce));
        // 15 0078
        gbc.setState(0x8ae3, 0xf5f8, 0xbb00, 0x640a, 0xb32, 0xfd3e, 0x0, 0x1);
        gbc.writeMem(0x8ae3, { 0x15 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf5f8, gbc.sp());
        EXPECT(0x8ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ae3));
        // 15 0079
        gbc.setState(0xbcab, 0xa052, 0x5cc0, 0x2ebd, 0xc3b6, 0xe8af, 0x0, 0x0);
        gbc.writeMem(0xbcab, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xa052, gbc.sp());
        EXPECT(0xbcac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbcab));
        // 15 007A
        gbc.setState(0xe798, 0x4f63, 0xb960, 0x9756, 0xfcae, 0xc509, 0x0, 0x0);
        gbc.writeMem(0xe798, { 0x15 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4f63, gbc.sp());
        EXPECT(0xe799, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe798));
        // 15 007B
        gbc.setState(0xd898, 0xe7c0, 0xb110, 0xd86d, 0x7277, 0xf9e2, 0x0, 0x0);
        gbc.writeMem(0xd898, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7c0, gbc.sp());
        EXPECT(0xd899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd898));
        // 15 007C
        gbc.setState(0x8b6f, 0xa945, 0x95f0, 0x95bb, 0xbcbe, 0x8eba, 0x0, 0x0);
        gbc.writeMem(0x8b6f, { 0x15 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xa945, gbc.sp());
        EXPECT(0x8b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b6f));
        // 15 007D
        gbc.setState(0x876d, 0xab97, 0x9770, 0x41d9, 0x9ed, 0x4b6e, 0x0, 0x0);
        gbc.writeMem(0x876d, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xab97, gbc.sp());
        EXPECT(0x876e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x876d));
        // 15 007F
        gbc.setState(0x5273, 0x3470, 0x50f0, 0x9162, 0xb643, 0xe8e2, 0x1, 0x0);
        gbc.writeMem(0x5273, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3470, gbc.sp());
        EXPECT(0x5274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0080
        gbc.setState(0x1102, 0x551d, 0x2c30, 0x84b4, 0xbe85, 0xdae5, 0x0, 0x0);
        gbc.writeMem(0x1102, { 0x15 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x551d, gbc.sp());
        EXPECT(0x1103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0081
        gbc.setState(0x4d8b, 0xac, 0x53b0, 0x28e1, 0x3e5d, 0x3a70, 0x0, 0x0);
        gbc.writeMem(0x4d8b, { 0x15 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xac, gbc.sp());
        EXPECT(0x4d8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0083
        gbc.setState(0x4fc, 0x3a6c, 0x2480, 0xab35, 0x3660, 0xb9b2, 0x1, 0x1);
        gbc.writeMem(0x4fc, { 0x15 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3a6c, gbc.sp());
        EXPECT(0x4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0084
        gbc.setState(0xe9ac, 0xfdff, 0x9420, 0xec90, 0x5534, 0x8d96, 0x1, 0x1);
        gbc.writeMem(0xe9ac, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfdff, gbc.sp());
        EXPECT(0xe9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe9ac));
        // 15 0085
        gbc.setState(0x99aa, 0x504f, 0x4050, 0xb25f, 0xb962, 0x6fbc, 0x1, 0x0);
        gbc.writeMem(0x99aa, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x504f, gbc.sp());
        EXPECT(0x99ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x99aa));
        // 15 0086
        gbc.setState(0xa9df, 0x19de, 0x8930, 0xa24f, 0xf1ac, 0xca9d, 0x0, 0x1);
        gbc.writeMem(0xa9df, { 0x15 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x19de, gbc.sp());
        EXPECT(0xa9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa9df));
        // 15 0087
        gbc.setState(0x639d, 0x8c5, 0x9fa0, 0xeac4, 0xd2b1, 0x8c0b, 0x1, 0x0);
        gbc.writeMem(0x639d, { 0x15 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8c5, gbc.sp());
        EXPECT(0x639e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0088
        gbc.setState(0xad78, 0xad9a, 0x69e0, 0x4e7a, 0x65b4, 0x428e, 0x1, 0x1);
        gbc.writeMem(0xad78, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xad9a, gbc.sp());
        EXPECT(0xad79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xad78));
        // 15 0089
        gbc.setState(0x674c, 0x98d8, 0xc090, 0xcf3c, 0x1c2c, 0x8b04, 0x0, 0x1);
        gbc.writeMem(0x674c, { 0x15 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x98d8, gbc.sp());
        EXPECT(0x674d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 008A
        gbc.setState(0x5446, 0x381a, 0x29e0, 0x25e4, 0x5f75, 0x7149, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0x15 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x381a, gbc.sp());
        EXPECT(0x5447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 008B
        gbc.setState(0x2a88, 0xdd4b, 0x3ce0, 0xb075, 0x127b, 0xaa67, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdd4b, gbc.sp());
        EXPECT(0x2a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 008C
        gbc.setState(0x769a, 0xd835, 0x6060, 0x2818, 0xf069, 0xf792, 0x0, 0x1);
        gbc.writeMem(0x769a, { 0x15 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd835, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 008D
        gbc.setState(0x1070, 0x8606, 0x7e90, 0x384a, 0x633e, 0x37fe, 0x0, 0x0);
        gbc.writeMem(0x1070, { 0x15 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8606, gbc.sp());
        EXPECT(0x1071, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 008E
        gbc.setState(0x83db, 0x8a56, 0x9890, 0xb6f5, 0x4d8c, 0xdefc, 0x0, 0x0);
        gbc.writeMem(0x83db, { 0x15 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8a56, gbc.sp());
        EXPECT(0x83dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x83db));
        // 15 008F
        gbc.setState(0x8dec, 0x125a, 0xd930, 0xeceb, 0x42d3, 0x2d7d, 0x1, 0x0);
        gbc.writeMem(0x8dec, { 0x15 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x125a, gbc.sp());
        EXPECT(0x8ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8dec));
        // 15 0090
        gbc.setState(0x88f, 0xc616, 0x21c0, 0xfb3d, 0xccbb, 0x7a29, 0x1, 0x0);
        gbc.writeMem(0x88f, { 0x15 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc616, gbc.sp());
        EXPECT(0x890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0091
        gbc.setState(0x651f, 0xd15c, 0xd1e0, 0x6cef, 0xb12b, 0x8e90, 0x0, 0x1);
        gbc.writeMem(0x651f, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd15c, gbc.sp());
        EXPECT(0x6520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0092
        gbc.setState(0x63c5, 0xdc52, 0xbd90, 0x1b8b, 0xf503, 0x60fc, 0x1, 0x1);
        gbc.writeMem(0x63c5, { 0x15 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0x63c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0093
        gbc.setState(0x3977, 0x94df, 0x6900, 0xf46, 0xe73e, 0x23f6, 0x1, 0x1);
        gbc.writeMem(0x3977, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0x3978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0094
        gbc.setState(0x7add, 0x4987, 0x9800, 0x83be, 0x1ec8, 0xb43b, 0x1, 0x0);
        gbc.writeMem(0x7add, { 0x15 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4987, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0095
        gbc.setState(0x3e28, 0xb0d3, 0x4130, 0xaf76, 0xb23, 0xfb04, 0x1, 0x0);
        gbc.writeMem(0x3e28, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb0d3, gbc.sp());
        EXPECT(0x3e29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0096
        gbc.setState(0xd5e3, 0x45e3, 0xad80, 0x4c4f, 0xedb3, 0x7146, 0x0, 0x0);
        gbc.writeMem(0xd5e3, { 0x15 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x45e3, gbc.sp());
        EXPECT(0xd5e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd5e3));
        // 15 0097
        gbc.setState(0x86e4, 0xd3e9, 0x3780, 0xaca, 0x996b, 0x7cec, 0x0, 0x1);
        gbc.writeMem(0x86e4, { 0x15 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd3e9, gbc.sp());
        EXPECT(0x86e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x86e4));
        // 15 0098
        gbc.setState(0x4604, 0xce38, 0xe260, 0x2254, 0x39d1, 0x557, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0x15 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xce38, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0099
        gbc.setState(0xa38a, 0x510c, 0x8780, 0x33d0, 0x8d24, 0x741f, 0x1, 0x1);
        gbc.writeMem(0xa38a, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x510c, gbc.sp());
        EXPECT(0xa38b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa38a));
        // 15 009A
        gbc.setState(0x7b6, 0xf2a1, 0xb100, 0x7d86, 0xe3b1, 0xd6b5, 0x0, 0x1);
        gbc.writeMem(0x7b6, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf2a1, gbc.sp());
        EXPECT(0x7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 009B
        gbc.setState(0x6c55, 0x69e7, 0xd750, 0x7232, 0x4091, 0x1445, 0x1, 0x0);
        gbc.writeMem(0x6c55, { 0x15 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x69e7, gbc.sp());
        EXPECT(0x6c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 009C
        gbc.setState(0xd9bf, 0x8ea8, 0x80d0, 0x7d1b, 0xc6d5, 0x13d1, 0x1, 0x1);
        gbc.writeMem(0xd9bf, { 0x15 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8ea8, gbc.sp());
        EXPECT(0xd9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd9bf));
        // 15 009D
        gbc.setState(0x592, 0x6383, 0x1c60, 0x17a0, 0x94ad, 0x4671, 0x1, 0x1);
        gbc.writeMem(0x592, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6383, gbc.sp());
        EXPECT(0x593, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 009E
        gbc.setState(0x4d43, 0xed37, 0x26b0, 0xa19, 0x14f4, 0x1b58, 0x0, 0x0);
        gbc.writeMem(0x4d43, { 0x15 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0x4d44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 009F
        gbc.setState(0x308e, 0xc815, 0x5810, 0xc02d, 0x55fd, 0x3873, 0x0, 0x0);
        gbc.writeMem(0x308e, { 0x15 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc815, gbc.sp());
        EXPECT(0x308f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00A0
        gbc.setState(0xde22, 0x7045, 0xaf60, 0xc110, 0xc29f, 0x3f18, 0x1, 0x0);
        gbc.writeMem(0xde22, { 0x15 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7045, gbc.sp());
        EXPECT(0xde23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xde22));
        // 15 00A1
        gbc.setState(0xe431, 0x91e8, 0xefa0, 0xec32, 0x50a7, 0x8218, 0x1, 0x1);
        gbc.writeMem(0xe431, { 0x15 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x91e8, gbc.sp());
        EXPECT(0xe432, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe431));
        // 15 00A2
        gbc.setState(0x1149, 0xbc8e, 0xe790, 0xf883, 0xed9c, 0xc2e7, 0x1, 0x0);
        gbc.writeMem(0x1149, { 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xbc8e, gbc.sp());
        EXPECT(0x114a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00A3
        gbc.setState(0x8ae0, 0x21c8, 0x8a90, 0x5c78, 0x446d, 0x6ba8, 0x1, 0x1);
        gbc.writeMem(0x8ae0, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x21c8, gbc.sp());
        EXPECT(0x8ae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ae0));
        // 15 00A4
        gbc.setState(0x8740, 0x73d2, 0x6d0, 0xe9d2, 0x846d, 0xf0c, 0x1, 0x1);
        gbc.writeMem(0x8740, { 0x15 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0x8741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8740));
        // 15 00A5
        gbc.setState(0x9f50, 0xcac9, 0x2230, 0x339a, 0x2de8, 0xc0d, 0x0, 0x1);
        gbc.writeMem(0x9f50, { 0x15 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcac9, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9f50));
        // 15 00A6
        gbc.setState(0x46a1, 0xd7f9, 0x1230, 0xdebb, 0xf40f, 0x3d01, 0x0, 0x1);
        gbc.writeMem(0x46a1, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd7f9, gbc.sp());
        EXPECT(0x46a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00A7
        gbc.setState(0x7f8d, 0x11f6, 0x61d0, 0x9445, 0xc79c, 0x7c4c, 0x1, 0x1);
        gbc.writeMem(0x7f8d, { 0x15 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x11f6, gbc.sp());
        EXPECT(0x7f8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00A8
        gbc.setState(0xc6ca, 0xf732, 0xccc0, 0x121a, 0x6d0e, 0xc9c6, 0x0, 0x0);
        gbc.writeMem(0xc6ca, { 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf732, gbc.sp());
        EXPECT(0xc6cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc6ca));
        // 15 00A9
        gbc.setState(0xdfa8, 0x8e73, 0xdf00, 0x7c74, 0xe2c6, 0x1756, 0x1, 0x1);
        gbc.writeMem(0xdfa8, { 0x15 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8e73, gbc.sp());
        EXPECT(0xdfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfa8));
        // 15 00AA
        gbc.setState(0x144, 0xda4a, 0x9370, 0xcb44, 0x8637, 0xb1f0, 0x1, 0x1);
        gbc.writeMem(0x144, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xda4a, gbc.sp());
        EXPECT(0x145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00AB
        gbc.setState(0xdb57, 0x7c15, 0xe750, 0x5ec0, 0x5388, 0x98b8, 0x1, 0x0);
        gbc.writeMem(0xdb57, { 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7c15, gbc.sp());
        EXPECT(0xdb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb57));
        // 15 00AC
        gbc.setState(0xd35f, 0x6d79, 0x3ff0, 0x5ded, 0x150a, 0x9613, 0x1, 0x1);
        gbc.writeMem(0xd35f, { 0x15 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6d79, gbc.sp());
        EXPECT(0xd360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd35f));
        // 15 00AD
        gbc.setState(0x145a, 0x4e1d, 0x6d60, 0xd33f, 0x1286, 0x2c17, 0x1, 0x0);
        gbc.writeMem(0x145a, { 0x15 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00AE
        gbc.setState(0x433d, 0x9f41, 0xbf40, 0x9950, 0x438, 0xacf6, 0x0, 0x1);
        gbc.writeMem(0x433d, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9f41, gbc.sp());
        EXPECT(0x433e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00AF
        gbc.setState(0xe3e0, 0xb21f, 0x48c0, 0x4bfd, 0x71c0, 0x1f6a, 0x0, 0x1);
        gbc.writeMem(0xe3e0, { 0x15 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb21f, gbc.sp());
        EXPECT(0xe3e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe3e0));
        // 15 00B0
        gbc.setState(0x4089, 0x3680, 0x6ac0, 0xd634, 0x74b6, 0x77ce, 0x0, 0x1);
        gbc.writeMem(0x4089, { 0x15 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x3680, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00B2
        gbc.setState(0x87d3, 0xd210, 0x9140, 0x431f, 0xb353, 0x6975, 0x1, 0x1);
        gbc.writeMem(0x87d3, { 0x15 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd210, gbc.sp());
        EXPECT(0x87d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x87d3));
        // 15 00B3
        gbc.setState(0xe13a, 0x36d0, 0x4e20, 0xf96c, 0x5cc7, 0x5b9f, 0x1, 0x0);
        gbc.writeMem(0xe13a, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x36d0, gbc.sp());
        EXPECT(0xe13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe13a));
        // 15 00B4
        gbc.setState(0x5f97, 0xfb71, 0x8090, 0x639, 0x75e, 0x938b, 0x1, 0x1);
        gbc.writeMem(0x5f97, { 0x15 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfb71, gbc.sp());
        EXPECT(0x5f98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00B5
        gbc.setState(0x391, 0x4a8b, 0x9ff0, 0x47f7, 0x8cfe, 0xf203, 0x0, 0x0);
        gbc.writeMem(0x391, { 0x15 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x4a8b, gbc.sp());
        EXPECT(0x392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00B6
        gbc.setState(0xdc87, 0xa5c7, 0x5670, 0x3ca0, 0x85ec, 0x1a41, 0x0, 0x0);
        gbc.writeMem(0xdc87, { 0x15 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa5c7, gbc.sp());
        EXPECT(0xdc88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdc87));
        // 15 00B7
        gbc.setState(0x71, 0x8809, 0xb280, 0x8103, 0xf968, 0x6a5d, 0x0, 0x0);
        gbc.writeMem(0x71, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0x72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00B8
        gbc.setState(0x248, 0x71d7, 0x3fd0, 0xfc84, 0x58b2, 0xc280, 0x1, 0x1);
        gbc.writeMem(0x248, { 0x15 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x71d7, gbc.sp());
        EXPECT(0x249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00B9
        gbc.setState(0xbced, 0x2b5d, 0xe910, 0x184c, 0xc997, 0xdce5, 0x0, 0x1);
        gbc.writeMem(0xbced, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2b5d, gbc.sp());
        EXPECT(0xbcee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbced));
        // 15 00BA
        gbc.setState(0xc3cd, 0x930f, 0xaec0, 0x95fa, 0x876d, 0x4659, 0x0, 0x1);
        gbc.writeMem(0xc3cd, { 0x15 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc3cd));
        // 15 00BB
        gbc.setState(0xa164, 0xd6f4, 0x4540, 0xe227, 0x28ed, 0x62ce, 0x0, 0x0);
        gbc.writeMem(0xa164, { 0x15 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd6f4, gbc.sp());
        EXPECT(0xa165, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa164));
        // 15 00BC
        gbc.setState(0xae14, 0x56e4, 0x9080, 0xde3a, 0x9296, 0x3bee, 0x0, 0x0);
        gbc.writeMem(0xae14, { 0x15 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x56e4, gbc.sp());
        EXPECT(0xae15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xae14));
        // 15 00BD
        gbc.setState(0x11fc, 0xd139, 0x6540, 0xeaad, 0x436, 0xe8c, 0x0, 0x0);
        gbc.writeMem(0x11fc, { 0x15 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd139, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00BF
        gbc.setState(0xa815, 0xc74c, 0x3190, 0xcb36, 0x9d99, 0x8b0f, 0x1, 0x0);
        gbc.writeMem(0xa815, { 0x15 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc74c, gbc.sp());
        EXPECT(0xa816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa815));
        // 15 00C0
        gbc.setState(0x3a3a, 0xa4c0, 0x1630, 0xa8c3, 0xfdee, 0xab0e, 0x1, 0x1);
        gbc.writeMem(0x3a3a, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa4c0, gbc.sp());
        EXPECT(0x3a3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00C1
        gbc.setState(0x1828, 0x869e, 0x3b20, 0x8da8, 0x41ff, 0xec0a, 0x0, 0x1);
        gbc.writeMem(0x1828, { 0x15 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x869e, gbc.sp());
        EXPECT(0x1829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00C2
        gbc.setState(0xafce, 0x8184, 0x8ad0, 0x3848, 0xb65d, 0xdfd8, 0x0, 0x1);
        gbc.writeMem(0xafce, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8184, gbc.sp());
        EXPECT(0xafcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xafce));
        // 15 00C4
        gbc.setState(0xb81e, 0x2860, 0x2ae0, 0x6dc2, 0xc8b5, 0xddb4, 0x0, 0x1);
        gbc.writeMem(0xb81e, { 0x15 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2860, gbc.sp());
        EXPECT(0xb81f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb81e));
        // 15 00C5
        gbc.setState(0x2a93, 0x1ee1, 0xfa60, 0xf367, 0x8cf0, 0xb32a, 0x1, 0x0);
        gbc.writeMem(0x2a93, { 0x15 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1ee1, gbc.sp());
        EXPECT(0x2a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00C6
        gbc.setState(0x2e2d, 0x8f1e, 0xf600, 0x84ba, 0xf764, 0x3bfa, 0x0, 0x0);
        gbc.writeMem(0x2e2d, { 0x15 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8f1e, gbc.sp());
        EXPECT(0x2e2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00C7
        gbc.setState(0xcca2, 0x7666, 0x350, 0x4eeb, 0x5179, 0xdcc, 0x0, 0x0);
        gbc.writeMem(0xcca2, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7666, gbc.sp());
        EXPECT(0xcca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcca2));
        // 15 00C8
        gbc.setState(0xa433, 0xdd54, 0x650, 0x5340, 0xacee, 0xa8ce, 0x0, 0x1);
        gbc.writeMem(0xa433, { 0x15 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xdd54, gbc.sp());
        EXPECT(0xa434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa433));
        // 15 00C9
        gbc.setState(0x8675, 0xb737, 0x8f80, 0x3edb, 0x6063, 0x8514, 0x0, 0x1);
        gbc.writeMem(0x8675, { 0x15 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xb737, gbc.sp());
        EXPECT(0x8676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8675));
        // 15 00CA
        gbc.setState(0xe27a, 0x6e20, 0x2220, 0x55c6, 0x97ee, 0x8bcd, 0x0, 0x0);
        gbc.writeMem(0xe27a, { 0x15 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6e20, gbc.sp());
        EXPECT(0xe27b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe27a));
        // 15 00CB
        gbc.setState(0x2df1, 0xce44, 0x300, 0x20d8, 0xf785, 0xf6a1, 0x1, 0x1);
        gbc.writeMem(0x2df1, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xce44, gbc.sp());
        EXPECT(0x2df2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00CC
        gbc.setState(0xd4a, 0x41b6, 0x9430, 0xf219, 0xf367, 0x4c48, 0x1, 0x1);
        gbc.writeMem(0xd4a, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x41b6, gbc.sp());
        EXPECT(0xd4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00CD
        gbc.setState(0xef08, 0x7c37, 0x9a50, 0xcf1b, 0xf6c1, 0xe141, 0x0, 0x1);
        gbc.writeMem(0xef08, { 0x15 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x7c37, gbc.sp());
        EXPECT(0xef09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xef08));
        // 15 00CE
        gbc.setState(0x2004, 0x9d5e, 0x3dd0, 0xb43b, 0xd14a, 0x392b, 0x1, 0x0);
        gbc.writeMem(0x2004, { 0x15 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9d5e, gbc.sp());
        EXPECT(0x2005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00CF
        gbc.setState(0x2ae7, 0xf0d8, 0x7f00, 0x81c7, 0xe016, 0x85b1, 0x1, 0x0);
        gbc.writeMem(0x2ae7, { 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf0d8, gbc.sp());
        EXPECT(0x2ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00D0
        gbc.setState(0x2e10, 0xfa74, 0x57c0, 0xfdf5, 0xfe41, 0x7719, 0x1, 0x0);
        gbc.writeMem(0x2e10, { 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfa74, gbc.sp());
        EXPECT(0x2e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00D1
        gbc.setState(0x81a0, 0x4b99, 0xa6a0, 0xb5d6, 0xa1b2, 0x67b3, 0x0, 0x1);
        gbc.writeMem(0x81a0, { 0x15 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4b99, gbc.sp());
        EXPECT(0x81a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x81a0));
        // 15 00D2
        gbc.setState(0xebed, 0xfccd, 0xdd00, 0x1b56, 0x8180, 0xc0ec, 0x0, 0x1);
        gbc.writeMem(0xebed, { 0x15 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfccd, gbc.sp());
        EXPECT(0xebee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xebed));
        // 15 00D3
        gbc.setState(0x3942, 0x4a98, 0x16e0, 0xfdda, 0xfa91, 0xa4c1, 0x0, 0x0);
        gbc.writeMem(0x3942, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4a98, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00D4
        gbc.setState(0xaae1, 0xd19e, 0x770, 0x1d38, 0x6985, 0xdaa7, 0x1, 0x0);
        gbc.writeMem(0xaae1, { 0x15 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd19e, gbc.sp());
        EXPECT(0xaae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaae1));
        // 15 00D5
        gbc.setState(0xa823, 0xf03b, 0x1e00, 0x5e48, 0x541e, 0xd5f2, 0x0, 0x0);
        gbc.writeMem(0xa823, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf03b, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa823));
        // 15 00D6
        gbc.setState(0x55c8, 0x3b86, 0xe2d0, 0xdc9d, 0x375d, 0x263c, 0x1, 0x0);
        gbc.writeMem(0x55c8, { 0x15 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3b86, gbc.sp());
        EXPECT(0x55c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00D7
        gbc.setState(0xba00, 0x46a8, 0xd8f0, 0xc2ea, 0x2290, 0x32f3, 0x1, 0x0);
        gbc.writeMem(0xba00, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x46a8, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xba00));
        // 15 00D8
        gbc.setState(0x82c5, 0xb501, 0x9360, 0xc430, 0x2b21, 0x5e82, 0x0, 0x1);
        gbc.writeMem(0x82c5, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xb501, gbc.sp());
        EXPECT(0x82c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x82c5));
        // 15 00D9
        gbc.setState(0xd9a0, 0x23d9, 0x4500, 0x275a, 0x52fb, 0x8e15, 0x1, 0x1);
        gbc.writeMem(0xd9a0, { 0x15 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0xd9a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd9a0));
        // 15 00DA
        gbc.setState(0x28dc, 0xc26f, 0xc320, 0xbb2d, 0x3dbc, 0xa715, 0x1, 0x1);
        gbc.writeMem(0x28dc, { 0x15 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xc26f, gbc.sp());
        EXPECT(0x28dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00DB
        gbc.setState(0x4540, 0xc857, 0xb0e0, 0x51e6, 0x8e46, 0x2929, 0x1, 0x0);
        gbc.writeMem(0x4540, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc857, gbc.sp());
        EXPECT(0x4541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00DC
        gbc.setState(0xd7f7, 0x5f68, 0xe1a0, 0x6111, 0x9786, 0xa49, 0x1, 0x1);
        gbc.writeMem(0xd7f7, { 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5f68, gbc.sp());
        EXPECT(0xd7f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd7f7));
        // 15 00DD
        gbc.setState(0x1ac9, 0xecdd, 0x55a0, 0x931c, 0x60d2, 0x29b1, 0x1, 0x1);
        gbc.writeMem(0x1ac9, { 0x15 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xecdd, gbc.sp());
        EXPECT(0x1aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00DE
        gbc.setState(0x1e0a, 0x425b, 0x8b20, 0x7da4, 0x4a53, 0xa00d, 0x0, 0x0);
        gbc.writeMem(0x1e0a, { 0x15 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x425b, gbc.sp());
        EXPECT(0x1e0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00DF
        gbc.setState(0xa698, 0x3187, 0xa9c0, 0xac38, 0x4724, 0x9895, 0x1, 0x0);
        gbc.writeMem(0xa698, { 0x15 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0xa699, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa698));
        // 15 00E0
        gbc.setState(0x4091, 0x8547, 0x8eb0, 0x6fdb, 0x815d, 0x29e2, 0x1, 0x0);
        gbc.writeMem(0x4091, { 0x15 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8547, gbc.sp());
        EXPECT(0x4092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E1
        gbc.setState(0x3ed8, 0xf43f, 0x830, 0xdf6a, 0x415, 0xa9d1, 0x1, 0x0);
        gbc.writeMem(0x3ed8, { 0x15 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf43f, gbc.sp());
        EXPECT(0x3ed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E2
        gbc.setState(0xccb1, 0x6741, 0xf980, 0x20cc, 0x5bce, 0x905, 0x0, 0x0);
        gbc.writeMem(0xccb1, { 0x15 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0xccb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xccb1));
        // 15 00E3
        gbc.setState(0x7375, 0x551b, 0xd760, 0xc6e3, 0x4fae, 0x22b4, 0x0, 0x0);
        gbc.writeMem(0x7375, { 0x15 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x7376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00E4
        gbc.setState(0xe1cd, 0x23d7, 0xe530, 0xdb51, 0x287b, 0x33b2, 0x1, 0x1);
        gbc.writeMem(0xe1cd, { 0x15 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x23d7, gbc.sp());
        EXPECT(0xe1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe1cd));
        // 15 00E5
        gbc.setState(0x3d48, 0xc1ee, 0x4210, 0x5f80, 0x32ee, 0x510f, 0x0, 0x1);
        gbc.writeMem(0x3d48, { 0x15 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xc1ee, gbc.sp());
        EXPECT(0x3d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E6
        gbc.setState(0x564d, 0xa76d, 0x7bb0, 0x5ee0, 0x80b2, 0x21d4, 0x0, 0x0);
        gbc.writeMem(0x564d, { 0x15 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa76d, gbc.sp());
        EXPECT(0x564e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E7
        gbc.setState(0x71bd, 0x5483, 0x7310, 0xf6d8, 0x4d12, 0x3837, 0x0, 0x1);
        gbc.writeMem(0x71bd, { 0x15 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5483, gbc.sp());
        EXPECT(0x71be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E8
        gbc.setState(0x1fe3, 0x78ef, 0xd3d0, 0xff27, 0x6f26, 0x5d08, 0x1, 0x1);
        gbc.writeMem(0x1fe3, { 0x15 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x78ef, gbc.sp());
        EXPECT(0x1fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00E9
        gbc.setState(0xd1f8, 0xe872, 0xee00, 0xa4ab, 0x27c1, 0x9268, 0x0, 0x0);
        gbc.writeMem(0xd1f8, { 0x15 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe872, gbc.sp());
        EXPECT(0xd1f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd1f8));
        // 15 00EA
        gbc.setState(0x516c, 0xea00, 0x2020, 0x2fe, 0xe549, 0xe8e4, 0x0, 0x0);
        gbc.writeMem(0x516c, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xea00, gbc.sp());
        EXPECT(0x516d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00EB
        gbc.setState(0xe9a2, 0x9eb8, 0xbb70, 0x64cc, 0xd6c6, 0xd2cb, 0x1, 0x1);
        gbc.writeMem(0xe9a2, { 0x15 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9eb8, gbc.sp());
        EXPECT(0xe9a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe9a2));
        // 15 00EC
        gbc.setState(0x47b6, 0x3edd, 0x8df0, 0x768d, 0xeeae, 0x5664, 0x0, 0x0);
        gbc.writeMem(0x47b6, { 0x15 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3edd, gbc.sp());
        EXPECT(0x47b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00ED
        gbc.setState(0x113e, 0x593e, 0xb690, 0x9dcc, 0x56a, 0x1f10, 0x1, 0x1);
        gbc.writeMem(0x113e, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x593e, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00EE
        gbc.setState(0x787d, 0xeaa6, 0xb3d0, 0x3744, 0x9d1e, 0x878, 0x1, 0x0);
        gbc.writeMem(0x787d, { 0x15 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeaa6, gbc.sp());
        EXPECT(0x787e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00EF
        gbc.setState(0x7c95, 0xe324, 0x31b0, 0x8e0b, 0x3d3d, 0x53f2, 0x1, 0x0);
        gbc.writeMem(0x7c95, { 0x15 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe324, gbc.sp());
        EXPECT(0x7c96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00F0
        gbc.setState(0x1523, 0xfe49, 0x3730, 0xde8c, 0x3230, 0x2788, 0x0, 0x0);
        gbc.writeMem(0x1523, { 0x15 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfe49, gbc.sp());
        EXPECT(0x1524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00F1
        gbc.setState(0x2637, 0x58bf, 0xea20, 0xceee, 0x1a3d, 0xe59e, 0x1, 0x0);
        gbc.writeMem(0x2637, { 0x15 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x58bf, gbc.sp());
        EXPECT(0x2638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00F2
        gbc.setState(0x9af9, 0x79a5, 0x2210, 0x4ae1, 0xc0a4, 0x84b1, 0x1, 0x0);
        gbc.writeMem(0x9af9, { 0x15 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x79a5, gbc.sp());
        EXPECT(0x9afa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9af9));
        // 15 00F3
        gbc.setState(0xcc2b, 0xbed6, 0xdcb0, 0x19e3, 0xd324, 0x268a, 0x0, 0x0);
        gbc.writeMem(0xcc2b, { 0x15 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbed6, gbc.sp());
        EXPECT(0xcc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcc2b));
        // 15 00F4
        gbc.setState(0xea1b, 0xd0f6, 0xf5b0, 0x65e3, 0x9c22, 0xec7f, 0x1, 0x1);
        gbc.writeMem(0xea1b, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd0f6, gbc.sp());
        EXPECT(0xea1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xea1b));
        // 15 00F5
        gbc.setState(0x67d4, 0xbd50, 0x4d0, 0x1321, 0xa15b, 0xee11, 0x1, 0x1);
        gbc.writeMem(0x67d4, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbd50, gbc.sp());
        EXPECT(0x67d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00F6
        gbc.setState(0xb12f, 0x95b3, 0x6da0, 0x223a, 0x456a, 0xf9a, 0x1, 0x0);
        gbc.writeMem(0xb12f, { 0x15 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0xb130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb12f));
        // 15 00F7
        gbc.setState(0x6145, 0x71e1, 0xf4e0, 0x670c, 0x59b8, 0x9dc2, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0x15 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00F8
        gbc.setState(0x86c, 0x7fb6, 0xb360, 0xc5be, 0x3b71, 0x67db, 0x1, 0x0);
        gbc.writeMem(0x86c, { 0x15 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7fb6, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 00F9
        gbc.setState(0x8e2a, 0xa6dd, 0x82c0, 0xbf5b, 0x9f2a, 0x7bd7, 0x1, 0x0);
        gbc.writeMem(0x8e2a, { 0x15 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0x8e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8e2a));
        // 15 00FA
        gbc.setState(0xbbd4, 0x503b, 0x4de0, 0xb8a4, 0x5996, 0x57b2, 0x0, 0x1);
        gbc.writeMem(0xbbd4, { 0x15 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x503b, gbc.sp());
        EXPECT(0xbbd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbbd4));
        // 15 00FB
        gbc.setState(0xa95a, 0x3a21, 0xbc0, 0x1890, 0x9f9, 0xe24e, 0x0, 0x1);
        gbc.writeMem(0xa95a, { 0x15 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3a21, gbc.sp());
        EXPECT(0xa95b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa95a));
        // 15 00FC
        gbc.setState(0x329a, 0xd77, 0xf2b0, 0x4bb, 0x3151, 0xae2a, 0x0, 0x1);
        gbc.writeMem(0x329a, { 0x15 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd77, gbc.sp());
        EXPECT(0x329b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 00FD
        gbc.setState(0xa323, 0xa014, 0x6620, 0x9ff3, 0x188b, 0x6c21, 0x0, 0x1);
        gbc.writeMem(0xa323, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa014, gbc.sp());
        EXPECT(0xa324, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa323));
        // 15 00FE
        gbc.setState(0xa34f, 0x69cf, 0xa20, 0x4cde, 0x1b00, 0x944a, 0x1, 0x1);
        gbc.writeMem(0xa34f, { 0x15 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x69cf, gbc.sp());
        EXPECT(0xa350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa34f));
        // 15 00FF
        gbc.setState(0xcad0, 0x8971, 0x82e0, 0x577b, 0xdaef, 0x1dc9, 0x1, 0x1);
        gbc.writeMem(0xcad0, { 0x15 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8971, gbc.sp());
        EXPECT(0xcad1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcad0));
        // 15 0100
        gbc.setState(0x52f0, 0x9055, 0x21a0, 0x384f, 0x3bff, 0x3b0e, 0x1, 0x1);
        gbc.writeMem(0x52f0, { 0x15 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x52f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0101
        gbc.setState(0x451a, 0xc92c, 0xe9b0, 0x37cf, 0xf3ec, 0xbb73, 0x0, 0x1);
        gbc.writeMem(0x451a, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc92c, gbc.sp());
        EXPECT(0x451b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0102
        gbc.setState(0x2c2, 0x8945, 0x9370, 0x17a9, 0x595, 0x22fd, 0x1, 0x1);
        gbc.writeMem(0x2c2, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8945, gbc.sp());
        EXPECT(0x2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0103
        gbc.setState(0x8e87, 0xd7b6, 0x4e00, 0xf00e, 0x28fc, 0xdb57, 0x0, 0x0);
        gbc.writeMem(0x8e87, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x8e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8e87));
        // 15 0104
        gbc.setState(0x8d4c, 0x5916, 0x3ac0, 0xcfda, 0x5825, 0x96b1, 0x0, 0x1);
        gbc.writeMem(0x8d4c, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5916, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8d4c));
        // 15 0105
        gbc.setState(0x16b5, 0x306e, 0xe020, 0xe1f9, 0x591c, 0x32c6, 0x0, 0x1);
        gbc.writeMem(0x16b5, { 0x15 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x306e, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0106
        gbc.setState(0x727f, 0xc84d, 0x16b0, 0xd1d6, 0x358b, 0xc06c, 0x0, 0x1);
        gbc.writeMem(0x727f, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc84d, gbc.sp());
        EXPECT(0x7280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0107
        gbc.setState(0xbab, 0x8c6b, 0x3a20, 0x22d7, 0x1c84, 0xef23, 0x0, 0x0);
        gbc.writeMem(0xbab, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0xbac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0108
        gbc.setState(0x1c82, 0xea9, 0x2f60, 0xa227, 0x3a41, 0x82c4, 0x0, 0x0);
        gbc.writeMem(0x1c82, { 0x15 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xea9, gbc.sp());
        EXPECT(0x1c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0109
        gbc.setState(0xdb67, 0xa522, 0x3530, 0xc19e, 0xbfa1, 0x59b7, 0x0, 0x1);
        gbc.writeMem(0xdb67, { 0x15 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa522, gbc.sp());
        EXPECT(0xdb68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb67));
        // 15 010A
        gbc.setState(0x9f53, 0x5ec4, 0x94f0, 0xb9d3, 0x96c7, 0x2be1, 0x1, 0x0);
        gbc.writeMem(0x9f53, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5ec4, gbc.sp());
        EXPECT(0x9f54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9f53));
        // 15 010B
        gbc.setState(0x10ff, 0x2e70, 0xe7e0, 0x639a, 0xdcc8, 0xd2dc, 0x0, 0x1);
        gbc.writeMem(0x10ff, { 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2e70, gbc.sp());
        EXPECT(0x1100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 010C
        gbc.setState(0x4cf2, 0x35b8, 0x9b0, 0x6ee4, 0x883e, 0x5004, 0x1, 0x1);
        gbc.writeMem(0x4cf2, { 0x15 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x35b8, gbc.sp());
        EXPECT(0x4cf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 010D
        gbc.setState(0xebac, 0x2bf8, 0x8e20, 0x4e3f, 0x223e, 0xec9d, 0x0, 0x1);
        gbc.writeMem(0xebac, { 0x15 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2bf8, gbc.sp());
        EXPECT(0xebad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xebac));
        // 15 010F
        gbc.setState(0x4f85, 0xf622, 0xc730, 0x55a2, 0x8857, 0x8883, 0x1, 0x1);
        gbc.writeMem(0x4f85, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf622, gbc.sp());
        EXPECT(0x4f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0110
        gbc.setState(0x2b31, 0x386d, 0x1a00, 0xfcdd, 0xcbb9, 0xa158, 0x0, 0x1);
        gbc.writeMem(0x2b31, { 0x15 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x386d, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0111
        gbc.setState(0xa4bc, 0x23b6, 0xe840, 0x9ad, 0x4616, 0xac7b, 0x1, 0x0);
        gbc.writeMem(0xa4bc, { 0x15 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x23b6, gbc.sp());
        EXPECT(0xa4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa4bc));
        // 15 0113
        gbc.setState(0x22b6, 0xdf7c, 0xdb30, 0xe9a0, 0x7c54, 0x4fa3, 0x1, 0x0);
        gbc.writeMem(0x22b6, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf7c, gbc.sp());
        EXPECT(0x22b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0114
        gbc.setState(0x68f1, 0x8d0b, 0x4400, 0x629a, 0xc85b, 0x4c7b, 0x0, 0x1);
        gbc.writeMem(0x68f1, { 0x15 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8d0b, gbc.sp());
        EXPECT(0x68f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0115
        gbc.setState(0x4fd6, 0x715b, 0xa440, 0x4a61, 0xcf46, 0xfbc1, 0x0, 0x0);
        gbc.writeMem(0x4fd6, { 0x15 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x715b, gbc.sp());
        EXPECT(0x4fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0116
        gbc.setState(0x4e9d, 0xd1a9, 0xcd90, 0x6b82, 0x3797, 0xbcd, 0x0, 0x1);
        gbc.writeMem(0x4e9d, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x4e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0117
        gbc.setState(0x8fc5, 0x4e52, 0x8c70, 0x8b3b, 0x473e, 0x1ba0, 0x0, 0x1);
        gbc.writeMem(0x8fc5, { 0x15 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4e52, gbc.sp());
        EXPECT(0x8fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8fc5));
        // 15 0118
        gbc.setState(0x839f, 0x8cb, 0xdd50, 0xb37e, 0x64d3, 0x6916, 0x1, 0x0);
        gbc.writeMem(0x839f, { 0x15 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8cb, gbc.sp());
        EXPECT(0x83a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x839f));
        // 15 0119
        gbc.setState(0x2f81, 0x36b2, 0xd1f0, 0x9bb6, 0xd52e, 0xabce, 0x1, 0x0);
        gbc.writeMem(0x2f81, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x36b2, gbc.sp());
        EXPECT(0x2f82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 011A
        gbc.setState(0x5a37, 0x8a1a, 0x4080, 0xfdc2, 0x7e93, 0xb43, 0x1, 0x1);
        gbc.writeMem(0x5a37, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8a1a, gbc.sp());
        EXPECT(0x5a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 011C
        gbc.setState(0xb71c, 0x4e4, 0xf200, 0x11f, 0xcd36, 0x908a, 0x1, 0x0);
        gbc.writeMem(0xb71c, { 0x15 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0xb71d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb71c));
        // 15 011D
        gbc.setState(0x8b51, 0xb8e5, 0xbe00, 0x36d3, 0xed5e, 0x1815, 0x0, 0x0);
        gbc.writeMem(0x8b51, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x8b52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b51));
        // 15 011E
        gbc.setState(0x1cdb, 0x9247, 0xe970, 0x82fe, 0xc5e5, 0x38a7, 0x0, 0x1);
        gbc.writeMem(0x1cdb, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9247, gbc.sp());
        EXPECT(0x1cdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 011F
        gbc.setState(0x549d, 0x2655, 0x7f80, 0x246c, 0x6660, 0xf152, 0x0, 0x1);
        gbc.writeMem(0x549d, { 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2655, gbc.sp());
        EXPECT(0x549e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0120
        gbc.setState(0xc085, 0xf7ef, 0x6740, 0xbc0c, 0xf1c4, 0xb766, 0x0, 0x0);
        gbc.writeMem(0xc085, { 0x15 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf7ef, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc085));
        // 15 0121
        gbc.setState(0x11b0, 0xde30, 0x96e0, 0xafa8, 0xec7c, 0xc993, 0x0, 0x1);
        gbc.writeMem(0x11b0, { 0x15 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xde30, gbc.sp());
        EXPECT(0x11b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0122
        gbc.setState(0xbb2f, 0x6a7b, 0xa060, 0xb0c0, 0xa263, 0xb5b9, 0x0, 0x0);
        gbc.writeMem(0xbb2f, { 0x15 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6a7b, gbc.sp());
        EXPECT(0xbb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbb2f));
        // 15 0124
        gbc.setState(0xd90b, 0x974a, 0xf5b0, 0x9d57, 0x8587, 0x9d66, 0x1, 0x1);
        gbc.writeMem(0xd90b, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x974a, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd90b));
        // 15 0125
        gbc.setState(0xf5, 0x3d18, 0x63b0, 0xdf28, 0xac90, 0x742b, 0x1, 0x0);
        gbc.writeMem(0xf5, { 0x15 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3d18, gbc.sp());
        EXPECT(0xf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0126
        gbc.setState(0x4114, 0xb8f4, 0x1e80, 0x3018, 0x423e, 0x3d5d, 0x1, 0x0);
        gbc.writeMem(0x4114, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb8f4, gbc.sp());
        EXPECT(0x4115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0127
        gbc.setState(0xe22a, 0xaef7, 0xbd00, 0xc81d, 0x7bda, 0x34c4, 0x0, 0x0);
        gbc.writeMem(0xe22a, { 0x15 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0xe22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe22a));
        // 15 0128
        gbc.setState(0x310d, 0x16a4, 0x4790, 0x555d, 0x4bad, 0x3c84, 0x1, 0x0);
        gbc.writeMem(0x310d, { 0x15 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x16a4, gbc.sp());
        EXPECT(0x310e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0129
        gbc.setState(0xc520, 0xca1e, 0x3710, 0x85d1, 0xba97, 0xe082, 0x1, 0x0);
        gbc.writeMem(0xc520, { 0x15 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0xc521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc520));
        // 15 012A
        gbc.setState(0xc67f, 0xf47f, 0xabc0, 0x8f0d, 0x6642, 0xef0c, 0x1, 0x1);
        gbc.writeMem(0xc67f, { 0x15 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf47f, gbc.sp());
        EXPECT(0xc680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc67f));
        // 15 012B
        gbc.setState(0x8e1f, 0x15c5, 0x9430, 0x9b68, 0x252d, 0xd9df, 0x0, 0x0);
        gbc.writeMem(0x8e1f, { 0x15 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x15c5, gbc.sp());
        EXPECT(0x8e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8e1f));
        // 15 012C
        gbc.setState(0xa271, 0x5e9e, 0xf590, 0x694, 0xcb1a, 0xafd6, 0x0, 0x1);
        gbc.writeMem(0xa271, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5e9e, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa271));
        // 15 012D
        gbc.setState(0x1be, 0x5dfc, 0xcd10, 0x6b60, 0x5880, 0x9378, 0x0, 0x1);
        gbc.writeMem(0x1be, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5dfc, gbc.sp());
        EXPECT(0x1bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 012E
        gbc.setState(0x9077, 0xbd9b, 0xba30, 0x18ca, 0xfc14, 0x5a1e, 0x1, 0x0);
        gbc.writeMem(0x9077, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbd9b, gbc.sp());
        EXPECT(0x9078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9077));
        // 15 012F
        gbc.setState(0x5a51, 0x8b4b, 0x8d0, 0x80f2, 0x8cad, 0x7dd2, 0x1, 0x0);
        gbc.writeMem(0x5a51, { 0x15 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8b4b, gbc.sp());
        EXPECT(0x5a52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0130
        gbc.setState(0xd71b, 0xde9a, 0xec0, 0x8e12, 0xed99, 0x532f, 0x0, 0x1);
        gbc.writeMem(0xd71b, { 0x15 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xde9a, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd71b));
        // 15 0131
        gbc.setState(0x4655, 0x6eee, 0x3dd0, 0xae0b, 0xfc2b, 0xa170, 0x0, 0x1);
        gbc.writeMem(0x4655, { 0x15 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6eee, gbc.sp());
        EXPECT(0x4656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0132
        gbc.setState(0x1c2b, 0x3f1a, 0xf500, 0x538d, 0xf6d6, 0x7bf7, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3f1a, gbc.sp());
        EXPECT(0x1c2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0133
        gbc.setState(0x516, 0x3f42, 0x20e0, 0x60b, 0xabbe, 0x7278, 0x1, 0x1);
        gbc.writeMem(0x516, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3f42, gbc.sp());
        EXPECT(0x517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0134
        gbc.setState(0xe7f3, 0x8953, 0x4830, 0xf789, 0xf3d7, 0x690d, 0x1, 0x1);
        gbc.writeMem(0xe7f3, { 0x15 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8953, gbc.sp());
        EXPECT(0xe7f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe7f3));
        // 15 0135
        gbc.setState(0x8825, 0x7eb3, 0x980, 0x7d0b, 0x43a7, 0x4c78, 0x1, 0x0);
        gbc.writeMem(0x8825, { 0x15 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7eb3, gbc.sp());
        EXPECT(0x8826, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8825));
        // 15 0136
        gbc.setState(0x3264, 0x3488, 0x99b0, 0x2916, 0xc4d0, 0x85ea, 0x1, 0x0);
        gbc.writeMem(0x3264, { 0x15 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3488, gbc.sp());
        EXPECT(0x3265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0137
        gbc.setState(0x95f4, 0xbb8e, 0x5810, 0x4021, 0xbd5a, 0x3511, 0x1, 0x0);
        gbc.writeMem(0x95f4, { 0x15 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbb8e, gbc.sp());
        EXPECT(0x95f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x95f4));
        // 15 0138
        gbc.setState(0xd581, 0xb39c, 0xc3a0, 0xda73, 0xdf75, 0x802a, 0x0, 0x1);
        gbc.writeMem(0xd581, { 0x15 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0xd582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd581));
        // 15 0139
        gbc.setState(0x993a, 0x5681, 0xebe0, 0xfc09, 0x8b00, 0xce8e, 0x0, 0x1);
        gbc.writeMem(0x993a, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5681, gbc.sp());
        EXPECT(0x993b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x993a));
        // 15 013A
        gbc.setState(0x5d9d, 0x7974, 0x34f0, 0x81df, 0xb935, 0x96b5, 0x0, 0x0);
        gbc.writeMem(0x5d9d, { 0x15 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7974, gbc.sp());
        EXPECT(0x5d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 013B
        gbc.setState(0x558a, 0x35ae, 0xb5a0, 0x4add, 0x8905, 0xbd40, 0x1, 0x0);
        gbc.writeMem(0x558a, { 0x15 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x35ae, gbc.sp());
        EXPECT(0x558b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 013D
        gbc.setState(0xb851, 0x4ff4, 0x730, 0x182a, 0x88eb, 0xfb80, 0x1, 0x1);
        gbc.writeMem(0xb851, { 0x15 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0xb852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb851));
        // 15 013E
        gbc.setState(0x6c30, 0xaba0, 0x6560, 0x78e, 0xfda7, 0x89c7, 0x1, 0x0);
        gbc.writeMem(0x6c30, { 0x15 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaba0, gbc.sp());
        EXPECT(0x6c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 013F
        gbc.setState(0xc801, 0x23e1, 0x3850, 0xc743, 0x7398, 0x3d40, 0x1, 0x0);
        gbc.writeMem(0xc801, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0xc802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc801));
        // 15 0140
        gbc.setState(0x54b8, 0x1592, 0xd9d0, 0xc489, 0xf541, 0xeba3, 0x0, 0x1);
        gbc.writeMem(0x54b8, { 0x15 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1592, gbc.sp());
        EXPECT(0x54b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0141
        gbc.setState(0x4bbb, 0xf931, 0x1970, 0x4bf3, 0xb9c6, 0x3db6, 0x1, 0x1);
        gbc.writeMem(0x4bbb, { 0x15 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf931, gbc.sp());
        EXPECT(0x4bbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0142
        gbc.setState(0x4832, 0x17e7, 0xc510, 0x14ca, 0xd05c, 0x867, 0x1, 0x1);
        gbc.writeMem(0x4832, { 0x15 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x17e7, gbc.sp());
        EXPECT(0x4833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0143
        gbc.setState(0xa24e, 0x846a, 0xc830, 0x6baf, 0xabf7, 0xbbc1, 0x0, 0x0);
        gbc.writeMem(0xa24e, { 0x15 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x846a, gbc.sp());
        EXPECT(0xa24f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa24e));
        // 15 0144
        gbc.setState(0x20e9, 0xa42b, 0xef50, 0xba92, 0xdc58, 0xfd3b, 0x0, 0x0);
        gbc.writeMem(0x20e9, { 0x15 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x20ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0146
        gbc.setState(0x7e39, 0x1b03, 0xfad0, 0x6ca2, 0x4cdb, 0xcad4, 0x1, 0x0);
        gbc.writeMem(0x7e39, { 0x15 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0147
        gbc.setState(0x7eba, 0xc17f, 0x5c80, 0x3c2b, 0xdcff, 0x7ca9, 0x1, 0x1);
        gbc.writeMem(0x7eba, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc17f, gbc.sp());
        EXPECT(0x7ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0148
        gbc.setState(0x11a3, 0x15de, 0xf720, 0x2d6, 0x4dbc, 0xc3a0, 0x1, 0x0);
        gbc.writeMem(0x11a3, { 0x15 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x15de, gbc.sp());
        EXPECT(0x11a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0149
        gbc.setState(0xb321, 0xb6c0, 0xddf0, 0x2dd3, 0x63a9, 0x6a3d, 0x1, 0x0);
        gbc.writeMem(0xb321, { 0x15 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb6c0, gbc.sp());
        EXPECT(0xb322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb321));
        // 15 014A
        gbc.setState(0x4204, 0x90eb, 0xb3e0, 0x4c7a, 0x590a, 0x17ae, 0x0, 0x1);
        gbc.writeMem(0x4204, { 0x15 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x4205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 014B
        gbc.setState(0x4767, 0x24bd, 0x5f30, 0x7615, 0x6529, 0xbbea, 0x0, 0x1);
        gbc.writeMem(0x4767, { 0x15 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x24bd, gbc.sp());
        EXPECT(0x4768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 014C
        gbc.setState(0x28bb, 0x287c, 0xa4e0, 0x332e, 0x8847, 0x9fd6, 0x1, 0x1);
        gbc.writeMem(0x28bb, { 0x15 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x287c, gbc.sp());
        EXPECT(0x28bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 014D
        gbc.setState(0x77bf, 0x72e7, 0xba50, 0x3de7, 0x16b0, 0xb4b1, 0x0, 0x0);
        gbc.writeMem(0x77bf, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x77c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 014E
        gbc.setState(0x1ee4, 0xaa1, 0xb650, 0x8603, 0x1fec, 0xb41e, 0x1, 0x0);
        gbc.writeMem(0x1ee4, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xaa1, gbc.sp());
        EXPECT(0x1ee5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 014F
        gbc.setState(0x28d9, 0xa751, 0x440, 0x2f61, 0xaffc, 0xbd, 0x1, 0x0);
        gbc.writeMem(0x28d9, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xa751, gbc.sp());
        EXPECT(0x28da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0150
        gbc.setState(0x9bd9, 0x6a7c, 0xf0b0, 0xf3af, 0x9ce6, 0x6970, 0x0, 0x1);
        gbc.writeMem(0x9bd9, { 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6a7c, gbc.sp());
        EXPECT(0x9bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9bd9));
        // 15 0151
        gbc.setState(0xc226, 0x3aa9, 0x2ac0, 0x1620, 0xb5f2, 0xd67e, 0x0, 0x0);
        gbc.writeMem(0xc226, { 0x15 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3aa9, gbc.sp());
        EXPECT(0xc227, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc226));
        // 15 0152
        gbc.setState(0xc87a, 0x3dd1, 0x6040, 0x314a, 0x6115, 0x881, 0x0, 0x0);
        gbc.writeMem(0xc87a, { 0x15 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3dd1, gbc.sp());
        EXPECT(0xc87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc87a));
        // 15 0153
        gbc.setState(0xf8, 0x334e, 0x9e90, 0x8daf, 0x5dcc, 0xdc52, 0x0, 0x1);
        gbc.writeMem(0xf8, { 0x15 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x334e, gbc.sp());
        EXPECT(0xf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0154
        gbc.setState(0x9512, 0x4874, 0x3070, 0xda9c, 0xb56c, 0xf1db, 0x0, 0x1);
        gbc.writeMem(0x9512, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4874, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9512));
        // 15 0155
        gbc.setState(0xbd49, 0xee2f, 0xe400, 0x4875, 0x477f, 0xd791, 0x0, 0x1);
        gbc.writeMem(0xbd49, { 0x15 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xee2f, gbc.sp());
        EXPECT(0xbd4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbd49));
        // 15 0156
        gbc.setState(0x3d5b, 0xc6be, 0x6800, 0xbf39, 0x9afd, 0x58d6, 0x1, 0x1);
        gbc.writeMem(0x3d5b, { 0x15 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc6be, gbc.sp());
        EXPECT(0x3d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0157
        gbc.setState(0x8c1f, 0xf7f3, 0x7860, 0x1734, 0x25c8, 0xa91f, 0x1, 0x0);
        gbc.writeMem(0x8c1f, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf7f3, gbc.sp());
        EXPECT(0x8c20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8c1f));
        // 15 0158
        gbc.setState(0x907c, 0x16bc, 0x4b20, 0xac67, 0x8c43, 0x63bf, 0x0, 0x1);
        gbc.writeMem(0x907c, { 0x15 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0x907d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x907c));
        // 15 0159
        gbc.setState(0x99fc, 0x287a, 0x3880, 0x6b71, 0x4d5e, 0xda76, 0x0, 0x1);
        gbc.writeMem(0x99fc, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x287a, gbc.sp());
        EXPECT(0x99fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x99fc));
        // 15 015A
        gbc.setState(0x3fb2, 0xb134, 0xdd70, 0xfcf6, 0x84b4, 0xb4f7, 0x0, 0x1);
        gbc.writeMem(0x3fb2, { 0x15 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xb134, gbc.sp());
        EXPECT(0x3fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 015B
        gbc.setState(0x4e9c, 0xd46e, 0xffc0, 0x1d8e, 0x217a, 0x57ea, 0x1, 0x0);
        gbc.writeMem(0x4e9c, { 0x15 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd46e, gbc.sp());
        EXPECT(0x4e9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 015C
        gbc.setState(0xd668, 0x3062, 0xbcc0, 0x1fc7, 0x8a65, 0x6ec1, 0x0, 0x0);
        gbc.writeMem(0xd668, { 0x15 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0xd669, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd668));
        // 15 015D
        gbc.setState(0xd743, 0x3c9b, 0xde10, 0x431e, 0x7368, 0xf36c, 0x1, 0x0);
        gbc.writeMem(0xd743, { 0x15 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3c9b, gbc.sp());
        EXPECT(0xd744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd743));
        // 15 015E
        gbc.setState(0xde24, 0x6796, 0xc40, 0x7026, 0x3bcb, 0x5f19, 0x1, 0x1);
        gbc.writeMem(0xde24, { 0x15 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6796, gbc.sp());
        EXPECT(0xde25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xde24));
        // 15 015F
        gbc.setState(0x77df, 0x6e74, 0x7990, 0x8481, 0xf595, 0x5e12, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x15 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6e74, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0160
        gbc.setState(0xb16a, 0xa747, 0x89f0, 0x544a, 0x5ab1, 0x4a17, 0x0, 0x0);
        gbc.writeMem(0xb16a, { 0x15 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xb16b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb16a));
        // 15 0161
        gbc.setState(0xdee0, 0x9f8c, 0xe090, 0x8c1f, 0x9f4d, 0x3881, 0x0, 0x0);
        gbc.writeMem(0xdee0, { 0x15 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9f8c, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdee0));
        // 15 0162
        gbc.setState(0xd725, 0x128e, 0x1700, 0x3610, 0xaeaf, 0x9daa, 0x0, 0x0);
        gbc.writeMem(0xd725, { 0x15 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x128e, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd725));
        // 15 0163
        gbc.setState(0xba75, 0xf317, 0x7a30, 0x5c07, 0xfee8, 0x788, 0x0, 0x0);
        gbc.writeMem(0xba75, { 0x15 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf317, gbc.sp());
        EXPECT(0xba76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xba75));
        // 15 0164
        gbc.setState(0x98de, 0x8e64, 0x70b0, 0xb1d5, 0xb15e, 0x98ff, 0x1, 0x0);
        gbc.writeMem(0x98de, { 0x15 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0x98df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x98de));
        // 15 0165
        gbc.setState(0xd3c5, 0xecc0, 0x9c20, 0xa2b2, 0x6060, 0x882c, 0x0, 0x0);
        gbc.writeMem(0xd3c5, { 0x15 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xecc0, gbc.sp());
        EXPECT(0xd3c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd3c5));
        // 15 0166
        gbc.setState(0xa71, 0xb379, 0x2350, 0xe170, 0xcf88, 0x1d8a, 0x1, 0x0);
        gbc.writeMem(0xa71, { 0x15 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb379, gbc.sp());
        EXPECT(0xa72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0167
        gbc.setState(0x8cce, 0xe9bb, 0x7c90, 0xbe0, 0xb022, 0x3a29, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe9bb, gbc.sp());
        EXPECT(0x8ccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8cce));
        // 15 0168
        gbc.setState(0x998c, 0x999c, 0xa590, 0x7d0a, 0x66d1, 0x53c2, 0x0, 0x0);
        gbc.writeMem(0x998c, { 0x15 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x999c, gbc.sp());
        EXPECT(0x998d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x998c));
        // 15 0169
        gbc.setState(0x114a, 0x5012, 0x3b90, 0xb3de, 0x7707, 0xf507, 0x0, 0x1);
        gbc.writeMem(0x114a, { 0x15 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5012, gbc.sp());
        EXPECT(0x114b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 016A
        gbc.setState(0x9818, 0xddbe, 0xb480, 0x4245, 0xe75, 0x49c8, 0x0, 0x0);
        gbc.writeMem(0x9818, { 0x15 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xddbe, gbc.sp());
        EXPECT(0x9819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9818));
        // 15 016C
        gbc.setState(0x972, 0x5189, 0x8570, 0x3057, 0x8e53, 0x3693, 0x1, 0x1);
        gbc.writeMem(0x972, { 0x15 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0x973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 016D
        gbc.setState(0xdd1f, 0xfa3d, 0x4130, 0xd507, 0x9deb, 0x10e7, 0x1, 0x1);
        gbc.writeMem(0xdd1f, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfa3d, gbc.sp());
        EXPECT(0xdd20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd1f));
        // 15 016E
        gbc.setState(0xdd5f, 0x949f, 0x51d0, 0x3001, 0x3c8e, 0x915a, 0x0, 0x0);
        gbc.writeMem(0xdd5f, { 0x15 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x949f, gbc.sp());
        EXPECT(0xdd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd5f));
        // 15 016F
        gbc.setState(0xcf7b, 0xc5d, 0xa700, 0x86c2, 0xc68, 0x6dff, 0x0, 0x0);
        gbc.writeMem(0xcf7b, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc5d, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf7b));
        // 15 0170
        gbc.setState(0x79e8, 0xde4e, 0x1e80, 0x3ee6, 0xe9ef, 0x519f, 0x1, 0x1);
        gbc.writeMem(0x79e8, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xde4e, gbc.sp());
        EXPECT(0x79e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0171
        gbc.setState(0x4812, 0x1b16, 0xaaa0, 0x3ca4, 0xde45, 0x9e4f, 0x1, 0x1);
        gbc.writeMem(0x4812, { 0x15 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x1b16, gbc.sp());
        EXPECT(0x4813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0172
        gbc.setState(0x4fcb, 0x3fc7, 0xdb90, 0xa776, 0x9e71, 0x3e9a, 0x1, 0x0);
        gbc.writeMem(0x4fcb, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3fc7, gbc.sp());
        EXPECT(0x4fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0173
        gbc.setState(0x41b1, 0xcc2e, 0xaf20, 0x1911, 0xe11b, 0x4e5a, 0x1, 0x0);
        gbc.writeMem(0x41b1, { 0x15 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xcc2e, gbc.sp());
        EXPECT(0x41b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0174
        gbc.setState(0x1a91, 0xddaf, 0x89c0, 0xc7f9, 0xfbfd, 0xb450, 0x1, 0x0);
        gbc.writeMem(0x1a91, { 0x15 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xddaf, gbc.sp());
        EXPECT(0x1a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0175
        gbc.setState(0x4ab7, 0xed56, 0x9310, 0x1cd6, 0x2e4a, 0x2580, 0x1, 0x0);
        gbc.writeMem(0x4ab7, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xed56, gbc.sp());
        EXPECT(0x4ab8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0176
        gbc.setState(0x429c, 0xdec6, 0xe2f0, 0xa56b, 0xc872, 0x6b19, 0x1, 0x1);
        gbc.writeMem(0x429c, { 0x15 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdec6, gbc.sp());
        EXPECT(0x429d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0177
        gbc.setState(0x91e5, 0x293c, 0xe790, 0x476a, 0x1231, 0x7294, 0x0, 0x1);
        gbc.writeMem(0x91e5, { 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x293c, gbc.sp());
        EXPECT(0x91e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x91e5));
        // 15 0178
        gbc.setState(0x4f43, 0x8102, 0xce30, 0x75b5, 0x14f5, 0x8214, 0x1, 0x1);
        gbc.writeMem(0x4f43, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8102, gbc.sp());
        EXPECT(0x4f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0179
        gbc.setState(0x504c, 0x6f76, 0x3010, 0xe1c8, 0x3963, 0xd4f5, 0x0, 0x0);
        gbc.writeMem(0x504c, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6f76, gbc.sp());
        EXPECT(0x504d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 017A
        gbc.setState(0xda8f, 0xa6dd, 0xe590, 0x9197, 0x3f50, 0xf434, 0x1, 0x0);
        gbc.writeMem(0xda8f, { 0x15 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa6dd, gbc.sp());
        EXPECT(0xda90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xda8f));
        // 15 017B
        gbc.setState(0x933a, 0x991f, 0x34d0, 0x4936, 0x871a, 0xa87e, 0x0, 0x1);
        gbc.writeMem(0x933a, { 0x15 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x991f, gbc.sp());
        EXPECT(0x933b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x933a));
        // 15 017C
        gbc.setState(0xb3ed, 0xa95c, 0xc80, 0x2793, 0x6d7, 0x8fa7, 0x1, 0x0);
        gbc.writeMem(0xb3ed, { 0x15 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa95c, gbc.sp());
        EXPECT(0xb3ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb3ed));
        // 15 017D
        gbc.setState(0x22a5, 0xab70, 0xad50, 0xbc2e, 0x6a55, 0x37b3, 0x0, 0x1);
        gbc.writeMem(0x22a5, { 0x15 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xab70, gbc.sp());
        EXPECT(0x22a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 017F
        gbc.setState(0xea4d, 0xdbae, 0x30f0, 0x4f73, 0x42cd, 0xa794, 0x0, 0x0);
        gbc.writeMem(0xea4d, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xdbae, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xea4d));
        // 15 0180
        gbc.setState(0x1b4b, 0x5190, 0x96a0, 0x521, 0xfd82, 0x90b4, 0x1, 0x0);
        gbc.writeMem(0x1b4b, { 0x15 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5190, gbc.sp());
        EXPECT(0x1b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0181
        gbc.setState(0x2136, 0x8e97, 0xcdd0, 0x436e, 0x3577, 0x5302, 0x0, 0x0);
        gbc.writeMem(0x2136, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8e97, gbc.sp());
        EXPECT(0x2137, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0182
        gbc.setState(0x558b, 0xb63c, 0x3e00, 0x33da, 0x7652, 0xf8bc, 0x1, 0x0);
        gbc.writeMem(0x558b, { 0x15 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb63c, gbc.sp());
        EXPECT(0x558c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0183
        gbc.setState(0xeba6, 0xc42f, 0x4790, 0xd7a6, 0xdb79, 0x9d69, 0x1, 0x1);
        gbc.writeMem(0xeba6, { 0x15 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xc42f, gbc.sp());
        EXPECT(0xeba7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeba6));
        // 15 0184
        gbc.setState(0x2f07, 0xbd8c, 0x2d70, 0x162a, 0xff0d, 0xd865, 0x0, 0x0);
        gbc.writeMem(0x2f07, { 0x15 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbd8c, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0185
        gbc.setState(0x28cf, 0xcda3, 0xd130, 0xe52c, 0x96f6, 0x970d, 0x1, 0x1);
        gbc.writeMem(0x28cf, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcda3, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0186
        gbc.setState(0x45ae, 0x1d6b, 0xc1c0, 0x82a0, 0xb12c, 0xf0c9, 0x0, 0x1);
        gbc.writeMem(0x45ae, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1d6b, gbc.sp());
        EXPECT(0x45af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0187
        gbc.setState(0xb963, 0x4043, 0x9b40, 0x558d, 0xcb8b, 0xddcc, 0x1, 0x0);
        gbc.writeMem(0xb963, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4043, gbc.sp());
        EXPECT(0xb964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb963));
        // 15 0188
        gbc.setState(0x87f5, 0x2689, 0x8650, 0x30b2, 0x3172, 0xab6e, 0x1, 0x1);
        gbc.writeMem(0x87f5, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0x87f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x87f5));
        // 15 0189
        gbc.setState(0x3dfb, 0x810a, 0x54f0, 0x814, 0xadc0, 0xc4ec, 0x1, 0x0);
        gbc.writeMem(0x3dfb, { 0x15 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x810a, gbc.sp());
        EXPECT(0x3dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 018A
        gbc.setState(0xa440, 0xbae5, 0x4bf0, 0x96f4, 0x44ab, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0xa440, { 0x15 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xbae5, gbc.sp());
        EXPECT(0xa441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa440));
        // 15 018B
        gbc.setState(0x8be7, 0x3d12, 0x7830, 0x58e3, 0x72d9, 0x3e9c, 0x1, 0x0);
        gbc.writeMem(0x8be7, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3d12, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8be7));
        // 15 018C
        gbc.setState(0x6281, 0x4aa8, 0x8ba0, 0x1bb1, 0xd687, 0x2149, 0x0, 0x0);
        gbc.writeMem(0x6281, { 0x15 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0x6282, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 018D
        gbc.setState(0x6ec5, 0xb6bf, 0x50f0, 0x23fa, 0x7615, 0x5f8e, 0x0, 0x1);
        gbc.writeMem(0x6ec5, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb6bf, gbc.sp());
        EXPECT(0x6ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 018E
        gbc.setState(0x26ed, 0xc231, 0xa9f0, 0xd45c, 0x5fa8, 0x5311, 0x0, 0x1);
        gbc.writeMem(0x26ed, { 0x15 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc231, gbc.sp());
        EXPECT(0x26ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 018F
        gbc.setState(0xd5e9, 0xe178, 0xcf60, 0x8281, 0x899e, 0x2640, 0x1, 0x0);
        gbc.writeMem(0xd5e9, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe178, gbc.sp());
        EXPECT(0xd5ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd5e9));
        // 15 0190
        gbc.setState(0xc01d, 0x27fc, 0x3e50, 0x7a0d, 0x2795, 0xb0a6, 0x0, 0x1);
        gbc.writeMem(0xc01d, { 0x15 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x27fc, gbc.sp());
        EXPECT(0xc01e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc01d));
        // 15 0191
        gbc.setState(0xefc1, 0x2f, 0x1dd0, 0x11d8, 0x237a, 0x6d06, 0x0, 0x0);
        gbc.writeMem(0xefc1, { 0x15 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x2f, gbc.sp());
        EXPECT(0xefc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xefc1));
        // 15 0192
        gbc.setState(0x2de8, 0xe34b, 0x2430, 0xdca2, 0x6821, 0x2be0, 0x0, 0x1);
        gbc.writeMem(0x2de8, { 0x15 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe34b, gbc.sp());
        EXPECT(0x2de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0193
        gbc.setState(0x95e2, 0x3ee7, 0x9b10, 0xcf09, 0xacfe, 0x3f07, 0x0, 0x0);
        gbc.writeMem(0x95e2, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3ee7, gbc.sp());
        EXPECT(0x95e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x95e2));
        // 15 0194
        gbc.setState(0xb3c8, 0xf5f8, 0xd200, 0x78f0, 0xbe1f, 0x93ba, 0x0, 0x0);
        gbc.writeMem(0xb3c8, { 0x15 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf5f8, gbc.sp());
        EXPECT(0xb3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb3c8));
        // 15 0195
        gbc.setState(0x4d54, 0xcae2, 0xb2e0, 0xe710, 0xc6df, 0xdf47, 0x1, 0x1);
        gbc.writeMem(0x4d54, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0x4d55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0196
        gbc.setState(0x40ca, 0x8cf, 0xb2c0, 0x7605, 0x383f, 0x9499, 0x0, 0x0);
        gbc.writeMem(0x40ca, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8cf, gbc.sp());
        EXPECT(0x40cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0197
        gbc.setState(0x750f, 0x71b8, 0x1b20, 0x4996, 0x90c9, 0x5b9f, 0x0, 0x0);
        gbc.writeMem(0x750f, { 0x15 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x71b8, gbc.sp());
        EXPECT(0x7510, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0198
        gbc.setState(0x9e70, 0x7e91, 0xa3f0, 0xe390, 0xd4ca, 0x811f, 0x0, 0x1);
        gbc.writeMem(0x9e70, { 0x15 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7e91, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9e70));
        // 15 0199
        gbc.setState(0xa728, 0x8c57, 0xd210, 0x761, 0xd887, 0xc7e5, 0x1, 0x0);
        gbc.writeMem(0xa728, { 0x15 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c57, gbc.sp());
        EXPECT(0xa729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa728));
        // 15 019A
        gbc.setState(0xc376, 0xc08c, 0x8cb0, 0xc716, 0x71ab, 0x7019, 0x1, 0x0);
        gbc.writeMem(0xc376, { 0x15 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xc08c, gbc.sp());
        EXPECT(0xc377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc376));
        // 15 019B
        gbc.setState(0x5078, 0x4787, 0x6660, 0xcb8d, 0x3809, 0x5a90, 0x0, 0x0);
        gbc.writeMem(0x5078, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x4787, gbc.sp());
        EXPECT(0x5079, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 019C
        gbc.setState(0x14eb, 0x5bd5, 0xffc0, 0x9dd9, 0x999c, 0xcc64, 0x0, 0x1);
        gbc.writeMem(0x14eb, { 0x15 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5bd5, gbc.sp());
        EXPECT(0x14ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 019D
        gbc.setState(0xa669, 0x517a, 0xde20, 0x7e32, 0x1d13, 0xc542, 0x0, 0x0);
        gbc.writeMem(0xa669, { 0x15 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x517a, gbc.sp());
        EXPECT(0xa66a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa669));
        // 15 019E
        gbc.setState(0xb97d, 0xe9c9, 0x2f70, 0x136e, 0x4c3, 0xc18c, 0x1, 0x1);
        gbc.writeMem(0xb97d, { 0x15 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe9c9, gbc.sp());
        EXPECT(0xb97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb97d));
        // 15 019F
        gbc.setState(0x27a3, 0x57ce, 0x58a0, 0x280, 0x45a2, 0x8e63, 0x0, 0x1);
        gbc.writeMem(0x27a3, { 0x15 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x57ce, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01A0
        gbc.setState(0x618c, 0x6be9, 0x740, 0x264d, 0x8841, 0x63e, 0x0, 0x1);
        gbc.writeMem(0x618c, { 0x15 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6be9, gbc.sp());
        EXPECT(0x618d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01A1
        gbc.setState(0x2d21, 0xb051, 0x6d50, 0x75d9, 0x1edd, 0x265d, 0x1, 0x1);
        gbc.writeMem(0x2d21, { 0x15 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb051, gbc.sp());
        EXPECT(0x2d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01A2
        gbc.setState(0x32aa, 0x850d, 0xe930, 0xe210, 0x9689, 0x32d5, 0x1, 0x0);
        gbc.writeMem(0x32aa, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x850d, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01A3
        gbc.setState(0x6e41, 0x2b86, 0x6650, 0x2f4, 0x73c3, 0x3771, 0x0, 0x1);
        gbc.writeMem(0x6e41, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2b86, gbc.sp());
        EXPECT(0x6e42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01A4
        gbc.setState(0x44ee, 0x553f, 0xa7e0, 0x52d0, 0x507b, 0x600e, 0x1, 0x0);
        gbc.writeMem(0x44ee, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x553f, gbc.sp());
        EXPECT(0x44ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01A6
        gbc.setState(0xa91f, 0xe0ae, 0xa120, 0xbee1, 0x5cae, 0x1b51, 0x1, 0x1);
        gbc.writeMem(0xa91f, { 0x15 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe0ae, gbc.sp());
        EXPECT(0xa920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa91f));
        // 15 01A7
        gbc.setState(0x5eff, 0xcdb3, 0x50c0, 0x6c71, 0x4d23, 0x8051, 0x0, 0x1);
        gbc.writeMem(0x5eff, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0x5f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01A8
        gbc.setState(0x4653, 0xe48d, 0xb0c0, 0x26e6, 0x962e, 0x1491, 0x0, 0x0);
        gbc.writeMem(0x4653, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe48d, gbc.sp());
        EXPECT(0x4654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01A9
        gbc.setState(0x7152, 0x667e, 0x76c0, 0xca14, 0x6b90, 0x4e82, 0x0, 0x1);
        gbc.writeMem(0x7152, { 0x15 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x667e, gbc.sp());
        EXPECT(0x7153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01AB
        gbc.setState(0x3ecd, 0xe251, 0xad80, 0xad4, 0xfb36, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0x3ecd, { 0x15 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe251, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01AC
        gbc.setState(0x7620, 0xd541, 0xd0d0, 0xa5ef, 0x3d6e, 0x352a, 0x0, 0x1);
        gbc.writeMem(0x7620, { 0x15 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0x7621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01AD
        gbc.setState(0x9bc5, 0xd1f8, 0x2590, 0xffea, 0x23b6, 0xdf72, 0x1, 0x0);
        gbc.writeMem(0x9bc5, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xd1f8, gbc.sp());
        EXPECT(0x9bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9bc5));
        // 15 01AE
        gbc.setState(0xb92d, 0x455d, 0xb630, 0x8fb6, 0x493b, 0x283b, 0x0, 0x0);
        gbc.writeMem(0xb92d, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x455d, gbc.sp());
        EXPECT(0xb92e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb92d));
        // 15 01AF
        gbc.setState(0x902a, 0x6684, 0x4d0, 0x38f, 0x266d, 0xe7a0, 0x1, 0x1);
        gbc.writeMem(0x902a, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6684, gbc.sp());
        EXPECT(0x902b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x902a));
        // 15 01B0
        gbc.setState(0xc9f6, 0x1fd6, 0x66c0, 0xd0a8, 0xde09, 0x3459, 0x0, 0x0);
        gbc.writeMem(0xc9f6, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x1fd6, gbc.sp());
        EXPECT(0xc9f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc9f6));
        // 15 01B1
        gbc.setState(0xe5ee, 0x54d5, 0x9360, 0xb2fa, 0x404e, 0x21e1, 0x1, 0x0);
        gbc.writeMem(0xe5ee, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x54d5, gbc.sp());
        EXPECT(0xe5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe5ee));
        // 15 01B2
        gbc.setState(0x9ef9, 0x5b71, 0x3150, 0x3d1f, 0xca66, 0x4239, 0x0, 0x0);
        gbc.writeMem(0x9ef9, { 0x15 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5b71, gbc.sp());
        EXPECT(0x9efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9ef9));
        // 15 01B3
        gbc.setState(0x4ad, 0xda56, 0x6880, 0xbbcf, 0x5bc2, 0xbd24, 0x1, 0x0);
        gbc.writeMem(0x4ad, { 0x15 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xda56, gbc.sp());
        EXPECT(0x4ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01B4
        gbc.setState(0x5a97, 0xd00b, 0xba40, 0x2d9e, 0x47ab, 0x6ed, 0x0, 0x1);
        gbc.writeMem(0x5a97, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd00b, gbc.sp());
        EXPECT(0x5a98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01B5
        gbc.setState(0xb981, 0x3ba, 0x8080, 0xb330, 0x4f30, 0xc8e1, 0x1, 0x1);
        gbc.writeMem(0xb981, { 0x15 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ba, gbc.sp());
        EXPECT(0xb982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb981));
        // 15 01B6
        gbc.setState(0x924, 0x7b4c, 0x7750, 0xc39a, 0x22fa, 0xb3d4, 0x0, 0x0);
        gbc.writeMem(0x924, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7b4c, gbc.sp());
        EXPECT(0x925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01B7
        gbc.setState(0xc051, 0xc44b, 0x19c0, 0x496b, 0x6d41, 0x6e55, 0x0, 0x0);
        gbc.writeMem(0xc051, { 0x15 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc44b, gbc.sp());
        EXPECT(0xc052, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc051));
        // 15 01B8
        gbc.setState(0x44bf, 0xfcc0, 0x4980, 0x6b29, 0x68c6, 0xe712, 0x0, 0x0);
        gbc.writeMem(0x44bf, { 0x15 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfcc0, gbc.sp());
        EXPECT(0x44c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01B9
        gbc.setState(0x993f, 0x9141, 0x9e70, 0xb6b9, 0x91b5, 0x6790, 0x1, 0x0);
        gbc.writeMem(0x993f, { 0x15 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9141, gbc.sp());
        EXPECT(0x9940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x993f));
        // 15 01BA
        gbc.setState(0x93bc, 0x7a1e, 0x8d20, 0x94bc, 0xcd83, 0xfb0e, 0x1, 0x0);
        gbc.writeMem(0x93bc, { 0x15 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7a1e, gbc.sp());
        EXPECT(0x93bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x93bc));
        // 15 01BB
        gbc.setState(0xb4f2, 0x3fa3, 0x3250, 0x4507, 0x2ae, 0x294f, 0x0, 0x1);
        gbc.writeMem(0xb4f2, { 0x15 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x3fa3, gbc.sp());
        EXPECT(0xb4f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb4f2));
        // 15 01BC
        gbc.setState(0x6e11, 0x8926, 0xfb40, 0x1a69, 0xbe01, 0xc7ea, 0x1, 0x1);
        gbc.writeMem(0x6e11, { 0x15 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0x6e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01BD
        gbc.setState(0xae90, 0xbabc, 0x7d40, 0x3a9a, 0xf5c8, 0x629, 0x0, 0x0);
        gbc.writeMem(0xae90, { 0x15 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xbabc, gbc.sp());
        EXPECT(0xae91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xae90));
        // 15 01BE
        gbc.setState(0x4ab0, 0x6f65, 0xd130, 0x46ea, 0x3bc5, 0x4148, 0x1, 0x1);
        gbc.writeMem(0x4ab0, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0x4ab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01BF
        gbc.setState(0xaf84, 0x3ebb, 0x50e0, 0x919d, 0x8a46, 0x4efe, 0x1, 0x1);
        gbc.writeMem(0xaf84, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3ebb, gbc.sp());
        EXPECT(0xaf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf84));
        // 15 01C1
        gbc.setState(0x87f8, 0xb119, 0x7800, 0x9f0e, 0x2dbd, 0xd576, 0x0, 0x1);
        gbc.writeMem(0x87f8, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xb119, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x87f8));
        // 15 01C2
        gbc.setState(0xc354, 0x9b70, 0x760, 0xb0c7, 0x7748, 0xa871, 0x1, 0x1);
        gbc.writeMem(0xc354, { 0x15 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0xc355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc354));
        // 15 01C3
        gbc.setState(0x6855, 0xe7eb, 0x9f80, 0xe7ea, 0xa6ac, 0xd8ab, 0x1, 0x1);
        gbc.writeMem(0x6855, { 0x15 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0x6856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01C5
        gbc.setState(0xc955, 0xc100, 0x8df0, 0xf66a, 0xb53, 0x55eb, 0x0, 0x0);
        gbc.writeMem(0xc955, { 0x15 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc100, gbc.sp());
        EXPECT(0xc956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc955));
        // 15 01C6
        gbc.setState(0x2d83, 0x4313, 0x32c0, 0x5265, 0xaddc, 0x2fbd, 0x1, 0x0);
        gbc.writeMem(0x2d83, { 0x15 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4313, gbc.sp());
        EXPECT(0x2d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01C7
        gbc.setState(0x4e5e, 0xa874, 0xfd80, 0xa33d, 0x3f55, 0xeaae, 0x0, 0x0);
        gbc.writeMem(0x4e5e, { 0x15 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa874, gbc.sp());
        EXPECT(0x4e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01C8
        gbc.setState(0xb6a3, 0xdf61, 0xf7e0, 0xc60e, 0x89fa, 0x2820, 0x1, 0x1);
        gbc.writeMem(0xb6a3, { 0x15 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xdf61, gbc.sp());
        EXPECT(0xb6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb6a3));
        // 15 01C9
        gbc.setState(0xafe7, 0x4d73, 0xd860, 0x94aa, 0xb64a, 0xa730, 0x0, 0x0);
        gbc.writeMem(0xafe7, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4d73, gbc.sp());
        EXPECT(0xafe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xafe7));
        // 15 01CA
        gbc.setState(0x4f53, 0xbf7a, 0xa610, 0xfb42, 0xb22, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0x4f53, { 0x15 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xbf7a, gbc.sp());
        EXPECT(0x4f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01CB
        gbc.setState(0x1a8c, 0xec1b, 0x2ab0, 0x6014, 0x1d6b, 0x3f35, 0x1, 0x1);
        gbc.writeMem(0x1a8c, { 0x15 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xec1b, gbc.sp());
        EXPECT(0x1a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01CC
        gbc.setState(0x9448, 0xdfae, 0xee70, 0x3da4, 0xf51f, 0xac91, 0x1, 0x1);
        gbc.writeMem(0x9448, { 0x15 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdfae, gbc.sp());
        EXPECT(0x9449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9448));
        // 15 01CD
        gbc.setState(0xe11a, 0x9307, 0x170, 0x1ef5, 0x1ae2, 0x4ff1, 0x1, 0x0);
        gbc.writeMem(0xe11a, { 0x15 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x9307, gbc.sp());
        EXPECT(0xe11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe11a));
        // 15 01CE
        gbc.setState(0xaa25, 0xb188, 0x46e0, 0x5ae3, 0x8a8f, 0xac56, 0x1, 0x0);
        gbc.writeMem(0xaa25, { 0x15 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb188, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaa25));
        // 15 01CF
        gbc.setState(0x67e2, 0xa4b, 0x5a30, 0x1f1b, 0xbdb7, 0xdb92, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0x15 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xa4b, gbc.sp());
        EXPECT(0x67e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01D0
        gbc.setState(0xad84, 0xb320, 0xd410, 0x32c0, 0x2a2b, 0xa2, 0x1, 0x0);
        gbc.writeMem(0xad84, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb320, gbc.sp());
        EXPECT(0xad85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xad84));
        // 15 01D1
        gbc.setState(0x3a9d, 0x7252, 0x5620, 0xc635, 0xbb04, 0x8a1c, 0x0, 0x1);
        gbc.writeMem(0x3a9d, { 0x15 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7252, gbc.sp());
        EXPECT(0x3a9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01D2
        gbc.setState(0xc0c6, 0x52f6, 0x6ec0, 0xc1ae, 0x4e54, 0x45ec, 0x1, 0x0);
        gbc.writeMem(0xc0c6, { 0x15 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x52f6, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc0c6));
        // 15 01D4
        gbc.setState(0x8ef3, 0xc451, 0x3570, 0xbef, 0x1dcc, 0xd72d, 0x1, 0x0);
        gbc.writeMem(0x8ef3, { 0x15 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc451, gbc.sp());
        EXPECT(0x8ef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ef3));
        // 15 01D5
        gbc.setState(0x86de, 0xafc7, 0x9620, 0x1d8c, 0x191c, 0xcf30, 0x1, 0x0);
        gbc.writeMem(0x86de, { 0x15 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0x86df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x86de));
        // 15 01D6
        gbc.setState(0x3fa8, 0x97b7, 0xc1b0, 0x7ff6, 0x8b60, 0x3f4e, 0x1, 0x0);
        gbc.writeMem(0x3fa8, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x97b7, gbc.sp());
        EXPECT(0x3fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01D7
        gbc.setState(0x67a0, 0x7c6b, 0x71a0, 0x66f1, 0x427b, 0xacb9, 0x1, 0x0);
        gbc.writeMem(0x67a0, { 0x15 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7c6b, gbc.sp());
        EXPECT(0x67a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01D8
        gbc.setState(0x944a, 0xdb01, 0x7c40, 0xfa86, 0x492d, 0xca18, 0x1, 0x1);
        gbc.writeMem(0x944a, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xdb01, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x944a));
        // 15 01D9
        gbc.setState(0x6bab, 0xefb4, 0x6ad0, 0xac02, 0x839b, 0x63f4, 0x0, 0x1);
        gbc.writeMem(0x6bab, { 0x15 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x6bac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01DA
        gbc.setState(0x4330, 0x9007, 0x4f20, 0xd7e7, 0x53a0, 0x602b, 0x0, 0x1);
        gbc.writeMem(0x4330, { 0x15 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x9007, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01DB
        gbc.setState(0xf2a, 0x42b3, 0xbe70, 0xc136, 0xd500, 0xeae2, 0x0, 0x1);
        gbc.writeMem(0xf2a, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x42b3, gbc.sp());
        EXPECT(0xf2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01DC
        gbc.setState(0x3e29, 0x3957, 0xa20, 0x65c6, 0x6cc5, 0x5e19, 0x1, 0x0);
        gbc.writeMem(0x3e29, { 0x15 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3957, gbc.sp());
        EXPECT(0x3e2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01DD
        gbc.setState(0x9d78, 0x76f5, 0x6040, 0xa069, 0xec11, 0x34d5, 0x1, 0x1);
        gbc.writeMem(0x9d78, { 0x15 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x76f5, gbc.sp());
        EXPECT(0x9d79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9d78));
        // 15 01DF
        gbc.setState(0x587d, 0x2771, 0x99e0, 0xe1fa, 0xd3ea, 0xfb83, 0x1, 0x0);
        gbc.writeMem(0x587d, { 0x15 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x2771, gbc.sp());
        EXPECT(0x587e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01E0
        gbc.setState(0x42d6, 0xe9dc, 0x5fa0, 0x515, 0x6afc, 0x672, 0x0, 0x0);
        gbc.writeMem(0x42d6, { 0x15 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe9dc, gbc.sp());
        EXPECT(0x42d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01E1
        gbc.setState(0x9498, 0x2d92, 0x4c70, 0x726e, 0x7d23, 0xe9ae, 0x1, 0x1);
        gbc.writeMem(0x9498, { 0x15 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x2d92, gbc.sp());
        EXPECT(0x9499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9498));
        // 15 01E2
        gbc.setState(0x8ef1, 0xf2a2, 0x1ec0, 0x1bef, 0xc50, 0x59a3, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xf2a2, gbc.sp());
        EXPECT(0x8ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ef1));
        // 15 01E3
        gbc.setState(0xdb19, 0xcff3, 0xd7a0, 0x9232, 0x54ee, 0xc270, 0x0, 0x1);
        gbc.writeMem(0xdb19, { 0x15 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcff3, gbc.sp());
        EXPECT(0xdb1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb19));
        // 15 01E4
        gbc.setState(0x8ffc, 0xf8f7, 0xdc30, 0xa714, 0x7a4c, 0xc2cb, 0x0, 0x0);
        gbc.writeMem(0x8ffc, { 0x15 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf8f7, gbc.sp());
        EXPECT(0x8ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ffc));
        // 15 01E5
        gbc.setState(0x67c9, 0x8f9d, 0x69c0, 0x4d61, 0xc8f1, 0x5d3f, 0x0, 0x1);
        gbc.writeMem(0x67c9, { 0x15 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8f9d, gbc.sp());
        EXPECT(0x67ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01E6
        gbc.setState(0x1855, 0x36d3, 0xe450, 0x9555, 0x89df, 0xd372, 0x0, 0x1);
        gbc.writeMem(0x1855, { 0x15 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01E7
        gbc.setState(0x7bfd, 0x627d, 0x2e30, 0x2073, 0x584, 0x2fd4, 0x1, 0x0);
        gbc.writeMem(0x7bfd, { 0x15 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x627d, gbc.sp());
        EXPECT(0x7bfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01E8
        gbc.setState(0x12c9, 0x1d39, 0xa820, 0x9e50, 0x46d9, 0xb6a6, 0x1, 0x0);
        gbc.writeMem(0x12c9, { 0x15 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1d39, gbc.sp());
        EXPECT(0x12ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01E9
        gbc.setState(0x390d, 0x2bf1, 0xbfc0, 0x28ab, 0xfd60, 0xe40b, 0x1, 0x0);
        gbc.writeMem(0x390d, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2bf1, gbc.sp());
        EXPECT(0x390e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01EB
        gbc.setState(0xbc37, 0x249a, 0xf0c0, 0x7c11, 0x5dc1, 0x2eee, 0x0, 0x0);
        gbc.writeMem(0xbc37, { 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x249a, gbc.sp());
        EXPECT(0xbc38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbc37));
        // 15 01EC
        gbc.setState(0xb881, 0x9db0, 0x1840, 0xa4c1, 0x4218, 0xeea7, 0x0, 0x0);
        gbc.writeMem(0xb881, { 0x15 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9db0, gbc.sp());
        EXPECT(0xb882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb881));
        // 15 01ED
        gbc.setState(0x5e1, 0x79e8, 0xacb0, 0x1138, 0x4be1, 0x87d6, 0x0, 0x0);
        gbc.writeMem(0x5e1, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x79e8, gbc.sp());
        EXPECT(0x5e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01EE
        gbc.setState(0x2228, 0x2401, 0xeda0, 0xd00b, 0x2759, 0x56b4, 0x1, 0x1);
        gbc.writeMem(0x2228, { 0x15 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2401, gbc.sp());
        EXPECT(0x2229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01EF
        gbc.setState(0x4630, 0x1a5f, 0xa7d0, 0x3be8, 0x56a0, 0x4d3f, 0x0, 0x0);
        gbc.writeMem(0x4630, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1a5f, gbc.sp());
        EXPECT(0x4631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01F0
        gbc.setState(0x8b0e, 0x5699, 0x1ca0, 0xa2b7, 0x254a, 0xc126, 0x0, 0x1);
        gbc.writeMem(0x8b0e, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5699, gbc.sp());
        EXPECT(0x8b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b0e));
        // 15 01F1
        gbc.setState(0x9c23, 0xf5a1, 0x7d50, 0x9f42, 0xb1fd, 0xcccd, 0x0, 0x1);
        gbc.writeMem(0x9c23, { 0x15 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf5a1, gbc.sp());
        EXPECT(0x9c24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9c23));
        // 15 01F2
        gbc.setState(0x2be5, 0x9804, 0xa6e0, 0xbdad, 0xe5fd, 0x1290, 0x1, 0x1);
        gbc.writeMem(0x2be5, { 0x15 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9804, gbc.sp());
        EXPECT(0x2be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 01F3
        gbc.setState(0xefba, 0x8743, 0xe150, 0xa38b, 0x8f57, 0x33aa, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8743, gbc.sp());
        EXPECT(0xefbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xefba));
        // 15 01F4
        gbc.setState(0xb487, 0x635b, 0x7430, 0x37d5, 0xb11, 0xc023, 0x1, 0x0);
        gbc.writeMem(0xb487, { 0x15 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x635b, gbc.sp());
        EXPECT(0xb488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb487));
        // 15 01F5
        gbc.setState(0x9a38, 0x9adc, 0x8ac0, 0xc67b, 0x4e9c, 0xed2e, 0x0, 0x0);
        gbc.writeMem(0x9a38, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x9adc, gbc.sp());
        EXPECT(0x9a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9a38));
        // 15 01F6
        gbc.setState(0xe559, 0xdfbf, 0xb2b0, 0xf57c, 0xc1fe, 0x77c3, 0x1, 0x0);
        gbc.writeMem(0xe559, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xdfbf, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe559));
        // 15 01F7
        gbc.setState(0x92b3, 0xaa14, 0x40, 0xc88c, 0x136a, 0x416d, 0x0, 0x1);
        gbc.writeMem(0x92b3, { 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xaa14, gbc.sp());
        EXPECT(0x92b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x92b3));
        // 15 01F8
        gbc.setState(0x8472, 0x5a16, 0x40, 0x795d, 0x641a, 0x8b1b, 0x1, 0x1);
        gbc.writeMem(0x8472, { 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x8473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8472));
        // 15 01FA
        gbc.setState(0x2cfb, 0x88f6, 0xbe10, 0xc9c4, 0xafec, 0x822, 0x1, 0x1);
        gbc.writeMem(0x2cfb, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x88f6, gbc.sp());
        EXPECT(0x2cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01FB
        gbc.setState(0x2c77, 0xa06a, 0x71b0, 0x3357, 0x4f70, 0xcabb, 0x1, 0x0);
        gbc.writeMem(0x2c77, { 0x15 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa06a, gbc.sp());
        EXPECT(0x2c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01FC
        gbc.setState(0xef96, 0x265f, 0x7440, 0xba63, 0xfbff, 0x5474, 0x1, 0x1);
        gbc.writeMem(0xef96, { 0x15 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x265f, gbc.sp());
        EXPECT(0xef97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xef96));
        // 15 01FD
        gbc.setState(0x5050, 0x401e, 0xfc70, 0x4490, 0xf0dc, 0x70b2, 0x0, 0x0);
        gbc.writeMem(0x5050, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0x5051, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01FE
        gbc.setState(0x7555, 0x2cd9, 0x7a10, 0xd443, 0xb134, 0x7217, 0x1, 0x0);
        gbc.writeMem(0x7555, { 0x15 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2cd9, gbc.sp());
        EXPECT(0x7556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 01FF
        gbc.setState(0x85fb, 0x3fb3, 0x18f0, 0x78e7, 0xd67f, 0xc7c7, 0x1, 0x1);
        gbc.writeMem(0x85fb, { 0x15 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3fb3, gbc.sp());
        EXPECT(0x85fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x85fb));
        // 15 0200
        gbc.setState(0x1317, 0x78a5, 0x2030, 0xefb5, 0x4fe9, 0x3f92, 0x1, 0x1);
        gbc.writeMem(0x1317, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x1318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0201
        gbc.setState(0xd18, 0xba9f, 0x2250, 0x8bec, 0x4426, 0x9430, 0x1, 0x1);
        gbc.writeMem(0xd18, { 0x15 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xba9f, gbc.sp());
        EXPECT(0xd19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0202
        gbc.setState(0xccb0, 0x5734, 0xe380, 0xc9ff, 0xa4aa, 0x1353, 0x1, 0x1);
        gbc.writeMem(0xccb0, { 0x15 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5734, gbc.sp());
        EXPECT(0xccb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xccb0));
        // 15 0203
        gbc.setState(0xe1b0, 0x8ea9, 0xb800, 0xdc4f, 0x631b, 0x9194, 0x0, 0x0);
        gbc.writeMem(0xe1b0, { 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8ea9, gbc.sp());
        EXPECT(0xe1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe1b0));
        // 15 0204
        gbc.setState(0x15a2, 0x49d, 0x3030, 0x3dea, 0xbff5, 0xfc12, 0x0, 0x1);
        gbc.writeMem(0x15a2, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x15a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0205
        gbc.setState(0x6875, 0x23a7, 0xd210, 0xc7a7, 0xd966, 0xc849, 0x0, 0x0);
        gbc.writeMem(0x6875, { 0x15 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x23a7, gbc.sp());
        EXPECT(0x6876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0206
        gbc.setState(0x7, 0x679b, 0x3c50, 0x8917, 0x95a6, 0xeec4, 0x1, 0x1);
        gbc.writeMem(0x7, { 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x679b, gbc.sp());
        EXPECT(0x8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0207
        gbc.setState(0x6816, 0xd4cc, 0xf390, 0x5c0a, 0x2872, 0x1604, 0x0, 0x1);
        gbc.writeMem(0x6816, { 0x15 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xd4cc, gbc.sp());
        EXPECT(0x6817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0208
        gbc.setState(0xc18, 0xba37, 0xe190, 0x50a1, 0x5da2, 0x4e45, 0x1, 0x1);
        gbc.writeMem(0xc18, { 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0xc19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0209
        gbc.setState(0x182c, 0xaa3, 0xf0, 0x3fae, 0xe3bd, 0xf1b, 0x0, 0x0);
        gbc.writeMem(0x182c, { 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xaa3, gbc.sp());
        EXPECT(0x182d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 020A
        gbc.setState(0x4e50, 0xbebf, 0xc710, 0xb12d, 0x8e85, 0xa1ed, 0x1, 0x1);
        gbc.writeMem(0x4e50, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbebf, gbc.sp());
        EXPECT(0x4e51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 020B
        gbc.setState(0x8c49, 0x2bae, 0x5610, 0xa69c, 0x5b75, 0x1b73, 0x0, 0x0);
        gbc.writeMem(0x8c49, { 0x15 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0x8c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8c49));
        // 15 020C
        gbc.setState(0x27bb, 0x797f, 0x9bc0, 0xc592, 0x3dd3, 0x3bdc, 0x1, 0x0);
        gbc.writeMem(0x27bb, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x797f, gbc.sp());
        EXPECT(0x27bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 020D
        gbc.setState(0x4e4e, 0x3b58, 0x20c0, 0x3994, 0x9602, 0x7224, 0x0, 0x0);
        gbc.writeMem(0x4e4e, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x4e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 020E
        gbc.setState(0x22ee, 0x81c6, 0x44b0, 0x82de, 0xb451, 0xc017, 0x1, 0x0);
        gbc.writeMem(0x22ee, { 0x15 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x81c6, gbc.sp());
        EXPECT(0x22ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 020F
        gbc.setState(0xacd8, 0xe92e, 0x7fc0, 0x1e7f, 0xbdda, 0x8b33, 0x0, 0x1);
        gbc.writeMem(0xacd8, { 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe92e, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xacd8));
        // 15 0210
        gbc.setState(0x8b49, 0xe8dc, 0xfe40, 0x5c4b, 0x8e30, 0x4ede, 0x1, 0x1);
        gbc.writeMem(0x8b49, { 0x15 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0x8b4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b49));
        // 15 0211
        gbc.setState(0x6e4a, 0x401a, 0xa1b0, 0xfc81, 0x35a8, 0xb628, 0x1, 0x1);
        gbc.writeMem(0x6e4a, { 0x15 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x401a, gbc.sp());
        EXPECT(0x6e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0212
        gbc.setState(0x6bc3, 0x1210, 0x7030, 0xc104, 0xf3b7, 0xdbd7, 0x1, 0x0);
        gbc.writeMem(0x6bc3, { 0x15 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1210, gbc.sp());
        EXPECT(0x6bc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0214
        gbc.setState(0x5c9d, 0x7895, 0x87b0, 0x504c, 0x98bd, 0xf3f9, 0x0, 0x1);
        gbc.writeMem(0x5c9d, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7895, gbc.sp());
        EXPECT(0x5c9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0215
        gbc.setState(0x8533, 0xec98, 0x1fb0, 0xde2d, 0x12a6, 0x651, 0x1, 0x0);
        gbc.writeMem(0x8533, { 0x15 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xec98, gbc.sp());
        EXPECT(0x8534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8533));
        // 15 0216
        gbc.setState(0xcb1b, 0x8ab4, 0xbf90, 0xf8d6, 0xbfda, 0x292d, 0x1, 0x0);
        gbc.writeMem(0xcb1b, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8ab4, gbc.sp());
        EXPECT(0xcb1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcb1b));
        // 15 0217
        gbc.setState(0x38ef, 0x5855, 0x6ea0, 0xa600, 0xf719, 0x94fe, 0x0, 0x1);
        gbc.writeMem(0x38ef, { 0x15 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5855, gbc.sp());
        EXPECT(0x38f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0218
        gbc.setState(0x7ef8, 0xa0da, 0xc20, 0x6a9b, 0x141f, 0x7c3c, 0x1, 0x1);
        gbc.writeMem(0x7ef8, { 0x15 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xa0da, gbc.sp());
        EXPECT(0x7ef9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0219
        gbc.setState(0xeea5, 0x9e84, 0x7d20, 0xaadb, 0x67b8, 0x554, 0x1, 0x0);
        gbc.writeMem(0xeea5, { 0x15 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9e84, gbc.sp());
        EXPECT(0xeea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeea5));
        // 15 021A
        gbc.setState(0x4a6a, 0xc88e, 0xf650, 0xd3c4, 0xadcd, 0xda16, 0x1, 0x0);
        gbc.writeMem(0x4a6a, { 0x15 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc88e, gbc.sp());
        EXPECT(0x4a6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 021B
        gbc.setState(0xabee, 0x5bfe, 0x3d40, 0xe801, 0x53be, 0xdd16, 0x0, 0x0);
        gbc.writeMem(0xabee, { 0x15 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xabee));
        // 15 021C
        gbc.setState(0x645a, 0x9fe5, 0x5d0, 0x9cd2, 0xc2c2, 0x898a, 0x1, 0x1);
        gbc.writeMem(0x645a, { 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 021D
        gbc.setState(0x129c, 0xd246, 0x66b0, 0x2b1b, 0x61f, 0x74e, 0x0, 0x1);
        gbc.writeMem(0x129c, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd246, gbc.sp());
        EXPECT(0x129d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 021E
        gbc.setState(0xbe31, 0x4364, 0x2700, 0x8ad4, 0x4801, 0xf10e, 0x0, 0x1);
        gbc.writeMem(0xbe31, { 0x15 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0xbe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbe31));
        // 15 021F
        gbc.setState(0x9abf, 0xafa, 0xb670, 0xfe4f, 0xd2ef, 0xb02, 0x0, 0x0);
        gbc.writeMem(0x9abf, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xafa, gbc.sp());
        EXPECT(0x9ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9abf));
        // 15 0220
        gbc.setState(0x53d0, 0x5864, 0x1ee0, 0x68b6, 0x8370, 0x5615, 0x0, 0x1);
        gbc.writeMem(0x53d0, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0221
        gbc.setState(0x12ed, 0xb3e5, 0xb880, 0x993, 0x3feb, 0x22a7, 0x1, 0x0);
        gbc.writeMem(0x12ed, { 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0222
        gbc.setState(0x6d1b, 0xe843, 0xb750, 0x6040, 0x35cf, 0x81f9, 0x1, 0x0);
        gbc.writeMem(0x6d1b, { 0x15 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe843, gbc.sp());
        EXPECT(0x6d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0223
        gbc.setState(0x800a, 0x3f78, 0xcbe0, 0xd629, 0x1cf, 0x55d2, 0x0, 0x0);
        gbc.writeMem(0x800a, { 0x15 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3f78, gbc.sp());
        EXPECT(0x800b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x800a));
        // 15 0224
        gbc.setState(0xc417, 0x5efe, 0xd40, 0x9ec2, 0xae27, 0x63e7, 0x0, 0x1);
        gbc.writeMem(0xc417, { 0x15 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5efe, gbc.sp());
        EXPECT(0xc418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc417));
        // 15 0225
        gbc.setState(0x2408, 0xec6a, 0x6e20, 0x1ec2, 0x5c87, 0x902e, 0x1, 0x1);
        gbc.writeMem(0x2408, { 0x15 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xec6a, gbc.sp());
        EXPECT(0x2409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0226
        gbc.setState(0x250, 0x2f43, 0x5f90, 0xeec5, 0xe259, 0xeb1d, 0x0, 0x0);
        gbc.writeMem(0x250, { 0x15 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f43, gbc.sp());
        EXPECT(0x251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0228
        gbc.setState(0x6c08, 0x14d3, 0xbdb0, 0x533b, 0x1c63, 0xf2f0, 0x0, 0x1);
        gbc.writeMem(0x6c08, { 0x15 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x14d3, gbc.sp());
        EXPECT(0x6c09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0229
        gbc.setState(0x9f1d, 0x69ba, 0x6bd0, 0x745e, 0xa77d, 0x51ab, 0x1, 0x0);
        gbc.writeMem(0x9f1d, { 0x15 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x69ba, gbc.sp());
        EXPECT(0x9f1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9f1d));
        // 15 022A
        gbc.setState(0xf9f, 0x204d, 0x1c40, 0x9e55, 0x578b, 0x8160, 0x1, 0x1);
        gbc.writeMem(0xf9f, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x204d, gbc.sp());
        EXPECT(0xfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 022B
        gbc.setState(0xd4c5, 0xdbe4, 0xf8b0, 0x177c, 0x6690, 0x484f, 0x0, 0x1);
        gbc.writeMem(0xd4c5, { 0x15 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdbe4, gbc.sp());
        EXPECT(0xd4c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd4c5));
        // 15 022D
        gbc.setState(0x7303, 0xe25b, 0xeb10, 0x85b2, 0x35c7, 0x8ab4, 0x0, 0x0);
        gbc.writeMem(0x7303, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe25b, gbc.sp());
        EXPECT(0x7304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 022E
        gbc.setState(0x8143, 0x523d, 0x5eb0, 0x16ba, 0xe1d6, 0xdf3e, 0x0, 0x1);
        gbc.writeMem(0x8143, { 0x15 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x523d, gbc.sp());
        EXPECT(0x8144, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8143));
        // 15 022F
        gbc.setState(0x4eb, 0x6955, 0xdbe0, 0x18fe, 0xd079, 0x522, 0x1, 0x0);
        gbc.writeMem(0x4eb, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6955, gbc.sp());
        EXPECT(0x4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0230
        gbc.setState(0x9c3c, 0x94ad, 0xcda0, 0xb989, 0x2b09, 0x49d8, 0x0, 0x0);
        gbc.writeMem(0x9c3c, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x94ad, gbc.sp());
        EXPECT(0x9c3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9c3c));
        // 15 0231
        gbc.setState(0x46a0, 0xf6df, 0x37f0, 0x9981, 0x837f, 0x6edf, 0x0, 0x0);
        gbc.writeMem(0x46a0, { 0x15 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0x46a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0232
        gbc.setState(0x7c3e, 0x5439, 0x1260, 0x818, 0x7f96, 0xfe29, 0x0, 0x1);
        gbc.writeMem(0x7c3e, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5439, gbc.sp());
        EXPECT(0x7c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0233
        gbc.setState(0xa6ca, 0xa5f9, 0xc170, 0xe0b4, 0x7b65, 0x3ec7, 0x1, 0x0);
        gbc.writeMem(0xa6ca, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xa5f9, gbc.sp());
        EXPECT(0xa6cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa6ca));
        // 15 0234
        gbc.setState(0x2786, 0xe068, 0x7f20, 0xf276, 0x28ea, 0xc76c, 0x0, 0x0);
        gbc.writeMem(0x2786, { 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe068, gbc.sp());
        EXPECT(0x2787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0235
        gbc.setState(0x6ec2, 0x617a, 0x53a0, 0xa66f, 0x975b, 0xd333, 0x0, 0x1);
        gbc.writeMem(0x6ec2, { 0x15 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x617a, gbc.sp());
        EXPECT(0x6ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0236
        gbc.setState(0x8ca0, 0x323d, 0xb950, 0x84af, 0x350a, 0xb5f0, 0x1, 0x1);
        gbc.writeMem(0x8ca0, { 0x15 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x323d, gbc.sp());
        EXPECT(0x8ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8ca0));
        // 15 0237
        gbc.setState(0x5f9f, 0xe71a, 0x18c0, 0x2980, 0x66d7, 0xa896, 0x0, 0x0);
        gbc.writeMem(0x5f9f, { 0x15 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe71a, gbc.sp());
        EXPECT(0x5fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0238
        gbc.setState(0xe811, 0x8c4a, 0x5c0, 0x2372, 0x624, 0x6e75, 0x1, 0x1);
        gbc.writeMem(0xe811, { 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x8c4a, gbc.sp());
        EXPECT(0xe812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe811));
        // 15 0239
        gbc.setState(0xd949, 0x6caf, 0x5ec0, 0x738e, 0xcc19, 0xd594, 0x1, 0x0);
        gbc.writeMem(0xd949, { 0x15 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6caf, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd949));
        // 15 023A
        gbc.setState(0x7dce, 0x57e1, 0xf430, 0xbf24, 0xe334, 0x34cb, 0x1, 0x1);
        gbc.writeMem(0x7dce, { 0x15 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x57e1, gbc.sp());
        EXPECT(0x7dcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 023B
        gbc.setState(0xcf37, 0xf491, 0xc2e0, 0xa1c2, 0x9a88, 0xd640, 0x1, 0x0);
        gbc.writeMem(0xcf37, { 0x15 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0xcf38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf37));
        // 15 023C
        gbc.setState(0x1fc8, 0x19fb, 0x1cc0, 0x448f, 0x20e3, 0x2a0d, 0x1, 0x0);
        gbc.writeMem(0x1fc8, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x19fb, gbc.sp());
        EXPECT(0x1fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 023D
        gbc.setState(0x87c5, 0x475b, 0xfd60, 0xd72a, 0xa33e, 0x8453, 0x1, 0x1);
        gbc.writeMem(0x87c5, { 0x15 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x475b, gbc.sp());
        EXPECT(0x87c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x87c5));
        // 15 023E
        gbc.setState(0x5a97, 0xe3bb, 0x2810, 0xc679, 0x45b8, 0x11dc, 0x1, 0x0);
        gbc.writeMem(0x5a97, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xe3bb, gbc.sp());
        EXPECT(0x5a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 023F
        gbc.setState(0xe4fa, 0x8fa9, 0x570, 0xffe3, 0x5739, 0xa52b, 0x1, 0x0);
        gbc.writeMem(0xe4fa, { 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8fa9, gbc.sp());
        EXPECT(0xe4fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe4fa));
        // 15 0240
        gbc.setState(0x1bc1, 0x9d05, 0x7a10, 0x70e5, 0x8118, 0x8f6d, 0x0, 0x1);
        gbc.writeMem(0x1bc1, { 0x15 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9d05, gbc.sp());
        EXPECT(0x1bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0242
        gbc.setState(0x532c, 0x5c02, 0x3b0, 0xc182, 0xae57, 0xe631, 0x0, 0x0);
        gbc.writeMem(0x532c, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5c02, gbc.sp());
        EXPECT(0x532d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0243
        gbc.setState(0xee97, 0xd0a6, 0xc7e0, 0xbbc4, 0x6c51, 0x57f1, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0xee98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee97));
        // 15 0244
        gbc.setState(0x6118, 0x3377, 0x28d0, 0x4215, 0xaeac, 0x94af, 0x0, 0x0);
        gbc.writeMem(0x6118, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x3377, gbc.sp());
        EXPECT(0x6119, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0245
        gbc.setState(0x1fac, 0x1a10, 0xbfa0, 0x9fa9, 0xe2f5, 0x123b, 0x0, 0x1);
        gbc.writeMem(0x1fac, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1a10, gbc.sp());
        EXPECT(0x1fad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0246
        gbc.setState(0x6a0f, 0x7bba, 0x9740, 0x53d4, 0x1dd9, 0x66d3, 0x1, 0x0);
        gbc.writeMem(0x6a0f, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7bba, gbc.sp());
        EXPECT(0x6a10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0247
        gbc.setState(0x945f, 0x6d44, 0x2f90, 0xeb49, 0xafb8, 0x2e3c, 0x0, 0x1);
        gbc.writeMem(0x945f, { 0x15 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6d44, gbc.sp());
        EXPECT(0x9460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x945f));
        // 15 0248
        gbc.setState(0xeef3, 0x7d70, 0x9360, 0xe7ac, 0xcfe4, 0xb054, 0x1, 0x0);
        gbc.writeMem(0xeef3, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7d70, gbc.sp());
        EXPECT(0xeef4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeef3));
        // 15 0249
        gbc.setState(0xe813, 0x6a1c, 0xd650, 0x510b, 0x9bdf, 0xb367, 0x0, 0x1);
        gbc.writeMem(0xe813, { 0x15 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6a1c, gbc.sp());
        EXPECT(0xe814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe813));
        // 15 024A
        gbc.setState(0x6971, 0xe4a0, 0x4b0, 0x7d3b, 0xbe9, 0x7f32, 0x1, 0x0);
        gbc.writeMem(0x6971, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe4a0, gbc.sp());
        EXPECT(0x6972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 024B
        gbc.setState(0x8c5c, 0x74f3, 0xc350, 0x1e71, 0x9dc7, 0x19c9, 0x1, 0x0);
        gbc.writeMem(0x8c5c, { 0x15 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x74f3, gbc.sp());
        EXPECT(0x8c5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8c5c));
        // 15 024C
        gbc.setState(0x2178, 0x1533, 0x6be0, 0xdc8e, 0x3282, 0x50fd, 0x1, 0x0);
        gbc.writeMem(0x2178, { 0x15 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1533, gbc.sp());
        EXPECT(0x2179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 024D
        gbc.setState(0x435d, 0xf269, 0x1590, 0x5c65, 0x4a42, 0xb506, 0x0, 0x1);
        gbc.writeMem(0x435d, { 0x15 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf269, gbc.sp());
        EXPECT(0x435e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 024E
        gbc.setState(0x6380, 0x5a65, 0x4e0, 0x769a, 0x8b64, 0xdf3, 0x0, 0x0);
        gbc.writeMem(0x6380, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5a65, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 024F
        gbc.setState(0x54a1, 0xef4c, 0xd690, 0xbd18, 0x84b7, 0xeaaa, 0x1, 0x0);
        gbc.writeMem(0x54a1, { 0x15 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0250
        gbc.setState(0x42fb, 0x2398, 0xdce0, 0xf2c4, 0x8363, 0x5320, 0x0, 0x0);
        gbc.writeMem(0x42fb, { 0x15 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2398, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0251
        gbc.setState(0x5b01, 0x3f2b, 0xb1f0, 0x55f8, 0xc326, 0x3451, 0x1, 0x1);
        gbc.writeMem(0x5b01, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3f2b, gbc.sp());
        EXPECT(0x5b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0252
        gbc.setState(0xa5, 0x776b, 0xebd0, 0x64b4, 0x4742, 0x691b, 0x0, 0x0);
        gbc.writeMem(0xa5, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x776b, gbc.sp());
        EXPECT(0xa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0253
        gbc.setState(0x460c, 0x29ab, 0x10f0, 0x4792, 0x8f3e, 0x3ab6, 0x0, 0x0);
        gbc.writeMem(0x460c, { 0x15 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x29ab, gbc.sp());
        EXPECT(0x460d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0256
        gbc.setState(0x146c, 0x708b, 0x6be0, 0x94c, 0x6c95, 0x5189, 0x0, 0x1);
        gbc.writeMem(0x146c, { 0x15 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x708b, gbc.sp());
        EXPECT(0x146d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0257
        gbc.setState(0xed2f, 0xd5a4, 0x5730, 0x6fd6, 0xdbe9, 0xdd23, 0x0, 0x0);
        gbc.writeMem(0xed2f, { 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd5a4, gbc.sp());
        EXPECT(0xed30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xed2f));
        // 15 0258
        gbc.setState(0x354b, 0x66bc, 0x83e0, 0x2098, 0x964a, 0x423d, 0x1, 0x1);
        gbc.writeMem(0x354b, { 0x15 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x66bc, gbc.sp());
        EXPECT(0x354c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0259
        gbc.setState(0xab45, 0xde81, 0x9870, 0x8127, 0x5eb0, 0x221c, 0x0, 0x1);
        gbc.writeMem(0xab45, { 0x15 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xde81, gbc.sp());
        EXPECT(0xab46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xab45));
        // 15 025A
        gbc.setState(0x8b9b, 0xd900, 0x2c20, 0xebd1, 0x733f, 0xca33, 0x1, 0x1);
        gbc.writeMem(0x8b9b, { 0x15 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd900, gbc.sp());
        EXPECT(0x8b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b9b));
        // 15 025B
        gbc.setState(0x144f, 0xc930, 0x4cd0, 0x1629, 0x8f18, 0xf16, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0x15 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc930, gbc.sp());
        EXPECT(0x1450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 025C
        gbc.setState(0x8a15, 0x23a2, 0xfd10, 0xe54e, 0xd19a, 0xc85c, 0x1, 0x1);
        gbc.writeMem(0x8a15, { 0x15 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x23a2, gbc.sp());
        EXPECT(0x8a16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8a15));
        // 15 025D
        gbc.setState(0xeb5f, 0xd48, 0x5730, 0xdfcb, 0x93ac, 0x6631, 0x0, 0x1);
        gbc.writeMem(0xeb5f, { 0x15 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd48, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeb5f));
        // 15 025E
        gbc.setState(0x4035, 0x8c57, 0xc170, 0xbc9c, 0xfed2, 0x6a68, 0x0, 0x0);
        gbc.writeMem(0x4035, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8c57, gbc.sp());
        EXPECT(0x4036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 025F
        gbc.setState(0x741e, 0x6349, 0xac20, 0x21b2, 0xef8a, 0xb754, 0x0, 0x1);
        gbc.writeMem(0x741e, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6349, gbc.sp());
        EXPECT(0x741f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0260
        gbc.setState(0x8a10, 0xf0f, 0x7b0, 0x253d, 0x6d75, 0xb1a1, 0x1, 0x0);
        gbc.writeMem(0x8a10, { 0x15 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0x8a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8a10));
        // 15 0261
        gbc.setState(0xcf5c, 0x45d5, 0x29f0, 0xaca1, 0x5270, 0xc522, 0x0, 0x1);
        gbc.writeMem(0xcf5c, { 0x15 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x45d5, gbc.sp());
        EXPECT(0xcf5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf5c));
        // 15 0262
        gbc.setState(0x8a03, 0x207b, 0xa6b0, 0x6c, 0x70c7, 0xf244, 0x0, 0x0);
        gbc.writeMem(0x8a03, { 0x15 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x207b, gbc.sp());
        EXPECT(0x8a04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8a03));
        // 15 0263
        gbc.setState(0x6be0, 0xaf9a, 0x3a50, 0x8d7f, 0xa2d5, 0xcb2, 0x1, 0x1);
        gbc.writeMem(0x6be0, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xaf9a, gbc.sp());
        EXPECT(0x6be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0264
        gbc.setState(0x4a90, 0xbad7, 0xcaa0, 0xc53a, 0xd329, 0x6213, 0x0, 0x1);
        gbc.writeMem(0x4a90, { 0x15 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbad7, gbc.sp());
        EXPECT(0x4a91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0265
        gbc.setState(0xb863, 0x92e6, 0x3a90, 0xee9b, 0x9dde, 0xb9fd, 0x1, 0x0);
        gbc.writeMem(0xb863, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x92e6, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb863));
        // 15 0266
        gbc.setState(0xdb11, 0x85b9, 0xc720, 0x51f1, 0xcb96, 0x1735, 0x1, 0x0);
        gbc.writeMem(0xdb11, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x85b9, gbc.sp());
        EXPECT(0xdb12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb11));
        // 15 0267
        gbc.setState(0x6358, 0xb774, 0x4a20, 0xdbe8, 0xfc5e, 0x55b, 0x0, 0x0);
        gbc.writeMem(0x6358, { 0x15 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0268
        gbc.setState(0x57b2, 0x5f9e, 0x77d0, 0x5b9f, 0x2026, 0x6aa5, 0x1, 0x1);
        gbc.writeMem(0x57b2, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x57b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0269
        gbc.setState(0xb55e, 0x82c3, 0x55d0, 0xc8f2, 0x7fab, 0x78c4, 0x0, 0x0);
        gbc.writeMem(0xb55e, { 0x15 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x82c3, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb55e));
        // 15 026A
        gbc.setState(0x65cc, 0x8a44, 0x1e40, 0xc5d6, 0x71fb, 0x7b64, 0x1, 0x1);
        gbc.writeMem(0x65cc, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8a44, gbc.sp());
        EXPECT(0x65cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 026B
        gbc.setState(0x722d, 0x7947, 0x78a0, 0xaccd, 0x9cb, 0xad00, 0x1, 0x0);
        gbc.writeMem(0x722d, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7947, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 026C
        gbc.setState(0xdaf0, 0x2f6b, 0xfcc0, 0xab0a, 0x7c03, 0x7a6, 0x0, 0x1);
        gbc.writeMem(0xdaf0, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x2f6b, gbc.sp());
        EXPECT(0xdaf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdaf0));
        // 15 026D
        gbc.setState(0x52de, 0x6f44, 0xcfb0, 0xf085, 0xb2f4, 0xab3c, 0x0, 0x0);
        gbc.writeMem(0x52de, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 026E
        gbc.setState(0x16dc, 0x1983, 0xc020, 0xa1fc, 0x70b5, 0x4f5d, 0x1, 0x1);
        gbc.writeMem(0x16dc, { 0x15 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1983, gbc.sp());
        EXPECT(0x16dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 026F
        gbc.setState(0x1649, 0x506f, 0xe730, 0x96b0, 0x7a0b, 0x5757, 0x0, 0x0);
        gbc.writeMem(0x1649, { 0x15 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x506f, gbc.sp());
        EXPECT(0x164a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0270
        gbc.setState(0xea24, 0x61a4, 0x84e0, 0x8a52, 0xd3fd, 0xfd78, 0x1, 0x1);
        gbc.writeMem(0xea24, { 0x15 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x61a4, gbc.sp());
        EXPECT(0xea25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xea24));
        // 15 0271
        gbc.setState(0xc429, 0x1988, 0xa2e0, 0x4fb4, 0xdd1a, 0xf149, 0x0, 0x0);
        gbc.writeMem(0xc429, { 0x15 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1988, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc429));
        // 15 0272
        gbc.setState(0x1adb, 0x4aba, 0x7a50, 0x971b, 0xf588, 0xd8d, 0x1, 0x0);
        gbc.writeMem(0x1adb, { 0x15 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4aba, gbc.sp());
        EXPECT(0x1adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0273
        gbc.setState(0x9244, 0x7128, 0x3360, 0xb864, 0xb801, 0x55f8, 0x1, 0x0);
        gbc.writeMem(0x9244, { 0x15 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7128, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9244));
        // 15 0274
        gbc.setState(0xa2bd, 0x9b6f, 0x2d0, 0x1cc8, 0x6434, 0xd316, 0x0, 0x0);
        gbc.writeMem(0xa2bd, { 0x15 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9b6f, gbc.sp());
        EXPECT(0xa2be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa2bd));
        // 15 0275
        gbc.setState(0x3722, 0xd397, 0xd410, 0xb608, 0x62b, 0x3add, 0x0, 0x1);
        gbc.writeMem(0x3722, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x3723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0276
        gbc.setState(0x2035, 0x9689, 0xf7b0, 0xba48, 0x6dce, 0xb47a, 0x1, 0x0);
        gbc.writeMem(0x2035, { 0x15 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9689, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0277
        gbc.setState(0x1018, 0x25af, 0x450, 0x488a, 0x52e6, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x1018, { 0x15 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x25af, gbc.sp());
        EXPECT(0x1019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0278
        gbc.setState(0xaf7a, 0xbd6b, 0xd3b0, 0x3b85, 0xbd19, 0x7705, 0x1, 0x1);
        gbc.writeMem(0xaf7a, { 0x15 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0xaf7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf7a));
        // 15 0279
        gbc.setState(0x1119, 0xfcc0, 0x3ff0, 0x95e7, 0xecc9, 0x613b, 0x1, 0x1);
        gbc.writeMem(0x1119, { 0x15 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfcc0, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 027A
        gbc.setState(0xe7cc, 0x79df, 0x51b0, 0x33d6, 0x9c52, 0x6f36, 0x0, 0x0);
        gbc.writeMem(0xe7cc, { 0x15 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x79df, gbc.sp());
        EXPECT(0xe7cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe7cc));
        // 15 027B
        gbc.setState(0x7418, 0x761f, 0xd4f0, 0xf3ec, 0xe483, 0xd771, 0x0, 0x0);
        gbc.writeMem(0x7418, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x761f, gbc.sp());
        EXPECT(0x7419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 027C
        gbc.setState(0x5dde, 0x786d, 0x88d0, 0xbbd6, 0xb4d3, 0xdb3b, 0x0, 0x1);
        gbc.writeMem(0x5dde, { 0x15 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0x5ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 027D
        gbc.setState(0x1fd0, 0xe4c7, 0xe280, 0xbdf5, 0x901e, 0xae58, 0x1, 0x1);
        gbc.writeMem(0x1fd0, { 0x15 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe4c7, gbc.sp());
        EXPECT(0x1fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 027E
        gbc.setState(0x967c, 0x6f12, 0x7960, 0x89b1, 0x71c, 0xf6e0, 0x1, 0x0);
        gbc.writeMem(0x967c, { 0x15 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x6f12, gbc.sp());
        EXPECT(0x967d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x967c));
        // 15 027F
        gbc.setState(0xb080, 0x1aa7, 0x8560, 0xb02c, 0x7cb9, 0xc216, 0x0, 0x0);
        gbc.writeMem(0xb080, { 0x15 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0xb081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb080));
        // 15 0280
        gbc.setState(0x2a04, 0x933e, 0xc510, 0x556e, 0x3a69, 0x3192, 0x1, 0x0);
        gbc.writeMem(0x2a04, { 0x15 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x933e, gbc.sp());
        EXPECT(0x2a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0281
        gbc.setState(0x9958, 0x6ad3, 0x20e0, 0x607b, 0xf7a1, 0x258, 0x1, 0x0);
        gbc.writeMem(0x9958, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6ad3, gbc.sp());
        EXPECT(0x9959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9958));
        // 15 0282
        gbc.setState(0xa0f0, 0x2573, 0x1660, 0x88f4, 0xc57b, 0xfcfb, 0x1, 0x1);
        gbc.writeMem(0xa0f0, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x2573, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa0f0));
        // 15 0283
        gbc.setState(0x7180, 0x161, 0x45f0, 0x10bc, 0x4ba4, 0xdcf7, 0x0, 0x0);
        gbc.writeMem(0x7180, { 0x15 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x161, gbc.sp());
        EXPECT(0x7181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0284
        gbc.setState(0x46b9, 0x55b3, 0x9610, 0x4346, 0x2a9f, 0xf5c9, 0x0, 0x0);
        gbc.writeMem(0x46b9, { 0x15 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x55b3, gbc.sp());
        EXPECT(0x46ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0285
        gbc.setState(0xb99a, 0x1df7, 0xa3e0, 0x63d2, 0x378, 0x1d6d, 0x0, 0x1);
        gbc.writeMem(0xb99a, { 0x15 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1df7, gbc.sp());
        EXPECT(0xb99b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb99a));
        // 15 0286
        gbc.setState(0xcb8d, 0x429, 0xc4e0, 0x19c8, 0x3db7, 0x49d, 0x0, 0x1);
        gbc.writeMem(0xcb8d, { 0x15 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x429, gbc.sp());
        EXPECT(0xcb8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcb8d));
        // 15 0287
        gbc.setState(0x1bd6, 0x976b, 0xcd40, 0x38c, 0x32de, 0x6ebb, 0x1, 0x0);
        gbc.writeMem(0x1bd6, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x976b, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0288
        gbc.setState(0xa8dc, 0xd365, 0xebf0, 0xd127, 0x3020, 0x6327, 0x0, 0x0);
        gbc.writeMem(0xa8dc, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd365, gbc.sp());
        EXPECT(0xa8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa8dc));
        // 15 0289
        gbc.setState(0x266b, 0x79bb, 0x850, 0x72cc, 0xc9e0, 0xd347, 0x0, 0x0);
        gbc.writeMem(0x266b, { 0x15 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x79bb, gbc.sp());
        EXPECT(0x266c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 028A
        gbc.setState(0x787, 0xdb46, 0x3820, 0xf7ae, 0xcf5f, 0x9226, 0x1, 0x0);
        gbc.writeMem(0x787, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdb46, gbc.sp());
        EXPECT(0x788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 028B
        gbc.setState(0xa7b6, 0xf8b3, 0x5ee0, 0x2d9a, 0xbfcd, 0x7f5, 0x0, 0x1);
        gbc.writeMem(0xa7b6, { 0x15 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf8b3, gbc.sp());
        EXPECT(0xa7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa7b6));
        // 15 028C
        gbc.setState(0xc385, 0x698b, 0xd8f0, 0xca89, 0xfa23, 0xbc4c, 0x1, 0x1);
        gbc.writeMem(0xc385, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x698b, gbc.sp());
        EXPECT(0xc386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc385));
        // 15 028D
        gbc.setState(0x9701, 0x2076, 0x48c0, 0x40ed, 0x7d35, 0xad93, 0x0, 0x1);
        gbc.writeMem(0x9701, { 0x15 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2076, gbc.sp());
        EXPECT(0x9702, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9701));
        // 15 028E
        gbc.setState(0xe4de, 0x7c26, 0x86e0, 0xc6c8, 0xf262, 0x28c1, 0x1, 0x1);
        gbc.writeMem(0xe4de, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7c26, gbc.sp());
        EXPECT(0xe4df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe4de));
        // 15 028F
        gbc.setState(0x3cca, 0x77e3, 0x7db0, 0x664e, 0xe2e7, 0xba3, 0x1, 0x1);
        gbc.writeMem(0x3cca, { 0x15 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x77e3, gbc.sp());
        EXPECT(0x3ccb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0290
        gbc.setState(0x6da2, 0x6c66, 0xcef0, 0xfd8f, 0x867b, 0x2ca4, 0x1, 0x1);
        gbc.writeMem(0x6da2, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6c66, gbc.sp());
        EXPECT(0x6da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0291
        gbc.setState(0x3bd9, 0x3475, 0x2130, 0x629b, 0x5a8, 0x52a7, 0x0, 0x0);
        gbc.writeMem(0x3bd9, { 0x15 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3475, gbc.sp());
        EXPECT(0x3bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0292
        gbc.setState(0x88f6, 0xe218, 0xce40, 0x7250, 0x8f76, 0xf391, 0x1, 0x1);
        gbc.writeMem(0x88f6, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xe218, gbc.sp());
        EXPECT(0x88f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x88f6));
        // 15 0293
        gbc.setState(0xa12f, 0x76f6, 0xd550, 0x13c5, 0x1b66, 0x6325, 0x1, 0x0);
        gbc.writeMem(0xa12f, { 0x15 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0xa130, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa12f));
        // 15 0294
        gbc.setState(0xbf83, 0x68f1, 0xccd0, 0xf0bb, 0x4603, 0xc753, 0x1, 0x1);
        gbc.writeMem(0xbf83, { 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x68f1, gbc.sp());
        EXPECT(0xbf84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbf83));
        // 15 0295
        gbc.setState(0xa82e, 0xebc1, 0x1d0, 0x1b99, 0x666e, 0x2f9d, 0x1, 0x1);
        gbc.writeMem(0xa82e, { 0x15 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xebc1, gbc.sp());
        EXPECT(0xa82f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa82e));
        // 15 0296
        gbc.setState(0x1597, 0x1625, 0xc8f0, 0x30ed, 0xe06b, 0xd377, 0x1, 0x0);
        gbc.writeMem(0x1597, { 0x15 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1625, gbc.sp());
        EXPECT(0x1598, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0297
        gbc.setState(0xe450, 0xb3a9, 0x9d30, 0x5b7a, 0x7018, 0xb552, 0x0, 0x0);
        gbc.writeMem(0xe450, { 0x15 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb3a9, gbc.sp());
        EXPECT(0xe451, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe450));
        // 15 0299
        gbc.setState(0x122a, 0x513a, 0x5c30, 0x4f30, 0x7122, 0xc121, 0x1, 0x0);
        gbc.writeMem(0x122a, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x513a, gbc.sp());
        EXPECT(0x122b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 029A
        gbc.setState(0xca16, 0x22e0, 0xe930, 0xda3a, 0x9038, 0x63b8, 0x1, 0x0);
        gbc.writeMem(0xca16, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0xca17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xca16));
        // 15 029B
        gbc.setState(0xc983, 0x1676, 0xddb0, 0xd95d, 0xa0bc, 0xa344, 0x1, 0x0);
        gbc.writeMem(0xc983, { 0x15 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1676, gbc.sp());
        EXPECT(0xc984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc983));
        // 15 029C
        gbc.setState(0x7da7, 0x495d, 0x5600, 0xa41e, 0xae25, 0xa950, 0x0, 0x0);
        gbc.writeMem(0x7da7, { 0x15 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x495d, gbc.sp());
        EXPECT(0x7da8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 029E
        gbc.setState(0x70f9, 0x7f54, 0xd960, 0xb81e, 0xfb32, 0xbf54, 0x0, 0x1);
        gbc.writeMem(0x70f9, { 0x15 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x70fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 029F
        gbc.setState(0x364, 0x1218, 0xbe70, 0x6c7a, 0x5064, 0x3340, 0x1, 0x1);
        gbc.writeMem(0x364, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1218, gbc.sp());
        EXPECT(0x365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02A0
        gbc.setState(0xc462, 0x4b73, 0x4290, 0xdbd8, 0x5e07, 0x2b17, 0x1, 0x0);
        gbc.writeMem(0xc462, { 0x15 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4b73, gbc.sp());
        EXPECT(0xc463, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc462));
        // 15 02A1
        gbc.setState(0x226a, 0xaa2c, 0x3060, 0xec02, 0x7721, 0xf32, 0x1, 0x0);
        gbc.writeMem(0x226a, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaa2c, gbc.sp());
        EXPECT(0x226b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02A2
        gbc.setState(0x5463, 0x67fc, 0x3670, 0x20ad, 0xa389, 0xbe8a, 0x1, 0x0);
        gbc.writeMem(0x5463, { 0x15 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x67fc, gbc.sp());
        EXPECT(0x5464, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02A3
        gbc.setState(0x584a, 0xa4a8, 0x680, 0xfbe8, 0x60ce, 0xb947, 0x1, 0x1);
        gbc.writeMem(0x584a, { 0x15 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa4a8, gbc.sp());
        EXPECT(0x584b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02A4
        gbc.setState(0xe894, 0xe7b0, 0xcac0, 0x30f8, 0x5db5, 0x2c42, 0x0, 0x0);
        gbc.writeMem(0xe894, { 0x15 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe7b0, gbc.sp());
        EXPECT(0xe895, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe894));
        // 15 02A5
        gbc.setState(0x9b39, 0x3b00, 0xafc0, 0xf3e5, 0x7439, 0x188c, 0x0, 0x1);
        gbc.writeMem(0x9b39, { 0x15 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0x9b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9b39));
        // 15 02A6
        gbc.setState(0xa03e, 0xf658, 0x7f90, 0xefde, 0x4e9a, 0x8f80, 0x0, 0x0);
        gbc.writeMem(0xa03e, { 0x15 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf658, gbc.sp());
        EXPECT(0xa03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa03e));
        // 15 02A7
        gbc.setState(0x335d, 0x9c5, 0xc7c0, 0x5f54, 0x1364, 0xc806, 0x0, 0x1);
        gbc.writeMem(0x335d, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9c5, gbc.sp());
        EXPECT(0x335e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02A8
        gbc.setState(0xd322, 0xbf9c, 0xfdb0, 0xf5cc, 0x9479, 0xa880, 0x1, 0x0);
        gbc.writeMem(0xd322, { 0x15 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbf9c, gbc.sp());
        EXPECT(0xd323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd322));
        // 15 02A9
        gbc.setState(0x27c8, 0xda8c, 0x3350, 0xf5a2, 0x41b9, 0x28ac, 0x1, 0x1);
        gbc.writeMem(0x27c8, { 0x15 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xda8c, gbc.sp());
        EXPECT(0x27c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02AA
        gbc.setState(0xc26f, 0xd2de, 0xdc20, 0x2ae9, 0x7d2e, 0xb3ef, 0x0, 0x1);
        gbc.writeMem(0xc26f, { 0x15 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xd2de, gbc.sp());
        EXPECT(0xc270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc26f));
        // 15 02AB
        gbc.setState(0xd7e3, 0xc15c, 0xa970, 0x3e0d, 0x13da, 0x8f9d, 0x0, 0x1);
        gbc.writeMem(0xd7e3, { 0x15 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc15c, gbc.sp());
        EXPECT(0xd7e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd7e3));
        // 15 02AC
        gbc.setState(0x5ff5, 0xe8f6, 0x8b70, 0xbbc3, 0x5068, 0x943f, 0x0, 0x1);
        gbc.writeMem(0x5ff5, { 0x15 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe8f6, gbc.sp());
        EXPECT(0x5ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02AD
        gbc.setState(0x737c, 0x58c0, 0x38f0, 0xe797, 0xfd05, 0x9c7f, 0x0, 0x0);
        gbc.writeMem(0x737c, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x58c0, gbc.sp());
        EXPECT(0x737d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02AE
        gbc.setState(0x8a11, 0x2496, 0xeea0, 0x9724, 0xde32, 0x74b1, 0x0, 0x0);
        gbc.writeMem(0x8a11, { 0x15 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2496, gbc.sp());
        EXPECT(0x8a12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8a11));
        // 15 02AF
        gbc.setState(0x3d7a, 0xad34, 0x5390, 0x11f9, 0x7d85, 0x496a, 0x1, 0x1);
        gbc.writeMem(0x3d7a, { 0x15 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xad34, gbc.sp());
        EXPECT(0x3d7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02B0
        gbc.setState(0x594a, 0x6cb9, 0x3ae0, 0x4aa0, 0xcc5f, 0xc10, 0x1, 0x1);
        gbc.writeMem(0x594a, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x6cb9, gbc.sp());
        EXPECT(0x594b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02B1
        gbc.setState(0x9e09, 0xf34c, 0x5000, 0x1a6, 0x244d, 0x1b4a, 0x1, 0x0);
        gbc.writeMem(0x9e09, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x9e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9e09));
        // 15 02B2
        gbc.setState(0xb540, 0x55fc, 0x1ac0, 0x4ef4, 0x6ac6, 0x8ee7, 0x0, 0x1);
        gbc.writeMem(0xb540, { 0x15 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x55fc, gbc.sp());
        EXPECT(0xb541, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb540));
        // 15 02B3
        gbc.setState(0xa396, 0x55c, 0xd420, 0x1986, 0xb3b0, 0x2a88, 0x1, 0x0);
        gbc.writeMem(0xa396, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x55c, gbc.sp());
        EXPECT(0xa397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa396));
        // 15 02B4
        gbc.setState(0x9a42, 0x477b, 0x3a80, 0x2218, 0xb4b5, 0x3741, 0x0, 0x0);
        gbc.writeMem(0x9a42, { 0x15 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x477b, gbc.sp());
        EXPECT(0x9a43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9a42));
        // 15 02B5
        gbc.setState(0xe9dd, 0x677c, 0xe650, 0xc835, 0xe41a, 0x52c2, 0x1, 0x1);
        gbc.writeMem(0xe9dd, { 0x15 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x677c, gbc.sp());
        EXPECT(0xe9de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe9dd));
        // 15 02B6
        gbc.setState(0x89b3, 0x913d, 0xb520, 0x2414, 0xb953, 0x9804, 0x1, 0x0);
        gbc.writeMem(0x89b3, { 0x15 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x913d, gbc.sp());
        EXPECT(0x89b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x89b3));
        // 15 02B8
        gbc.setState(0x9fe5, 0x2f50, 0xcf00, 0x7e71, 0x8fc, 0x1f63, 0x1, 0x1);
        gbc.writeMem(0x9fe5, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2f50, gbc.sp());
        EXPECT(0x9fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9fe5));
        // 15 02B9
        gbc.setState(0x3ade, 0x3fb, 0x5cc0, 0x4cd, 0xbce5, 0xd33b, 0x1, 0x1);
        gbc.writeMem(0x3ade, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x3fb, gbc.sp());
        EXPECT(0x3adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02BA
        gbc.setState(0x376b, 0xed4e, 0xeb30, 0x37dc, 0xe9c8, 0x84fc, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xed4e, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02BB
        gbc.setState(0x2b16, 0x28e2, 0xfc40, 0x7ab9, 0x8579, 0xe494, 0x1, 0x0);
        gbc.writeMem(0x2b16, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02BC
        gbc.setState(0xd8db, 0xbe1b, 0xc7b0, 0x3d89, 0x6b68, 0xb4a8, 0x1, 0x0);
        gbc.writeMem(0xd8db, { 0x15 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xbe1b, gbc.sp());
        EXPECT(0xd8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd8db));
        // 15 02BD
        gbc.setState(0x3f76, 0x5ce1, 0x91b0, 0xea8a, 0xcd8a, 0x900c, 0x0, 0x1);
        gbc.writeMem(0x3f76, { 0x15 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0x3f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02BE
        gbc.setState(0x7610, 0x6638, 0xca0, 0xb056, 0x53c1, 0x7f01, 0x1, 0x0);
        gbc.writeMem(0x7610, { 0x15 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6638, gbc.sp());
        EXPECT(0x7611, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02BF
        gbc.setState(0x6872, 0xe710, 0xcbb0, 0xef2a, 0x789d, 0xce02, 0x0, 0x1);
        gbc.writeMem(0x6872, { 0x15 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe710, gbc.sp());
        EXPECT(0x6873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02C0
        gbc.setState(0x3674, 0x4a1f, 0x3f00, 0xe0a5, 0xbc6e, 0xb1c3, 0x0, 0x1);
        gbc.writeMem(0x3674, { 0x15 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4a1f, gbc.sp());
        EXPECT(0x3675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02C1
        gbc.setState(0x6e45, 0xbc9, 0xbaf0, 0x70d2, 0x64a2, 0xefdd, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0x15 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xbc9, gbc.sp());
        EXPECT(0x6e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02C2
        gbc.setState(0xc55b, 0x3f07, 0xe110, 0xffc5, 0xe5e0, 0x3b5f, 0x0, 0x1);
        gbc.writeMem(0xc55b, { 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3f07, gbc.sp());
        EXPECT(0xc55c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc55b));
        // 15 02C3
        gbc.setState(0xe6f6, 0xaf73, 0x550, 0x338e, 0x58c6, 0xb34d, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0x15 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xaf73, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe6f6));
        // 15 02C4
        gbc.setState(0x812c, 0x29a9, 0x6c90, 0x9ceb, 0xc411, 0x7992, 0x0, 0x1);
        gbc.writeMem(0x812c, { 0x15 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x29a9, gbc.sp());
        EXPECT(0x812d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x812c));
        // 15 02C5
        gbc.setState(0xa9, 0xb8cf, 0x6ea0, 0x89ab, 0xba1d, 0x458f, 0x1, 0x1);
        gbc.writeMem(0xa9, { 0x15 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb8cf, gbc.sp());
        EXPECT(0xaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02C7
        gbc.setState(0xe0e9, 0xcb31, 0x7980, 0xd71e, 0xae88, 0x832c, 0x1, 0x0);
        gbc.writeMem(0xe0e9, { 0x15 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xcb31, gbc.sp());
        EXPECT(0xe0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe0e9));
        // 15 02C8
        gbc.setState(0x5a1c, 0xd61b, 0x7230, 0x297a, 0xe725, 0xc296, 0x1, 0x1);
        gbc.writeMem(0x5a1c, { 0x15 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd61b, gbc.sp());
        EXPECT(0x5a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02C9
        gbc.setState(0x856e, 0x5696, 0x8620, 0x13df, 0xcc8, 0x3a76, 0x1, 0x1);
        gbc.writeMem(0x856e, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5696, gbc.sp());
        EXPECT(0x856f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x856e));
        // 15 02CA
        gbc.setState(0x1c9f, 0xa71f, 0xf560, 0x71e5, 0xfc62, 0x2dab, 0x0, 0x1);
        gbc.writeMem(0x1c9f, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xa71f, gbc.sp());
        EXPECT(0x1ca0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02CB
        gbc.setState(0x3c87, 0xa74a, 0x2f70, 0x4553, 0xbdf8, 0xa2d4, 0x1, 0x1);
        gbc.writeMem(0x3c87, { 0x15 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa74a, gbc.sp());
        EXPECT(0x3c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02CC
        gbc.setState(0x81d, 0xa6aa, 0xb0, 0x949d, 0xb8f7, 0x16d6, 0x1, 0x0);
        gbc.writeMem(0x81d, { 0x15 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0x81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02CD
        gbc.setState(0x3099, 0xe9e6, 0x3ce0, 0xca15, 0x1469, 0xda92, 0x0, 0x0);
        gbc.writeMem(0x3099, { 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe9e6, gbc.sp());
        EXPECT(0x309a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02CE
        gbc.setState(0xaf0b, 0x4087, 0x7c90, 0x135d, 0x5e65, 0xa009, 0x0, 0x0);
        gbc.writeMem(0xaf0b, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4087, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf0b));
        // 15 02CF
        gbc.setState(0x54fd, 0x16e2, 0x5dc0, 0x5a58, 0x7782, 0xe710, 0x1, 0x1);
        gbc.writeMem(0x54fd, { 0x15 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x16e2, gbc.sp());
        EXPECT(0x54fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02D0
        gbc.setState(0x651, 0x8ab, 0x33e0, 0xf6f0, 0x4d9d, 0x76df, 0x0, 0x1);
        gbc.writeMem(0x651, { 0x15 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8ab, gbc.sp());
        EXPECT(0x652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02D1
        gbc.setState(0x867a, 0x3334, 0xe900, 0x7026, 0x465c, 0xc2bb, 0x1, 0x1);
        gbc.writeMem(0x867a, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3334, gbc.sp());
        EXPECT(0x867b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x867a));
        // 15 02D2
        gbc.setState(0x8080, 0xc338, 0x9fa0, 0x3464, 0x38a0, 0x39f1, 0x0, 0x1);
        gbc.writeMem(0x8080, { 0x15 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc338, gbc.sp());
        EXPECT(0x8081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8080));
        // 15 02D4
        gbc.setState(0x7517, 0x5be, 0x7590, 0x5b, 0x98f3, 0x6b8, 0x0, 0x1);
        gbc.writeMem(0x7517, { 0x15 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5be, gbc.sp());
        EXPECT(0x7518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02D5
        gbc.setState(0x7ceb, 0x7c06, 0x2530, 0x5e45, 0x84b0, 0xc255, 0x1, 0x1);
        gbc.writeMem(0x7ceb, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7c06, gbc.sp());
        EXPECT(0x7cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02D6
        gbc.setState(0x7d65, 0x22b9, 0xc340, 0x2426, 0x6ea, 0xd1dc, 0x1, 0x0);
        gbc.writeMem(0x7d65, { 0x15 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x22b9, gbc.sp());
        EXPECT(0x7d66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02D7
        gbc.setState(0x62a1, 0x2e56, 0x7720, 0x397b, 0xb94f, 0x2d58, 0x0, 0x0);
        gbc.writeMem(0x62a1, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2e56, gbc.sp());
        EXPECT(0x62a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02D8
        gbc.setState(0x665a, 0xea3f, 0x8640, 0x7f08, 0x3df9, 0xa2d6, 0x0, 0x1);
        gbc.writeMem(0x665a, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xea3f, gbc.sp());
        EXPECT(0x665b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02D9
        gbc.setState(0x3d1f, 0xc2af, 0x4ba0, 0x234a, 0x2943, 0x74ec, 0x0, 0x1);
        gbc.writeMem(0x3d1f, { 0x15 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc2af, gbc.sp());
        EXPECT(0x3d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02DA
        gbc.setState(0x27b0, 0x4fdb, 0x8170, 0xd975, 0x52d0, 0x4c66, 0x0, 0x1);
        gbc.writeMem(0x27b0, { 0x15 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02DB
        gbc.setState(0x6837, 0xbbff, 0x5f60, 0xfcc0, 0x5448, 0x66d8, 0x0, 0x0);
        gbc.writeMem(0x6837, { 0x15 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbbff, gbc.sp());
        EXPECT(0x6838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02DC
        gbc.setState(0xe39c, 0x4deb, 0xc020, 0xc71f, 0x1b19, 0xc856, 0x1, 0x1);
        gbc.writeMem(0xe39c, { 0x15 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x4deb, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe39c));
        // 15 02DD
        gbc.setState(0xcaa8, 0xab0, 0xd160, 0x6b3b, 0x9465, 0x5d8e, 0x0, 0x1);
        gbc.writeMem(0xcaa8, { 0x15 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xab0, gbc.sp());
        EXPECT(0xcaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcaa8));
        // 15 02DE
        gbc.setState(0x173b, 0xeedb, 0xf2f0, 0xac6e, 0x6126, 0x8281, 0x0, 0x0);
        gbc.writeMem(0x173b, { 0x15 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeedb, gbc.sp());
        EXPECT(0x173c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02DF
        gbc.setState(0x3189, 0x31ee, 0x46b0, 0xfa70, 0xed63, 0xf110, 0x0, 0x1);
        gbc.writeMem(0x3189, { 0x15 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x31ee, gbc.sp());
        EXPECT(0x318a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02E0
        gbc.setState(0x26be, 0x9602, 0x9ba0, 0xcd11, 0x8948, 0x1dd4, 0x0, 0x1);
        gbc.writeMem(0x26be, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9602, gbc.sp());
        EXPECT(0x26bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02E1
        gbc.setState(0x1a6, 0x18b6, 0x86f0, 0xcfe7, 0x37d6, 0x9267, 0x0, 0x0);
        gbc.writeMem(0x1a6, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0x1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02E2
        gbc.setState(0x56b7, 0xb219, 0x6620, 0x9f, 0x1f29, 0x48dd, 0x0, 0x1);
        gbc.writeMem(0x56b7, { 0x15 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x56b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02E4
        gbc.setState(0xe436, 0x6eb9, 0xcd20, 0xbc75, 0x3faa, 0xeeb5, 0x1, 0x0);
        gbc.writeMem(0xe436, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6eb9, gbc.sp());
        EXPECT(0xe437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe436));
        // 15 02E5
        gbc.setState(0x6f9e, 0x67f6, 0x690, 0x4ec2, 0xafc1, 0xd51d, 0x1, 0x1);
        gbc.writeMem(0x6f9e, { 0x15 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x6f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02E6
        gbc.setState(0x91a0, 0xe43c, 0x1c10, 0x712, 0x1fcf, 0x1fa0, 0x1, 0x0);
        gbc.writeMem(0x91a0, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe43c, gbc.sp());
        EXPECT(0x91a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x91a0));
        // 15 02E7
        gbc.setState(0xe1cc, 0x8477, 0x1320, 0x85df, 0x7cc8, 0x12b1, 0x0, 0x1);
        gbc.writeMem(0xe1cc, { 0x15 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8477, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe1cc));
        // 15 02E8
        gbc.setState(0xcff8, 0xdfad, 0x5cb0, 0xff88, 0x7e4d, 0x8b23, 0x1, 0x1);
        gbc.writeMem(0xcff8, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xdfad, gbc.sp());
        EXPECT(0xcff9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcff8));
        // 15 02E9
        gbc.setState(0xb858, 0xc67d, 0xbf80, 0x3eb0, 0xcc08, 0x2741, 0x0, 0x0);
        gbc.writeMem(0xb858, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc67d, gbc.sp());
        EXPECT(0xb859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb858));
        // 15 02EA
        gbc.setState(0x914c, 0x8c4d, 0x61f0, 0x6a0b, 0xec90, 0x3df7, 0x1, 0x1);
        gbc.writeMem(0x914c, { 0x15 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8c4d, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x914c));
        // 15 02EB
        gbc.setState(0x6dc3, 0x3639, 0xd420, 0xaf42, 0x228, 0x794, 0x0, 0x1);
        gbc.writeMem(0x6dc3, { 0x15 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3639, gbc.sp());
        EXPECT(0x6dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02EC
        gbc.setState(0x9b5b, 0xd239, 0xda90, 0xec3c, 0x6d0a, 0x1a2b, 0x1, 0x0);
        gbc.writeMem(0x9b5b, { 0x15 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd239, gbc.sp());
        EXPECT(0x9b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9b5b));
        // 15 02ED
        gbc.setState(0xc5f0, 0xaea2, 0xcce0, 0x30e8, 0x3164, 0x1b32, 0x1, 0x0);
        gbc.writeMem(0xc5f0, { 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xaea2, gbc.sp());
        EXPECT(0xc5f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc5f0));
        // 15 02EE
        gbc.setState(0x7b0b, 0x7120, 0x3080, 0xfc26, 0x32b7, 0xe449, 0x0, 0x1);
        gbc.writeMem(0x7b0b, { 0x15 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7120, gbc.sp());
        EXPECT(0x7b0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02EF
        gbc.setState(0x883a, 0x224a, 0xd5e0, 0x32bd, 0x1c74, 0x233, 0x0, 0x0);
        gbc.writeMem(0x883a, { 0x15 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x224a, gbc.sp());
        EXPECT(0x883b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x883a));
        // 15 02F0
        gbc.setState(0xa4c3, 0x5e26, 0x67f0, 0xa7d8, 0xbd57, 0x8b85, 0x0, 0x1);
        gbc.writeMem(0xa4c3, { 0x15 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5e26, gbc.sp());
        EXPECT(0xa4c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa4c3));
        // 15 02F1
        gbc.setState(0xd491, 0x39b, 0x7ed0, 0x73c9, 0x65d, 0x61f5, 0x1, 0x0);
        gbc.writeMem(0xd491, { 0x15 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x39b, gbc.sp());
        EXPECT(0xd492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd491));
        // 15 02F2
        gbc.setState(0x8d96, 0x7e30, 0xe450, 0xa3, 0x638d, 0x15b8, 0x0, 0x0);
        gbc.writeMem(0x8d96, { 0x15 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x8d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8d96));
        // 15 02F3
        gbc.setState(0x2a6c, 0xb30c, 0xcea0, 0x6841, 0xe69f, 0x470e, 0x0, 0x1);
        gbc.writeMem(0x2a6c, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb30c, gbc.sp());
        EXPECT(0x2a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02F4
        gbc.setState(0x811d, 0xd971, 0x22f0, 0x62a0, 0x9f68, 0x67a1, 0x1, 0x0);
        gbc.writeMem(0x811d, { 0x15 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd971, gbc.sp());
        EXPECT(0x811e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x811d));
        // 15 02F5
        gbc.setState(0x7661, 0x4bc0, 0x7ed0, 0x59e3, 0xb3fa, 0x82b0, 0x1, 0x0);
        gbc.writeMem(0x7661, { 0x15 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4bc0, gbc.sp());
        EXPECT(0x7662, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02F6
        gbc.setState(0x3712, 0xa409, 0xa860, 0x971a, 0x9ecb, 0xe8fb, 0x1, 0x1);
        gbc.writeMem(0x3712, { 0x15 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa409, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02F8
        gbc.setState(0xb397, 0xae5a, 0x8310, 0x532e, 0xe903, 0x633c, 0x1, 0x1);
        gbc.writeMem(0xb397, { 0x15 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xae5a, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb397));
        // 15 02F9
        gbc.setState(0xcdb5, 0xb06d, 0xfbf0, 0x2014, 0x1573, 0xab07, 0x0, 0x0);
        gbc.writeMem(0xcdb5, { 0x15 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xb06d, gbc.sp());
        EXPECT(0xcdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcdb5));
        // 15 02FA
        gbc.setState(0xc714, 0xee33, 0xbf30, 0x55f3, 0x6578, 0x40da, 0x1, 0x0);
        gbc.writeMem(0xc714, { 0x15 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xee33, gbc.sp());
        EXPECT(0xc715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc714));
        // 15 02FB
        gbc.setState(0x6977, 0x542, 0x7600, 0x429, 0x493e, 0x7558, 0x1, 0x0);
        gbc.writeMem(0x6977, { 0x15 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x542, gbc.sp());
        EXPECT(0x6978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 02FC
        gbc.setState(0x7700, 0x68d5, 0x4710, 0x1ca4, 0x87ed, 0x9da3, 0x0, 0x1);
        gbc.writeMem(0x7700, { 0x15 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x68d5, gbc.sp());
        EXPECT(0x7701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 02FE
        gbc.setState(0xd334, 0xd8c9, 0xea70, 0x93c6, 0xaa04, 0xc605, 0x1, 0x0);
        gbc.writeMem(0xd334, { 0x15 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd8c9, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd334));
        // 15 02FF
        gbc.setState(0x6fab, 0x2d65, 0x5420, 0x9673, 0x6d3c, 0x745c, 0x1, 0x0);
        gbc.writeMem(0x6fab, { 0x15 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2d65, gbc.sp());
        EXPECT(0x6fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0300
        gbc.setState(0xe442, 0xe6a1, 0x1a60, 0xce9a, 0x159c, 0xa5fc, 0x0, 0x1);
        gbc.writeMem(0xe442, { 0x15 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe6a1, gbc.sp());
        EXPECT(0xe443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe442));
        // 15 0301
        gbc.setState(0x9009, 0x61be, 0x1ed0, 0x4f55, 0x5999, 0x65ee, 0x1, 0x0);
        gbc.writeMem(0x9009, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x61be, gbc.sp());
        EXPECT(0x900a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9009));
        // 15 0302
        gbc.setState(0x7ffa, 0xc220, 0x10d0, 0x5bfc, 0x8015, 0x5aef, 0x1, 0x0);
        gbc.writeMem(0x7ffa, { 0x15 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0x7ffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0303
        gbc.setState(0x8490, 0xc3a2, 0x3620, 0x4a95, 0x3e60, 0xc4f, 0x1, 0x0);
        gbc.writeMem(0x8490, { 0x15 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0x8491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8490));
        // 15 0304
        gbc.setState(0xd625, 0xdafe, 0xa930, 0x6ade, 0xbd7b, 0xc8eb, 0x1, 0x1);
        gbc.writeMem(0xd625, { 0x15 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xdafe, gbc.sp());
        EXPECT(0xd626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd625));
        // 15 0305
        gbc.setState(0x38b1, 0x35eb, 0x9720, 0x1ae5, 0x4a5d, 0xf7ab, 0x1, 0x1);
        gbc.writeMem(0x38b1, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x35eb, gbc.sp());
        EXPECT(0x38b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0306
        gbc.setState(0x74d, 0x51af, 0xbeb0, 0x9b4a, 0x9470, 0xc774, 0x0, 0x0);
        gbc.writeMem(0x74d, { 0x15 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0x74e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0307
        gbc.setState(0xdd03, 0x6edc, 0x1770, 0x3c03, 0xd017, 0x927b, 0x0, 0x1);
        gbc.writeMem(0xdd03, { 0x15 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x6edc, gbc.sp());
        EXPECT(0xdd04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd03));
        // 15 0308
        gbc.setState(0x7b8f, 0x50ac, 0xcdb0, 0xe4e, 0xa5c6, 0x18ea, 0x1, 0x0);
        gbc.writeMem(0x7b8f, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x50ac, gbc.sp());
        EXPECT(0x7b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0309
        gbc.setState(0xed85, 0x9af, 0xa760, 0x2efb, 0xa232, 0x686a, 0x0, 0x1);
        gbc.writeMem(0xed85, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9af, gbc.sp());
        EXPECT(0xed86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xed85));
        // 15 030A
        gbc.setState(0x9af3, 0x95a0, 0x9570, 0xa205, 0xc69d, 0xf24c, 0x1, 0x1);
        gbc.writeMem(0x9af3, { 0x15 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x95a0, gbc.sp());
        EXPECT(0x9af4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9af3));
        // 15 030B
        gbc.setState(0x3bed, 0x531, 0xb480, 0xa15f, 0xcd20, 0xa746, 0x1, 0x1);
        gbc.writeMem(0x3bed, { 0x15 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x531, gbc.sp());
        EXPECT(0x3bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 030C
        gbc.setState(0x7e27, 0x333c, 0x2e0, 0x8c16, 0xd23, 0xb0b2, 0x0, 0x0);
        gbc.writeMem(0x7e27, { 0x15 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x333c, gbc.sp());
        EXPECT(0x7e28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 030D
        gbc.setState(0xa161, 0x5edf, 0x6a70, 0x8684, 0xfa8e, 0xb008, 0x1, 0x1);
        gbc.writeMem(0xa161, { 0x15 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5edf, gbc.sp());
        EXPECT(0xa162, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa161));
        // 15 030E
        gbc.setState(0x1ff5, 0x8bc3, 0xaf10, 0x444f, 0x10d3, 0x3304, 0x0, 0x0);
        gbc.writeMem(0x1ff5, { 0x15 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8bc3, gbc.sp());
        EXPECT(0x1ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 030F
        gbc.setState(0x856a, 0x42c6, 0x84c0, 0x7bd1, 0xfc33, 0xbb79, 0x1, 0x0);
        gbc.writeMem(0x856a, { 0x15 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x42c6, gbc.sp());
        EXPECT(0x856b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x856a));
        // 15 0310
        gbc.setState(0xac44, 0x3c9e, 0x1680, 0x1016, 0x422a, 0x96c7, 0x0, 0x0);
        gbc.writeMem(0xac44, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3c9e, gbc.sp());
        EXPECT(0xac45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xac44));
        // 15 0311
        gbc.setState(0xeb13, 0x5cdf, 0x64c0, 0xcd68, 0xb60a, 0x9c4e, 0x0, 0x0);
        gbc.writeMem(0xeb13, { 0x15 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5cdf, gbc.sp());
        EXPECT(0xeb14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeb13));
        // 15 0312
        gbc.setState(0x8489, 0xbc90, 0x7760, 0xdbaa, 0x1df5, 0x4bfb, 0x0, 0x1);
        gbc.writeMem(0x8489, { 0x15 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbc90, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8489));
        // 15 0313
        gbc.setState(0x917f, 0xac75, 0xb7e0, 0x5f9b, 0x47e1, 0xd897, 0x1, 0x1);
        gbc.writeMem(0x917f, { 0x15 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xac75, gbc.sp());
        EXPECT(0x9180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x917f));
        // 15 0314
        gbc.setState(0x86e9, 0xf8d5, 0x4610, 0xc95e, 0xb6c4, 0xdaf6, 0x1, 0x1);
        gbc.writeMem(0x86e9, { 0x15 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf8d5, gbc.sp());
        EXPECT(0x86ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x86e9));
        // 15 0315
        gbc.setState(0xe851, 0xead, 0xc6b0, 0xbcea, 0x71db, 0x63b5, 0x1, 0x0);
        gbc.writeMem(0xe851, { 0x15 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe851));
        // 15 0317
        gbc.setState(0xe038, 0x3d46, 0x8ae0, 0xfee8, 0x7fd5, 0xaee5, 0x0, 0x0);
        gbc.writeMem(0xe038, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x3d46, gbc.sp());
        EXPECT(0xe039, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe038));
        // 15 0318
        gbc.setState(0xd5a5, 0x8961, 0xc1f0, 0x5e2, 0xa6c4, 0x53e3, 0x1, 0x0);
        gbc.writeMem(0xd5a5, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8961, gbc.sp());
        EXPECT(0xd5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd5a5));
        // 15 031A
        gbc.setState(0xdfc0, 0x55b, 0x5c50, 0xed30, 0x80d2, 0xbe8e, 0x0, 0x1);
        gbc.writeMem(0xdfc0, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0xdfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfc0));
        // 15 031B
        gbc.setState(0x5ed7, 0xa755, 0xa390, 0x6629, 0x96f8, 0x2d4a, 0x1, 0x0);
        gbc.writeMem(0x5ed7, { 0x15 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa755, gbc.sp());
        EXPECT(0x5ed8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 031C
        gbc.setState(0xb1fa, 0x802d, 0x380, 0x3c10, 0xd6f0, 0x7803, 0x1, 0x0);
        gbc.writeMem(0xb1fa, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x802d, gbc.sp());
        EXPECT(0xb1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb1fa));
        // 15 031D
        gbc.setState(0x5bca, 0xc8ee, 0x4ef0, 0x2180, 0x3699, 0x7fa, 0x0, 0x1);
        gbc.writeMem(0x5bca, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc8ee, gbc.sp());
        EXPECT(0x5bcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 031F
        gbc.setState(0xbc65, 0x17de, 0x1bb0, 0x2d24, 0xab8d, 0xc5b8, 0x0, 0x0);
        gbc.writeMem(0xbc65, { 0x15 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x17de, gbc.sp());
        EXPECT(0xbc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbc65));
        // 15 0320
        gbc.setState(0xdfe7, 0x9b57, 0xb660, 0xe231, 0x8ff3, 0x3f73, 0x0, 0x1);
        gbc.writeMem(0xdfe7, { 0x15 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x9b57, gbc.sp());
        EXPECT(0xdfe8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdfe7));
        // 15 0321
        gbc.setState(0x3342, 0x6a0c, 0x3820, 0xc13d, 0x537e, 0xf564, 0x0, 0x0);
        gbc.writeMem(0x3342, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6a0c, gbc.sp());
        EXPECT(0x3343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0323
        gbc.setState(0xbaae, 0x7622, 0x5dc0, 0xf5a1, 0x97a, 0xe1a6, 0x0, 0x0);
        gbc.writeMem(0xbaae, { 0x15 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7622, gbc.sp());
        EXPECT(0xbaaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbaae));
        // 15 0324
        gbc.setState(0xd640, 0xe3e7, 0xb4a0, 0x4b02, 0x5ed5, 0x220e, 0x0, 0x1);
        gbc.writeMem(0xd640, { 0x15 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe3e7, gbc.sp());
        EXPECT(0xd641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd640));
        // 15 0325
        gbc.setState(0x8718, 0xdb0e, 0x2ad0, 0xc81e, 0xa8fd, 0x4a9b, 0x0, 0x0);
        gbc.writeMem(0x8718, { 0x15 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xdb0e, gbc.sp());
        EXPECT(0x8719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8718));
        // 15 0326
        gbc.setState(0x9dbe, 0x7a9c, 0x4f30, 0xab0f, 0xcae7, 0x2025, 0x0, 0x0);
        gbc.writeMem(0x9dbe, { 0x15 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x7a9c, gbc.sp());
        EXPECT(0x9dbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9dbe));
        // 15 0327
        gbc.setState(0x8afc, 0x46f9, 0x6ba0, 0xf6fc, 0xe154, 0xe119, 0x1, 0x0);
        gbc.writeMem(0x8afc, { 0x15 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x46f9, gbc.sp());
        EXPECT(0x8afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8afc));
        // 15 0328
        gbc.setState(0x81aa, 0x3607, 0xefd0, 0xf80f, 0x9754, 0xb98e, 0x0, 0x1);
        gbc.writeMem(0x81aa, { 0x15 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3607, gbc.sp());
        EXPECT(0x81ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x81aa));
        // 15 0329
        gbc.setState(0x111, 0xc127, 0xfc90, 0x80d9, 0xa471, 0x9fcf, 0x0, 0x0);
        gbc.writeMem(0x111, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc127, gbc.sp());
        EXPECT(0x112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 032A
        gbc.setState(0xd9a9, 0x9e2a, 0xce30, 0xcaae, 0x4f94, 0xb5e3, 0x0, 0x0);
        gbc.writeMem(0xd9a9, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9e2a, gbc.sp());
        EXPECT(0xd9aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd9a9));
        // 15 032B
        gbc.setState(0x3802, 0x9209, 0x7880, 0x7cc7, 0x8166, 0xeacc, 0x0, 0x0);
        gbc.writeMem(0x3802, { 0x15 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9209, gbc.sp());
        EXPECT(0x3803, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 032C
        gbc.setState(0xa358, 0xdc75, 0xed30, 0x9754, 0x414a, 0xe0d7, 0x1, 0x0);
        gbc.writeMem(0xa358, { 0x15 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdc75, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa358));
        // 15 032D
        gbc.setState(0x93d6, 0xa739, 0xecc0, 0x196c, 0x9777, 0xb674, 0x0, 0x0);
        gbc.writeMem(0x93d6, { 0x15 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xa739, gbc.sp());
        EXPECT(0x93d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x93d6));
        // 15 032E
        gbc.setState(0xd2ee, 0x7212, 0x3960, 0xe750, 0x3501, 0xaab0, 0x1, 0x1);
        gbc.writeMem(0xd2ee, { 0x15 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7212, gbc.sp());
        EXPECT(0xd2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd2ee));
        // 15 032F
        gbc.setState(0x1928, 0x9c06, 0x42e0, 0xb954, 0x70bb, 0x3e99, 0x1, 0x0);
        gbc.writeMem(0x1928, { 0x15 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9c06, gbc.sp());
        EXPECT(0x1929, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0330
        gbc.setState(0x73c9, 0x6578, 0x2550, 0xa857, 0x10c1, 0xf26b, 0x0, 0x0);
        gbc.writeMem(0x73c9, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6578, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0331
        gbc.setState(0xd249, 0x519a, 0x4a80, 0xf9ea, 0xbbdc, 0x6ac4, 0x0, 0x0);
        gbc.writeMem(0xd249, { 0x15 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x519a, gbc.sp());
        EXPECT(0xd24a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd249));
        // 15 0332
        gbc.setState(0x6f1a, 0x6440, 0xc220, 0x807a, 0x1ec0, 0xdd45, 0x0, 0x1);
        gbc.writeMem(0x6f1a, { 0x15 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6440, gbc.sp());
        EXPECT(0x6f1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0333
        gbc.setState(0xa198, 0xf004, 0x1ed0, 0x203f, 0x9c5e, 0x7b0d, 0x0, 0x1);
        gbc.writeMem(0xa198, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf004, gbc.sp());
        EXPECT(0xa199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa198));
        // 15 0334
        gbc.setState(0x2e24, 0x3ccf, 0x8a20, 0x70b0, 0x2530, 0x8a33, 0x0, 0x0);
        gbc.writeMem(0x2e24, { 0x15 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3ccf, gbc.sp());
        EXPECT(0x2e25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0335
        gbc.setState(0xd5fe, 0x8320, 0xb120, 0x3894, 0xd5bc, 0xecc8, 0x1, 0x1);
        gbc.writeMem(0xd5fe, { 0x15 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8320, gbc.sp());
        EXPECT(0xd5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd5fe));
        // 15 0336
        gbc.setState(0x66e2, 0x96cd, 0x92a0, 0xab11, 0x1839, 0x6673, 0x0, 0x0);
        gbc.writeMem(0x66e2, { 0x15 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x96cd, gbc.sp());
        EXPECT(0x66e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0337
        gbc.setState(0x2ca9, 0x3429, 0xc640, 0xb239, 0xedf1, 0xbab3, 0x1, 0x1);
        gbc.writeMem(0x2ca9, { 0x15 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3429, gbc.sp());
        EXPECT(0x2caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0338
        gbc.setState(0x48f8, 0xd954, 0x4180, 0x87fd, 0xaaf2, 0x4b4b, 0x1, 0x0);
        gbc.writeMem(0x48f8, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0x48f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 033A
        gbc.setState(0x8916, 0x377, 0x21e0, 0x1384, 0x8d3a, 0x8aac, 0x0, 0x1);
        gbc.writeMem(0x8916, { 0x15 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x377, gbc.sp());
        EXPECT(0x8917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8916));
        // 15 033B
        gbc.setState(0xe63, 0xd5c8, 0xf760, 0x6946, 0x536f, 0x6ac7, 0x1, 0x0);
        gbc.writeMem(0xe63, { 0x15 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd5c8, gbc.sp());
        EXPECT(0xe64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 033C
        gbc.setState(0x40fe, 0xaf0, 0x310, 0x47da, 0xaf19, 0xe305, 0x1, 0x0);
        gbc.writeMem(0x40fe, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaf0, gbc.sp());
        EXPECT(0x40ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 033D
        gbc.setState(0xd713, 0x35a3, 0xd660, 0x673f, 0x7b9f, 0xff5f, 0x1, 0x0);
        gbc.writeMem(0xd713, { 0x15 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x35a3, gbc.sp());
        EXPECT(0xd714, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd713));
        // 15 033E
        gbc.setState(0x9f8c, 0x61c5, 0xa3b0, 0x6c70, 0x58d5, 0xea2b, 0x1, 0x1);
        gbc.writeMem(0x9f8c, { 0x15 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x61c5, gbc.sp());
        EXPECT(0x9f8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9f8c));
        // 15 033F
        gbc.setState(0x2b5, 0x99a8, 0xb060, 0x8f6a, 0x817a, 0xd707, 0x1, 0x1);
        gbc.writeMem(0x2b5, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99a8, gbc.sp());
        EXPECT(0x2b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0340
        gbc.setState(0x7c78, 0xfa0f, 0xa7d0, 0x5a96, 0xb42c, 0x5b19, 0x0, 0x1);
        gbc.writeMem(0x7c78, { 0x15 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xfa0f, gbc.sp());
        EXPECT(0x7c79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0341
        gbc.setState(0x47fc, 0x813a, 0x4080, 0xe570, 0x56a8, 0x5d89, 0x0, 0x1);
        gbc.writeMem(0x47fc, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x813a, gbc.sp());
        EXPECT(0x47fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0342
        gbc.setState(0x5fd3, 0x77ae, 0x4a90, 0xa990, 0x2a82, 0x3046, 0x1, 0x1);
        gbc.writeMem(0x5fd3, { 0x15 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0x5fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0343
        gbc.setState(0x3755, 0x8c83, 0x46d0, 0x2b35, 0xb64d, 0x9f76, 0x0, 0x0);
        gbc.writeMem(0x3755, { 0x15 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8c83, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0344
        gbc.setState(0x579d, 0x6c71, 0x1790, 0xca07, 0xac1c, 0x9070, 0x0, 0x1);
        gbc.writeMem(0x579d, { 0x15 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6c71, gbc.sp());
        EXPECT(0x579e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0345
        gbc.setState(0xaf4a, 0x607c, 0x9930, 0xd638, 0x957, 0x9799, 0x1, 0x1);
        gbc.writeMem(0xaf4a, { 0x15 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x607c, gbc.sp());
        EXPECT(0xaf4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaf4a));
        // 15 0346
        gbc.setState(0xce16, 0xcfc7, 0x3260, 0x9e65, 0xbc8f, 0x7984, 0x0, 0x0);
        gbc.writeMem(0xce16, { 0x15 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcfc7, gbc.sp());
        EXPECT(0xce17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xce16));
        // 15 0347
        gbc.setState(0x2c92, 0xa413, 0x2690, 0xc9fc, 0xa3c, 0x364, 0x0, 0x0);
        gbc.writeMem(0x2c92, { 0x15 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa413, gbc.sp());
        EXPECT(0x2c93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0348
        gbc.setState(0x4dd, 0xe698, 0xcfa0, 0x29c0, 0xa31c, 0x87a8, 0x0, 0x1);
        gbc.writeMem(0x4dd, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe698, gbc.sp());
        EXPECT(0x4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0349
        gbc.setState(0x1100, 0x45f9, 0xf5d0, 0x4f96, 0x7228, 0xd136, 0x1, 0x1);
        gbc.writeMem(0x1100, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x45f9, gbc.sp());
        EXPECT(0x1101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 034A
        gbc.setState(0x7c4d, 0xa4, 0x5a20, 0x48f8, 0x9987, 0xbe16, 0x0, 0x0);
        gbc.writeMem(0x7c4d, { 0x15 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa4, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 034B
        gbc.setState(0x2a0e, 0x61ed, 0xeda0, 0x3850, 0x8d5c, 0x5735, 0x1, 0x1);
        gbc.writeMem(0x2a0e, { 0x15 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x2a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 034D
        gbc.setState(0xa554, 0x893c, 0x2b40, 0x5fb8, 0x7406, 0x4b5c, 0x0, 0x1);
        gbc.writeMem(0xa554, { 0x15 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x893c, gbc.sp());
        EXPECT(0xa555, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa554));
        // 15 034E
        gbc.setState(0x1207, 0x6b17, 0x9af0, 0x2a86, 0xa976, 0x1cb1, 0x1, 0x0);
        gbc.writeMem(0x1207, { 0x15 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6b17, gbc.sp());
        EXPECT(0x1208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 034F
        gbc.setState(0xbb9d, 0x5df1, 0x1f10, 0x79ce, 0xf410, 0x5a59, 0x1, 0x1);
        gbc.writeMem(0xbb9d, { 0x15 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5df1, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbb9d));
        // 15 0350
        gbc.setState(0x10b2, 0xc3d7, 0xe130, 0xea2b, 0x5c55, 0x130, 0x1, 0x0);
        gbc.writeMem(0x10b2, { 0x15 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc3d7, gbc.sp());
        EXPECT(0x10b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0351
        gbc.setState(0x776d, 0xaab8, 0x54e0, 0x951c, 0xa23b, 0x1cb3, 0x0, 0x0);
        gbc.writeMem(0x776d, { 0x15 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xaab8, gbc.sp());
        EXPECT(0x776e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0352
        gbc.setState(0xb917, 0x4277, 0x2590, 0xe0f6, 0x9b04, 0xf14c, 0x1, 0x1);
        gbc.writeMem(0xb917, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x4277, gbc.sp());
        EXPECT(0xb918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb917));
        // 15 0353
        gbc.setState(0x1737, 0x6b3b, 0x55d0, 0xa57f, 0x3638, 0x68bc, 0x1, 0x0);
        gbc.writeMem(0x1737, { 0x15 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x6b3b, gbc.sp());
        EXPECT(0x1738, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0354
        gbc.setState(0xe48c, 0x569d, 0xf5f0, 0x307e, 0x24c1, 0x7e2c, 0x0, 0x1);
        gbc.writeMem(0xe48c, { 0x15 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x569d, gbc.sp());
        EXPECT(0xe48d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe48c));
        // 15 0355
        gbc.setState(0x1f80, 0xa94b, 0x87e0, 0x7a5b, 0x5284, 0x8fb0, 0x0, 0x0);
        gbc.writeMem(0x1f80, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa94b, gbc.sp());
        EXPECT(0x1f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0356
        gbc.setState(0x6549, 0x5784, 0xb450, 0x8989, 0x9e0e, 0x55f0, 0x1, 0x0);
        gbc.writeMem(0x6549, { 0x15 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5784, gbc.sp());
        EXPECT(0x654a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0357
        gbc.setState(0x1f0a, 0xce0b, 0xd810, 0xe628, 0x6dcf, 0xe835, 0x1, 0x1);
        gbc.writeMem(0x1f0a, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xce0b, gbc.sp());
        EXPECT(0x1f0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0358
        gbc.setState(0xb9b5, 0x82f1, 0x7cb0, 0x2fd2, 0x589d, 0xb608, 0x0, 0x0);
        gbc.writeMem(0xb9b5, { 0x15 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x82f1, gbc.sp());
        EXPECT(0xb9b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb9b5));
        // 15 0359
        gbc.setState(0x7a28, 0x5729, 0xd370, 0x1184, 0x3e4d, 0x91a6, 0x1, 0x0);
        gbc.writeMem(0x7a28, { 0x15 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5729, gbc.sp());
        EXPECT(0x7a29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 035A
        gbc.setState(0xac71, 0x60d1, 0xe410, 0x3eff, 0xee1d, 0xedaa, 0x1, 0x0);
        gbc.writeMem(0xac71, { 0x15 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x60d1, gbc.sp());
        EXPECT(0xac72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xac71));
        // 15 035B
        gbc.setState(0x4f2b, 0xab4b, 0x3f0, 0x8ca2, 0xaaf2, 0x9ed4, 0x0, 0x1);
        gbc.writeMem(0x4f2b, { 0x15 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xab4b, gbc.sp());
        EXPECT(0x4f2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 035C
        gbc.setState(0x7326, 0x6459, 0x7320, 0x6b6e, 0xdb9c, 0xf8d2, 0x1, 0x0);
        gbc.writeMem(0x7326, { 0x15 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 035D
        gbc.setState(0xd3c8, 0x5bba, 0xb070, 0x33b0, 0xc0de, 0x56f9, 0x0, 0x0);
        gbc.writeMem(0xd3c8, { 0x15 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5bba, gbc.sp());
        EXPECT(0xd3c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd3c8));
        // 15 035F
        gbc.setState(0x59f6, 0xbe2e, 0x84d0, 0x4cc4, 0x8465, 0xa6c5, 0x1, 0x0);
        gbc.writeMem(0x59f6, { 0x15 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbe2e, gbc.sp());
        EXPECT(0x59f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0360
        gbc.setState(0x3d35, 0x50fa, 0x8670, 0x87d9, 0x2518, 0x6c10, 0x0, 0x1);
        gbc.writeMem(0x3d35, { 0x15 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50fa, gbc.sp());
        EXPECT(0x3d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0361
        gbc.setState(0x7a2, 0x4f93, 0x97a0, 0xac67, 0xec8b, 0x6166, 0x1, 0x0);
        gbc.writeMem(0x7a2, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4f93, gbc.sp());
        EXPECT(0x7a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0363
        gbc.setState(0x631, 0xc035, 0x8700, 0x1d69, 0x151f, 0x662d, 0x1, 0x1);
        gbc.writeMem(0x631, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc035, gbc.sp());
        EXPECT(0x632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0364
        gbc.setState(0x8b2, 0xfb9c, 0x9df0, 0xcbf8, 0x85f3, 0x4d10, 0x0, 0x1);
        gbc.writeMem(0x8b2, { 0x15 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfb9c, gbc.sp());
        EXPECT(0x8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0365
        gbc.setState(0x7df, 0x4253, 0xf0a0, 0x726f, 0xab6, 0xefb3, 0x1, 0x1);
        gbc.writeMem(0x7df, { 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4253, gbc.sp());
        EXPECT(0x7e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0366
        gbc.setState(0xe69f, 0x80ee, 0x2440, 0x6066, 0x494f, 0xc1c1, 0x1, 0x0);
        gbc.writeMem(0xe69f, { 0x15 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x80ee, gbc.sp());
        EXPECT(0xe6a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe69f));
        // 15 0367
        gbc.setState(0x7c07, 0x29ad, 0x62e0, 0x8d2d, 0xf5d2, 0x83cc, 0x0, 0x1);
        gbc.writeMem(0x7c07, { 0x15 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x29ad, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0368
        gbc.setState(0xcb84, 0xbf25, 0x4060, 0x87ea, 0x9e69, 0xe316, 0x0, 0x0);
        gbc.writeMem(0xcb84, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbf25, gbc.sp());
        EXPECT(0xcb85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcb84));
        // 15 0369
        gbc.setState(0x4a39, 0x5fd3, 0xd510, 0xe96a, 0xa497, 0x2fec, 0x1, 0x0);
        gbc.writeMem(0x4a39, { 0x15 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5fd3, gbc.sp());
        EXPECT(0x4a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 036A
        gbc.setState(0xca78, 0x780d, 0xec10, 0xe671, 0xc2fa, 0x23cb, 0x0, 0x1);
        gbc.writeMem(0xca78, { 0x15 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x780d, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xca78));
        // 15 036B
        gbc.setState(0xc864, 0x1f2b, 0x4010, 0xd840, 0xf2fa, 0xa48f, 0x0, 0x0);
        gbc.writeMem(0xc864, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x1f2b, gbc.sp());
        EXPECT(0xc865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc864));
        // 15 036C
        gbc.setState(0xe5a2, 0x955d, 0x3980, 0x47cb, 0x77ce, 0x20d0, 0x0, 0x1);
        gbc.writeMem(0xe5a2, { 0x15 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x955d, gbc.sp());
        EXPECT(0xe5a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe5a2));
        // 15 036D
        gbc.setState(0x745e, 0xc174, 0x4190, 0xe9c1, 0xdf0b, 0x4797, 0x1, 0x1);
        gbc.writeMem(0x745e, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc174, gbc.sp());
        EXPECT(0x745f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 036E
        gbc.setState(0xd949, 0xa9c, 0xa650, 0xcc39, 0x715a, 0x1735, 0x0, 0x1);
        gbc.writeMem(0xd949, { 0x15 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa9c, gbc.sp());
        EXPECT(0xd94a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd949));
        // 15 036F
        gbc.setState(0xee05, 0xc0af, 0xea60, 0x1a85, 0xd8ab, 0x9836, 0x0, 0x0);
        gbc.writeMem(0xee05, { 0x15 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc0af, gbc.sp());
        EXPECT(0xee06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee05));
        // 15 0370
        gbc.setState(0xd5f2, 0x2165, 0xeeb0, 0xe985, 0x29fb, 0x3189, 0x0, 0x0);
        gbc.writeMem(0xd5f2, { 0x15 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2165, gbc.sp());
        EXPECT(0xd5f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd5f2));
        // 15 0371
        gbc.setState(0xcf16, 0x9365, 0x6100, 0x8f50, 0xe68, 0x11c2, 0x1, 0x0);
        gbc.writeMem(0xcf16, { 0x15 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x9365, gbc.sp());
        EXPECT(0xcf17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf16));
        // 15 0372
        gbc.setState(0x79e1, 0xc542, 0x93c0, 0xea98, 0x8ab, 0xb1b2, 0x0, 0x1);
        gbc.writeMem(0x79e1, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc542, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0373
        gbc.setState(0xab3b, 0xe70e, 0x1dc0, 0xe472, 0xa2a6, 0x991a, 0x1, 0x1);
        gbc.writeMem(0xab3b, { 0x15 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe70e, gbc.sp());
        EXPECT(0xab3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xab3b));
        // 15 0374
        gbc.setState(0xb579, 0xe5d7, 0x9c00, 0xdb2c, 0xd01a, 0x64b6, 0x0, 0x0);
        gbc.writeMem(0xb579, { 0x15 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe5d7, gbc.sp());
        EXPECT(0xb57a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb579));
        // 15 0375
        gbc.setState(0xeb9f, 0x347e, 0x49a0, 0xa297, 0x9007, 0x28f0, 0x1, 0x0);
        gbc.writeMem(0xeb9f, { 0x15 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x347e, gbc.sp());
        EXPECT(0xeba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeb9f));
        // 15 0376
        gbc.setState(0xeb81, 0x11bd, 0x1e60, 0x6328, 0x94da, 0x8e05, 0x1, 0x1);
        gbc.writeMem(0xeb81, { 0x15 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x11bd, gbc.sp());
        EXPECT(0xeb82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeb81));
        // 15 0377
        gbc.setState(0xba7c, 0x87c6, 0xebc0, 0xf75b, 0x537b, 0x6090, 0x1, 0x0);
        gbc.writeMem(0xba7c, { 0x15 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x87c6, gbc.sp());
        EXPECT(0xba7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xba7c));
        // 15 0378
        gbc.setState(0x1bac, 0x1cda, 0x40c0, 0x53be, 0x1549, 0x1dfe, 0x1, 0x1);
        gbc.writeMem(0x1bac, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1cda, gbc.sp());
        EXPECT(0x1bad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 037A
        gbc.setState(0x3823, 0x70, 0xb2d0, 0x8736, 0x4fe, 0xbd28, 0x1, 0x0);
        gbc.writeMem(0x3823, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x70, gbc.sp());
        EXPECT(0x3824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 037B
        gbc.setState(0xc4bf, 0x7c8b, 0x14c0, 0x77da, 0xd767, 0xc4c9, 0x0, 0x1);
        gbc.writeMem(0xc4bf, { 0x15 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7c8b, gbc.sp());
        EXPECT(0xc4c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc4bf));
        // 15 037C
        gbc.setState(0xe571, 0xf119, 0xd40, 0x807a, 0xe702, 0x7ef7, 0x1, 0x0);
        gbc.writeMem(0xe571, { 0x15 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf119, gbc.sp());
        EXPECT(0xe572, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe571));
        // 15 037D
        gbc.setState(0xed69, 0xfd57, 0x4060, 0x79ac, 0x3d27, 0x6eff, 0x0, 0x0);
        gbc.writeMem(0xed69, { 0x15 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfd57, gbc.sp());
        EXPECT(0xed6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xed69));
        // 15 037E
        gbc.setState(0xf000, 0xbda3, 0x2850, 0xef34, 0xca7, 0xccd3, 0x1, 0x1);
        gbc.writeMem(0xf000, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xf001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xf000));
        // 15 0380
        gbc.setState(0x7ef1, 0x16c9, 0x5cd0, 0xfd75, 0x3873, 0xa8df, 0x1, 0x0);
        gbc.writeMem(0x7ef1, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x7ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0381
        gbc.setState(0xbd76, 0x5bfb, 0xf60, 0x6214, 0x7166, 0x7713, 0x0, 0x1);
        gbc.writeMem(0xbd76, { 0x15 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5bfb, gbc.sp());
        EXPECT(0xbd77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbd76));
        // 15 0382
        gbc.setState(0xe56c, 0xa21, 0x4e00, 0x8015, 0xba9e, 0x159a, 0x1, 0x0);
        gbc.writeMem(0xe56c, { 0x15 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa21, gbc.sp());
        EXPECT(0xe56d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe56c));
        // 15 0383
        gbc.setState(0x44d9, 0xc066, 0x9750, 0x92fa, 0x8283, 0x9934, 0x1, 0x1);
        gbc.writeMem(0x44d9, { 0x15 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc066, gbc.sp());
        EXPECT(0x44da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0384
        gbc.setState(0x264, 0x4735, 0x4ca0, 0xc569, 0xe914, 0xefe2, 0x1, 0x1);
        gbc.writeMem(0x264, { 0x15 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4735, gbc.sp());
        EXPECT(0x265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0385
        gbc.setState(0x2f42, 0xc820, 0x3890, 0xfd36, 0x42fe, 0x8b24, 0x0, 0x0);
        gbc.writeMem(0x2f42, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc820, gbc.sp());
        EXPECT(0x2f43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0386
        gbc.setState(0x5500, 0x3def, 0xa270, 0xada8, 0x8991, 0x5da5, 0x1, 0x0);
        gbc.writeMem(0x5500, { 0x15 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3def, gbc.sp());
        EXPECT(0x5501, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0387
        gbc.setState(0xaee6, 0x13fd, 0xc550, 0xab45, 0xb269, 0x9fa4, 0x1, 0x1);
        gbc.writeMem(0xaee6, { 0x15 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x13fd, gbc.sp());
        EXPECT(0xaee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xaee6));
        // 15 0388
        gbc.setState(0xdb16, 0xa1f5, 0x2360, 0x3de8, 0x46e1, 0x715d, 0x1, 0x0);
        gbc.writeMem(0xdb16, { 0x15 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa1f5, gbc.sp());
        EXPECT(0xdb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdb16));
        // 15 0389
        gbc.setState(0x5227, 0x9b00, 0x3610, 0xcc4e, 0x5b71, 0x30c7, 0x1, 0x0);
        gbc.writeMem(0x5227, { 0x15 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0x5228, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 038A
        gbc.setState(0x17fb, 0x92ca, 0x2010, 0xd894, 0x7b7b, 0x5ba8, 0x0, 0x0);
        gbc.writeMem(0x17fb, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x92ca, gbc.sp());
        EXPECT(0x17fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 038B
        gbc.setState(0x1ab2, 0x52c2, 0x1200, 0xfd37, 0xb110, 0xba8a, 0x0, 0x1);
        gbc.writeMem(0x1ab2, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0x1ab3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 038C
        gbc.setState(0x934e, 0xe25, 0xc1b0, 0x86ab, 0x4313, 0x9eb, 0x1, 0x1);
        gbc.writeMem(0x934e, { 0x15 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe25, gbc.sp());
        EXPECT(0x934f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x934e));
        // 15 038D
        gbc.setState(0xd085, 0xda, 0x6a00, 0x547c, 0x438b, 0x4a47, 0x0, 0x1);
        gbc.writeMem(0xd085, { 0x15 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xda, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd085));
        // 15 038E
        gbc.setState(0x98e, 0xc559, 0x2650, 0xb3c6, 0xf7dd, 0x5cca, 0x1, 0x1);
        gbc.writeMem(0x98e, { 0x15 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc559, gbc.sp());
        EXPECT(0x98f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 038F
        gbc.setState(0x77af, 0x8251, 0xcc40, 0xca9d, 0x2777, 0x37e5, 0x1, 0x1);
        gbc.writeMem(0x77af, { 0x15 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8251, gbc.sp());
        EXPECT(0x77b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 0390
        gbc.setState(0x308d, 0x5357, 0x2e50, 0x12c3, 0x9017, 0xddbd, 0x0, 0x0);
        gbc.writeMem(0x308d, { 0x15 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5357, gbc.sp());
        EXPECT(0x308e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0391
        gbc.setState(0xb4d4, 0x1e37, 0x8170, 0x4ecd, 0xfcb4, 0x432e, 0x1, 0x1);
        gbc.writeMem(0xb4d4, { 0x15 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x1e37, gbc.sp());
        EXPECT(0xb4d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb4d4));
        // 15 0392
        gbc.setState(0x9773, 0x1fa8, 0x6170, 0x64a4, 0x41a8, 0x6f27, 0x1, 0x0);
        gbc.writeMem(0x9773, { 0x15 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1fa8, gbc.sp());
        EXPECT(0x9774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9773));
        // 15 0393
        gbc.setState(0x895a, 0xa14b, 0xa550, 0x14bc, 0x5695, 0x9942, 0x0, 0x0);
        gbc.writeMem(0x895a, { 0x15 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa14b, gbc.sp());
        EXPECT(0x895b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x895a));
        // 15 0394
        gbc.setState(0xc204, 0x8af9, 0xa420, 0xe019, 0x5ad, 0x750c, 0x1, 0x0);
        gbc.writeMem(0xc204, { 0x15 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0xc205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc204));
        // 15 0396
        gbc.setState(0xeb65, 0x7f96, 0x9e40, 0x31bb, 0x3967, 0x6a8b, 0x1, 0x1);
        gbc.writeMem(0xeb65, { 0x15 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f96, gbc.sp());
        EXPECT(0xeb66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xeb65));
        // 15 0397
        gbc.setState(0x9084, 0xc92f, 0x83b0, 0x265f, 0x30ee, 0xc4fa, 0x1, 0x0);
        gbc.writeMem(0x9084, { 0x15 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0x9085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9084));
        // 15 0398
        gbc.setState(0x361f, 0x8809, 0x12d0, 0x5c76, 0x4e66, 0x4a28, 0x0, 0x1);
        gbc.writeMem(0x361f, { 0x15 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8809, gbc.sp());
        EXPECT(0x3620, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 0399
        gbc.setState(0x92e8, 0x9d50, 0xc270, 0xbaf4, 0xe215, 0x6457, 0x1, 0x0);
        gbc.writeMem(0x92e8, { 0x15 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9d50, gbc.sp());
        EXPECT(0x92e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x92e8));
        // 15 039A
        gbc.setState(0x5d98, 0x1804, 0xe3d0, 0x8c5c, 0xb6dc, 0x1196, 0x1, 0x0);
        gbc.writeMem(0x5d98, { 0x15 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1804, gbc.sp());
        EXPECT(0x5d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 039B
        gbc.setState(0xc7c, 0x28ab, 0x6f0, 0xa90f, 0x82f4, 0xd571, 0x1, 0x1);
        gbc.writeMem(0xc7c, { 0x15 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x28ab, gbc.sp());
        EXPECT(0xc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 039C
        gbc.setState(0x7d92, 0x6962, 0x6b00, 0x3afa, 0xdf17, 0x899, 0x1, 0x1);
        gbc.writeMem(0x7d92, { 0x15 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6962, gbc.sp());
        EXPECT(0x7d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 039D
        gbc.setState(0xb5fd, 0xb75a, 0x7430, 0x6d58, 0xcbfe, 0x627a, 0x0, 0x0);
        gbc.writeMem(0xb5fd, { 0x15 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb75a, gbc.sp());
        EXPECT(0xb5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb5fd));
        // 15 039E
        gbc.setState(0x667, 0x25e8, 0x5de0, 0x9ec4, 0xfb45, 0xfd51, 0x0, 0x1);
        gbc.writeMem(0x667, { 0x15 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x25e8, gbc.sp());
        EXPECT(0x668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 039F
        gbc.setState(0xcd2a, 0xab34, 0x2820, 0x7f3a, 0xb71e, 0x2b47, 0x1, 0x1);
        gbc.writeMem(0xcd2a, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xab34, gbc.sp());
        EXPECT(0xcd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcd2a));
        // 15 03A0
        gbc.setState(0x92a2, 0x8cf3, 0xd730, 0x11e0, 0xe57e, 0xb58c, 0x1, 0x0);
        gbc.writeMem(0x92a2, { 0x15 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8cf3, gbc.sp());
        EXPECT(0x92a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x92a2));
        // 15 03A1
        gbc.setState(0x8696, 0x17f2, 0xd830, 0xaa75, 0xa912, 0x90ed, 0x0, 0x1);
        gbc.writeMem(0x8696, { 0x15 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x17f2, gbc.sp());
        EXPECT(0x8697, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8696));
        // 15 03A2
        gbc.setState(0xe74e, 0xa68d, 0xc420, 0xb92c, 0xc92c, 0x7986, 0x0, 0x1);
        gbc.writeMem(0xe74e, { 0x15 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa68d, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe74e));
        // 15 03A4
        gbc.setState(0xddc5, 0xdafb, 0x2520, 0xe81e, 0x4e7c, 0x58cd, 0x0, 0x1);
        gbc.writeMem(0xddc5, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdafb, gbc.sp());
        EXPECT(0xddc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xddc5));
        // 15 03A5
        gbc.setState(0x6c1f, 0x5059, 0x74d0, 0xf70f, 0x1d29, 0xedb5, 0x0, 0x0);
        gbc.writeMem(0x6c1f, { 0x15 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5059, gbc.sp());
        EXPECT(0x6c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03A6
        gbc.setState(0x152a, 0x50cc, 0x2020, 0xff21, 0xa4a5, 0xe264, 0x0, 0x0);
        gbc.writeMem(0x152a, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x50cc, gbc.sp());
        EXPECT(0x152b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03A7
        gbc.setState(0xa67e, 0x52d9, 0xadd0, 0xa752, 0x1f6f, 0xfdcc, 0x0, 0x1);
        gbc.writeMem(0xa67e, { 0x15 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x52d9, gbc.sp());
        EXPECT(0xa67f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa67e));
        // 15 03A8
        gbc.setState(0xdd2d, 0xd076, 0x4650, 0xeba8, 0x4bf2, 0x33cf, 0x1, 0x0);
        gbc.writeMem(0xdd2d, { 0x15 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd076, gbc.sp());
        EXPECT(0xdd2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd2d));
        // 15 03A9
        gbc.setState(0xe869, 0x7a4c, 0xb820, 0x8452, 0xe11e, 0x6491, 0x1, 0x0);
        gbc.writeMem(0xe869, { 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7a4c, gbc.sp());
        EXPECT(0xe86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xe869));
        // 15 03AA
        gbc.setState(0x9287, 0xa481, 0xcd40, 0xb1c9, 0x7df4, 0x595c, 0x1, 0x1);
        gbc.writeMem(0x9287, { 0x15 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa481, gbc.sp());
        EXPECT(0x9288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9287));
        // 15 03AB
        gbc.setState(0xdd98, 0x5877, 0x1940, 0x1873, 0x8d59, 0x8dbb, 0x1, 0x0);
        gbc.writeMem(0xdd98, { 0x15 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5877, gbc.sp());
        EXPECT(0xdd99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xdd98));
        // 15 03AC
        gbc.setState(0x2fc6, 0xe2d, 0xace0, 0x350e, 0x1ebf, 0x1c42, 0x0, 0x0);
        gbc.writeMem(0x2fc6, { 0x15 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe2d, gbc.sp());
        EXPECT(0x2fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03AD
        gbc.setState(0x51f2, 0x31a9, 0x59b0, 0xd269, 0xff23, 0x42a4, 0x0, 0x1);
        gbc.writeMem(0x51f2, { 0x15 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x31a9, gbc.sp());
        EXPECT(0x51f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03AF
        gbc.setState(0xbf28, 0x17dd, 0xb8f0, 0xbb82, 0xf0f5, 0x1a8, 0x1, 0x0);
        gbc.writeMem(0xbf28, { 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x17dd, gbc.sp());
        EXPECT(0xbf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbf28));
        // 15 03B0
        gbc.setState(0x1eee, 0x5124, 0x5b40, 0xb040, 0x7d03, 0xa517, 0x1, 0x1);
        gbc.writeMem(0x1eee, { 0x15 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5124, gbc.sp());
        EXPECT(0x1eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03B1
        gbc.setState(0x7b42, 0x5ce3, 0x2050, 0xb57c, 0x26e3, 0xd0c7, 0x1, 0x0);
        gbc.writeMem(0x7b42, { 0x15 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5ce3, gbc.sp());
        EXPECT(0x7b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03B2
        gbc.setState(0x36f0, 0xd6ef, 0x8510, 0x2615, 0x4f27, 0x86bf, 0x1, 0x1);
        gbc.writeMem(0x36f0, { 0x15 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xd6ef, gbc.sp());
        EXPECT(0x36f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03B4
        gbc.setState(0x8b01, 0x9a71, 0x25d0, 0xb702, 0x15a7, 0x4c45, 0x1, 0x1);
        gbc.writeMem(0x8b01, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9a71, gbc.sp());
        EXPECT(0x8b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8b01));
        // 15 03B5
        gbc.setState(0x97ba, 0xa93a, 0xf0b0, 0xfe3f, 0xc6f3, 0x6834, 0x1, 0x0);
        gbc.writeMem(0x97ba, { 0x15 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xa93a, gbc.sp());
        EXPECT(0x97bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x97ba));
        // 15 03B6
        gbc.setState(0x6c31, 0x148d, 0xcef0, 0xce2b, 0xcdeb, 0x189a, 0x1, 0x1);
        gbc.writeMem(0x6c31, { 0x15 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x148d, gbc.sp());
        EXPECT(0x6c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03B7
        gbc.setState(0x7a, 0xd931, 0xdb60, 0xf65a, 0x8cdf, 0xf71, 0x0, 0x0);
        gbc.writeMem(0x7a, { 0x15 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd931, gbc.sp());
        EXPECT(0x7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03B8
        gbc.setState(0x9d54, 0xd15b, 0x5260, 0xb3e0, 0xc2a5, 0x8138, 0x0, 0x1);
        gbc.writeMem(0x9d54, { 0x15 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0x9d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9d54));
        // 15 03B9
        gbc.setState(0x252d, 0x3931, 0x5800, 0x73c1, 0x21c, 0x29f5, 0x1, 0x0);
        gbc.writeMem(0x252d, { 0x15 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3931, gbc.sp());
        EXPECT(0x252e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03BB
        gbc.setState(0x7bb0, 0xd967, 0x39d0, 0x7ada, 0x4fef, 0x6ec3, 0x1, 0x0);
        gbc.writeMem(0x7bb0, { 0x15 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd967, gbc.sp());
        EXPECT(0x7bb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03BC
        gbc.setState(0x2b15, 0xb758, 0x31f0, 0x3526, 0xcc04, 0xc04a, 0x1, 0x1);
        gbc.writeMem(0x2b15, { 0x15 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb758, gbc.sp());
        EXPECT(0x2b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03BD
        gbc.setState(0xa856, 0x6a62, 0x93d0, 0x2d6a, 0x1447, 0xf01d, 0x1, 0x1);
        gbc.writeMem(0xa856, { 0x15 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6a62, gbc.sp());
        EXPECT(0xa857, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa856));
        // 15 03BE
        gbc.setState(0x9e1f, 0x1245, 0x1110, 0x9307, 0xc722, 0xe283, 0x0, 0x1);
        gbc.writeMem(0x9e1f, { 0x15 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1245, gbc.sp());
        EXPECT(0x9e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9e1f));
        // 15 03BF
        gbc.setState(0xba05, 0x7584, 0xb2a0, 0x17eb, 0x4290, 0xc9da, 0x1, 0x0);
        gbc.writeMem(0xba05, { 0x15 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7584, gbc.sp());
        EXPECT(0xba06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xba05));
        // 15 03C0
        gbc.setState(0x338, 0x365d, 0xdaa0, 0xe401, 0x4fe2, 0x8a4f, 0x0, 0x0);
        gbc.writeMem(0x338, { 0x15 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x365d, gbc.sp());
        EXPECT(0x339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03C1
        gbc.setState(0xbce2, 0x1026, 0x5400, 0x19e8, 0xfa00, 0x4c2a, 0x0, 0x0);
        gbc.writeMem(0xbce2, { 0x15 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbce2));
        // 15 03C2
        gbc.setState(0x496, 0xb1de, 0x5cb0, 0x3248, 0xbf0a, 0x79b5, 0x0, 0x1);
        gbc.writeMem(0x496, { 0x15 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb1de, gbc.sp());
        EXPECT(0x497, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03C3
        gbc.setState(0x57cc, 0xdc59, 0x6d20, 0xd807, 0x9a81, 0xeae1, 0x1, 0x1);
        gbc.writeMem(0x57cc, { 0x15 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xdc59, gbc.sp());
        EXPECT(0x57cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03C4
        gbc.setState(0x4dad, 0xf415, 0x1da0, 0x6316, 0x7db2, 0xfdc2, 0x0, 0x0);
        gbc.writeMem(0x4dad, { 0x15 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf415, gbc.sp());
        EXPECT(0x4dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03C5
        gbc.setState(0xee9b, 0x8423, 0xcb80, 0xae0f, 0xa1be, 0xa1de, 0x1, 0x1);
        gbc.writeMem(0xee9b, { 0x15 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8423, gbc.sp());
        EXPECT(0xee9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xee9b));
        // 15 03C6
        gbc.setState(0x9de7, 0xd34d, 0xcad0, 0xa421, 0xdfd5, 0x73a, 0x1, 0x1);
        gbc.writeMem(0x9de7, { 0x15 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0x9de8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9de7));
        // 15 03C7
        gbc.setState(0x14d2, 0xa4ab, 0x87e0, 0x3367, 0x9eb2, 0x68c1, 0x0, 0x0);
        gbc.writeMem(0x14d2, { 0x15 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xa4ab, gbc.sp());
        EXPECT(0x14d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03C8
        gbc.setState(0x6fb4, 0xa172, 0xf4f0, 0xeb14, 0x9348, 0x7d65, 0x1, 0x1);
        gbc.writeMem(0x6fb4, { 0x15 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa172, gbc.sp());
        EXPECT(0x6fb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03CA
        gbc.setState(0xa62e, 0x2583, 0x43f0, 0x5f7f, 0xccdb, 0x3b5d, 0x0, 0x0);
        gbc.writeMem(0xa62e, { 0x15 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2583, gbc.sp());
        EXPECT(0xa62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa62e));
        // 15 03CB
        gbc.setState(0xe55, 0x3c0f, 0x3880, 0xd86, 0xb803, 0x6837, 0x0, 0x1);
        gbc.writeMem(0xe55, { 0x15 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3c0f, gbc.sp());
        EXPECT(0xe56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03CC
        gbc.setState(0xde8d, 0xf2ca, 0x25e0, 0x3358, 0x1b45, 0x26e6, 0x1, 0x1);
        gbc.writeMem(0xde8d, { 0x15 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xf2ca, gbc.sp());
        EXPECT(0xde8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xde8d));
        // 15 03CD
        gbc.setState(0xa4, 0xbc0f, 0x2830, 0x8b53, 0x5fc8, 0xc33f, 0x0, 0x1);
        gbc.writeMem(0xa4, { 0x15 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbc0f, gbc.sp());
        EXPECT(0xa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03CE
        gbc.setState(0x8860, 0x6ba4, 0xcf60, 0x2146, 0x1b9f, 0x4e94, 0x0, 0x0);
        gbc.writeMem(0x8860, { 0x15 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6ba4, gbc.sp());
        EXPECT(0x8861, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8860));
        // 15 03CF
        gbc.setState(0xc95e, 0xcf20, 0x88c0, 0xab6c, 0xf4ad, 0x2b31, 0x1, 0x1);
        gbc.writeMem(0xc95e, { 0x15 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xcf20, gbc.sp());
        EXPECT(0xc95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc95e));
        // 15 03D0
        gbc.setState(0x8cda, 0x2b95, 0xd9a0, 0x9e7a, 0xa910, 0x68b3, 0x1, 0x1);
        gbc.writeMem(0x8cda, { 0x15 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2b95, gbc.sp());
        EXPECT(0x8cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8cda));
        // 15 03D1
        gbc.setState(0x30a, 0x5704, 0xe050, 0xc988, 0x4c76, 0xae9, 0x0, 0x1);
        gbc.writeMem(0x30a, { 0x15 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5704, gbc.sp());
        EXPECT(0x30b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03D2
        gbc.setState(0x9a10, 0x5167, 0x830, 0xc318, 0x6f64, 0xd2e4, 0x0, 0x0);
        gbc.writeMem(0x9a10, { 0x15 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5167, gbc.sp());
        EXPECT(0x9a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9a10));
        // 15 03D3
        gbc.setState(0x686b, 0x3289, 0xfcc0, 0xd70f, 0x29ec, 0xd4c6, 0x0, 0x0);
        gbc.writeMem(0x686b, { 0x15 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3289, gbc.sp());
        EXPECT(0x686c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03D4
        gbc.setState(0x7cc6, 0x218e, 0x2fd0, 0x24e8, 0xcbfd, 0xdbce, 0x0, 0x1);
        gbc.writeMem(0x7cc6, { 0x15 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x218e, gbc.sp());
        EXPECT(0x7cc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03D5
        gbc.setState(0xc52b, 0x134d, 0xb820, 0x6998, 0xf0e3, 0xc28d, 0x1, 0x0);
        gbc.writeMem(0xc52b, { 0x15 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x134d, gbc.sp());
        EXPECT(0xc52c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xc52b));
        // 15 03D6
        gbc.setState(0xb191, 0xf6c6, 0xcaa0, 0x713, 0xc8b0, 0xbd0d, 0x1, 0x1);
        gbc.writeMem(0xb191, { 0x15 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0xb192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb191));
        // 15 03D9
        gbc.setState(0xbec9, 0xe41b, 0x1f90, 0x30d3, 0x69f2, 0xe0b7, 0x0, 0x0);
        gbc.writeMem(0xbec9, { 0x15 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe41b, gbc.sp());
        EXPECT(0xbeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xbec9));
        // 15 03DA
        gbc.setState(0x9975, 0xa1ff, 0x4170, 0x7a90, 0x2efb, 0x470b, 0x0, 0x0);
        gbc.writeMem(0x9975, { 0x15 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa1ff, gbc.sp());
        EXPECT(0x9976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9975));
        // 15 03DB
        gbc.setState(0x9dcd, 0x3a1a, 0x9b90, 0x203d, 0x197b, 0x7c4, 0x0, 0x0);
        gbc.writeMem(0x9dcd, { 0x15 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x3a1a, gbc.sp());
        EXPECT(0x9dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9dcd));
        // 15 03DC
        gbc.setState(0x3ae3, 0x586b, 0x1680, 0x1151, 0xa10e, 0xa547, 0x0, 0x0);
        gbc.writeMem(0x3ae3, { 0x15 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x586b, gbc.sp());
        EXPECT(0x3ae4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03DD
        gbc.setState(0x34d7, 0x35f5, 0x50a0, 0xc4dc, 0x5743, 0x319d, 0x1, 0x0);
        gbc.writeMem(0x34d7, { 0x15 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x35f5, gbc.sp());
        EXPECT(0x34d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03DE
        gbc.setState(0x6427, 0x5351, 0x3ea0, 0x2b0c, 0x5b15, 0xa501, 0x1, 0x0);
        gbc.writeMem(0x6427, { 0x15 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5351, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 15 03DF
        gbc.setState(0xa0fb, 0x1ab1, 0x1cd0, 0x41c, 0x1bfa, 0x3ba6, 0x0, 0x0);
        gbc.writeMem(0xa0fb, { 0x15 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1ab1, gbc.sp());
        EXPECT(0xa0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa0fb));
        // 15 03E0
        gbc.setState(0x8f45, 0x1099, 0xf4e0, 0x7f4b, 0xf747, 0x3ce3, 0x1, 0x0);
        gbc.writeMem(0x8f45, { 0x15 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1099, gbc.sp());
        EXPECT(0x8f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x8f45));
        // 15 03E1
        gbc.setState(0xd55d, 0x2ba4, 0xe5d0, 0x5f9b, 0x2225, 0x968b, 0x1, 0x1);
        gbc.writeMem(0xd55d, { 0x15 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2ba4, gbc.sp());
        EXPECT(0xd55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd55d));
        // 15 03E2
        gbc.setState(0xefab, 0x626f, 0x2e80, 0xfd03, 0x512d, 0x13ad, 0x1, 0x1);
        gbc.writeMem(0xefab, { 0x15 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x626f, gbc.sp());
        EXPECT(0xefac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xefab));
        // 15 03E3
        gbc.setState(0x2ad6, 0x85bd, 0x3cd0, 0xde82, 0xdf2a, 0x71e2, 0x0, 0x1);
        gbc.writeMem(0x2ad6, { 0x15 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x85bd, gbc.sp());
        EXPECT(0x2ad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 15 03E4
        gbc.setState(0xa219, 0x4aa8, 0x4a40, 0x111, 0x636a, 0x785e, 0x1, 0x0);
        gbc.writeMem(0xa219, { 0x15 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4aa8, gbc.sp());
        EXPECT(0xa21a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa219));
        // 15 03E5
        gbc.setState(0xa5b5, 0x16b8, 0x1b0, 0xd8cc, 0xd0f4, 0x7e38, 0x0, 0x0);
        gbc.writeMem(0xa5b5, { 0x15 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x16b8, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xa5b5));
        // 15 03E6
        gbc.setState(0xab05, 0x91ae, 0x6c60, 0xc0ad, 0x193f, 0xe13b, 0x0, 0x0);
        gbc.writeMem(0xab05, { 0x15 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x91ae, gbc.sp());
        EXPECT(0xab06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xab05));
        // 15 03E7
        gbc.setState(0xccfb, 0xa059, 0xaa40, 0x652f, 0x50d5, 0xab82, 0x0, 0x1);
        gbc.writeMem(0xccfb, { 0x15 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa059, gbc.sp());
        EXPECT(0xccfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xccfb));
    }
