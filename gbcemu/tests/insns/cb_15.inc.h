    TEST(gbcemu, opcode_cb_15) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 15 0000
        gbc.setState(0x452b, 0x7f51, 0x5c20, 0xd637, 0xaa08, 0x88ed, 0x1, 0x0);
        gbc.writeMem(0x452b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x7f51);
        EXPECT(gbc.pc(), 0x452d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0001
        gbc.setState(0x1330, 0x71a8, 0xd1a0, 0xddb4, 0x9aa0, 0x464f, 0x1, 0x1);
        gbc.writeMem(0x1330, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x71a8);
        EXPECT(gbc.pc(), 0x1332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0002
        gbc.setState(0xc2e2, 0x2007, 0xdc0, 0x153, 0xd04c, 0x24ed, 0x0, 0x1);
        gbc.writeMem(0xc2e2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x2007);
        EXPECT(gbc.pc(), 0xc2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2e2), 0xcb);
        EXPECT(gbc.readMem(0xc2e3), 0x15);
        // CB 15 0003
        gbc.setState(0x4ed3, 0x9418, 0x710, 0x3649, 0xb5b0, 0xe793, 0x1, 0x1);
        gbc.writeMem(0x4ed3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9418);
        EXPECT(gbc.pc(), 0x4ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0004
        gbc.setState(0x99f7, 0x8dc0, 0x8430, 0x73d8, 0xf120, 0x3ce0, 0x0, 0x0);
        gbc.writeMem(0x99f7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8dc0);
        EXPECT(gbc.pc(), 0x99f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f7), 0xcb);
        EXPECT(gbc.readMem(0x99f8), 0x15);
        // CB 15 0005
        gbc.setState(0x1084, 0x89f1, 0x3d80, 0x177c, 0xc147, 0xcea6, 0x0, 0x1);
        gbc.writeMem(0x1084, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x89f1);
        EXPECT(gbc.pc(), 0x1086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0006
        gbc.setState(0x90fe, 0x2d4d, 0x9230, 0x9642, 0xe970, 0xd09d, 0x1, 0x1);
        gbc.writeMem(0x90fe, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x2d4d);
        EXPECT(gbc.pc(), 0x9100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90fe), 0xcb);
        EXPECT(gbc.readMem(0x90ff), 0x15);
        // CB 15 0007
        gbc.setState(0x8c1b, 0xbd43, 0x3a80, 0xd8d7, 0x4e0b, 0xa0c8, 0x1, 0x0);
        gbc.writeMem(0x8c1b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xbd43);
        EXPECT(gbc.pc(), 0x8c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1b), 0xcb);
        EXPECT(gbc.readMem(0x8c1c), 0x15);
        // CB 15 0008
        gbc.setState(0x1674, 0xdf53, 0x91b0, 0x2018, 0xe104, 0xec32, 0x0, 0x0);
        gbc.writeMem(0x1674, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdf53);
        EXPECT(gbc.pc(), 0x1676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0009
        gbc.setState(0x4021, 0xac8f, 0x50a0, 0xf782, 0xbe72, 0x3660, 0x0, 0x0);
        gbc.writeMem(0x4021, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xac8f);
        EXPECT(gbc.pc(), 0x4023);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 000A
        gbc.setState(0xc73, 0x6180, 0x8720, 0x8c55, 0x231c, 0x4b05, 0x1, 0x1);
        gbc.writeMem(0xc73, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6180);
        EXPECT(gbc.pc(), 0xc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 000B
        gbc.setState(0xb4b0, 0xbf6d, 0x70d0, 0x8019, 0xc581, 0x7b35, 0x1, 0x1);
        gbc.writeMem(0xb4b0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xbf6d);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4b0), 0xcb);
        EXPECT(gbc.readMem(0xb4b1), 0x15);
        // CB 15 000C
        gbc.setState(0x6980, 0xb7fa, 0x34b0, 0xc122, 0xc61e, 0x8931, 0x0, 0x1);
        gbc.writeMem(0x6980, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xb7fa);
        EXPECT(gbc.pc(), 0x6982);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 000D
        gbc.setState(0xadb9, 0x3b1, 0x2dc0, 0x5db, 0x2d24, 0xda92, 0x1, 0x1);
        gbc.writeMem(0xadb9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x3b1);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb9), 0xcb);
        EXPECT(gbc.readMem(0xadba), 0x15);
        // CB 15 000F
        gbc.setState(0x6e5c, 0x6ce6, 0xa4e0, 0x90f1, 0x96b3, 0xa2a, 0x0, 0x1);
        gbc.writeMem(0x6e5c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6ce6);
        EXPECT(gbc.pc(), 0x6e5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0010
        gbc.setState(0xae41, 0xe7f3, 0xd3e0, 0x51e4, 0x139d, 0x7df, 0x0, 0x0);
        gbc.writeMem(0xae41, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe7f3);
        EXPECT(gbc.pc(), 0xae43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae41), 0xcb);
        EXPECT(gbc.readMem(0xae42), 0x15);
        // CB 15 0011
        gbc.setState(0xb954, 0x2ea4, 0x7e00, 0x8646, 0xc1c8, 0x8ec4, 0x0, 0x0);
        gbc.writeMem(0xb954, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x2ea4);
        EXPECT(gbc.pc(), 0xb956);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb954), 0xcb);
        EXPECT(gbc.readMem(0xb955), 0x15);
        // CB 15 0012
        gbc.setState(0x2f11, 0xf235, 0x6270, 0x830, 0xf33f, 0xfa10, 0x0, 0x0);
        gbc.writeMem(0x2f11, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xf235);
        EXPECT(gbc.pc(), 0x2f13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0013
        gbc.setState(0x995c, 0xa535, 0x650, 0x68ea, 0xecdc, 0x914c, 0x1, 0x0);
        gbc.writeMem(0x995c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xa535);
        EXPECT(gbc.pc(), 0x995e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995c), 0xcb);
        EXPECT(gbc.readMem(0x995d), 0x15);
        // CB 15 0014
        gbc.setState(0x99e1, 0xef27, 0xce0, 0xeada, 0x3b18, 0x8d02, 0x1, 0x1);
        gbc.writeMem(0x99e1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xef27);
        EXPECT(gbc.pc(), 0x99e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e1), 0xcb);
        EXPECT(gbc.readMem(0x99e2), 0x15);
        // CB 15 0015
        gbc.setState(0x6819, 0x978b, 0xeb70, 0x535b, 0x6309, 0xfaed, 0x0, 0x1);
        gbc.writeMem(0x6819, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x978b);
        EXPECT(gbc.pc(), 0x681b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0016
        gbc.setState(0x502b, 0x3fc2, 0x6510, 0xe9aa, 0xdb91, 0xe0d0, 0x1, 0x1);
        gbc.writeMem(0x502b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3fc2);
        EXPECT(gbc.pc(), 0x502d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0017
        gbc.setState(0x9f00, 0xdfcb, 0xdb90, 0xb266, 0x5eb4, 0x82f8, 0x1, 0x1);
        gbc.writeMem(0x9f00, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xdfcb);
        EXPECT(gbc.pc(), 0x9f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f00), 0xcb);
        EXPECT(gbc.readMem(0x9f01), 0x15);
        // CB 15 0018
        gbc.setState(0x479e, 0xc395, 0xe460, 0x3d5c, 0x244f, 0xa189, 0x1, 0x1);
        gbc.writeMem(0x479e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc395);
        EXPECT(gbc.pc(), 0x47a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0019
        gbc.setState(0xd6be, 0xe36c, 0x2290, 0x3424, 0xd6c0, 0xd9e7, 0x0, 0x0);
        gbc.writeMem(0xd6be, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xe36c);
        EXPECT(gbc.pc(), 0xd6c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6be), 0xcb);
        EXPECT(gbc.readMem(0xd6bf), 0x15);
        // CB 15 001A
        gbc.setState(0xc0ed, 0x4def, 0x77d0, 0x7a62, 0x8a65, 0xb529, 0x1, 0x0);
        gbc.writeMem(0xc0ed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4def);
        EXPECT(gbc.pc(), 0xc0ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0ed), 0xcb);
        EXPECT(gbc.readMem(0xc0ee), 0x15);
        // CB 15 001B
        gbc.setState(0x850b, 0x221, 0xb9c0, 0x9264, 0x1a65, 0x6d51, 0x1, 0x0);
        gbc.writeMem(0x850b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x221);
        EXPECT(gbc.pc(), 0x850d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x850b), 0xcb);
        EXPECT(gbc.readMem(0x850c), 0x15);
        // CB 15 001C
        gbc.setState(0xa229, 0x2187, 0x2c60, 0xc0ec, 0x3b40, 0x5621, 0x0, 0x1);
        gbc.writeMem(0xa229, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2187);
        EXPECT(gbc.pc(), 0xa22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa229), 0xcb);
        EXPECT(gbc.readMem(0xa22a), 0x15);
        // CB 15 001D
        gbc.setState(0xaf9d, 0x9564, 0x8290, 0x1781, 0xa555, 0x73e6, 0x1, 0x0);
        gbc.writeMem(0xaf9d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9564);
        EXPECT(gbc.pc(), 0xaf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9d), 0xcb);
        EXPECT(gbc.readMem(0xaf9e), 0x15);
        // CB 15 001E
        gbc.setState(0x8f4a, 0xf7ef, 0x6db0, 0xdc3b, 0x22f5, 0xf345, 0x1, 0x1);
        gbc.writeMem(0x8f4a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xf7ef);
        EXPECT(gbc.pc(), 0x8f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f4a), 0xcb);
        EXPECT(gbc.readMem(0x8f4b), 0x15);
        // CB 15 001F
        gbc.setState(0x3935, 0x967a, 0xd90, 0x3e97, 0x9fce, 0x5d12, 0x0, 0x1);
        gbc.writeMem(0x3935, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x967a);
        EXPECT(gbc.pc(), 0x3937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0020
        gbc.setState(0x4e67, 0x6ce7, 0xd730, 0x25e4, 0x41ae, 0xf88d, 0x0, 0x0);
        gbc.writeMem(0x4e67, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6ce7);
        EXPECT(gbc.pc(), 0x4e69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0021
        gbc.setState(0x78e3, 0x2d34, 0xbc10, 0x5b8b, 0xbfdb, 0xbd80, 0x0, 0x0);
        gbc.writeMem(0x78e3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2d34);
        EXPECT(gbc.pc(), 0x78e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0022
        gbc.setState(0xa5ff, 0xc79b, 0xaf50, 0xe668, 0x8e8e, 0x8397, 0x1, 0x1);
        gbc.writeMem(0xa5ff, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc79b);
        EXPECT(gbc.pc(), 0xa601);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ff), 0xcb);
        EXPECT(gbc.readMem(0xa600), 0x15);
        // CB 15 0023
        gbc.setState(0x3ffe, 0xe279, 0xacd0, 0x73de, 0x2f58, 0x4735, 0x1, 0x0);
        gbc.writeMem(0x3ffe, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xe279);
        EXPECT(gbc.pc(), 0x4000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0024
        gbc.setState(0x518b, 0x52d, 0xb250, 0xdcbe, 0xce43, 0xe288, 0x0, 0x1);
        gbc.writeMem(0x518b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x52d);
        EXPECT(gbc.pc(), 0x518d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0025
        gbc.setState(0x72d7, 0x2f3, 0xa340, 0x7a7e, 0x68b9, 0x1547, 0x1, 0x0);
        gbc.writeMem(0x72d7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2f3);
        EXPECT(gbc.pc(), 0x72d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0026
        gbc.setState(0x46bb, 0x4, 0x3b50, 0x12e7, 0xe664, 0x768a, 0x1, 0x1);
        gbc.writeMem(0x46bb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4);
        EXPECT(gbc.pc(), 0x46bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0027
        gbc.setState(0x3c75, 0x77fa, 0xe90, 0xc771, 0x9b34, 0x4d40, 0x1, 0x0);
        gbc.writeMem(0x3c75, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x77fa);
        EXPECT(gbc.pc(), 0x3c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0028
        gbc.setState(0xdb27, 0x2612, 0x6ec0, 0xc47d, 0x2849, 0xb9f3, 0x1, 0x0);
        gbc.writeMem(0xdb27, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2612);
        EXPECT(gbc.pc(), 0xdb29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb27), 0xcb);
        EXPECT(gbc.readMem(0xdb28), 0x15);
        // CB 15 0029
        gbc.setState(0x863c, 0xabe4, 0xfbf0, 0x3e5d, 0xf6a, 0x52ef, 0x1, 0x1);
        gbc.writeMem(0x863c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xabe4);
        EXPECT(gbc.pc(), 0x863e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863c), 0xcb);
        EXPECT(gbc.readMem(0x863d), 0x15);
        // CB 15 002A
        gbc.setState(0x7380, 0x9e26, 0x4380, 0xbe28, 0x3936, 0xf8c9, 0x1, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9e26);
        EXPECT(gbc.pc(), 0x7382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 002B
        gbc.setState(0x6b5d, 0xc5ee, 0x3010, 0x7944, 0xef82, 0x6178, 0x0, 0x0);
        gbc.writeMem(0x6b5d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc5ee);
        EXPECT(gbc.pc(), 0x6b5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 002C
        gbc.setState(0xa354, 0x9442, 0x8fb0, 0x77bc, 0x9cd, 0xf841, 0x1, 0x1);
        gbc.writeMem(0xa354, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9442);
        EXPECT(gbc.pc(), 0xa356);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa354), 0xcb);
        EXPECT(gbc.readMem(0xa355), 0x15);
        // CB 15 002D
        gbc.setState(0x3f73, 0xc0a3, 0xe600, 0xdc33, 0x8a23, 0x3004, 0x0, 0x1);
        gbc.writeMem(0x3f73, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc0a3);
        EXPECT(gbc.pc(), 0x3f75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 002E
        gbc.setState(0x46ad, 0x58e5, 0xff20, 0xca6a, 0x44fa, 0x31ea, 0x0, 0x0);
        gbc.writeMem(0x46ad, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x58e5);
        EXPECT(gbc.pc(), 0x46af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 002F
        gbc.setState(0xe229, 0xc8d5, 0xc4f0, 0x46cb, 0xfb, 0x1cca, 0x1, 0x1);
        gbc.writeMem(0xe229, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xc8d5);
        EXPECT(gbc.pc(), 0xe22b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe229), 0xcb);
        EXPECT(gbc.readMem(0xe22a), 0x15);
        // CB 15 0030
        gbc.setState(0xeacc, 0xa268, 0x3110, 0x8829, 0xeef2, 0xe92a, 0x0, 0x1);
        gbc.writeMem(0xeacc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa268);
        EXPECT(gbc.pc(), 0xeace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacc), 0xcb);
        EXPECT(gbc.readMem(0xeacd), 0x15);
        // CB 15 0031
        gbc.setState(0xd784, 0x4b1f, 0x4ae0, 0x1363, 0x2db7, 0x6547, 0x1, 0x1);
        gbc.writeMem(0xd784, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4b1f);
        EXPECT(gbc.pc(), 0xd786);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd784), 0xcb);
        EXPECT(gbc.readMem(0xd785), 0x15);
        // CB 15 0032
        gbc.setState(0x3f56, 0x65eb, 0xf9a0, 0x49b1, 0x4e9d, 0x2f1, 0x0, 0x0);
        gbc.writeMem(0x3f56, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x65eb);
        EXPECT(gbc.pc(), 0x3f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0033
        gbc.setState(0x3529, 0xae37, 0x5f00, 0xaa43, 0x720b, 0xf250, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xae37);
        EXPECT(gbc.pc(), 0x352b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0034
        gbc.setState(0xe4a2, 0xf6bc, 0xe3a0, 0x6eec, 0x9555, 0xadb8, 0x0, 0x1);
        gbc.writeMem(0xe4a2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf6bc);
        EXPECT(gbc.pc(), 0xe4a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4a2), 0xcb);
        EXPECT(gbc.readMem(0xe4a3), 0x15);
        // CB 15 0035
        gbc.setState(0xa219, 0x1d92, 0xf120, 0xab44, 0x86fc, 0xef9, 0x0, 0x0);
        gbc.writeMem(0xa219, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1d92);
        EXPECT(gbc.pc(), 0xa21b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa219), 0xcb);
        EXPECT(gbc.readMem(0xa21a), 0x15);
        // CB 15 0036
        gbc.setState(0xc667, 0xeea8, 0xf670, 0x9497, 0x9d55, 0x1a23, 0x1, 0x0);
        gbc.writeMem(0xc667, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xeea8);
        EXPECT(gbc.pc(), 0xc669);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc667), 0xcb);
        EXPECT(gbc.readMem(0xc668), 0x15);
        // CB 15 0037
        gbc.setState(0x9260, 0x75f7, 0xce20, 0x72f8, 0x3fae, 0xd89c, 0x0, 0x0);
        gbc.writeMem(0x9260, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x75f7);
        EXPECT(gbc.pc(), 0x9262);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9260), 0xcb);
        EXPECT(gbc.readMem(0x9261), 0x15);
        // CB 15 0038
        gbc.setState(0xe13a, 0xfa1c, 0x6510, 0xa193, 0x138f, 0xa574, 0x0, 0x0);
        gbc.writeMem(0xe13a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xfa1c);
        EXPECT(gbc.pc(), 0xe13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13a), 0xcb);
        EXPECT(gbc.readMem(0xe13b), 0x15);
        // CB 15 0039
        gbc.setState(0xe6e7, 0x486d, 0x6f20, 0x4d52, 0x8842, 0x2d6d, 0x1, 0x1);
        gbc.writeMem(0xe6e7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x486d);
        EXPECT(gbc.pc(), 0xe6e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e7), 0xcb);
        EXPECT(gbc.readMem(0xe6e8), 0x15);
        // CB 15 003A
        gbc.setState(0x3115, 0xc1d3, 0xfcd0, 0xfaea, 0xaec1, 0xa8b9, 0x1, 0x1);
        gbc.writeMem(0x3115, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc1d3);
        EXPECT(gbc.pc(), 0x3117);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 003B
        gbc.setState(0x995e, 0x27f7, 0xcf00, 0x4c65, 0x505e, 0xb378, 0x0, 0x0);
        gbc.writeMem(0x995e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x27f7);
        EXPECT(gbc.pc(), 0x9960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995e), 0xcb);
        EXPECT(gbc.readMem(0x995f), 0x15);
        // CB 15 003C
        gbc.setState(0xea67, 0x34e7, 0xfec0, 0xb66c, 0x4500, 0x1309, 0x0, 0x1);
        gbc.writeMem(0xea67, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x34e7);
        EXPECT(gbc.pc(), 0xea69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea67), 0xcb);
        EXPECT(gbc.readMem(0xea68), 0x15);
        // CB 15 003D
        gbc.setState(0x82a5, 0xce7b, 0x7d80, 0x9279, 0xf160, 0x9df, 0x1, 0x0);
        gbc.writeMem(0x82a5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xce7b);
        EXPECT(gbc.pc(), 0x82a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82a5), 0xcb);
        EXPECT(gbc.readMem(0x82a6), 0x15);
        // CB 15 003E
        gbc.setState(0xc045, 0x9f0, 0x470, 0x823a, 0x2dd3, 0xe8e6, 0x1, 0x1);
        gbc.writeMem(0xc045, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x9f0);
        EXPECT(gbc.pc(), 0xc047);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc045), 0xcb);
        EXPECT(gbc.readMem(0xc046), 0x15);
        // CB 15 003F
        gbc.setState(0x258f, 0xf117, 0xd3a0, 0xde7f, 0xe8dc, 0x3b37, 0x1, 0x1);
        gbc.writeMem(0x258f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xf117);
        EXPECT(gbc.pc(), 0x2591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0040
        gbc.setState(0xe1e1, 0x997e, 0xf680, 0x9c78, 0xcd47, 0xf356, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x997e);
        EXPECT(gbc.pc(), 0xe1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1e1), 0xcb);
        EXPECT(gbc.readMem(0xe1e2), 0x15);
        // CB 15 0041
        gbc.setState(0xe76e, 0x5bd9, 0x6070, 0x1ad2, 0x65d5, 0xb1db, 0x0, 0x0);
        gbc.writeMem(0xe76e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5bd9);
        EXPECT(gbc.pc(), 0xe770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe76e), 0xcb);
        EXPECT(gbc.readMem(0xe76f), 0x15);
        // CB 15 0042
        gbc.setState(0x63a2, 0xcca9, 0x20c0, 0x5747, 0x438e, 0xd009, 0x0, 0x0);
        gbc.writeMem(0x63a2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xcca9);
        EXPECT(gbc.pc(), 0x63a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0043
        gbc.setState(0xc6ee, 0xcc88, 0xf430, 0xdeeb, 0x4700, 0xb5f1, 0x0, 0x0);
        gbc.writeMem(0xc6ee, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xcc88);
        EXPECT(gbc.pc(), 0xc6f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ee), 0xcb);
        EXPECT(gbc.readMem(0xc6ef), 0x15);
        // CB 15 0044
        gbc.setState(0x19ea, 0x73f9, 0x2f50, 0xbe66, 0xc622, 0x8248, 0x1, 0x0);
        gbc.writeMem(0x19ea, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x73f9);
        EXPECT(gbc.pc(), 0x19ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0045
        gbc.setState(0x7127, 0xa9c3, 0x4fb0, 0xac37, 0xbe82, 0xa70b, 0x1, 0x1);
        gbc.writeMem(0x7127, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xa9c3);
        EXPECT(gbc.pc(), 0x7129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0046
        gbc.setState(0x942d, 0x93e5, 0xc890, 0x6412, 0xec21, 0x2fca, 0x1, 0x0);
        gbc.writeMem(0x942d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x93e5);
        EXPECT(gbc.pc(), 0x942f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x942d), 0xcb);
        EXPECT(gbc.readMem(0x942e), 0x15);
        // CB 15 0047
        gbc.setState(0xd353, 0xd4b5, 0x8dc0, 0xd11b, 0xe5cf, 0x2104, 0x0, 0x0);
        gbc.writeMem(0xd353, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xd4b5);
        EXPECT(gbc.pc(), 0xd355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd353), 0xcb);
        EXPECT(gbc.readMem(0xd354), 0x15);
        // CB 15 0049
        gbc.setState(0xd598, 0xb9c0, 0x6190, 0x6173, 0xb4ff, 0xcdf8, 0x1, 0x1);
        gbc.writeMem(0xd598, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb9c0);
        EXPECT(gbc.pc(), 0xd59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd598), 0xcb);
        EXPECT(gbc.readMem(0xd599), 0x15);
        // CB 15 004A
        gbc.setState(0x3fe2, 0x5089, 0x1590, 0xa238, 0xefb2, 0xf096, 0x1, 0x1);
        gbc.writeMem(0x3fe2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5089);
        EXPECT(gbc.pc(), 0x3fe4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 004B
        gbc.setState(0x463f, 0xae67, 0x8ce0, 0xcc91, 0xda36, 0x9c08, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xae67);
        EXPECT(gbc.pc(), 0x4641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 004C
        gbc.setState(0xd8c9, 0xe430, 0x12d0, 0x49ad, 0x24e8, 0xd249, 0x0, 0x0);
        gbc.writeMem(0xd8c9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe430);
        EXPECT(gbc.pc(), 0xd8cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8c9), 0xcb);
        EXPECT(gbc.readMem(0xd8ca), 0x15);
        // CB 15 004D
        gbc.setState(0x94a9, 0x1545, 0x650, 0xc321, 0xf70f, 0xeda, 0x0, 0x0);
        gbc.writeMem(0x94a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x1545);
        EXPECT(gbc.pc(), 0x94ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a9), 0xcb);
        EXPECT(gbc.readMem(0x94aa), 0x15);
        // CB 15 004E
        gbc.setState(0x5e24, 0xab34, 0xb3f0, 0x1cae, 0x8fa3, 0x98b3, 0x0, 0x0);
        gbc.writeMem(0x5e24, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xab34);
        EXPECT(gbc.pc(), 0x5e26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 004F
        gbc.setState(0xe761, 0x75d5, 0x2e70, 0x79b1, 0x91e, 0xf151, 0x1, 0x1);
        gbc.writeMem(0xe761, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x75d5);
        EXPECT(gbc.pc(), 0xe763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe761), 0xcb);
        EXPECT(gbc.readMem(0xe762), 0x15);
        // CB 15 0050
        gbc.setState(0x5523, 0xfbe0, 0x35b0, 0xcfa, 0xb3ad, 0xda23, 0x0, 0x1);
        gbc.writeMem(0x5523, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0x5525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0051
        gbc.setState(0x4a90, 0xbef2, 0xe420, 0xaf6c, 0x156e, 0x9339, 0x1, 0x1);
        gbc.writeMem(0x4a90, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbef2);
        EXPECT(gbc.pc(), 0x4a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0052
        gbc.setState(0xc539, 0xc56f, 0x5340, 0x20e6, 0x71b6, 0x18b3, 0x1, 0x0);
        gbc.writeMem(0xc539, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xc56f);
        EXPECT(gbc.pc(), 0xc53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc539), 0xcb);
        EXPECT(gbc.readMem(0xc53a), 0x15);
        // CB 15 0053
        gbc.setState(0x8713, 0x9d86, 0xd610, 0x9860, 0x443e, 0x8060, 0x0, 0x1);
        gbc.writeMem(0x8713, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9d86);
        EXPECT(gbc.pc(), 0x8715);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8713), 0xcb);
        EXPECT(gbc.readMem(0x8714), 0x15);
        // CB 15 0054
        gbc.setState(0x5c8c, 0x4cc3, 0x5d30, 0xe810, 0x82db, 0x5e94, 0x0, 0x0);
        gbc.writeMem(0x5c8c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4cc3);
        EXPECT(gbc.pc(), 0x5c8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0055
        gbc.setState(0x42f8, 0x4465, 0x2290, 0x55ab, 0x15b, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0x42f8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x4465);
        EXPECT(gbc.pc(), 0x42fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0056
        gbc.setState(0x1eba, 0xed8d, 0xbc50, 0xa136, 0x6c9f, 0x2117, 0x1, 0x1);
        gbc.writeMem(0x1eba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xed8d);
        EXPECT(gbc.pc(), 0x1ebc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0057
        gbc.setState(0x1280, 0x6bf7, 0x7c90, 0x42b0, 0x2767, 0x194d, 0x0, 0x0);
        gbc.writeMem(0x1280, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x6bf7);
        EXPECT(gbc.pc(), 0x1282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0058
        gbc.setState(0x1fc5, 0xf494, 0x3df0, 0xa5cf, 0x1a73, 0xf054, 0x1, 0x1);
        gbc.writeMem(0x1fc5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf494);
        EXPECT(gbc.pc(), 0x1fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0059
        gbc.setState(0xa465, 0x5f9, 0x1370, 0x8a62, 0xbaa5, 0xe95b, 0x1, 0x1);
        gbc.writeMem(0xa465, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x5f9);
        EXPECT(gbc.pc(), 0xa467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa465), 0xcb);
        EXPECT(gbc.readMem(0xa466), 0x15);
        // CB 15 005A
        gbc.setState(0xbb7a, 0x51de, 0x2ee0, 0x725c, 0x3e0c, 0xfd8f, 0x1, 0x0);
        gbc.writeMem(0xbb7a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x51de);
        EXPECT(gbc.pc(), 0xbb7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7a), 0xcb);
        EXPECT(gbc.readMem(0xbb7b), 0x15);
        // CB 15 005B
        gbc.setState(0xebc, 0x7d2e, 0x6660, 0x87d2, 0x4d7f, 0x38d0, 0x0, 0x0);
        gbc.writeMem(0xebc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7d2e);
        EXPECT(gbc.pc(), 0xebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 005C
        gbc.setState(0xc10f, 0x25e7, 0x32a0, 0x11f1, 0x605, 0xccf8, 0x0, 0x1);
        gbc.writeMem(0xc10f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x25e7);
        EXPECT(gbc.pc(), 0xc111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc10f), 0xcb);
        EXPECT(gbc.readMem(0xc110), 0x15);
        // CB 15 005D
        gbc.setState(0x9194, 0xf3db, 0xc7f0, 0x21cc, 0x58cf, 0xfb80, 0x0, 0x0);
        gbc.writeMem(0x9194, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf3db);
        EXPECT(gbc.pc(), 0x9196);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9194), 0xcb);
        EXPECT(gbc.readMem(0x9195), 0x15);
        // CB 15 005E
        gbc.setState(0x6afb, 0xe5de, 0x31d0, 0x7a6a, 0xd3de, 0x6747, 0x0, 0x1);
        gbc.writeMem(0x6afb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe5de);
        EXPECT(gbc.pc(), 0x6afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 005F
        gbc.setState(0x58ac, 0x6760, 0xb3e0, 0xe0f9, 0xb7f2, 0xe533, 0x1, 0x0);
        gbc.writeMem(0x58ac, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x6760);
        EXPECT(gbc.pc(), 0x58ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0060
        gbc.setState(0xb7c5, 0xc32a, 0xa840, 0x4046, 0xa3bd, 0x86ad, 0x0, 0x0);
        gbc.writeMem(0xb7c5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc32a);
        EXPECT(gbc.pc(), 0xb7c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c5), 0xcb);
        EXPECT(gbc.readMem(0xb7c6), 0x15);
        // CB 15 0061
        gbc.setState(0x9259, 0x263c, 0x1220, 0x511a, 0x67cb, 0xb63, 0x0, 0x1);
        gbc.writeMem(0x9259, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x263c);
        EXPECT(gbc.pc(), 0x925b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9259), 0xcb);
        EXPECT(gbc.readMem(0x925a), 0x15);
        // CB 15 0062
        gbc.setState(0x74df, 0x45ec, 0xdda0, 0x5260, 0xc7e1, 0x6fd, 0x0, 0x1);
        gbc.writeMem(0x74df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x45ec);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0063
        gbc.setState(0xae7, 0xe937, 0x6280, 0x76f5, 0x8997, 0xbe89, 0x0, 0x1);
        gbc.writeMem(0xae7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe937);
        EXPECT(gbc.pc(), 0xae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0064
        gbc.setState(0x56fd, 0xa7b5, 0x1930, 0xf09a, 0xf0d1, 0xd3c, 0x1, 0x0);
        gbc.writeMem(0x56fd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa7b5);
        EXPECT(gbc.pc(), 0x56ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0065
        gbc.setState(0x52cd, 0xe2f4, 0x65f0, 0x12de, 0x4906, 0x2e18, 0x1, 0x1);
        gbc.writeMem(0x52cd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe2f4);
        EXPECT(gbc.pc(), 0x52cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0066
        gbc.setState(0x99db, 0xa9c4, 0x1250, 0xb1a8, 0x86e6, 0x17f1, 0x1, 0x1);
        gbc.writeMem(0x99db, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa9c4);
        EXPECT(gbc.pc(), 0x99dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99db), 0xcb);
        EXPECT(gbc.readMem(0x99dc), 0x15);
        // CB 15 0067
        gbc.setState(0x7954, 0x2f99, 0xd160, 0x68ca, 0x290, 0xdf42, 0x1, 0x1);
        gbc.writeMem(0x7954, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x2f99);
        EXPECT(gbc.pc(), 0x7956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0068
        gbc.setState(0x537c, 0x5244, 0x3710, 0x392e, 0xac28, 0x2a35, 0x0, 0x1);
        gbc.writeMem(0x537c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5244);
        EXPECT(gbc.pc(), 0x537e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0069
        gbc.setState(0x9d63, 0x3ff3, 0x8d90, 0xa12f, 0xd280, 0x64fe, 0x0, 0x1);
        gbc.writeMem(0x9d63, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3ff3);
        EXPECT(gbc.pc(), 0x9d65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d63), 0xcb);
        EXPECT(gbc.readMem(0x9d64), 0x15);
        // CB 15 006B
        gbc.setState(0x78b3, 0x41f5, 0xd230, 0x13df, 0xe8e3, 0x6e76, 0x1, 0x1);
        gbc.writeMem(0x78b3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x41f5);
        EXPECT(gbc.pc(), 0x78b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 006C
        gbc.setState(0x5ea, 0xb999, 0x79f0, 0x1e9c, 0xcbcf, 0x6ac, 0x1, 0x1);
        gbc.writeMem(0x5ea, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb999);
        EXPECT(gbc.pc(), 0x5ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 006D
        gbc.setState(0xbfde, 0x17e1, 0xa9b0, 0x66bd, 0x7fc7, 0xc498, 0x1, 0x1);
        gbc.writeMem(0xbfde, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x17e1);
        EXPECT(gbc.pc(), 0xbfe0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfde), 0xcb);
        EXPECT(gbc.readMem(0xbfdf), 0x15);
        // CB 15 006E
        gbc.setState(0xbdee, 0xeaff, 0x94d0, 0x38b3, 0x5d4d, 0x28af, 0x0, 0x1);
        gbc.writeMem(0xbdee, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xeaff);
        EXPECT(gbc.pc(), 0xbdf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdee), 0xcb);
        EXPECT(gbc.readMem(0xbdef), 0x15);
        // CB 15 006F
        gbc.setState(0xafe5, 0xcfef, 0xfd60, 0x363e, 0x4e2f, 0x7ac6, 0x0, 0x0);
        gbc.writeMem(0xafe5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xcfef);
        EXPECT(gbc.pc(), 0xafe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafe5), 0xcb);
        EXPECT(gbc.readMem(0xafe6), 0x15);
        // CB 15 0070
        gbc.setState(0x5ae7, 0xffb6, 0xb960, 0x2d02, 0xebc9, 0x7ace, 0x1, 0x0);
        gbc.writeMem(0x5ae7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xffb6);
        EXPECT(gbc.pc(), 0x5ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0071
        gbc.setState(0xab42, 0x434c, 0xe770, 0x9b46, 0xdc48, 0x91e7, 0x1, 0x0);
        gbc.writeMem(0xab42, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x434c);
        EXPECT(gbc.pc(), 0xab44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab42), 0xcb);
        EXPECT(gbc.readMem(0xab43), 0x15);
        // CB 15 0072
        gbc.setState(0xee5f, 0xe473, 0x85c0, 0x5597, 0x482c, 0x7c94, 0x0, 0x0);
        gbc.writeMem(0xee5f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe473);
        EXPECT(gbc.pc(), 0xee61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5f), 0xcb);
        EXPECT(gbc.readMem(0xee60), 0x15);
        // CB 15 0073
        gbc.setState(0x8a00, 0x98ee, 0x2bb0, 0xf4ec, 0xccbe, 0x460f, 0x0, 0x0);
        gbc.writeMem(0x8a00, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x98ee);
        EXPECT(gbc.pc(), 0x8a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a00), 0xcb);
        EXPECT(gbc.readMem(0x8a01), 0x15);
        // CB 15 0074
        gbc.setState(0xd3cc, 0x1e40, 0xdc20, 0x11a0, 0x3313, 0x39a0, 0x1, 0x1);
        gbc.writeMem(0xd3cc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x1e40);
        EXPECT(gbc.pc(), 0xd3ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3cc), 0xcb);
        EXPECT(gbc.readMem(0xd3cd), 0x15);
        // CB 15 0075
        gbc.setState(0x7793, 0x68b1, 0x74b0, 0x6a96, 0x5058, 0x1c8, 0x1, 0x0);
        gbc.writeMem(0x7793, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x68b1);
        EXPECT(gbc.pc(), 0x7795);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0076
        gbc.setState(0x99ec, 0x580f, 0xa450, 0x5128, 0x23a5, 0xe605, 0x1, 0x1);
        gbc.writeMem(0x99ec, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x580f);
        EXPECT(gbc.pc(), 0x99ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ec), 0xcb);
        EXPECT(gbc.readMem(0x99ed), 0x15);
        // CB 15 0077
        gbc.setState(0xa9ff, 0x66b6, 0x4d40, 0xa945, 0xc6ff, 0x8454, 0x1, 0x1);
        gbc.writeMem(0xa9ff, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x66b6);
        EXPECT(gbc.pc(), 0xaa01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ff), 0xcb);
        EXPECT(gbc.readMem(0xaa00), 0x15);
        // CB 15 0079
        gbc.setState(0x3d62, 0x1516, 0x8d30, 0xd0ea, 0xd13, 0x7223, 0x1, 0x0);
        gbc.writeMem(0x3d62, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x1516);
        EXPECT(gbc.pc(), 0x3d64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 007C
        gbc.setState(0x1a80, 0x9238, 0x8490, 0x2dca, 0x4fe6, 0xeba, 0x1, 0x1);
        gbc.writeMem(0x1a80, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9238);
        EXPECT(gbc.pc(), 0x1a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 007D
        gbc.setState(0x540b, 0xa725, 0x2980, 0x4a73, 0x5632, 0xb0ba, 0x0, 0x1);
        gbc.writeMem(0x540b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xa725);
        EXPECT(gbc.pc(), 0x540d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 007E
        gbc.setState(0x2e28, 0xd364, 0xad20, 0x50e0, 0xbfcb, 0x9d6f, 0x1, 0x0);
        gbc.writeMem(0x2e28, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd364);
        EXPECT(gbc.pc(), 0x2e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 007F
        gbc.setState(0x201c, 0x5b6c, 0xde40, 0x7f47, 0x71d3, 0x6cb9, 0x1, 0x0);
        gbc.writeMem(0x201c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5b6c);
        EXPECT(gbc.pc(), 0x201e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0080
        gbc.setState(0xd6e4, 0xf830, 0xe430, 0x9d1c, 0x95de, 0x2fb4, 0x1, 0x1);
        gbc.writeMem(0xd6e4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xf830);
        EXPECT(gbc.pc(), 0xd6e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e4), 0xcb);
        EXPECT(gbc.readMem(0xd6e5), 0x15);
        // CB 15 0081
        gbc.setState(0x83fc, 0x2105, 0xdac0, 0x8392, 0x69a5, 0x8f52, 0x0, 0x1);
        gbc.writeMem(0x83fc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2105);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fc), 0xcb);
        EXPECT(gbc.readMem(0x83fd), 0x15);
        // CB 15 0082
        gbc.setState(0x590f, 0xf664, 0xe570, 0x3084, 0xa02, 0x1609, 0x0, 0x1);
        gbc.writeMem(0x590f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf664);
        EXPECT(gbc.pc(), 0x5911);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0083
        gbc.setState(0x5e52, 0x14dd, 0xf910, 0xfd91, 0xaac1, 0xd227, 0x1, 0x0);
        gbc.writeMem(0x5e52, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x14dd);
        EXPECT(gbc.pc(), 0x5e54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0084
        gbc.setState(0x8e93, 0x93b9, 0x1e60, 0x6911, 0xd991, 0x84e1, 0x0, 0x1);
        gbc.writeMem(0x8e93, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x93b9);
        EXPECT(gbc.pc(), 0x8e95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e93), 0xcb);
        EXPECT(gbc.readMem(0x8e94), 0x15);
        // CB 15 0085
        gbc.setState(0x20c0, 0x8484, 0xde0, 0xc58c, 0xd8b8, 0xc2b7, 0x1, 0x1);
        gbc.writeMem(0x20c0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0x20c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0086
        gbc.setState(0x59bb, 0xbbc1, 0xeca0, 0xbd0, 0xa48, 0x23ce, 0x0, 0x1);
        gbc.writeMem(0x59bb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbbc1);
        EXPECT(gbc.pc(), 0x59bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0087
        gbc.setState(0xa349, 0xa3fe, 0x2d50, 0x16a8, 0x5054, 0xfc37, 0x1, 0x0);
        gbc.writeMem(0xa349, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa3fe);
        EXPECT(gbc.pc(), 0xa34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa349), 0xcb);
        EXPECT(gbc.readMem(0xa34a), 0x15);
        // CB 15 0088
        gbc.setState(0xa34b, 0x30b0, 0x1ff0, 0x53a6, 0x3f51, 0xe914, 0x0, 0x0);
        gbc.writeMem(0xa34b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x30b0);
        EXPECT(gbc.pc(), 0xa34d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34b), 0xcb);
        EXPECT(gbc.readMem(0xa34c), 0x15);
        // CB 15 0089
        gbc.setState(0xebdd, 0x5cb3, 0x9ff0, 0x3f75, 0xaf2f, 0xc081, 0x0, 0x0);
        gbc.writeMem(0xebdd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5cb3);
        EXPECT(gbc.pc(), 0xebdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebdd), 0xcb);
        EXPECT(gbc.readMem(0xebde), 0x15);
        // CB 15 008A
        gbc.setState(0xa281, 0x2558, 0x12f0, 0x2969, 0x7e8d, 0xfa48, 0x1, 0x0);
        gbc.writeMem(0xa281, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2558);
        EXPECT(gbc.pc(), 0xa283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa281), 0xcb);
        EXPECT(gbc.readMem(0xa282), 0x15);
        // CB 15 008B
        gbc.setState(0xe28d, 0x9830, 0x1e80, 0x42d, 0x84c1, 0x1486, 0x0, 0x1);
        gbc.writeMem(0xe28d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x9830);
        EXPECT(gbc.pc(), 0xe28f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe28d), 0xcb);
        EXPECT(gbc.readMem(0xe28e), 0x15);
        // CB 15 008D
        gbc.setState(0x7079, 0xbf08, 0x54c0, 0x44c8, 0xf50e, 0x5bc7, 0x1, 0x0);
        gbc.writeMem(0x7079, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbf08);
        EXPECT(gbc.pc(), 0x707b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 008E
        gbc.setState(0xb8ae, 0x1c8d, 0x2a50, 0x55a1, 0x9b15, 0xf650, 0x1, 0x1);
        gbc.writeMem(0xb8ae, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0xb8b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ae), 0xcb);
        EXPECT(gbc.readMem(0xb8af), 0x15);
        // CB 15 008F
        gbc.setState(0x9c9a, 0x524c, 0x270, 0xd095, 0xc978, 0x92bd, 0x0, 0x0);
        gbc.writeMem(0x9c9a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x524c);
        EXPECT(gbc.pc(), 0x9c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9a), 0xcb);
        EXPECT(gbc.readMem(0x9c9b), 0x15);
        // CB 15 0090
        gbc.setState(0x66e6, 0x7422, 0xff50, 0x69d8, 0x67a6, 0xfe34, 0x0, 0x1);
        gbc.writeMem(0x66e6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7422);
        EXPECT(gbc.pc(), 0x66e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0091
        gbc.setState(0x72b9, 0xb227, 0xde40, 0x3c18, 0xb6c8, 0x6e18, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb227);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0092
        gbc.setState(0x30f2, 0xec04, 0xda20, 0x13e6, 0x7711, 0x6da4, 0x1, 0x0);
        gbc.writeMem(0x30f2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xec04);
        EXPECT(gbc.pc(), 0x30f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0093
        gbc.setState(0xb56c, 0x268c, 0x5bb0, 0x818f, 0xad67, 0x7a4d, 0x1, 0x0);
        gbc.writeMem(0xb56c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x268c);
        EXPECT(gbc.pc(), 0xb56e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb56c), 0xcb);
        EXPECT(gbc.readMem(0xb56d), 0x15);
        // CB 15 0094
        gbc.setState(0xdbec, 0xe327, 0xd880, 0x65c7, 0x73ad, 0xcb87, 0x1, 0x1);
        gbc.writeMem(0xdbec, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe327);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0x15);
        // CB 15 0095
        gbc.setState(0xbf68, 0x9020, 0x7960, 0x203f, 0xbfed, 0x5648, 0x0, 0x0);
        gbc.writeMem(0xbf68, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9020);
        EXPECT(gbc.pc(), 0xbf6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf68), 0xcb);
        EXPECT(gbc.readMem(0xbf69), 0x15);
        // CB 15 0096
        gbc.setState(0x186c, 0x8f3f, 0xc600, 0x760, 0x69df, 0xfc10, 0x1, 0x0);
        gbc.writeMem(0x186c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8f3f);
        EXPECT(gbc.pc(), 0x186e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0097
        gbc.setState(0xd51a, 0x70e2, 0x490, 0x2c62, 0x4bc4, 0x1ab9, 0x0, 0x1);
        gbc.writeMem(0xd51a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x70e2);
        EXPECT(gbc.pc(), 0xd51c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd51a), 0xcb);
        EXPECT(gbc.readMem(0xd51b), 0x15);
        // CB 15 0098
        gbc.setState(0x9139, 0xbdf0, 0xe010, 0xd93c, 0xe5f1, 0xb9c9, 0x1, 0x1);
        gbc.writeMem(0x9139, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x913b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9139), 0xcb);
        EXPECT(gbc.readMem(0x913a), 0x15);
        // CB 15 0099
        gbc.setState(0x3de7, 0x5f8, 0x1c30, 0x7492, 0xd7f9, 0xe47d, 0x1, 0x1);
        gbc.writeMem(0x3de7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5f8);
        EXPECT(gbc.pc(), 0x3de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 009A
        gbc.setState(0xe7ae, 0x118a, 0x8030, 0xdb57, 0x4741, 0xd4ae, 0x1, 0x0);
        gbc.writeMem(0xe7ae, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0xe7b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ae), 0xcb);
        EXPECT(gbc.readMem(0xe7af), 0x15);
        // CB 15 009C
        gbc.setState(0x3834, 0x5b24, 0x2a40, 0xb68a, 0x6020, 0x137f, 0x1, 0x1);
        gbc.writeMem(0x3834, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5b24);
        EXPECT(gbc.pc(), 0x3836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 009D
        gbc.setState(0x9f69, 0x63ad, 0xd040, 0x6947, 0xf6b, 0x36c3, 0x1, 0x1);
        gbc.writeMem(0x9f69, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x63ad);
        EXPECT(gbc.pc(), 0x9f6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f69), 0xcb);
        EXPECT(gbc.readMem(0x9f6a), 0x15);
        // CB 15 009E
        gbc.setState(0x34e8, 0xe6a, 0x7320, 0x7b45, 0xd0e5, 0x68a9, 0x1, 0x1);
        gbc.writeMem(0x34e8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe6a);
        EXPECT(gbc.pc(), 0x34ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 009F
        gbc.setState(0x2728, 0x811f, 0xb230, 0x9a8d, 0xfa77, 0xbdcb, 0x0, 0x0);
        gbc.writeMem(0x2728, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x811f);
        EXPECT(gbc.pc(), 0x272a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A0
        gbc.setState(0x791e, 0x3032, 0x5b00, 0xf6b0, 0x99b7, 0x11c8, 0x0, 0x0);
        gbc.writeMem(0x791e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3032);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A1
        gbc.setState(0x4d93, 0x1dc3, 0x8490, 0xf5b9, 0x6aa, 0x969d, 0x0, 0x0);
        gbc.writeMem(0x4d93, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x1dc3);
        EXPECT(gbc.pc(), 0x4d95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A2
        gbc.setState(0x6ced, 0x8ff3, 0xf940, 0x636, 0xd143, 0x46c7, 0x0, 0x0);
        gbc.writeMem(0x6ced, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8ff3);
        EXPECT(gbc.pc(), 0x6cef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A3
        gbc.setState(0xcfb9, 0x9a1d, 0x4540, 0x2905, 0x3f0e, 0xf1e, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x9a1d);
        EXPECT(gbc.pc(), 0xcfbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfb9), 0xcb);
        EXPECT(gbc.readMem(0xcfba), 0x15);
        // CB 15 00A5
        gbc.setState(0xb1c3, 0xe676, 0xf7b0, 0x7993, 0xf69a, 0x7ad9, 0x0, 0x0);
        gbc.writeMem(0xb1c3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe676);
        EXPECT(gbc.pc(), 0xb1c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1c3), 0xcb);
        EXPECT(gbc.readMem(0xb1c4), 0x15);
        // CB 15 00A6
        gbc.setState(0x76b9, 0xa1c1, 0x7a80, 0x1e2d, 0x9d84, 0xfefd, 0x1, 0x1);
        gbc.writeMem(0x76b9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa1c1);
        EXPECT(gbc.pc(), 0x76bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A7
        gbc.setState(0xe269, 0xf520, 0xa920, 0xaa6e, 0x65ef, 0x3782, 0x0, 0x1);
        gbc.writeMem(0xe269, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf520);
        EXPECT(gbc.pc(), 0xe26b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe269), 0xcb);
        EXPECT(gbc.readMem(0xe26a), 0x15);
        // CB 15 00A8
        gbc.setState(0x65fd, 0x7bdd, 0xfbe0, 0x3673, 0x45cc, 0xc689, 0x1, 0x0);
        gbc.writeMem(0x65fd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7bdd);
        EXPECT(gbc.pc(), 0x65ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00A9
        gbc.setState(0x6ac6, 0x5aae, 0x16e0, 0x7f19, 0x1d2f, 0xf9ca, 0x1, 0x0);
        gbc.writeMem(0x6ac6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x5aae);
        EXPECT(gbc.pc(), 0x6ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00AA
        gbc.setState(0xc9af, 0xa169, 0x4160, 0xf397, 0x43b7, 0x9a22, 0x0, 0x0);
        gbc.writeMem(0xc9af, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa169);
        EXPECT(gbc.pc(), 0xc9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9af), 0xcb);
        EXPECT(gbc.readMem(0xc9b0), 0x15);
        // CB 15 00AB
        gbc.setState(0x16fe, 0xee4a, 0x9960, 0xf201, 0x9a08, 0xf7c3, 0x1, 0x0);
        gbc.writeMem(0x16fe, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xee4a);
        EXPECT(gbc.pc(), 0x1700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00AC
        gbc.setState(0xd706, 0xad9a, 0x8e60, 0x9e89, 0x215e, 0xe00e, 0x0, 0x1);
        gbc.writeMem(0xd706, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xad9a);
        EXPECT(gbc.pc(), 0xd708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd706), 0xcb);
        EXPECT(gbc.readMem(0xd707), 0x15);
        // CB 15 00AD
        gbc.setState(0x2476, 0xf400, 0xe5e0, 0xdc9c, 0xe7a6, 0xd4d6, 0x1, 0x1);
        gbc.writeMem(0x2476, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf400);
        EXPECT(gbc.pc(), 0x2478);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00AE
        gbc.setState(0x3bba, 0x6d70, 0xf310, 0x8413, 0xd4fe, 0xaafb, 0x1, 0x0);
        gbc.writeMem(0x3bba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x6d70);
        EXPECT(gbc.pc(), 0x3bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00AF
        gbc.setState(0x168d, 0xc13d, 0xad30, 0x4412, 0x1876, 0xda3e, 0x0, 0x1);
        gbc.writeMem(0x168d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xc13d);
        EXPECT(gbc.pc(), 0x168f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00B0
        gbc.setState(0x5ca7, 0x8656, 0x71d0, 0xd09c, 0xa064, 0x5bbb, 0x1, 0x0);
        gbc.writeMem(0x5ca7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x8656);
        EXPECT(gbc.pc(), 0x5ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00B1
        gbc.setState(0xec98, 0x6041, 0x2a20, 0x926e, 0xb07e, 0x8931, 0x0, 0x1);
        gbc.writeMem(0xec98, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6041);
        EXPECT(gbc.pc(), 0xec9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec98), 0xcb);
        EXPECT(gbc.readMem(0xec99), 0x15);
        // CB 15 00B2
        gbc.setState(0x8316, 0x7fc0, 0xa60, 0x705b, 0xa40d, 0x84f9, 0x0, 0x1);
        gbc.writeMem(0x8316, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7fc0);
        EXPECT(gbc.pc(), 0x8318);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8316), 0xcb);
        EXPECT(gbc.readMem(0x8317), 0x15);
        // CB 15 00B3
        gbc.setState(0x2eab, 0x1b62, 0xfa20, 0xcbab, 0x4378, 0xfc7, 0x1, 0x0);
        gbc.writeMem(0x2eab, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x1b62);
        EXPECT(gbc.pc(), 0x2ead);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00B4
        gbc.setState(0xe70f, 0x3b84, 0x2790, 0x9756, 0xbf6b, 0xa277, 0x1, 0x0);
        gbc.writeMem(0xe70f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3b84);
        EXPECT(gbc.pc(), 0xe711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe70f), 0xcb);
        EXPECT(gbc.readMem(0xe710), 0x15);
        // CB 15 00B5
        gbc.setState(0x169c, 0xc2fc, 0xa5c0, 0x7d71, 0x2aa3, 0x5f25, 0x1, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc2fc);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00B6
        gbc.setState(0x20a3, 0x98d5, 0x9a0, 0xfc12, 0x4e2e, 0x643d, 0x1, 0x0);
        gbc.writeMem(0x20a3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x98d5);
        EXPECT(gbc.pc(), 0x20a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00B7
        gbc.setState(0x7430, 0x373, 0x3960, 0x92b5, 0xc89c, 0xaeaf, 0x0, 0x1);
        gbc.writeMem(0x7430, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x373);
        EXPECT(gbc.pc(), 0x7432);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00B8
        gbc.setState(0x8841, 0x2502, 0x1da0, 0x56d6, 0x5c92, 0x41dc, 0x1, 0x1);
        gbc.writeMem(0x8841, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2502);
        EXPECT(gbc.pc(), 0x8843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8841), 0xcb);
        EXPECT(gbc.readMem(0x8842), 0x15);
        // CB 15 00B9
        gbc.setState(0xbaed, 0x3c8b, 0x4530, 0x5308, 0xccde, 0x8ed6, 0x0, 0x1);
        gbc.writeMem(0xbaed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3c8b);
        EXPECT(gbc.pc(), 0xbaef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        EXPECT(gbc.readMem(0xbaee), 0x15);
        // CB 15 00BA
        gbc.setState(0xa60a, 0xc9c1, 0x8750, 0x5add, 0x7266, 0x563b, 0x0, 0x1);
        gbc.writeMem(0xa60a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9c1);
        EXPECT(gbc.pc(), 0xa60c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa60a), 0xcb);
        EXPECT(gbc.readMem(0xa60b), 0x15);
        // CB 15 00BB
        gbc.setState(0x903d, 0x3d85, 0x9740, 0x6182, 0x12a1, 0xb76c, 0x1, 0x0);
        gbc.writeMem(0x903d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3d85);
        EXPECT(gbc.pc(), 0x903f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903d), 0xcb);
        EXPECT(gbc.readMem(0x903e), 0x15);
        // CB 15 00BD
        gbc.setState(0xccaa, 0x3eb7, 0x88c0, 0x5380, 0x892, 0xbdfa, 0x1, 0x0);
        gbc.writeMem(0xccaa, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x3eb7);
        EXPECT(gbc.pc(), 0xccac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccaa), 0xcb);
        EXPECT(gbc.readMem(0xccab), 0x15);
        // CB 15 00BE
        gbc.setState(0xc0cd, 0x7340, 0xbf30, 0xc7c1, 0x6b08, 0x1713, 0x1, 0x1);
        gbc.writeMem(0xc0cd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x7340);
        EXPECT(gbc.pc(), 0xc0cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0cd), 0xcb);
        EXPECT(gbc.readMem(0xc0ce), 0x15);
        // CB 15 00BF
        gbc.setState(0xa9a6, 0xc973, 0xe880, 0xa4c9, 0x8739, 0xc145, 0x1, 0x0);
        gbc.writeMem(0xa9a6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xc973);
        EXPECT(gbc.pc(), 0xa9a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9a6), 0xcb);
        EXPECT(gbc.readMem(0xa9a7), 0x15);
        // CB 15 00C0
        gbc.setState(0x20c8, 0x1cd8, 0x3500, 0xe2b1, 0x2e81, 0xa371, 0x1, 0x0);
        gbc.writeMem(0x20c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1cd8);
        EXPECT(gbc.pc(), 0x20ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00C1
        gbc.setState(0x83df, 0x9543, 0x73c0, 0x901, 0x3555, 0xa990, 0x0, 0x0);
        gbc.writeMem(0x83df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9543);
        EXPECT(gbc.pc(), 0x83e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83df), 0xcb);
        EXPECT(gbc.readMem(0x83e0), 0x15);
        // CB 15 00C2
        gbc.setState(0xdc0c, 0xd510, 0xee00, 0xb451, 0x9609, 0xcbfd, 0x1, 0x0);
        gbc.writeMem(0xdc0c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0xdc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0c), 0xcb);
        EXPECT(gbc.readMem(0xdc0d), 0x15);
        // CB 15 00C3
        gbc.setState(0x893b, 0x797a, 0xe0a0, 0xab5d, 0xd115, 0x8268, 0x0, 0x1);
        gbc.writeMem(0x893b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x797a);
        EXPECT(gbc.pc(), 0x893d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x893b), 0xcb);
        EXPECT(gbc.readMem(0x893c), 0x15);
        // CB 15 00C4
        gbc.setState(0x5a69, 0xccf0, 0xcbb0, 0xfbd5, 0x36bb, 0x1e43, 0x0, 0x0);
        gbc.writeMem(0x5a69, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xccf0);
        EXPECT(gbc.pc(), 0x5a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00C5
        gbc.setState(0x444e, 0xfb23, 0x2900, 0xf57b, 0xa7b9, 0xb7d, 0x1, 0x1);
        gbc.writeMem(0x444e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfb23);
        EXPECT(gbc.pc(), 0x4450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00C7
        gbc.setState(0xc15d, 0x3493, 0x38d0, 0x4fd2, 0xd9e8, 0x6d3e, 0x0, 0x1);
        gbc.writeMem(0xc15d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3493);
        EXPECT(gbc.pc(), 0xc15f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc15d), 0xcb);
        EXPECT(gbc.readMem(0xc15e), 0x15);
        // CB 15 00C8
        gbc.setState(0x447, 0x8804, 0xa960, 0xcb95, 0x68bc, 0xf8c, 0x1, 0x0);
        gbc.writeMem(0x447, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8804);
        EXPECT(gbc.pc(), 0x449);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00C9
        gbc.setState(0xe7f, 0x42ad, 0x3eb0, 0x313c, 0x1ca, 0x1685, 0x0, 0x0);
        gbc.writeMem(0xe7f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x42ad);
        EXPECT(gbc.pc(), 0xe81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00CA
        gbc.setState(0xc7ee, 0x4d70, 0x950, 0x71c8, 0xcc74, 0xd811, 0x0, 0x1);
        gbc.writeMem(0xc7ee, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4d70);
        EXPECT(gbc.pc(), 0xc7f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ee), 0xcb);
        EXPECT(gbc.readMem(0xc7ef), 0x15);
        // CB 15 00CB
        gbc.setState(0x325, 0x34ea, 0x9de0, 0xfd57, 0x84d3, 0xb30f, 0x1, 0x1);
        gbc.writeMem(0x325, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x34ea);
        EXPECT(gbc.pc(), 0x327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00CC
        gbc.setState(0x5f81, 0x183a, 0x3a40, 0x86f0, 0xf5ed, 0x4050, 0x0, 0x0);
        gbc.writeMem(0x5f81, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x183a);
        EXPECT(gbc.pc(), 0x5f83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00CD
        gbc.setState(0xdbc3, 0x14cb, 0xec40, 0x5d46, 0xbcb1, 0xef70, 0x0, 0x0);
        gbc.writeMem(0xdbc3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x14cb);
        EXPECT(gbc.pc(), 0xdbc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbc3), 0xcb);
        EXPECT(gbc.readMem(0xdbc4), 0x15);
        // CB 15 00CE
        gbc.setState(0x77bb, 0xccbd, 0x70f0, 0x87c, 0xd3be, 0x21d2, 0x1, 0x1);
        gbc.writeMem(0x77bb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x77bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00CF
        gbc.setState(0x63ba, 0x21c7, 0xa0f0, 0xa370, 0x602a, 0xc5d9, 0x1, 0x0);
        gbc.writeMem(0x63ba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x21c7);
        EXPECT(gbc.pc(), 0x63bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D0
        gbc.setState(0x2318, 0x2147, 0xc130, 0x8df5, 0xf96c, 0xa6e3, 0x1, 0x1);
        gbc.writeMem(0x2318, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x2147);
        EXPECT(gbc.pc(), 0x231a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D1
        gbc.setState(0xa46, 0xfc74, 0xb970, 0x91ca, 0x6bf0, 0xdc68, 0x0, 0x1);
        gbc.writeMem(0xa46, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfc74);
        EXPECT(gbc.pc(), 0xa48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00D2
        gbc.setState(0x8f2f, 0x4c39, 0xf930, 0x24c4, 0xbff7, 0x8a23, 0x1, 0x1);
        gbc.writeMem(0x8f2f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4c39);
        EXPECT(gbc.pc(), 0x8f31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2f), 0xcb);
        EXPECT(gbc.readMem(0x8f30), 0x15);
        // CB 15 00D3
        gbc.setState(0x3516, 0xf3ba, 0x2fb0, 0x19fd, 0x4031, 0x8ebe, 0x0, 0x1);
        gbc.writeMem(0x3516, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf3ba);
        EXPECT(gbc.pc(), 0x3518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D4
        gbc.setState(0xd70d, 0x73fd, 0xe660, 0x6516, 0xa17d, 0x8775, 0x1, 0x0);
        gbc.writeMem(0xd70d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x73fd);
        EXPECT(gbc.pc(), 0xd70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd70d), 0xcb);
        EXPECT(gbc.readMem(0xd70e), 0x15);
        // CB 15 00D5
        gbc.setState(0x12ce, 0x58ac, 0x96c0, 0xcfe2, 0xcd61, 0x71fe, 0x0, 0x1);
        gbc.writeMem(0x12ce, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x58ac);
        EXPECT(gbc.pc(), 0x12d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D6
        gbc.setState(0x2444, 0xfda9, 0x3ee0, 0x416b, 0x79fc, 0xc88, 0x1, 0x0);
        gbc.writeMem(0x2444, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xfda9);
        EXPECT(gbc.pc(), 0x2446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D7
        gbc.setState(0x3200, 0xb365, 0xfd60, 0x343f, 0x80c9, 0x8ac2, 0x1, 0x0);
        gbc.writeMem(0x3200, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xb365);
        EXPECT(gbc.pc(), 0x3202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00D8
        gbc.setState(0xa2ce, 0x1597, 0x8b0, 0x1929, 0x1ac, 0x3286, 0x1, 0x1);
        gbc.writeMem(0xa2ce, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1597);
        EXPECT(gbc.pc(), 0xa2d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2ce), 0xcb);
        EXPECT(gbc.readMem(0xa2cf), 0x15);
        // CB 15 00D9
        gbc.setState(0x38ed, 0xeeda, 0x6a90, 0xadee, 0x213a, 0x51a5, 0x1, 0x0);
        gbc.writeMem(0x38ed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xeeda);
        EXPECT(gbc.pc(), 0x38ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00DA
        gbc.setState(0x1a12, 0x2086, 0xfd40, 0x5abb, 0xba50, 0xbc50, 0x1, 0x1);
        gbc.writeMem(0x1a12, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2086);
        EXPECT(gbc.pc(), 0x1a14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00DB
        gbc.setState(0x274c, 0x40e8, 0xd490, 0x75b, 0xa530, 0x189f, 0x1, 0x1);
        gbc.writeMem(0x274c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x40e8);
        EXPECT(gbc.pc(), 0x274e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00DC
        gbc.setState(0x5a77, 0xa995, 0x12d0, 0xf243, 0x7677, 0x54c2, 0x1, 0x1);
        gbc.writeMem(0x5a77, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xa995);
        EXPECT(gbc.pc(), 0x5a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00DD
        gbc.setState(0x9333, 0x9f9, 0xf270, 0x1835, 0x5ba, 0x9cc0, 0x0, 0x0);
        gbc.writeMem(0x9333, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x9f9);
        EXPECT(gbc.pc(), 0x9335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9333), 0xcb);
        EXPECT(gbc.readMem(0x9334), 0x15);
        // CB 15 00DE
        gbc.setState(0xce07, 0xdc3f, 0xe570, 0x42df, 0xef47, 0xc28e, 0x1, 0x0);
        gbc.writeMem(0xce07, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xdc3f);
        EXPECT(gbc.pc(), 0xce09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce07), 0xcb);
        EXPECT(gbc.readMem(0xce08), 0x15);
        // CB 15 00DF
        gbc.setState(0x423, 0x75cb, 0x74f0, 0x316b, 0xc890, 0xed78, 0x0, 0x1);
        gbc.writeMem(0x423, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x75cb);
        EXPECT(gbc.pc(), 0x425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00E0
        gbc.setState(0xdcf8, 0x8044, 0x6d50, 0x284a, 0xb4e, 0xf135, 0x0, 0x0);
        gbc.writeMem(0xdcf8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x8044);
        EXPECT(gbc.pc(), 0xdcfa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf8), 0xcb);
        EXPECT(gbc.readMem(0xdcf9), 0x15);
        // CB 15 00E1
        gbc.setState(0x55f, 0xb71d, 0xa240, 0x370d, 0x80b2, 0x19ee, 0x0, 0x0);
        gbc.writeMem(0x55f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb71d);
        EXPECT(gbc.pc(), 0x561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00E2
        gbc.setState(0x7ee0, 0x8aa1, 0xd010, 0xeff2, 0x4991, 0xbf4, 0x0, 0x1);
        gbc.writeMem(0x7ee0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x8aa1);
        EXPECT(gbc.pc(), 0x7ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00E3
        gbc.setState(0x127, 0x5a6b, 0x5f10, 0x67d3, 0xa688, 0xb74f, 0x0, 0x1);
        gbc.writeMem(0x127, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5a6b);
        EXPECT(gbc.pc(), 0x129);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00E4
        gbc.setState(0x3ce5, 0xa101, 0x9470, 0xffea, 0x3c53, 0x5425, 0x1, 0x1);
        gbc.writeMem(0x3ce5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa101);
        EXPECT(gbc.pc(), 0x3ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00E6
        gbc.setState(0x6a2a, 0xb9a2, 0x6e50, 0x10c3, 0x8836, 0x15e1, 0x1, 0x1);
        gbc.writeMem(0x6a2a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xb9a2);
        EXPECT(gbc.pc(), 0x6a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00E7
        gbc.setState(0x169f, 0xaa54, 0x31d0, 0xc5c0, 0x66de, 0x7671, 0x0, 0x0);
        gbc.writeMem(0x169f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xaa54);
        EXPECT(gbc.pc(), 0x16a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00E8
        gbc.setState(0xe71b, 0x86c2, 0x68c0, 0x58b9, 0x4577, 0x79e3, 0x1, 0x0);
        gbc.writeMem(0xe71b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x86c2);
        EXPECT(gbc.pc(), 0xe71d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe71b), 0xcb);
        EXPECT(gbc.readMem(0xe71c), 0x15);
        // CB 15 00E9
        gbc.setState(0x42fd, 0x55f4, 0x10f0, 0x1701, 0x1578, 0x1ea2, 0x1, 0x1);
        gbc.writeMem(0x42fd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x55f4);
        EXPECT(gbc.pc(), 0x42ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00EA
        gbc.setState(0x4c58, 0xe274, 0x4670, 0x24bb, 0x9b86, 0x40a9, 0x0, 0x1);
        gbc.writeMem(0x4c58, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe274);
        EXPECT(gbc.pc(), 0x4c5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00EB
        gbc.setState(0x5052, 0x7392, 0x2150, 0xf0ed, 0xa40f, 0x63e4, 0x1, 0x1);
        gbc.writeMem(0x5052, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7392);
        EXPECT(gbc.pc(), 0x5054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00EC
        gbc.setState(0xb988, 0x3344, 0xcb80, 0x7c35, 0x42d3, 0xaa30, 0x1, 0x0);
        gbc.writeMem(0xb988, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3344);
        EXPECT(gbc.pc(), 0xb98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb988), 0xcb);
        EXPECT(gbc.readMem(0xb989), 0x15);
        // CB 15 00EE
        gbc.setState(0xcbb5, 0x4d9c, 0xa130, 0x626a, 0x6018, 0x59aa, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4d9c);
        EXPECT(gbc.pc(), 0xcbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb5), 0xcb);
        EXPECT(gbc.readMem(0xcbb6), 0x15);
        // CB 15 00EF
        gbc.setState(0x1c49, 0xc321, 0x9820, 0x1a83, 0x83ef, 0xcb61, 0x0, 0x1);
        gbc.writeMem(0x1c49, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc321);
        EXPECT(gbc.pc(), 0x1c4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00F0
        gbc.setState(0x22ca, 0x2a23, 0xaf30, 0x44f9, 0x8476, 0xb1ce, 0x1, 0x0);
        gbc.writeMem(0x22ca, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2a23);
        EXPECT(gbc.pc(), 0x22cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00F2
        gbc.setState(0x6e65, 0x9c0d, 0xd290, 0x8870, 0xe87e, 0xcdbb, 0x0, 0x0);
        gbc.writeMem(0x6e65, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9c0d);
        EXPECT(gbc.pc(), 0x6e67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00F3
        gbc.setState(0x92eb, 0x381a, 0x2920, 0x150a, 0x606f, 0xd457, 0x0, 0x1);
        gbc.writeMem(0x92eb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x381a);
        EXPECT(gbc.pc(), 0x92ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92eb), 0xcb);
        EXPECT(gbc.readMem(0x92ec), 0x15);
        // CB 15 00F4
        gbc.setState(0x57b4, 0x1d25, 0x7140, 0x28f9, 0x8f3a, 0x7b0c, 0x0, 0x1);
        gbc.writeMem(0x57b4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1d25);
        EXPECT(gbc.pc(), 0x57b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00F5
        gbc.setState(0x5f55, 0x412e, 0xd350, 0xe414, 0x74dc, 0x24d0, 0x1, 0x1);
        gbc.writeMem(0x5f55, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x412e);
        EXPECT(gbc.pc(), 0x5f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00F6
        gbc.setState(0x27e3, 0x5008, 0xfaf0, 0xe1cc, 0x4af2, 0x970e, 0x0, 0x1);
        gbc.writeMem(0x27e3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x5008);
        EXPECT(gbc.pc(), 0x27e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 00F7
        gbc.setState(0x1d65, 0x2701, 0x5560, 0xc194, 0xcded, 0x1bcf, 0x0, 0x1);
        gbc.writeMem(0x1d65, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x2701);
        EXPECT(gbc.pc(), 0x1d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00F8
        gbc.setState(0x80fe, 0x8df4, 0xc770, 0x90b9, 0x348e, 0xa119, 0x1, 0x1);
        gbc.writeMem(0x80fe, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x8df4);
        EXPECT(gbc.pc(), 0x8100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80fe), 0xcb);
        EXPECT(gbc.readMem(0x80ff), 0x15);
        // CB 15 00F9
        gbc.setState(0x81f0, 0xeb04, 0xaa70, 0xda4f, 0xf6cc, 0x1609, 0x1, 0x0);
        gbc.writeMem(0x81f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xeb04);
        EXPECT(gbc.pc(), 0x81f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f0), 0xcb);
        EXPECT(gbc.readMem(0x81f1), 0x15);
        // CB 15 00FA
        gbc.setState(0xee73, 0x2d24, 0x1be0, 0x2aca, 0xf6d9, 0x15d, 0x0, 0x1);
        gbc.writeMem(0xee73, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x2d24);
        EXPECT(gbc.pc(), 0xee75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee73), 0xcb);
        EXPECT(gbc.readMem(0xee74), 0x15);
        // CB 15 00FB
        gbc.setState(0xe760, 0xeda9, 0xe420, 0xea09, 0x4412, 0x6705, 0x0, 0x1);
        gbc.writeMem(0xe760, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xeda9);
        EXPECT(gbc.pc(), 0xe762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe760), 0xcb);
        EXPECT(gbc.readMem(0xe761), 0x15);
        // CB 15 00FC
        gbc.setState(0xd1e1, 0x5d32, 0xae30, 0xaf6f, 0x5f99, 0x486e, 0x1, 0x0);
        gbc.writeMem(0xd1e1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5d32);
        EXPECT(gbc.pc(), 0xd1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e1), 0xcb);
        EXPECT(gbc.readMem(0xd1e2), 0x15);
        // CB 15 00FD
        gbc.setState(0xe04a, 0x71c0, 0x6c30, 0x28bf, 0x4bd6, 0x348f, 0x0, 0x1);
        gbc.writeMem(0xe04a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x71c0);
        EXPECT(gbc.pc(), 0xe04c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04a), 0xcb);
        EXPECT(gbc.readMem(0xe04b), 0x15);
        // CB 15 00FE
        gbc.setState(0x2f1b, 0xb5ea, 0x9e00, 0xc9fb, 0x8428, 0x32db, 0x1, 0x1);
        gbc.writeMem(0x2f1b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb5ea);
        EXPECT(gbc.pc(), 0x2f1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 00FF
        gbc.setState(0xa66d, 0x22e1, 0xe200, 0xe0da, 0xf82e, 0xdf92, 0x1, 0x0);
        gbc.writeMem(0xa66d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x22e1);
        EXPECT(gbc.pc(), 0xa66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa66d), 0xcb);
        EXPECT(gbc.readMem(0xa66e), 0x15);
        // CB 15 0100
        gbc.setState(0x242c, 0x5f52, 0x5780, 0x1229, 0xa2b4, 0xf80f, 0x1, 0x1);
        gbc.writeMem(0x242c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5f52);
        EXPECT(gbc.pc(), 0x242e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0101
        gbc.setState(0x3ca8, 0xb1f3, 0x1a00, 0x7d9e, 0x1878, 0x98fc, 0x0, 0x0);
        gbc.writeMem(0x3ca8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb1f3);
        EXPECT(gbc.pc(), 0x3caa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0102
        gbc.setState(0x598c, 0x44a4, 0x8f0, 0xdca5, 0xc393, 0x8b17, 0x0, 0x1);
        gbc.writeMem(0x598c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x44a4);
        EXPECT(gbc.pc(), 0x598e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0103
        gbc.setState(0x938f, 0xcba5, 0xb8a0, 0x6b89, 0x8da4, 0x68bb, 0x1, 0x0);
        gbc.writeMem(0x938f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcba5);
        EXPECT(gbc.pc(), 0x9391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938f), 0xcb);
        EXPECT(gbc.readMem(0x9390), 0x15);
        // CB 15 0104
        gbc.setState(0xd65b, 0xb728, 0xcc50, 0x8e3b, 0x5227, 0xf10d, 0x1, 0x1);
        gbc.writeMem(0xd65b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xb728);
        EXPECT(gbc.pc(), 0xd65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd65b), 0xcb);
        EXPECT(gbc.readMem(0xd65c), 0x15);
        // CB 15 0105
        gbc.setState(0x2b4b, 0x4288, 0x9170, 0xe5c6, 0xdd5f, 0xd2e0, 0x1, 0x1);
        gbc.writeMem(0x2b4b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4288);
        EXPECT(gbc.pc(), 0x2b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0106
        gbc.setState(0x689d, 0xbf2, 0x6f00, 0xf791, 0x22bc, 0x2619, 0x1, 0x0);
        gbc.writeMem(0x689d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbf2);
        EXPECT(gbc.pc(), 0x689f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0107
        gbc.setState(0x1f53, 0xbb4d, 0xb400, 0x4754, 0xc7bf, 0x2e3c, 0x0, 0x1);
        gbc.writeMem(0x1f53, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbb4d);
        EXPECT(gbc.pc(), 0x1f55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0108
        gbc.setState(0x6b85, 0x27ba, 0xce70, 0xac97, 0x9338, 0x6424, 0x1, 0x1);
        gbc.writeMem(0x6b85, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x27ba);
        EXPECT(gbc.pc(), 0x6b87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0109
        gbc.setState(0x726b, 0x1f03, 0xbfc0, 0x1698, 0x65e1, 0xabad, 0x0, 0x0);
        gbc.writeMem(0x726b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x1f03);
        EXPECT(gbc.pc(), 0x726d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 010A
        gbc.setState(0x68ba, 0xf2b, 0xce90, 0x4552, 0xd62a, 0xf27f, 0x1, 0x0);
        gbc.writeMem(0x68ba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf2b);
        EXPECT(gbc.pc(), 0x68bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 010B
        gbc.setState(0x4d52, 0x2d67, 0x69c0, 0xaf9b, 0x6868, 0xed67, 0x1, 0x1);
        gbc.writeMem(0x4d52, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2d67);
        EXPECT(gbc.pc(), 0x4d54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 010C
        gbc.setState(0xea4e, 0x2a31, 0x6630, 0x50bf, 0x32c9, 0x61a0, 0x1, 0x0);
        gbc.writeMem(0xea4e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2a31);
        EXPECT(gbc.pc(), 0xea50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea4e), 0xcb);
        EXPECT(gbc.readMem(0xea4f), 0x15);
        // CB 15 010D
        gbc.setState(0xe9a5, 0xd4fb, 0x24b0, 0xce72, 0xcdfb, 0x112d, 0x0, 0x0);
        gbc.writeMem(0xe9a5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0xe9a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9a5), 0xcb);
        EXPECT(gbc.readMem(0xe9a6), 0x15);
        // CB 15 010E
        gbc.setState(0xd1b5, 0x2fa9, 0xb6e0, 0xb88a, 0xb1d8, 0x5965, 0x1, 0x1);
        gbc.writeMem(0xd1b5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2fa9);
        EXPECT(gbc.pc(), 0xd1b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1b5), 0xcb);
        EXPECT(gbc.readMem(0xd1b6), 0x15);
        // CB 15 010F
        gbc.setState(0x66e8, 0x4858, 0x99b0, 0x5f30, 0xcf65, 0x1201, 0x1, 0x0);
        gbc.writeMem(0x66e8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x4858);
        EXPECT(gbc.pc(), 0x66ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0110
        gbc.setState(0x9286, 0x904c, 0x3e10, 0x8808, 0xc294, 0x20e6, 0x0, 0x1);
        gbc.writeMem(0x9286, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x904c);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9286), 0xcb);
        EXPECT(gbc.readMem(0x9287), 0x15);
        // CB 15 0111
        gbc.setState(0x4d7f, 0xa6a7, 0x3990, 0xcc07, 0x683c, 0x14dd, 0x0, 0x1);
        gbc.writeMem(0x4d7f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa6a7);
        EXPECT(gbc.pc(), 0x4d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0112
        gbc.setState(0x96b0, 0x99c9, 0xf630, 0xc823, 0xaa1, 0x8e8b, 0x1, 0x0);
        gbc.writeMem(0x96b0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x99c9);
        EXPECT(gbc.pc(), 0x96b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b0), 0xcb);
        EXPECT(gbc.readMem(0x96b1), 0x15);
        // CB 15 0113
        gbc.setState(0x47b3, 0xee94, 0xb4e0, 0xc549, 0xbfa4, 0x446e, 0x1, 0x0);
        gbc.writeMem(0x47b3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xee94);
        EXPECT(gbc.pc(), 0x47b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0114
        gbc.setState(0x8989, 0xfab5, 0x4cd0, 0x8101, 0xc0f4, 0xe9ed, 0x0, 0x1);
        gbc.writeMem(0x8989, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xfab5);
        EXPECT(gbc.pc(), 0x898b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8989), 0xcb);
        EXPECT(gbc.readMem(0x898a), 0x15);
        // CB 15 0115
        gbc.setState(0xbd7c, 0xcf0e, 0x2db0, 0x6faa, 0xff34, 0x3357, 0x0, 0x0);
        gbc.writeMem(0xbd7c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xcf0e);
        EXPECT(gbc.pc(), 0xbd7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7c), 0xcb);
        EXPECT(gbc.readMem(0xbd7d), 0x15);
        // CB 15 0116
        gbc.setState(0xec7b, 0x8eb4, 0x7250, 0xcef3, 0x2559, 0x1311, 0x1, 0x1);
        gbc.writeMem(0xec7b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8eb4);
        EXPECT(gbc.pc(), 0xec7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec7b), 0xcb);
        EXPECT(gbc.readMem(0xec7c), 0x15);
        // CB 15 0117
        gbc.setState(0x2872, 0xf8e1, 0xc100, 0xcc3a, 0x5b3b, 0x86b4, 0x1, 0x0);
        gbc.writeMem(0x2872, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf8e1);
        EXPECT(gbc.pc(), 0x2874);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0118
        gbc.setState(0x8b23, 0x112a, 0x9a60, 0x1bf2, 0x9cf4, 0xc29d, 0x1, 0x1);
        gbc.writeMem(0x8b23, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x112a);
        EXPECT(gbc.pc(), 0x8b25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b23), 0xcb);
        EXPECT(gbc.readMem(0x8b24), 0x15);
        // CB 15 0119
        gbc.setState(0x3bf9, 0xcb82, 0xc7b0, 0xa3a5, 0xebcc, 0x5f86, 0x1, 0x1);
        gbc.writeMem(0x3bf9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcb82);
        EXPECT(gbc.pc(), 0x3bfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 011A
        gbc.setState(0x7262, 0xe5a9, 0xe160, 0x24c1, 0x9484, 0x1032, 0x0, 0x0);
        gbc.writeMem(0x7262, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe5a9);
        EXPECT(gbc.pc(), 0x7264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 011B
        gbc.setState(0xee4b, 0x65d3, 0x6370, 0xb4db, 0xe85b, 0xbed2, 0x1, 0x0);
        gbc.writeMem(0xee4b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x65d3);
        EXPECT(gbc.pc(), 0xee4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee4b), 0xcb);
        EXPECT(gbc.readMem(0xee4c), 0x15);
        // CB 15 011C
        gbc.setState(0xca51, 0x29e, 0x7c60, 0x185b, 0xe530, 0x3c89, 0x0, 0x0);
        gbc.writeMem(0xca51, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x29e);
        EXPECT(gbc.pc(), 0xca53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca51), 0xcb);
        EXPECT(gbc.readMem(0xca52), 0x15);
        // CB 15 011D
        gbc.setState(0xb99e, 0x45a7, 0xfad0, 0x1542, 0x1cc8, 0x994b, 0x0, 0x1);
        gbc.writeMem(0xb99e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x45a7);
        EXPECT(gbc.pc(), 0xb9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb99e), 0xcb);
        EXPECT(gbc.readMem(0xb99f), 0x15);
        // CB 15 011E
        gbc.setState(0xa6aa, 0xf6de, 0x85c0, 0xa7b8, 0xb07c, 0x2c44, 0x1, 0x1);
        gbc.writeMem(0xa6aa, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf6de);
        EXPECT(gbc.pc(), 0xa6ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6aa), 0xcb);
        EXPECT(gbc.readMem(0xa6ab), 0x15);
        // CB 15 011F
        gbc.setState(0xded8, 0xf07, 0x5310, 0xbd64, 0x6cdf, 0xc578, 0x1, 0x1);
        gbc.writeMem(0xded8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf07);
        EXPECT(gbc.pc(), 0xdeda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded8), 0xcb);
        EXPECT(gbc.readMem(0xded9), 0x15);
        // CB 15 0120
        gbc.setState(0x9e3, 0xd369, 0x85f0, 0x3c93, 0xe686, 0x3e13, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd369);
        EXPECT(gbc.pc(), 0x9e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0121
        gbc.setState(0x3307, 0xe296, 0x9bd0, 0xd98e, 0xb611, 0x1412, 0x1, 0x1);
        gbc.writeMem(0x3307, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe296);
        EXPECT(gbc.pc(), 0x3309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0122
        gbc.setState(0xe33d, 0x2262, 0x3b40, 0x8453, 0x356c, 0x81b0, 0x1, 0x1);
        gbc.writeMem(0xe33d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2262);
        EXPECT(gbc.pc(), 0xe33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33d), 0xcb);
        EXPECT(gbc.readMem(0xe33e), 0x15);
        // CB 15 0123
        gbc.setState(0x79cf, 0x20a7, 0x3a40, 0x70f, 0xf95, 0x58ac, 0x0, 0x0);
        gbc.writeMem(0x79cf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x20a7);
        EXPECT(gbc.pc(), 0x79d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0124
        gbc.setState(0x94d9, 0xfde0, 0xd830, 0x932, 0x40b3, 0xe2ce, 0x0, 0x1);
        gbc.writeMem(0x94d9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xfde0);
        EXPECT(gbc.pc(), 0x94db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d9), 0xcb);
        EXPECT(gbc.readMem(0x94da), 0x15);
        // CB 15 0125
        gbc.setState(0x9a70, 0x67c8, 0x3f60, 0x4d20, 0xb7ff, 0xe496, 0x1, 0x1);
        gbc.writeMem(0x9a70, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x67c8);
        EXPECT(gbc.pc(), 0x9a72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a70), 0xcb);
        EXPECT(gbc.readMem(0x9a71), 0x15);
        // CB 15 0126
        gbc.setState(0x83d7, 0x28ab, 0xdd10, 0xb26b, 0x5cdf, 0x2c77, 0x0, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x28ab);
        EXPECT(gbc.pc(), 0x83d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83d7), 0xcb);
        EXPECT(gbc.readMem(0x83d8), 0x15);
        // CB 15 0127
        gbc.setState(0x1d95, 0xa5b9, 0x2980, 0x1afa, 0x3120, 0x3719, 0x0, 0x0);
        gbc.writeMem(0x1d95, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa5b9);
        EXPECT(gbc.pc(), 0x1d97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0128
        gbc.setState(0x29f2, 0xa866, 0x7550, 0xb868, 0x90d0, 0x4df1, 0x1, 0x0);
        gbc.writeMem(0x29f2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa866);
        EXPECT(gbc.pc(), 0x29f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0129
        gbc.setState(0xb3ad, 0x5cfb, 0xa2a0, 0xd3b1, 0xac6c, 0x393f, 0x1, 0x0);
        gbc.writeMem(0xb3ad, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x5cfb);
        EXPECT(gbc.pc(), 0xb3af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3ad), 0xcb);
        EXPECT(gbc.readMem(0xb3ae), 0x15);
        // CB 15 012A
        gbc.setState(0x7760, 0x2fe7, 0x35f0, 0x1ae1, 0xae4a, 0x76b0, 0x1, 0x0);
        gbc.writeMem(0x7760, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x2fe7);
        EXPECT(gbc.pc(), 0x7762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 012B
        gbc.setState(0x31e3, 0xb3ab, 0xa370, 0xa85c, 0x6f6d, 0x2310, 0x0, 0x0);
        gbc.writeMem(0x31e3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb3ab);
        EXPECT(gbc.pc(), 0x31e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 012C
        gbc.setState(0xa424, 0x1b00, 0xa280, 0xf560, 0xc449, 0x9d51, 0x1, 0x1);
        gbc.writeMem(0xa424, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1b00);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa424), 0xcb);
        EXPECT(gbc.readMem(0xa425), 0x15);
        // CB 15 012D
        gbc.setState(0x345e, 0x8fb1, 0xc950, 0x1b66, 0xe691, 0x914c, 0x0, 0x0);
        gbc.writeMem(0x345e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8fb1);
        EXPECT(gbc.pc(), 0x3460);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 012E
        gbc.setState(0x1217, 0xa712, 0xfc30, 0x42cf, 0x85dd, 0x4700, 0x1, 0x1);
        gbc.writeMem(0x1217, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa712);
        EXPECT(gbc.pc(), 0x1219);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 012F
        gbc.setState(0xd784, 0xe65f, 0x2ec0, 0x279c, 0x9417, 0x28e5, 0x0, 0x0);
        gbc.writeMem(0xd784, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe65f);
        EXPECT(gbc.pc(), 0xd786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd784), 0xcb);
        EXPECT(gbc.readMem(0xd785), 0x15);
        // CB 15 0130
        gbc.setState(0xa680, 0x31d3, 0xaa70, 0x9798, 0x3ebb, 0xaa3e, 0x1, 0x0);
        gbc.writeMem(0xa680, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x31d3);
        EXPECT(gbc.pc(), 0xa682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa680), 0xcb);
        EXPECT(gbc.readMem(0xa681), 0x15);
        // CB 15 0131
        gbc.setState(0x2518, 0x8f8f, 0x73a0, 0x6076, 0x8ead, 0xf0d2, 0x0, 0x1);
        gbc.writeMem(0x2518, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8f8f);
        EXPECT(gbc.pc(), 0x251a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0132
        gbc.setState(0x9f84, 0xcf12, 0x2b60, 0x2f2a, 0x92e, 0x1efc, 0x0, 0x0);
        gbc.writeMem(0x9f84, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0x9f86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f84), 0xcb);
        EXPECT(gbc.readMem(0x9f85), 0x15);
        // CB 15 0133
        gbc.setState(0x3856, 0xfd7b, 0x5910, 0x202, 0xb7f9, 0xc242, 0x0, 0x0);
        gbc.writeMem(0x3856, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xfd7b);
        EXPECT(gbc.pc(), 0x3858);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0134
        gbc.setState(0x81c, 0xcc09, 0x3790, 0x3940, 0xc869, 0x9cb9, 0x1, 0x1);
        gbc.writeMem(0x81c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xcc09);
        EXPECT(gbc.pc(), 0x81e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0135
        gbc.setState(0x4f03, 0xb0c9, 0xb7a0, 0x982, 0x32f6, 0xdda0, 0x0, 0x0);
        gbc.writeMem(0x4f03, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb0c9);
        EXPECT(gbc.pc(), 0x4f05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0136
        gbc.setState(0x9f97, 0xb852, 0x5cb0, 0x8bb7, 0x58ce, 0xacd1, 0x0, 0x0);
        gbc.writeMem(0x9f97, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb852);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f97), 0xcb);
        EXPECT(gbc.readMem(0x9f98), 0x15);
        // CB 15 0137
        gbc.setState(0x8da9, 0xf245, 0x97a0, 0x40e5, 0x2d6f, 0xed0, 0x1, 0x1);
        gbc.writeMem(0x8da9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xf245);
        EXPECT(gbc.pc(), 0x8dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da9), 0xcb);
        EXPECT(gbc.readMem(0x8daa), 0x15);
        // CB 15 0138
        gbc.setState(0x4c8a, 0xb031, 0x1020, 0xf5a4, 0x415d, 0xa7fd, 0x0, 0x0);
        gbc.writeMem(0x4c8a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xb031);
        EXPECT(gbc.pc(), 0x4c8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0139
        gbc.setState(0x61ef, 0x40c3, 0xb460, 0x143a, 0x8e70, 0x7e54, 0x0, 0x1);
        gbc.writeMem(0x61ef, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x40c3);
        EXPECT(gbc.pc(), 0x61f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 013A
        gbc.setState(0xee29, 0xe97c, 0x4040, 0x3625, 0x1c09, 0x3b3b, 0x0, 0x0);
        gbc.writeMem(0xee29, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe97c);
        EXPECT(gbc.pc(), 0xee2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee29), 0xcb);
        EXPECT(gbc.readMem(0xee2a), 0x15);
        // CB 15 013B
        gbc.setState(0x74a2, 0x64, 0x10a0, 0x5eb2, 0xc46a, 0x9ebe, 0x0, 0x1);
        gbc.writeMem(0x74a2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x64);
        EXPECT(gbc.pc(), 0x74a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 013C
        gbc.setState(0x7707, 0xe5a7, 0xc3b0, 0x6591, 0xd895, 0xb175, 0x0, 0x1);
        gbc.writeMem(0x7707, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe5a7);
        EXPECT(gbc.pc(), 0x7709);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 013D
        gbc.setState(0xbd45, 0x2836, 0x6ae0, 0x9371, 0x21cf, 0xdf0c, 0x1, 0x0);
        gbc.writeMem(0xbd45, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2836);
        EXPECT(gbc.pc(), 0xbd47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd45), 0xcb);
        EXPECT(gbc.readMem(0xbd46), 0x15);
        // CB 15 013F
        gbc.setState(0x723a, 0x1f1a, 0x67c0, 0xf767, 0x41df, 0xe285, 0x1, 0x0);
        gbc.writeMem(0x723a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1f1a);
        EXPECT(gbc.pc(), 0x723c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0140
        gbc.setState(0xe196, 0x3f40, 0x160, 0x3ef8, 0xedd5, 0x7f6, 0x0, 0x0);
        gbc.writeMem(0xe196, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3f40);
        EXPECT(gbc.pc(), 0xe198);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe196), 0xcb);
        EXPECT(gbc.readMem(0xe197), 0x15);
        // CB 15 0141
        gbc.setState(0x1f1d, 0x7c69, 0x20e0, 0xf659, 0x784b, 0x2873, 0x1, 0x0);
        gbc.writeMem(0x1f1d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7c69);
        EXPECT(gbc.pc(), 0x1f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0142
        gbc.setState(0xe0e7, 0xd143, 0xd5b0, 0x90a1, 0xcaac, 0x57a7, 0x1, 0x1);
        gbc.writeMem(0xe0e7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd143);
        EXPECT(gbc.pc(), 0xe0e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0e7), 0xcb);
        EXPECT(gbc.readMem(0xe0e8), 0x15);
        // CB 15 0143
        gbc.setState(0xc2f2, 0xad62, 0x4500, 0x54aa, 0x373e, 0x6cc9, 0x1, 0x0);
        gbc.writeMem(0xc2f2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xad62);
        EXPECT(gbc.pc(), 0xc2f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2f2), 0xcb);
        EXPECT(gbc.readMem(0xc2f3), 0x15);
        // CB 15 0144
        gbc.setState(0x19da, 0xe918, 0x45c0, 0x9e6b, 0xe461, 0xbac9, 0x0, 0x0);
        gbc.writeMem(0x19da, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0x19dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0145
        gbc.setState(0x6857, 0x10ab, 0xea00, 0x3c6e, 0xe07c, 0xa33e, 0x1, 0x1);
        gbc.writeMem(0x6857, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x10ab);
        EXPECT(gbc.pc(), 0x6859);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0146
        gbc.setState(0x2133, 0x39a1, 0xe2b0, 0xe58b, 0x6bb4, 0x534e, 0x1, 0x1);
        gbc.writeMem(0x2133, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x39a1);
        EXPECT(gbc.pc(), 0x2135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0147
        gbc.setState(0xaf96, 0xfaf3, 0xc5b0, 0x8c96, 0x405, 0x40a1, 0x1, 0x1);
        gbc.writeMem(0xaf96, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xfaf3);
        EXPECT(gbc.pc(), 0xaf98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf96), 0xcb);
        EXPECT(gbc.readMem(0xaf97), 0x15);
        // CB 15 0148
        gbc.setState(0x99bc, 0xb845, 0xd840, 0xbdf8, 0xcc59, 0xc5d9, 0x0, 0x1);
        gbc.writeMem(0x99bc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb845);
        EXPECT(gbc.pc(), 0x99be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99bc), 0xcb);
        EXPECT(gbc.readMem(0x99bd), 0x15);
        // CB 15 0149
        gbc.setState(0x169c, 0x3d37, 0xf030, 0xe4ac, 0xd1bf, 0xd35f, 0x0, 0x0);
        gbc.writeMem(0x169c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3d37);
        EXPECT(gbc.pc(), 0x169e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 014A
        gbc.setState(0xd805, 0xf985, 0x2110, 0x64fc, 0x332b, 0x8277, 0x0, 0x1);
        gbc.writeMem(0xd805, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf985);
        EXPECT(gbc.pc(), 0xd807);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd805), 0xcb);
        EXPECT(gbc.readMem(0xd806), 0x15);
        // CB 15 014B
        gbc.setState(0x1dfd, 0xd220, 0x5b00, 0xe708, 0x57d, 0xa919, 0x1, 0x0);
        gbc.writeMem(0x1dfd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xd220);
        EXPECT(gbc.pc(), 0x1dff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 014C
        gbc.setState(0x237a, 0xd3a4, 0xfa80, 0x3d7a, 0xbf5f, 0x50f8, 0x0, 0x1);
        gbc.writeMem(0x237a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0x237c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 014D
        gbc.setState(0xee6b, 0xcb18, 0xb3f0, 0x7169, 0xb337, 0xb55e, 0x1, 0x0);
        gbc.writeMem(0xee6b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xcb18);
        EXPECT(gbc.pc(), 0xee6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6b), 0xcb);
        EXPECT(gbc.readMem(0xee6c), 0x15);
        // CB 15 014E
        gbc.setState(0xa1e7, 0xf6a0, 0x5080, 0x9753, 0x293b, 0x17f0, 0x1, 0x0);
        gbc.writeMem(0xa1e7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xf6a0);
        EXPECT(gbc.pc(), 0xa1e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1e7), 0xcb);
        EXPECT(gbc.readMem(0xa1e8), 0x15);
        // CB 15 014F
        gbc.setState(0xc202, 0x5b0e, 0x1400, 0xd035, 0x264f, 0x9de1, 0x1, 0x0);
        gbc.writeMem(0xc202, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5b0e);
        EXPECT(gbc.pc(), 0xc204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc202), 0xcb);
        EXPECT(gbc.readMem(0xc203), 0x15);
        // CB 15 0150
        gbc.setState(0x1a29, 0xf359, 0x63a0, 0xbbd0, 0x34bb, 0xcfca, 0x1, 0x1);
        gbc.writeMem(0x1a29, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf359);
        EXPECT(gbc.pc(), 0x1a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0151
        gbc.setState(0x177, 0x71d, 0xb110, 0xf48b, 0x8f49, 0x6519, 0x1, 0x0);
        gbc.writeMem(0x177, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x71d);
        EXPECT(gbc.pc(), 0x179);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0152
        gbc.setState(0x1044, 0x1c6b, 0x7db0, 0x7a23, 0x90e1, 0x10d5, 0x0, 0x1);
        gbc.writeMem(0x1044, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1c6b);
        EXPECT(gbc.pc(), 0x1046);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0153
        gbc.setState(0xdb5b, 0xa243, 0xf8b0, 0x1c26, 0x1dac, 0x7a2e, 0x1, 0x0);
        gbc.writeMem(0xdb5b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa243);
        EXPECT(gbc.pc(), 0xdb5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb5b), 0xcb);
        EXPECT(gbc.readMem(0xdb5c), 0x15);
        // CB 15 0154
        gbc.setState(0x4315, 0xc91d, 0x4830, 0x127b, 0xac1e, 0xc918, 0x1, 0x1);
        gbc.writeMem(0x4315, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xc91d);
        EXPECT(gbc.pc(), 0x4317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0155
        gbc.setState(0x30ab, 0xea6e, 0x1f70, 0x8445, 0x9c0b, 0x8c8, 0x1, 0x1);
        gbc.writeMem(0x30ab, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xea6e);
        EXPECT(gbc.pc(), 0x30ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0156
        gbc.setState(0xe233, 0xe02a, 0x9a80, 0xee88, 0x94ab, 0x5cfa, 0x1, 0x0);
        gbc.writeMem(0xe233, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe02a);
        EXPECT(gbc.pc(), 0xe235);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe233), 0xcb);
        EXPECT(gbc.readMem(0xe234), 0x15);
        // CB 15 0157
        gbc.setState(0xea62, 0x63a6, 0xc1e0, 0xa0a, 0xd299, 0x3535, 0x1, 0x1);
        gbc.writeMem(0xea62, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0xea64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea62), 0xcb);
        EXPECT(gbc.readMem(0xea63), 0x15);
        // CB 15 0158
        gbc.setState(0x60e, 0xdee8, 0xe430, 0x2208, 0x8a0, 0x17ad, 0x1, 0x0);
        gbc.writeMem(0x60e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xdee8);
        EXPECT(gbc.pc(), 0x610);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0159
        gbc.setState(0xd4c8, 0x127c, 0xdc20, 0xf640, 0x1c91, 0xcf45, 0x1, 0x1);
        gbc.writeMem(0xd4c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x127c);
        EXPECT(gbc.pc(), 0xd4ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4c8), 0xcb);
        EXPECT(gbc.readMem(0xd4c9), 0x15);
        // CB 15 015A
        gbc.setState(0x75e9, 0xf62a, 0x1ee0, 0x8601, 0xec6c, 0x8aae, 0x0, 0x0);
        gbc.writeMem(0x75e9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0x75eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 015B
        gbc.setState(0x7459, 0x30c7, 0x260, 0xe759, 0x9034, 0x2920, 0x1, 0x1);
        gbc.writeMem(0x7459, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x30c7);
        EXPECT(gbc.pc(), 0x745b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 015C
        gbc.setState(0xce55, 0x69b9, 0xe3b0, 0xd3c, 0x7a9a, 0x70df, 0x0, 0x1);
        gbc.writeMem(0xce55, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x69b9);
        EXPECT(gbc.pc(), 0xce57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce55), 0xcb);
        EXPECT(gbc.readMem(0xce56), 0x15);
        // CB 15 015D
        gbc.setState(0xe926, 0xe1d7, 0xb3c0, 0x2f96, 0x2867, 0x6154, 0x0, 0x1);
        gbc.writeMem(0xe926, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe1d7);
        EXPECT(gbc.pc(), 0xe928);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe926), 0xcb);
        EXPECT(gbc.readMem(0xe927), 0x15);
        // CB 15 015E
        gbc.setState(0xd9de, 0x646d, 0x68d0, 0x4b9a, 0x5628, 0xb25b, 0x0, 0x1);
        gbc.writeMem(0xd9de, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x646d);
        EXPECT(gbc.pc(), 0xd9e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9de), 0xcb);
        EXPECT(gbc.readMem(0xd9df), 0x15);
        // CB 15 015F
        gbc.setState(0xd58e, 0x7f40, 0xd3e0, 0x7744, 0x64e4, 0xe9c, 0x0, 0x0);
        gbc.writeMem(0xd58e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7f40);
        EXPECT(gbc.pc(), 0xd590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd58e), 0xcb);
        EXPECT(gbc.readMem(0xd58f), 0x15);
        // CB 15 0160
        gbc.setState(0x61a1, 0x9ac1, 0x7af0, 0xf453, 0xa19a, 0x9dc1, 0x1, 0x1);
        gbc.writeMem(0x61a1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9ac1);
        EXPECT(gbc.pc(), 0x61a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0161
        gbc.setState(0x9826, 0xe4e2, 0x1480, 0x149, 0x47cf, 0x1caf, 0x1, 0x1);
        gbc.writeMem(0x9826, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe4e2);
        EXPECT(gbc.pc(), 0x9828);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9826), 0xcb);
        EXPECT(gbc.readMem(0x9827), 0x15);
        // CB 15 0162
        gbc.setState(0xa3bd, 0xb8f6, 0x3590, 0x40b, 0x5909, 0x11ac, 0x1, 0x1);
        gbc.writeMem(0xa3bd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb8f6);
        EXPECT(gbc.pc(), 0xa3bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bd), 0xcb);
        EXPECT(gbc.readMem(0xa3be), 0x15);
        // CB 15 0163
        gbc.setState(0x1f65, 0x499f, 0x8750, 0x8237, 0x6734, 0x198c, 0x1, 0x0);
        gbc.writeMem(0x1f65, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x499f);
        EXPECT(gbc.pc(), 0x1f67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0164
        gbc.setState(0x95f, 0x3f51, 0xf690, 0x33a1, 0x4be, 0x1c79, 0x1, 0x1);
        gbc.writeMem(0x95f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x3f51);
        EXPECT(gbc.pc(), 0x961);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0165
        gbc.setState(0x8ee8, 0x449, 0x6620, 0x5eea, 0x2b0b, 0x138d, 0x1, 0x0);
        gbc.writeMem(0x8ee8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x449);
        EXPECT(gbc.pc(), 0x8eea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ee8), 0xcb);
        EXPECT(gbc.readMem(0x8ee9), 0x15);
        // CB 15 0166
        gbc.setState(0x3979, 0xe, 0xe30, 0x2506, 0x5a79, 0x36ea, 0x1, 0x0);
        gbc.writeMem(0x3979, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xe);
        EXPECT(gbc.pc(), 0x397b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0167
        gbc.setState(0xa70b, 0xaa45, 0x7fc0, 0x135c, 0x1e96, 0xe0a1, 0x0, 0x1);
        gbc.writeMem(0xa70b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xaa45);
        EXPECT(gbc.pc(), 0xa70d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70b), 0xcb);
        EXPECT(gbc.readMem(0xa70c), 0x15);
        // CB 15 0168
        gbc.setState(0xb64c, 0xb7d6, 0x27e0, 0xc87a, 0xd1fd, 0xf5dc, 0x0, 0x1);
        gbc.writeMem(0xb64c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb7d6);
        EXPECT(gbc.pc(), 0xb64e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64c), 0xcb);
        EXPECT(gbc.readMem(0xb64d), 0x15);
        // CB 15 0169
        gbc.setState(0xe72, 0xdc63, 0x1990, 0x12d5, 0x8752, 0x2127, 0x0, 0x0);
        gbc.writeMem(0xe72, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdc63);
        EXPECT(gbc.pc(), 0xe74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 016A
        gbc.setState(0xc4a9, 0x9b32, 0x3de0, 0x2c2d, 0xd77a, 0x681, 0x0, 0x0);
        gbc.writeMem(0xc4a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x9b32);
        EXPECT(gbc.pc(), 0xc4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4a9), 0xcb);
        EXPECT(gbc.readMem(0xc4aa), 0x15);
        // CB 15 016B
        gbc.setState(0x860a, 0x919e, 0x6dc0, 0xb8cf, 0x65e4, 0x594c, 0x0, 0x0);
        gbc.writeMem(0x860a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x919e);
        EXPECT(gbc.pc(), 0x860c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x860a), 0xcb);
        EXPECT(gbc.readMem(0x860b), 0x15);
        // CB 15 016C
        gbc.setState(0x47ed, 0x83df, 0x9fe0, 0x12bd, 0x1af2, 0x7db2, 0x1, 0x1);
        gbc.writeMem(0x47ed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x83df);
        EXPECT(gbc.pc(), 0x47ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 016D
        gbc.setState(0x469c, 0x4d3b, 0x6f40, 0x9691, 0xccf1, 0x9c7b, 0x0, 0x0);
        gbc.writeMem(0x469c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x4d3b);
        EXPECT(gbc.pc(), 0x469e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 016E
        gbc.setState(0x7549, 0xe04c, 0xf360, 0xa72f, 0x6c58, 0x3c0a, 0x0, 0x0);
        gbc.writeMem(0x7549, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xe04c);
        EXPECT(gbc.pc(), 0x754b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 016F
        gbc.setState(0xa388, 0x1fa1, 0xee10, 0x91b7, 0xf6c1, 0xbb7b, 0x0, 0x0);
        gbc.writeMem(0xa388, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1fa1);
        EXPECT(gbc.pc(), 0xa38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa388), 0xcb);
        EXPECT(gbc.readMem(0xa389), 0x15);
        // CB 15 0170
        gbc.setState(0x6f40, 0xa7f9, 0x5b0, 0x4e5b, 0x4339, 0x7fe2, 0x0, 0x1);
        gbc.writeMem(0x6f40, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa7f9);
        EXPECT(gbc.pc(), 0x6f42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0171
        gbc.setState(0xe263, 0x6b4b, 0xe8f0, 0x3ed1, 0x7baa, 0x4629, 0x0, 0x0);
        gbc.writeMem(0xe263, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6b4b);
        EXPECT(gbc.pc(), 0xe265);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe263), 0xcb);
        EXPECT(gbc.readMem(0xe264), 0x15);
        // CB 15 0172
        gbc.setState(0x46c0, 0xe752, 0xae50, 0x4712, 0xaeb4, 0x129e, 0x1, 0x1);
        gbc.writeMem(0x46c0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe752);
        EXPECT(gbc.pc(), 0x46c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0174
        gbc.setState(0xc830, 0x914a, 0x5a00, 0x9a69, 0x1ac5, 0x2365, 0x1, 0x0);
        gbc.writeMem(0xc830, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x914a);
        EXPECT(gbc.pc(), 0xc832);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc830), 0xcb);
        EXPECT(gbc.readMem(0xc831), 0x15);
        // CB 15 0175
        gbc.setState(0xaa1f, 0xea2d, 0x8460, 0x94eb, 0x7991, 0x4400, 0x0, 0x0);
        gbc.writeMem(0xaa1f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xea2d);
        EXPECT(gbc.pc(), 0xaa21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa1f), 0xcb);
        EXPECT(gbc.readMem(0xaa20), 0x15);
        // CB 15 0176
        gbc.setState(0xc7c3, 0x732d, 0xc1d0, 0xc0a1, 0xb288, 0x916, 0x1, 0x1);
        gbc.writeMem(0xc7c3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x732d);
        EXPECT(gbc.pc(), 0xc7c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7c3), 0xcb);
        EXPECT(gbc.readMem(0xc7c4), 0x15);
        // CB 15 0177
        gbc.setState(0x43db, 0x30f4, 0x4210, 0xbdf5, 0x9278, 0x2bda, 0x0, 0x0);
        gbc.writeMem(0x43db, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x30f4);
        EXPECT(gbc.pc(), 0x43dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0179
        gbc.setState(0xddc8, 0x3255, 0x3b30, 0x5066, 0xa16a, 0xed89, 0x1, 0x1);
        gbc.writeMem(0xddc8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3255);
        EXPECT(gbc.pc(), 0xddca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddc8), 0xcb);
        EXPECT(gbc.readMem(0xddc9), 0x15);
        // CB 15 017C
        gbc.setState(0x6ef9, 0x1916, 0x68e0, 0x5798, 0xd41a, 0x7528, 0x0, 0x1);
        gbc.writeMem(0x6ef9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1916);
        EXPECT(gbc.pc(), 0x6efb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 017D
        gbc.setState(0x8a9a, 0xccbd, 0x3bf0, 0x6467, 0x43d6, 0xcf7e, 0x1, 0x1);
        gbc.writeMem(0x8a9a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xccbd);
        EXPECT(gbc.pc(), 0x8a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a9a), 0xcb);
        EXPECT(gbc.readMem(0x8a9b), 0x15);
        // CB 15 017E
        gbc.setState(0xa74b, 0x3126, 0xb2f0, 0x3f9b, 0x87cb, 0x856, 0x0, 0x1);
        gbc.writeMem(0xa74b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x3126);
        EXPECT(gbc.pc(), 0xa74d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa74b), 0xcb);
        EXPECT(gbc.readMem(0xa74c), 0x15);
        // CB 15 017F
        gbc.setState(0xa31c, 0x4bd2, 0x8550, 0x182d, 0x8551, 0x5c2, 0x1, 0x1);
        gbc.writeMem(0xa31c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x4bd2);
        EXPECT(gbc.pc(), 0xa31e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa31c), 0xcb);
        EXPECT(gbc.readMem(0xa31d), 0x15);
        // CB 15 0180
        gbc.setState(0x92b, 0x86de, 0x8e10, 0x1dca, 0x11e9, 0x5bd9, 0x0, 0x0);
        gbc.writeMem(0x92b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x86de);
        EXPECT(gbc.pc(), 0x92d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0181
        gbc.setState(0x857e, 0x67f3, 0x7920, 0x99d8, 0xc88d, 0x20b3, 0x1, 0x0);
        gbc.writeMem(0x857e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x67f3);
        EXPECT(gbc.pc(), 0x8580);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857e), 0xcb);
        EXPECT(gbc.readMem(0x857f), 0x15);
        // CB 15 0182
        gbc.setState(0xe2bc, 0xad4e, 0xdc0, 0xc38f, 0xaa8c, 0x68f, 0x1, 0x1);
        gbc.writeMem(0xe2bc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xad4e);
        EXPECT(gbc.pc(), 0xe2be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2bc), 0xcb);
        EXPECT(gbc.readMem(0xe2bd), 0x15);
        // CB 15 0183
        gbc.setState(0x5c28, 0x5f3a, 0xf940, 0xe523, 0x773, 0x95f3, 0x0, 0x1);
        gbc.writeMem(0x5c28, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x5f3a);
        EXPECT(gbc.pc(), 0x5c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0184
        gbc.setState(0x72e, 0x65fe, 0xa810, 0xa584, 0x1ecd, 0x47c7, 0x1, 0x1);
        gbc.writeMem(0x72e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x65fe);
        EXPECT(gbc.pc(), 0x730);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0185
        gbc.setState(0x5e5c, 0x3c43, 0x70a0, 0x8ae3, 0xfc7c, 0xb2c9, 0x1, 0x1);
        gbc.writeMem(0x5e5c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3c43);
        EXPECT(gbc.pc(), 0x5e5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0186
        gbc.setState(0xe470, 0xf08, 0x310, 0x3519, 0x3d67, 0x625f, 0x0, 0x0);
        gbc.writeMem(0xe470, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0xe472);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe470), 0xcb);
        EXPECT(gbc.readMem(0xe471), 0x15);
        // CB 15 0187
        gbc.setState(0x81de, 0x149b, 0x7b30, 0x872, 0x3e97, 0x82af, 0x1, 0x1);
        gbc.writeMem(0x81de, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x149b);
        EXPECT(gbc.pc(), 0x81e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81de), 0xcb);
        EXPECT(gbc.readMem(0x81df), 0x15);
        // CB 15 0188
        gbc.setState(0xeee1, 0xfac4, 0x98b0, 0x498a, 0x5c97, 0x567b, 0x0, 0x0);
        gbc.writeMem(0xeee1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfac4);
        EXPECT(gbc.pc(), 0xeee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee1), 0xcb);
        EXPECT(gbc.readMem(0xeee2), 0x15);
        // CB 15 0189
        gbc.setState(0xc0c, 0x6feb, 0xc240, 0x9ba0, 0x2015, 0xd849, 0x1, 0x0);
        gbc.writeMem(0xc0c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6feb);
        EXPECT(gbc.pc(), 0xc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 018A
        gbc.setState(0x56d, 0x30ba, 0xc50, 0x3bea, 0x76e1, 0x61b0, 0x0, 0x1);
        gbc.writeMem(0x56d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x56f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 018B
        gbc.setState(0x4c30, 0x5382, 0xa510, 0xcf31, 0xa11e, 0x364e, 0x0, 0x1);
        gbc.writeMem(0x4c30, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x5382);
        EXPECT(gbc.pc(), 0x4c32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 018D
        gbc.setState(0x8734, 0xb102, 0xaec0, 0x1af5, 0x3675, 0x858, 0x1, 0x1);
        gbc.writeMem(0x8734, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb102);
        EXPECT(gbc.pc(), 0x8736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8734), 0xcb);
        EXPECT(gbc.readMem(0x8735), 0x15);
        // CB 15 018E
        gbc.setState(0x7eb6, 0xa718, 0x8940, 0xbdef, 0xe736, 0x6a2d, 0x1, 0x0);
        gbc.writeMem(0x7eb6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xa718);
        EXPECT(gbc.pc(), 0x7eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 018F
        gbc.setState(0xab61, 0x9384, 0x6ca0, 0xb622, 0x2cbd, 0x8a12, 0x1, 0x0);
        gbc.writeMem(0xab61, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9384);
        EXPECT(gbc.pc(), 0xab63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab61), 0xcb);
        EXPECT(gbc.readMem(0xab62), 0x15);
        // CB 15 0190
        gbc.setState(0x2986, 0x6810, 0x16b0, 0xed0f, 0x631c, 0xcb82, 0x0, 0x0);
        gbc.writeMem(0x2986, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6810);
        EXPECT(gbc.pc(), 0x2988);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0191
        gbc.setState(0xcb9d, 0xa630, 0x63e0, 0xa864, 0x9dae, 0xe4a, 0x0, 0x0);
        gbc.writeMem(0xcb9d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa630);
        EXPECT(gbc.pc(), 0xcb9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb9d), 0xcb);
        EXPECT(gbc.readMem(0xcb9e), 0x15);
        // CB 15 0192
        gbc.setState(0x722c, 0x59e2, 0x6b70, 0xb145, 0x16c5, 0xd8e5, 0x1, 0x1);
        gbc.writeMem(0x722c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x59e2);
        EXPECT(gbc.pc(), 0x722e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0193
        gbc.setState(0x512b, 0xaa4a, 0xd450, 0x3df6, 0x6c95, 0x889c, 0x1, 0x1);
        gbc.writeMem(0x512b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0x512d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0194
        gbc.setState(0x8fd0, 0xc803, 0x7b20, 0x97ad, 0x2795, 0x1283, 0x1, 0x0);
        gbc.writeMem(0x8fd0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc803);
        EXPECT(gbc.pc(), 0x8fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd0), 0xcb);
        EXPECT(gbc.readMem(0x8fd1), 0x15);
        // CB 15 0195
        gbc.setState(0x137c, 0xdfa5, 0xf170, 0x47cd, 0x48e6, 0xfd22, 0x0, 0x0);
        gbc.writeMem(0x137c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdfa5);
        EXPECT(gbc.pc(), 0x137e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0197
        gbc.setState(0x8806, 0x4df6, 0x9340, 0xa231, 0x49df, 0x44a, 0x0, 0x0);
        gbc.writeMem(0x8806, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x4df6);
        EXPECT(gbc.pc(), 0x8808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8806), 0xcb);
        EXPECT(gbc.readMem(0x8807), 0x15);
        // CB 15 0198
        gbc.setState(0x51bf, 0xd5ac, 0x84b0, 0x12e0, 0x16a5, 0xbd43, 0x0, 0x1);
        gbc.writeMem(0x51bf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xd5ac);
        EXPECT(gbc.pc(), 0x51c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0199
        gbc.setState(0x3c88, 0x2952, 0xd570, 0x787c, 0xde7e, 0x8761, 0x1, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0x3c8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 019A
        gbc.setState(0x5c5b, 0xd0b6, 0xf150, 0x6246, 0xf9a3, 0xc7fe, 0x0, 0x0);
        gbc.writeMem(0x5c5b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd0b6);
        EXPECT(gbc.pc(), 0x5c5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 019B
        gbc.setState(0x7a9, 0x672f, 0x4510, 0x1ce3, 0x9ce4, 0x9b80, 0x1, 0x1);
        gbc.writeMem(0x7a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x672f);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 019C
        gbc.setState(0x79c5, 0xac58, 0x7890, 0xe386, 0xff12, 0x30bb, 0x0, 0x1);
        gbc.writeMem(0x79c5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xac58);
        EXPECT(gbc.pc(), 0x79c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 019D
        gbc.setState(0xeb2c, 0x990d, 0x2df0, 0xb02b, 0xe94e, 0xa366, 0x0, 0x0);
        gbc.writeMem(0xeb2c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x990d);
        EXPECT(gbc.pc(), 0xeb2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb2c), 0xcb);
        EXPECT(gbc.readMem(0xeb2d), 0x15);
        // CB 15 019F
        gbc.setState(0x5df3, 0x1c7f, 0x2d50, 0xb7ac, 0x24dd, 0x6e42, 0x0, 0x1);
        gbc.writeMem(0x5df3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x1c7f);
        EXPECT(gbc.pc(), 0x5df5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01A1
        gbc.setState(0x1c32, 0xa90b, 0x9e0, 0x6a3a, 0xbd8c, 0x8973, 0x1, 0x0);
        gbc.writeMem(0x1c32, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa90b);
        EXPECT(gbc.pc(), 0x1c34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01A2
        gbc.setState(0x7632, 0xa37e, 0x6bd0, 0x968e, 0x742, 0xd7d6, 0x1, 0x0);
        gbc.writeMem(0x7632, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xa37e);
        EXPECT(gbc.pc(), 0x7634);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01A4
        gbc.setState(0x7198, 0xbe40, 0x4740, 0xce3, 0x1b8e, 0xc61a, 0x1, 0x0);
        gbc.writeMem(0x7198, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbe40);
        EXPECT(gbc.pc(), 0x719a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01A5
        gbc.setState(0x26a6, 0xc848, 0x4690, 0x66d2, 0x610d, 0x1661, 0x0, 0x0);
        gbc.writeMem(0x26a6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xc848);
        EXPECT(gbc.pc(), 0x26a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01A6
        gbc.setState(0x23dd, 0xd8db, 0xb250, 0x3448, 0xc5c5, 0x6598, 0x0, 0x1);
        gbc.writeMem(0x23dd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd8db);
        EXPECT(gbc.pc(), 0x23df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01A7
        gbc.setState(0x6bbd, 0x237, 0xd680, 0x6036, 0x318a, 0xd80a, 0x0, 0x0);
        gbc.writeMem(0x6bbd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x237);
        EXPECT(gbc.pc(), 0x6bbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01A8
        gbc.setState(0xaeb4, 0x71da, 0x6900, 0xdbca, 0x77f3, 0x85fb, 0x1, 0x1);
        gbc.writeMem(0xaeb4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x71da);
        EXPECT(gbc.pc(), 0xaeb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeb4), 0xcb);
        EXPECT(gbc.readMem(0xaeb5), 0x15);
        // CB 15 01A9
        gbc.setState(0xc23a, 0x2162, 0xb90, 0x57ee, 0x7b92, 0x227c, 0x1, 0x0);
        gbc.writeMem(0xc23a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x2162);
        EXPECT(gbc.pc(), 0xc23c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23a), 0xcb);
        EXPECT(gbc.readMem(0xc23b), 0x15);
        // CB 15 01AA
        gbc.setState(0x8fb0, 0xcfea, 0xe5d0, 0x55dd, 0x5cf8, 0x41bf, 0x1, 0x1);
        gbc.writeMem(0x8fb0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xcfea);
        EXPECT(gbc.pc(), 0x8fb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fb0), 0xcb);
        EXPECT(gbc.readMem(0x8fb1), 0x15);
        // CB 15 01AB
        gbc.setState(0x95a9, 0x9d2, 0xb0c0, 0xdf, 0x7e4d, 0x6b2a, 0x1, 0x1);
        gbc.writeMem(0x95a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9d2);
        EXPECT(gbc.pc(), 0x95ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95a9), 0xcb);
        EXPECT(gbc.readMem(0x95aa), 0x15);
        // CB 15 01AC
        gbc.setState(0x8503, 0x8757, 0x26a0, 0xb7ee, 0xd3ba, 0xdf20, 0x0, 0x0);
        gbc.writeMem(0x8503, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8757);
        EXPECT(gbc.pc(), 0x8505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8503), 0xcb);
        EXPECT(gbc.readMem(0x8504), 0x15);
        // CB 15 01AD
        gbc.setState(0x73df, 0xd02d, 0x7ac0, 0x8706, 0x3cc8, 0xdad7, 0x0, 0x0);
        gbc.writeMem(0x73df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd02d);
        EXPECT(gbc.pc(), 0x73e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01AE
        gbc.setState(0xad4c, 0x9f1f, 0x8030, 0x8b57, 0x4c68, 0x51aa, 0x1, 0x1);
        gbc.writeMem(0xad4c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x9f1f);
        EXPECT(gbc.pc(), 0xad4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4c), 0xcb);
        EXPECT(gbc.readMem(0xad4d), 0x15);
        // CB 15 01AF
        gbc.setState(0x41a, 0x1437, 0x5ab0, 0xfb02, 0x8f34, 0xb172, 0x0, 0x0);
        gbc.writeMem(0x41a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x1437);
        EXPECT(gbc.pc(), 0x41c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01B0
        gbc.setState(0x3566, 0xf3be, 0x1f30, 0x79bd, 0x5dfb, 0x2808, 0x0, 0x1);
        gbc.writeMem(0x3566, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf3be);
        EXPECT(gbc.pc(), 0x3568);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01B1
        gbc.setState(0xb2e0, 0x4256, 0xd5d0, 0x8de, 0x4fcd, 0xc4e6, 0x1, 0x1);
        gbc.writeMem(0xb2e0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x4256);
        EXPECT(gbc.pc(), 0xb2e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e0), 0xcb);
        EXPECT(gbc.readMem(0xb2e1), 0x15);
        // CB 15 01B2
        gbc.setState(0xc920, 0xc764, 0xe6a0, 0x1d0d, 0xd659, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0xc920, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc764);
        EXPECT(gbc.pc(), 0xc922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc920), 0xcb);
        EXPECT(gbc.readMem(0xc921), 0x15);
        // CB 15 01B3
        gbc.setState(0x281e, 0x938e, 0xf690, 0xeeed, 0x5091, 0x47f0, 0x1, 0x0);
        gbc.writeMem(0x281e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x938e);
        EXPECT(gbc.pc(), 0x2820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01B4
        gbc.setState(0x7b10, 0xc521, 0x2e40, 0x440, 0xdb86, 0xc5ff, 0x1, 0x0);
        gbc.writeMem(0x7b10, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc521);
        EXPECT(gbc.pc(), 0x7b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01B5
        gbc.setState(0x1f49, 0x529a, 0xbf20, 0x5c34, 0xe954, 0x6f6, 0x1, 0x0);
        gbc.writeMem(0x1f49, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x529a);
        EXPECT(gbc.pc(), 0x1f4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01B6
        gbc.setState(0x1b1d, 0x663, 0xade0, 0xa3c9, 0xbc52, 0x1c17, 0x0, 0x0);
        gbc.writeMem(0x1b1d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x663);
        EXPECT(gbc.pc(), 0x1b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01B7
        gbc.setState(0x7be2, 0x8638, 0x45f0, 0x3ca6, 0x3dad, 0x4ef0, 0x1, 0x1);
        gbc.writeMem(0x7be2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x8638);
        EXPECT(gbc.pc(), 0x7be4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01B8
        gbc.setState(0xdc02, 0xee25, 0x4090, 0x1b7, 0xfea3, 0x3f59, 0x0, 0x0);
        gbc.writeMem(0xdc02, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xee25);
        EXPECT(gbc.pc(), 0xdc04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc02), 0xcb);
        EXPECT(gbc.readMem(0xdc03), 0x15);
        // CB 15 01B9
        gbc.setState(0xa535, 0x359b, 0x8430, 0x2bb7, 0x3ef8, 0xdbd7, 0x1, 0x0);
        gbc.writeMem(0xa535, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x359b);
        EXPECT(gbc.pc(), 0xa537);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa535), 0xcb);
        EXPECT(gbc.readMem(0xa536), 0x15);
        // CB 15 01BA
        gbc.setState(0x9bc5, 0xd75a, 0xefc0, 0x3e14, 0x5f9c, 0xcba, 0x0, 0x0);
        gbc.writeMem(0x9bc5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd75a);
        EXPECT(gbc.pc(), 0x9bc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bc5), 0xcb);
        EXPECT(gbc.readMem(0x9bc6), 0x15);
        // CB 15 01BB
        gbc.setState(0x4970, 0xbe4e, 0x10b0, 0xf461, 0x6cf7, 0x525f, 0x1, 0x0);
        gbc.writeMem(0x4970, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbe4e);
        EXPECT(gbc.pc(), 0x4972);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01BC
        gbc.setState(0xea6f, 0x8e93, 0xfc40, 0x6564, 0xab44, 0xb148, 0x1, 0x1);
        gbc.writeMem(0xea6f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x8e93);
        EXPECT(gbc.pc(), 0xea71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea6f), 0xcb);
        EXPECT(gbc.readMem(0xea70), 0x15);
        // CB 15 01BD
        gbc.setState(0xdb51, 0x4f7e, 0x3880, 0xbd9, 0xb80e, 0xc041, 0x1, 0x0);
        gbc.writeMem(0xdb51, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x4f7e);
        EXPECT(gbc.pc(), 0xdb53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb51), 0xcb);
        EXPECT(gbc.readMem(0xdb52), 0x15);
        // CB 15 01BE
        gbc.setState(0x2976, 0xf353, 0x6770, 0x4020, 0xfe10, 0x39bc, 0x1, 0x1);
        gbc.writeMem(0x2976, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xf353);
        EXPECT(gbc.pc(), 0x2978);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01BF
        gbc.setState(0x108c, 0x3402, 0x8480, 0xa72e, 0x16cb, 0xd874, 0x1, 0x1);
        gbc.writeMem(0x108c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3402);
        EXPECT(gbc.pc(), 0x108e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01C0
        gbc.setState(0x9ea4, 0xd574, 0x9e80, 0x782a, 0xa3b8, 0x143b, 0x1, 0x1);
        gbc.writeMem(0x9ea4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xd574);
        EXPECT(gbc.pc(), 0x9ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea4), 0xcb);
        EXPECT(gbc.readMem(0x9ea5), 0x15);
        // CB 15 01C1
        gbc.setState(0xee4f, 0x9944, 0x30e0, 0xfa6e, 0xf778, 0x4479, 0x1, 0x1);
        gbc.writeMem(0xee4f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x9944);
        EXPECT(gbc.pc(), 0xee51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee4f), 0xcb);
        EXPECT(gbc.readMem(0xee50), 0x15);
        // CB 15 01C3
        gbc.setState(0x7f89, 0x86bd, 0xfb40, 0x8f88, 0x3e06, 0xcc7f, 0x1, 0x1);
        gbc.writeMem(0x7f89, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x86bd);
        EXPECT(gbc.pc(), 0x7f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01C4
        gbc.setState(0x4e9f, 0x89c, 0xf1d0, 0xf0cc, 0xe82, 0xd80e, 0x0, 0x0);
        gbc.writeMem(0x4e9f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x89c);
        EXPECT(gbc.pc(), 0x4ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01C5
        gbc.setState(0xa812, 0xbe86, 0xffd0, 0x28a2, 0xb14a, 0xd7f9, 0x0, 0x0);
        gbc.writeMem(0xa812, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xbe86);
        EXPECT(gbc.pc(), 0xa814);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa812), 0xcb);
        EXPECT(gbc.readMem(0xa813), 0x15);
        // CB 15 01C6
        gbc.setState(0xda26, 0x8850, 0xbfb0, 0xd2ee, 0xa256, 0x37e, 0x0, 0x0);
        gbc.writeMem(0xda26, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8850);
        EXPECT(gbc.pc(), 0xda28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda26), 0xcb);
        EXPECT(gbc.readMem(0xda27), 0x15);
        // CB 15 01C7
        gbc.setState(0xb8bc, 0x2af7, 0x5790, 0xc66d, 0x2fa0, 0x1d1f, 0x1, 0x0);
        gbc.writeMem(0xb8bc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x2af7);
        EXPECT(gbc.pc(), 0xb8be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bc), 0xcb);
        EXPECT(gbc.readMem(0xb8bd), 0x15);
        // CB 15 01C8
        gbc.setState(0x1705, 0x2dad, 0xfc20, 0xa7c, 0x6775, 0xde95, 0x0, 0x0);
        gbc.writeMem(0x1705, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2dad);
        EXPECT(gbc.pc(), 0x1707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01C9
        gbc.setState(0xdb01, 0x7921, 0xbc50, 0x5305, 0x5c6e, 0x46d3, 0x0, 0x0);
        gbc.writeMem(0xdb01, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x7921);
        EXPECT(gbc.pc(), 0xdb03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb01), 0xcb);
        EXPECT(gbc.readMem(0xdb02), 0x15);
        // CB 15 01CA
        gbc.setState(0x9a72, 0xfa2e, 0x2c00, 0xa294, 0xb6a0, 0x5c0f, 0x0, 0x0);
        gbc.writeMem(0x9a72, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xfa2e);
        EXPECT(gbc.pc(), 0x9a74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a72), 0xcb);
        EXPECT(gbc.readMem(0x9a73), 0x15);
        // CB 15 01CB
        gbc.setState(0x5ad7, 0xd7f5, 0x300, 0x9e8a, 0xea16, 0xecf9, 0x0, 0x1);
        gbc.writeMem(0x5ad7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01CC
        gbc.setState(0x9ca9, 0xdd25, 0xb010, 0x71cd, 0x752a, 0x3231, 0x0, 0x0);
        gbc.writeMem(0x9ca9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xdd25);
        EXPECT(gbc.pc(), 0x9cab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca9), 0xcb);
        EXPECT(gbc.readMem(0x9caa), 0x15);
        // CB 15 01CD
        gbc.setState(0xf09, 0xa76b, 0xbc20, 0xb10, 0x4283, 0xef06, 0x0, 0x0);
        gbc.writeMem(0xf09, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xa76b);
        EXPECT(gbc.pc(), 0xf0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01CE
        gbc.setState(0x3b56, 0xe87e, 0xa910, 0xea92, 0x456f, 0x48af, 0x0, 0x0);
        gbc.writeMem(0x3b56, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe87e);
        EXPECT(gbc.pc(), 0x3b58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01CF
        gbc.setState(0x9b8e, 0x49a2, 0x2f50, 0x8c3c, 0x7339, 0x37a2, 0x0, 0x1);
        gbc.writeMem(0x9b8e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0x9b90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b8e), 0xcb);
        EXPECT(gbc.readMem(0x9b8f), 0x15);
        // CB 15 01D0
        gbc.setState(0xbafc, 0xc82f, 0xed00, 0xdadb, 0x646e, 0xdbc4, 0x1, 0x1);
        gbc.writeMem(0xbafc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc82f);
        EXPECT(gbc.pc(), 0xbafe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbafc), 0xcb);
        EXPECT(gbc.readMem(0xbafd), 0x15);
        // CB 15 01D1
        gbc.setState(0xdfd2, 0xb2de, 0x9060, 0x1198, 0x168e, 0xae83, 0x0, 0x0);
        gbc.writeMem(0xdfd2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb2de);
        EXPECT(gbc.pc(), 0xdfd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfd2), 0xcb);
        EXPECT(gbc.readMem(0xdfd3), 0x15);
        // CB 15 01D2
        gbc.setState(0x57c8, 0xb082, 0x2ce0, 0x7efb, 0x2a95, 0x8c28, 0x0, 0x0);
        gbc.writeMem(0x57c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb082);
        EXPECT(gbc.pc(), 0x57ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01D3
        gbc.setState(0x6e00, 0x11b5, 0x1210, 0x94a4, 0x5afd, 0xe107, 0x1, 0x0);
        gbc.writeMem(0x6e00, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x11b5);
        EXPECT(gbc.pc(), 0x6e02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01D4
        gbc.setState(0x2125, 0x6975, 0x1820, 0x81d3, 0x438b, 0x33ff, 0x1, 0x1);
        gbc.writeMem(0x2125, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x6975);
        EXPECT(gbc.pc(), 0x2127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01D5
        gbc.setState(0x49f3, 0x898e, 0x60e0, 0x7803, 0xa419, 0x34ba, 0x0, 0x1);
        gbc.writeMem(0x49f3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x898e);
        EXPECT(gbc.pc(), 0x49f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01D6
        gbc.setState(0x181a, 0x5245, 0x28f0, 0x4c63, 0x9f87, 0xc341, 0x1, 0x0);
        gbc.writeMem(0x181a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x5245);
        EXPECT(gbc.pc(), 0x181c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01D7
        gbc.setState(0xd6ca, 0x9873, 0xa680, 0x275e, 0x8b51, 0xd77e, 0x0, 0x1);
        gbc.writeMem(0xd6ca, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x9873);
        EXPECT(gbc.pc(), 0xd6cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ca), 0xcb);
        EXPECT(gbc.readMem(0xd6cb), 0x15);
        // CB 15 01D8
        gbc.setState(0x3c51, 0xb715, 0xe880, 0x1e95, 0xd0d8, 0xf2df, 0x1, 0x1);
        gbc.writeMem(0x3c51, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb715);
        EXPECT(gbc.pc(), 0x3c53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01D9
        gbc.setState(0x5dcb, 0x4fd4, 0x7440, 0xfa20, 0x79ac, 0x20e4, 0x1, 0x1);
        gbc.writeMem(0x5dcb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4fd4);
        EXPECT(gbc.pc(), 0x5dcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01DA
        gbc.setState(0x88b0, 0xa471, 0x60e0, 0xaba8, 0x196d, 0x8ac7, 0x0, 0x1);
        gbc.writeMem(0x88b0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xa471);
        EXPECT(gbc.pc(), 0x88b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b0), 0xcb);
        EXPECT(gbc.readMem(0x88b1), 0x15);
        // CB 15 01DB
        gbc.setState(0xa942, 0x20c8, 0xd510, 0x3452, 0xad34, 0xa6c6, 0x1, 0x1);
        gbc.writeMem(0xa942, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x20c8);
        EXPECT(gbc.pc(), 0xa944);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa942), 0xcb);
        EXPECT(gbc.readMem(0xa943), 0x15);
        // CB 15 01DC
        gbc.setState(0xd9d1, 0x93b7, 0x3020, 0x3c3a, 0xe2c1, 0xb755, 0x1, 0x0);
        gbc.writeMem(0xd9d1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x93b7);
        EXPECT(gbc.pc(), 0xd9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d1), 0xcb);
        EXPECT(gbc.readMem(0xd9d2), 0x15);
        // CB 15 01DE
        gbc.setState(0x5d8b, 0xd7d1, 0x95a0, 0x975c, 0x27ce, 0x50b5, 0x0, 0x1);
        gbc.writeMem(0x5d8b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd7d1);
        EXPECT(gbc.pc(), 0x5d8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01DF
        gbc.setState(0x7781, 0x985c, 0x9110, 0xd839, 0x2840, 0x44d6, 0x1, 0x0);
        gbc.writeMem(0x7781, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x985c);
        EXPECT(gbc.pc(), 0x7783);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01E0
        gbc.setState(0x4c86, 0xd091, 0xe9c0, 0xcb0c, 0x56fc, 0x5e1e, 0x1, 0x0);
        gbc.writeMem(0x4c86, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd091);
        EXPECT(gbc.pc(), 0x4c88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01E1
        gbc.setState(0x11e8, 0xafa1, 0xe720, 0xa1d7, 0xcd00, 0x3f9, 0x1, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xafa1);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01E2
        gbc.setState(0x358b, 0x6086, 0x6980, 0xb251, 0xc0e1, 0x395e, 0x1, 0x0);
        gbc.writeMem(0x358b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x6086);
        EXPECT(gbc.pc(), 0x358d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01E3
        gbc.setState(0x1baa, 0xd07a, 0x5ed0, 0x2c1f, 0x4ff, 0xf8a1, 0x0, 0x1);
        gbc.writeMem(0x1baa, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd07a);
        EXPECT(gbc.pc(), 0x1bac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01E4
        gbc.setState(0xa181, 0xc31d, 0x6cc0, 0xc76e, 0xbaf5, 0xfde2, 0x1, 0x0);
        gbc.writeMem(0xa181, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc31d);
        EXPECT(gbc.pc(), 0xa183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa181), 0xcb);
        EXPECT(gbc.readMem(0xa182), 0x15);
        // CB 15 01E5
        gbc.setState(0xce4f, 0x8f59, 0x5990, 0xab3, 0x238d, 0x9da5, 0x1, 0x0);
        gbc.writeMem(0xce4f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8f59);
        EXPECT(gbc.pc(), 0xce51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce4f), 0xcb);
        EXPECT(gbc.readMem(0xce50), 0x15);
        // CB 15 01E6
        gbc.setState(0xd400, 0xd1ab, 0x40e0, 0xb00a, 0x9f08, 0x1144, 0x1, 0x0);
        gbc.writeMem(0xd400, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd1ab);
        EXPECT(gbc.pc(), 0xd402);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd400), 0xcb);
        EXPECT(gbc.readMem(0xd401), 0x15);
        // CB 15 01E7
        gbc.setState(0xdbab, 0x978e, 0xdcc0, 0xd8e2, 0x17c2, 0x13a2, 0x1, 0x0);
        gbc.writeMem(0xdbab, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x978e);
        EXPECT(gbc.pc(), 0xdbad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbab), 0xcb);
        EXPECT(gbc.readMem(0xdbac), 0x15);
        // CB 15 01E8
        gbc.setState(0x609f, 0xf46d, 0xfe40, 0xc954, 0xf76, 0x76d6, 0x0, 0x1);
        gbc.writeMem(0x609f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf46d);
        EXPECT(gbc.pc(), 0x60a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01E9
        gbc.setState(0xefbc, 0xb652, 0xb980, 0x7963, 0xde0c, 0xff5f, 0x1, 0x1);
        gbc.writeMem(0xefbc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xb652);
        EXPECT(gbc.pc(), 0xefbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefbc), 0xcb);
        EXPECT(gbc.readMem(0xefbd), 0x15);
        // CB 15 01EA
        gbc.setState(0x7903, 0x271e, 0xf990, 0x6058, 0x1be3, 0xdaae, 0x1, 0x1);
        gbc.writeMem(0x7903, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x271e);
        EXPECT(gbc.pc(), 0x7905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01EB
        gbc.setState(0x275e, 0xdb66, 0xfd20, 0xfcde, 0x529f, 0x7fe0, 0x1, 0x1);
        gbc.writeMem(0x275e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdb66);
        EXPECT(gbc.pc(), 0x2760);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01EC
        gbc.setState(0x7a46, 0x57fa, 0xe410, 0x6f9f, 0xa904, 0x89b3, 0x1, 0x1);
        gbc.writeMem(0x7a46, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x57fa);
        EXPECT(gbc.pc(), 0x7a48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01ED
        gbc.setState(0x4d5a, 0x2a2, 0x110, 0x563, 0x6e5b, 0x5508, 0x0, 0x0);
        gbc.writeMem(0x4d5a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2a2);
        EXPECT(gbc.pc(), 0x4d5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01EE
        gbc.setState(0x5b66, 0xfc64, 0x3980, 0x10c, 0x6300, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x5b66, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfc64);
        EXPECT(gbc.pc(), 0x5b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01EF
        gbc.setState(0x4276, 0x5ba1, 0xeb70, 0x58f1, 0xdcb0, 0xa045, 0x1, 0x1);
        gbc.writeMem(0x4276, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x5ba1);
        EXPECT(gbc.pc(), 0x4278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01F0
        gbc.setState(0x61b1, 0xff41, 0x30d0, 0x68e5, 0x1c46, 0x5b30, 0x0, 0x0);
        gbc.writeMem(0x61b1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xff41);
        EXPECT(gbc.pc(), 0x61b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01F2
        gbc.setState(0xbd74, 0x132f, 0xb3f0, 0xf889, 0x1a33, 0x94dd, 0x0, 0x1);
        gbc.writeMem(0xbd74, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x132f);
        EXPECT(gbc.pc(), 0xbd76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd74), 0xcb);
        EXPECT(gbc.readMem(0xbd75), 0x15);
        // CB 15 01F3
        gbc.setState(0x2893, 0x31ff, 0x3a50, 0x7185, 0x5279, 0xfd56, 0x1, 0x1);
        gbc.writeMem(0x2893, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x31ff);
        EXPECT(gbc.pc(), 0x2895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01F4
        gbc.setState(0x8869, 0xb5e5, 0x6b40, 0x9224, 0x94ce, 0xb847, 0x1, 0x0);
        gbc.writeMem(0x8869, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb5e5);
        EXPECT(gbc.pc(), 0x886b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8869), 0xcb);
        EXPECT(gbc.readMem(0x886a), 0x15);
        // CB 15 01F5
        gbc.setState(0xb741, 0x6bbc, 0x58e0, 0xb80b, 0x5dd2, 0x37d2, 0x0, 0x1);
        gbc.writeMem(0xb741, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6bbc);
        EXPECT(gbc.pc(), 0xb743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb741), 0xcb);
        EXPECT(gbc.readMem(0xb742), 0x15);
        // CB 15 01F6
        gbc.setState(0xdfaf, 0x5c71, 0x8a50, 0xa4e2, 0x43b1, 0xfcea, 0x0, 0x0);
        gbc.writeMem(0xdfaf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5c71);
        EXPECT(gbc.pc(), 0xdfb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfaf), 0xcb);
        EXPECT(gbc.readMem(0xdfb0), 0x15);
        // CB 15 01F7
        gbc.setState(0x7aed, 0x18e, 0xf140, 0xa56d, 0x944d, 0x2324, 0x1, 0x0);
        gbc.writeMem(0x7aed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x18e);
        EXPECT(gbc.pc(), 0x7aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01F8
        gbc.setState(0x186a, 0xe527, 0xd5d0, 0x550e, 0xf512, 0xc7ab, 0x1, 0x0);
        gbc.writeMem(0x186a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe527);
        EXPECT(gbc.pc(), 0x186c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01F9
        gbc.setState(0xc91d, 0x4139, 0x6220, 0x8747, 0x6798, 0xcbf1, 0x1, 0x1);
        gbc.writeMem(0xc91d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4139);
        EXPECT(gbc.pc(), 0xc91f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91d), 0xcb);
        EXPECT(gbc.readMem(0xc91e), 0x15);
        // CB 15 01FA
        gbc.setState(0xa313, 0xc6dc, 0x5cd0, 0xf243, 0x7f30, 0xb329, 0x0, 0x0);
        gbc.writeMem(0xa313, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc6dc);
        EXPECT(gbc.pc(), 0xa315);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa313), 0xcb);
        EXPECT(gbc.readMem(0xa314), 0x15);
        // CB 15 01FB
        gbc.setState(0x1336, 0xca14, 0xa2a0, 0x8fe6, 0xfbf8, 0x184b, 0x1, 0x1);
        gbc.writeMem(0x1336, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xca14);
        EXPECT(gbc.pc(), 0x1338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01FC
        gbc.setState(0x5705, 0xe23d, 0x8060, 0x20bc, 0x27b3, 0x61fa, 0x1, 0x1);
        gbc.writeMem(0x5705, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe23d);
        EXPECT(gbc.pc(), 0x5707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 01FD
        gbc.setState(0x6444, 0xbc65, 0x37a0, 0x4965, 0x5abd, 0x9b61, 0x0, 0x1);
        gbc.writeMem(0x6444, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xbc65);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 01FE
        gbc.setState(0xdc84, 0x86f0, 0x1f70, 0xc815, 0x90dd, 0x1bb, 0x1, 0x1);
        gbc.writeMem(0xdc84, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x86f0);
        EXPECT(gbc.pc(), 0xdc86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc84), 0xcb);
        EXPECT(gbc.readMem(0xdc85), 0x15);
        // CB 15 01FF
        gbc.setState(0x4b8e, 0xd285, 0x7d20, 0x96b9, 0xf7f, 0x6597, 0x1, 0x0);
        gbc.writeMem(0x4b8e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xd285);
        EXPECT(gbc.pc(), 0x4b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0200
        gbc.setState(0x9d9, 0xb4f7, 0x860, 0x3639, 0x9cd, 0x4a12, 0x1, 0x1);
        gbc.writeMem(0x9d9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xb4f7);
        EXPECT(gbc.pc(), 0x9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0201
        gbc.setState(0x2d2c, 0x64e, 0x6940, 0x8af7, 0x66ce, 0xeb5a, 0x1, 0x0);
        gbc.writeMem(0x2d2c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x64e);
        EXPECT(gbc.pc(), 0x2d2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0202
        gbc.setState(0xea41, 0x4720, 0x6630, 0xa61, 0x18af, 0x9272, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4720);
        EXPECT(gbc.pc(), 0xea43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea41), 0xcb);
        EXPECT(gbc.readMem(0xea42), 0x15);
        // CB 15 0203
        gbc.setState(0x74da, 0xf179, 0xd90, 0x912c, 0xbf8e, 0x70d1, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xf179);
        EXPECT(gbc.pc(), 0x74dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0204
        gbc.setState(0x6d3d, 0xd4dd, 0x5950, 0x3bb0, 0x7e34, 0x2af4, 0x0, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd4dd);
        EXPECT(gbc.pc(), 0x6d3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0205
        gbc.setState(0x2f5e, 0x9090, 0x5d50, 0xedce, 0xe482, 0xc24c, 0x1, 0x0);
        gbc.writeMem(0x2f5e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x9090);
        EXPECT(gbc.pc(), 0x2f60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0206
        gbc.setState(0xacbd, 0xb941, 0x9200, 0x8d7e, 0xd396, 0xd2a8, 0x1, 0x1);
        gbc.writeMem(0xacbd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xb941);
        EXPECT(gbc.pc(), 0xacbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacbd), 0xcb);
        EXPECT(gbc.readMem(0xacbe), 0x15);
        // CB 15 0207
        gbc.setState(0x294, 0xc53a, 0xdc0, 0x675b, 0xade8, 0x26eb, 0x1, 0x1);
        gbc.writeMem(0x294, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc53a);
        EXPECT(gbc.pc(), 0x296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0208
        gbc.setState(0xa65b, 0x83b5, 0xcbf0, 0x108, 0x2538, 0xcab7, 0x1, 0x1);
        gbc.writeMem(0xa65b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x83b5);
        EXPECT(gbc.pc(), 0xa65d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65b), 0xcb);
        EXPECT(gbc.readMem(0xa65c), 0x15);
        // CB 15 0209
        gbc.setState(0xdf72, 0xe142, 0xd4b0, 0x6f0d, 0xfe44, 0xbd84, 0x1, 0x1);
        gbc.writeMem(0xdf72, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe142);
        EXPECT(gbc.pc(), 0xdf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf72), 0xcb);
        EXPECT(gbc.readMem(0xdf73), 0x15);
        // CB 15 020A
        gbc.setState(0x3015, 0xbee2, 0xed60, 0xd377, 0x5d58, 0xe69c, 0x1, 0x0);
        gbc.writeMem(0x3015, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xbee2);
        EXPECT(gbc.pc(), 0x3017);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 020B
        gbc.setState(0xbccf, 0x2ec7, 0x7f0, 0x92b7, 0xd60f, 0xfe66, 0x0, 0x0);
        gbc.writeMem(0xbccf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x2ec7);
        EXPECT(gbc.pc(), 0xbcd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbccf), 0xcb);
        EXPECT(gbc.readMem(0xbcd0), 0x15);
        // CB 15 020D
        gbc.setState(0x2435, 0xca72, 0xda60, 0x2860, 0x3255, 0x288d, 0x0, 0x1);
        gbc.writeMem(0x2435, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xca72);
        EXPECT(gbc.pc(), 0x2437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 020E
        gbc.setState(0xdb88, 0x4049, 0x5a80, 0x113d, 0xeb22, 0x9575, 0x0, 0x0);
        gbc.writeMem(0xdb88, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4049);
        EXPECT(gbc.pc(), 0xdb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb88), 0xcb);
        EXPECT(gbc.readMem(0xdb89), 0x15);
        // CB 15 020F
        gbc.setState(0xa111, 0x1104, 0x4ae0, 0x7305, 0xfbc3, 0xb61e, 0x1, 0x1);
        gbc.writeMem(0xa111, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1104);
        EXPECT(gbc.pc(), 0xa113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa111), 0xcb);
        EXPECT(gbc.readMem(0xa112), 0x15);
        // CB 15 0210
        gbc.setState(0x2ae2, 0xdcef, 0xa4a0, 0x9457, 0x451e, 0x9124, 0x1, 0x0);
        gbc.writeMem(0x2ae2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdcef);
        EXPECT(gbc.pc(), 0x2ae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0211
        gbc.setState(0x7674, 0x3126, 0xd4f0, 0x6c81, 0xd1e4, 0xc431, 0x1, 0x0);
        gbc.writeMem(0x7674, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3126);
        EXPECT(gbc.pc(), 0x7676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0212
        gbc.setState(0x4cb, 0x7ece, 0x74b0, 0xe91f, 0xf17f, 0xa62a, 0x0, 0x0);
        gbc.writeMem(0x4cb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7ece);
        EXPECT(gbc.pc(), 0x4cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0213
        gbc.setState(0x72d5, 0x1f2f, 0x3650, 0x62c1, 0xb029, 0x5cf4, 0x1, 0x0);
        gbc.writeMem(0x72d5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x1f2f);
        EXPECT(gbc.pc(), 0x72d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0214
        gbc.setState(0x3472, 0x33d2, 0xadb0, 0x77ad, 0xee48, 0xd19e, 0x1, 0x0);
        gbc.writeMem(0x3472, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x33d2);
        EXPECT(gbc.pc(), 0x3474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0215
        gbc.setState(0x1388, 0xc0b7, 0x6050, 0xad37, 0xfd27, 0x9353, 0x1, 0x1);
        gbc.writeMem(0x1388, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc0b7);
        EXPECT(gbc.pc(), 0x138a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0216
        gbc.setState(0xc262, 0x6cc1, 0x7760, 0xbcbc, 0x5627, 0x3155, 0x0, 0x1);
        gbc.writeMem(0xc262, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x6cc1);
        EXPECT(gbc.pc(), 0xc264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc262), 0xcb);
        EXPECT(gbc.readMem(0xc263), 0x15);
        // CB 15 0217
        gbc.setState(0x5112, 0x6b4b, 0x1b00, 0xee2d, 0x8525, 0xeaf, 0x0, 0x0);
        gbc.writeMem(0x5112, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6b4b);
        EXPECT(gbc.pc(), 0x5114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0218
        gbc.setState(0x539, 0x22f9, 0x5510, 0x65b5, 0xa376, 0x228f, 0x1, 0x0);
        gbc.writeMem(0x539, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x22f9);
        EXPECT(gbc.pc(), 0x53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0219
        gbc.setState(0x1e6d, 0xf264, 0x2410, 0x4a24, 0x9c25, 0x4563, 0x0, 0x0);
        gbc.writeMem(0x1e6d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf264);
        EXPECT(gbc.pc(), 0x1e6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 021A
        gbc.setState(0xc07e, 0x25c0, 0xc3f0, 0x9564, 0xda24, 0xb15a, 0x0, 0x0);
        gbc.writeMem(0xc07e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x25c0);
        EXPECT(gbc.pc(), 0xc080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc07e), 0xcb);
        EXPECT(gbc.readMem(0xc07f), 0x15);
        // CB 15 021B
        gbc.setState(0x65fc, 0x7ec0, 0xcd50, 0x1371, 0xf301, 0x9883, 0x0, 0x0);
        gbc.writeMem(0x65fc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7ec0);
        EXPECT(gbc.pc(), 0x65fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 021C
        gbc.setState(0x72b9, 0xf1c7, 0xd810, 0xeefb, 0xa4fe, 0x9872, 0x1, 0x0);
        gbc.writeMem(0x72b9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf1c7);
        EXPECT(gbc.pc(), 0x72bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 021D
        gbc.setState(0x2aa4, 0x2322, 0xb290, 0x84d2, 0xfb60, 0x8989, 0x1, 0x1);
        gbc.writeMem(0x2aa4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x2322);
        EXPECT(gbc.pc(), 0x2aa6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 021E
        gbc.setState(0xc886, 0x4544, 0x2e10, 0x8301, 0xf833, 0x94de, 0x0, 0x0);
        gbc.writeMem(0xc886, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4544);
        EXPECT(gbc.pc(), 0xc888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc886), 0xcb);
        EXPECT(gbc.readMem(0xc887), 0x15);
        // CB 15 021F
        gbc.setState(0x5e44, 0x36fa, 0x8330, 0x29a9, 0xfbdb, 0xcd1a, 0x1, 0x1);
        gbc.writeMem(0x5e44, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x36fa);
        EXPECT(gbc.pc(), 0x5e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0220
        gbc.setState(0x3c15, 0x2c6d, 0x2ba0, 0x6755, 0xf7c0, 0xa7e, 0x0, 0x0);
        gbc.writeMem(0x3c15, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2c6d);
        EXPECT(gbc.pc(), 0x3c17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0221
        gbc.setState(0x9d1c, 0x1833, 0xadb0, 0x3b2b, 0x7705, 0x605e, 0x0, 0x0);
        gbc.writeMem(0x9d1c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x9d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d1c), 0xcb);
        EXPECT(gbc.readMem(0x9d1d), 0x15);
        // CB 15 0222
        gbc.setState(0x13c8, 0xc958, 0x1690, 0xee81, 0x6454, 0x21c0, 0x0, 0x1);
        gbc.writeMem(0x13c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc958);
        EXPECT(gbc.pc(), 0x13ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0223
        gbc.setState(0xc528, 0xa840, 0xce60, 0xc783, 0xbc52, 0x4226, 0x0, 0x0);
        gbc.writeMem(0xc528, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa840);
        EXPECT(gbc.pc(), 0xc52a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc528), 0xcb);
        EXPECT(gbc.readMem(0xc529), 0x15);
        // CB 15 0224
        gbc.setState(0x4047, 0x4470, 0xd8f0, 0xd374, 0xa54, 0xc613, 0x1, 0x1);
        gbc.writeMem(0x4047, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x4470);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0225
        gbc.setState(0x1d1d, 0x7bd5, 0xed80, 0xc7d3, 0x2e6f, 0x16b6, 0x0, 0x1);
        gbc.writeMem(0x1d1d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x7bd5);
        EXPECT(gbc.pc(), 0x1d1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0226
        gbc.setState(0x348, 0xb779, 0x5980, 0x4a0e, 0xa897, 0x8f85, 0x1, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb779);
        EXPECT(gbc.pc(), 0x34a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0227
        gbc.setState(0x22bf, 0x3d00, 0x3310, 0xc85f, 0x927c, 0x9264, 0x0, 0x0);
        gbc.writeMem(0x22bf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3d00);
        EXPECT(gbc.pc(), 0x22c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0228
        gbc.setState(0xc488, 0x1ea2, 0xf020, 0x24d9, 0x9f8e, 0x7889, 0x0, 0x1);
        gbc.writeMem(0xc488, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x1ea2);
        EXPECT(gbc.pc(), 0xc48a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc488), 0xcb);
        EXPECT(gbc.readMem(0xc489), 0x15);
        // CB 15 0229
        gbc.setState(0xfcc, 0x90d8, 0xa400, 0x383b, 0x727d, 0xbe55, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x90d8);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 022A
        gbc.setState(0x7c0f, 0xd488, 0xa720, 0x1eac, 0xf2b9, 0xbd7a, 0x0, 0x0);
        gbc.writeMem(0x7c0f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xd488);
        EXPECT(gbc.pc(), 0x7c11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 022B
        gbc.setState(0x670f, 0xac4d, 0xf830, 0x57d3, 0xc179, 0xcdaa, 0x1, 0x1);
        gbc.writeMem(0x670f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xac4d);
        EXPECT(gbc.pc(), 0x6711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 022C
        gbc.setState(0x9939, 0x5f42, 0xd280, 0xef24, 0xf9c1, 0xbc41, 0x1, 0x0);
        gbc.writeMem(0x9939, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5f42);
        EXPECT(gbc.pc(), 0x993b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9939), 0xcb);
        EXPECT(gbc.readMem(0x993a), 0x15);
        // CB 15 022D
        gbc.setState(0x9bb6, 0x326c, 0xbba0, 0x1fae, 0xd73a, 0xc6f7, 0x1, 0x1);
        gbc.writeMem(0x9bb6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x326c);
        EXPECT(gbc.pc(), 0x9bb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb6), 0xcb);
        EXPECT(gbc.readMem(0x9bb7), 0x15);
        // CB 15 022E
        gbc.setState(0xb255, 0xf100, 0xde0, 0x54e8, 0x912a, 0xe979, 0x0, 0x1);
        gbc.writeMem(0xb255, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf100);
        EXPECT(gbc.pc(), 0xb257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb255), 0xcb);
        EXPECT(gbc.readMem(0xb256), 0x15);
        // CB 15 022F
        gbc.setState(0x5e2e, 0x20bc, 0x7d10, 0x5c90, 0xc7c4, 0x3d97, 0x1, 0x1);
        gbc.writeMem(0x5e2e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x20bc);
        EXPECT(gbc.pc(), 0x5e30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0230
        gbc.setState(0x8fd4, 0xc489, 0x7f90, 0xf2ee, 0x7912, 0x24a9, 0x0, 0x1);
        gbc.writeMem(0x8fd4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xc489);
        EXPECT(gbc.pc(), 0x8fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd4), 0xcb);
        EXPECT(gbc.readMem(0x8fd5), 0x15);
        // CB 15 0231
        gbc.setState(0x410c, 0xd657, 0x5930, 0x6d44, 0x9e50, 0x7947, 0x1, 0x0);
        gbc.writeMem(0x410c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xd657);
        EXPECT(gbc.pc(), 0x410e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0232
        gbc.setState(0xe7c3, 0xe61b, 0x6090, 0x5611, 0x4ce5, 0x40e8, 0x0, 0x1);
        gbc.writeMem(0xe7c3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe61b);
        EXPECT(gbc.pc(), 0xe7c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7c3), 0xcb);
        EXPECT(gbc.readMem(0xe7c4), 0x15);
        // CB 15 0233
        gbc.setState(0xb936, 0x44f5, 0xa030, 0x6d2c, 0xeb6, 0x2dbd, 0x1, 0x1);
        gbc.writeMem(0xb936, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x44f5);
        EXPECT(gbc.pc(), 0xb938);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb936), 0xcb);
        EXPECT(gbc.readMem(0xb937), 0x15);
        // CB 15 0234
        gbc.setState(0x46c7, 0xd0e2, 0xc850, 0x88b0, 0x9a24, 0x25cf, 0x0, 0x0);
        gbc.writeMem(0x46c7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xd0e2);
        EXPECT(gbc.pc(), 0x46c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0235
        gbc.setState(0x2185, 0x473c, 0xaa50, 0x4d81, 0x2d7d, 0x3481, 0x1, 0x0);
        gbc.writeMem(0x2185, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x473c);
        EXPECT(gbc.pc(), 0x2187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0236
        gbc.setState(0x27b7, 0xbbf2, 0x8490, 0xfec3, 0x92a9, 0x49d8, 0x1, 0x0);
        gbc.writeMem(0x27b7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xbbf2);
        EXPECT(gbc.pc(), 0x27b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0237
        gbc.setState(0xd5b1, 0x46bb, 0xd3e0, 0xc22d, 0x8a33, 0xbb83, 0x1, 0x0);
        gbc.writeMem(0xd5b1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x46bb);
        EXPECT(gbc.pc(), 0xd5b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5b1), 0xcb);
        EXPECT(gbc.readMem(0xd5b2), 0x15);
        // CB 15 0238
        gbc.setState(0xb3a8, 0xa9b3, 0x43e0, 0xecaa, 0x7fcc, 0xdb25, 0x1, 0x1);
        gbc.writeMem(0xb3a8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xa9b3);
        EXPECT(gbc.pc(), 0xb3aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3a8), 0xcb);
        EXPECT(gbc.readMem(0xb3a9), 0x15);
        // CB 15 0239
        gbc.setState(0x366a, 0x1601, 0xfe70, 0x6a1d, 0x7658, 0x73e7, 0x0, 0x1);
        gbc.writeMem(0x366a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1601);
        EXPECT(gbc.pc(), 0x366c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 023A
        gbc.setState(0xe648, 0xce1, 0x2d00, 0x5514, 0x891c, 0x9193, 0x1, 0x0);
        gbc.writeMem(0xe648, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xce1);
        EXPECT(gbc.pc(), 0xe64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe648), 0xcb);
        EXPECT(gbc.readMem(0xe649), 0x15);
        // CB 15 023B
        gbc.setState(0x2465, 0xac03, 0x9960, 0xa1c0, 0xf725, 0x7ad0, 0x0, 0x1);
        gbc.writeMem(0x2465, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xac03);
        EXPECT(gbc.pc(), 0x2467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 023C
        gbc.setState(0xd223, 0x8755, 0x7420, 0x886c, 0xb3fe, 0xfb21, 0x1, 0x0);
        gbc.writeMem(0xd223, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8755);
        EXPECT(gbc.pc(), 0xd225);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd223), 0xcb);
        EXPECT(gbc.readMem(0xd224), 0x15);
        // CB 15 023D
        gbc.setState(0x1c03, 0x9743, 0x5dd0, 0xcc3e, 0x9aae, 0x3262, 0x0, 0x0);
        gbc.writeMem(0x1c03, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9743);
        EXPECT(gbc.pc(), 0x1c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 023E
        gbc.setState(0x3d64, 0x11c8, 0xd920, 0x1aa5, 0xd27f, 0x157e, 0x1, 0x1);
        gbc.writeMem(0x3d64, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x11c8);
        EXPECT(gbc.pc(), 0x3d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0240
        gbc.setState(0xead9, 0x8365, 0xd440, 0x987b, 0x1cf3, 0xd31f, 0x1, 0x0);
        gbc.writeMem(0xead9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8365);
        EXPECT(gbc.pc(), 0xeadb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead9), 0xcb);
        EXPECT(gbc.readMem(0xeada), 0x15);
        // CB 15 0241
        gbc.setState(0xb350, 0xfa6a, 0x77c0, 0x515a, 0xb589, 0x7cb8, 0x0, 0x0);
        gbc.writeMem(0xb350, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0xb352);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb350), 0xcb);
        EXPECT(gbc.readMem(0xb351), 0x15);
        // CB 15 0242
        gbc.setState(0x235b, 0xc9ff, 0x6be0, 0x2a0b, 0x2266, 0x2e0, 0x0, 0x1);
        gbc.writeMem(0x235b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc9ff);
        EXPECT(gbc.pc(), 0x235d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0243
        gbc.setState(0x19, 0xa5b1, 0x2390, 0x3f24, 0x7a11, 0xbcdc, 0x1, 0x1);
        gbc.writeMem(0x19, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xa5b1);
        EXPECT(gbc.pc(), 0x1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0244
        gbc.setState(0x3efc, 0x298b, 0xef20, 0x2f8d, 0x1fb5, 0x5327, 0x0, 0x0);
        gbc.writeMem(0x3efc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x298b);
        EXPECT(gbc.pc(), 0x3efe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0245
        gbc.setState(0x75a5, 0x1bc8, 0x5640, 0x11ee, 0x7ade, 0x8ccb, 0x0, 0x1);
        gbc.writeMem(0x75a5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1bc8);
        EXPECT(gbc.pc(), 0x75a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0246
        gbc.setState(0x6448, 0xc333, 0xa820, 0x7cb6, 0xbd91, 0x79e9, 0x0, 0x1);
        gbc.writeMem(0x6448, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc333);
        EXPECT(gbc.pc(), 0x644a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0247
        gbc.setState(0x189a, 0xe2c9, 0x4400, 0x31d, 0xbf60, 0x3283, 0x1, 0x1);
        gbc.writeMem(0x189a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe2c9);
        EXPECT(gbc.pc(), 0x189c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0248
        gbc.setState(0xae36, 0xe672, 0x8240, 0x7945, 0x4243, 0x61f, 0x1, 0x1);
        gbc.writeMem(0xae36, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe672);
        EXPECT(gbc.pc(), 0xae38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae36), 0xcb);
        EXPECT(gbc.readMem(0xae37), 0x15);
        // CB 15 0249
        gbc.setState(0x25aa, 0xb7e5, 0xaa00, 0x27aa, 0xe9ff, 0x5add, 0x0, 0x1);
        gbc.writeMem(0x25aa, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb7e5);
        EXPECT(gbc.pc(), 0x25ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 024A
        gbc.setState(0xb209, 0xd09e, 0x8c10, 0x495a, 0xaa7a, 0x64be, 0x1, 0x1);
        gbc.writeMem(0xb209, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd09e);
        EXPECT(gbc.pc(), 0xb20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb209), 0xcb);
        EXPECT(gbc.readMem(0xb20a), 0x15);
        // CB 15 024B
        gbc.setState(0x3abf, 0xd442, 0x6050, 0x56d, 0x6902, 0x9e9e, 0x1, 0x0);
        gbc.writeMem(0x3abf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd442);
        EXPECT(gbc.pc(), 0x3ac1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 024C
        gbc.setState(0x9c01, 0xe944, 0x5000, 0x3cf1, 0xf5a4, 0x85cf, 0x1, 0x1);
        gbc.writeMem(0x9c01, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xe944);
        EXPECT(gbc.pc(), 0x9c03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c01), 0xcb);
        EXPECT(gbc.readMem(0x9c02), 0x15);
        // CB 15 024D
        gbc.setState(0xe32d, 0x9fdf, 0x1a70, 0x55e7, 0x3af1, 0x96b6, 0x1, 0x0);
        gbc.writeMem(0xe32d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x9fdf);
        EXPECT(gbc.pc(), 0xe32f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe32d), 0xcb);
        EXPECT(gbc.readMem(0xe32e), 0x15);
        // CB 15 024E
        gbc.setState(0x782c, 0x7495, 0xecf0, 0xcbbd, 0xb16, 0x6b08, 0x0, 0x1);
        gbc.writeMem(0x782c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7495);
        EXPECT(gbc.pc(), 0x782e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 024F
        gbc.setState(0xcff5, 0xf8da, 0xcec0, 0x3cbb, 0xa5a5, 0x3c92, 0x1, 0x0);
        gbc.writeMem(0xcff5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xf8da);
        EXPECT(gbc.pc(), 0xcff7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff5), 0xcb);
        EXPECT(gbc.readMem(0xcff6), 0x15);
        // CB 15 0250
        gbc.setState(0x6426, 0x4af4, 0x3d10, 0x8990, 0xc5c2, 0x4660, 0x0, 0x0);
        gbc.writeMem(0x6426, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x4af4);
        EXPECT(gbc.pc(), 0x6428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0251
        gbc.setState(0x9af, 0xe94b, 0x4920, 0x6924, 0x476c, 0xdfed, 0x0, 0x0);
        gbc.writeMem(0x9af, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe94b);
        EXPECT(gbc.pc(), 0x9b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0252
        gbc.setState(0x5a94, 0xd44a, 0xbc0, 0x206b, 0x610, 0xb4d6, 0x0, 0x1);
        gbc.writeMem(0x5a94, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xd44a);
        EXPECT(gbc.pc(), 0x5a96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0253
        gbc.setState(0x768d, 0x7ddd, 0xa9e0, 0xa190, 0xb428, 0x500a, 0x0, 0x1);
        gbc.writeMem(0x768d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7ddd);
        EXPECT(gbc.pc(), 0x768f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0255
        gbc.setState(0xd174, 0x307b, 0xd070, 0xfbd3, 0x5b57, 0x4488, 0x1, 0x1);
        gbc.writeMem(0xd174, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x307b);
        EXPECT(gbc.pc(), 0xd176);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd174), 0xcb);
        EXPECT(gbc.readMem(0xd175), 0x15);
        // CB 15 0256
        gbc.setState(0xefbd, 0xa159, 0x7bd0, 0x412e, 0x797, 0x481a, 0x1, 0x1);
        gbc.writeMem(0xefbd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa159);
        EXPECT(gbc.pc(), 0xefbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefbd), 0xcb);
        EXPECT(gbc.readMem(0xefbe), 0x15);
        // CB 15 0257
        gbc.setState(0x8c7a, 0xd2d6, 0xb70, 0x45ec, 0x7aed, 0x90f, 0x0, 0x1);
        gbc.writeMem(0x8c7a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd2d6);
        EXPECT(gbc.pc(), 0x8c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c7a), 0xcb);
        EXPECT(gbc.readMem(0x8c7b), 0x15);
        // CB 15 0258
        gbc.setState(0xba9f, 0xca49, 0x4a50, 0xdd66, 0x1973, 0x4f1, 0x0, 0x0);
        gbc.writeMem(0xba9f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xca49);
        EXPECT(gbc.pc(), 0xbaa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9f), 0xcb);
        EXPECT(gbc.readMem(0xbaa0), 0x15);
        // CB 15 0259
        gbc.setState(0x1e76, 0x3023, 0xf450, 0x3a33, 0x55b7, 0xda0d, 0x1, 0x1);
        gbc.writeMem(0x1e76, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3023);
        EXPECT(gbc.pc(), 0x1e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 025B
        gbc.setState(0xb7ad, 0x7ea6, 0xc260, 0xae27, 0x8729, 0x1054, 0x1, 0x1);
        gbc.writeMem(0xb7ad, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7ea6);
        EXPECT(gbc.pc(), 0xb7af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7ad), 0xcb);
        EXPECT(gbc.readMem(0xb7ae), 0x15);
        // CB 15 025D
        gbc.setState(0x3959, 0x43ac, 0xa450, 0xa996, 0x37a7, 0x9dd4, 0x1, 0x1);
        gbc.writeMem(0x3959, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x43ac);
        EXPECT(gbc.pc(), 0x395b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 025E
        gbc.setState(0xa5be, 0xa9d0, 0x63f0, 0x267e, 0x6307, 0x6f3a, 0x1, 0x0);
        gbc.writeMem(0xa5be, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa9d0);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5be), 0xcb);
        EXPECT(gbc.readMem(0xa5bf), 0x15);
        // CB 15 025F
        gbc.setState(0x8c72, 0x36be, 0x92d0, 0x84e8, 0xf403, 0xb47e, 0x0, 0x0);
        gbc.writeMem(0x8c72, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0x8c74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c72), 0xcb);
        EXPECT(gbc.readMem(0x8c73), 0x15);
        // CB 15 0260
        gbc.setState(0x2f3b, 0x5287, 0xbda0, 0x3646, 0xd097, 0x3685, 0x0, 0x0);
        gbc.writeMem(0x2f3b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5287);
        EXPECT(gbc.pc(), 0x2f3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0261
        gbc.setState(0x4049, 0x89b0, 0x5a30, 0x8a62, 0xf6e0, 0x6024, 0x1, 0x0);
        gbc.writeMem(0x4049, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x89b0);
        EXPECT(gbc.pc(), 0x404b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0262
        gbc.setState(0x4a04, 0x97fe, 0xafd0, 0x1b58, 0x4792, 0xa0db, 0x1, 0x1);
        gbc.writeMem(0x4a04, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x97fe);
        EXPECT(gbc.pc(), 0x4a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0263
        gbc.setState(0xca71, 0x8287, 0xc570, 0x2133, 0x8476, 0x514b, 0x0, 0x1);
        gbc.writeMem(0xca71, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8287);
        EXPECT(gbc.pc(), 0xca73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca71), 0xcb);
        EXPECT(gbc.readMem(0xca72), 0x15);
        // CB 15 0264
        gbc.setState(0xdd98, 0xe16a, 0x1860, 0x205f, 0xecac, 0x1155, 0x1, 0x1);
        gbc.writeMem(0xdd98, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe16a);
        EXPECT(gbc.pc(), 0xdd9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd98), 0xcb);
        EXPECT(gbc.readMem(0xdd99), 0x15);
        // CB 15 0265
        gbc.setState(0x4160, 0x3567, 0x9b00, 0x3129, 0xcb1c, 0x28b5, 0x1, 0x0);
        gbc.writeMem(0x4160, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x3567);
        EXPECT(gbc.pc(), 0x4162);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0266
        gbc.setState(0x3795, 0xb28c, 0xa870, 0x623, 0xeea1, 0x3be9, 0x0, 0x1);
        gbc.writeMem(0x3795, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb28c);
        EXPECT(gbc.pc(), 0x3797);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0267
        gbc.setState(0x7bc8, 0x61b3, 0x1040, 0x79a7, 0x61ec, 0xb060, 0x0, 0x0);
        gbc.writeMem(0x7bc8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x61b3);
        EXPECT(gbc.pc(), 0x7bca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0268
        gbc.setState(0xbf17, 0x2188, 0x82d0, 0xa7ae, 0x3511, 0xf398, 0x1, 0x0);
        gbc.writeMem(0xbf17, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x2188);
        EXPECT(gbc.pc(), 0xbf19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf17), 0xcb);
        EXPECT(gbc.readMem(0xbf18), 0x15);
        // CB 15 0269
        gbc.setState(0xe3b, 0xac8, 0xbfc0, 0x79b7, 0x9c9e, 0xf5bb, 0x0, 0x1);
        gbc.writeMem(0xe3b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xac8);
        EXPECT(gbc.pc(), 0xe3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 026A
        gbc.setState(0x67cf, 0xd14c, 0xb060, 0x45c3, 0x6850, 0x642a, 0x0, 0x0);
        gbc.writeMem(0x67cf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd14c);
        EXPECT(gbc.pc(), 0x67d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 026B
        gbc.setState(0xcfb2, 0xf25e, 0xa560, 0xe200, 0xe468, 0x79fe, 0x1, 0x1);
        gbc.writeMem(0xcfb2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf25e);
        EXPECT(gbc.pc(), 0xcfb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb2), 0xcb);
        EXPECT(gbc.readMem(0xcfb3), 0x15);
        // CB 15 026C
        gbc.setState(0x34c5, 0xf9d, 0x40b0, 0x1857, 0x9f40, 0x3476, 0x0, 0x0);
        gbc.writeMem(0x34c5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xf9d);
        EXPECT(gbc.pc(), 0x34c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 026D
        gbc.setState(0x9110, 0xe559, 0xd3c0, 0x6a96, 0xaaef, 0x2b4, 0x1, 0x1);
        gbc.writeMem(0x9110, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe559);
        EXPECT(gbc.pc(), 0x9112);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9110), 0xcb);
        EXPECT(gbc.readMem(0x9111), 0x15);
        // CB 15 026E
        gbc.setState(0x9516, 0x5a0b, 0x6630, 0xec4a, 0x548, 0x8bcf, 0x0, 0x1);
        gbc.writeMem(0x9516, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5a0b);
        EXPECT(gbc.pc(), 0x9518);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9516), 0xcb);
        EXPECT(gbc.readMem(0x9517), 0x15);
        // CB 15 0270
        gbc.setState(0x4638, 0x9f69, 0xe0a0, 0x75ef, 0x85ff, 0x97b7, 0x0, 0x1);
        gbc.writeMem(0x4638, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x9f69);
        EXPECT(gbc.pc(), 0x463a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0271
        gbc.setState(0x6b43, 0x26c7, 0x6aa0, 0x74c7, 0x368f, 0x4c6a, 0x1, 0x0);
        gbc.writeMem(0x6b43, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x26c7);
        EXPECT(gbc.pc(), 0x6b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0272
        gbc.setState(0xb767, 0x88cd, 0x47f0, 0x6f16, 0x9b84, 0x77d5, 0x0, 0x0);
        gbc.writeMem(0xb767, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x88cd);
        EXPECT(gbc.pc(), 0xb769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb767), 0xcb);
        EXPECT(gbc.readMem(0xb768), 0x15);
        // CB 15 0273
        gbc.setState(0xb78a, 0x5ddb, 0x7700, 0xeca1, 0x6f1c, 0xe9be, 0x1, 0x0);
        gbc.writeMem(0xb78a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x5ddb);
        EXPECT(gbc.pc(), 0xb78c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb78a), 0xcb);
        EXPECT(gbc.readMem(0xb78b), 0x15);
        // CB 15 0274
        gbc.setState(0x81a9, 0x8188, 0xbb50, 0x9d25, 0x6d7, 0x65e6, 0x1, 0x1);
        gbc.writeMem(0x81a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8188);
        EXPECT(gbc.pc(), 0x81ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a9), 0xcb);
        EXPECT(gbc.readMem(0x81aa), 0x15);
        // CB 15 0275
        gbc.setState(0x711b, 0x38b, 0xa260, 0x5f3e, 0xefb5, 0x7a42, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x38b);
        EXPECT(gbc.pc(), 0x711d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0276
        gbc.setState(0x7c8, 0xfba8, 0x37a0, 0x7a80, 0x8ce4, 0xacf9, 0x1, 0x1);
        gbc.writeMem(0x7c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfba8);
        EXPECT(gbc.pc(), 0x7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0277
        gbc.setState(0x3e77, 0x19bc, 0xe070, 0x6dd5, 0x3058, 0xa5a, 0x1, 0x1);
        gbc.writeMem(0x3e77, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x19bc);
        EXPECT(gbc.pc(), 0x3e79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0278
        gbc.setState(0x77d4, 0xba5a, 0xf00, 0xf76e, 0xd1e4, 0x7547, 0x0, 0x0);
        gbc.writeMem(0x77d4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xba5a);
        EXPECT(gbc.pc(), 0x77d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0279
        gbc.setState(0x9f00, 0xda27, 0x50d0, 0x338c, 0xa553, 0x12c3, 0x1, 0x0);
        gbc.writeMem(0x9f00, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xda27);
        EXPECT(gbc.pc(), 0x9f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f00), 0xcb);
        EXPECT(gbc.readMem(0x9f01), 0x15);
        // CB 15 027A
        gbc.setState(0xd00a, 0xba7e, 0x690, 0x109b, 0x6fc0, 0x91f4, 0x1, 0x1);
        gbc.writeMem(0xd00a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xba7e);
        EXPECT(gbc.pc(), 0xd00c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd00a), 0xcb);
        EXPECT(gbc.readMem(0xd00b), 0x15);
        // CB 15 027B
        gbc.setState(0x4578, 0xbd06, 0x5510, 0xf7a4, 0x1211, 0x3403, 0x1, 0x0);
        gbc.writeMem(0x4578, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xbd06);
        EXPECT(gbc.pc(), 0x457a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 027C
        gbc.setState(0x9e08, 0xede0, 0xa400, 0x2907, 0xee59, 0x6f8, 0x0, 0x1);
        gbc.writeMem(0x9e08, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xede0);
        EXPECT(gbc.pc(), 0x9e0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e08), 0xcb);
        EXPECT(gbc.readMem(0x9e09), 0x15);
        // CB 15 027D
        gbc.setState(0x9135, 0x1f79, 0xc2a0, 0x1891, 0x2632, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x9135, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1f79);
        EXPECT(gbc.pc(), 0x9137);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9135), 0xcb);
        EXPECT(gbc.readMem(0x9136), 0x15);
        // CB 15 027E
        gbc.setState(0x82df, 0xdcf2, 0x6d70, 0xe99c, 0xb740, 0x3349, 0x1, 0x0);
        gbc.writeMem(0x82df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xdcf2);
        EXPECT(gbc.pc(), 0x82e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82df), 0xcb);
        EXPECT(gbc.readMem(0x82e0), 0x15);
        // CB 15 027F
        gbc.setState(0x7c93, 0x2061, 0xadd0, 0xa1d3, 0xe64a, 0xeefe, 0x0, 0x1);
        gbc.writeMem(0x7c93, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2061);
        EXPECT(gbc.pc(), 0x7c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0280
        gbc.setState(0x9676, 0x7589, 0x410, 0x5b9c, 0x7406, 0xf004, 0x1, 0x0);
        gbc.writeMem(0x9676, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7589);
        EXPECT(gbc.pc(), 0x9678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9676), 0xcb);
        EXPECT(gbc.readMem(0x9677), 0x15);
        // CB 15 0281
        gbc.setState(0xa90, 0x24f9, 0xa8b0, 0xaf2c, 0xb70b, 0x656d, 0x0, 0x1);
        gbc.writeMem(0xa90, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x24f9);
        EXPECT(gbc.pc(), 0xa92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0282
        gbc.setState(0x752f, 0x38a2, 0xe8d0, 0x1e7f, 0xea5, 0xee87, 0x1, 0x0);
        gbc.writeMem(0x752f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x38a2);
        EXPECT(gbc.pc(), 0x7531);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0283
        gbc.setState(0xcd12, 0x2843, 0x5510, 0xd7e2, 0xd11f, 0x5c8, 0x1, 0x1);
        gbc.writeMem(0xcd12, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2843);
        EXPECT(gbc.pc(), 0xcd14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd12), 0xcb);
        EXPECT(gbc.readMem(0xcd13), 0x15);
        // CB 15 0284
        gbc.setState(0x3e8, 0x39ce, 0x6d00, 0xe054, 0x80ce, 0xe477, 0x1, 0x1);
        gbc.writeMem(0x3e8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x39ce);
        EXPECT(gbc.pc(), 0x3ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0285
        gbc.setState(0xd8e1, 0xd182, 0x3360, 0xdb, 0xb625, 0xd8c1, 0x1, 0x1);
        gbc.writeMem(0xd8e1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd182);
        EXPECT(gbc.pc(), 0xd8e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8e1), 0xcb);
        EXPECT(gbc.readMem(0xd8e2), 0x15);
        // CB 15 0286
        gbc.setState(0x83ea, 0x7212, 0xbd60, 0xf10, 0xddc8, 0x1d9, 0x1, 0x1);
        gbc.writeMem(0x83ea, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x7212);
        EXPECT(gbc.pc(), 0x83ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ea), 0xcb);
        EXPECT(gbc.readMem(0x83eb), 0x15);
        // CB 15 0287
        gbc.setState(0xbbb0, 0xfb14, 0x7740, 0x4303, 0x8801, 0x4f61, 0x0, 0x1);
        gbc.writeMem(0xbbb0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xfb14);
        EXPECT(gbc.pc(), 0xbbb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb0), 0xcb);
        EXPECT(gbc.readMem(0xbbb1), 0x15);
        // CB 15 0288
        gbc.setState(0x10d7, 0x80e3, 0x3ff0, 0xf6fb, 0x7230, 0xfbd8, 0x0, 0x1);
        gbc.writeMem(0x10d7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x80e3);
        EXPECT(gbc.pc(), 0x10d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0289
        gbc.setState(0x3cf8, 0x51, 0xbee0, 0x4657, 0x60db, 0xcec7, 0x1, 0x0);
        gbc.writeMem(0x3cf8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x51);
        EXPECT(gbc.pc(), 0x3cfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 028A
        gbc.setState(0x3953, 0x5e4c, 0x4190, 0xde05, 0xd211, 0xca12, 0x0, 0x0);
        gbc.writeMem(0x3953, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5e4c);
        EXPECT(gbc.pc(), 0x3955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 028B
        gbc.setState(0x38a7, 0xcfb5, 0x4800, 0xec7c, 0x6aa4, 0xeef8, 0x0, 0x1);
        gbc.writeMem(0x38a7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcfb5);
        EXPECT(gbc.pc(), 0x38a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 028C
        gbc.setState(0xdf27, 0x282c, 0x4710, 0x5a91, 0x5cae, 0x180, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x282c);
        EXPECT(gbc.pc(), 0xdf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf27), 0xcb);
        EXPECT(gbc.readMem(0xdf28), 0x15);
        // CB 15 028D
        gbc.setState(0x8bb5, 0xb4ca, 0xdb00, 0x1a23, 0xb310, 0xefee, 0x1, 0x0);
        gbc.writeMem(0x8bb5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb4ca);
        EXPECT(gbc.pc(), 0x8bb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bb5), 0xcb);
        EXPECT(gbc.readMem(0x8bb6), 0x15);
        // CB 15 028E
        gbc.setState(0x4d4a, 0xf15d, 0xbd0, 0xb2a3, 0x8b32, 0x5b5b, 0x0, 0x0);
        gbc.writeMem(0x4d4a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0x4d4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 028F
        gbc.setState(0xc1d5, 0x2dfd, 0x2b70, 0x98d, 0xc51c, 0x20c7, 0x1, 0x1);
        gbc.writeMem(0xc1d5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2dfd);
        EXPECT(gbc.pc(), 0xc1d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1d5), 0xcb);
        EXPECT(gbc.readMem(0xc1d6), 0x15);
        // CB 15 0290
        gbc.setState(0xbef8, 0x6415, 0x7620, 0x66d6, 0xda83, 0x45ae, 0x0, 0x1);
        gbc.writeMem(0xbef8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x6415);
        EXPECT(gbc.pc(), 0xbefa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef8), 0xcb);
        EXPECT(gbc.readMem(0xbef9), 0x15);
        // CB 15 0291
        gbc.setState(0x22ed, 0xf0be, 0x2d20, 0xca0, 0x36b1, 0x99b2, 0x1, 0x0);
        gbc.writeMem(0x22ed, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf0be);
        EXPECT(gbc.pc(), 0x22ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0292
        gbc.setState(0x7bab, 0xd239, 0x7ca0, 0xfd4f, 0xfd75, 0xcd39, 0x0, 0x0);
        gbc.writeMem(0x7bab, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd239);
        EXPECT(gbc.pc(), 0x7bad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0293
        gbc.setState(0xa7de, 0x4047, 0xa00, 0xd0df, 0x1acb, 0x3bf9, 0x1, 0x1);
        gbc.writeMem(0xa7de, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4047);
        EXPECT(gbc.pc(), 0xa7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7de), 0xcb);
        EXPECT(gbc.readMem(0xa7df), 0x15);
        // CB 15 0294
        gbc.setState(0xed0b, 0x79f7, 0x9380, 0xdf9, 0xc5fb, 0x96ad, 0x1, 0x0);
        gbc.writeMem(0xed0b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x79f7);
        EXPECT(gbc.pc(), 0xed0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed0b), 0xcb);
        EXPECT(gbc.readMem(0xed0c), 0x15);
        // CB 15 0295
        gbc.setState(0x734b, 0x33a1, 0xaf70, 0xd6d0, 0x5f5c, 0xbbd3, 0x0, 0x1);
        gbc.writeMem(0x734b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x33a1);
        EXPECT(gbc.pc(), 0x734d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0296
        gbc.setState(0x4b19, 0xc7ff, 0x4a70, 0xd89b, 0x937e, 0xec14, 0x1, 0x1);
        gbc.writeMem(0x4b19, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc7ff);
        EXPECT(gbc.pc(), 0x4b1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0297
        gbc.setState(0x85f2, 0x2ad, 0x2df0, 0x991, 0x840c, 0xc715, 0x1, 0x1);
        gbc.writeMem(0x85f2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x2ad);
        EXPECT(gbc.pc(), 0x85f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85f2), 0xcb);
        EXPECT(gbc.readMem(0x85f3), 0x15);
        // CB 15 0298
        gbc.setState(0x51fc, 0xa413, 0x22e0, 0x816a, 0xd8d1, 0x6ce3, 0x0, 0x1);
        gbc.writeMem(0x51fc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa413);
        EXPECT(gbc.pc(), 0x51fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0299
        gbc.setState(0x300d, 0xf48d, 0xc040, 0x778e, 0x5725, 0x7bc2, 0x1, 0x0);
        gbc.writeMem(0x300d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf48d);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 029A
        gbc.setState(0xc304, 0x439d, 0x7650, 0xb476, 0x232c, 0x1de5, 0x1, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x439d);
        EXPECT(gbc.pc(), 0xc306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc304), 0xcb);
        EXPECT(gbc.readMem(0xc305), 0x15);
        // CB 15 029B
        gbc.setState(0x2967, 0xe7a4, 0xe250, 0x59d2, 0xbd72, 0xf0bb, 0x0, 0x1);
        gbc.writeMem(0x2967, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe7a4);
        EXPECT(gbc.pc(), 0x2969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 029C
        gbc.setState(0xacdb, 0xca77, 0xd6b0, 0xd800, 0x47fc, 0x59a0, 0x0, 0x1);
        gbc.writeMem(0xacdb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xca77);
        EXPECT(gbc.pc(), 0xacdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacdb), 0xcb);
        EXPECT(gbc.readMem(0xacdc), 0x15);
        // CB 15 029D
        gbc.setState(0x6892, 0xce40, 0xb1a0, 0x5688, 0xf8db, 0x39bc, 0x0, 0x1);
        gbc.writeMem(0x6892, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xce40);
        EXPECT(gbc.pc(), 0x6894);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 029E
        gbc.setState(0xbffa, 0xc254, 0xd1e0, 0x9685, 0xbd9b, 0x1977, 0x1, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc254);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffa), 0xcb);
        EXPECT(gbc.readMem(0xbffb), 0x15);
        // CB 15 029F
        gbc.setState(0x4c08, 0x3b4e, 0x6080, 0xdd23, 0x6a24, 0x2174, 0x1, 0x0);
        gbc.writeMem(0x4c08, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3b4e);
        EXPECT(gbc.pc(), 0x4c0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02A0
        gbc.setState(0x8ac4, 0x45a1, 0x1e10, 0x2dae, 0xe6f8, 0x5ad3, 0x1, 0x1);
        gbc.writeMem(0x8ac4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x45a1);
        EXPECT(gbc.pc(), 0x8ac6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ac4), 0xcb);
        EXPECT(gbc.readMem(0x8ac5), 0x15);
        // CB 15 02A1
        gbc.setState(0xde4, 0x6640, 0xa1c0, 0x5df, 0xa083, 0x12d4, 0x0, 0x0);
        gbc.writeMem(0xde4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6640);
        EXPECT(gbc.pc(), 0xde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02A2
        gbc.setState(0xed2e, 0x9f40, 0x5cc0, 0x41b3, 0xc062, 0xd33f, 0x1, 0x1);
        gbc.writeMem(0xed2e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x9f40);
        EXPECT(gbc.pc(), 0xed30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed2e), 0xcb);
        EXPECT(gbc.readMem(0xed2f), 0x15);
        // CB 15 02A3
        gbc.setState(0xdac3, 0xfb26, 0x20b0, 0xfe90, 0x3e78, 0x3b4, 0x1, 0x0);
        gbc.writeMem(0xdac3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xfb26);
        EXPECT(gbc.pc(), 0xdac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdac3), 0xcb);
        EXPECT(gbc.readMem(0xdac4), 0x15);
        // CB 15 02A4
        gbc.setState(0x420f, 0xa242, 0xe8e0, 0xd341, 0x5e10, 0xf355, 0x0, 0x1);
        gbc.writeMem(0x420f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa242);
        EXPECT(gbc.pc(), 0x4211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02A5
        gbc.setState(0xc26d, 0x5221, 0xa7a0, 0xf4d1, 0xb7f0, 0x2b2f, 0x1, 0x1);
        gbc.writeMem(0xc26d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x5221);
        EXPECT(gbc.pc(), 0xc26f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc26d), 0xcb);
        EXPECT(gbc.readMem(0xc26e), 0x15);
        // CB 15 02A6
        gbc.setState(0x8d1f, 0x7577, 0x85c0, 0x678a, 0x91ac, 0xe43c, 0x1, 0x1);
        gbc.writeMem(0x8d1f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7577);
        EXPECT(gbc.pc(), 0x8d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d1f), 0xcb);
        EXPECT(gbc.readMem(0x8d20), 0x15);
        // CB 15 02A9
        gbc.setState(0x268f, 0xfe91, 0x4e60, 0xa74d, 0xf318, 0x7795, 0x0, 0x1);
        gbc.writeMem(0x268f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfe91);
        EXPECT(gbc.pc(), 0x2691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02AA
        gbc.setState(0x3afd, 0x37de, 0xa9d0, 0x879, 0x8b9f, 0xe79d, 0x1, 0x0);
        gbc.writeMem(0x3afd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x37de);
        EXPECT(gbc.pc(), 0x3aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02AC
        gbc.setState(0xa962, 0xfcf7, 0xffa0, 0x3abf, 0x5452, 0xb5a9, 0x0, 0x1);
        gbc.writeMem(0xa962, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfcf7);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa962), 0xcb);
        EXPECT(gbc.readMem(0xa963), 0x15);
        // CB 15 02AD
        gbc.setState(0x72e8, 0x4cbf, 0x2b70, 0xca85, 0xa7b7, 0x70fc, 0x1, 0x1);
        gbc.writeMem(0x72e8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4cbf);
        EXPECT(gbc.pc(), 0x72ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02B0
        gbc.setState(0x63df, 0xbadd, 0x96a0, 0x8daf, 0xb2cf, 0x2bd3, 0x1, 0x1);
        gbc.writeMem(0x63df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xbadd);
        EXPECT(gbc.pc(), 0x63e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02B1
        gbc.setState(0x9c52, 0xfdbb, 0x2e90, 0x62c9, 0xb18b, 0x5d71, 0x0, 0x1);
        gbc.writeMem(0x9c52, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0x9c54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c52), 0xcb);
        EXPECT(gbc.readMem(0x9c53), 0x15);
        // CB 15 02B2
        gbc.setState(0x6def, 0xe3d9, 0xafc0, 0x7b64, 0x691e, 0x72a3, 0x0, 0x0);
        gbc.writeMem(0x6def, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe3d9);
        EXPECT(gbc.pc(), 0x6df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02B3
        gbc.setState(0x681c, 0x52fc, 0x53d0, 0x801a, 0x610d, 0x4350, 0x1, 0x1);
        gbc.writeMem(0x681c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x52fc);
        EXPECT(gbc.pc(), 0x681e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02B4
        gbc.setState(0xd48f, 0x4ae9, 0xf0e0, 0x6c4d, 0xf1f2, 0x8a01, 0x0, 0x1);
        gbc.writeMem(0xd48f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x4ae9);
        EXPECT(gbc.pc(), 0xd491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd48f), 0xcb);
        EXPECT(gbc.readMem(0xd490), 0x15);
        // CB 15 02B5
        gbc.setState(0xd904, 0x2c8d, 0x89d0, 0x95b9, 0x344a, 0xeb5f, 0x1, 0x1);
        gbc.writeMem(0xd904, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2c8d);
        EXPECT(gbc.pc(), 0xd906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd904), 0xcb);
        EXPECT(gbc.readMem(0xd905), 0x15);
        // CB 15 02B6
        gbc.setState(0x98b, 0xef03, 0x62e0, 0xd6ab, 0x271, 0xcf60, 0x1, 0x0);
        gbc.writeMem(0x98b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xef03);
        EXPECT(gbc.pc(), 0x98d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02B7
        gbc.setState(0x1da1, 0xd71e, 0x1210, 0x9626, 0xf841, 0x1971, 0x0, 0x1);
        gbc.writeMem(0x1da1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd71e);
        EXPECT(gbc.pc(), 0x1da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02B8
        gbc.setState(0xb692, 0x73d3, 0x6490, 0x158f, 0x6e94, 0xbf80, 0x0, 0x1);
        gbc.writeMem(0xb692, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x73d3);
        EXPECT(gbc.pc(), 0xb694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb692), 0xcb);
        EXPECT(gbc.readMem(0xb693), 0x15);
        // CB 15 02B9
        gbc.setState(0x1e26, 0x904e, 0x2040, 0xed15, 0xff9c, 0x8d78, 0x1, 0x0);
        gbc.writeMem(0x1e26, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x904e);
        EXPECT(gbc.pc(), 0x1e28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02BA
        gbc.setState(0x8a4, 0xe3af, 0xf7e0, 0xa175, 0xe1db, 0x4fdb, 0x1, 0x1);
        gbc.writeMem(0x8a4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xe3af);
        EXPECT(gbc.pc(), 0x8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02BB
        gbc.setState(0x9a77, 0xbca3, 0x53c0, 0xe05f, 0x4d85, 0xdf6e, 0x1, 0x1);
        gbc.writeMem(0x9a77, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbca3);
        EXPECT(gbc.pc(), 0x9a79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a77), 0xcb);
        EXPECT(gbc.readMem(0x9a78), 0x15);
        // CB 15 02BC
        gbc.setState(0x204e, 0x5d09, 0xe620, 0xe2c4, 0x7fde, 0xa399, 0x0, 0x1);
        gbc.writeMem(0x204e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5d09);
        EXPECT(gbc.pc(), 0x2050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02BD
        gbc.setState(0xdd92, 0x7cdf, 0x59b0, 0x43de, 0x7cc6, 0x9aaa, 0x1, 0x1);
        gbc.writeMem(0xdd92, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7cdf);
        EXPECT(gbc.pc(), 0xdd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd92), 0xcb);
        EXPECT(gbc.readMem(0xdd93), 0x15);
        // CB 15 02BE
        gbc.setState(0xbab6, 0xd9ee, 0xf3f0, 0xf83b, 0xd9e2, 0x1b6d, 0x0, 0x0);
        gbc.writeMem(0xbab6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xd9ee);
        EXPECT(gbc.pc(), 0xbab8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbab6), 0xcb);
        EXPECT(gbc.readMem(0xbab7), 0x15);
        // CB 15 02BF
        gbc.setState(0x53d0, 0x51eb, 0x49d0, 0xc56, 0xb533, 0xf5be, 0x1, 0x0);
        gbc.writeMem(0x53d0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x51eb);
        EXPECT(gbc.pc(), 0x53d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02C0
        gbc.setState(0x861f, 0xb6b, 0x8090, 0x9f67, 0x22bb, 0x23f2, 0x0, 0x1);
        gbc.writeMem(0x861f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb6b);
        EXPECT(gbc.pc(), 0x8621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x861f), 0xcb);
        EXPECT(gbc.readMem(0x8620), 0x15);
        // CB 15 02C1
        gbc.setState(0x77b6, 0xd5d0, 0xa350, 0x2f62, 0x8f1b, 0xad38, 0x0, 0x1);
        gbc.writeMem(0x77b6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xd5d0);
        EXPECT(gbc.pc(), 0x77b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02C2
        gbc.setState(0x9a17, 0x445d, 0xff90, 0x1869, 0xa944, 0xb70, 0x0, 0x0);
        gbc.writeMem(0x9a17, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x445d);
        EXPECT(gbc.pc(), 0x9a19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a17), 0xcb);
        EXPECT(gbc.readMem(0x9a18), 0x15);
        // CB 15 02C3
        gbc.setState(0xe317, 0xee38, 0xc6c0, 0xe99c, 0xaa04, 0xfa44, 0x0, 0x1);
        gbc.writeMem(0xe317, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xee38);
        EXPECT(gbc.pc(), 0xe319);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe317), 0xcb);
        EXPECT(gbc.readMem(0xe318), 0x15);
        // CB 15 02C4
        gbc.setState(0x2d0d, 0x7797, 0x25f0, 0xd015, 0xe59a, 0x4b21, 0x1, 0x0);
        gbc.writeMem(0x2d0d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7797);
        EXPECT(gbc.pc(), 0x2d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02C5
        gbc.setState(0x61da, 0xbec5, 0xbc00, 0xd469, 0xe632, 0xc281, 0x1, 0x1);
        gbc.writeMem(0x61da, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbec5);
        EXPECT(gbc.pc(), 0x61dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02C6
        gbc.setState(0xbb94, 0x8130, 0x2aa0, 0x3758, 0xd9b, 0xb4df, 0x0, 0x0);
        gbc.writeMem(0xbb94, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x8130);
        EXPECT(gbc.pc(), 0xbb96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb94), 0xcb);
        EXPECT(gbc.readMem(0xbb95), 0x15);
        // CB 15 02C8
        gbc.setState(0x5cd1, 0x14fe, 0x4f90, 0x103f, 0x38f0, 0x3b26, 0x1, 0x0);
        gbc.writeMem(0x5cd1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x14fe);
        EXPECT(gbc.pc(), 0x5cd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02C9
        gbc.setState(0x4412, 0x4192, 0x2250, 0x4a8d, 0x9497, 0xa54c, 0x1, 0x1);
        gbc.writeMem(0x4412, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4192);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02CA
        gbc.setState(0x3cd3, 0x18bb, 0x89b0, 0x72a3, 0xded4, 0x9bef, 0x0, 0x1);
        gbc.writeMem(0x3cd3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x18bb);
        EXPECT(gbc.pc(), 0x3cd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02CB
        gbc.setState(0x11a7, 0xa145, 0xae00, 0x9b7, 0x28ea, 0xd8d3, 0x1, 0x1);
        gbc.writeMem(0x11a7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xa145);
        EXPECT(gbc.pc(), 0x11a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02CC
        gbc.setState(0x4a98, 0xebec, 0x29e0, 0x3a46, 0x303a, 0x9131, 0x1, 0x0);
        gbc.writeMem(0x4a98, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xebec);
        EXPECT(gbc.pc(), 0x4a9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02CD
        gbc.setState(0x1ff4, 0x78dd, 0x7920, 0x9ebe, 0x8bd1, 0xae4, 0x1, 0x1);
        gbc.writeMem(0x1ff4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x78dd);
        EXPECT(gbc.pc(), 0x1ff6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02CF
        gbc.setState(0xfc4, 0xc2a5, 0x4860, 0xcfd8, 0x5afe, 0x28df, 0x1, 0x1);
        gbc.writeMem(0xfc4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc2a5);
        EXPECT(gbc.pc(), 0xfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02D0
        gbc.setState(0xa3f3, 0x7b44, 0x14b0, 0x1456, 0xebc4, 0xed5d, 0x1, 0x1);
        gbc.writeMem(0xa3f3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7b44);
        EXPECT(gbc.pc(), 0xa3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f3), 0xcb);
        EXPECT(gbc.readMem(0xa3f4), 0x15);
        // CB 15 02D1
        gbc.setState(0x8dde, 0x7e22, 0xc840, 0x6372, 0xc088, 0x5397, 0x1, 0x0);
        gbc.writeMem(0x8dde, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7e22);
        EXPECT(gbc.pc(), 0x8de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8dde), 0xcb);
        EXPECT(gbc.readMem(0x8ddf), 0x15);
        // CB 15 02D2
        gbc.setState(0xbd8f, 0x4592, 0xee70, 0x469c, 0x6419, 0xa5d7, 0x0, 0x1);
        gbc.writeMem(0xbd8f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4592);
        EXPECT(gbc.pc(), 0xbd91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd8f), 0xcb);
        EXPECT(gbc.readMem(0xbd90), 0x15);
        // CB 15 02D3
        gbc.setState(0x63ce, 0x5292, 0x83b0, 0xc3cc, 0x9f14, 0x5929, 0x0, 0x1);
        gbc.writeMem(0x63ce, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5292);
        EXPECT(gbc.pc(), 0x63d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02D4
        gbc.setState(0xd27a, 0x785, 0xd1d0, 0xb7f8, 0xa208, 0x5e6b, 0x0, 0x0);
        gbc.writeMem(0xd27a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x785);
        EXPECT(gbc.pc(), 0xd27c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd27a), 0xcb);
        EXPECT(gbc.readMem(0xd27b), 0x15);
        // CB 15 02D5
        gbc.setState(0x5de0, 0xe5, 0xa10, 0xfde4, 0x145c, 0x8f0c, 0x1, 0x0);
        gbc.writeMem(0x5de0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe5);
        EXPECT(gbc.pc(), 0x5de2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02D6
        gbc.setState(0xb0f8, 0x3b55, 0xe320, 0x8151, 0xdf03, 0x1d78, 0x0, 0x0);
        gbc.writeMem(0xb0f8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3b55);
        EXPECT(gbc.pc(), 0xb0fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0f8), 0xcb);
        EXPECT(gbc.readMem(0xb0f9), 0x15);
        // CB 15 02D7
        gbc.setState(0xe42c, 0xf882, 0x1240, 0x6160, 0xe366, 0x440c, 0x1, 0x1);
        gbc.writeMem(0xe42c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf882);
        EXPECT(gbc.pc(), 0xe42e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe42c), 0xcb);
        EXPECT(gbc.readMem(0xe42d), 0x15);
        // CB 15 02D8
        gbc.setState(0x3f0, 0xfe2e, 0xd0b0, 0xdebf, 0xd0da, 0x3b15, 0x1, 0x0);
        gbc.writeMem(0x3f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xfe2e);
        EXPECT(gbc.pc(), 0x3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02D9
        gbc.setState(0x53, 0x7702, 0xd660, 0x364f, 0x33e9, 0x240f, 0x1, 0x1);
        gbc.writeMem(0x53, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x7702);
        EXPECT(gbc.pc(), 0x55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02DA
        gbc.setState(0xa491, 0xc7fa, 0xb450, 0xe518, 0xb494, 0xbc0f, 0x1, 0x1);
        gbc.writeMem(0xa491, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xc7fa);
        EXPECT(gbc.pc(), 0xa493);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa491), 0xcb);
        EXPECT(gbc.readMem(0xa492), 0x15);
        // CB 15 02DB
        gbc.setState(0x7676, 0x362b, 0x9af0, 0x152c, 0x326a, 0x9c7e, 0x1, 0x1);
        gbc.writeMem(0x7676, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x362b);
        EXPECT(gbc.pc(), 0x7678);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02DC
        gbc.setState(0xab0a, 0xd7ff, 0x3e60, 0xe2aa, 0xe872, 0x1d8e, 0x0, 0x0);
        gbc.writeMem(0xab0a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd7ff);
        EXPECT(gbc.pc(), 0xab0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab0a), 0xcb);
        EXPECT(gbc.readMem(0xab0b), 0x15);
        // CB 15 02DD
        gbc.setState(0x4143, 0x6ea6, 0xcf00, 0x401c, 0x86a4, 0x724b, 0x1, 0x1);
        gbc.writeMem(0x4143, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x6ea6);
        EXPECT(gbc.pc(), 0x4145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02DE
        gbc.setState(0x1d19, 0x62c, 0xd2c0, 0x312c, 0x4d94, 0x80ac, 0x0, 0x0);
        gbc.writeMem(0x1d19, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x62c);
        EXPECT(gbc.pc(), 0x1d1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02DF
        gbc.setState(0x9621, 0xf3d, 0x5460, 0x58fd, 0x451f, 0xaf22, 0x0, 0x1);
        gbc.writeMem(0x9621, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf3d);
        EXPECT(gbc.pc(), 0x9623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9621), 0xcb);
        EXPECT(gbc.readMem(0x9622), 0x15);
        // CB 15 02E0
        gbc.setState(0xe6c8, 0xdfdc, 0xecd0, 0x9861, 0x4423, 0x145b, 0x1, 0x1);
        gbc.writeMem(0xe6c8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdfdc);
        EXPECT(gbc.pc(), 0xe6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6c8), 0xcb);
        EXPECT(gbc.readMem(0xe6c9), 0x15);
        // CB 15 02E1
        gbc.setState(0xe643, 0x1b23, 0x67e0, 0xe37a, 0x721, 0xa177, 0x0, 0x0);
        gbc.writeMem(0xe643, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1b23);
        EXPECT(gbc.pc(), 0xe645);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe643), 0xcb);
        EXPECT(gbc.readMem(0xe644), 0x15);
        // CB 15 02E2
        gbc.setState(0xea2f, 0x1220, 0x9e20, 0x22bc, 0x4cab, 0x7c9d, 0x1, 0x1);
        gbc.writeMem(0xea2f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1220);
        EXPECT(gbc.pc(), 0xea31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea2f), 0xcb);
        EXPECT(gbc.readMem(0xea30), 0x15);
        // CB 15 02E3
        gbc.setState(0x67d6, 0x5506, 0x93f0, 0x63d0, 0xec8f, 0x127e, 0x1, 0x1);
        gbc.writeMem(0x67d6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x5506);
        EXPECT(gbc.pc(), 0x67d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02E4
        gbc.setState(0xdcd, 0x2f05, 0x2830, 0x93a7, 0x86f4, 0xb7c7, 0x1, 0x1);
        gbc.writeMem(0xdcd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2f05);
        EXPECT(gbc.pc(), 0xdcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02E5
        gbc.setState(0x85d8, 0x93ce, 0x850, 0x3033, 0xe786, 0xe4a7, 0x0, 0x0);
        gbc.writeMem(0x85d8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x93ce);
        EXPECT(gbc.pc(), 0x85da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85d8), 0xcb);
        EXPECT(gbc.readMem(0x85d9), 0x15);
        // CB 15 02E6
        gbc.setState(0x33f8, 0xfdbf, 0x5f50, 0x9368, 0x4d23, 0x9b29, 0x1, 0x0);
        gbc.writeMem(0x33f8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfdbf);
        EXPECT(gbc.pc(), 0x33fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02E7
        gbc.setState(0x27f5, 0xe3b8, 0xfad0, 0x40de, 0x714, 0xc9ae, 0x0, 0x0);
        gbc.writeMem(0x27f5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe3b8);
        EXPECT(gbc.pc(), 0x27f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02E8
        gbc.setState(0x2ba8, 0x20f0, 0xccb0, 0x73aa, 0x689e, 0x9ed3, 0x0, 0x0);
        gbc.writeMem(0x2ba8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x20f0);
        EXPECT(gbc.pc(), 0x2baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02E9
        gbc.setState(0xc5bc, 0x9350, 0x2e30, 0x8693, 0xde90, 0x7c1b, 0x0, 0x0);
        gbc.writeMem(0xc5bc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x9350);
        EXPECT(gbc.pc(), 0xc5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bc), 0xcb);
        EXPECT(gbc.readMem(0xc5bd), 0x15);
        // CB 15 02EA
        gbc.setState(0x1ade, 0xf304, 0xdc30, 0x2ac5, 0xc4ed, 0xb625, 0x0, 0x1);
        gbc.writeMem(0x1ade, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf304);
        EXPECT(gbc.pc(), 0x1ae0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02EB
        gbc.setState(0x4b9e, 0x11f6, 0xc400, 0xe88f, 0xea80, 0xb099, 0x1, 0x1);
        gbc.writeMem(0x4b9e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x11f6);
        EXPECT(gbc.pc(), 0x4ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02EC
        gbc.setState(0x52a4, 0xe42d, 0x9800, 0x9a96, 0xaf, 0x7866, 0x0, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xe42d);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02ED
        gbc.setState(0x151f, 0x1c09, 0xd0, 0x61c0, 0xa7f6, 0xadd, 0x0, 0x1);
        gbc.writeMem(0x151f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x1c09);
        EXPECT(gbc.pc(), 0x1521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02EE
        gbc.setState(0x5394, 0x529e, 0xe810, 0x7d56, 0x1b43, 0xde7a, 0x0, 0x0);
        gbc.writeMem(0x5394, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x529e);
        EXPECT(gbc.pc(), 0x5396);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02F0
        gbc.setState(0x5bc4, 0x3f83, 0x4510, 0x5e91, 0x6871, 0x1224, 0x1, 0x1);
        gbc.writeMem(0x5bc4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3f83);
        EXPECT(gbc.pc(), 0x5bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02F1
        gbc.setState(0x1939, 0x3aa2, 0xf4e0, 0xc33a, 0x153e, 0xbc8e, 0x0, 0x1);
        gbc.writeMem(0x1939, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x3aa2);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02F2
        gbc.setState(0x11f1, 0xa9a4, 0x5590, 0xc07, 0xa536, 0x7cd1, 0x0, 0x1);
        gbc.writeMem(0x11f1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa9a4);
        EXPECT(gbc.pc(), 0x11f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02F3
        gbc.setState(0x564e, 0x81f3, 0x37a0, 0xed5b, 0x667f, 0x2b1b, 0x0, 0x1);
        gbc.writeMem(0x564e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x81f3);
        EXPECT(gbc.pc(), 0x5650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02F4
        gbc.setState(0x3f21, 0x3da9, 0xac80, 0x7c0a, 0xf0b1, 0xbb0, 0x1, 0x0);
        gbc.writeMem(0x3f21, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3da9);
        EXPECT(gbc.pc(), 0x3f23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02F5
        gbc.setState(0x7a18, 0xe09e, 0xdcd0, 0x8fd6, 0xcbf5, 0x5d83, 0x1, 0x0);
        gbc.writeMem(0x7a18, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xe09e);
        EXPECT(gbc.pc(), 0x7a1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02F6
        gbc.setState(0x571a, 0x1f88, 0xfc80, 0x177b, 0x97c2, 0x7f23, 0x1, 0x0);
        gbc.writeMem(0x571a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1f88);
        EXPECT(gbc.pc(), 0x571c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02F7
        gbc.setState(0x3310, 0xc18b, 0xf5c0, 0x32c2, 0xff7, 0xa777, 0x0, 0x1);
        gbc.writeMem(0x3310, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xc18b);
        EXPECT(gbc.pc(), 0x3312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02F8
        gbc.setState(0xc13c, 0xabf5, 0xab80, 0xa8f9, 0xed34, 0x27fb, 0x1, 0x0);
        gbc.writeMem(0xc13c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xabf5);
        EXPECT(gbc.pc(), 0xc13e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc13c), 0xcb);
        EXPECT(gbc.readMem(0xc13d), 0x15);
        // CB 15 02F9
        gbc.setState(0x9799, 0xc96f, 0x3150, 0x9ecc, 0xe7c7, 0xef7f, 0x0, 0x0);
        gbc.writeMem(0x9799, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xc96f);
        EXPECT(gbc.pc(), 0x979b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9799), 0xcb);
        EXPECT(gbc.readMem(0x979a), 0x15);
        // CB 15 02FA
        gbc.setState(0x1c12, 0x99b9, 0x5550, 0x4a9e, 0xae1b, 0xc2f2, 0x0, 0x1);
        gbc.writeMem(0x1c12, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x99b9);
        EXPECT(gbc.pc(), 0x1c14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 02FC
        gbc.setState(0x7a0a, 0x2e4, 0x14f0, 0x1f49, 0x374b, 0xad7e, 0x0, 0x1);
        gbc.writeMem(0x7a0a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2e4);
        EXPECT(gbc.pc(), 0x7a0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02FD
        gbc.setState(0xbff, 0xcfd8, 0xe020, 0x3aa3, 0x3905, 0x164a, 0x1, 0x0);
        gbc.writeMem(0xbff, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcfd8);
        EXPECT(gbc.pc(), 0xc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 02FE
        gbc.setState(0xc78f, 0x1bd2, 0x5140, 0x1785, 0x4be0, 0x7e4a, 0x1, 0x0);
        gbc.writeMem(0xc78f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1bd2);
        EXPECT(gbc.pc(), 0xc791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78f), 0xcb);
        EXPECT(gbc.readMem(0xc790), 0x15);
        // CB 15 02FF
        gbc.setState(0xc1c1, 0x9379, 0x5690, 0x938f, 0x124d, 0x9363, 0x1, 0x1);
        gbc.writeMem(0xc1c1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9379);
        EXPECT(gbc.pc(), 0xc1c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c1), 0xcb);
        EXPECT(gbc.readMem(0xc1c2), 0x15);
        // CB 15 0300
        gbc.setState(0xe0a1, 0x3761, 0x61c0, 0x16df, 0xf150, 0x7afd, 0x0, 0x0);
        gbc.writeMem(0xe0a1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3761);
        EXPECT(gbc.pc(), 0xe0a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a1), 0xcb);
        EXPECT(gbc.readMem(0xe0a2), 0x15);
        // CB 15 0301
        gbc.setState(0x58ef, 0xfca9, 0x4bc0, 0x6a4b, 0x646d, 0x217, 0x0, 0x0);
        gbc.writeMem(0x58ef, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xfca9);
        EXPECT(gbc.pc(), 0x58f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0302
        gbc.setState(0x73bd, 0xbf6b, 0x60c0, 0x1be0, 0x4fa8, 0xde, 0x0, 0x1);
        gbc.writeMem(0x73bd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xbf6b);
        EXPECT(gbc.pc(), 0x73bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0303
        gbc.setState(0xde4f, 0x4f1e, 0xd610, 0xb5da, 0xca5f, 0x2931, 0x0, 0x1);
        gbc.writeMem(0xde4f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x4f1e);
        EXPECT(gbc.pc(), 0xde51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4f), 0xcb);
        EXPECT(gbc.readMem(0xde50), 0x15);
        // CB 15 0304
        gbc.setState(0xe9ba, 0x3454, 0x1dc0, 0x2be0, 0x2693, 0x4ced, 0x0, 0x0);
        gbc.writeMem(0xe9ba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x3454);
        EXPECT(gbc.pc(), 0xe9bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ba), 0xcb);
        EXPECT(gbc.readMem(0xe9bb), 0x15);
        // CB 15 0305
        gbc.setState(0xa5e5, 0xf59a, 0xf220, 0x3473, 0xfe35, 0xcfc4, 0x0, 0x1);
        gbc.writeMem(0xa5e5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf59a);
        EXPECT(gbc.pc(), 0xa5e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5e5), 0xcb);
        EXPECT(gbc.readMem(0xa5e6), 0x15);
        // CB 15 0306
        gbc.setState(0x17db, 0xf8f, 0x9530, 0xc34b, 0x51b9, 0x9354, 0x1, 0x1);
        gbc.writeMem(0x17db, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf8f);
        EXPECT(gbc.pc(), 0x17dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0307
        gbc.setState(0xc84d, 0x94a0, 0x2ff0, 0x2bc8, 0x922f, 0x9ddd, 0x0, 0x1);
        gbc.writeMem(0xc84d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x94a0);
        EXPECT(gbc.pc(), 0xc84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc84d), 0xcb);
        EXPECT(gbc.readMem(0xc84e), 0x15);
        // CB 15 0308
        gbc.setState(0x8e59, 0x817d, 0xc10, 0xf920, 0xe397, 0x334b, 0x1, 0x0);
        gbc.writeMem(0x8e59, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x817d);
        EXPECT(gbc.pc(), 0x8e5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e59), 0xcb);
        EXPECT(gbc.readMem(0x8e5a), 0x15);
        // CB 15 0309
        gbc.setState(0xd7be, 0xce2d, 0x6520, 0xc8b3, 0xc226, 0x78cf, 0x0, 0x1);
        gbc.writeMem(0xd7be, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xce2d);
        EXPECT(gbc.pc(), 0xd7c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7be), 0xcb);
        EXPECT(gbc.readMem(0xd7bf), 0x15);
        // CB 15 030A
        gbc.setState(0x77c6, 0xaede, 0xf70, 0x20cd, 0x7c1d, 0xa811, 0x1, 0x0);
        gbc.writeMem(0x77c6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xaede);
        EXPECT(gbc.pc(), 0x77c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 030B
        gbc.setState(0xeb1c, 0xc993, 0x7690, 0xaeda, 0x1d79, 0x6207, 0x0, 0x1);
        gbc.writeMem(0xeb1c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc993);
        EXPECT(gbc.pc(), 0xeb1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb1c), 0xcb);
        EXPECT(gbc.readMem(0xeb1d), 0x15);
        // CB 15 030D
        gbc.setState(0x2f29, 0x5f91, 0x41f0, 0xcea9, 0x19d3, 0xd62f, 0x1, 0x0);
        gbc.writeMem(0x2f29, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x5f91);
        EXPECT(gbc.pc(), 0x2f2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 030E
        gbc.setState(0xcff1, 0x356f, 0xb70, 0x437e, 0xa951, 0xe2d9, 0x0, 0x1);
        gbc.writeMem(0xcff1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x356f);
        EXPECT(gbc.pc(), 0xcff3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcff1), 0xcb);
        EXPECT(gbc.readMem(0xcff2), 0x15);
        // CB 15 030F
        gbc.setState(0x85ad, 0xd4cf, 0xd640, 0x50f0, 0x6163, 0xdded, 0x0, 0x1);
        gbc.writeMem(0x85ad, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xd4cf);
        EXPECT(gbc.pc(), 0x85af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ad), 0xcb);
        EXPECT(gbc.readMem(0x85ae), 0x15);
        // CB 15 0310
        gbc.setState(0xaf87, 0xe2cb, 0x6060, 0xba4d, 0xd2c3, 0xa79a, 0x0, 0x1);
        gbc.writeMem(0xaf87, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xe2cb);
        EXPECT(gbc.pc(), 0xaf89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf87), 0xcb);
        EXPECT(gbc.readMem(0xaf88), 0x15);
        // CB 15 0311
        gbc.setState(0x8b2a, 0xaa3a, 0xbcb0, 0xf5d, 0xd9b2, 0xa97b, 0x1, 0x1);
        gbc.writeMem(0x8b2a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaa3a);
        EXPECT(gbc.pc(), 0x8b2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2a), 0xcb);
        EXPECT(gbc.readMem(0x8b2b), 0x15);
        // CB 15 0312
        gbc.setState(0xb67e, 0x809a, 0x7db0, 0x77c, 0x2e, 0x13ff, 0x0, 0x0);
        gbc.writeMem(0xb67e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x809a);
        EXPECT(gbc.pc(), 0xb680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb67e), 0xcb);
        EXPECT(gbc.readMem(0xb67f), 0x15);
        // CB 15 0313
        gbc.setState(0xb69a, 0xc585, 0xdd00, 0xc464, 0xe048, 0x4d00, 0x1, 0x0);
        gbc.writeMem(0xb69a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc585);
        EXPECT(gbc.pc(), 0xb69c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb69a), 0xcb);
        EXPECT(gbc.readMem(0xb69b), 0x15);
        // CB 15 0314
        gbc.setState(0xba7, 0xe5ba, 0x3dd0, 0xc2cb, 0x287c, 0x7fd1, 0x0, 0x0);
        gbc.writeMem(0xba7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xe5ba);
        EXPECT(gbc.pc(), 0xba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0315
        gbc.setState(0x23c7, 0x3e59, 0xf770, 0xe257, 0xe7ce, 0x5672, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3e59);
        EXPECT(gbc.pc(), 0x23c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0316
        gbc.setState(0x683d, 0xeaef, 0xbe30, 0xc27b, 0x8425, 0x195a, 0x0, 0x0);
        gbc.writeMem(0x683d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xeaef);
        EXPECT(gbc.pc(), 0x683f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0317
        gbc.setState(0x83f7, 0x60fc, 0x7fc0, 0xe291, 0x9f08, 0x8add, 0x0, 0x0);
        gbc.writeMem(0x83f7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x60fc);
        EXPECT(gbc.pc(), 0x83f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83f7), 0xcb);
        EXPECT(gbc.readMem(0x83f8), 0x15);
        // CB 15 0318
        gbc.setState(0xb75d, 0x4a1d, 0xd0, 0x79ed, 0x9725, 0x30a9, 0x0, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x4a1d);
        EXPECT(gbc.pc(), 0xb75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb75d), 0xcb);
        EXPECT(gbc.readMem(0xb75e), 0x15);
        // CB 15 0319
        gbc.setState(0xd899, 0x8f7b, 0x8040, 0xdc8f, 0xc8e1, 0xf004, 0x0, 0x1);
        gbc.writeMem(0xd899, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x8f7b);
        EXPECT(gbc.pc(), 0xd89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd899), 0xcb);
        EXPECT(gbc.readMem(0xd89a), 0x15);
        // CB 15 031A
        gbc.setState(0x26d8, 0x82ad, 0x36a0, 0x8362, 0x590d, 0xb58e, 0x1, 0x1);
        gbc.writeMem(0x26d8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x82ad);
        EXPECT(gbc.pc(), 0x26da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 031B
        gbc.setState(0xa22e, 0x39d9, 0x20d0, 0xe04, 0x9881, 0xd4ae, 0x0, 0x0);
        gbc.writeMem(0xa22e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x39d9);
        EXPECT(gbc.pc(), 0xa230);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa22e), 0xcb);
        EXPECT(gbc.readMem(0xa22f), 0x15);
        // CB 15 031C
        gbc.setState(0x159, 0xbdf0, 0x1310, 0xef06, 0x89b, 0xcc65, 0x0, 0x0);
        gbc.writeMem(0x159, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbdf0);
        EXPECT(gbc.pc(), 0x15b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 031D
        gbc.setState(0x9feb, 0xae29, 0x7fc0, 0x3be8, 0x2209, 0xc39e, 0x1, 0x0);
        gbc.writeMem(0x9feb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xae29);
        EXPECT(gbc.pc(), 0x9fed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9feb), 0xcb);
        EXPECT(gbc.readMem(0x9fec), 0x15);
        // CB 15 031E
        gbc.setState(0xa65c, 0x13d2, 0x70d0, 0xeb1b, 0x38f4, 0x5f91, 0x0, 0x1);
        gbc.writeMem(0xa65c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x13d2);
        EXPECT(gbc.pc(), 0xa65e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa65c), 0xcb);
        EXPECT(gbc.readMem(0xa65d), 0x15);
        // CB 15 031F
        gbc.setState(0x6e79, 0x3ba, 0xc480, 0x8c1f, 0x9e0a, 0x7981, 0x0, 0x1);
        gbc.writeMem(0x6e79, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3ba);
        EXPECT(gbc.pc(), 0x6e7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0320
        gbc.setState(0x7ff8, 0x9dca, 0xf630, 0x17e5, 0x3024, 0x5317, 0x0, 0x1);
        gbc.writeMem(0x7ff8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x9dca);
        EXPECT(gbc.pc(), 0x7ffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0321
        gbc.setState(0xc42d, 0x19d4, 0xc4b0, 0xd459, 0xff06, 0x2bdc, 0x1, 0x0);
        gbc.writeMem(0xc42d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x19d4);
        EXPECT(gbc.pc(), 0xc42f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc42d), 0xcb);
        EXPECT(gbc.readMem(0xc42e), 0x15);
        // CB 15 0322
        gbc.setState(0x8bcf, 0x2607, 0x3130, 0x8257, 0xdc3f, 0xd4fd, 0x0, 0x0);
        gbc.writeMem(0x8bcf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x2607);
        EXPECT(gbc.pc(), 0x8bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bcf), 0xcb);
        EXPECT(gbc.readMem(0x8bd0), 0x15);
        // CB 15 0323
        gbc.setState(0xc701, 0x3192, 0x18a0, 0xed8, 0xe7bc, 0x45ef, 0x0, 0x0);
        gbc.writeMem(0xc701, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3192);
        EXPECT(gbc.pc(), 0xc703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc701), 0xcb);
        EXPECT(gbc.readMem(0xc702), 0x15);
        // CB 15 0324
        gbc.setState(0xbaf6, 0xc9c0, 0x4bd0, 0x5df, 0x2154, 0x29b6, 0x0, 0x1);
        gbc.writeMem(0xbaf6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc9c0);
        EXPECT(gbc.pc(), 0xbaf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaf6), 0xcb);
        EXPECT(gbc.readMem(0xbaf7), 0x15);
        // CB 15 0325
        gbc.setState(0x8ece, 0xcfcb, 0x6b0, 0xbeda, 0x607d, 0x6e, 0x0, 0x0);
        gbc.writeMem(0x8ece, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xcfcb);
        EXPECT(gbc.pc(), 0x8ed0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ece), 0xcb);
        EXPECT(gbc.readMem(0x8ecf), 0x15);
        // CB 15 0326
        gbc.setState(0x9da1, 0x756f, 0x3bf0, 0xab41, 0xb57, 0x854b, 0x0, 0x1);
        gbc.writeMem(0x9da1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x756f);
        EXPECT(gbc.pc(), 0x9da3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da1), 0xcb);
        EXPECT(gbc.readMem(0x9da2), 0x15);
        // CB 15 0327
        gbc.setState(0xadf6, 0x1732, 0xbb80, 0x6882, 0x9533, 0x3cf2, 0x1, 0x1);
        gbc.writeMem(0xadf6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1732);
        EXPECT(gbc.pc(), 0xadf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf6), 0xcb);
        EXPECT(gbc.readMem(0xadf7), 0x15);
        // CB 15 0328
        gbc.setState(0x21db, 0x6361, 0x200, 0xce9e, 0xfc73, 0x2a8c, 0x1, 0x1);
        gbc.writeMem(0x21db, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6361);
        EXPECT(gbc.pc(), 0x21dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0329
        gbc.setState(0x15e7, 0x4a8c, 0xa050, 0xd118, 0x1248, 0xad98, 0x1, 0x1);
        gbc.writeMem(0x15e7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x4a8c);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 032A
        gbc.setState(0x3688, 0xe46f, 0xab00, 0xf2a2, 0x3077, 0x7963, 0x1, 0x1);
        gbc.writeMem(0x3688, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe46f);
        EXPECT(gbc.pc(), 0x368a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 032B
        gbc.setState(0xe97e, 0xa20c, 0xa6e0, 0x460c, 0x6e09, 0xe2e1, 0x0, 0x0);
        gbc.writeMem(0xe97e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xa20c);
        EXPECT(gbc.pc(), 0xe980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97e), 0xcb);
        EXPECT(gbc.readMem(0xe97f), 0x15);
        // CB 15 032C
        gbc.setState(0x227c, 0x93ad, 0x7b40, 0x26f6, 0xe1ac, 0xa957, 0x1, 0x0);
        gbc.writeMem(0x227c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x93ad);
        EXPECT(gbc.pc(), 0x227e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 032D
        gbc.setState(0x8368, 0x855e, 0xc2e0, 0xc9cd, 0xff90, 0x1869, 0x0, 0x1);
        gbc.writeMem(0x8368, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x855e);
        EXPECT(gbc.pc(), 0x836a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8368), 0xcb);
        EXPECT(gbc.readMem(0x8369), 0x15);
        // CB 15 032E
        gbc.setState(0x4066, 0x1512, 0x8c0, 0xb37, 0x20c2, 0x2ec6, 0x0, 0x0);
        gbc.writeMem(0x4066, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1512);
        EXPECT(gbc.pc(), 0x4068);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 032F
        gbc.setState(0x2f6b, 0xc46a, 0xb2b0, 0x7476, 0xe27d, 0x329d, 0x1, 0x0);
        gbc.writeMem(0x2f6b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc46a);
        EXPECT(gbc.pc(), 0x2f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0330
        gbc.setState(0xe979, 0xda, 0xdad0, 0x39d2, 0x2ea, 0xaa72, 0x1, 0x0);
        gbc.writeMem(0xe979, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xda);
        EXPECT(gbc.pc(), 0xe97b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe979), 0xcb);
        EXPECT(gbc.readMem(0xe97a), 0x15);
        // CB 15 0331
        gbc.setState(0xc2f3, 0x809c, 0x4400, 0x266f, 0x3aa1, 0xbb52, 0x0, 0x1);
        gbc.writeMem(0xc2f3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x809c);
        EXPECT(gbc.pc(), 0xc2f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2f3), 0xcb);
        EXPECT(gbc.readMem(0xc2f4), 0x15);
        // CB 15 0332
        gbc.setState(0x5078, 0xe8b4, 0x36c0, 0x7608, 0xe8d0, 0xba0b, 0x0, 0x1);
        gbc.writeMem(0x5078, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe8b4);
        EXPECT(gbc.pc(), 0x507a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0333
        gbc.setState(0xbddb, 0xd0e9, 0x2680, 0x4a50, 0xbad2, 0x77f7, 0x1, 0x1);
        gbc.writeMem(0xbddb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd0e9);
        EXPECT(gbc.pc(), 0xbddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbddb), 0xcb);
        EXPECT(gbc.readMem(0xbddc), 0x15);
        // CB 15 0334
        gbc.setState(0x98a3, 0xd5f4, 0xea50, 0x52de, 0x6451, 0x431, 0x1, 0x0);
        gbc.writeMem(0x98a3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xd5f4);
        EXPECT(gbc.pc(), 0x98a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98a3), 0xcb);
        EXPECT(gbc.readMem(0x98a4), 0x15);
        // CB 15 0335
        gbc.setState(0xc8d5, 0x8c7a, 0x1860, 0x581c, 0x3a4a, 0x5bc2, 0x1, 0x0);
        gbc.writeMem(0xc8d5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8c7a);
        EXPECT(gbc.pc(), 0xc8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8d5), 0xcb);
        EXPECT(gbc.readMem(0xc8d6), 0x15);
        // CB 15 0336
        gbc.setState(0x1ddd, 0x5d47, 0x9b0, 0xb3fc, 0x8950, 0xcdda, 0x1, 0x1);
        gbc.writeMem(0x1ddd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5d47);
        EXPECT(gbc.pc(), 0x1ddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0337
        gbc.setState(0x9e95, 0x6290, 0xe5f0, 0x4981, 0x76d9, 0xda9f, 0x0, 0x0);
        gbc.writeMem(0x9e95, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x6290);
        EXPECT(gbc.pc(), 0x9e97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e95), 0xcb);
        EXPECT(gbc.readMem(0x9e96), 0x15);
        // CB 15 0338
        gbc.setState(0xdf34, 0x466e, 0x2690, 0xc1f8, 0xf3cb, 0x7354, 0x0, 0x1);
        gbc.writeMem(0xdf34, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x466e);
        EXPECT(gbc.pc(), 0xdf36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf34), 0xcb);
        EXPECT(gbc.readMem(0xdf35), 0x15);
        // CB 15 0339
        gbc.setState(0x6464, 0x1362, 0x5720, 0x8601, 0x53d1, 0x63d0, 0x0, 0x1);
        gbc.writeMem(0x6464, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1362);
        EXPECT(gbc.pc(), 0x6466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 033A
        gbc.setState(0xd72b, 0xa349, 0x7050, 0x26f1, 0x1114, 0x86d0, 0x1, 0x0);
        gbc.writeMem(0xd72b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa349);
        EXPECT(gbc.pc(), 0xd72d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd72b), 0xcb);
        EXPECT(gbc.readMem(0xd72c), 0x15);
        // CB 15 033B
        gbc.setState(0x5e69, 0x6d08, 0xbf50, 0x84bc, 0x7cb2, 0x39c7, 0x1, 0x1);
        gbc.writeMem(0x5e69, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6d08);
        EXPECT(gbc.pc(), 0x5e6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 033C
        gbc.setState(0x20fd, 0xc1fb, 0xe410, 0x4973, 0xd134, 0xa5a4, 0x1, 0x0);
        gbc.writeMem(0x20fd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc1fb);
        EXPECT(gbc.pc(), 0x20ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 033D
        gbc.setState(0x1796, 0xd1b6, 0x3c50, 0x5650, 0x30b1, 0x43d3, 0x1, 0x0);
        gbc.writeMem(0x1796, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xd1b6);
        EXPECT(gbc.pc(), 0x1798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 033E
        gbc.setState(0x94e7, 0x7007, 0x8990, 0x4a37, 0x180f, 0xabd, 0x1, 0x0);
        gbc.writeMem(0x94e7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x7007);
        EXPECT(gbc.pc(), 0x94e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94e7), 0xcb);
        EXPECT(gbc.readMem(0x94e8), 0x15);
        // CB 15 033F
        gbc.setState(0xc8a, 0x7045, 0xf060, 0x832c, 0xafab, 0xb976, 0x1, 0x0);
        gbc.writeMem(0xc8a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x7045);
        EXPECT(gbc.pc(), 0xc8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0340
        gbc.setState(0x5f47, 0x7fa6, 0x1d20, 0x34d9, 0xeb65, 0x8a37, 0x0, 0x0);
        gbc.writeMem(0x5f47, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7fa6);
        EXPECT(gbc.pc(), 0x5f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0341
        gbc.setState(0x8171, 0x82cc, 0x62c0, 0x785f, 0xa3ef, 0x4bac, 0x0, 0x1);
        gbc.writeMem(0x8171, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x82cc);
        EXPECT(gbc.pc(), 0x8173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8171), 0xcb);
        EXPECT(gbc.readMem(0x8172), 0x15);
        // CB 15 0343
        gbc.setState(0xef59, 0x722d, 0x7f40, 0x2ab9, 0x4e30, 0x394a, 0x0, 0x0);
        gbc.writeMem(0xef59, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x722d);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef59), 0xcb);
        EXPECT(gbc.readMem(0xef5a), 0x15);
        // CB 15 0344
        gbc.setState(0x238b, 0xef91, 0xf170, 0x2e41, 0x660c, 0x3b76, 0x0, 0x1);
        gbc.writeMem(0x238b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xef91);
        EXPECT(gbc.pc(), 0x238d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0345
        gbc.setState(0xb371, 0xfb41, 0x6210, 0x7061, 0x33ba, 0xfe58, 0x0, 0x1);
        gbc.writeMem(0xb371, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfb41);
        EXPECT(gbc.pc(), 0xb373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb371), 0xcb);
        EXPECT(gbc.readMem(0xb372), 0x15);
        // CB 15 0346
        gbc.setState(0x1702, 0x8d80, 0xaa40, 0xbdfc, 0x550e, 0x8620, 0x1, 0x1);
        gbc.writeMem(0x1702, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8d80);
        EXPECT(gbc.pc(), 0x1704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0348
        gbc.setState(0x6290, 0x4069, 0xc5b0, 0xc20, 0xc205, 0xecbb, 0x1, 0x0);
        gbc.writeMem(0x6290, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4069);
        EXPECT(gbc.pc(), 0x6292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0349
        gbc.setState(0x4f8b, 0xcbb1, 0xf810, 0xc303, 0x3052, 0x5019, 0x0, 0x1);
        gbc.writeMem(0x4f8b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcbb1);
        EXPECT(gbc.pc(), 0x4f8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 034A
        gbc.setState(0x3ddf, 0x15fa, 0xd6e0, 0x7f34, 0x3ea8, 0x7340, 0x0, 0x0);
        gbc.writeMem(0x3ddf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x15fa);
        EXPECT(gbc.pc(), 0x3de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 034B
        gbc.setState(0x2abb, 0x6c55, 0xaa30, 0x91f6, 0x37ab, 0x7210, 0x1, 0x0);
        gbc.writeMem(0x2abb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6c55);
        EXPECT(gbc.pc(), 0x2abd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 034C
        gbc.setState(0xd757, 0x735, 0x1a0, 0x89ff, 0xef76, 0x5234, 0x0, 0x1);
        gbc.writeMem(0xd757, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x735);
        EXPECT(gbc.pc(), 0xd759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd757), 0xcb);
        EXPECT(gbc.readMem(0xd758), 0x15);
        // CB 15 034D
        gbc.setState(0x2bf1, 0x8160, 0x98b0, 0x91e4, 0xb441, 0xc7fc, 0x1, 0x0);
        gbc.writeMem(0x2bf1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8160);
        EXPECT(gbc.pc(), 0x2bf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 034E
        gbc.setState(0x63c1, 0x9268, 0xcfb0, 0x36a1, 0xa8dc, 0x431, 0x1, 0x0);
        gbc.writeMem(0x63c1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9268);
        EXPECT(gbc.pc(), 0x63c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 034F
        gbc.setState(0x9992, 0xc71d, 0xdb90, 0x5a9c, 0x4d04, 0xcc46, 0x1, 0x0);
        gbc.writeMem(0x9992, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc71d);
        EXPECT(gbc.pc(), 0x9994);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9992), 0xcb);
        EXPECT(gbc.readMem(0x9993), 0x15);
        // CB 15 0350
        gbc.setState(0x855, 0x7cd1, 0x8d50, 0xe966, 0xff26, 0x1056, 0x0, 0x1);
        gbc.writeMem(0x855, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7cd1);
        EXPECT(gbc.pc(), 0x857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0351
        gbc.setState(0x1da5, 0x4cab, 0xb6e0, 0xc620, 0x4d, 0x93c8, 0x0, 0x1);
        gbc.writeMem(0x1da5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x4cab);
        EXPECT(gbc.pc(), 0x1da7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0352
        gbc.setState(0x59a0, 0x45dd, 0xb180, 0x6869, 0xf7fc, 0x3257, 0x1, 0x1);
        gbc.writeMem(0x59a0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x45dd);
        EXPECT(gbc.pc(), 0x59a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0353
        gbc.setState(0x39fb, 0x9f50, 0xe60, 0x6a88, 0x5811, 0x3990, 0x1, 0x1);
        gbc.writeMem(0x39fb, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9f50);
        EXPECT(gbc.pc(), 0x39fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0354
        gbc.setState(0xb60a, 0xbf0e, 0xc300, 0xec3, 0x75be, 0x4f63, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xbf0e);
        EXPECT(gbc.pc(), 0xb60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        EXPECT(gbc.readMem(0xb60b), 0x15);
        // CB 15 0355
        gbc.setState(0x840e, 0xed6b, 0x9b90, 0x8c7c, 0x78d6, 0xb44c, 0x1, 0x1);
        gbc.writeMem(0x840e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xed6b);
        EXPECT(gbc.pc(), 0x8410);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840e), 0xcb);
        EXPECT(gbc.readMem(0x840f), 0x15);
        // CB 15 0356
        gbc.setState(0xe056, 0x61d7, 0x160, 0x13f3, 0x492b, 0x1512, 0x0, 0x0);
        gbc.writeMem(0xe056, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0xe058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe056), 0xcb);
        EXPECT(gbc.readMem(0xe057), 0x15);
        // CB 15 0357
        gbc.setState(0x9658, 0x3e9a, 0x78a0, 0x2d94, 0xd9d5, 0xcf17, 0x1, 0x1);
        gbc.writeMem(0x9658, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3e9a);
        EXPECT(gbc.pc(), 0x965a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9658), 0xcb);
        EXPECT(gbc.readMem(0x9659), 0x15);
        // CB 15 0358
        gbc.setState(0xa543, 0xfb6c, 0xe580, 0x4d1f, 0x59f2, 0x6ef, 0x1, 0x0);
        gbc.writeMem(0xa543, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfb6c);
        EXPECT(gbc.pc(), 0xa545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa543), 0xcb);
        EXPECT(gbc.readMem(0xa544), 0x15);
        // CB 15 035B
        gbc.setState(0x7b29, 0xdc86, 0x2890, 0xc6eb, 0xfb80, 0x6704, 0x1, 0x1);
        gbc.writeMem(0x7b29, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdc86);
        EXPECT(gbc.pc(), 0x7b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 035C
        gbc.setState(0xd251, 0x66e5, 0xe20, 0xe21f, 0xa7fd, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0xd251, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x66e5);
        EXPECT(gbc.pc(), 0xd253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd251), 0xcb);
        EXPECT(gbc.readMem(0xd252), 0x15);
        // CB 15 035D
        gbc.setState(0xec47, 0x56b7, 0x3360, 0x2583, 0x59fe, 0x3185, 0x0, 0x0);
        gbc.writeMem(0xec47, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x56b7);
        EXPECT(gbc.pc(), 0xec49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec47), 0xcb);
        EXPECT(gbc.readMem(0xec48), 0x15);
        // CB 15 035E
        gbc.setState(0xafd5, 0x6456, 0x6700, 0x5335, 0x910f, 0xc3e5, 0x1, 0x0);
        gbc.writeMem(0xafd5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6456);
        EXPECT(gbc.pc(), 0xafd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafd5), 0xcb);
        EXPECT(gbc.readMem(0xafd6), 0x15);
        // CB 15 0360
        gbc.setState(0xc481, 0x9d31, 0x6ff0, 0x6f6, 0x53e7, 0x5f88, 0x0, 0x0);
        gbc.writeMem(0xc481, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9d31);
        EXPECT(gbc.pc(), 0xc483);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc481), 0xcb);
        EXPECT(gbc.readMem(0xc482), 0x15);
        // CB 15 0361
        gbc.setState(0xa8c3, 0xe305, 0x8770, 0x421d, 0x3c61, 0xdf97, 0x0, 0x0);
        gbc.writeMem(0xa8c3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe305);
        EXPECT(gbc.pc(), 0xa8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c3), 0xcb);
        EXPECT(gbc.readMem(0xa8c4), 0x15);
        // CB 15 0362
        gbc.setState(0x84f5, 0x5898, 0xa680, 0xb518, 0xbfaa, 0x4198, 0x1, 0x0);
        gbc.writeMem(0x84f5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5898);
        EXPECT(gbc.pc(), 0x84f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f5), 0xcb);
        EXPECT(gbc.readMem(0x84f6), 0x15);
        // CB 15 0363
        gbc.setState(0x8899, 0xf253, 0x4a00, 0xe10a, 0x29df, 0x6f95, 0x0, 0x0);
        gbc.writeMem(0x8899, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf253);
        EXPECT(gbc.pc(), 0x889b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8899), 0xcb);
        EXPECT(gbc.readMem(0x889a), 0x15);
        // CB 15 0364
        gbc.setState(0xce8a, 0x2aaf, 0x4240, 0x8b8b, 0x6c99, 0xf799, 0x1, 0x0);
        gbc.writeMem(0xce8a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2aaf);
        EXPECT(gbc.pc(), 0xce8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce8a), 0xcb);
        EXPECT(gbc.readMem(0xce8b), 0x15);
        // CB 15 0365
        gbc.setState(0x830e, 0x7734, 0xc720, 0x8222, 0x27f1, 0x93d4, 0x0, 0x0);
        gbc.writeMem(0x830e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7734);
        EXPECT(gbc.pc(), 0x8310);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x830e), 0xcb);
        EXPECT(gbc.readMem(0x830f), 0x15);
        // CB 15 0366
        gbc.setState(0x29a7, 0x1027, 0x8420, 0xffc5, 0xea5b, 0xf546, 0x1, 0x0);
        gbc.writeMem(0x29a7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x1027);
        EXPECT(gbc.pc(), 0x29a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0368
        gbc.setState(0xd9c, 0x88a2, 0x38a0, 0xe8c, 0x9254, 0x9408, 0x0, 0x0);
        gbc.writeMem(0xd9c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x88a2);
        EXPECT(gbc.pc(), 0xd9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0369
        gbc.setState(0x490c, 0x1c55, 0x7ba0, 0xe2a, 0xe167, 0xcf3f, 0x1, 0x1);
        gbc.writeMem(0x490c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0x490e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 036A
        gbc.setState(0x1eee, 0xb1e8, 0x20b0, 0xced9, 0xe889, 0x5d37, 0x0, 0x0);
        gbc.writeMem(0x1eee, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb1e8);
        EXPECT(gbc.pc(), 0x1ef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 036B
        gbc.setState(0xaed2, 0x88df, 0x7850, 0xa361, 0xe845, 0xeee7, 0x1, 0x0);
        gbc.writeMem(0xaed2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x88df);
        EXPECT(gbc.pc(), 0xaed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaed2), 0xcb);
        EXPECT(gbc.readMem(0xaed3), 0x15);
        // CB 15 036C
        gbc.setState(0x11dc, 0xa9de, 0x6d50, 0x5df8, 0x5ea9, 0x4feb, 0x1, 0x1);
        gbc.writeMem(0x11dc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xa9de);
        EXPECT(gbc.pc(), 0x11de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 036D
        gbc.setState(0xb602, 0x4d61, 0x5c20, 0xf157, 0xe472, 0x7708, 0x1, 0x0);
        gbc.writeMem(0xb602, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4d61);
        EXPECT(gbc.pc(), 0xb604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb602), 0xcb);
        EXPECT(gbc.readMem(0xb603), 0x15);
        // CB 15 036E
        gbc.setState(0x1e79, 0xb4e7, 0x2070, 0x54ad, 0x15ab, 0x5d55, 0x1, 0x1);
        gbc.writeMem(0x1e79, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xb4e7);
        EXPECT(gbc.pc(), 0x1e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 036F
        gbc.setState(0x51be, 0xcfe, 0x6730, 0x10c4, 0x8d77, 0x7f56, 0x0, 0x1);
        gbc.writeMem(0x51be, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xcfe);
        EXPECT(gbc.pc(), 0x51c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0370
        gbc.setState(0x1b54, 0xf581, 0xf1a0, 0x3305, 0x3cd5, 0x1f14, 0x1, 0x0);
        gbc.writeMem(0x1b54, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf581);
        EXPECT(gbc.pc(), 0x1b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0371
        gbc.setState(0x76ac, 0x185, 0x28c0, 0x2f10, 0x80bb, 0x43f8, 0x1, 0x1);
        gbc.writeMem(0x76ac, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x185);
        EXPECT(gbc.pc(), 0x76ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0372
        gbc.setState(0x65c1, 0x29b7, 0x3570, 0x43b5, 0xcd37, 0xc821, 0x1, 0x1);
        gbc.writeMem(0x65c1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x29b7);
        EXPECT(gbc.pc(), 0x65c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0373
        gbc.setState(0x1596, 0x514f, 0xdf50, 0xfff6, 0xf22a, 0x5cb4, 0x1, 0x1);
        gbc.writeMem(0x1596, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x514f);
        EXPECT(gbc.pc(), 0x1598);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0374
        gbc.setState(0x6b63, 0x647d, 0x5c30, 0xad3d, 0xd47f, 0x5594, 0x0, 0x0);
        gbc.writeMem(0x6b63, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x647d);
        EXPECT(gbc.pc(), 0x6b65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0375
        gbc.setState(0x2241, 0xb31a, 0x5d20, 0xbc3e, 0xd742, 0xf467, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb31a);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0376
        gbc.setState(0xbc4f, 0xf86d, 0x5130, 0xac28, 0xd7f7, 0xf772, 0x0, 0x0);
        gbc.writeMem(0xbc4f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xf86d);
        EXPECT(gbc.pc(), 0xbc51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc4f), 0xcb);
        EXPECT(gbc.readMem(0xbc50), 0x15);
        // CB 15 0377
        gbc.setState(0x55ac, 0x8c8a, 0x9710, 0x635b, 0x7fe9, 0x8eba, 0x1, 0x1);
        gbc.writeMem(0x55ac, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x8c8a);
        EXPECT(gbc.pc(), 0x55ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0378
        gbc.setState(0x9a51, 0x7de2, 0xfe40, 0xdf2, 0xd1f3, 0x76c3, 0x1, 0x0);
        gbc.writeMem(0x9a51, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7de2);
        EXPECT(gbc.pc(), 0x9a53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a51), 0xcb);
        EXPECT(gbc.readMem(0x9a52), 0x15);
        // CB 15 0379
        gbc.setState(0x4617, 0xb6a5, 0x1dd0, 0x80d0, 0x3b8, 0x4129, 0x1, 0x1);
        gbc.writeMem(0x4617, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb6a5);
        EXPECT(gbc.pc(), 0x4619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 037B
        gbc.setState(0x6280, 0x5876, 0x3a50, 0xee0c, 0x1b5d, 0x7695, 0x0, 0x1);
        gbc.writeMem(0x6280, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x5876);
        EXPECT(gbc.pc(), 0x6282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 037C
        gbc.setState(0x7405, 0x26a2, 0x8160, 0x1ca5, 0x985, 0xa82, 0x0, 0x1);
        gbc.writeMem(0x7405, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x26a2);
        EXPECT(gbc.pc(), 0x7407);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 037D
        gbc.setState(0xae61, 0xf1db, 0x3170, 0x7740, 0x9145, 0x87de, 0x1, 0x1);
        gbc.writeMem(0xae61, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf1db);
        EXPECT(gbc.pc(), 0xae63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae61), 0xcb);
        EXPECT(gbc.readMem(0xae62), 0x15);
        // CB 15 037E
        gbc.setState(0x8b96, 0x5147, 0x42d0, 0x6e75, 0xaeeb, 0x68dc, 0x0, 0x0);
        gbc.writeMem(0x8b96, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5147);
        EXPECT(gbc.pc(), 0x8b98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b96), 0xcb);
        EXPECT(gbc.readMem(0x8b97), 0x15);
        // CB 15 037F
        gbc.setState(0x73e1, 0xd408, 0x58f0, 0x1473, 0x83ff, 0x6b82, 0x1, 0x1);
        gbc.writeMem(0x73e1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd408);
        EXPECT(gbc.pc(), 0x73e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0380
        gbc.setState(0x8040, 0x97ed, 0xe7b0, 0x5db7, 0x216b, 0x3860, 0x0, 0x0);
        gbc.writeMem(0x8040, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x97ed);
        EXPECT(gbc.pc(), 0x8042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8040), 0xcb);
        EXPECT(gbc.readMem(0x8041), 0x15);
        // CB 15 0381
        gbc.setState(0x7510, 0xfae1, 0x3820, 0xcdd6, 0xaa60, 0x6277, 0x1, 0x0);
        gbc.writeMem(0x7510, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xfae1);
        EXPECT(gbc.pc(), 0x7512);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0383
        gbc.setState(0xde15, 0xfa50, 0x5300, 0xc9fd, 0xe519, 0xc56f, 0x1, 0x1);
        gbc.writeMem(0xde15, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfa50);
        EXPECT(gbc.pc(), 0xde17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde15), 0xcb);
        EXPECT(gbc.readMem(0xde16), 0x15);
        // CB 15 0384
        gbc.setState(0x2935, 0x4eef, 0xc9d0, 0x7e11, 0x6059, 0x4da2, 0x0, 0x1);
        gbc.writeMem(0x2935, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4eef);
        EXPECT(gbc.pc(), 0x2937);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0385
        gbc.setState(0xd098, 0x387a, 0x1c50, 0xd35b, 0x290d, 0xd6ce, 0x0, 0x1);
        gbc.writeMem(0xd098, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x387a);
        EXPECT(gbc.pc(), 0xd09a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd098), 0xcb);
        EXPECT(gbc.readMem(0xd099), 0x15);
        // CB 15 0386
        gbc.setState(0x99ec, 0xdfe, 0x7ce0, 0x72f1, 0x196d, 0xc817, 0x1, 0x1);
        gbc.writeMem(0x99ec, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xdfe);
        EXPECT(gbc.pc(), 0x99ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ec), 0xcb);
        EXPECT(gbc.readMem(0x99ed), 0x15);
        // CB 15 0387
        gbc.setState(0xec6c, 0xa73d, 0x4b00, 0x1f5b, 0x3e84, 0xcc6f, 0x1, 0x1);
        gbc.writeMem(0xec6c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xa73d);
        EXPECT(gbc.pc(), 0xec6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec6c), 0xcb);
        EXPECT(gbc.readMem(0xec6d), 0x15);
        // CB 15 0388
        gbc.setState(0x7202, 0x7614, 0x91f0, 0xd386, 0x8a4d, 0x1307, 0x1, 0x0);
        gbc.writeMem(0x7202, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7614);
        EXPECT(gbc.pc(), 0x7204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0389
        gbc.setState(0xa584, 0x3887, 0xf150, 0x119c, 0x94d3, 0xc70a, 0x1, 0x1);
        gbc.writeMem(0xa584, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3887);
        EXPECT(gbc.pc(), 0xa586);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa584), 0xcb);
        EXPECT(gbc.readMem(0xa585), 0x15);
        // CB 15 038A
        gbc.setState(0x94d3, 0x114a, 0x4aa0, 0xd893, 0x32ec, 0x1fd5, 0x1, 0x0);
        gbc.writeMem(0x94d3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x114a);
        EXPECT(gbc.pc(), 0x94d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94d3), 0xcb);
        EXPECT(gbc.readMem(0x94d4), 0x15);
        // CB 15 038B
        gbc.setState(0xa742, 0x66ea, 0x7f60, 0x91e7, 0x1042, 0xfb06, 0x0, 0x0);
        gbc.writeMem(0xa742, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x66ea);
        EXPECT(gbc.pc(), 0xa744);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa742), 0xcb);
        EXPECT(gbc.readMem(0xa743), 0x15);
        // CB 15 038C
        gbc.setState(0x927, 0x58ec, 0x8d70, 0xebc7, 0x6d61, 0x615b, 0x0, 0x0);
        gbc.writeMem(0x927, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x58ec);
        EXPECT(gbc.pc(), 0x929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 038E
        gbc.setState(0xc8c2, 0xd7ee, 0x61b0, 0x3626, 0x746d, 0x3054, 0x1, 0x0);
        gbc.writeMem(0xc8c2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd7ee);
        EXPECT(gbc.pc(), 0xc8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c2), 0xcb);
        EXPECT(gbc.readMem(0xc8c3), 0x15);
        // CB 15 0390
        gbc.setState(0x4ee4, 0x4db3, 0x6d60, 0x6642, 0xb8c9, 0x1f64, 0x0, 0x0);
        gbc.writeMem(0x4ee4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4db3);
        EXPECT(gbc.pc(), 0x4ee6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0391
        gbc.setState(0x52f0, 0x9e73, 0xf380, 0x71b1, 0xecc, 0x7db0, 0x1, 0x0);
        gbc.writeMem(0x52f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x9e73);
        EXPECT(gbc.pc(), 0x52f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0392
        gbc.setState(0x6dae, 0x605d, 0x6be0, 0x8471, 0xec72, 0xeba4, 0x0, 0x0);
        gbc.writeMem(0x6dae, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x605d);
        EXPECT(gbc.pc(), 0x6db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 0393
        gbc.setState(0x3fba, 0xdf00, 0x3820, 0x3825, 0x2c76, 0x422c, 0x0, 0x0);
        gbc.writeMem(0x3fba, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdf00);
        EXPECT(gbc.pc(), 0x3fbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0394
        gbc.setState(0xbf41, 0x4d4e, 0x4750, 0x823, 0x3f91, 0x7480, 0x0, 0x1);
        gbc.writeMem(0xbf41, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x4d4e);
        EXPECT(gbc.pc(), 0xbf43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf41), 0xcb);
        EXPECT(gbc.readMem(0xbf42), 0x15);
        // CB 15 0395
        gbc.setState(0xb586, 0x48ca, 0x9200, 0x352c, 0x5fbb, 0x6310, 0x0, 0x0);
        gbc.writeMem(0xb586, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x48ca);
        EXPECT(gbc.pc(), 0xb588);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb586), 0xcb);
        EXPECT(gbc.readMem(0xb587), 0x15);
        // CB 15 0396
        gbc.setState(0xd5df, 0xe74f, 0x1990, 0xc25e, 0xbc25, 0x8f43, 0x1, 0x0);
        gbc.writeMem(0xd5df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe74f);
        EXPECT(gbc.pc(), 0xd5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5df), 0xcb);
        EXPECT(gbc.readMem(0xd5e0), 0x15);
        // CB 15 0397
        gbc.setState(0xcfa7, 0xb6f5, 0xdee0, 0x9d55, 0xefc5, 0x363a, 0x1, 0x1);
        gbc.writeMem(0xcfa7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb6f5);
        EXPECT(gbc.pc(), 0xcfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa7), 0xcb);
        EXPECT(gbc.readMem(0xcfa8), 0x15);
        // CB 15 0398
        gbc.setState(0xbc, 0xd4ba, 0x98e0, 0x87ba, 0xd23b, 0x821, 0x1, 0x0);
        gbc.writeMem(0xbc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd4ba);
        EXPECT(gbc.pc(), 0xbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 0399
        gbc.setState(0x1e4, 0xbfdc, 0x74e0, 0x6ee4, 0x7f04, 0xc86c, 0x0, 0x1);
        gbc.writeMem(0x1e4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xbfdc);
        EXPECT(gbc.pc(), 0x1e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 039A
        gbc.setState(0x9ff7, 0xe75d, 0x8d30, 0x2ed9, 0x467a, 0x5b8, 0x1, 0x1);
        gbc.writeMem(0x9ff7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe75d);
        EXPECT(gbc.pc(), 0x9ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ff7), 0xcb);
        EXPECT(gbc.readMem(0x9ff8), 0x15);
        // CB 15 039B
        gbc.setState(0x2391, 0x20fa, 0x3b50, 0xf58a, 0x7f5c, 0x96b8, 0x1, 0x1);
        gbc.writeMem(0x2391, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x20fa);
        EXPECT(gbc.pc(), 0x2393);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 039C
        gbc.setState(0x9108, 0xaf8e, 0xc0b0, 0x72d4, 0x8c0e, 0x4329, 0x0, 0x1);
        gbc.writeMem(0x9108, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaf8e);
        EXPECT(gbc.pc(), 0x910a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9108), 0xcb);
        EXPECT(gbc.readMem(0x9109), 0x15);
        // CB 15 039D
        gbc.setState(0x1c2a, 0x2a9a, 0xafe0, 0x8c97, 0x596f, 0x4c4a, 0x0, 0x1);
        gbc.writeMem(0x1c2a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2a9a);
        EXPECT(gbc.pc(), 0x1c2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 039E
        gbc.setState(0x6fdf, 0x16f7, 0xd260, 0x3ae3, 0x1910, 0xfc2d, 0x0, 0x1);
        gbc.writeMem(0x6fdf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x16f7);
        EXPECT(gbc.pc(), 0x6fe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 039F
        gbc.setState(0xbedc, 0xaf29, 0xe780, 0x74dc, 0x585a, 0xb68, 0x1, 0x0);
        gbc.writeMem(0xbedc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xaf29);
        EXPECT(gbc.pc(), 0xbede);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbedc), 0xcb);
        EXPECT(gbc.readMem(0xbedd), 0x15);
        // CB 15 03A0
        gbc.setState(0xbd5a, 0xcf9a, 0xe5b0, 0x4351, 0x3ba6, 0xbb8b, 0x0, 0x1);
        gbc.writeMem(0xbd5a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xcf9a);
        EXPECT(gbc.pc(), 0xbd5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5a), 0xcb);
        EXPECT(gbc.readMem(0xbd5b), 0x15);
        // CB 15 03A1
        gbc.setState(0x8165, 0x5380, 0x9f40, 0x4ffc, 0x721a, 0xd903, 0x1, 0x1);
        gbc.writeMem(0x8165, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5380);
        EXPECT(gbc.pc(), 0x8167);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8165), 0xcb);
        EXPECT(gbc.readMem(0x8166), 0x15);
        // CB 15 03A2
        gbc.setState(0xdcf2, 0x38b4, 0x1840, 0xe46f, 0xf79, 0xa93e, 0x1, 0x0);
        gbc.writeMem(0xdcf2, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x38b4);
        EXPECT(gbc.pc(), 0xdcf4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcf2), 0xcb);
        EXPECT(gbc.readMem(0xdcf3), 0x15);
        // CB 15 03A3
        gbc.setState(0x2a4e, 0x4997, 0xba30, 0xaf37, 0xcc44, 0xf5b2, 0x1, 0x0);
        gbc.writeMem(0x2a4e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x4997);
        EXPECT(gbc.pc(), 0x2a50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03A4
        gbc.setState(0x422d, 0x7cfd, 0x39b0, 0xb983, 0x7c39, 0x4884, 0x0, 0x1);
        gbc.writeMem(0x422d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x7cfd);
        EXPECT(gbc.pc(), 0x422f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03A5
        gbc.setState(0xb966, 0x3fc5, 0x1660, 0x1329, 0xa1a7, 0x97ac, 0x1, 0x1);
        gbc.writeMem(0xb966, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3fc5);
        EXPECT(gbc.pc(), 0xb968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb966), 0xcb);
        EXPECT(gbc.readMem(0xb967), 0x15);
        // CB 15 03A6
        gbc.setState(0xe6a6, 0xbc5, 0x3ec0, 0xe10d, 0x1f88, 0x15eb, 0x0, 0x1);
        gbc.writeMem(0xe6a6, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xbc5);
        EXPECT(gbc.pc(), 0xe6a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6a6), 0xcb);
        EXPECT(gbc.readMem(0xe6a7), 0x15);
        // CB 15 03A7
        gbc.setState(0xa8f0, 0x8dd0, 0xb770, 0xd61c, 0x5811, 0xffd2, 0x1, 0x0);
        gbc.writeMem(0xa8f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8dd0);
        EXPECT(gbc.pc(), 0xa8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8f0), 0xcb);
        EXPECT(gbc.readMem(0xa8f1), 0x15);
        // CB 15 03A8
        gbc.setState(0x4961, 0xe4d8, 0x2f40, 0xf0ca, 0x5271, 0x17c6, 0x0, 0x0);
        gbc.writeMem(0x4961, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe4d8);
        EXPECT(gbc.pc(), 0x4963);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03A9
        gbc.setState(0xb9f0, 0x4e5f, 0x6110, 0xf54b, 0xf5f6, 0x69c7, 0x1, 0x0);
        gbc.writeMem(0xb9f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0xb9f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f0), 0xcb);
        EXPECT(gbc.readMem(0xb9f1), 0x15);
        // CB 15 03AA
        gbc.setState(0x7bf4, 0x714a, 0xca60, 0x4efd, 0x19e3, 0xe182, 0x1, 0x0);
        gbc.writeMem(0x7bf4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x714a);
        EXPECT(gbc.pc(), 0x7bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03AB
        gbc.setState(0x6016, 0xacf1, 0x7f30, 0x824f, 0x7554, 0x93bd, 0x1, 0x0);
        gbc.writeMem(0x6016, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xacf1);
        EXPECT(gbc.pc(), 0x6018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03AC
        gbc.setState(0x2847, 0x61fd, 0xfd30, 0x3152, 0xaec9, 0xbca6, 0x0, 0x0);
        gbc.writeMem(0x2847, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x61fd);
        EXPECT(gbc.pc(), 0x2849);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03AD
        gbc.setState(0x4218, 0xb5a3, 0x7fb0, 0x1f72, 0x5c9c, 0xe7d7, 0x0, 0x1);
        gbc.writeMem(0x4218, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb5a3);
        EXPECT(gbc.pc(), 0x421a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03AE
        gbc.setState(0xd383, 0xa7e9, 0x2030, 0x237e, 0x921e, 0x6ae4, 0x0, 0x0);
        gbc.writeMem(0xd383, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa7e9);
        EXPECT(gbc.pc(), 0xd385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd383), 0xcb);
        EXPECT(gbc.readMem(0xd384), 0x15);
        // CB 15 03B1
        gbc.setState(0x4e58, 0xa1de, 0x9ec0, 0xdaf, 0x51a7, 0xcdd5, 0x0, 0x1);
        gbc.writeMem(0x4e58, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xa1de);
        EXPECT(gbc.pc(), 0x4e5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03B2
        gbc.setState(0xe2f4, 0xed36, 0xb0b0, 0xe295, 0x257e, 0x407b, 0x0, 0x1);
        gbc.writeMem(0xe2f4, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xed36);
        EXPECT(gbc.pc(), 0xe2f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f4), 0xcb);
        EXPECT(gbc.readMem(0xe2f5), 0x15);
        // CB 15 03B4
        gbc.setState(0x11a9, 0x17da, 0x7aa0, 0x69d8, 0x483, 0x1937, 0x1, 0x0);
        gbc.writeMem(0x11a9, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x17da);
        EXPECT(gbc.pc(), 0x11ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03B5
        gbc.setState(0x5674, 0x81f7, 0xd210, 0x3747, 0xf7e, 0xbab4, 0x1, 0x0);
        gbc.writeMem(0x5674, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x81f7);
        EXPECT(gbc.pc(), 0x5676);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03B6
        gbc.setState(0x1278, 0x3551, 0x3ef0, 0xcdba, 0x84cb, 0xa348, 0x0, 0x1);
        gbc.writeMem(0x1278, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3551);
        EXPECT(gbc.pc(), 0x127a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03B7
        gbc.setState(0xc03c, 0x31f5, 0xfab0, 0x3af, 0x2a1, 0x9128, 0x1, 0x0);
        gbc.writeMem(0xc03c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x31f5);
        EXPECT(gbc.pc(), 0xc03e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc03c), 0xcb);
        EXPECT(gbc.readMem(0xc03d), 0x15);
        // CB 15 03B8
        gbc.setState(0x4cd3, 0x44db, 0x4a60, 0xe468, 0xd1bf, 0x15dd, 0x1, 0x1);
        gbc.writeMem(0x4cd3, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x44db);
        EXPECT(gbc.pc(), 0x4cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03B9
        gbc.setState(0xcbde, 0x1ff9, 0xe4c0, 0x388f, 0xd9cd, 0x53f1, 0x0, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1ff9);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbde), 0xcb);
        EXPECT(gbc.readMem(0xcbdf), 0x15);
        // CB 15 03BA
        gbc.setState(0xec5e, 0xb95, 0x1770, 0xdbac, 0x613e, 0xf7e7, 0x1, 0x1);
        gbc.writeMem(0xec5e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb95);
        EXPECT(gbc.pc(), 0xec60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5e), 0xcb);
        EXPECT(gbc.readMem(0xec5f), 0x15);
        // CB 15 03BB
        gbc.setState(0x3cde, 0xab6e, 0xb350, 0xbe58, 0xb10f, 0x4a16, 0x0, 0x1);
        gbc.writeMem(0x3cde, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xab6e);
        EXPECT(gbc.pc(), 0x3ce0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03BC
        gbc.setState(0x1f5d, 0x5f4d, 0x6900, 0x3c36, 0x5421, 0x65e1, 0x0, 0x1);
        gbc.writeMem(0x1f5d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5f4d);
        EXPECT(gbc.pc(), 0x1f5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03BD
        gbc.setState(0xe925, 0x6505, 0x1310, 0xd9f9, 0xc3e8, 0x7c7a, 0x0, 0x1);
        gbc.writeMem(0xe925, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6505);
        EXPECT(gbc.pc(), 0xe927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe925), 0xcb);
        EXPECT(gbc.readMem(0xe926), 0x15);
        // CB 15 03BE
        gbc.setState(0xbc6e, 0x48ff, 0x11f0, 0x1832, 0xa482, 0xef82, 0x0, 0x1);
        gbc.writeMem(0xbc6e, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x48ff);
        EXPECT(gbc.pc(), 0xbc70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc6e), 0xcb);
        EXPECT(gbc.readMem(0xbc6f), 0x15);
        // CB 15 03BF
        gbc.setState(0x6f90, 0x5e4b, 0x7a0, 0x154c, 0x43c9, 0xf1b8, 0x0, 0x0);
        gbc.writeMem(0x6f90, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x5e4b);
        EXPECT(gbc.pc(), 0x6f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03C0
        gbc.setState(0xdbea, 0x1185, 0xa3a0, 0xbf9b, 0x566e, 0x46e1, 0x1, 0x1);
        gbc.writeMem(0xdbea, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1185);
        EXPECT(gbc.pc(), 0xdbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbea), 0xcb);
        EXPECT(gbc.readMem(0xdbeb), 0x15);
        // CB 15 03C1
        gbc.setState(0x1b95, 0xe921, 0x3fb0, 0x8887, 0x8724, 0x49d5, 0x1, 0x0);
        gbc.writeMem(0x1b95, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe921);
        EXPECT(gbc.pc(), 0x1b97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03C2
        gbc.setState(0x51cc, 0x72b1, 0x6c20, 0x8f02, 0xe312, 0x6594, 0x1, 0x1);
        gbc.writeMem(0x51cc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x72b1);
        EXPECT(gbc.pc(), 0x51ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03C3
        gbc.setState(0x776c, 0xe707, 0x58b0, 0xf28c, 0xfffe, 0xa0b3, 0x1, 0x1);
        gbc.writeMem(0x776c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe707);
        EXPECT(gbc.pc(), 0x776e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03C5
        gbc.setState(0xcf51, 0xba56, 0x1c50, 0xd9, 0xbdd2, 0xaa03, 0x0, 0x1);
        gbc.writeMem(0xcf51, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xba56);
        EXPECT(gbc.pc(), 0xcf53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf51), 0xcb);
        EXPECT(gbc.readMem(0xcf52), 0x15);
        // CB 15 03C6
        gbc.setState(0xcfcf, 0xe9dc, 0x81c0, 0x2ed9, 0x33a7, 0xa7df, 0x1, 0x0);
        gbc.writeMem(0xcfcf, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xe9dc);
        EXPECT(gbc.pc(), 0xcfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcf), 0xcb);
        EXPECT(gbc.readMem(0xcfd0), 0x15);
        // CB 15 03C7
        gbc.setState(0xa3d1, 0x91b1, 0x4520, 0x73f8, 0x4af7, 0x325c, 0x0, 0x0);
        gbc.writeMem(0xa3d1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x91b1);
        EXPECT(gbc.pc(), 0xa3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3d1), 0xcb);
        EXPECT(gbc.readMem(0xa3d2), 0x15);
        // CB 15 03C8
        gbc.setState(0x608f, 0x4842, 0x5ea0, 0xb945, 0x93df, 0xa829, 0x1, 0x0);
        gbc.writeMem(0x608f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4842);
        EXPECT(gbc.pc(), 0x6091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03C9
        gbc.setState(0xb13a, 0x950a, 0xcc80, 0x5f01, 0xa139, 0x3a74, 0x0, 0x1);
        gbc.writeMem(0xb13a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x950a);
        EXPECT(gbc.pc(), 0xb13c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb13a), 0xcb);
        EXPECT(gbc.readMem(0xb13b), 0x15);
        // CB 15 03CA
        gbc.setState(0x1057, 0x89bc, 0x1c90, 0x8cb8, 0x8ff7, 0xae2, 0x1, 0x1);
        gbc.writeMem(0x1057, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x89bc);
        EXPECT(gbc.pc(), 0x1059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03CB
        gbc.setState(0x5097, 0xe6c6, 0x7640, 0x458d, 0x6541, 0xa8c2, 0x0, 0x0);
        gbc.writeMem(0x5097, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe6c6);
        EXPECT(gbc.pc(), 0x5099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03CC
        gbc.setState(0x2cf1, 0xe781, 0x5760, 0xe890, 0x645, 0xa8b8, 0x1, 0x1);
        gbc.writeMem(0x2cf1, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe781);
        EXPECT(gbc.pc(), 0x2cf3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03CD
        gbc.setState(0xc2df, 0x1313, 0x6550, 0x6dd2, 0xacb6, 0x2c3c, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1313);
        EXPECT(gbc.pc(), 0xc2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2df), 0xcb);
        EXPECT(gbc.readMem(0xc2e0), 0x15);
        // CB 15 03CE
        gbc.setState(0x285a, 0x6850, 0xc3f0, 0xbae3, 0xa9a8, 0xcc5b, 0x1, 0x0);
        gbc.writeMem(0x285a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6850);
        EXPECT(gbc.pc(), 0x285c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03D0
        gbc.setState(0x8166, 0x9c8b, 0x23b0, 0xe596, 0xa27, 0x434f, 0x1, 0x0);
        gbc.writeMem(0x8166, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x9c8b);
        EXPECT(gbc.pc(), 0x8168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8166), 0xcb);
        EXPECT(gbc.readMem(0x8167), 0x15);
        // CB 15 03D1
        gbc.setState(0xa7f7, 0xf5e7, 0x7530, 0x9dee, 0x4fb7, 0xa3d7, 0x0, 0x0);
        gbc.writeMem(0xa7f7, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf5e7);
        EXPECT(gbc.pc(), 0xa7f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7f7), 0xcb);
        EXPECT(gbc.readMem(0xa7f8), 0x15);
        // CB 15 03D3
        gbc.setState(0x11f0, 0x6e46, 0x78a0, 0x2362, 0x31ea, 0x9b08, 0x0, 0x0);
        gbc.writeMem(0x11f0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x6e46);
        EXPECT(gbc.pc(), 0x11f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03D4
        gbc.setState(0x497c, 0x3184, 0xbb40, 0x485c, 0x1254, 0x66b2, 0x0, 0x0);
        gbc.writeMem(0x497c, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3184);
        EXPECT(gbc.pc(), 0x497e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03D5
        gbc.setState(0x46bd, 0xc2f4, 0x7a00, 0xc85c, 0x5bf5, 0xba6c, 0x1, 0x0);
        gbc.writeMem(0x46bd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xc2f4);
        EXPECT(gbc.pc(), 0x46bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03D6
        gbc.setState(0xd76f, 0x296, 0x13e0, 0x4623, 0x1794, 0xf852, 0x1, 0x1);
        gbc.writeMem(0xd76f, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x296);
        EXPECT(gbc.pc(), 0xd771);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd76f), 0xcb);
        EXPECT(gbc.readMem(0xd770), 0x15);
        // CB 15 03D7
        gbc.setState(0x40fc, 0xcb08, 0xb8f0, 0x457f, 0x71e1, 0x5f2a, 0x0, 0x1);
        gbc.writeMem(0x40fc, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xcb08);
        EXPECT(gbc.pc(), 0x40fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03D8
        gbc.setState(0x5575, 0x3989, 0xbfd0, 0xc6da, 0x7836, 0x6387, 0x0, 0x1);
        gbc.writeMem(0x5575, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3989);
        EXPECT(gbc.pc(), 0x5577);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03D9
        gbc.setState(0x9234, 0x600c, 0x9b70, 0x9e3a, 0x4ca, 0xa70a, 0x0, 0x0);
        gbc.writeMem(0x9234, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x600c);
        EXPECT(gbc.pc(), 0x9236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9234), 0xcb);
        EXPECT(gbc.readMem(0x9235), 0x15);
        // CB 15 03DA
        gbc.setState(0x6f8d, 0xf700, 0xcaf0, 0x4fce, 0xe20d, 0x7b47, 0x0, 0x0);
        gbc.writeMem(0x6f8d, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xf700);
        EXPECT(gbc.pc(), 0x6f8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03DB
        gbc.setState(0xea7b, 0xfcf5, 0xbb20, 0x3042, 0x6f35, 0xf380, 0x0, 0x0);
        gbc.writeMem(0xea7b, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xfcf5);
        EXPECT(gbc.pc(), 0xea7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea7b), 0xcb);
        EXPECT(gbc.readMem(0xea7c), 0x15);
        // CB 15 03DD
        gbc.setState(0x2ace, 0xeb7e, 0x1b50, 0xa460, 0xb7ee, 0x289b, 0x0, 0x1);
        gbc.writeMem(0x2ace, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xeb7e);
        EXPECT(gbc.pc(), 0x2ad0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03DE
        gbc.setState(0x6873, 0xcd6b, 0x5320, 0xa4c1, 0x18d4, 0x6e16, 0x1, 0x1);
        gbc.writeMem(0x6873, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xcd6b);
        EXPECT(gbc.pc(), 0x6875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03DF
        gbc.setState(0x38bd, 0x8ddc, 0x5630, 0x4514, 0xb04c, 0x754b, 0x0, 0x0);
        gbc.writeMem(0x38bd, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8ddc);
        EXPECT(gbc.pc(), 0x38bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03E0
        gbc.setState(0x9660, 0x5b46, 0x3290, 0x19e0, 0x9fad, 0x2b35, 0x1, 0x1);
        gbc.writeMem(0x9660, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x5b46);
        EXPECT(gbc.pc(), 0x9662);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9660), 0xcb);
        EXPECT(gbc.readMem(0x9661), 0x15);
        // CB 15 03E1
        gbc.setState(0xb1d0, 0xd980, 0xc530, 0x133, 0x397f, 0x90a9, 0x0, 0x1);
        gbc.writeMem(0xb1d0, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd980);
        EXPECT(gbc.pc(), 0xb1d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1d0), 0xcb);
        EXPECT(gbc.readMem(0xb1d1), 0x15);
        // CB 15 03E2
        gbc.setState(0x70d5, 0x9571, 0xc450, 0x9e00, 0x3e29, 0xe1d, 0x0, 0x0);
        gbc.writeMem(0x70d5, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9571);
        EXPECT(gbc.pc(), 0x70d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 15 03E3
        gbc.setState(0xdc68, 0xed2d, 0x3a30, 0x8a6b, 0xa9eb, 0xf900, 0x0, 0x1);
        gbc.writeMem(0xdc68, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xed2d);
        EXPECT(gbc.pc(), 0xdc6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc68), 0xcb);
        EXPECT(gbc.readMem(0xdc69), 0x15);
        // CB 15 03E4
        gbc.setState(0xab31, 0x751e, 0xd3c0, 0x5246, 0x425e, 0xf1f, 0x0, 0x0);
        gbc.writeMem(0xab31, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x751e);
        EXPECT(gbc.pc(), 0xab33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab31), 0xcb);
        EXPECT(gbc.readMem(0xab32), 0x15);
        // CB 15 03E5
        gbc.setState(0x9f80, 0x9562, 0x7120, 0xe3f8, 0x3f38, 0xe776, 0x1, 0x0);
        gbc.writeMem(0x9f80, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x9562);
        EXPECT(gbc.pc(), 0x9f82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f80), 0xcb);
        EXPECT(gbc.readMem(0x9f81), 0x15);
        // CB 15 03E6
        gbc.setState(0x8f8, 0x9ff5, 0x3350, 0xb78b, 0xd9b7, 0x55a0, 0x0, 0x1);
        gbc.writeMem(0x8f8, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x9ff5);
        EXPECT(gbc.pc(), 0x8fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 15 03E7
        gbc.setState(0xe52a, 0x17c6, 0xdd10, 0x5e6c, 0xab00, 0x5337, 0x1, 0x1);
        gbc.writeMem(0xe52a, { 0xcb, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x17c6);
        EXPECT(gbc.pc(), 0xe52c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe52a), 0xcb);
        EXPECT(gbc.readMem(0xe52b), 0x15);
    }
