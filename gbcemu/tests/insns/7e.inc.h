    TEST(gbcemu, opcode_7e) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 7E 0000
        gbc.setState(0x9a0c, 0x3c0f, 0xd5a0, 0xb785, 0x6fb, 0xbc54, 0x0, 0x0);
        gbc.writeMem(0x9a0c, { 0x7e });
        gbc.writeMem(0xbc54, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3c0f, gbc.sp());
        EXPECT(0x9a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9a0c));
        EXPECT(0x37, gbc.readMem(0xbc54));
        // 7E 0001
        gbc.setState(0x7f40, 0x153a, 0xae20, 0xe720, 0x8901, 0x7f61, 0x0, 0x1);
        gbc.writeMem(0x7f40, { 0x7e });
        gbc.writeMem(0x7f61, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x153a, gbc.sp());
        EXPECT(0x7f41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0002
        gbc.setState(0x6570, 0x9cae, 0x1910, 0xcbc5, 0xeef2, 0x9571, 0x0, 0x0);
        gbc.writeMem(0x6570, { 0x7e });
        gbc.writeMem(0x9571, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x9cae, gbc.sp());
        EXPECT(0x6571, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0x9571));
        // 7E 0003
        gbc.setState(0x92a4, 0xccf0, 0xa420, 0x794e, 0xb0a9, 0x89e5, 0x0, 0x0);
        gbc.writeMem(0x89e5, { 0x99 });
        gbc.writeMem(0x92a4, { 0x7e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xccf0, gbc.sp());
        EXPECT(0x92a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x89e5));
        EXPECT(0x7e, gbc.readMem(0x92a4));
        // 7E 0004
        gbc.setState(0xbb9, 0x7604, 0xc000, 0xe251, 0xfd77, 0xabdf, 0x1, 0x1);
        gbc.writeMem(0xbb9, { 0x7e });
        gbc.writeMem(0xabdf, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7604, gbc.sp());
        EXPECT(0xbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xabdf));
        // 7E 0005
        gbc.setState(0x36e7, 0xa926, 0x5570, 0xcefd, 0xf2d1, 0xfc14, 0x1, 0x0);
        gbc.writeMem(0x36e7, { 0x7e });
        gbc.writeMem(0xfc14, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa926, gbc.sp());
        EXPECT(0x36e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xfc14));
        // 7E 0006
        gbc.setState(0xcf5b, 0x201a, 0xedb0, 0xc6cc, 0x6d41, 0x5a6b, 0x1, 0x1);
        gbc.writeMem(0x5a6b, { 0x80 });
        gbc.writeMem(0xcf5b, { 0x7e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x201a, gbc.sp());
        EXPECT(0xcf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcf5b));
        // 7E 0007
        gbc.setState(0xdbe8, 0x2e54, 0x1c30, 0xf0a8, 0x934a, 0xa0f4, 0x1, 0x0);
        gbc.writeMem(0xa0f4, { 0x4a });
        gbc.writeMem(0xdbe8, { 0x7e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2e54, gbc.sp());
        EXPECT(0xdbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa0f4));
        EXPECT(0x7e, gbc.readMem(0xdbe8));
        // 7E 0008
        gbc.setState(0x2cc8, 0x8af0, 0xb6e0, 0x13f8, 0x6d37, 0xf7b0, 0x0, 0x1);
        gbc.writeMem(0x2cc8, { 0x7e });
        gbc.writeMem(0xf7b0, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8af0, gbc.sp());
        EXPECT(0x2cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf7b0));
        // 7E 0009
        gbc.setState(0x2251, 0xeebe, 0x10d0, 0x1677, 0x9f9a, 0x6b6e, 0x0, 0x0);
        gbc.writeMem(0x2251, { 0x7e });
        gbc.writeMem(0x6b6e, { 0x3f });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xeebe, gbc.sp());
        EXPECT(0x2252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 000A
        gbc.setState(0x72a0, 0x75a2, 0x310, 0x3562, 0xf36d, 0x8e9c, 0x0, 0x0);
        gbc.writeMem(0x72a0, { 0x7e });
        gbc.writeMem(0x8e9c, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x75a2, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8e9c));
        // 7E 000B
        gbc.setState(0xe058, 0x78bc, 0xaa10, 0xb509, 0xd3db, 0xca99, 0x1, 0x0);
        gbc.writeMem(0xca99, { 0x39 });
        gbc.writeMem(0xe058, { 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x78bc, gbc.sp());
        EXPECT(0xe059, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xca99));
        EXPECT(0x7e, gbc.readMem(0xe058));
        // 7E 000C
        gbc.setState(0x4119, 0x4afd, 0x3280, 0xe6dc, 0x737f, 0xa959, 0x0, 0x1);
        gbc.writeMem(0x4119, { 0x7e });
        gbc.writeMem(0xa959, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4afd, gbc.sp());
        EXPECT(0x411a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa959));
        // 7E 000D
        gbc.setState(0x48e4, 0xe9a5, 0xe690, 0xf995, 0x33cd, 0x847a, 0x1, 0x1);
        gbc.writeMem(0x48e4, { 0x7e });
        gbc.writeMem(0x847a, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe9a5, gbc.sp());
        EXPECT(0x48e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x847a));
        // 7E 000E
        gbc.setState(0x1282, 0x744c, 0xc6b0, 0x3e1d, 0x69a7, 0x1a7a, 0x0, 0x0);
        gbc.writeMem(0x1282, { 0x7e });
        gbc.writeMem(0x1a7a, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x744c, gbc.sp());
        EXPECT(0x1283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 000F
        gbc.setState(0x8432, 0x9b1d, 0x55c0, 0x861f, 0x3d43, 0x5e83, 0x0, 0x1);
        gbc.writeMem(0x5e83, { 0xe5 });
        gbc.writeMem(0x8432, { 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9b1d, gbc.sp());
        EXPECT(0x8433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8432));
        // 7E 0010
        gbc.setState(0x3ed, 0xcd27, 0x8cb0, 0xce06, 0xb19d, 0x123d, 0x0, 0x0);
        gbc.writeMem(0x3ed, { 0x7e });
        gbc.writeMem(0x123d, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xcd27, gbc.sp());
        EXPECT(0x3ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0011
        gbc.setState(0x145a, 0xa91c, 0x52f0, 0x2756, 0x6831, 0x74fb, 0x0, 0x0);
        gbc.writeMem(0x145a, { 0x7e });
        gbc.writeMem(0x74fb, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa91c, gbc.sp());
        EXPECT(0x145b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0012
        gbc.setState(0x1232, 0xf6c3, 0x4cc0, 0xc3de, 0x1693, 0x2b4f, 0x1, 0x0);
        gbc.writeMem(0x1232, { 0x7e });
        gbc.writeMem(0x2b4f, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf6c3, gbc.sp());
        EXPECT(0x1233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0013
        gbc.setState(0x6e70, 0x48c6, 0x3410, 0xd502, 0x126e, 0x3698, 0x0, 0x0);
        gbc.writeMem(0x3698, { 0xa });
        gbc.writeMem(0x6e70, { 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x48c6, gbc.sp());
        EXPECT(0x6e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0014
        gbc.setState(0x3086, 0x9849, 0x7440, 0x2d3c, 0x1dd8, 0x51be, 0x0, 0x0);
        gbc.writeMem(0x3086, { 0x7e });
        gbc.writeMem(0x51be, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x9849, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0015
        gbc.setState(0x4bde, 0x3677, 0x1980, 0x2190, 0xa621, 0x330f, 0x1, 0x0);
        gbc.writeMem(0x330f, { 0xaa });
        gbc.writeMem(0x4bde, { 0x7e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3677, gbc.sp());
        EXPECT(0x4bdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0016
        gbc.setState(0xc1b9, 0x739b, 0x7490, 0xb74c, 0x2a25, 0xc923, 0x1, 0x0);
        gbc.writeMem(0xc1b9, { 0x7e });
        gbc.writeMem(0xc923, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0xc1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc1b9));
        EXPECT(0xa1, gbc.readMem(0xc923));
        // 7E 0017
        gbc.setState(0x7369, 0x96d8, 0x7950, 0x6748, 0xc3f9, 0x60c5, 0x1, 0x1);
        gbc.writeMem(0x60c5, { 0x3d });
        gbc.writeMem(0x7369, { 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x96d8, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0019
        gbc.setState(0x8a6, 0x3f53, 0x3a20, 0xa6ea, 0x3262, 0x383a, 0x0, 0x0);
        gbc.writeMem(0x8a6, { 0x7e });
        gbc.writeMem(0x383a, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3f53, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 001A
        gbc.setState(0x2e39, 0x5c08, 0xe080, 0xf6c1, 0x9e93, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0x2e39, { 0x7e });
        gbc.writeMem(0x3c35, { 0x33 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5c08, gbc.sp());
        EXPECT(0x2e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 001B
        gbc.setState(0x13ec, 0xe1f3, 0x2e60, 0xdd97, 0x6a9f, 0xd7a8, 0x0, 0x0);
        gbc.writeMem(0x13ec, { 0x7e });
        gbc.writeMem(0xd7a8, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe1f3, gbc.sp());
        EXPECT(0x13ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xd7a8));
        // 7E 001C
        gbc.setState(0x394b, 0xfd88, 0x6ed0, 0x8766, 0xa188, 0x12d9, 0x0, 0x1);
        gbc.writeMem(0x12d9, { 0xa5 });
        gbc.writeMem(0x394b, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfd88, gbc.sp());
        EXPECT(0x394c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 001D
        gbc.setState(0x32d7, 0x6b8b, 0xdb50, 0x545e, 0xd04b, 0x86be, 0x0, 0x1);
        gbc.writeMem(0x32d7, { 0x7e });
        gbc.writeMem(0x86be, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6b8b, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x86be));
        // 7E 001E
        gbc.setState(0x4960, 0x1ee, 0x6790, 0x9dc7, 0x920b, 0xdfc9, 0x1, 0x0);
        gbc.writeMem(0x4960, { 0x7e });
        gbc.writeMem(0xdfc9, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x1ee, gbc.sp());
        EXPECT(0x4961, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xdfc9));
        // 7E 001F
        gbc.setState(0xac93, 0x5fc, 0xdde0, 0x843e, 0x21b8, 0x9704, 0x1, 0x1);
        gbc.writeMem(0x9704, { 0x7c });
        gbc.writeMem(0xac93, { 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5fc, gbc.sp());
        EXPECT(0xac94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x9704));
        EXPECT(0x7e, gbc.readMem(0xac93));
        // 7E 0020
        gbc.setState(0x4fee, 0xb3b8, 0x930, 0x1c98, 0x5932, 0x6642, 0x0, 0x1);
        gbc.writeMem(0x4fee, { 0x7e });
        gbc.writeMem(0x6642, { 0xe0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb3b8, gbc.sp());
        EXPECT(0x4fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0021
        gbc.setState(0x1be8, 0xba5b, 0x4d60, 0x93d7, 0x3b33, 0x2694, 0x0, 0x1);
        gbc.writeMem(0x1be8, { 0x7e });
        gbc.writeMem(0x2694, { 0xc });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xba5b, gbc.sp());
        EXPECT(0x1be9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0022
        gbc.setState(0xdb97, 0xcfa5, 0x50e0, 0x6646, 0x41ce, 0x6465, 0x0, 0x1);
        gbc.writeMem(0x6465, { 0xd0 });
        gbc.writeMem(0xdb97, { 0x7e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcfa5, gbc.sp());
        EXPECT(0xdb98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdb97));
        // 7E 0023
        gbc.setState(0x70a6, 0xc1a8, 0x3150, 0x5cdf, 0x1707, 0x1608, 0x0, 0x0);
        gbc.writeMem(0x1608, { 0xc1 });
        gbc.writeMem(0x70a6, { 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc1a8, gbc.sp());
        EXPECT(0x70a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0024
        gbc.setState(0xd51f, 0x9c92, 0x4550, 0x7846, 0x5e17, 0x1240, 0x0, 0x1);
        gbc.writeMem(0x1240, { 0x18 });
        gbc.writeMem(0xd51f, { 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9c92, gbc.sp());
        EXPECT(0xd520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd51f));
        // 7E 0025
        gbc.setState(0x531f, 0xb6cf, 0xacc0, 0xec69, 0xc679, 0x5c77, 0x1, 0x1);
        gbc.writeMem(0x531f, { 0x7e });
        gbc.writeMem(0x5c77, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb6cf, gbc.sp());
        EXPECT(0x5320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0027
        gbc.setState(0xc7dc, 0x600e, 0xfa10, 0x2552, 0xb1, 0x2feb, 0x0, 0x1);
        gbc.writeMem(0x2feb, { 0x3f });
        gbc.writeMem(0xc7dc, { 0x7e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x600e, gbc.sp());
        EXPECT(0xc7dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc7dc));
        // 7E 0028
        gbc.setState(0xc709, 0x2588, 0x6b80, 0xa611, 0x8e75, 0x623e, 0x0, 0x0);
        gbc.writeMem(0x623e, { 0x29 });
        gbc.writeMem(0xc709, { 0x7e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2588, gbc.sp());
        EXPECT(0xc70a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc709));
        // 7E 0029
        gbc.setState(0x4fcb, 0x2f45, 0xcd10, 0x752a, 0xbfb6, 0x56ce, 0x1, 0x0);
        gbc.writeMem(0x4fcb, { 0x7e });
        gbc.writeMem(0x56ce, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2f45, gbc.sp());
        EXPECT(0x4fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 002A
        gbc.setState(0xaba0, 0xcf94, 0x6f30, 0x14b3, 0x168b, 0xc78a, 0x0, 0x1);
        gbc.writeMem(0xaba0, { 0x7e });
        gbc.writeMem(0xc78a, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xcf94, gbc.sp());
        EXPECT(0xaba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaba0));
        EXPECT(0xff, gbc.readMem(0xc78a));
        // 7E 002B
        gbc.setState(0xc15a, 0x97e5, 0x2ac0, 0x2874, 0x9b73, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0x65f1, { 0xcc });
        gbc.writeMem(0xc15a, { 0x7e });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x97e5, gbc.sp());
        EXPECT(0xc15b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc15a));
        // 7E 002C
        gbc.setState(0x3e0f, 0xbf2a, 0x6df0, 0xddc1, 0x7630, 0x6fed, 0x1, 0x0);
        gbc.writeMem(0x3e0f, { 0x7e });
        gbc.writeMem(0x6fed, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xbf2a, gbc.sp());
        EXPECT(0x3e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 002D
        gbc.setState(0x60e6, 0x6d19, 0x55e0, 0x4264, 0x6e58, 0x5ef4, 0x0, 0x0);
        gbc.writeMem(0x5ef4, { 0xcb });
        gbc.writeMem(0x60e6, { 0x7e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x6d19, gbc.sp());
        EXPECT(0x60e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 002E
        gbc.setState(0x6588, 0x6bfc, 0xd0a0, 0xc96, 0x49ff, 0x51f, 0x0, 0x0);
        gbc.writeMem(0x51f, { 0xa2 });
        gbc.writeMem(0x6588, { 0x7e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x6bfc, gbc.sp());
        EXPECT(0x6589, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 002F
        gbc.setState(0xd67b, 0xd963, 0xc910, 0xce3c, 0x4995, 0x3330, 0x0, 0x1);
        gbc.writeMem(0x3330, { 0x7b });
        gbc.writeMem(0xd67b, { 0x7e });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd963, gbc.sp());
        EXPECT(0xd67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd67b));
        // 7E 0030
        gbc.setState(0xd09c, 0x71cc, 0xf6d0, 0xdfa3, 0x2343, 0x844b, 0x0, 0x0);
        gbc.writeMem(0x844b, { 0xbb });
        gbc.writeMem(0xd09c, { 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x71cc, gbc.sp());
        EXPECT(0xd09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x844b));
        EXPECT(0x7e, gbc.readMem(0xd09c));
        // 7E 0031
        gbc.setState(0xd3ee, 0x4cf2, 0xe9e0, 0x25ec, 0xd34b, 0xd8cc, 0x1, 0x1);
        gbc.writeMem(0xd3ee, { 0x7e });
        gbc.writeMem(0xd8cc, { 0xae });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4cf2, gbc.sp());
        EXPECT(0xd3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd3ee));
        EXPECT(0xae, gbc.readMem(0xd8cc));
        // 7E 0032
        gbc.setState(0x1617, 0x5336, 0x2770, 0x5657, 0xdf35, 0xf1d4, 0x0, 0x1);
        gbc.writeMem(0x1617, { 0x7e });
        gbc.writeMem(0xf1d4, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5336, gbc.sp());
        EXPECT(0x1618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf1d4));
        // 7E 0033
        gbc.setState(0x4853, 0xe46f, 0x3360, 0x670b, 0x2523, 0x7081, 0x0, 0x0);
        gbc.writeMem(0x4853, { 0x7e });
        gbc.writeMem(0x7081, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe46f, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0034
        gbc.setState(0x7d4b, 0x193b, 0x4fc0, 0x98a9, 0x94fd, 0x9191, 0x0, 0x0);
        gbc.writeMem(0x7d4b, { 0x7e });
        gbc.writeMem(0x9191, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0x7d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x9191));
        // 7E 0035
        gbc.setState(0xb9b2, 0xeaa5, 0x6120, 0x289b, 0x9a30, 0x792a, 0x1, 0x0);
        gbc.writeMem(0x792a, { 0x5b });
        gbc.writeMem(0xb9b2, { 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeaa5, gbc.sp());
        EXPECT(0xb9b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb9b2));
        // 7E 0036
        gbc.setState(0x65e0, 0x5822, 0xb190, 0x8d1e, 0xbb68, 0xd613, 0x0, 0x1);
        gbc.writeMem(0x65e0, { 0x7e });
        gbc.writeMem(0xd613, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5822, gbc.sp());
        EXPECT(0x65e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xd613));
        // 7E 0038
        gbc.setState(0xa250, 0x4d77, 0x6810, 0x2c29, 0xd3da, 0xa4c3, 0x0, 0x1);
        gbc.writeMem(0xa250, { 0x7e });
        gbc.writeMem(0xa4c3, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4d77, gbc.sp());
        EXPECT(0xa251, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa250));
        EXPECT(0xce, gbc.readMem(0xa4c3));
        // 7E 0039
        gbc.setState(0x4fff, 0xddea, 0xfbe0, 0x5c63, 0xd669, 0x2be8, 0x1, 0x0);
        gbc.writeMem(0x2be8, { 0x2 });
        gbc.writeMem(0x4fff, { 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xddea, gbc.sp());
        EXPECT(0x5000, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 003A
        gbc.setState(0x49fa, 0xa147, 0xef70, 0x462a, 0x7c8a, 0x8fc5, 0x1, 0x1);
        gbc.writeMem(0x49fa, { 0x7e });
        gbc.writeMem(0x8fc5, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa147, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0x8fc5));
        // 7E 003B
        gbc.setState(0x91b, 0x223c, 0xb340, 0x315f, 0x4ba4, 0xf935, 0x1, 0x0);
        gbc.writeMem(0x91b, { 0x7e });
        gbc.writeMem(0xf935, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x223c, gbc.sp());
        EXPECT(0x91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xf935));
        // 7E 003C
        gbc.setState(0xdc44, 0xfba2, 0xc6b0, 0x70de, 0x8276, 0xdd80, 0x1, 0x1);
        gbc.writeMem(0xdc44, { 0x7e });
        gbc.writeMem(0xdd80, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfba2, gbc.sp());
        EXPECT(0xdc45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdc44));
        EXPECT(0xde, gbc.readMem(0xdd80));
        // 7E 003D
        gbc.setState(0x630f, 0xb805, 0x8b70, 0x5100, 0x726f, 0x55d3, 0x0, 0x1);
        gbc.writeMem(0x55d3, { 0x8d });
        gbc.writeMem(0x630f, { 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb805, gbc.sp());
        EXPECT(0x6310, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 003E
        gbc.setState(0x92c8, 0x86ae, 0x3070, 0x738, 0x18d5, 0xc82e, 0x1, 0x0);
        gbc.writeMem(0x92c8, { 0x7e });
        gbc.writeMem(0xc82e, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x86ae, gbc.sp());
        EXPECT(0x92c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x92c8));
        EXPECT(0xbe, gbc.readMem(0xc82e));
        // 7E 003F
        gbc.setState(0x9d73, 0x6e8e, 0xef80, 0xaad8, 0x30a4, 0x4ba5, 0x1, 0x0);
        gbc.writeMem(0x4ba5, { 0xdc });
        gbc.writeMem(0x9d73, { 0x7e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6e8e, gbc.sp());
        EXPECT(0x9d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9d73));
        // 7E 0040
        gbc.setState(0xb793, 0x7e5a, 0xf9a0, 0xee8b, 0xe29f, 0x1456, 0x1, 0x0);
        gbc.writeMem(0x1456, { 0xf9 });
        gbc.writeMem(0xb793, { 0x7e });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x7e5a, gbc.sp());
        EXPECT(0xb794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb793));
        // 7E 0041
        gbc.setState(0xab7f, 0x28f0, 0xbd50, 0x3d5, 0x40ef, 0xf51f, 0x1, 0x0);
        gbc.writeMem(0xab7f, { 0x7e });
        gbc.writeMem(0xf51f, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x28f0, gbc.sp());
        EXPECT(0xab80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xab7f));
        EXPECT(0xa7, gbc.readMem(0xf51f));
        // 7E 0043
        gbc.setState(0x8807, 0xda66, 0x9a20, 0x7b0a, 0xe1a2, 0x674a, 0x0, 0x1);
        gbc.writeMem(0x674a, { 0xc0 });
        gbc.writeMem(0x8807, { 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xda66, gbc.sp());
        EXPECT(0x8808, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8807));
        // 7E 0044
        gbc.setState(0xa44a, 0xd382, 0x9a60, 0x7aaa, 0x55e8, 0x3e73, 0x1, 0x0);
        gbc.writeMem(0x3e73, { 0xf8 });
        gbc.writeMem(0xa44a, { 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd382, gbc.sp());
        EXPECT(0xa44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa44a));
        // 7E 0045
        gbc.setState(0xcd0, 0xe2a7, 0x95c0, 0xb2e0, 0xa9e5, 0xeb04, 0x1, 0x1);
        gbc.writeMem(0xcd0, { 0x7e });
        gbc.writeMem(0xeb04, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0xcd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xeb04));
        // 7E 0046
        gbc.setState(0x8614, 0x2e44, 0x83f0, 0x8214, 0x8abf, 0x5f69, 0x0, 0x1);
        gbc.writeMem(0x5f69, { 0xe8 });
        gbc.writeMem(0x8614, { 0x7e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2e44, gbc.sp());
        EXPECT(0x8615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8614));
        // 7E 0048
        gbc.setState(0xd7a4, 0x70b9, 0xb3e0, 0xa4d7, 0x26d8, 0x7059, 0x0, 0x1);
        gbc.writeMem(0x7059, { 0x48 });
        gbc.writeMem(0xd7a4, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x70b9, gbc.sp());
        EXPECT(0xd7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd7a4));
        // 7E 0049
        gbc.setState(0xbefe, 0x8a05, 0x3c20, 0xb6b1, 0x835, 0x24a4, 0x1, 0x1);
        gbc.writeMem(0x24a4, { 0xda });
        gbc.writeMem(0xbefe, { 0x7e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8a05, gbc.sp());
        EXPECT(0xbeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbefe));
        // 7E 004A
        gbc.setState(0x31b, 0x9091, 0x8630, 0xcc96, 0x6662, 0x3ecf, 0x0, 0x1);
        gbc.writeMem(0x31b, { 0x7e });
        gbc.writeMem(0x3ecf, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9091, gbc.sp());
        EXPECT(0x31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 004B
        gbc.setState(0xdca, 0x14a, 0x9820, 0xf98, 0x6379, 0xf7dd, 0x1, 0x0);
        gbc.writeMem(0xdca, { 0x7e });
        gbc.writeMem(0xf7dd, { 0x4f });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x14a, gbc.sp());
        EXPECT(0xdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf7dd));
        // 7E 004C
        gbc.setState(0x3e22, 0x633e, 0xd250, 0xfad9, 0xdae6, 0xa33c, 0x1, 0x0);
        gbc.writeMem(0x3e22, { 0x7e });
        gbc.writeMem(0xa33c, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x633e, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa33c));
        // 7E 004D
        gbc.setState(0xa5fa, 0x2d58, 0x8ed0, 0x54fa, 0xcf76, 0xd2e8, 0x1, 0x1);
        gbc.writeMem(0xa5fa, { 0x7e });
        gbc.writeMem(0xd2e8, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0xa5fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa5fa));
        EXPECT(0x5a, gbc.readMem(0xd2e8));
        // 7E 004E
        gbc.setState(0xca54, 0x23db, 0x1fb0, 0x9b62, 0x635d, 0xc78e, 0x1, 0x1);
        gbc.writeMem(0xc78e, { 0xb8 });
        gbc.writeMem(0xca54, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x23db, gbc.sp());
        EXPECT(0xca55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xc78e));
        EXPECT(0x7e, gbc.readMem(0xca54));
        // 7E 004F
        gbc.setState(0x5af5, 0xec56, 0xe880, 0x3d47, 0xd301, 0x3aaf, 0x0, 0x1);
        gbc.writeMem(0x3aaf, { 0x19 });
        gbc.writeMem(0x5af5, { 0x7e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xec56, gbc.sp());
        EXPECT(0x5af6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0050
        gbc.setState(0xc484, 0x720a, 0x4640, 0xd309, 0xdb06, 0xdc30, 0x0, 0x1);
        gbc.writeMem(0xc484, { 0x7e });
        gbc.writeMem(0xdc30, { 0x7d });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x720a, gbc.sp());
        EXPECT(0xc485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc484));
        EXPECT(0x7d, gbc.readMem(0xdc30));
        // 7E 0051
        gbc.setState(0x51c3, 0x2df9, 0xa2b0, 0xcb71, 0x6e7, 0x9bdd, 0x0, 0x0);
        gbc.writeMem(0x51c3, { 0x7e });
        gbc.writeMem(0x9bdd, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2df9, gbc.sp());
        EXPECT(0x51c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9bdd));
        // 7E 0052
        gbc.setState(0x4900, 0xbb31, 0x47e0, 0x7a15, 0x43c0, 0x1884, 0x0, 0x0);
        gbc.writeMem(0x1884, { 0x61 });
        gbc.writeMem(0x4900, { 0x7e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbb31, gbc.sp());
        EXPECT(0x4901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0053
        gbc.setState(0xa9ac, 0xdb9a, 0x9ab0, 0x609, 0x7997, 0x5161, 0x1, 0x0);
        gbc.writeMem(0x5161, { 0x32 });
        gbc.writeMem(0xa9ac, { 0x7e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdb9a, gbc.sp());
        EXPECT(0xa9ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa9ac));
        // 7E 0054
        gbc.setState(0xe2a2, 0x819f, 0x6450, 0xcf6b, 0xb923, 0x6ddf, 0x1, 0x0);
        gbc.writeMem(0x6ddf, { 0x1 });
        gbc.writeMem(0xe2a2, { 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x819f, gbc.sp());
        EXPECT(0xe2a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe2a2));
        // 7E 0055
        gbc.setState(0xbef2, 0xe5f4, 0x8780, 0x4663, 0x6e0f, 0xd9eb, 0x0, 0x0);
        gbc.writeMem(0xbef2, { 0x7e });
        gbc.writeMem(0xd9eb, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0xbef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbef2));
        EXPECT(0x72, gbc.readMem(0xd9eb));
        // 7E 0056
        gbc.setState(0x6bf4, 0x84ac, 0x1e10, 0x471f, 0x927f, 0x478e, 0x0, 0x1);
        gbc.writeMem(0x478e, { 0xd8 });
        gbc.writeMem(0x6bf4, { 0x7e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x84ac, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0057
        gbc.setState(0x4e25, 0x426, 0x5390, 0x14f1, 0x4239, 0x53a2, 0x0, 0x0);
        gbc.writeMem(0x4e25, { 0x7e });
        gbc.writeMem(0x53a2, { 0x69 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x426, gbc.sp());
        EXPECT(0x4e26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0058
        gbc.setState(0x2e4f, 0xebef, 0x4f20, 0xca7a, 0x19a2, 0xf6d6, 0x1, 0x0);
        gbc.writeMem(0x2e4f, { 0x7e });
        gbc.writeMem(0xf6d6, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0x2e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc2, gbc.readMem(0xf6d6));
        // 7E 0059
        gbc.setState(0xd75a, 0xa0e8, 0x9b0, 0xb918, 0x272d, 0x5dbf, 0x0, 0x1);
        gbc.writeMem(0x5dbf, { 0x77 });
        gbc.writeMem(0xd75a, { 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa0e8, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd75a));
        // 7E 005A
        gbc.setState(0x1864, 0x6c, 0xe720, 0x4a02, 0xc497, 0x8325, 0x1, 0x0);
        gbc.writeMem(0x1864, { 0x7e });
        gbc.writeMem(0x8325, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6c, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8325));
        // 7E 005B
        gbc.setState(0x2170, 0x7e2f, 0x9d00, 0xda54, 0x28a, 0x7ba, 0x1, 0x0);
        gbc.writeMem(0x7ba, { 0xa5 });
        gbc.writeMem(0x2170, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e2f, gbc.sp());
        EXPECT(0x2171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 005C
        gbc.setState(0x6e29, 0xfaa5, 0x5aa0, 0xd3f5, 0xb0af, 0x5420, 0x0, 0x1);
        gbc.writeMem(0x5420, { 0xd5 });
        gbc.writeMem(0x6e29, { 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xfaa5, gbc.sp());
        EXPECT(0x6e2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 005D
        gbc.setState(0xaf4, 0xcf5, 0xc4d0, 0x533e, 0xbd3b, 0xff27, 0x1, 0x1);
        gbc.writeMem(0xaf4, { 0x7e });
        gbc.writeMem(0xff27, { 0x3c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcf5, gbc.sp());
        EXPECT(0xaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xff27));
        // 7E 005F
        gbc.setState(0xaa44, 0x9afe, 0xb2f0, 0xd76e, 0x2a68, 0xa57c, 0x1, 0x0);
        gbc.writeMem(0xa57c, { 0x31 });
        gbc.writeMem(0xaa44, { 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9afe, gbc.sp());
        EXPECT(0xaa45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xa57c));
        EXPECT(0x7e, gbc.readMem(0xaa44));
        // 7E 0060
        gbc.setState(0x7888, 0xe13c, 0x55c0, 0xe0cb, 0xbb22, 0xf687, 0x1, 0x0);
        gbc.writeMem(0x7888, { 0x7e });
        gbc.writeMem(0xf687, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe13c, gbc.sp());
        EXPECT(0x7889, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xf687));
        // 7E 0061
        gbc.setState(0x6399, 0x32bd, 0xc020, 0xeba6, 0xd55e, 0x286f, 0x1, 0x1);
        gbc.writeMem(0x286f, { 0x3f });
        gbc.writeMem(0x6399, { 0x7e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x32bd, gbc.sp());
        EXPECT(0x639a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0062
        gbc.setState(0x3b31, 0x3c5e, 0x7b90, 0x9d41, 0x724d, 0xbe0f, 0x1, 0x0);
        gbc.writeMem(0x3b31, { 0x7e });
        gbc.writeMem(0xbe0f, { 0xeb });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3c5e, gbc.sp());
        EXPECT(0x3b32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xbe0f));
        // 7E 0063
        gbc.setState(0x13af, 0x7383, 0xe220, 0xd3d, 0x6ee9, 0x31fd, 0x0, 0x1);
        gbc.writeMem(0x13af, { 0x7e });
        gbc.writeMem(0x31fd, { 0x56 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0x13b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0064
        gbc.setState(0x1654, 0xb425, 0xe860, 0xc2d2, 0x4722, 0xc37, 0x0, 0x0);
        gbc.writeMem(0xc37, { 0x14 });
        gbc.writeMem(0x1654, { 0x7e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb425, gbc.sp());
        EXPECT(0x1655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0065
        gbc.setState(0xcfd3, 0x8202, 0xb310, 0x2e53, 0x11c0, 0x1ecf, 0x0, 0x1);
        gbc.writeMem(0x1ecf, { 0x2e });
        gbc.writeMem(0xcfd3, { 0x7e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0xcfd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcfd3));
        // 7E 0066
        gbc.setState(0x951, 0x1e68, 0x6d60, 0x6059, 0xf269, 0xef6e, 0x0, 0x1);
        gbc.writeMem(0x951, { 0x7e });
        gbc.writeMem(0xef6e, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1e68, gbc.sp());
        EXPECT(0x952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xef6e));
        // 7E 0068
        gbc.setState(0xe5da, 0x2133, 0xa9a0, 0xf568, 0x55dc, 0x6fa1, 0x1, 0x1);
        gbc.writeMem(0x6fa1, { 0x11 });
        gbc.writeMem(0xe5da, { 0x7e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2133, gbc.sp());
        EXPECT(0xe5db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe5da));
        // 7E 0069
        gbc.setState(0x76be, 0x5f19, 0x9280, 0x8f2, 0xe3ea, 0x4f18, 0x1, 0x0);
        gbc.writeMem(0x4f18, { 0x90 });
        gbc.writeMem(0x76be, { 0x7e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5f19, gbc.sp());
        EXPECT(0x76bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 006A
        gbc.setState(0x6275, 0x3fe8, 0x74a0, 0x298a, 0xc9f5, 0x2510, 0x0, 0x1);
        gbc.writeMem(0x2510, { 0xbc });
        gbc.writeMem(0x6275, { 0x7e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3fe8, gbc.sp());
        EXPECT(0x6276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 006B
        gbc.setState(0xacd8, 0xc264, 0x5d20, 0x277e, 0xa280, 0xeb06, 0x1, 0x1);
        gbc.writeMem(0xacd8, { 0x7e });
        gbc.writeMem(0xeb06, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc264, gbc.sp());
        EXPECT(0xacd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xacd8));
        EXPECT(0x85, gbc.readMem(0xeb06));
        // 7E 006C
        gbc.setState(0x4aea, 0xdb8a, 0x7520, 0xf519, 0xe06e, 0xb591, 0x0, 0x0);
        gbc.writeMem(0x4aea, { 0x7e });
        gbc.writeMem(0xb591, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xdb8a, gbc.sp());
        EXPECT(0x4aeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xb591));
        // 7E 006D
        gbc.setState(0x9f6d, 0xeccf, 0x4ca0, 0xa6ae, 0xd556, 0xb1d8, 0x0, 0x1);
        gbc.writeMem(0x9f6d, { 0x7e });
        gbc.writeMem(0xb1d8, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xeccf, gbc.sp());
        EXPECT(0x9f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9f6d));
        EXPECT(0xbf, gbc.readMem(0xb1d8));
        // 7E 006E
        gbc.setState(0xac23, 0x9ed1, 0x1050, 0xd049, 0x55e9, 0xa479, 0x1, 0x0);
        gbc.writeMem(0xa479, { 0x6e });
        gbc.writeMem(0xac23, { 0x7e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0xac24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xa479));
        EXPECT(0x7e, gbc.readMem(0xac23));
        // 7E 006F
        gbc.setState(0x3eff, 0x9142, 0xd8d0, 0x2d57, 0xbcbf, 0xa51a, 0x0, 0x0);
        gbc.writeMem(0x3eff, { 0x7e });
        gbc.writeMem(0xa51a, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9142, gbc.sp());
        EXPECT(0x3f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xa51a));
        // 7E 0070
        gbc.setState(0xcd72, 0xfcf1, 0x7fa0, 0x50f7, 0x870d, 0x8510, 0x1, 0x0);
        gbc.writeMem(0x8510, { 0x48 });
        gbc.writeMem(0xcd72, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0xcd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8510));
        EXPECT(0x7e, gbc.readMem(0xcd72));
        // 7E 0071
        gbc.setState(0x79c9, 0x248b, 0x2990, 0xa3be, 0xbce4, 0x2a2, 0x0, 0x0);
        gbc.writeMem(0x2a2, { 0x9f });
        gbc.writeMem(0x79c9, { 0x7e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x248b, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0072
        gbc.setState(0x3faf, 0xda0a, 0x65d0, 0x88a6, 0x5c8a, 0x43cd, 0x0, 0x0);
        gbc.writeMem(0x3faf, { 0x7e });
        gbc.writeMem(0x43cd, { 0xbf });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xda0a, gbc.sp());
        EXPECT(0x3fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0073
        gbc.setState(0x8d4a, 0x2b4, 0x8380, 0x4c0b, 0x71e7, 0x2d4e, 0x1, 0x0);
        gbc.writeMem(0x2d4e, { 0xd });
        gbc.writeMem(0x8d4a, { 0x7e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2b4, gbc.sp());
        EXPECT(0x8d4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8d4a));
        // 7E 0074
        gbc.setState(0xcf9a, 0x8021, 0xdca0, 0x233b, 0xcda9, 0x589e, 0x1, 0x0);
        gbc.writeMem(0x589e, { 0xca });
        gbc.writeMem(0xcf9a, { 0x7e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8021, gbc.sp());
        EXPECT(0xcf9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcf9a));
        // 7E 0075
        gbc.setState(0xb1df, 0x1179, 0x8640, 0x33ad, 0x9726, 0xd8c4, 0x0, 0x0);
        gbc.writeMem(0xb1df, { 0x7e });
        gbc.writeMem(0xd8c4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1179, gbc.sp());
        EXPECT(0xb1e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb1df));
        EXPECT(0xf, gbc.readMem(0xd8c4));
        // 7E 0076
        gbc.setState(0x5d1d, 0x2c27, 0x8af0, 0x28e3, 0x2fc7, 0xc2ce, 0x0, 0x1);
        gbc.writeMem(0x5d1d, { 0x7e });
        gbc.writeMem(0xc2ce, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x2c27, gbc.sp());
        EXPECT(0x5d1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xc2ce));
        // 7E 0077
        gbc.setState(0x4d9c, 0x52bb, 0xd1e0, 0xdc41, 0x1bd1, 0x7a6e, 0x0, 0x0);
        gbc.writeMem(0x4d9c, { 0x7e });
        gbc.writeMem(0x7a6e, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x52bb, gbc.sp());
        EXPECT(0x4d9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0078
        gbc.setState(0xb964, 0x16a5, 0xeef0, 0xaf00, 0x1e9, 0xa507, 0x0, 0x1);
        gbc.writeMem(0xa507, { 0xfc });
        gbc.writeMem(0xb964, { 0x7e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x16a5, gbc.sp());
        EXPECT(0xb965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xa507));
        EXPECT(0x7e, gbc.readMem(0xb964));
        // 7E 0079
        gbc.setState(0x74f6, 0x6b88, 0x35c0, 0xb256, 0x1864, 0x8ed0, 0x0, 0x1);
        gbc.writeMem(0x74f6, { 0x7e });
        gbc.writeMem(0x8ed0, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6b88, gbc.sp());
        EXPECT(0x74f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0x8ed0));
        // 7E 007A
        gbc.setState(0x7d96, 0x9082, 0x40, 0x760f, 0x4543, 0x8d90, 0x0, 0x1);
        gbc.writeMem(0x7d96, { 0x7e });
        gbc.writeMem(0x8d90, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9082, gbc.sp());
        EXPECT(0x7d97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0x8d90));
        // 7E 007B
        gbc.setState(0xb007, 0x1ac7, 0xaab0, 0xc8a5, 0x48e9, 0x2c53, 0x0, 0x0);
        gbc.writeMem(0x2c53, { 0x3b });
        gbc.writeMem(0xb007, { 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1ac7, gbc.sp());
        EXPECT(0xb008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb007));
        // 7E 007C
        gbc.setState(0xcf77, 0xdd7, 0x7800, 0xcbfa, 0xa97b, 0xb036, 0x1, 0x0);
        gbc.writeMem(0xb036, { 0xc8 });
        gbc.writeMem(0xcf77, { 0x7e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0xcf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xb036));
        EXPECT(0x7e, gbc.readMem(0xcf77));
        // 7E 007D
        gbc.setState(0x617c, 0x539a, 0x9ce0, 0xdc5a, 0xd8bb, 0x7a55, 0x0, 0x1);
        gbc.writeMem(0x617c, { 0x7e });
        gbc.writeMem(0x7a55, { 0xef });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x539a, gbc.sp());
        EXPECT(0x617d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 007F
        gbc.setState(0x58d9, 0x5a9e, 0x4e50, 0x2ed3, 0xe19c, 0xe14c, 0x1, 0x0);
        gbc.writeMem(0x58d9, { 0x7e });
        gbc.writeMem(0xe14c, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5a9e, gbc.sp());
        EXPECT(0x58da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xe14c));
        // 7E 0080
        gbc.setState(0x3c3f, 0x19ec, 0x70e0, 0x60cd, 0x3202, 0xae61, 0x1, 0x0);
        gbc.writeMem(0x3c3f, { 0x7e });
        gbc.writeMem(0xae61, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x19ec, gbc.sp());
        EXPECT(0x3c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xae61));
        // 7E 0081
        gbc.setState(0x210e, 0xacf7, 0xa030, 0x365c, 0x9d06, 0xf4a1, 0x0, 0x1);
        gbc.writeMem(0x210e, { 0x7e });
        gbc.writeMem(0xf4a1, { 0x59 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xacf7, gbc.sp());
        EXPECT(0x210f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xf4a1));
        // 7E 0082
        gbc.setState(0x20f8, 0x4c5, 0xa7f0, 0xe40c, 0xe2d5, 0xa2bd, 0x0, 0x0);
        gbc.writeMem(0x20f8, { 0x7e });
        gbc.writeMem(0xa2bd, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4c5, gbc.sp());
        EXPECT(0x20f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xa2bd));
        // 7E 0083
        gbc.setState(0x814b, 0x9e14, 0xd2b0, 0x75be, 0x3cfd, 0x5037, 0x0, 0x1);
        gbc.writeMem(0x5037, { 0xa4 });
        gbc.writeMem(0x814b, { 0x7e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9e14, gbc.sp());
        EXPECT(0x814c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x814b));
        // 7E 0084
        gbc.setState(0x162d, 0x702f, 0xc6f0, 0x4ea9, 0x681c, 0xe17f, 0x1, 0x1);
        gbc.writeMem(0x162d, { 0x7e });
        gbc.writeMem(0xe17f, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x702f, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xe17f));
        // 7E 0085
        gbc.setState(0x9245, 0xe9a, 0x140, 0xccf0, 0x3b46, 0xa311, 0x0, 0x1);
        gbc.writeMem(0x9245, { 0x7e });
        gbc.writeMem(0xa311, { 0x92 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe9a, gbc.sp());
        EXPECT(0x9246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9245));
        EXPECT(0x92, gbc.readMem(0xa311));
        // 7E 0086
        gbc.setState(0xc468, 0x7dae, 0x4450, 0x8e43, 0x7c1d, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0x5bbc, { 0x9d });
        gbc.writeMem(0xc468, { 0x7e });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x7dae, gbc.sp());
        EXPECT(0xc469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc468));
        // 7E 0087
        gbc.setState(0x5c14, 0xf4cd, 0xeae0, 0x1314, 0xb171, 0xe7e9, 0x1, 0x0);
        gbc.writeMem(0x5c14, { 0x7e });
        gbc.writeMem(0xe7e9, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf4cd, gbc.sp());
        EXPECT(0x5c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xe7e9));
        // 7E 0088
        gbc.setState(0x1af2, 0xe660, 0x6920, 0x7ba7, 0x7724, 0x20ec, 0x1, 0x0);
        gbc.writeMem(0x1af2, { 0x7e });
        gbc.writeMem(0x20ec, { 0x9e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe660, gbc.sp());
        EXPECT(0x1af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0089
        gbc.setState(0xcd16, 0xf4bf, 0x4e00, 0x35a5, 0x9ef4, 0xacbd, 0x1, 0x0);
        gbc.writeMem(0xacbd, { 0xfa });
        gbc.writeMem(0xcd16, { 0x7e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xf4bf, gbc.sp());
        EXPECT(0xcd17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xacbd));
        EXPECT(0x7e, gbc.readMem(0xcd16));
        // 7E 008A
        gbc.setState(0x7eab, 0x2193, 0x2820, 0x101c, 0xb215, 0x74d9, 0x1, 0x0);
        gbc.writeMem(0x74d9, { 0x61 });
        gbc.writeMem(0x7eab, { 0x7e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2193, gbc.sp());
        EXPECT(0x7eac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 008B
        gbc.setState(0x4fc5, 0x404d, 0x4510, 0x961e, 0xeed5, 0x4925, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0x43 });
        gbc.writeMem(0x4fc5, { 0x7e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x404d, gbc.sp());
        EXPECT(0x4fc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 008C
        gbc.setState(0xaace, 0xafba, 0x4a0, 0x4751, 0x48dd, 0x4612, 0x1, 0x1);
        gbc.writeMem(0x4612, { 0x85 });
        gbc.writeMem(0xaace, { 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0xaacf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaace));
        // 7E 008D
        gbc.setState(0x6b14, 0x5876, 0x5dc0, 0x5245, 0x105c, 0x2513, 0x0, 0x0);
        gbc.writeMem(0x2513, { 0x7d });
        gbc.writeMem(0x6b14, { 0x7e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5876, gbc.sp());
        EXPECT(0x6b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 008E
        gbc.setState(0x6658, 0x20cb, 0xd4f0, 0x8137, 0xa789, 0x6f90, 0x0, 0x1);
        gbc.writeMem(0x6658, { 0x7e });
        gbc.writeMem(0x6f90, { 0xd4 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x20cb, gbc.sp());
        EXPECT(0x6659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0090
        gbc.setState(0xcbe9, 0x465c, 0x39a0, 0x202f, 0xd902, 0xceda, 0x1, 0x1);
        gbc.writeMem(0xcbe9, { 0x7e });
        gbc.writeMem(0xceda, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0xcbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcbe9));
        EXPECT(0xb7, gbc.readMem(0xceda));
        // 7E 0091
        gbc.setState(0x236, 0x3d5f, 0xe7d0, 0x27bd, 0x42a1, 0xd6c5, 0x0, 0x1);
        gbc.writeMem(0x236, { 0x7e });
        gbc.writeMem(0xd6c5, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3d5f, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xd6c5));
        // 7E 0092
        gbc.setState(0x534e, 0x2fa9, 0xe7b0, 0x1a17, 0x50e2, 0xe3a1, 0x1, 0x0);
        gbc.writeMem(0x534e, { 0x7e });
        gbc.writeMem(0xe3a1, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2fa9, gbc.sp());
        EXPECT(0x534f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xe3a1));
        // 7E 0093
        gbc.setState(0x12fd, 0xb7b2, 0x83d0, 0x62bf, 0xaa15, 0x1a97, 0x1, 0x1);
        gbc.writeMem(0x12fd, { 0x7e });
        gbc.writeMem(0x1a97, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb7b2, gbc.sp());
        EXPECT(0x12fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0094
        gbc.setState(0x6353, 0xc243, 0x1c0, 0x5cce, 0xffdb, 0x6f6c, 0x1, 0x0);
        gbc.writeMem(0x6353, { 0x7e });
        gbc.writeMem(0x6f6c, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xc243, gbc.sp());
        EXPECT(0x6354, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0095
        gbc.setState(0xd9a4, 0x81d, 0xfa10, 0x408e, 0xac2d, 0x5994, 0x1, 0x0);
        gbc.writeMem(0x5994, { 0xd1 });
        gbc.writeMem(0xd9a4, { 0x7e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x81d, gbc.sp());
        EXPECT(0xd9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd9a4));
        // 7E 0096
        gbc.setState(0x4e77, 0x6dda, 0x920, 0xee7f, 0x5a5b, 0x92c0, 0x1, 0x0);
        gbc.writeMem(0x4e77, { 0x7e });
        gbc.writeMem(0x92c0, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6dda, gbc.sp());
        EXPECT(0x4e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x92c0));
        // 7E 0097
        gbc.setState(0x3af, 0x1803, 0x94d0, 0xa896, 0x2345, 0x42c8, 0x1, 0x1);
        gbc.writeMem(0x3af, { 0x7e });
        gbc.writeMem(0x42c8, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x1803, gbc.sp());
        EXPECT(0x3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0098
        gbc.setState(0xbe69, 0x2c2d, 0xafa0, 0xc219, 0x1b13, 0x9d27, 0x1, 0x0);
        gbc.writeMem(0x9d27, { 0x72 });
        gbc.writeMem(0xbe69, { 0x7e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2c2d, gbc.sp());
        EXPECT(0xbe6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9d27));
        EXPECT(0x7e, gbc.readMem(0xbe69));
        // 7E 0099
        gbc.setState(0x4c09, 0x7772, 0xc270, 0x9aa1, 0xddc9, 0xd68d, 0x0, 0x0);
        gbc.writeMem(0x4c09, { 0x7e });
        gbc.writeMem(0xd68d, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0x4c0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xd68d));
        // 7E 009A
        gbc.setState(0xe7a6, 0x545d, 0x5670, 0x2b7d, 0xe435, 0xaedd, 0x1, 0x0);
        gbc.writeMem(0xaedd, { 0x59 });
        gbc.writeMem(0xe7a6, { 0x7e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x545d, gbc.sp());
        EXPECT(0xe7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xaedd));
        EXPECT(0x7e, gbc.readMem(0xe7a6));
        // 7E 009B
        gbc.setState(0x9175, 0xc827, 0xabb0, 0xd2b6, 0xa6ca, 0xd8c4, 0x0, 0x0);
        gbc.writeMem(0x9175, { 0x7e });
        gbc.writeMem(0xd8c4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc827, gbc.sp());
        EXPECT(0x9176, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9175));
        EXPECT(0xf, gbc.readMem(0xd8c4));
        // 7E 009C
        gbc.setState(0x6a7f, 0x95b0, 0x6c50, 0xc11d, 0xf828, 0xa391, 0x0, 0x1);
        gbc.writeMem(0x6a7f, { 0x7e });
        gbc.writeMem(0xa391, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0x6a80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa391));
        // 7E 009D
        gbc.setState(0x6543, 0x880d, 0xade0, 0xe525, 0x9dc9, 0x7f90, 0x1, 0x1);
        gbc.writeMem(0x6543, { 0x7e });
        gbc.writeMem(0x7f90, { 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x880d, gbc.sp());
        EXPECT(0x6544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 009E
        gbc.setState(0xdf8e, 0x3bfd, 0x49a0, 0xb6b1, 0x81b2, 0x9d72, 0x1, 0x0);
        gbc.writeMem(0x9d72, { 0x17 });
        gbc.writeMem(0xdf8e, { 0x7e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0xdf8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9d72));
        EXPECT(0x7e, gbc.readMem(0xdf8e));
        // 7E 009F
        gbc.setState(0x4bfe, 0x1751, 0x63c0, 0xf0de, 0x6ac1, 0x373, 0x1, 0x0);
        gbc.writeMem(0x373, { 0x7 });
        gbc.writeMem(0x4bfe, { 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00A0
        gbc.setState(0xdad8, 0x1a14, 0x2ed0, 0xad0, 0xc535, 0xf04a, 0x1, 0x1);
        gbc.writeMem(0xdad8, { 0x7e });
        gbc.writeMem(0xf04a, { 0x62 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x1a14, gbc.sp());
        EXPECT(0xdad9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdad8));
        EXPECT(0x62, gbc.readMem(0xf04a));
        // 7E 00A1
        gbc.setState(0xdb5, 0xe206, 0x4ca0, 0x2956, 0xb047, 0x71c9, 0x0, 0x1);
        gbc.writeMem(0xdb5, { 0x7e });
        gbc.writeMem(0x71c9, { 0x50 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe206, gbc.sp());
        EXPECT(0xdb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00A2
        gbc.setState(0x4977, 0xb2ed, 0x3060, 0xb02e, 0x499a, 0xa366, 0x1, 0x0);
        gbc.writeMem(0x4977, { 0x7e });
        gbc.writeMem(0xa366, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb2ed, gbc.sp());
        EXPECT(0x4978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa366));
        // 7E 00A3
        gbc.setState(0x57b, 0xa26f, 0x9550, 0xf12d, 0xca6d, 0x9b79, 0x0, 0x0);
        gbc.writeMem(0x57b, { 0x7e });
        gbc.writeMem(0x9b79, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa26f, gbc.sp());
        EXPECT(0x57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x9b79));
        // 7E 00A4
        gbc.setState(0x9e9e, 0xa43, 0x51a0, 0x3bdc, 0x18bd, 0x5e69, 0x0, 0x1);
        gbc.writeMem(0x5e69, { 0xa5 });
        gbc.writeMem(0x9e9e, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa43, gbc.sp());
        EXPECT(0x9e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9e9e));
        // 7E 00A5
        gbc.setState(0x1f68, 0xb2ad, 0x6de0, 0x2cd0, 0xb965, 0xf647, 0x1, 0x0);
        gbc.writeMem(0x1f68, { 0x7e });
        gbc.writeMem(0xf647, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb2ad, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xf647));
        // 7E 00A6
        gbc.setState(0xb770, 0xe8fe, 0x9460, 0xf872, 0x12f2, 0x2cd4, 0x1, 0x0);
        gbc.writeMem(0x2cd4, { 0xe4 });
        gbc.writeMem(0xb770, { 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xe8fe, gbc.sp());
        EXPECT(0xb771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb770));
        // 7E 00A7
        gbc.setState(0x40c3, 0x453, 0x11f0, 0xe078, 0xa21d, 0xbf7f, 0x1, 0x1);
        gbc.writeMem(0x40c3, { 0x7e });
        gbc.writeMem(0xbf7f, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0x40c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xbf7f));
        // 7E 00A9
        gbc.setState(0x8308, 0x3095, 0x2bb0, 0xc063, 0xc46, 0xa707, 0x0, 0x0);
        gbc.writeMem(0x8308, { 0x7e });
        gbc.writeMem(0xa707, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3095, gbc.sp());
        EXPECT(0x8309, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8308));
        EXPECT(0x8e, gbc.readMem(0xa707));
        // 7E 00AA
        gbc.setState(0xee29, 0x18d, 0x9e70, 0x65bc, 0x9970, 0x5c3, 0x1, 0x1);
        gbc.writeMem(0x5c3, { 0xce });
        gbc.writeMem(0xee29, { 0x7e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0xee2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xee29));
        // 7E 00AB
        gbc.setState(0x6dd1, 0x1b43, 0x250, 0xdfb4, 0x129e, 0x8036, 0x0, 0x1);
        gbc.writeMem(0x6dd1, { 0x7e });
        gbc.writeMem(0x8036, { 0x40 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1b43, gbc.sp());
        EXPECT(0x6dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0x8036));
        // 7E 00AC
        gbc.setState(0xe82b, 0xdfbd, 0xdac0, 0xf325, 0xcb02, 0xf59a, 0x0, 0x0);
        gbc.writeMem(0xe82b, { 0x7e });
        gbc.writeMem(0xf59a, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdfbd, gbc.sp());
        EXPECT(0xe82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe82b));
        EXPECT(0xf, gbc.readMem(0xf59a));
        // 7E 00AD
        gbc.setState(0x34cc, 0x7e9, 0x7780, 0x16f, 0x6e31, 0x21a1, 0x0, 0x1);
        gbc.writeMem(0x21a1, { 0x68 });
        gbc.writeMem(0x34cc, { 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7e9, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00AE
        gbc.setState(0xd046, 0xde81, 0xfb60, 0x2178, 0x468a, 0x4259, 0x0, 0x0);
        gbc.writeMem(0x4259, { 0x36 });
        gbc.writeMem(0xd046, { 0x7e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xde81, gbc.sp());
        EXPECT(0xd047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd046));
        // 7E 00AF
        gbc.setState(0xefe, 0x5380, 0x27b0, 0x6cfb, 0x4269, 0xc7ed, 0x1, 0x1);
        gbc.writeMem(0xefe, { 0x7e });
        gbc.writeMem(0xc7ed, { 0x9d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x5380, gbc.sp());
        EXPECT(0xeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc7ed));
        // 7E 00B0
        gbc.setState(0x7fc3, 0x74ed, 0x9f60, 0x45f0, 0x9488, 0x12a5, 0x1, 0x0);
        gbc.writeMem(0x12a5, { 0xb });
        gbc.writeMem(0x7fc3, { 0x7e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x74ed, gbc.sp());
        EXPECT(0x7fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00B1
        gbc.setState(0x6336, 0x860f, 0x2e80, 0xdabf, 0x86c5, 0x8228, 0x1, 0x0);
        gbc.writeMem(0x6336, { 0x7e });
        gbc.writeMem(0x8228, { 0x3 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x860f, gbc.sp());
        EXPECT(0x6337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x8228));
        // 7E 00B2
        gbc.setState(0x17cf, 0x65b6, 0xb960, 0x7ec8, 0xabc9, 0x6be8, 0x0, 0x0);
        gbc.writeMem(0x17cf, { 0x7e });
        gbc.writeMem(0x6be8, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x65b6, gbc.sp());
        EXPECT(0x17d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00B3
        gbc.setState(0x317e, 0x779c, 0xd6e0, 0xe8ba, 0x476a, 0xb66e, 0x1, 0x0);
        gbc.writeMem(0x317e, { 0x7e });
        gbc.writeMem(0xb66e, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x779c, gbc.sp());
        EXPECT(0x317f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb66e));
        // 7E 00B4
        gbc.setState(0x99d3, 0x4d6c, 0xf590, 0xfc79, 0xc37a, 0x1c9f, 0x0, 0x0);
        gbc.writeMem(0x1c9f, { 0xc9 });
        gbc.writeMem(0x99d3, { 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4d6c, gbc.sp());
        EXPECT(0x99d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x99d3));
        // 7E 00B5
        gbc.setState(0xdd7a, 0xe3c0, 0x530, 0x6ece, 0x7218, 0x9ca0, 0x0, 0x1);
        gbc.writeMem(0x9ca0, { 0x3b });
        gbc.writeMem(0xdd7a, { 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xe3c0, gbc.sp());
        EXPECT(0xdd7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9ca0));
        EXPECT(0x7e, gbc.readMem(0xdd7a));
        // 7E 00B6
        gbc.setState(0x1017, 0x2c6e, 0xce50, 0xb73b, 0xae2b, 0x9eeb, 0x0, 0x1);
        gbc.writeMem(0x1017, { 0x7e });
        gbc.writeMem(0x9eeb, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2c6e, gbc.sp());
        EXPECT(0x1018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0x9eeb));
        // 7E 00B7
        gbc.setState(0x46ad, 0x2dbe, 0xf6c0, 0xe11b, 0xb8ff, 0x32c6, 0x1, 0x0);
        gbc.writeMem(0x32c6, { 0x28 });
        gbc.writeMem(0x46ad, { 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2dbe, gbc.sp());
        EXPECT(0x46ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00B8
        gbc.setState(0x830e, 0xae53, 0x1c20, 0x55b5, 0x5bfd, 0xbeb0, 0x0, 0x0);
        gbc.writeMem(0x830e, { 0x7e });
        gbc.writeMem(0xbeb0, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xae53, gbc.sp());
        EXPECT(0x830f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x830e));
        EXPECT(0x84, gbc.readMem(0xbeb0));
        // 7E 00B9
        gbc.setState(0x500e, 0xced5, 0xa60, 0xcb5f, 0xece0, 0x1085, 0x0, 0x1);
        gbc.writeMem(0x1085, { 0xed });
        gbc.writeMem(0x500e, { 0x7e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xced5, gbc.sp());
        EXPECT(0x500f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00BA
        gbc.setState(0xabb4, 0xc6ce, 0x96d0, 0xa5dc, 0xb64, 0x3a1d, 0x0, 0x1);
        gbc.writeMem(0x3a1d, { 0x91 });
        gbc.writeMem(0xabb4, { 0x7e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc6ce, gbc.sp());
        EXPECT(0xabb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xabb4));
        // 7E 00BB
        gbc.setState(0x137b, 0x809e, 0x610, 0x5d58, 0xbd58, 0x2295, 0x0, 0x1);
        gbc.writeMem(0x137b, { 0x7e });
        gbc.writeMem(0x2295, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x809e, gbc.sp());
        EXPECT(0x137c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00BC
        gbc.setState(0x982d, 0x6691, 0xeba0, 0x5482, 0x6f7f, 0x2761, 0x0, 0x1);
        gbc.writeMem(0x2761, { 0x18 });
        gbc.writeMem(0x982d, { 0x7e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6691, gbc.sp());
        EXPECT(0x982e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x982d));
        // 7E 00BD
        gbc.setState(0x655c, 0xbc5c, 0x2db0, 0x35fe, 0x7b12, 0x56d3, 0x1, 0x1);
        gbc.writeMem(0x56d3, { 0x98 });
        gbc.writeMem(0x655c, { 0x7e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0x655d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00BF
        gbc.setState(0x4012, 0x272a, 0xb00, 0xfc68, 0x8848, 0x9ef, 0x0, 0x1);
        gbc.writeMem(0x9ef, { 0x87 });
        gbc.writeMem(0x4012, { 0x7e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x272a, gbc.sp());
        EXPECT(0x4013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00C0
        gbc.setState(0x573e, 0x78a5, 0xad00, 0xa04e, 0x7869, 0xc4df, 0x1, 0x1);
        gbc.writeMem(0x573e, { 0x7e });
        gbc.writeMem(0xc4df, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x78a5, gbc.sp());
        EXPECT(0x573f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xc4df));
        // 7E 00C1
        gbc.setState(0xae6f, 0x5ac1, 0x4410, 0x5d26, 0x579c, 0x178a, 0x1, 0x0);
        gbc.writeMem(0x178a, { 0xc6 });
        gbc.writeMem(0xae6f, { 0x7e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5ac1, gbc.sp());
        EXPECT(0xae70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xae6f));
        // 7E 00C2
        gbc.setState(0xac86, 0x4f8e, 0xf800, 0xb423, 0x28e6, 0x5249, 0x1, 0x0);
        gbc.writeMem(0x5249, { 0xfc });
        gbc.writeMem(0xac86, { 0x7e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4f8e, gbc.sp());
        EXPECT(0xac87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xac86));
        // 7E 00C3
        gbc.setState(0x2340, 0xb92a, 0x9a60, 0x1ab4, 0xa66a, 0x87cb, 0x1, 0x0);
        gbc.writeMem(0x2340, { 0x7e });
        gbc.writeMem(0x87cb, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb92a, gbc.sp());
        EXPECT(0x2341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x87cb));
        // 7E 00C4
        gbc.setState(0x9d14, 0x100, 0x89c0, 0xbf1a, 0x7093, 0x92e2, 0x1, 0x0);
        gbc.writeMem(0x92e2, { 0xbb });
        gbc.writeMem(0x9d14, { 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x100, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x92e2));
        EXPECT(0x7e, gbc.readMem(0x9d14));
        // 7E 00C5
        gbc.setState(0x4405, 0x7fbc, 0x4810, 0x66b2, 0xc67b, 0xbf44, 0x1, 0x1);
        gbc.writeMem(0x4405, { 0x7e });
        gbc.writeMem(0xbf44, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7fbc, gbc.sp());
        EXPECT(0x4406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xbf44));
        // 7E 00C6
        gbc.setState(0x3f7b, 0xd98f, 0xfaa0, 0xb36f, 0xdede, 0x9aa5, 0x1, 0x0);
        gbc.writeMem(0x3f7b, { 0x7e });
        gbc.writeMem(0x9aa5, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0x3f7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0x9aa5));
        // 7E 00C7
        gbc.setState(0x6758, 0x6449, 0xec00, 0x5627, 0x3709, 0xd432, 0x1, 0x1);
        gbc.writeMem(0x6758, { 0x7e });
        gbc.writeMem(0xd432, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6449, gbc.sp());
        EXPECT(0x6759, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xd432));
        // 7E 00C8
        gbc.setState(0x10b6, 0xdf04, 0x13e0, 0xb6c0, 0xb57f, 0x125, 0x1, 0x1);
        gbc.writeMem(0x125, { 0x3e });
        gbc.writeMem(0x10b6, { 0x7e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xdf04, gbc.sp());
        EXPECT(0x10b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00C9
        gbc.setState(0xd04a, 0x5304, 0xd140, 0x770a, 0xc3b, 0x6cb1, 0x1, 0x0);
        gbc.writeMem(0x6cb1, { 0x6e });
        gbc.writeMem(0xd04a, { 0x7e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5304, gbc.sp());
        EXPECT(0xd04b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd04a));
        // 7E 00CB
        gbc.setState(0xcb18, 0xb3b1, 0xce30, 0x39c4, 0x3086, 0x588e, 0x0, 0x0);
        gbc.writeMem(0x588e, { 0x6c });
        gbc.writeMem(0xcb18, { 0x7e });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb3b1, gbc.sp());
        EXPECT(0xcb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcb18));
        // 7E 00CC
        gbc.setState(0x63f3, 0x1781, 0xd6b0, 0xa8f0, 0x786f, 0x2039, 0x0, 0x1);
        gbc.writeMem(0x2039, { 0x9 });
        gbc.writeMem(0x63f3, { 0x7e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1781, gbc.sp());
        EXPECT(0x63f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00CD
        gbc.setState(0x372c, 0x3269, 0xd020, 0x1581, 0xf259, 0x658d, 0x0, 0x1);
        gbc.writeMem(0x372c, { 0x7e });
        gbc.writeMem(0x658d, { 0x8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3269, gbc.sp());
        EXPECT(0x372d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00CE
        gbc.setState(0xdbec, 0x571b, 0x5110, 0x81db, 0xa3f9, 0x299a, 0x0, 0x0);
        gbc.writeMem(0x299a, { 0x57 });
        gbc.writeMem(0xdbec, { 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x571b, gbc.sp());
        EXPECT(0xdbed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdbec));
        // 7E 00CF
        gbc.setState(0x18f5, 0xbe06, 0xd0e0, 0xe177, 0xec90, 0x2d30, 0x1, 0x1);
        gbc.writeMem(0x18f5, { 0x7e });
        gbc.writeMem(0x2d30, { 0x6b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xbe06, gbc.sp());
        EXPECT(0x18f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00D0
        gbc.setState(0x11a3, 0x6fa6, 0x660, 0x7a18, 0x3b73, 0x8536, 0x0, 0x1);
        gbc.writeMem(0x11a3, { 0x7e });
        gbc.writeMem(0x8536, { 0x71 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6fa6, gbc.sp());
        EXPECT(0x11a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0x8536));
        // 7E 00D1
        gbc.setState(0x819f, 0x54a7, 0xabe0, 0x1709, 0xbfc4, 0x2553, 0x1, 0x1);
        gbc.writeMem(0x2553, { 0x9b });
        gbc.writeMem(0x819f, { 0x7e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x54a7, gbc.sp());
        EXPECT(0x81a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x819f));
        // 7E 00D2
        gbc.setState(0x4e8b, 0x42f0, 0x3c80, 0xe01b, 0x3a22, 0x4a3c, 0x0, 0x0);
        gbc.writeMem(0x4a3c, { 0x47 });
        gbc.writeMem(0x4e8b, { 0x7e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x42f0, gbc.sp());
        EXPECT(0x4e8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00D3
        gbc.setState(0x35cf, 0xcd81, 0xc920, 0xc067, 0xb438, 0xd8df, 0x0, 0x0);
        gbc.writeMem(0x35cf, { 0x7e });
        gbc.writeMem(0xd8df, { 0x5 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xcd81, gbc.sp());
        EXPECT(0x35d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xd8df));
        // 7E 00D4
        gbc.setState(0xb2a9, 0xbbf1, 0x110, 0xdd17, 0x4a53, 0xc6de, 0x1, 0x1);
        gbc.writeMem(0xb2a9, { 0x7e });
        gbc.writeMem(0xc6de, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xbbf1, gbc.sp());
        EXPECT(0xb2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb2a9));
        EXPECT(0xdf, gbc.readMem(0xc6de));
        // 7E 00D5
        gbc.setState(0x4aa3, 0x7139, 0x67c0, 0x8959, 0x1eb1, 0x4a0d, 0x0, 0x1);
        gbc.writeMem(0x4a0d, { 0x40 });
        gbc.writeMem(0x4aa3, { 0x7e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7139, gbc.sp());
        EXPECT(0x4aa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00D6
        gbc.setState(0x1c8b, 0xe8fd, 0x1b60, 0xd6fa, 0xd350, 0x487c, 0x0, 0x0);
        gbc.writeMem(0x1c8b, { 0x7e });
        gbc.writeMem(0x487c, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe8fd, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00D7
        gbc.setState(0xa95d, 0x879a, 0xd400, 0x8b60, 0xa727, 0x289b, 0x0, 0x1);
        gbc.writeMem(0x289b, { 0xa8 });
        gbc.writeMem(0xa95d, { 0x7e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x879a, gbc.sp());
        EXPECT(0xa95e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa95d));
        // 7E 00D8
        gbc.setState(0x52a3, 0x4bd7, 0x2140, 0x7a5c, 0x3915, 0x3032, 0x0, 0x1);
        gbc.writeMem(0x3032, { 0x9e });
        gbc.writeMem(0x52a3, { 0x7e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4bd7, gbc.sp());
        EXPECT(0x52a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00D9
        gbc.setState(0x6955, 0xd65e, 0xebb0, 0xbd9a, 0xf0e3, 0x576a, 0x0, 0x1);
        gbc.writeMem(0x576a, { 0x73 });
        gbc.writeMem(0x6955, { 0x7e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xd65e, gbc.sp());
        EXPECT(0x6956, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00DB
        gbc.setState(0xe185, 0x405b, 0x1ec0, 0xe629, 0x652d, 0xf05f, 0x1, 0x1);
        gbc.writeMem(0xe185, { 0x7e });
        gbc.writeMem(0xf05f, { 0xe3 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x405b, gbc.sp());
        EXPECT(0xe186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe185));
        EXPECT(0xe3, gbc.readMem(0xf05f));
        // 7E 00DC
        gbc.setState(0x2329, 0x555d, 0x5750, 0x8252, 0xc4e8, 0xfb63, 0x1, 0x1);
        gbc.writeMem(0x2329, { 0x7e });
        gbc.writeMem(0xfb63, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x232a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xfb63));
        // 7E 00DD
        gbc.setState(0xca24, 0x530a, 0x9c10, 0x2a17, 0xe4b1, 0x358, 0x1, 0x0);
        gbc.writeMem(0x358, { 0x3f });
        gbc.writeMem(0xca24, { 0x7e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x530a, gbc.sp());
        EXPECT(0xca25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xca24));
        // 7E 00DE
        gbc.setState(0xddc, 0x9478, 0xb050, 0xfb34, 0x27a9, 0xf46a, 0x0, 0x0);
        gbc.writeMem(0xddc, { 0x7e });
        gbc.writeMem(0xf46a, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x9478, gbc.sp());
        EXPECT(0xddd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xf46a));
        // 7E 00DF
        gbc.setState(0x914c, 0x81e4, 0xe50, 0xd01e, 0xefa, 0x1a02, 0x0, 0x0);
        gbc.writeMem(0x1a02, { 0xfa });
        gbc.writeMem(0x914c, { 0x7e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x81e4, gbc.sp());
        EXPECT(0x914d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x914c));
        // 7E 00E1
        gbc.setState(0xdbce, 0x3218, 0x39f0, 0xb511, 0x225c, 0x2e6f, 0x0, 0x0);
        gbc.writeMem(0x2e6f, { 0xe });
        gbc.writeMem(0xdbce, { 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3218, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdbce));
        // 7E 00E2
        gbc.setState(0x17c7, 0x3ea5, 0x9070, 0xf59d, 0xb322, 0xb468, 0x0, 0x0);
        gbc.writeMem(0x17c7, { 0x7e });
        gbc.writeMem(0xb468, { 0x37 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3ea5, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb468));
        // 7E 00E3
        gbc.setState(0x622c, 0x362, 0xc1b0, 0x98b9, 0x76d3, 0x9d6, 0x0, 0x1);
        gbc.writeMem(0x9d6, { 0xff });
        gbc.writeMem(0x622c, { 0x7e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x362, gbc.sp());
        EXPECT(0x622d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00E4
        gbc.setState(0xe815, 0x5c0c, 0xb8b0, 0x46e6, 0x41e7, 0xe26a, 0x1, 0x0);
        gbc.writeMem(0xe26a, { 0x6b });
        gbc.writeMem(0xe815, { 0x7e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x5c0c, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe26a));
        EXPECT(0x7e, gbc.readMem(0xe815));
        // 7E 00E5
        gbc.setState(0x2d8a, 0xae4f, 0xbc60, 0x3179, 0xc41c, 0x8f7a, 0x1, 0x1);
        gbc.writeMem(0x2d8a, { 0x7e });
        gbc.writeMem(0x8f7a, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xae4f, gbc.sp());
        EXPECT(0x2d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x8f7a));
        // 7E 00E6
        gbc.setState(0xca4, 0x254c, 0x5d30, 0x1e3d, 0x44fa, 0xdd9b, 0x1, 0x0);
        gbc.writeMem(0xca4, { 0x7e });
        gbc.writeMem(0xdd9b, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x254c, gbc.sp());
        EXPECT(0xca5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdd9b));
        // 7E 00E7
        gbc.setState(0xee68, 0xed3, 0xa390, 0x5a83, 0x655b, 0xbe31, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xf5 });
        gbc.writeMem(0xee68, { 0x7e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xed3, gbc.sp());
        EXPECT(0xee69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xbe31));
        EXPECT(0x7e, gbc.readMem(0xee68));
        // 7E 00E8
        gbc.setState(0x5508, 0x5ec, 0xc790, 0xb58d, 0x37f5, 0xd90, 0x0, 0x1);
        gbc.writeMem(0xd90, { 0x64 });
        gbc.writeMem(0x5508, { 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0x5509, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00E9
        gbc.setState(0xcf8, 0xfb57, 0xc950, 0x64a9, 0x6bd, 0xb771, 0x0, 0x1);
        gbc.writeMem(0xcf8, { 0x7e });
        gbc.writeMem(0xb771, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xfb57, gbc.sp());
        EXPECT(0xcf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb771));
        // 7E 00EA
        gbc.setState(0x45a, 0x2ac6, 0x4c40, 0x4cb9, 0x5601, 0xf280, 0x1, 0x1);
        gbc.writeMem(0x45a, { 0x7e });
        gbc.writeMem(0xf280, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2ac6, gbc.sp());
        EXPECT(0x45b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf280));
        // 7E 00EB
        gbc.setState(0x34e3, 0x4a68, 0x56f0, 0x66f2, 0x4914, 0xd149, 0x1, 0x0);
        gbc.writeMem(0x34e3, { 0x7e });
        gbc.writeMem(0xd149, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a68, gbc.sp());
        EXPECT(0x34e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd149));
        // 7E 00EC
        gbc.setState(0x6882, 0x11ea, 0x9b50, 0x5ea6, 0x2034, 0x299c, 0x1, 0x1);
        gbc.writeMem(0x299c, { 0x1a });
        gbc.writeMem(0x6882, { 0x7e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x11ea, gbc.sp());
        EXPECT(0x6883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00EF
        gbc.setState(0xb168, 0x2fbe, 0x3a90, 0x6a85, 0xeb6e, 0x83a8, 0x0, 0x1);
        gbc.writeMem(0x83a8, { 0x3c });
        gbc.writeMem(0xb168, { 0x7e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2fbe, gbc.sp());
        EXPECT(0xb169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0x83a8));
        EXPECT(0x7e, gbc.readMem(0xb168));
        // 7E 00F0
        gbc.setState(0x30f8, 0x8e66, 0xb80, 0xd8d6, 0x5b20, 0xb754, 0x1, 0x1);
        gbc.writeMem(0x30f8, { 0x7e });
        gbc.writeMem(0xb754, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0x30f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xb754));
        // 7E 00F1
        gbc.setState(0xd9f, 0x4e9d, 0xb590, 0x6e60, 0xa7d4, 0x90ca, 0x1, 0x0);
        gbc.writeMem(0xd9f, { 0x7e });
        gbc.writeMem(0x90ca, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4e9d, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0x90ca));
        // 7E 00F2
        gbc.setState(0x1f64, 0xcabd, 0xd470, 0x6076, 0xa963, 0x5f92, 0x0, 0x0);
        gbc.writeMem(0x1f64, { 0x7e });
        gbc.writeMem(0x5f92, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xcabd, gbc.sp());
        EXPECT(0x1f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00F3
        gbc.setState(0x85a5, 0x28eb, 0x1700, 0x7c8f, 0xc663, 0x42d6, 0x1, 0x0);
        gbc.writeMem(0x42d6, { 0xf8 });
        gbc.writeMem(0x85a5, { 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x28eb, gbc.sp());
        EXPECT(0x85a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x85a5));
        // 7E 00F4
        gbc.setState(0x9e8e, 0x8a62, 0xfc40, 0x267b, 0x791e, 0xdab7, 0x1, 0x1);
        gbc.writeMem(0x9e8e, { 0x7e });
        gbc.writeMem(0xdab7, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8a62, gbc.sp());
        EXPECT(0x9e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9e8e));
        EXPECT(0x6f, gbc.readMem(0xdab7));
        // 7E 00F5
        gbc.setState(0x452d, 0x63e9, 0x7970, 0x962e, 0xfaaf, 0x4d0e, 0x0, 0x1);
        gbc.writeMem(0x452d, { 0x7e });
        gbc.writeMem(0x4d0e, { 0x2a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x63e9, gbc.sp());
        EXPECT(0x452e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 00F6
        gbc.setState(0xfe6, 0x17fd, 0xf570, 0xb2e3, 0xf127, 0x98c5, 0x0, 0x0);
        gbc.writeMem(0xfe6, { 0x7e });
        gbc.writeMem(0x98c5, { 0x4b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0xfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x98c5));
        // 7E 00F7
        gbc.setState(0x33a6, 0xc225, 0x1bc0, 0xfd0, 0xb391, 0x62e0, 0x0, 0x1);
        gbc.writeMem(0x33a6, { 0x7e });
        gbc.writeMem(0x62e0, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc225, gbc.sp());
        EXPECT(0x33a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00F8
        gbc.setState(0x19ee, 0xf1bb, 0x2340, 0x45df, 0x93a3, 0xada4, 0x1, 0x1);
        gbc.writeMem(0x19ee, { 0x7e });
        gbc.writeMem(0xada4, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf1bb, gbc.sp());
        EXPECT(0x19ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xada4));
        // 7E 00F9
        gbc.setState(0xe412, 0xbda3, 0xc800, 0xff4d, 0x1600, 0x3842, 0x1, 0x1);
        gbc.writeMem(0x3842, { 0xed });
        gbc.writeMem(0xe412, { 0x7e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbda3, gbc.sp());
        EXPECT(0xe413, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe412));
        // 7E 00FA
        gbc.setState(0x3232, 0x46f0, 0x69e0, 0xd320, 0xb6c3, 0xd452, 0x0, 0x0);
        gbc.writeMem(0x3232, { 0x7e });
        gbc.writeMem(0xd452, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x46f0, gbc.sp());
        EXPECT(0x3233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xd452));
        // 7E 00FB
        gbc.setState(0x1119, 0x9792, 0x3d10, 0xf503, 0xacf, 0xa36f, 0x1, 0x0);
        gbc.writeMem(0x1119, { 0x7e });
        gbc.writeMem(0xa36f, { 0xe5 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xa36f));
        // 7E 00FC
        gbc.setState(0x439c, 0xf89d, 0x8440, 0x3347, 0xf5d4, 0xf83, 0x0, 0x0);
        gbc.writeMem(0xf83, { 0x22 });
        gbc.writeMem(0x439c, { 0x7e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf89d, gbc.sp());
        EXPECT(0x439d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 00FD
        gbc.setState(0x18ad, 0xb36e, 0x5250, 0x89ba, 0x5ddf, 0xf953, 0x0, 0x0);
        gbc.writeMem(0x18ad, { 0x7e });
        gbc.writeMem(0xf953, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb36e, gbc.sp());
        EXPECT(0x18ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf953));
        // 7E 00FE
        gbc.setState(0xa2df, 0xc302, 0xa8b0, 0x34f1, 0xd0a8, 0xc0a, 0x1, 0x0);
        gbc.writeMem(0xc0a, { 0x48 });
        gbc.writeMem(0xa2df, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc302, gbc.sp());
        EXPECT(0xa2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa2df));
        // 7E 00FF
        gbc.setState(0xb8d4, 0xe5db, 0x5390, 0xf7d, 0x4926, 0x706b, 0x0, 0x1);
        gbc.writeMem(0x706b, { 0xef });
        gbc.writeMem(0xb8d4, { 0x7e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe5db, gbc.sp());
        EXPECT(0xb8d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb8d4));
        // 7E 0100
        gbc.setState(0x4e73, 0xdaa0, 0xeb40, 0x1f63, 0x6155, 0x503c, 0x0, 0x0);
        gbc.writeMem(0x4e73, { 0x7e });
        gbc.writeMem(0x503c, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xdaa0, gbc.sp());
        EXPECT(0x4e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0101
        gbc.setState(0xe080, 0x79d5, 0x7f60, 0x3a5d, 0x7ca1, 0x7e4a, 0x0, 0x0);
        gbc.writeMem(0x7e4a, { 0x55 });
        gbc.writeMem(0xe080, { 0x7e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x79d5, gbc.sp());
        EXPECT(0xe081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe080));
        // 7E 0102
        gbc.setState(0x9a55, 0xf62c, 0x7680, 0x1297, 0xbbba, 0x67cd, 0x0, 0x0);
        gbc.writeMem(0x67cd, { 0x92 });
        gbc.writeMem(0x9a55, { 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xf62c, gbc.sp());
        EXPECT(0x9a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9a55));
        // 7E 0103
        gbc.setState(0xc67b, 0x2641, 0x3740, 0xfcda, 0xf3bc, 0x36f3, 0x0, 0x0);
        gbc.writeMem(0x36f3, { 0x89 });
        gbc.writeMem(0xc67b, { 0x7e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x2641, gbc.sp());
        EXPECT(0xc67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc67b));
        // 7E 0104
        gbc.setState(0x950f, 0x9d9b, 0xdd80, 0x4862, 0x32f4, 0x7dea, 0x1, 0x1);
        gbc.writeMem(0x7dea, { 0x7f });
        gbc.writeMem(0x950f, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9d9b, gbc.sp());
        EXPECT(0x9510, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x950f));
        // 7E 0106
        gbc.setState(0x3090, 0x9485, 0x79e0, 0x3c32, 0xab19, 0xd105, 0x1, 0x1);
        gbc.writeMem(0x3090, { 0x7e });
        gbc.writeMem(0xd105, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0x3091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd105));
        // 7E 0107
        gbc.setState(0x9333, 0xbd54, 0x65a0, 0x1e33, 0x62e2, 0x5e4d, 0x0, 0x0);
        gbc.writeMem(0x5e4d, { 0xcf });
        gbc.writeMem(0x9333, { 0x7e });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xbd54, gbc.sp());
        EXPECT(0x9334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9333));
        // 7E 0108
        gbc.setState(0x42c0, 0x7c5d, 0xeaa0, 0x4310, 0x2f77, 0xf844, 0x1, 0x0);
        gbc.writeMem(0x42c0, { 0x7e });
        gbc.writeMem(0xf844, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7c5d, gbc.sp());
        EXPECT(0x42c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xf844));
        // 7E 0109
        gbc.setState(0xce29, 0x2362, 0x41e0, 0xe21b, 0xefe8, 0x3da2, 0x1, 0x1);
        gbc.writeMem(0x3da2, { 0x5 });
        gbc.writeMem(0xce29, { 0x7e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2362, gbc.sp());
        EXPECT(0xce2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xce29));
        // 7E 010B
        gbc.setState(0x431c, 0x935a, 0x7b0, 0xeb3a, 0xb609, 0x5055, 0x0, 0x1);
        gbc.writeMem(0x431c, { 0x7e });
        gbc.writeMem(0x5055, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x935a, gbc.sp());
        EXPECT(0x431d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 010C
        gbc.setState(0x565f, 0x38cd, 0x3ae0, 0x53ac, 0x1366, 0x2e76, 0x0, 0x1);
        gbc.writeMem(0x2e76, { 0x42 });
        gbc.writeMem(0x565f, { 0x7e });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x38cd, gbc.sp());
        EXPECT(0x5660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 010D
        gbc.setState(0x74a4, 0x962a, 0x1330, 0x6a1b, 0xc51a, 0xf6c4, 0x1, 0x1);
        gbc.writeMem(0x74a4, { 0x7e });
        gbc.writeMem(0xf6c4, { 0x1c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x962a, gbc.sp());
        EXPECT(0x74a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xf6c4));
        // 7E 010E
        gbc.setState(0x2c25, 0xc613, 0x55d0, 0x58e2, 0xfb50, 0x4a99, 0x1, 0x1);
        gbc.writeMem(0x2c25, { 0x7e });
        gbc.writeMem(0x4a99, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc613, gbc.sp());
        EXPECT(0x2c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 010F
        gbc.setState(0x13e2, 0x6261, 0x5700, 0x414b, 0x41cd, 0x7e05, 0x0, 0x1);
        gbc.writeMem(0x13e2, { 0x7e });
        gbc.writeMem(0x7e05, { 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6261, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0110
        gbc.setState(0x1d49, 0x1944, 0xa80, 0x3a6, 0x493, 0x3955, 0x1, 0x1);
        gbc.writeMem(0x1d49, { 0x7e });
        gbc.writeMem(0x3955, { 0xf3 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1944, gbc.sp());
        EXPECT(0x1d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0111
        gbc.setState(0xb41a, 0x63c4, 0x9d60, 0xbc57, 0xbae4, 0x965e, 0x1, 0x1);
        gbc.writeMem(0x965e, { 0x5 });
        gbc.writeMem(0xb41a, { 0x7e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x63c4, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x965e));
        EXPECT(0x7e, gbc.readMem(0xb41a));
        // 7E 0112
        gbc.setState(0x3fab, 0xdb49, 0xf070, 0x150c, 0x48cf, 0x1c2d, 0x1, 0x1);
        gbc.writeMem(0x1c2d, { 0xcb });
        gbc.writeMem(0x3fab, { 0x7e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xdb49, gbc.sp());
        EXPECT(0x3fac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0113
        gbc.setState(0xa9bc, 0x8d30, 0x6590, 0xb7c6, 0xb566, 0x39f, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0x85 });
        gbc.writeMem(0xa9bc, { 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8d30, gbc.sp());
        EXPECT(0xa9bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa9bc));
        // 7E 0114
        gbc.setState(0x1529, 0x3789, 0x87e0, 0x1385, 0xb94e, 0xf500, 0x1, 0x1);
        gbc.writeMem(0x1529, { 0x7e });
        gbc.writeMem(0xf500, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3789, gbc.sp());
        EXPECT(0x152a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xf500));
        // 7E 0115
        gbc.setState(0x3727, 0xc8ae, 0x4cf0, 0x9065, 0xdf48, 0xccbd, 0x0, 0x1);
        gbc.writeMem(0x3727, { 0x7e });
        gbc.writeMem(0xccbd, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc8ae, gbc.sp());
        EXPECT(0x3728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xccbd));
        // 7E 0116
        gbc.setState(0xb51a, 0xc9b9, 0x2520, 0x6cf5, 0x5556, 0xd210, 0x0, 0x1);
        gbc.writeMem(0xb51a, { 0x7e });
        gbc.writeMem(0xd210, { 0x18 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc9b9, gbc.sp());
        EXPECT(0xb51b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb51a));
        EXPECT(0x18, gbc.readMem(0xd210));
        // 7E 0117
        gbc.setState(0xb9fb, 0x375b, 0x5a60, 0xd332, 0xa26b, 0xfd0c, 0x0, 0x1);
        gbc.writeMem(0xb9fb, { 0x7e });
        gbc.writeMem(0xfd0c, { 0x16 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x375b, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb9fb));
        EXPECT(0x16, gbc.readMem(0xfd0c));
        // 7E 0118
        gbc.setState(0x5f70, 0xf50b, 0xf8e0, 0x3920, 0x68e8, 0x7c10, 0x1, 0x1);
        gbc.writeMem(0x5f70, { 0x7e });
        gbc.writeMem(0x7c10, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xf50b, gbc.sp());
        EXPECT(0x5f71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0119
        gbc.setState(0x3771, 0x6a6, 0x5960, 0xec7d, 0x72c2, 0x1223, 0x0, 0x0);
        gbc.writeMem(0x1223, { 0x46 });
        gbc.writeMem(0x3771, { 0x7e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6a6, gbc.sp());
        EXPECT(0x3772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 011A
        gbc.setState(0x38f6, 0xba20, 0x22f0, 0x16a9, 0x3fc6, 0xc06b, 0x0, 0x1);
        gbc.writeMem(0x38f6, { 0x7e });
        gbc.writeMem(0xc06b, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x38f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xc06b));
        // 7E 011B
        gbc.setState(0x5a8d, 0x7c10, 0xa1e0, 0x6b10, 0x4190, 0x4ac3, 0x1, 0x0);
        gbc.writeMem(0x4ac3, { 0xd4 });
        gbc.writeMem(0x5a8d, { 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7c10, gbc.sp());
        EXPECT(0x5a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 011C
        gbc.setState(0x9f64, 0x22fd, 0x690, 0xbf4b, 0xe6f2, 0x761, 0x1, 0x0);
        gbc.writeMem(0x761, { 0x8d });
        gbc.writeMem(0x9f64, { 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x22fd, gbc.sp());
        EXPECT(0x9f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9f64));
        // 7E 011D
        gbc.setState(0xedaa, 0xb5d4, 0xea00, 0xbfa8, 0x567e, 0xd320, 0x1, 0x1);
        gbc.writeMem(0xd320, { 0xa });
        gbc.writeMem(0xedaa, { 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xb5d4, gbc.sp());
        EXPECT(0xedab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa, gbc.readMem(0xd320));
        EXPECT(0x7e, gbc.readMem(0xedaa));
        // 7E 011E
        gbc.setState(0x3916, 0xe3a1, 0x45d0, 0x99c6, 0xf770, 0x734c, 0x1, 0x0);
        gbc.writeMem(0x3916, { 0x7e });
        gbc.writeMem(0x734c, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe3a1, gbc.sp());
        EXPECT(0x3917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 011F
        gbc.setState(0x6612, 0xeedd, 0x8880, 0x39cc, 0xdf2, 0x81f1, 0x0, 0x1);
        gbc.writeMem(0x6612, { 0x7e });
        gbc.writeMem(0x81f1, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeedd, gbc.sp());
        EXPECT(0x6613, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x81f1));
        // 7E 0120
        gbc.setState(0xbc92, 0xa620, 0x9280, 0xc2f2, 0x78c4, 0xe8e, 0x1, 0x0);
        gbc.writeMem(0xe8e, { 0x93 });
        gbc.writeMem(0xbc92, { 0x7e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa620, gbc.sp());
        EXPECT(0xbc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbc92));
        // 7E 0121
        gbc.setState(0xa6f5, 0x89b8, 0xe930, 0xf2a9, 0x794d, 0x3ed0, 0x1, 0x1);
        gbc.writeMem(0x3ed0, { 0xae });
        gbc.writeMem(0xa6f5, { 0x7e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x89b8, gbc.sp());
        EXPECT(0xa6f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa6f5));
        // 7E 0122
        gbc.setState(0xbdad, 0x6819, 0x1660, 0xcb39, 0x8005, 0x9d2e, 0x0, 0x0);
        gbc.writeMem(0x9d2e, { 0xf8 });
        gbc.writeMem(0xbdad, { 0x7e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6819, gbc.sp());
        EXPECT(0xbdae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9d2e));
        EXPECT(0x7e, gbc.readMem(0xbdad));
        // 7E 0123
        gbc.setState(0xded2, 0xe969, 0x9550, 0xb676, 0x118, 0x7577, 0x0, 0x0);
        gbc.writeMem(0x7577, { 0xb5 });
        gbc.writeMem(0xded2, { 0x7e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe969, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xded2));
        // 7E 0124
        gbc.setState(0x6932, 0x8d7b, 0x80c0, 0xbb15, 0xb2ea, 0x9cea, 0x0, 0x1);
        gbc.writeMem(0x6932, { 0x7e });
        gbc.writeMem(0x9cea, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8d7b, gbc.sp());
        EXPECT(0x6933, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x9cea));
        // 7E 0125
        gbc.setState(0x5aab, 0x1eae, 0x2650, 0xa409, 0x60d7, 0x1387, 0x0, 0x0);
        gbc.writeMem(0x1387, { 0x72 });
        gbc.writeMem(0x5aab, { 0x7e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x1eae, gbc.sp());
        EXPECT(0x5aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0126
        gbc.setState(0x7ebe, 0xf37, 0xdcb0, 0xfaa1, 0xdf1d, 0x36cc, 0x1, 0x1);
        gbc.writeMem(0x36cc, { 0xc5 });
        gbc.writeMem(0x7ebe, { 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xf37, gbc.sp());
        EXPECT(0x7ebf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0127
        gbc.setState(0x401b, 0xe7f0, 0x2490, 0x3e6c, 0x189c, 0x4a48, 0x1, 0x1);
        gbc.writeMem(0x401b, { 0x7e });
        gbc.writeMem(0x4a48, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x401c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0128
        gbc.setState(0x90a9, 0x17cf, 0x7f80, 0x794d, 0x3a38, 0x4dd8, 0x1, 0x1);
        gbc.writeMem(0x4dd8, { 0x2d });
        gbc.writeMem(0x90a9, { 0x7e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x17cf, gbc.sp());
        EXPECT(0x90aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x90a9));
        // 7E 0129
        gbc.setState(0xb637, 0xde1e, 0x17d0, 0x469d, 0x5212, 0x1629, 0x1, 0x1);
        gbc.writeMem(0x1629, { 0xf7 });
        gbc.writeMem(0xb637, { 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xde1e, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb637));
        // 7E 012A
        gbc.setState(0x5faf, 0xeef7, 0xe170, 0x9be4, 0x5e4f, 0x984b, 0x0, 0x1);
        gbc.writeMem(0x5faf, { 0x7e });
        gbc.writeMem(0x984b, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeef7, gbc.sp());
        EXPECT(0x5fb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x984b));
        // 7E 012B
        gbc.setState(0x9737, 0x6f2c, 0x9660, 0xeefd, 0x28a4, 0x256e, 0x0, 0x1);
        gbc.writeMem(0x256e, { 0xa });
        gbc.writeMem(0x9737, { 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6f2c, gbc.sp());
        EXPECT(0x9738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9737));
        // 7E 012C
        gbc.setState(0x446, 0xd125, 0x6630, 0x28b9, 0x4b26, 0x72ac, 0x1, 0x1);
        gbc.writeMem(0x446, { 0x7e });
        gbc.writeMem(0x72ac, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 012D
        gbc.setState(0xd920, 0x434c, 0x3980, 0x3bb0, 0x90d4, 0xb74, 0x0, 0x1);
        gbc.writeMem(0xb74, { 0xff });
        gbc.writeMem(0xd920, { 0x7e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x434c, gbc.sp());
        EXPECT(0xd921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd920));
        // 7E 012E
        gbc.setState(0xcfdd, 0x7ce7, 0x9210, 0x4f6f, 0xec7a, 0x3092, 0x1, 0x1);
        gbc.writeMem(0x3092, { 0xec });
        gbc.writeMem(0xcfdd, { 0x7e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7ce7, gbc.sp());
        EXPECT(0xcfde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcfdd));
        // 7E 012F
        gbc.setState(0x58f, 0x226f, 0xb5d0, 0xa82, 0x8600, 0xe185, 0x1, 0x0);
        gbc.writeMem(0x58f, { 0x7e });
        gbc.writeMem(0xe185, { 0xb7 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x226f, gbc.sp());
        EXPECT(0x590, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xe185));
        // 7E 0130
        gbc.setState(0x5951, 0x5a7, 0xdc90, 0xbf84, 0xaf63, 0xc12c, 0x0, 0x0);
        gbc.writeMem(0x5951, { 0x7e });
        gbc.writeMem(0xc12c, { 0xda });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0x5952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xc12c));
        // 7E 0131
        gbc.setState(0xbb7d, 0x6e78, 0x3df0, 0x2a7c, 0x9855, 0x9920, 0x0, 0x0);
        gbc.writeMem(0x9920, { 0x5a });
        gbc.writeMem(0xbb7d, { 0x7e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6e78, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x9920));
        EXPECT(0x7e, gbc.readMem(0xbb7d));
        // 7E 0132
        gbc.setState(0xdf7d, 0x25f2, 0xdd70, 0xd8fd, 0x89ce, 0x64e0, 0x1, 0x0);
        gbc.writeMem(0x64e0, { 0xe2 });
        gbc.writeMem(0xdf7d, { 0x7e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdf7d));
        // 7E 0133
        gbc.setState(0x26c8, 0xe283, 0x8200, 0x8cb1, 0xf735, 0x1ee6, 0x1, 0x0);
        gbc.writeMem(0x1ee6, { 0x3d });
        gbc.writeMem(0x26c8, { 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe283, gbc.sp());
        EXPECT(0x26c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0134
        gbc.setState(0x8cb6, 0x82fd, 0xade0, 0x585f, 0xae40, 0x1e52, 0x1, 0x0);
        gbc.writeMem(0x1e52, { 0xa });
        gbc.writeMem(0x8cb6, { 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x82fd, gbc.sp());
        EXPECT(0x8cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8cb6));
        // 7E 0135
        gbc.setState(0xda99, 0x596f, 0x4440, 0x70d7, 0x6ef, 0x9e6b, 0x0, 0x1);
        gbc.writeMem(0x9e6b, { 0xde });
        gbc.writeMem(0xda99, { 0x7e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x596f, gbc.sp());
        EXPECT(0xda9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0x9e6b));
        EXPECT(0x7e, gbc.readMem(0xda99));
        // 7E 0136
        gbc.setState(0x65e6, 0x9680, 0xdae0, 0xca50, 0x2889, 0x16ab, 0x0, 0x1);
        gbc.writeMem(0x16ab, { 0xad });
        gbc.writeMem(0x65e6, { 0x7e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9680, gbc.sp());
        EXPECT(0x65e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0137
        gbc.setState(0x333b, 0x3c00, 0x2db0, 0x1fb, 0x1343, 0xc6c5, 0x1, 0x1);
        gbc.writeMem(0x333b, { 0x7e });
        gbc.writeMem(0xc6c5, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3c00, gbc.sp());
        EXPECT(0x333c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xc6c5));
        // 7E 0138
        gbc.setState(0xbd24, 0x18d4, 0x8610, 0xf71e, 0xc65a, 0xee47, 0x0, 0x1);
        gbc.writeMem(0xbd24, { 0x7e });
        gbc.writeMem(0xee47, { 0x8d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x18d4, gbc.sp());
        EXPECT(0xbd25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbd24));
        EXPECT(0x8d, gbc.readMem(0xee47));
        // 7E 0139
        gbc.setState(0xe33, 0xed92, 0x7460, 0x1d3f, 0x7223, 0x72be, 0x1, 0x0);
        gbc.writeMem(0xe33, { 0x7e });
        gbc.writeMem(0x72be, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xed92, gbc.sp());
        EXPECT(0xe34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 013A
        gbc.setState(0xb398, 0x20c1, 0x7260, 0x2211, 0x8f13, 0x412e, 0x0, 0x1);
        gbc.writeMem(0x412e, { 0xc1 });
        gbc.writeMem(0xb398, { 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x20c1, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb398));
        // 7E 013B
        gbc.setState(0xc81b, 0x463e, 0xdab0, 0x7eae, 0xbb60, 0x9d26, 0x1, 0x1);
        gbc.writeMem(0x9d26, { 0x3 });
        gbc.writeMem(0xc81b, { 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x463e, gbc.sp());
        EXPECT(0xc81c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x9d26));
        EXPECT(0x7e, gbc.readMem(0xc81b));
        // 7E 013C
        gbc.setState(0xbbdd, 0x3f8f, 0xb210, 0x61fc, 0xb30, 0x5c31, 0x0, 0x0);
        gbc.writeMem(0x5c31, { 0xd5 });
        gbc.writeMem(0xbbdd, { 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3f8f, gbc.sp());
        EXPECT(0xbbde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbbdd));
        // 7E 013D
        gbc.setState(0xc417, 0x9150, 0x3de0, 0x5a78, 0xd3e4, 0xd40b, 0x1, 0x0);
        gbc.writeMem(0xc417, { 0x7e });
        gbc.writeMem(0xd40b, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0xc418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc417));
        EXPECT(0x13, gbc.readMem(0xd40b));
        // 7E 013E
        gbc.setState(0xe89c, 0xd992, 0x500, 0x98ed, 0x6a25, 0x69da, 0x1, 0x1);
        gbc.writeMem(0x69da, { 0xc7 });
        gbc.writeMem(0xe89c, { 0x7e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd992, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe89c));
        // 7E 013F
        gbc.setState(0x61af, 0x6a04, 0x8b00, 0x7a66, 0x2c7a, 0x33af, 0x1, 0x1);
        gbc.writeMem(0x33af, { 0x91 });
        gbc.writeMem(0x61af, { 0x7e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6a04, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0140
        gbc.setState(0xb29e, 0x9b94, 0x23b0, 0xc8db, 0x3142, 0x9e8, 0x0, 0x0);
        gbc.writeMem(0x9e8, { 0x3b });
        gbc.writeMem(0xb29e, { 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x9b94, gbc.sp());
        EXPECT(0xb29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb29e));
        // 7E 0141
        gbc.setState(0x8b04, 0xedfa, 0x2090, 0xfaa0, 0xe7b4, 0x9802, 0x1, 0x1);
        gbc.writeMem(0x8b04, { 0x7e });
        gbc.writeMem(0x9802, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xedfa, gbc.sp());
        EXPECT(0x8b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8b04));
        EXPECT(0x90, gbc.readMem(0x9802));
        // 7E 0142
        gbc.setState(0x2938, 0x7e34, 0x2fa0, 0x61b7, 0xa35b, 0x8bb1, 0x1, 0x0);
        gbc.writeMem(0x2938, { 0x7e });
        gbc.writeMem(0x8bb1, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x7e34, gbc.sp());
        EXPECT(0x2939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8bb1));
        // 7E 0143
        gbc.setState(0x2abe, 0x8782, 0xa760, 0x83ed, 0x8f5c, 0x8123, 0x1, 0x0);
        gbc.writeMem(0x2abe, { 0x7e });
        gbc.writeMem(0x8123, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8782, gbc.sp());
        EXPECT(0x2abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x8123));
        // 7E 0144
        gbc.setState(0x45f1, 0xe908, 0x45d0, 0x729f, 0x8715, 0x3ce1, 0x0, 0x1);
        gbc.writeMem(0x3ce1, { 0x57 });
        gbc.writeMem(0x45f1, { 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe908, gbc.sp());
        EXPECT(0x45f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0145
        gbc.setState(0x82bc, 0x6479, 0xb490, 0xb4c8, 0x3ed8, 0x6c89, 0x1, 0x1);
        gbc.writeMem(0x6c89, { 0xfa });
        gbc.writeMem(0x82bc, { 0x7e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6479, gbc.sp());
        EXPECT(0x82bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x82bc));
        // 7E 0146
        gbc.setState(0x2312, 0x4aeb, 0xce80, 0x8d85, 0xf3e5, 0x87e4, 0x1, 0x0);
        gbc.writeMem(0x2312, { 0x7e });
        gbc.writeMem(0x87e4, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4aeb, gbc.sp());
        EXPECT(0x2313, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x87e4));
        // 7E 0147
        gbc.setState(0xb006, 0x8037, 0x8b80, 0x2146, 0x7540, 0x5016, 0x0, 0x0);
        gbc.writeMem(0x5016, { 0x3a });
        gbc.writeMem(0xb006, { 0x7e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x8037, gbc.sp());
        EXPECT(0xb007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb006));
        // 7E 0148
        gbc.setState(0xecdf, 0x1e84, 0x350, 0xb876, 0x85bf, 0x5095, 0x1, 0x0);
        gbc.writeMem(0x5095, { 0x5f });
        gbc.writeMem(0xecdf, { 0x7e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1e84, gbc.sp());
        EXPECT(0xece0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xecdf));
        // 7E 0149
        gbc.setState(0x9503, 0x9685, 0x84f0, 0x8a4d, 0xe5ce, 0x3472, 0x1, 0x0);
        gbc.writeMem(0x3472, { 0x64 });
        gbc.writeMem(0x9503, { 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0x9504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9503));
        // 7E 014A
        gbc.setState(0xadc1, 0x2913, 0xd230, 0xd1de, 0x966c, 0xe9f0, 0x1, 0x0);
        gbc.writeMem(0xadc1, { 0x7e });
        gbc.writeMem(0xe9f0, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2913, gbc.sp());
        EXPECT(0xadc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xadc1));
        EXPECT(0x89, gbc.readMem(0xe9f0));
        // 7E 014B
        gbc.setState(0x5f89, 0xd71, 0xc1b0, 0xb144, 0x4bb6, 0x520b, 0x1, 0x0);
        gbc.writeMem(0x520b, { 0x72 });
        gbc.writeMem(0x5f89, { 0x7e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x5f8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 014C
        gbc.setState(0xc897, 0x3d94, 0x6f50, 0x55b3, 0x8b77, 0x7be0, 0x1, 0x1);
        gbc.writeMem(0x7be0, { 0xa9 });
        gbc.writeMem(0xc897, { 0x7e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3d94, gbc.sp());
        EXPECT(0xc898, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc897));
        // 7E 014F
        gbc.setState(0x36f4, 0x18e7, 0x40d0, 0xcabb, 0xda3b, 0x367e, 0x1, 0x0);
        gbc.writeMem(0x367e, { 0x0 });
        gbc.writeMem(0x36f4, { 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x18e7, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0150
        gbc.setState(0x92da, 0xbbe8, 0x8870, 0xf267, 0xc80a, 0xe1bc, 0x0, 0x0);
        gbc.writeMem(0x92da, { 0x7e });
        gbc.writeMem(0xe1bc, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xbbe8, gbc.sp());
        EXPECT(0x92db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x92da));
        EXPECT(0x8f, gbc.readMem(0xe1bc));
        // 7E 0151
        gbc.setState(0x3726, 0x2ae5, 0xac40, 0xa056, 0x15ea, 0xcae5, 0x0, 0x1);
        gbc.writeMem(0x3726, { 0x7e });
        gbc.writeMem(0xcae5, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0x3727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xcae5));
        // 7E 0152
        gbc.setState(0x6f07, 0xe392, 0x410, 0x90a4, 0x724a, 0xe1a, 0x0, 0x1);
        gbc.writeMem(0xe1a, { 0x24 });
        gbc.writeMem(0x6f07, { 0x7e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0x6f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0153
        gbc.setState(0xbd13, 0x8345, 0xea20, 0x61b7, 0x9b7, 0x7f6, 0x0, 0x1);
        gbc.writeMem(0x7f6, { 0x5f });
        gbc.writeMem(0xbd13, { 0x7e });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8345, gbc.sp());
        EXPECT(0xbd14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbd13));
        // 7E 0154
        gbc.setState(0x6251, 0xa6f3, 0x8d00, 0xdecf, 0xd81a, 0x2a5a, 0x1, 0x1);
        gbc.writeMem(0x2a5a, { 0x95 });
        gbc.writeMem(0x6251, { 0x7e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa6f3, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0155
        gbc.setState(0x3caf, 0x274b, 0xb790, 0x8fe7, 0x5798, 0xfbc5, 0x1, 0x0);
        gbc.writeMem(0x3caf, { 0x7e });
        gbc.writeMem(0xfbc5, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0x3cb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xfbc5));
        // 7E 0156
        gbc.setState(0x43cb, 0xe442, 0x54e0, 0x3d2, 0xa190, 0xc7b1, 0x1, 0x1);
        gbc.writeMem(0x43cb, { 0x7e });
        gbc.writeMem(0xc7b1, { 0x2e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe442, gbc.sp());
        EXPECT(0x43cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2e, gbc.readMem(0xc7b1));
        // 7E 0157
        gbc.setState(0x2636, 0xa02f, 0x5920, 0xe21, 0x2810, 0x338f, 0x1, 0x1);
        gbc.writeMem(0x2636, { 0x7e });
        gbc.writeMem(0x338f, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa02f, gbc.sp());
        EXPECT(0x2637, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0158
        gbc.setState(0xb9ea, 0x241b, 0x1bf0, 0xf1c7, 0xc008, 0x35f4, 0x1, 0x0);
        gbc.writeMem(0x35f4, { 0xaa });
        gbc.writeMem(0xb9ea, { 0x7e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x241b, gbc.sp());
        EXPECT(0xb9eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb9ea));
        // 7E 0159
        gbc.setState(0xe4d0, 0x5333, 0xc760, 0x6d3d, 0x36a3, 0x450d, 0x1, 0x0);
        gbc.writeMem(0x450d, { 0xc3 });
        gbc.writeMem(0xe4d0, { 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5333, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe4d0));
        // 7E 015A
        gbc.setState(0xc221, 0x691, 0xb6b0, 0xd1d8, 0x39c3, 0xb51, 0x1, 0x0);
        gbc.writeMem(0xb51, { 0x0 });
        gbc.writeMem(0xc221, { 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x691, gbc.sp());
        EXPECT(0xc222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc221));
        // 7E 015B
        gbc.setState(0xc59f, 0x4f96, 0x64e0, 0x5cf8, 0x614a, 0x48b6, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0x1b });
        gbc.writeMem(0xc59f, { 0x7e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4f96, gbc.sp());
        EXPECT(0xc5a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc59f));
        // 7E 015C
        gbc.setState(0x8732, 0x1269, 0x6470, 0x29d2, 0x71e7, 0xd519, 0x1, 0x1);
        gbc.writeMem(0x8732, { 0x7e });
        gbc.writeMem(0xd519, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x1269, gbc.sp());
        EXPECT(0x8733, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8732));
        EXPECT(0x8c, gbc.readMem(0xd519));
        // 7E 015D
        gbc.setState(0xa289, 0x8b96, 0x6200, 0x65f, 0x2376, 0x20b8, 0x1, 0x0);
        gbc.writeMem(0x20b8, { 0x7 });
        gbc.writeMem(0xa289, { 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x8b96, gbc.sp());
        EXPECT(0xa28a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa289));
        // 7E 015E
        gbc.setState(0xc50e, 0x6b55, 0x520, 0xcdf7, 0xc588, 0x6881, 0x0, 0x0);
        gbc.writeMem(0x6881, { 0x5e });
        gbc.writeMem(0xc50e, { 0x7e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6b55, gbc.sp());
        EXPECT(0xc50f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc50e));
        // 7E 015F
        gbc.setState(0xe461, 0xa4b, 0xf1a0, 0x8900, 0xe972, 0x38ed, 0x0, 0x0);
        gbc.writeMem(0x38ed, { 0x5c });
        gbc.writeMem(0xe461, { 0x7e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa4b, gbc.sp());
        EXPECT(0xe462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe461));
        // 7E 0160
        gbc.setState(0x1f08, 0x8652, 0xc9a0, 0x2989, 0x4686, 0x7a3c, 0x1, 0x0);
        gbc.writeMem(0x1f08, { 0x7e });
        gbc.writeMem(0x7a3c, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8652, gbc.sp());
        EXPECT(0x1f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0161
        gbc.setState(0xc9f3, 0xc53d, 0xf6f0, 0xd732, 0x9ef3, 0xf413, 0x0, 0x1);
        gbc.writeMem(0xc9f3, { 0x7e });
        gbc.writeMem(0xf413, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc53d, gbc.sp());
        EXPECT(0xc9f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc9f3));
        EXPECT(0x89, gbc.readMem(0xf413));
        // 7E 0162
        gbc.setState(0xbbf4, 0x2fde, 0x1440, 0xe848, 0x5434, 0x1b80, 0x0, 0x1);
        gbc.writeMem(0x1b80, { 0x86 });
        gbc.writeMem(0xbbf4, { 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x2fde, gbc.sp());
        EXPECT(0xbbf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbbf4));
        // 7E 0163
        gbc.setState(0x18e4, 0x65c5, 0x3500, 0xd391, 0xd88c, 0x9ca7, 0x1, 0x0);
        gbc.writeMem(0x18e4, { 0x7e });
        gbc.writeMem(0x9ca7, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x65c5, gbc.sp());
        EXPECT(0x18e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0x9ca7));
        // 7E 0164
        gbc.setState(0x57e3, 0x3b27, 0xbf20, 0xc0be, 0x3248, 0xf01d, 0x1, 0x1);
        gbc.writeMem(0x57e3, { 0x7e });
        gbc.writeMem(0xf01d, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3b27, gbc.sp());
        EXPECT(0x57e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xf01d));
        // 7E 0165
        gbc.setState(0x239f, 0xf23, 0xfac0, 0x8cad, 0x5d96, 0xef16, 0x0, 0x0);
        gbc.writeMem(0x239f, { 0x7e });
        gbc.writeMem(0xef16, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf23, gbc.sp());
        EXPECT(0x23a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xef16));
        // 7E 0167
        gbc.setState(0x7938, 0x57ff, 0x7210, 0xd052, 0x266a, 0xcac0, 0x0, 0x0);
        gbc.writeMem(0x7938, { 0x7e });
        gbc.writeMem(0xcac0, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x57ff, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xcac0));
        // 7E 0168
        gbc.setState(0xb12b, 0xa5a3, 0x2b70, 0x81e0, 0x9860, 0x799e, 0x1, 0x1);
        gbc.writeMem(0x799e, { 0x7 });
        gbc.writeMem(0xb12b, { 0x7e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa5a3, gbc.sp());
        EXPECT(0xb12c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb12b));
        // 7E 0169
        gbc.setState(0x3180, 0x6323, 0xbbc0, 0xf640, 0xe2f, 0xe3b3, 0x0, 0x0);
        gbc.writeMem(0x3180, { 0x7e });
        gbc.writeMem(0xe3b3, { 0x36 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6323, gbc.sp());
        EXPECT(0x3181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe3b3));
        // 7E 016A
        gbc.setState(0xa1c3, 0x1fe4, 0x6d00, 0xc7f9, 0x2234, 0xeb78, 0x0, 0x0);
        gbc.writeMem(0xa1c3, { 0x7e });
        gbc.writeMem(0xeb78, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1fe4, gbc.sp());
        EXPECT(0xa1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa1c3));
        EXPECT(0x74, gbc.readMem(0xeb78));
        // 7E 016B
        gbc.setState(0xa557, 0x9fbb, 0xec60, 0x313b, 0x73ec, 0xc774, 0x0, 0x1);
        gbc.writeMem(0xa557, { 0x7e });
        gbc.writeMem(0xc774, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9fbb, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa557));
        EXPECT(0xf5, gbc.readMem(0xc774));
        // 7E 016C
        gbc.setState(0x9512, 0x5088, 0xf600, 0x92ed, 0x2025, 0x1cda, 0x1, 0x1);
        gbc.writeMem(0x1cda, { 0xb8 });
        gbc.writeMem(0x9512, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5088, gbc.sp());
        EXPECT(0x9513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9512));
        // 7E 016D
        gbc.setState(0x99d9, 0x8775, 0xf760, 0x56a1, 0xe5ea, 0x5517, 0x1, 0x0);
        gbc.writeMem(0x5517, { 0x17 });
        gbc.writeMem(0x99d9, { 0x7e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x8775, gbc.sp());
        EXPECT(0x99da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x99d9));
        // 7E 016E
        gbc.setState(0x53c, 0x3575, 0x5520, 0x1003, 0xb252, 0x7b0, 0x0, 0x1);
        gbc.writeMem(0x53c, { 0x7e });
        gbc.writeMem(0x7b0, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3575, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 016F
        gbc.setState(0xd1bc, 0x99e8, 0x29e0, 0xf296, 0xe1f8, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x227c, { 0x10 });
        gbc.writeMem(0xd1bc, { 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x99e8, gbc.sp());
        EXPECT(0xd1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd1bc));
        // 7E 0170
        gbc.setState(0x3d76, 0x8efd, 0x5490, 0x630a, 0xf139, 0x2a3c, 0x0, 0x1);
        gbc.writeMem(0x2a3c, { 0x24 });
        gbc.writeMem(0x3d76, { 0x7e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8efd, gbc.sp());
        EXPECT(0x3d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0171
        gbc.setState(0xc4c7, 0x923f, 0x9020, 0xd78d, 0x17a5, 0x3b03, 0x1, 0x1);
        gbc.writeMem(0x3b03, { 0x76 });
        gbc.writeMem(0xc4c7, { 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x923f, gbc.sp());
        EXPECT(0xc4c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc4c7));
        // 7E 0172
        gbc.setState(0xd348, 0x8d99, 0x3a50, 0x84e2, 0xfed6, 0x7b52, 0x1, 0x1);
        gbc.writeMem(0x7b52, { 0x56 });
        gbc.writeMem(0xd348, { 0x7e });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x8d99, gbc.sp());
        EXPECT(0xd349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd348));
        // 7E 0173
        gbc.setState(0x1a5a, 0x22a7, 0xa750, 0xcfe5, 0xf86d, 0x7d10, 0x1, 0x0);
        gbc.writeMem(0x1a5a, { 0x7e });
        gbc.writeMem(0x7d10, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x22a7, gbc.sp());
        EXPECT(0x1a5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0174
        gbc.setState(0x3ff9, 0x8f82, 0x31f0, 0xd00e, 0xacb2, 0xf601, 0x0, 0x0);
        gbc.writeMem(0x3ff9, { 0x7e });
        gbc.writeMem(0xf601, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0x3ffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xf601));
        // 7E 0175
        gbc.setState(0x443d, 0x3314, 0x50, 0xaa24, 0x6358, 0xee41, 0x0, 0x1);
        gbc.writeMem(0x443d, { 0x7e });
        gbc.writeMem(0xee41, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x3314, gbc.sp());
        EXPECT(0x443e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xee41));
        // 7E 0176
        gbc.setState(0x4b6b, 0xf19d, 0xb7e0, 0xdedb, 0x2802, 0xf795, 0x0, 0x0);
        gbc.writeMem(0x4b6b, { 0x7e });
        gbc.writeMem(0xf795, { 0x66 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf19d, gbc.sp());
        EXPECT(0x4b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0xf795));
        // 7E 0177
        gbc.setState(0xd8f9, 0xf7e0, 0x2020, 0x7e5d, 0x11cf, 0xfd87, 0x0, 0x0);
        gbc.writeMem(0xd8f9, { 0x7e });
        gbc.writeMem(0xfd87, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf7e0, gbc.sp());
        EXPECT(0xd8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd8f9));
        EXPECT(0x3a, gbc.readMem(0xfd87));
        // 7E 0178
        gbc.setState(0xdb4c, 0x7e29, 0xd550, 0xe60e, 0x6ed2, 0x8a22, 0x0, 0x0);
        gbc.writeMem(0x8a22, { 0x4b });
        gbc.writeMem(0xdb4c, { 0x7e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x7e29, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8a22));
        EXPECT(0x7e, gbc.readMem(0xdb4c));
        // 7E 0179
        gbc.setState(0x9556, 0xd929, 0x6eb0, 0x7dbb, 0x130e, 0x83f, 0x1, 0x0);
        gbc.writeMem(0x83f, { 0x3d });
        gbc.writeMem(0x9556, { 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd929, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9556));
        // 7E 017A
        gbc.setState(0x6009, 0xf749, 0x2580, 0x8027, 0x37dc, 0x9465, 0x0, 0x1);
        gbc.writeMem(0x6009, { 0x7e });
        gbc.writeMem(0x9465, { 0xfb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf749, gbc.sp());
        EXPECT(0x600a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x9465));
        // 7E 017B
        gbc.setState(0xb8a0, 0x3971, 0x8a20, 0xf1b1, 0x5baf, 0x65d8, 0x0, 0x0);
        gbc.writeMem(0x65d8, { 0xc4 });
        gbc.writeMem(0xb8a0, { 0x7e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3971, gbc.sp());
        EXPECT(0xb8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb8a0));
        // 7E 017C
        gbc.setState(0xc528, 0x862e, 0x9f10, 0xb5e, 0xdc44, 0xc415, 0x0, 0x0);
        gbc.writeMem(0xc415, { 0x6f });
        gbc.writeMem(0xc528, { 0x7e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x862e, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xc415));
        EXPECT(0x7e, gbc.readMem(0xc528));
        // 7E 017E
        gbc.setState(0xaad9, 0xaa4c, 0xdbb0, 0xcdf5, 0x6483, 0x66d1, 0x0, 0x0);
        gbc.writeMem(0x66d1, { 0x12 });
        gbc.writeMem(0xaad9, { 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaa4c, gbc.sp());
        EXPECT(0xaada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaad9));
        // 7E 0180
        gbc.setState(0x65c9, 0xc9ec, 0xc30, 0x9d8b, 0xb3ca, 0xa0db, 0x1, 0x0);
        gbc.writeMem(0x65c9, { 0x7e });
        gbc.writeMem(0xa0db, { 0x78 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xc9ec, gbc.sp());
        EXPECT(0x65ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa0db));
        // 7E 0181
        gbc.setState(0xf1b, 0x55a1, 0x71b0, 0x6b9c, 0xedca, 0x762a, 0x1, 0x0);
        gbc.writeMem(0xf1b, { 0x7e });
        gbc.writeMem(0x762a, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x55a1, gbc.sp());
        EXPECT(0xf1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0182
        gbc.setState(0x543, 0x6359, 0x1570, 0x645e, 0xb65f, 0x10ec, 0x0, 0x0);
        gbc.writeMem(0x543, { 0x7e });
        gbc.writeMem(0x10ec, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6359, gbc.sp());
        EXPECT(0x544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0183
        gbc.setState(0xddd5, 0x219, 0x6d60, 0xdfa4, 0x4ace, 0x20a8, 0x0, 0x0);
        gbc.writeMem(0x20a8, { 0x79 });
        gbc.writeMem(0xddd5, { 0x7e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x219, gbc.sp());
        EXPECT(0xddd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xddd5));
        // 7E 0184
        gbc.setState(0x9e55, 0xd404, 0x7270, 0xd540, 0xaf16, 0xe8c8, 0x0, 0x0);
        gbc.writeMem(0x9e55, { 0x7e });
        gbc.writeMem(0xe8c8, { 0x8a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xd404, gbc.sp());
        EXPECT(0x9e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9e55));
        EXPECT(0x8a, gbc.readMem(0xe8c8));
        // 7E 0185
        gbc.setState(0x173c, 0x9980, 0x3ed0, 0x1a9a, 0x511c, 0x1055, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0x86 });
        gbc.writeMem(0x173c, { 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9980, gbc.sp());
        EXPECT(0x173d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0186
        gbc.setState(0x2956, 0xaa98, 0x6650, 0x7832, 0x2d78, 0x715d, 0x1, 0x1);
        gbc.writeMem(0x2956, { 0x7e });
        gbc.writeMem(0x715d, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xaa98, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0187
        gbc.setState(0x727e, 0xe4a6, 0x7070, 0x8bd4, 0x8b4a, 0xc1c, 0x0, 0x1);
        gbc.writeMem(0xc1c, { 0x45 });
        gbc.writeMem(0x727e, { 0x7e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0x727f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0188
        gbc.setState(0x7e7f, 0xc9aa, 0xdd70, 0xd954, 0x4d27, 0xcb71, 0x1, 0x0);
        gbc.writeMem(0x7e7f, { 0x7e });
        gbc.writeMem(0xcb71, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc9aa, gbc.sp());
        EXPECT(0x7e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xcb71));
        // 7E 0189
        gbc.setState(0xbef8, 0xc3d4, 0xa6a0, 0x413e, 0x4eb1, 0xe797, 0x0, 0x0);
        gbc.writeMem(0xbef8, { 0x7e });
        gbc.writeMem(0xe797, { 0xa9 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc3d4, gbc.sp());
        EXPECT(0xbef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbef8));
        EXPECT(0xa9, gbc.readMem(0xe797));
        // 7E 018A
        gbc.setState(0x79e5, 0xac4f, 0x3e30, 0x23f2, 0xecab, 0xcabc, 0x0, 0x0);
        gbc.writeMem(0x79e5, { 0x7e });
        gbc.writeMem(0xcabc, { 0x54 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xac4f, gbc.sp());
        EXPECT(0x79e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xcabc));
        // 7E 018B
        gbc.setState(0x293d, 0x33b5, 0xa0c0, 0x20db, 0x12ef, 0x3553, 0x1, 0x0);
        gbc.writeMem(0x293d, { 0x7e });
        gbc.writeMem(0x3553, { 0xa8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x33b5, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 018C
        gbc.setState(0x4e2b, 0xb484, 0x6f00, 0x69c5, 0xf1fb, 0x9ff9, 0x0, 0x0);
        gbc.writeMem(0x4e2b, { 0x7e });
        gbc.writeMem(0x9ff9, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xb484, gbc.sp());
        EXPECT(0x4e2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9ff9));
        // 7E 018D
        gbc.setState(0x9097, 0xe46, 0xae50, 0x9041, 0xca22, 0xbacf, 0x0, 0x0);
        gbc.writeMem(0x9097, { 0x7e });
        gbc.writeMem(0xbacf, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe46, gbc.sp());
        EXPECT(0x9098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9097));
        EXPECT(0xc3, gbc.readMem(0xbacf));
        // 7E 018E
        gbc.setState(0x7b6f, 0x6fd7, 0xb2e0, 0xbc1b, 0xde2, 0xf1a6, 0x0, 0x1);
        gbc.writeMem(0x7b6f, { 0x7e });
        gbc.writeMem(0xf1a6, { 0xf7 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x6fd7, gbc.sp());
        EXPECT(0x7b70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xf1a6));
        // 7E 018F
        gbc.setState(0x16b6, 0x13de, 0x6b30, 0x5720, 0xdb44, 0x9a55, 0x1, 0x1);
        gbc.writeMem(0x16b6, { 0x7e });
        gbc.writeMem(0x9a55, { 0xf4 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x13de, gbc.sp());
        EXPECT(0x16b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9a55));
        // 7E 0190
        gbc.setState(0xec80, 0x40d, 0xb3f0, 0xfed0, 0x4ae4, 0x5069, 0x1, 0x1);
        gbc.writeMem(0x5069, { 0xc0 });
        gbc.writeMem(0xec80, { 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x40d, gbc.sp());
        EXPECT(0xec81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xec80));
        // 7E 0191
        gbc.setState(0xc6cc, 0x719c, 0x96b0, 0x8adf, 0x90b6, 0xe50d, 0x1, 0x0);
        gbc.writeMem(0xc6cc, { 0x7e });
        gbc.writeMem(0xe50d, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x719c, gbc.sp());
        EXPECT(0xc6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc6cc));
        EXPECT(0xcb, gbc.readMem(0xe50d));
        // 7E 0192
        gbc.setState(0x24ef, 0xc532, 0x4920, 0xe850, 0xc3a3, 0xb322, 0x0, 0x0);
        gbc.writeMem(0x24ef, { 0x7e });
        gbc.writeMem(0xb322, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc532, gbc.sp());
        EXPECT(0x24f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xb322));
        // 7E 0193
        gbc.setState(0x170a, 0xdfb3, 0xc630, 0xe4d0, 0xff8, 0x6900, 0x0, 0x0);
        gbc.writeMem(0x170a, { 0x7e });
        gbc.writeMem(0x6900, { 0x67 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdfb3, gbc.sp());
        EXPECT(0x170b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0194
        gbc.setState(0xdbf0, 0xb6c, 0xc270, 0x43ae, 0xcf7b, 0x9d23, 0x0, 0x1);
        gbc.writeMem(0x9d23, { 0x85 });
        gbc.writeMem(0xdbf0, { 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb6c, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x9d23));
        EXPECT(0x7e, gbc.readMem(0xdbf0));
        // 7E 0195
        gbc.setState(0x2706, 0x4a27, 0xb530, 0x4ed0, 0x6e2b, 0xc419, 0x1, 0x0);
        gbc.writeMem(0x2706, { 0x7e });
        gbc.writeMem(0xc419, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0x2707, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc419));
        // 7E 0196
        gbc.setState(0xcfb3, 0xd410, 0xcc30, 0x7218, 0x61e2, 0xb95b, 0x1, 0x1);
        gbc.writeMem(0xb95b, { 0x2d });
        gbc.writeMem(0xcfb3, { 0x7e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd410, gbc.sp());
        EXPECT(0xcfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb95b));
        EXPECT(0x7e, gbc.readMem(0xcfb3));
        // 7E 0197
        gbc.setState(0x88ef, 0xd0a6, 0x1b20, 0x39de, 0x4415, 0x86e6, 0x1, 0x0);
        gbc.writeMem(0x86e6, { 0xfb });
        gbc.writeMem(0x88ef, { 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x88f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x86e6));
        EXPECT(0x7e, gbc.readMem(0x88ef));
        // 7E 0198
        gbc.setState(0xd1ed, 0x1a6b, 0x8860, 0xbc7c, 0x2a14, 0x1fb0, 0x1, 0x0);
        gbc.writeMem(0x1fb0, { 0x1a });
        gbc.writeMem(0xd1ed, { 0x7e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1a6b, gbc.sp());
        EXPECT(0xd1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd1ed));
        // 7E 0199
        gbc.setState(0xa0f4, 0x438f, 0xbd80, 0xdd2f, 0x5966, 0xb255, 0x1, 0x1);
        gbc.writeMem(0xa0f4, { 0x7e });
        gbc.writeMem(0xb255, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x438f, gbc.sp());
        EXPECT(0xa0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa0f4));
        EXPECT(0x1e, gbc.readMem(0xb255));
        // 7E 019A
        gbc.setState(0xbe22, 0x8f89, 0xcc80, 0x8a19, 0x80f8, 0xc1a5, 0x1, 0x0);
        gbc.writeMem(0xbe22, { 0x7e });
        gbc.writeMem(0xc1a5, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8f89, gbc.sp());
        EXPECT(0xbe23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbe22));
        EXPECT(0xb6, gbc.readMem(0xc1a5));
        // 7E 019B
        gbc.setState(0x68a, 0x3489, 0xd020, 0xc0d, 0xada2, 0x8999, 0x1, 0x1);
        gbc.writeMem(0x68a, { 0x7e });
        gbc.writeMem(0x8999, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3489, gbc.sp());
        EXPECT(0x68b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0x8999));
        // 7E 019C
        gbc.setState(0x5e1f, 0xd212, 0x5800, 0x7176, 0x4752, 0x7093, 0x1, 0x1);
        gbc.writeMem(0x5e1f, { 0x7e });
        gbc.writeMem(0x7093, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0x5e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 019D
        gbc.setState(0xd316, 0x55fe, 0x4dc0, 0x6dfc, 0x3458, 0xbeb1, 0x1, 0x0);
        gbc.writeMem(0xbeb1, { 0x57 });
        gbc.writeMem(0xd316, { 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x55fe, gbc.sp());
        EXPECT(0xd317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xbeb1));
        EXPECT(0x7e, gbc.readMem(0xd316));
        // 7E 019E
        gbc.setState(0xe85f, 0x66a1, 0xb70, 0x848c, 0x6f3c, 0xf571, 0x1, 0x0);
        gbc.writeMem(0xe85f, { 0x7e });
        gbc.writeMem(0xf571, { 0x98 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x66a1, gbc.sp());
        EXPECT(0xe860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe85f));
        EXPECT(0x98, gbc.readMem(0xf571));
        // 7E 019F
        gbc.setState(0x96ee, 0x2a9c, 0x3f10, 0xf276, 0x3a2c, 0x9148, 0x1, 0x1);
        gbc.writeMem(0x9148, { 0x69 });
        gbc.writeMem(0x96ee, { 0x7e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x96ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0x9148));
        EXPECT(0x7e, gbc.readMem(0x96ee));
        // 7E 01A0
        gbc.setState(0x3b54, 0xfe48, 0xf380, 0x9557, 0x4e4c, 0x76d0, 0x1, 0x0);
        gbc.writeMem(0x3b54, { 0x7e });
        gbc.writeMem(0x76d0, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfe48, gbc.sp());
        EXPECT(0x3b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01A1
        gbc.setState(0x6b35, 0xaa94, 0xc1d0, 0x9e45, 0xbc9, 0xd361, 0x0, 0x0);
        gbc.writeMem(0x6b35, { 0x7e });
        gbc.writeMem(0xd361, { 0xd0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa94, gbc.sp());
        EXPECT(0x6b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd0, gbc.readMem(0xd361));
        // 7E 01A2
        gbc.setState(0x2c6, 0x69d1, 0x7ae0, 0x95b2, 0x8971, 0x3802, 0x0, 0x1);
        gbc.writeMem(0x2c6, { 0x7e });
        gbc.writeMem(0x3802, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x69d1, gbc.sp());
        EXPECT(0x2c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01A3
        gbc.setState(0x9c5b, 0x9ed1, 0x9c90, 0x10da, 0x72cf, 0x51a4, 0x1, 0x0);
        gbc.writeMem(0x51a4, { 0x77 });
        gbc.writeMem(0x9c5b, { 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9ed1, gbc.sp());
        EXPECT(0x9c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9c5b));
        // 7E 01A4
        gbc.setState(0x321c, 0xbbd8, 0x6960, 0x961, 0xf095, 0x976b, 0x0, 0x1);
        gbc.writeMem(0x321c, { 0x7e });
        gbc.writeMem(0x976b, { 0x81 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbbd8, gbc.sp());
        EXPECT(0x321d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0x976b));
        // 7E 01A5
        gbc.setState(0x97a9, 0xdd96, 0x6f90, 0x8d1c, 0x3256, 0xc6a8, 0x0, 0x1);
        gbc.writeMem(0x97a9, { 0x7e });
        gbc.writeMem(0xc6a8, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xdd96, gbc.sp());
        EXPECT(0x97aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x97a9));
        EXPECT(0x70, gbc.readMem(0xc6a8));
        // 7E 01A6
        gbc.setState(0x9003, 0x4097, 0x75a0, 0xbae0, 0xfd72, 0xc8a8, 0x1, 0x0);
        gbc.writeMem(0x9003, { 0x7e });
        gbc.writeMem(0xc8a8, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4097, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9003));
        EXPECT(0x7e, gbc.readMem(0xc8a8));
        // 7E 01A7
        gbc.setState(0xc83d, 0x50b4, 0xe490, 0x8b0f, 0xa165, 0x77c5, 0x1, 0x0);
        gbc.writeMem(0x77c5, { 0x66 });
        gbc.writeMem(0xc83d, { 0x7e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x50b4, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc83d));
        // 7E 01A8
        gbc.setState(0x784b, 0x9a59, 0xc370, 0xae39, 0xfa0f, 0xe603, 0x0, 0x0);
        gbc.writeMem(0x784b, { 0x7e });
        gbc.writeMem(0xe603, { 0xd9 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9a59, gbc.sp());
        EXPECT(0x784c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe603));
        // 7E 01A9
        gbc.setState(0xae89, 0xe483, 0xd310, 0x9bc7, 0x20d0, 0xb689, 0x0, 0x0);
        gbc.writeMem(0xae89, { 0x7e });
        gbc.writeMem(0xb689, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe483, gbc.sp());
        EXPECT(0xae8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xae89));
        EXPECT(0x75, gbc.readMem(0xb689));
        // 7E 01AA
        gbc.setState(0x576b, 0xd0dd, 0x6f0, 0x81d4, 0x2b82, 0x9ebd, 0x1, 0x0);
        gbc.writeMem(0x576b, { 0x7e });
        gbc.writeMem(0x9ebd, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd0dd, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x9ebd));
        // 7E 01AB
        gbc.setState(0xaf42, 0x4c85, 0x3f70, 0xce33, 0x1246, 0x257e, 0x0, 0x1);
        gbc.writeMem(0x257e, { 0xc8 });
        gbc.writeMem(0xaf42, { 0x7e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x4c85, gbc.sp());
        EXPECT(0xaf43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaf42));
        // 7E 01AC
        gbc.setState(0x45c, 0x67f3, 0xa1f0, 0xd670, 0xed1d, 0x6761, 0x1, 0x1);
        gbc.writeMem(0x45c, { 0x7e });
        gbc.writeMem(0x6761, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0x45d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01AD
        gbc.setState(0x90f7, 0xd580, 0x9e20, 0x9d3d, 0xf597, 0x5f4c, 0x1, 0x0);
        gbc.writeMem(0x5f4c, { 0x6a });
        gbc.writeMem(0x90f7, { 0x7e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd580, gbc.sp());
        EXPECT(0x90f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x90f7));
        // 7E 01AE
        gbc.setState(0x8fe6, 0xbbf7, 0xbfa0, 0xa84a, 0xb3c4, 0x4c5, 0x0, 0x1);
        gbc.writeMem(0x4c5, { 0x78 });
        gbc.writeMem(0x8fe6, { 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xbbf7, gbc.sp());
        EXPECT(0x8fe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8fe6));
        // 7E 01AF
        gbc.setState(0x68fa, 0x9c41, 0xc810, 0x9b, 0x3e8c, 0x7b9a, 0x0, 0x0);
        gbc.writeMem(0x68fa, { 0x7e });
        gbc.writeMem(0x7b9a, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0x68fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01B1
        gbc.setState(0x395b, 0x15ff, 0xd880, 0x4454, 0x6954, 0xa6c1, 0x1, 0x0);
        gbc.writeMem(0x395b, { 0x7e });
        gbc.writeMem(0xa6c1, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x15ff, gbc.sp());
        EXPECT(0x395c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xa6c1));
        // 7E 01B2
        gbc.setState(0x705d, 0x2086, 0xa80, 0x51df, 0x6c1, 0x12a4, 0x0, 0x0);
        gbc.writeMem(0x12a4, { 0xbe });
        gbc.writeMem(0x705d, { 0x7e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2086, gbc.sp());
        EXPECT(0x705e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01B3
        gbc.setState(0x6a29, 0x3547, 0xcc10, 0x24e6, 0x46f6, 0x7769, 0x0, 0x1);
        gbc.writeMem(0x6a29, { 0x7e });
        gbc.writeMem(0x7769, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0x6a2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01B4
        gbc.setState(0xe4e3, 0xe2cc, 0xab60, 0x5bbc, 0xc5d3, 0x2449, 0x0, 0x0);
        gbc.writeMem(0x2449, { 0xb3 });
        gbc.writeMem(0xe4e3, { 0x7e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe2cc, gbc.sp());
        EXPECT(0xe4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe4e3));
        // 7E 01B5
        gbc.setState(0xb01, 0x2c51, 0x1280, 0x67f6, 0xb882, 0xdce4, 0x1, 0x1);
        gbc.writeMem(0xb01, { 0x7e });
        gbc.writeMem(0xdce4, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0xb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xdce4));
        // 7E 01B6
        gbc.setState(0x1ee6, 0x3742, 0xc3d0, 0x6797, 0x343c, 0x19d1, 0x0, 0x0);
        gbc.writeMem(0x19d1, { 0x14 });
        gbc.writeMem(0x1ee6, { 0x7e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x3742, gbc.sp());
        EXPECT(0x1ee7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01B7
        gbc.setState(0x336e, 0x42dd, 0xe7f0, 0x53ef, 0x4d2e, 0x7a31, 0x0, 0x1);
        gbc.writeMem(0x336e, { 0x7e });
        gbc.writeMem(0x7a31, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x42dd, gbc.sp());
        EXPECT(0x336f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01B8
        gbc.setState(0xee39, 0x17cc, 0x3700, 0xa772, 0x6341, 0x2171, 0x1, 0x1);
        gbc.writeMem(0x2171, { 0x14 });
        gbc.writeMem(0xee39, { 0x7e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x17cc, gbc.sp());
        EXPECT(0xee3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xee39));
        // 7E 01B9
        gbc.setState(0xeb5, 0xd750, 0xeb30, 0xf1ae, 0x3b2d, 0xae3f, 0x1, 0x1);
        gbc.writeMem(0xeb5, { 0x7e });
        gbc.writeMem(0xae3f, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd750, gbc.sp());
        EXPECT(0xeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xae3f));
        // 7E 01BA
        gbc.setState(0x85e7, 0xd, 0xd280, 0x6ee5, 0x8c0d, 0xdc90, 0x0, 0x0);
        gbc.writeMem(0x85e7, { 0x7e });
        gbc.writeMem(0xdc90, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd, gbc.sp());
        EXPECT(0x85e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x85e7));
        EXPECT(0xe1, gbc.readMem(0xdc90));
        // 7E 01BB
        gbc.setState(0xe38a, 0xf779, 0x4e80, 0xa12f, 0xac4f, 0x9753, 0x0, 0x0);
        gbc.writeMem(0x9753, { 0xd6 });
        gbc.writeMem(0xe38a, { 0x7e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf779, gbc.sp());
        EXPECT(0xe38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0x9753));
        EXPECT(0x7e, gbc.readMem(0xe38a));
        // 7E 01BC
        gbc.setState(0x2066, 0x1bd8, 0x1b30, 0x5f48, 0x66df, 0x5a06, 0x0, 0x0);
        gbc.writeMem(0x2066, { 0x7e });
        gbc.writeMem(0x5a06, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1bd8, gbc.sp());
        EXPECT(0x2067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01BD
        gbc.setState(0x6134, 0xbd0b, 0xb6f0, 0x5ef2, 0x8d17, 0x5acc, 0x0, 0x0);
        gbc.writeMem(0x5acc, { 0xc8 });
        gbc.writeMem(0x6134, { 0x7e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbd0b, gbc.sp());
        EXPECT(0x6135, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01BE
        gbc.setState(0xe40f, 0x56e6, 0x8340, 0x3abc, 0xc04c, 0x36fd, 0x1, 0x1);
        gbc.writeMem(0x36fd, { 0x1f });
        gbc.writeMem(0xe40f, { 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x56e6, gbc.sp());
        EXPECT(0xe410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe40f));
        // 7E 01BF
        gbc.setState(0xca6a, 0x23b2, 0xfe60, 0x6b7, 0x493f, 0x1ca5, 0x1, 0x1);
        gbc.writeMem(0x1ca5, { 0xdd });
        gbc.writeMem(0xca6a, { 0x7e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x23b2, gbc.sp());
        EXPECT(0xca6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xca6a));
        // 7E 01C0
        gbc.setState(0xb200, 0x50d0, 0xbc00, 0x9a00, 0xc124, 0x5f10, 0x0, 0x0);
        gbc.writeMem(0x5f10, { 0x3c });
        gbc.writeMem(0xb200, { 0x7e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x50d0, gbc.sp());
        EXPECT(0xb201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb200));
        // 7E 01C1
        gbc.setState(0x332e, 0xdb56, 0x8d70, 0x7b03, 0x3f3e, 0x2072, 0x1, 0x1);
        gbc.writeMem(0x2072, { 0x3d });
        gbc.writeMem(0x332e, { 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x332f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01C2
        gbc.setState(0x190d, 0x2664, 0xde20, 0xf83, 0x719a, 0x514e, 0x0, 0x1);
        gbc.writeMem(0x190d, { 0x7e });
        gbc.writeMem(0x514e, { 0xa });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2664, gbc.sp());
        EXPECT(0x190e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01C3
        gbc.setState(0x7e13, 0xbbde, 0x73a0, 0x13c9, 0x6a7a, 0x51f8, 0x1, 0x1);
        gbc.writeMem(0x51f8, { 0x2 });
        gbc.writeMem(0x7e13, { 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbbde, gbc.sp());
        EXPECT(0x7e14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01C4
        gbc.setState(0xd0d0, 0x9a05, 0x3530, 0x2660, 0xc2ad, 0x2fbc, 0x0, 0x0);
        gbc.writeMem(0x2fbc, { 0xef });
        gbc.writeMem(0xd0d0, { 0x7e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0xd0d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd0d0));
        // 7E 01C5
        gbc.setState(0xd400, 0x91c0, 0x9cd0, 0x1216, 0x78bc, 0x720b, 0x1, 0x0);
        gbc.writeMem(0x720b, { 0xe });
        gbc.writeMem(0xd400, { 0x7e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x91c0, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd400));
        // 7E 01C6
        gbc.setState(0xe0b3, 0x6ec9, 0xb680, 0xb882, 0x826e, 0xf0ac, 0x1, 0x1);
        gbc.writeMem(0xe0b3, { 0x7e });
        gbc.writeMem(0xf0ac, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x6ec9, gbc.sp());
        EXPECT(0xe0b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe0b3));
        EXPECT(0x5f, gbc.readMem(0xf0ac));
        // 7E 01C7
        gbc.setState(0x5b79, 0x1b8d, 0x4e40, 0x56f0, 0xa196, 0xe8aa, 0x0, 0x0);
        gbc.writeMem(0x5b79, { 0x7e });
        gbc.writeMem(0xe8aa, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1b8d, gbc.sp());
        EXPECT(0x5b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xe8aa));
        // 7E 01C8
        gbc.setState(0x38ae, 0x82ba, 0x1fe0, 0xa8b8, 0xeda7, 0xe57, 0x0, 0x1);
        gbc.writeMem(0xe57, { 0x69 });
        gbc.writeMem(0x38ae, { 0x7e });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x82ba, gbc.sp());
        EXPECT(0x38af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01C9
        gbc.setState(0xd54f, 0x32ac, 0x93b0, 0x8228, 0x19b8, 0xe20, 0x0, 0x1);
        gbc.writeMem(0xe20, { 0x5d });
        gbc.writeMem(0xd54f, { 0x7e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x32ac, gbc.sp());
        EXPECT(0xd550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd54f));
        // 7E 01CA
        gbc.setState(0xcf9f, 0xd3fc, 0xac90, 0x3902, 0x4615, 0xeb32, 0x1, 0x1);
        gbc.writeMem(0xcf9f, { 0x7e });
        gbc.writeMem(0xeb32, { 0xc5 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xd3fc, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcf9f));
        EXPECT(0xc5, gbc.readMem(0xeb32));
        // 7E 01CB
        gbc.setState(0x9799, 0xe591, 0xfc0, 0x3fa1, 0x1051, 0x24c7, 0x0, 0x0);
        gbc.writeMem(0x24c7, { 0x50 });
        gbc.writeMem(0x9799, { 0x7e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe591, gbc.sp());
        EXPECT(0x979a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9799));
        // 7E 01CC
        gbc.setState(0x89e1, 0xc722, 0x97d0, 0x3818, 0xab64, 0x7a1b, 0x0, 0x0);
        gbc.writeMem(0x7a1b, { 0x12 });
        gbc.writeMem(0x89e1, { 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc722, gbc.sp());
        EXPECT(0x89e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x89e1));
        // 7E 01CD
        gbc.setState(0x3ec3, 0x1974, 0x4210, 0x3064, 0xbce0, 0xa27e, 0x1, 0x1);
        gbc.writeMem(0x3ec3, { 0x7e });
        gbc.writeMem(0xa27e, { 0x22 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1974, gbc.sp());
        EXPECT(0x3ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xa27e));
        // 7E 01CE
        gbc.setState(0x9231, 0x91f8, 0x5670, 0x742d, 0x679b, 0xc3ca, 0x0, 0x1);
        gbc.writeMem(0x9231, { 0x7e });
        gbc.writeMem(0xc3ca, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x91f8, gbc.sp());
        EXPECT(0x9232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9231));
        EXPECT(0x34, gbc.readMem(0xc3ca));
        // 7E 01CF
        gbc.setState(0xe98f, 0xdcc1, 0xb320, 0x9c32, 0x8f0f, 0x2726, 0x1, 0x1);
        gbc.writeMem(0x2726, { 0x11 });
        gbc.writeMem(0xe98f, { 0x7e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xdcc1, gbc.sp());
        EXPECT(0xe990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe98f));
        // 7E 01D0
        gbc.setState(0xe276, 0xc57b, 0xba20, 0x438, 0x713c, 0x9ec5, 0x0, 0x1);
        gbc.writeMem(0x9ec5, { 0xb8 });
        gbc.writeMem(0xe276, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc57b, gbc.sp());
        EXPECT(0xe277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9ec5));
        EXPECT(0x7e, gbc.readMem(0xe276));
        // 7E 01D1
        gbc.setState(0xefc0, 0x87eb, 0xa270, 0x7a56, 0x5b27, 0x7944, 0x0, 0x0);
        gbc.writeMem(0x7944, { 0x1a });
        gbc.writeMem(0xefc0, { 0x7e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x87eb, gbc.sp());
        EXPECT(0xefc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xefc0));
        // 7E 01D2
        gbc.setState(0xcfe1, 0xc750, 0xd350, 0x34d3, 0x1e8c, 0x1718, 0x0, 0x0);
        gbc.writeMem(0x1718, { 0xe9 });
        gbc.writeMem(0xcfe1, { 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc750, gbc.sp());
        EXPECT(0xcfe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcfe1));
        // 7E 01D3
        gbc.setState(0xb525, 0x25e2, 0x11a0, 0xc3d6, 0x4936, 0xbba9, 0x1, 0x0);
        gbc.writeMem(0xb525, { 0x7e });
        gbc.writeMem(0xbba9, { 0x25 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x25e2, gbc.sp());
        EXPECT(0xb526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb525));
        EXPECT(0x25, gbc.readMem(0xbba9));
        // 7E 01D4
        gbc.setState(0x3bb, 0xa9cb, 0x8340, 0x74b8, 0xab2f, 0x245b, 0x0, 0x1);
        gbc.writeMem(0x3bb, { 0x7e });
        gbc.writeMem(0x245b, { 0xfd });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa9cb, gbc.sp());
        EXPECT(0x3bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01D5
        gbc.setState(0x64ca, 0xc0e6, 0x9b0, 0x2a8f, 0x7194, 0x7fc3, 0x1, 0x1);
        gbc.writeMem(0x64ca, { 0x7e });
        gbc.writeMem(0x7fc3, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc0e6, gbc.sp());
        EXPECT(0x64cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01D6
        gbc.setState(0x1c01, 0x84ce, 0xcff0, 0xdce3, 0x8b74, 0xe8e8, 0x0, 0x0);
        gbc.writeMem(0x1c01, { 0x7e });
        gbc.writeMem(0xe8e8, { 0x79 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x84ce, gbc.sp());
        EXPECT(0x1c02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xe8e8));
        // 7E 01D7
        gbc.setState(0x141e, 0x31f9, 0x8600, 0xe791, 0x73f0, 0x4d6f, 0x1, 0x0);
        gbc.writeMem(0x141e, { 0x7e });
        gbc.writeMem(0x4d6f, { 0x8b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x31f9, gbc.sp());
        EXPECT(0x141f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01D8
        gbc.setState(0x754, 0xf57, 0xf2b0, 0x570a, 0x390f, 0x3753, 0x1, 0x1);
        gbc.writeMem(0x754, { 0x7e });
        gbc.writeMem(0x3753, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xf57, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01D9
        gbc.setState(0x3177, 0xa25a, 0xff90, 0xe210, 0x4fd, 0xbbed, 0x0, 0x1);
        gbc.writeMem(0x3177, { 0x7e });
        gbc.writeMem(0xbbed, { 0xad });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0x3178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xbbed));
        // 7E 01DA
        gbc.setState(0x327a, 0x1d42, 0x4080, 0x59c4, 0xf304, 0x6d7, 0x0, 0x1);
        gbc.writeMem(0x6d7, { 0x8c });
        gbc.writeMem(0x327a, { 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01DB
        gbc.setState(0x3033, 0xacbb, 0x2370, 0x4cb4, 0x9ac6, 0x84dd, 0x0, 0x0);
        gbc.writeMem(0x3033, { 0x7e });
        gbc.writeMem(0x84dd, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xacbb, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x84dd));
        // 7E 01DC
        gbc.setState(0x6920, 0x4b5e, 0x76f0, 0x61f1, 0xb537, 0x2ecb, 0x1, 0x1);
        gbc.writeMem(0x2ecb, { 0x1e });
        gbc.writeMem(0x6920, { 0x7e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x4b5e, gbc.sp());
        EXPECT(0x6921, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01DD
        gbc.setState(0xc0d7, 0xa151, 0xb930, 0x1ae2, 0xb15b, 0x127e, 0x1, 0x0);
        gbc.writeMem(0x127e, { 0xd4 });
        gbc.writeMem(0xc0d7, { 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc0d7));
        // 7E 01DE
        gbc.setState(0xb0c9, 0x2c44, 0x14a0, 0xaf86, 0xe5dd, 0x11be, 0x0, 0x0);
        gbc.writeMem(0x11be, { 0x2b });
        gbc.writeMem(0xb0c9, { 0x7e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2c44, gbc.sp());
        EXPECT(0xb0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb0c9));
        // 7E 01DF
        gbc.setState(0x39e0, 0x9644, 0xcb00, 0xb5fd, 0x7381, 0xb4f4, 0x1, 0x1);
        gbc.writeMem(0x39e0, { 0x7e });
        gbc.writeMem(0xb4f4, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9644, gbc.sp());
        EXPECT(0x39e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xb4f4));
        // 7E 01E0
        gbc.setState(0x1273, 0xb79d, 0x7db0, 0x7d09, 0x568c, 0xb0bb, 0x0, 0x1);
        gbc.writeMem(0x1273, { 0x7e });
        gbc.writeMem(0xb0bb, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb79d, gbc.sp());
        EXPECT(0x1274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb0bb));
        // 7E 01E1
        gbc.setState(0xa52d, 0x6357, 0x49a0, 0x938e, 0x1352, 0x4e26, 0x0, 0x0);
        gbc.writeMem(0x4e26, { 0x64 });
        gbc.writeMem(0xa52d, { 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6357, gbc.sp());
        EXPECT(0xa52e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa52d));
        // 7E 01E2
        gbc.setState(0xd445, 0x5492, 0x9e40, 0xb9e9, 0x8182, 0x9213, 0x0, 0x1);
        gbc.writeMem(0x9213, { 0x3e });
        gbc.writeMem(0xd445, { 0x7e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5492, gbc.sp());
        EXPECT(0xd446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x9213));
        EXPECT(0x7e, gbc.readMem(0xd445));
        // 7E 01E3
        gbc.setState(0x20cc, 0x51d2, 0x75b0, 0x9aca, 0xf9c1, 0x5a95, 0x0, 0x1);
        gbc.writeMem(0x20cc, { 0x7e });
        gbc.writeMem(0x5a95, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x51d2, gbc.sp());
        EXPECT(0x20cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01E4
        gbc.setState(0xaa62, 0xff20, 0x37a0, 0xab3a, 0xf1b3, 0xbe1b, 0x0, 0x0);
        gbc.writeMem(0xaa62, { 0x7e });
        gbc.writeMem(0xbe1b, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0xaa63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaa62));
        EXPECT(0xed, gbc.readMem(0xbe1b));
        // 7E 01E5
        gbc.setState(0xc522, 0x7772, 0xc90, 0x648f, 0x7d3e, 0x9c3c, 0x0, 0x1);
        gbc.writeMem(0x9c3c, { 0x5c });
        gbc.writeMem(0xc522, { 0x7e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x7772, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x9c3c));
        EXPECT(0x7e, gbc.readMem(0xc522));
        // 7E 01E6
        gbc.setState(0xe234, 0x232, 0x1bf0, 0x2fbc, 0x59fc, 0xcb7, 0x0, 0x0);
        gbc.writeMem(0xcb7, { 0x70 });
        gbc.writeMem(0xe234, { 0x7e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x232, gbc.sp());
        EXPECT(0xe235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe234));
        // 7E 01E7
        gbc.setState(0x4397, 0x7814, 0xc7e0, 0xf1e3, 0x29ad, 0x2cdf, 0x1, 0x0);
        gbc.writeMem(0x2cdf, { 0x95 });
        gbc.writeMem(0x4397, { 0x7e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0x4398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01E8
        gbc.setState(0x392a, 0x402c, 0x9f90, 0xcc11, 0x35d0, 0x445e, 0x1, 0x0);
        gbc.writeMem(0x392a, { 0x7e });
        gbc.writeMem(0x445e, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x402c, gbc.sp());
        EXPECT(0x392b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01E9
        gbc.setState(0xcb35, 0x6b6a, 0x1b70, 0x9005, 0x7a1b, 0x2811, 0x0, 0x1);
        gbc.writeMem(0x2811, { 0x65 });
        gbc.writeMem(0xcb35, { 0x7e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcb35));
        // 7E 01EA
        gbc.setState(0x5944, 0x9950, 0x8a10, 0x8344, 0xb1d8, 0x9906, 0x1, 0x0);
        gbc.writeMem(0x5944, { 0x7e });
        gbc.writeMem(0x9906, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9950, gbc.sp());
        EXPECT(0x5945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9906));
        // 7E 01EB
        gbc.setState(0xb2ce, 0x46a, 0x8cb0, 0x8e5, 0x1f56, 0x6ee5, 0x1, 0x0);
        gbc.writeMem(0x6ee5, { 0x1a });
        gbc.writeMem(0xb2ce, { 0x7e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x46a, gbc.sp());
        EXPECT(0xb2cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb2ce));
        // 7E 01EC
        gbc.setState(0xdaf4, 0x7c3, 0x1b40, 0x222f, 0xe224, 0x1694, 0x0, 0x1);
        gbc.writeMem(0x1694, { 0xb8 });
        gbc.writeMem(0xdaf4, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7c3, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdaf4));
        // 7E 01ED
        gbc.setState(0x4ca7, 0x29ed, 0xd8d0, 0x3088, 0xcdce, 0x6cca, 0x1, 0x1);
        gbc.writeMem(0x4ca7, { 0x7e });
        gbc.writeMem(0x6cca, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29ed, gbc.sp());
        EXPECT(0x4ca8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01EE
        gbc.setState(0xb35c, 0xe361, 0x7330, 0x90f9, 0xc78d, 0x2bc2, 0x0, 0x1);
        gbc.writeMem(0x2bc2, { 0x87 });
        gbc.writeMem(0xb35c, { 0x7e });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe361, gbc.sp());
        EXPECT(0xb35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb35c));
        // 7E 01EF
        gbc.setState(0x2b82, 0x2175, 0x5e70, 0xcf77, 0x912e, 0x12cf, 0x0, 0x1);
        gbc.writeMem(0x12cf, { 0xb0 });
        gbc.writeMem(0x2b82, { 0x7e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2175, gbc.sp());
        EXPECT(0x2b83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01F0
        gbc.setState(0x7079, 0x9ad4, 0x8f80, 0xd3f6, 0x521a, 0x4932, 0x1, 0x1);
        gbc.writeMem(0x4932, { 0xa0 });
        gbc.writeMem(0x7079, { 0x7e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9ad4, gbc.sp());
        EXPECT(0x707a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01F1
        gbc.setState(0x6ba9, 0x68d7, 0x8bc0, 0xafc6, 0x8af6, 0x3a08, 0x0, 0x0);
        gbc.writeMem(0x3a08, { 0x8a });
        gbc.writeMem(0x6ba9, { 0x7e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x68d7, gbc.sp());
        EXPECT(0x6baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01F3
        gbc.setState(0xca4c, 0x3bb4, 0x9bf0, 0xff49, 0x9543, 0x48f7, 0x0, 0x1);
        gbc.writeMem(0x48f7, { 0x2d });
        gbc.writeMem(0xca4c, { 0x7e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3bb4, gbc.sp());
        EXPECT(0xca4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xca4c));
        // 7E 01F4
        gbc.setState(0x87ef, 0xb5b3, 0xaf10, 0x6d4d, 0xe573, 0xfb32, 0x1, 0x1);
        gbc.writeMem(0x87ef, { 0x7e });
        gbc.writeMem(0xfb32, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xb5b3, gbc.sp());
        EXPECT(0x87f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x87ef));
        EXPECT(0xb2, gbc.readMem(0xfb32));
        // 7E 01F5
        gbc.setState(0x5282, 0xb990, 0x83a0, 0xf05d, 0x84dd, 0x98cc, 0x0, 0x0);
        gbc.writeMem(0x5282, { 0x7e });
        gbc.writeMem(0x98cc, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0x5283, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x98cc));
        // 7E 01F6
        gbc.setState(0x352f, 0x2c6d, 0x2170, 0x9acb, 0x3cbb, 0x92f1, 0x1, 0x0);
        gbc.writeMem(0x352f, { 0x7e });
        gbc.writeMem(0x92f1, { 0x24 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2c6d, gbc.sp());
        EXPECT(0x3530, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x92f1));
        // 7E 01F7
        gbc.setState(0xe5c, 0x2ffb, 0xe900, 0xcb8c, 0xcfe2, 0xc4b6, 0x0, 0x0);
        gbc.writeMem(0xe5c, { 0x7e });
        gbc.writeMem(0xc4b6, { 0xe7 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2ffb, gbc.sp());
        EXPECT(0xe5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xc4b6));
        // 7E 01F8
        gbc.setState(0x407f, 0xeb4b, 0x2290, 0x812a, 0x4022, 0x3a19, 0x0, 0x0);
        gbc.writeMem(0x3a19, { 0xa });
        gbc.writeMem(0x407f, { 0x7e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xeb4b, gbc.sp());
        EXPECT(0x4080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 01F9
        gbc.setState(0x9c82, 0x519, 0xc810, 0x773b, 0xac4e, 0xb9da, 0x0, 0x1);
        gbc.writeMem(0x9c82, { 0x7e });
        gbc.writeMem(0xb9da, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x519, gbc.sp());
        EXPECT(0x9c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9c82));
        EXPECT(0x29, gbc.readMem(0xb9da));
        // 7E 01FA
        gbc.setState(0x2ee2, 0x410f, 0xc800, 0x629b, 0xbf31, 0x1592, 0x1, 0x1);
        gbc.writeMem(0x1592, { 0xa3 });
        gbc.writeMem(0x2ee2, { 0x7e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x410f, gbc.sp());
        EXPECT(0x2ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01FB
        gbc.setState(0xd984, 0xff55, 0x2c80, 0x39a8, 0x42de, 0xb4dc, 0x0, 0x0);
        gbc.writeMem(0xb4dc, { 0xad });
        gbc.writeMem(0xd984, { 0x7e });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xff55, gbc.sp());
        EXPECT(0xd985, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb4dc));
        EXPECT(0x7e, gbc.readMem(0xd984));
        // 7E 01FC
        gbc.setState(0x5aa2, 0xb8d5, 0xf60, 0x77bd, 0x97ac, 0x7e57, 0x0, 0x1);
        gbc.writeMem(0x5aa2, { 0x7e });
        gbc.writeMem(0x7e57, { 0x64 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0x5aa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 01FD
        gbc.setState(0x8a14, 0x4b5e, 0x8ca0, 0x42c, 0xedfe, 0xd241, 0x1, 0x1);
        gbc.writeMem(0x8a14, { 0x7e });
        gbc.writeMem(0xd241, { 0x6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x4b5e, gbc.sp());
        EXPECT(0x8a15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8a14));
        EXPECT(0x6, gbc.readMem(0xd241));
        // 7E 01FF
        gbc.setState(0xcba0, 0xfd61, 0x12c0, 0xfd85, 0x6caa, 0x92c6, 0x1, 0x1);
        gbc.writeMem(0x92c6, { 0x44 });
        gbc.writeMem(0xcba0, { 0x7e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xfd61, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x92c6));
        EXPECT(0x7e, gbc.readMem(0xcba0));
        // 7E 0200
        gbc.setState(0x80cc, 0x9691, 0xe940, 0xb3cc, 0xcd71, 0x1ef4, 0x0, 0x1);
        gbc.writeMem(0x1ef4, { 0x53 });
        gbc.writeMem(0x80cc, { 0x7e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9691, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x80cc));
        // 7E 0201
        gbc.setState(0x10a3, 0x5a16, 0x4b40, 0x1815, 0xb0ef, 0x129e, 0x1, 0x0);
        gbc.writeMem(0x10a3, { 0x7e });
        gbc.writeMem(0x129e, { 0x1b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5a16, gbc.sp());
        EXPECT(0x10a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0202
        gbc.setState(0x5d52, 0x7543, 0x2b10, 0xf04a, 0x2257, 0x8097, 0x1, 0x1);
        gbc.writeMem(0x5d52, { 0x7e });
        gbc.writeMem(0x8097, { 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7543, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x8097));
        // 7E 0203
        gbc.setState(0x7cb1, 0x2c2b, 0x7290, 0x5148, 0xe8ff, 0x829d, 0x1, 0x0);
        gbc.writeMem(0x7cb1, { 0x7e });
        gbc.writeMem(0x829d, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2c2b, gbc.sp());
        EXPECT(0x7cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0x829d));
        // 7E 0204
        gbc.setState(0x572e, 0x2b72, 0xe3a0, 0xfe52, 0xf9f3, 0x4bec, 0x0, 0x1);
        gbc.writeMem(0x4bec, { 0xde });
        gbc.writeMem(0x572e, { 0x7e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x2b72, gbc.sp());
        EXPECT(0x572f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0205
        gbc.setState(0x3c3e, 0x1075, 0x9b80, 0x47af, 0xc2e7, 0xe5cc, 0x0, 0x1);
        gbc.writeMem(0x3c3e, { 0x7e });
        gbc.writeMem(0xe5cc, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1075, gbc.sp());
        EXPECT(0x3c3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xe5cc));
        // 7E 0206
        gbc.setState(0x9417, 0xff1d, 0x8ca0, 0x3146, 0xfb9b, 0x7fb7, 0x1, 0x0);
        gbc.writeMem(0x7fb7, { 0x51 });
        gbc.writeMem(0x9417, { 0x7e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xff1d, gbc.sp());
        EXPECT(0x9418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9417));
        // 7E 0207
        gbc.setState(0xc1a7, 0x3418, 0x6900, 0xdf26, 0xd06e, 0xc496, 0x1, 0x0);
        gbc.writeMem(0xc1a7, { 0x7e });
        gbc.writeMem(0xc496, { 0x7e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3418, gbc.sp());
        EXPECT(0xc1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc1a7));
        EXPECT(0x7e, gbc.readMem(0xc496));
        // 7E 0208
        gbc.setState(0xe5e3, 0x8d16, 0x68b0, 0x7e01, 0xaab5, 0xe3ca, 0x1, 0x1);
        gbc.writeMem(0xe3ca, { 0xa5 });
        gbc.writeMem(0xe5e3, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8d16, gbc.sp());
        EXPECT(0xe5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe3ca));
        EXPECT(0x7e, gbc.readMem(0xe5e3));
        // 7E 0209
        gbc.setState(0x3df5, 0x7d65, 0xc5b0, 0x2b71, 0x5724, 0xe30d, 0x1, 0x0);
        gbc.writeMem(0x3df5, { 0x7e });
        gbc.writeMem(0xe30d, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7d65, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xe30d));
        // 7E 020A
        gbc.setState(0x6f1, 0x6d4d, 0x1a20, 0x480, 0xd603, 0x7355, 0x0, 0x0);
        gbc.writeMem(0x6f1, { 0x7e });
        gbc.writeMem(0x7355, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6d4d, gbc.sp());
        EXPECT(0x6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 020B
        gbc.setState(0xb10a, 0x92f5, 0xbdb0, 0xc6fb, 0xdfee, 0x9, 0x0, 0x0);
        gbc.writeMem(0x9, { 0x85 });
        gbc.writeMem(0xb10a, { 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x92f5, gbc.sp());
        EXPECT(0xb10b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb10a));
        // 7E 020C
        gbc.setState(0x8de9, 0x1de2, 0x4c60, 0xf30e, 0xf79b, 0xdd06, 0x0, 0x1);
        gbc.writeMem(0x8de9, { 0x7e });
        gbc.writeMem(0xdd06, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1de2, gbc.sp());
        EXPECT(0x8dea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8de9));
        EXPECT(0x77, gbc.readMem(0xdd06));
        // 7E 020E
        gbc.setState(0xbc61, 0x1e1b, 0xd010, 0xad29, 0x1850, 0x3c71, 0x0, 0x0);
        gbc.writeMem(0x3c71, { 0xf2 });
        gbc.writeMem(0xbc61, { 0x7e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x1e1b, gbc.sp());
        EXPECT(0xbc62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbc61));
        // 7E 020F
        gbc.setState(0x7002, 0x61c7, 0xe90, 0x5e89, 0x370c, 0xf7fb, 0x1, 0x0);
        gbc.writeMem(0x7002, { 0x7e });
        gbc.writeMem(0xf7fb, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x61c7, gbc.sp());
        EXPECT(0x7003, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xf7fb));
        // 7E 0210
        gbc.setState(0xc03f, 0x12cf, 0xd830, 0x30ea, 0x90df, 0xbefb, 0x1, 0x1);
        gbc.writeMem(0xbefb, { 0x8b });
        gbc.writeMem(0xc03f, { 0x7e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x12cf, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xbefb));
        EXPECT(0x7e, gbc.readMem(0xc03f));
        // 7E 0211
        gbc.setState(0xc9f0, 0x2659, 0x8350, 0xa151, 0xe4a6, 0x714a, 0x0, 0x0);
        gbc.writeMem(0x714a, { 0xc8 });
        gbc.writeMem(0xc9f0, { 0x7e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xc9f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc9f0));
        // 7E 0212
        gbc.setState(0xd45d, 0xbe9, 0xe920, 0x9425, 0x4c97, 0xc2f3, 0x0, 0x0);
        gbc.writeMem(0xc2f3, { 0x9 });
        gbc.writeMem(0xd45d, { 0x7e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbe9, gbc.sp());
        EXPECT(0xd45e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xc2f3));
        EXPECT(0x7e, gbc.readMem(0xd45d));
        // 7E 0213
        gbc.setState(0xab8a, 0x90e0, 0x5650, 0xf94f, 0x8b93, 0x1ab3, 0x0, 0x0);
        gbc.writeMem(0x1ab3, { 0xb8 });
        gbc.writeMem(0xab8a, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x90e0, gbc.sp());
        EXPECT(0xab8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xab8a));
        // 7E 0214
        gbc.setState(0xe559, 0x25f2, 0xe080, 0x1470, 0xf15f, 0x6d26, 0x0, 0x1);
        gbc.writeMem(0x6d26, { 0x7f });
        gbc.writeMem(0xe559, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x25f2, gbc.sp());
        EXPECT(0xe55a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe559));
        // 7E 0215
        gbc.setState(0x8d50, 0xfbd3, 0x9d90, 0x7c4c, 0x86fb, 0x698b, 0x0, 0x1);
        gbc.writeMem(0x698b, { 0xf7 });
        gbc.writeMem(0x8d50, { 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfbd3, gbc.sp());
        EXPECT(0x8d51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8d50));
        // 7E 0216
        gbc.setState(0xa14b, 0xb6d6, 0x7110, 0x1340, 0x42ee, 0xbb08, 0x0, 0x1);
        gbc.writeMem(0xa14b, { 0x7e });
        gbc.writeMem(0xbb08, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb6d6, gbc.sp());
        EXPECT(0xa14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa14b));
        EXPECT(0x7f, gbc.readMem(0xbb08));
        // 7E 0217
        gbc.setState(0xb8a1, 0x2498, 0x5d70, 0xd7fb, 0xc91, 0xc66c, 0x1, 0x0);
        gbc.writeMem(0xb8a1, { 0x7e });
        gbc.writeMem(0xc66c, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0xb8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb8a1));
        EXPECT(0xcb, gbc.readMem(0xc66c));
        // 7E 0218
        gbc.setState(0xcab0, 0x6c7d, 0xf480, 0xf3a6, 0x73cd, 0x991e, 0x1, 0x1);
        gbc.writeMem(0x991e, { 0xe5 });
        gbc.writeMem(0xcab0, { 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6c7d, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x991e));
        EXPECT(0x7e, gbc.readMem(0xcab0));
        // 7E 0219
        gbc.setState(0x8184, 0x5550, 0xfcc0, 0x809b, 0x92be, 0x4e49, 0x0, 0x1);
        gbc.writeMem(0x4e49, { 0x85 });
        gbc.writeMem(0x8184, { 0x7e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5550, gbc.sp());
        EXPECT(0x8185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8184));
        // 7E 021A
        gbc.setState(0x3448, 0xec7b, 0x76c0, 0x4fd6, 0x49c, 0xc88e, 0x0, 0x0);
        gbc.writeMem(0x3448, { 0x7e });
        gbc.writeMem(0xc88e, { 0xfc });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xec7b, gbc.sp());
        EXPECT(0x3449, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xc88e));
        // 7E 021B
        gbc.setState(0xad2b, 0xa353, 0xdc30, 0x8296, 0xd815, 0xfe2c, 0x0, 0x1);
        gbc.writeMem(0xad2b, { 0x7e });
        gbc.writeMem(0xfe2c, { 0x4c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xa353, gbc.sp());
        EXPECT(0xad2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xad2b));
        EXPECT(0x4c, gbc.readMem(0xfe2c));
        // 7E 021C
        gbc.setState(0x3b4e, 0x2043, 0x6cc0, 0xc001, 0x202f, 0x879a, 0x1, 0x1);
        gbc.writeMem(0x3b4e, { 0x7e });
        gbc.writeMem(0x879a, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2043, gbc.sp());
        EXPECT(0x3b4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x879a));
        // 7E 021D
        gbc.setState(0x3a11, 0x7f60, 0xd380, 0x1b09, 0x4149, 0x9655, 0x1, 0x0);
        gbc.writeMem(0x3a11, { 0x7e });
        gbc.writeMem(0x9655, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7f60, gbc.sp());
        EXPECT(0x3a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0x9655));
        // 7E 021E
        gbc.setState(0x583b, 0x4988, 0xe80, 0x4e2a, 0x5200, 0x179b, 0x1, 0x1);
        gbc.writeMem(0x179b, { 0xa1 });
        gbc.writeMem(0x583b, { 0x7e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0x583c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 021F
        gbc.setState(0xbaa6, 0x75a1, 0x2a90, 0x3d54, 0x9e2c, 0x9850, 0x0, 0x0);
        gbc.writeMem(0x9850, { 0x23 });
        gbc.writeMem(0xbaa6, { 0x7e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0xbaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x9850));
        EXPECT(0x7e, gbc.readMem(0xbaa6));
        // 7E 0220
        gbc.setState(0xd411, 0xd572, 0x2960, 0x1edb, 0x4cef, 0x7efd, 0x1, 0x0);
        gbc.writeMem(0x7efd, { 0xf1 });
        gbc.writeMem(0xd411, { 0x7e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xd572, gbc.sp());
        EXPECT(0xd412, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd411));
        // 7E 0222
        gbc.setState(0xab43, 0x7fbf, 0xbcf0, 0x2dea, 0xb42f, 0x906, 0x0, 0x1);
        gbc.writeMem(0x906, { 0xe9 });
        gbc.writeMem(0xab43, { 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7fbf, gbc.sp());
        EXPECT(0xab44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xab43));
        // 7E 0223
        gbc.setState(0xd5c9, 0x651f, 0xd0, 0xf59c, 0x1309, 0xa649, 0x1, 0x1);
        gbc.writeMem(0xa649, { 0x3 });
        gbc.writeMem(0xd5c9, { 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x651f, gbc.sp());
        EXPECT(0xd5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa649));
        EXPECT(0x7e, gbc.readMem(0xd5c9));
        // 7E 0224
        gbc.setState(0x62d9, 0x1723, 0xf8c0, 0xe5b5, 0x9852, 0xeba6, 0x1, 0x1);
        gbc.writeMem(0x62d9, { 0x7e });
        gbc.writeMem(0xeba6, { 0x8f });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1723, gbc.sp());
        EXPECT(0x62da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeba6));
        // 7E 0225
        gbc.setState(0xe147, 0xe93d, 0x4cb0, 0xbf2d, 0x577c, 0x1e25, 0x1, 0x1);
        gbc.writeMem(0x1e25, { 0x6 });
        gbc.writeMem(0xe147, { 0x7e });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xe93d, gbc.sp());
        EXPECT(0xe148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe147));
        // 7E 0227
        gbc.setState(0x2fa1, 0x3950, 0xafa0, 0xcc99, 0xd86c, 0xf38a, 0x0, 0x1);
        gbc.writeMem(0x2fa1, { 0x7e });
        gbc.writeMem(0xf38a, { 0xd3 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3950, gbc.sp());
        EXPECT(0x2fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xf38a));
        // 7E 0228
        gbc.setState(0x6a0b, 0xe2e, 0xfd30, 0xf62a, 0x18e2, 0xaf86, 0x0, 0x0);
        gbc.writeMem(0x6a0b, { 0x7e });
        gbc.writeMem(0xaf86, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe2e, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xaf86));
        // 7E 0229
        gbc.setState(0xb405, 0xa542, 0x8fe0, 0x7f47, 0x70a6, 0x5af8, 0x0, 0x0);
        gbc.writeMem(0x5af8, { 0x77 });
        gbc.writeMem(0xb405, { 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xa542, gbc.sp());
        EXPECT(0xb406, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb405));
        // 7E 022A
        gbc.setState(0x4f00, 0x9ff8, 0xb750, 0x8f92, 0xf0a7, 0xb833, 0x1, 0x1);
        gbc.writeMem(0x4f00, { 0x7e });
        gbc.writeMem(0xb833, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ff8, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb833));
        // 7E 022B
        gbc.setState(0xe9aa, 0xa980, 0x270, 0xbb67, 0x2cee, 0xb6dc, 0x0, 0x0);
        gbc.writeMem(0xb6dc, { 0x39 });
        gbc.writeMem(0xe9aa, { 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xa980, gbc.sp());
        EXPECT(0xe9ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb6dc));
        EXPECT(0x7e, gbc.readMem(0xe9aa));
        // 7E 022C
        gbc.setState(0x6d56, 0xa4a5, 0xac50, 0xb399, 0xbc8a, 0x7ea, 0x0, 0x0);
        gbc.writeMem(0x7ea, { 0x1 });
        gbc.writeMem(0x6d56, { 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa4a5, gbc.sp());
        EXPECT(0x6d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 022D
        gbc.setState(0x6675, 0x7a6e, 0x1990, 0x47bd, 0xc058, 0xac2c, 0x0, 0x1);
        gbc.writeMem(0x6675, { 0x7e });
        gbc.writeMem(0xac2c, { 0xcb });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7a6e, gbc.sp());
        EXPECT(0x6676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac2c));
        // 7E 022E
        gbc.setState(0xa506, 0xdb43, 0x4810, 0xc7fc, 0xf6ec, 0x4d38, 0x1, 0x1);
        gbc.writeMem(0x4d38, { 0x6b });
        gbc.writeMem(0xa506, { 0x7e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0xa507, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa506));
        // 7E 022F
        gbc.setState(0xa823, 0xb473, 0x82d0, 0x826f, 0xf153, 0x3678, 0x1, 0x1);
        gbc.writeMem(0x3678, { 0xa5 });
        gbc.writeMem(0xa823, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xb473, gbc.sp());
        EXPECT(0xa824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa823));
        // 7E 0230
        gbc.setState(0x431f, 0xd005, 0x2960, 0x76b4, 0xac98, 0xcf3d, 0x0, 0x0);
        gbc.writeMem(0x431f, { 0x7e });
        gbc.writeMem(0xcf3d, { 0x3d });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd005, gbc.sp());
        EXPECT(0x4320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xcf3d));
        // 7E 0232
        gbc.setState(0x11eb, 0x9489, 0xc670, 0xc901, 0x995, 0x95c5, 0x1, 0x0);
        gbc.writeMem(0x11eb, { 0x7e });
        gbc.writeMem(0x95c5, { 0x96 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x9489, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x95c5));
        // 7E 0233
        gbc.setState(0x8cc8, 0xc4b0, 0xcd40, 0x8530, 0xc5d8, 0xf4f5, 0x0, 0x1);
        gbc.writeMem(0x8cc8, { 0x7e });
        gbc.writeMem(0xf4f5, { 0x52 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xc4b0, gbc.sp());
        EXPECT(0x8cc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8cc8));
        EXPECT(0x52, gbc.readMem(0xf4f5));
        // 7E 0234
        gbc.setState(0x4f28, 0x5bbd, 0x9d20, 0x5e5f, 0xa28e, 0x6fbe, 0x0, 0x0);
        gbc.writeMem(0x4f28, { 0x7e });
        gbc.writeMem(0x6fbe, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5bbd, gbc.sp());
        EXPECT(0x4f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0235
        gbc.setState(0x8b2c, 0x38f3, 0xc680, 0xfe70, 0xbf49, 0xfa1f, 0x0, 0x1);
        gbc.writeMem(0x8b2c, { 0x7e });
        gbc.writeMem(0xfa1f, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x38f3, gbc.sp());
        EXPECT(0x8b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8b2c));
        EXPECT(0x53, gbc.readMem(0xfa1f));
        // 7E 0237
        gbc.setState(0xc429, 0x478, 0x2d10, 0x41bf, 0xe502, 0x66e3, 0x0, 0x1);
        gbc.writeMem(0x66e3, { 0x25 });
        gbc.writeMem(0xc429, { 0x7e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x478, gbc.sp());
        EXPECT(0xc42a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc429));
        // 7E 0238
        gbc.setState(0x1f6d, 0xa2ba, 0x2c50, 0xcbcd, 0x3cf3, 0xb10b, 0x0, 0x0);
        gbc.writeMem(0x1f6d, { 0x7e });
        gbc.writeMem(0xb10b, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa2ba, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xb10b));
        // 7E 0239
        gbc.setState(0xbc8d, 0xf409, 0x8e80, 0x7acf, 0xb112, 0x1e76, 0x0, 0x1);
        gbc.writeMem(0x1e76, { 0x1f });
        gbc.writeMem(0xbc8d, { 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf409, gbc.sp());
        EXPECT(0xbc8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbc8d));
        // 7E 023A
        gbc.setState(0xedfd, 0xdc0d, 0x9a00, 0x9d1f, 0x9caa, 0x9a02, 0x1, 0x0);
        gbc.writeMem(0x9a02, { 0x2c });
        gbc.writeMem(0xedfd, { 0x7e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdc0d, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0x9a02));
        EXPECT(0x7e, gbc.readMem(0xedfd));
        // 7E 023B
        gbc.setState(0x6071, 0xff08, 0xf3a0, 0x1fa4, 0x1d48, 0x6314, 0x1, 0x0);
        gbc.writeMem(0x6071, { 0x7e });
        gbc.writeMem(0x6314, { 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xff08, gbc.sp());
        EXPECT(0x6072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 023C
        gbc.setState(0xf57, 0x91cd, 0x20c0, 0x7443, 0x9e05, 0xecba, 0x1, 0x1);
        gbc.writeMem(0xf57, { 0x7e });
        gbc.writeMem(0xecba, { 0xf5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x91cd, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xecba));
        // 7E 023D
        gbc.setState(0x931e, 0x921b, 0xda70, 0x61e, 0xc2fb, 0xd2db, 0x1, 0x1);
        gbc.writeMem(0x931e, { 0x7e });
        gbc.writeMem(0xd2db, { 0xfe });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x921b, gbc.sp());
        EXPECT(0x931f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x931e));
        EXPECT(0xfe, gbc.readMem(0xd2db));
        // 7E 023E
        gbc.setState(0xdecc, 0x9451, 0x6c40, 0x7658, 0xbb54, 0x83ff, 0x0, 0x1);
        gbc.writeMem(0x83ff, { 0x2a });
        gbc.writeMem(0xdecc, { 0x7e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9451, gbc.sp());
        EXPECT(0xdecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x83ff));
        EXPECT(0x7e, gbc.readMem(0xdecc));
        // 7E 023F
        gbc.setState(0x7da8, 0x435c, 0xf8d0, 0xacc4, 0xcb8c, 0x2ddd, 0x0, 0x1);
        gbc.writeMem(0x2ddd, { 0x57 });
        gbc.writeMem(0x7da8, { 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x435c, gbc.sp());
        EXPECT(0x7da9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0240
        gbc.setState(0xef6b, 0x9c4a, 0x7240, 0xe9b6, 0xa8fe, 0xab, 0x0, 0x0);
        gbc.writeMem(0xab, { 0x86 });
        gbc.writeMem(0xef6b, { 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x9c4a, gbc.sp());
        EXPECT(0xef6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xef6b));
        // 7E 0241
        gbc.setState(0x9c17, 0xe8b6, 0xc7e0, 0x2888, 0xb0d6, 0x6794, 0x1, 0x0);
        gbc.writeMem(0x6794, { 0x19 });
        gbc.writeMem(0x9c17, { 0x7e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xe8b6, gbc.sp());
        EXPECT(0x9c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9c17));
        // 7E 0242
        gbc.setState(0x1abd, 0x6d3e, 0x2c80, 0xf906, 0x16ba, 0x4d07, 0x1, 0x0);
        gbc.writeMem(0x1abd, { 0x7e });
        gbc.writeMem(0x4d07, { 0x75 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6d3e, gbc.sp());
        EXPECT(0x1abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0243
        gbc.setState(0xb788, 0xd5ce, 0x94a0, 0x19ce, 0x3478, 0x3c3a, 0x0, 0x1);
        gbc.writeMem(0x3c3a, { 0x4 });
        gbc.writeMem(0xb788, { 0x7e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd5ce, gbc.sp());
        EXPECT(0xb789, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb788));
        // 7E 0244
        gbc.setState(0xbb01, 0x8a35, 0x83c0, 0x9805, 0xab15, 0xa6a6, 0x1, 0x1);
        gbc.writeMem(0xa6a6, { 0x9b });
        gbc.writeMem(0xbb01, { 0x7e });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8a35, gbc.sp());
        EXPECT(0xbb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xa6a6));
        EXPECT(0x7e, gbc.readMem(0xbb01));
        // 7E 0245
        gbc.setState(0x8026, 0xbcf1, 0x9180, 0x31b4, 0x5d5d, 0x13d0, 0x1, 0x0);
        gbc.writeMem(0x13d0, { 0xcd });
        gbc.writeMem(0x8026, { 0x7e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbcf1, gbc.sp());
        EXPECT(0x8027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8026));
        // 7E 0246
        gbc.setState(0x5f74, 0xa521, 0x1090, 0xea3d, 0x61a, 0x586f, 0x1, 0x0);
        gbc.writeMem(0x586f, { 0x58 });
        gbc.writeMem(0x5f74, { 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa521, gbc.sp());
        EXPECT(0x5f75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0248
        gbc.setState(0x5e53, 0xad02, 0x4d80, 0x49e9, 0x3438, 0xf467, 0x1, 0x1);
        gbc.writeMem(0x5e53, { 0x7e });
        gbc.writeMem(0xf467, { 0x5a });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0x5e54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xf467));
        // 7E 0249
        gbc.setState(0x2e4, 0x5b03, 0x5440, 0x2a8d, 0x36a0, 0x4bb0, 0x1, 0x0);
        gbc.writeMem(0x2e4, { 0x7e });
        gbc.writeMem(0x4bb0, { 0x46 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5b03, gbc.sp());
        EXPECT(0x2e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 024A
        gbc.setState(0x176d, 0xb72f, 0x3520, 0xa9c9, 0xb746, 0xc565, 0x1, 0x1);
        gbc.writeMem(0x176d, { 0x7e });
        gbc.writeMem(0xc565, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x176e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xc565));
        // 7E 024B
        gbc.setState(0xce85, 0x679, 0x8070, 0x97a0, 0xf75e, 0x130b, 0x1, 0x0);
        gbc.writeMem(0x130b, { 0x12 });
        gbc.writeMem(0xce85, { 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x679, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xce85));
        // 7E 024C
        gbc.setState(0x31f6, 0x5842, 0xef60, 0x71fc, 0x2e8d, 0xdf30, 0x1, 0x1);
        gbc.writeMem(0x31f6, { 0x7e });
        gbc.writeMem(0xdf30, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5842, gbc.sp());
        EXPECT(0x31f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xdf30));
        // 7E 024D
        gbc.setState(0x5f07, 0x5f75, 0x76b0, 0xdbbb, 0xcfdd, 0xd1de, 0x0, 0x1);
        gbc.writeMem(0x5f07, { 0x7e });
        gbc.writeMem(0xd1de, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5f75, gbc.sp());
        EXPECT(0x5f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xd1de));
        // 7E 024E
        gbc.setState(0xbdbd, 0xb154, 0x240, 0x1c4e, 0xc23b, 0x615d, 0x0, 0x1);
        gbc.writeMem(0x615d, { 0x5b });
        gbc.writeMem(0xbdbd, { 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb154, gbc.sp());
        EXPECT(0xbdbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbdbd));
        // 7E 024F
        gbc.setState(0x969, 0xcc78, 0x5cf0, 0x76f4, 0xca88, 0xfc5e, 0x1, 0x1);
        gbc.writeMem(0x969, { 0x7e });
        gbc.writeMem(0xfc5e, { 0xa1 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xcc78, gbc.sp());
        EXPECT(0x96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xfc5e));
        // 7E 0250
        gbc.setState(0x2215, 0x761d, 0x3b60, 0xd8de, 0xc1f4, 0x2de2, 0x1, 0x0);
        gbc.writeMem(0x2215, { 0x7e });
        gbc.writeMem(0x2de2, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x761d, gbc.sp());
        EXPECT(0x2216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0251
        gbc.setState(0x777, 0x46ea, 0xdf00, 0x6fc, 0xabb9, 0x737c, 0x0, 0x1);
        gbc.writeMem(0x777, { 0x7e });
        gbc.writeMem(0x737c, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x46ea, gbc.sp());
        EXPECT(0x778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0253
        gbc.setState(0x8065, 0x598c, 0x7080, 0x1af5, 0xc4f7, 0xe9a6, 0x0, 0x1);
        gbc.writeMem(0x8065, { 0x7e });
        gbc.writeMem(0xe9a6, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x598c, gbc.sp());
        EXPECT(0x8066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8065));
        EXPECT(0xac, gbc.readMem(0xe9a6));
        // 7E 0255
        gbc.setState(0xd111, 0x59c, 0xde80, 0xfcc5, 0x7a83, 0x3222, 0x1, 0x1);
        gbc.writeMem(0x3222, { 0x5b });
        gbc.writeMem(0xd111, { 0x7e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x59c, gbc.sp());
        EXPECT(0xd112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd111));
        // 7E 0256
        gbc.setState(0x61fc, 0x70f6, 0x6b90, 0xbb08, 0x93a1, 0xe7f6, 0x1, 0x1);
        gbc.writeMem(0x61fc, { 0x7e });
        gbc.writeMem(0xe7f6, { 0x9 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x70f6, gbc.sp());
        EXPECT(0x61fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xe7f6));
        // 7E 0257
        gbc.setState(0x86bd, 0xff16, 0x76d0, 0x261f, 0xfe6a, 0xce8e, 0x0, 0x0);
        gbc.writeMem(0x86bd, { 0x7e });
        gbc.writeMem(0xce8e, { 0xab });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xff16, gbc.sp());
        EXPECT(0x86be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x86bd));
        EXPECT(0xab, gbc.readMem(0xce8e));
        // 7E 0258
        gbc.setState(0x9051, 0x3dbe, 0xf50, 0x3d9, 0x56a6, 0x8a57, 0x1, 0x0);
        gbc.writeMem(0x8a57, { 0x3f });
        gbc.writeMem(0x9051, { 0x7e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x3dbe, gbc.sp());
        EXPECT(0x9052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8a57));
        EXPECT(0x7e, gbc.readMem(0x9051));
        // 7E 0259
        gbc.setState(0xe35, 0x7613, 0xbed0, 0xbd25, 0xf9ae, 0x69cf, 0x1, 0x1);
        gbc.writeMem(0xe35, { 0x7e });
        gbc.writeMem(0x69cf, { 0x42 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7613, gbc.sp());
        EXPECT(0xe36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 025A
        gbc.setState(0x8b, 0x57d9, 0x35e0, 0x81f0, 0x76dc, 0x60a7, 0x0, 0x0);
        gbc.writeMem(0x8b, { 0x7e });
        gbc.writeMem(0x60a7, { 0x6c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x57d9, gbc.sp());
        EXPECT(0x8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 025B
        gbc.setState(0xb3fb, 0xb44a, 0x6050, 0x3df1, 0x5ad5, 0x6a7a, 0x0, 0x0);
        gbc.writeMem(0x6a7a, { 0x2c });
        gbc.writeMem(0xb3fb, { 0x7e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xb44a, gbc.sp());
        EXPECT(0xb3fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb3fb));
        // 7E 025C
        gbc.setState(0xaab6, 0xce3d, 0x4140, 0x3332, 0x59b3, 0xa1a9, 0x0, 0x1);
        gbc.writeMem(0xa1a9, { 0x61 });
        gbc.writeMem(0xaab6, { 0x7e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xce3d, gbc.sp());
        EXPECT(0xaab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa1a9));
        EXPECT(0x7e, gbc.readMem(0xaab6));
        // 7E 025D
        gbc.setState(0xc674, 0x4e18, 0x7c10, 0xe303, 0x7ea5, 0x4879, 0x0, 0x1);
        gbc.writeMem(0x4879, { 0xa1 });
        gbc.writeMem(0xc674, { 0x7e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e18, gbc.sp());
        EXPECT(0xc675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc674));
        // 7E 025F
        gbc.setState(0xd66f, 0x582f, 0xef0, 0x38bf, 0xe986, 0x1304, 0x1, 0x0);
        gbc.writeMem(0x1304, { 0xb8 });
        gbc.writeMem(0xd66f, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x582f, gbc.sp());
        EXPECT(0xd670, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd66f));
        // 7E 0260
        gbc.setState(0x4286, 0x150f, 0x2350, 0xc783, 0xa9cc, 0x50a3, 0x1, 0x0);
        gbc.writeMem(0x4286, { 0x7e });
        gbc.writeMem(0x50a3, { 0x74 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x150f, gbc.sp());
        EXPECT(0x4287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0262
        gbc.setState(0x1dc6, 0x3b0c, 0x5bc0, 0x1860, 0x740, 0xda65, 0x0, 0x0);
        gbc.writeMem(0x1dc6, { 0x7e });
        gbc.writeMem(0xda65, { 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3b0c, gbc.sp());
        EXPECT(0x1dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xda65));
        // 7E 0263
        gbc.setState(0xaaa9, 0xfc2d, 0x1f80, 0x2455, 0xc339, 0xa9ae, 0x0, 0x0);
        gbc.writeMem(0xa9ae, { 0xbd });
        gbc.writeMem(0xaaa9, { 0x7e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0xaaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa9ae));
        EXPECT(0x7e, gbc.readMem(0xaaa9));
        // 7E 0264
        gbc.setState(0x493e, 0x1b1f, 0x7350, 0x7c00, 0x6fc4, 0xea03, 0x1, 0x0);
        gbc.writeMem(0x493e, { 0x7e });
        gbc.writeMem(0xea03, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1b1f, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xea03));
        // 7E 0265
        gbc.setState(0x9941, 0x651a, 0x4e00, 0x280, 0xe252, 0xf79c, 0x0, 0x0);
        gbc.writeMem(0x9941, { 0x7e });
        gbc.writeMem(0xf79c, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x651a, gbc.sp());
        EXPECT(0x9942, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9941));
        EXPECT(0x89, gbc.readMem(0xf79c));
        // 7E 0266
        gbc.setState(0x7312, 0xe557, 0xa420, 0x9077, 0xae2e, 0x6bee, 0x0, 0x1);
        gbc.writeMem(0x6bee, { 0x3b });
        gbc.writeMem(0x7312, { 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe557, gbc.sp());
        EXPECT(0x7313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0267
        gbc.setState(0x9d62, 0x9092, 0x700, 0xeb54, 0x20e3, 0x5e4, 0x0, 0x0);
        gbc.writeMem(0x5e4, { 0xee });
        gbc.writeMem(0x9d62, { 0x7e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0x9d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9d62));
        // 7E 0268
        gbc.setState(0x287a, 0xa2b8, 0x1160, 0x685f, 0xdc35, 0xbf09, 0x0, 0x0);
        gbc.writeMem(0x287a, { 0x7e });
        gbc.writeMem(0xbf09, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x287b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xbf09));
        // 7E 0269
        gbc.setState(0x7491, 0x7724, 0x1050, 0x1602, 0x3afb, 0x4279, 0x0, 0x1);
        gbc.writeMem(0x4279, { 0x0 });
        gbc.writeMem(0x7491, { 0x7e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0x7492, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 026A
        gbc.setState(0x9eb7, 0x6592, 0x7950, 0x404, 0x9da1, 0xef6a, 0x1, 0x0);
        gbc.writeMem(0x9eb7, { 0x7e });
        gbc.writeMem(0xef6a, { 0xe6 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x9eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9eb7));
        EXPECT(0xe6, gbc.readMem(0xef6a));
        // 7E 026B
        gbc.setState(0x98c4, 0x6a12, 0xf780, 0xb63a, 0x3898, 0xfac1, 0x1, 0x1);
        gbc.writeMem(0x98c4, { 0x7e });
        gbc.writeMem(0xfac1, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0x98c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x98c4));
        EXPECT(0x88, gbc.readMem(0xfac1));
        // 7E 026C
        gbc.setState(0xcffa, 0x493d, 0x8e10, 0xbb70, 0x8a00, 0x456, 0x0, 0x0);
        gbc.writeMem(0x456, { 0x21 });
        gbc.writeMem(0xcffa, { 0x7e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x493d, gbc.sp());
        EXPECT(0xcffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcffa));
        // 7E 026D
        gbc.setState(0x52c2, 0xa07d, 0x8130, 0x32b9, 0xfcb3, 0x1358, 0x0, 0x0);
        gbc.writeMem(0x1358, { 0x36 });
        gbc.writeMem(0x52c2, { 0x7e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa07d, gbc.sp());
        EXPECT(0x52c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 026F
        gbc.setState(0x94ba, 0xa9e7, 0xfda0, 0x2635, 0x661f, 0x41ce, 0x1, 0x0);
        gbc.writeMem(0x41ce, { 0x5e });
        gbc.writeMem(0x94ba, { 0x7e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa9e7, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x94ba));
        // 7E 0270
        gbc.setState(0x9f76, 0x3ec5, 0xc160, 0xf24e, 0xf53, 0xf00c, 0x0, 0x1);
        gbc.writeMem(0x9f76, { 0x7e });
        gbc.writeMem(0xf00c, { 0x14 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3ec5, gbc.sp());
        EXPECT(0x9f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9f76));
        EXPECT(0x14, gbc.readMem(0xf00c));
        // 7E 0271
        gbc.setState(0x12f6, 0x1172, 0xac00, 0x3d05, 0x1410, 0xb23, 0x0, 0x0);
        gbc.writeMem(0xb23, { 0xcb });
        gbc.writeMem(0x12f6, { 0x7e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1172, gbc.sp());
        EXPECT(0x12f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0273
        gbc.setState(0x6abe, 0xc346, 0xcd20, 0x820a, 0x91fd, 0xa8c3, 0x1, 0x1);
        gbc.writeMem(0x6abe, { 0x7e });
        gbc.writeMem(0xa8c3, { 0xe8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc346, gbc.sp());
        EXPECT(0x6abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xa8c3));
        // 7E 0274
        gbc.setState(0xe865, 0x7814, 0x4980, 0x1e4e, 0x7661, 0xeda0, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0x7e });
        gbc.writeMem(0xeda0, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7814, gbc.sp());
        EXPECT(0xe866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe865));
        EXPECT(0x95, gbc.readMem(0xeda0));
        // 7E 0275
        gbc.setState(0xbfe0, 0x2e76, 0x6040, 0x9612, 0xba05, 0xa66, 0x1, 0x1);
        gbc.writeMem(0xa66, { 0x1 });
        gbc.writeMem(0xbfe0, { 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2e76, gbc.sp());
        EXPECT(0xbfe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbfe0));
        // 7E 0276
        gbc.setState(0x8fa6, 0x45f7, 0xdf0, 0x8e1e, 0x5d35, 0xef2a, 0x1, 0x1);
        gbc.writeMem(0x8fa6, { 0x7e });
        gbc.writeMem(0xef2a, { 0xd5 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x45f7, gbc.sp());
        EXPECT(0x8fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8fa6));
        EXPECT(0xd5, gbc.readMem(0xef2a));
        // 7E 0277
        gbc.setState(0xcbc, 0xf4e7, 0xae10, 0x3640, 0xe03a, 0x6e02, 0x0, 0x0);
        gbc.writeMem(0xcbc, { 0x7e });
        gbc.writeMem(0x6e02, { 0x43 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf4e7, gbc.sp());
        EXPECT(0xcbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0278
        gbc.setState(0x80f9, 0x624e, 0x4bf0, 0x3d48, 0xafcf, 0x447d, 0x1, 0x0);
        gbc.writeMem(0x447d, { 0x2 });
        gbc.writeMem(0x80f9, { 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x624e, gbc.sp());
        EXPECT(0x80fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x80f9));
        // 7E 0279
        gbc.setState(0xc54d, 0x3b73, 0x4930, 0x66de, 0x505, 0x5451, 0x0, 0x1);
        gbc.writeMem(0x5451, { 0x96 });
        gbc.writeMem(0xc54d, { 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3b73, gbc.sp());
        EXPECT(0xc54e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc54d));
        // 7E 027B
        gbc.setState(0x2a92, 0x818a, 0x280, 0x9871, 0x4c0d, 0x1edf, 0x0, 0x0);
        gbc.writeMem(0x1edf, { 0x3c });
        gbc.writeMem(0x2a92, { 0x7e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x818a, gbc.sp());
        EXPECT(0x2a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 027C
        gbc.setState(0xa53a, 0x6c85, 0xd380, 0x71f7, 0xb556, 0x58a0, 0x1, 0x1);
        gbc.writeMem(0x58a0, { 0x70 });
        gbc.writeMem(0xa53a, { 0x7e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x6c85, gbc.sp());
        EXPECT(0xa53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa53a));
        // 7E 027D
        gbc.setState(0xd1c1, 0x1ec2, 0x1060, 0x512d, 0x61a6, 0x980, 0x0, 0x0);
        gbc.writeMem(0x980, { 0x1d });
        gbc.writeMem(0xd1c1, { 0x7e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1ec2, gbc.sp());
        EXPECT(0xd1c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd1c1));
        // 7E 027E
        gbc.setState(0x4800, 0x5cfa, 0x7590, 0x325c, 0x56ce, 0xc620, 0x0, 0x0);
        gbc.writeMem(0x4800, { 0x7e });
        gbc.writeMem(0xc620, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5cfa, gbc.sp());
        EXPECT(0x4801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xc620));
        // 7E 027F
        gbc.setState(0xafe2, 0xbf27, 0xabb0, 0xbd4, 0xa954, 0xf0f7, 0x1, 0x0);
        gbc.writeMem(0xafe2, { 0x7e });
        gbc.writeMem(0xf0f7, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbf27, gbc.sp());
        EXPECT(0xafe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xafe2));
        EXPECT(0x29, gbc.readMem(0xf0f7));
        // 7E 0280
        gbc.setState(0xb674, 0x1500, 0x4600, 0x9181, 0x867, 0x8dc2, 0x0, 0x0);
        gbc.writeMem(0x8dc2, { 0x48 });
        gbc.writeMem(0xb674, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1500, gbc.sp());
        EXPECT(0xb675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0x8dc2));
        EXPECT(0x7e, gbc.readMem(0xb674));
        // 7E 0281
        gbc.setState(0x53ab, 0x8521, 0xdda0, 0xd009, 0x8064, 0x9276, 0x1, 0x1);
        gbc.writeMem(0x53ab, { 0x7e });
        gbc.writeMem(0x9276, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8521, gbc.sp());
        EXPECT(0x53ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0x9276));
        // 7E 0283
        gbc.setState(0x9456, 0x3bd1, 0xff40, 0x193e, 0x9179, 0x8689, 0x1, 0x1);
        gbc.writeMem(0x8689, { 0xc0 });
        gbc.writeMem(0x9456, { 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3bd1, gbc.sp());
        EXPECT(0x9457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x8689));
        EXPECT(0x7e, gbc.readMem(0x9456));
        // 7E 0284
        gbc.setState(0xeeae, 0x261c, 0x1800, 0xb98e, 0x3409, 0xa3dd, 0x1, 0x0);
        gbc.writeMem(0xa3dd, { 0x52 });
        gbc.writeMem(0xeeae, { 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x261c, gbc.sp());
        EXPECT(0xeeaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xa3dd));
        EXPECT(0x7e, gbc.readMem(0xeeae));
        // 7E 0285
        gbc.setState(0xbc00, 0x403f, 0xa9a0, 0x7812, 0x84fe, 0xa8d8, 0x1, 0x1);
        gbc.writeMem(0xa8d8, { 0xd8 });
        gbc.writeMem(0xbc00, { 0x7e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x403f, gbc.sp());
        EXPECT(0xbc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xa8d8));
        EXPECT(0x7e, gbc.readMem(0xbc00));
        // 7E 0286
        gbc.setState(0xcd8b, 0xeea8, 0xf230, 0xaf13, 0x74f0, 0xa251, 0x1, 0x0);
        gbc.writeMem(0xa251, { 0xf7 });
        gbc.writeMem(0xcd8b, { 0x7e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeea8, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xa251));
        EXPECT(0x7e, gbc.readMem(0xcd8b));
        // 7E 0287
        gbc.setState(0x398, 0x9da1, 0xc480, 0xc426, 0xa92f, 0xc8de, 0x1, 0x0);
        gbc.writeMem(0x398, { 0x7e });
        gbc.writeMem(0xc8de, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x9da1, gbc.sp());
        EXPECT(0x399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc8de));
        // 7E 0288
        gbc.setState(0x5af, 0x43a4, 0x3b70, 0x13d3, 0x3524, 0x3741, 0x1, 0x1);
        gbc.writeMem(0x5af, { 0x7e });
        gbc.writeMem(0x3741, { 0x63 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x43a4, gbc.sp());
        EXPECT(0x5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0289
        gbc.setState(0xea2b, 0x62fa, 0x8a20, 0x9320, 0xb745, 0x2f2b, 0x1, 0x0);
        gbc.writeMem(0x2f2b, { 0x6f });
        gbc.writeMem(0xea2b, { 0x7e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x62fa, gbc.sp());
        EXPECT(0xea2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xea2b));
        // 7E 028A
        gbc.setState(0xe515, 0x25a1, 0x8360, 0x4ecf, 0xb608, 0xf55d, 0x1, 0x1);
        gbc.writeMem(0xe515, { 0x7e });
        gbc.writeMem(0xf55d, { 0x31 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x25a1, gbc.sp());
        EXPECT(0xe516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe515));
        EXPECT(0x31, gbc.readMem(0xf55d));
        // 7E 028B
        gbc.setState(0x7150, 0xa130, 0xccc0, 0xc051, 0x87b9, 0x8fea, 0x1, 0x1);
        gbc.writeMem(0x7150, { 0x7e });
        gbc.writeMem(0x8fea, { 0xcf });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xa130, gbc.sp());
        EXPECT(0x7151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x8fea));
        // 7E 028C
        gbc.setState(0x125a, 0x6ecc, 0x7400, 0xf513, 0x6a73, 0xe7a1, 0x1, 0x0);
        gbc.writeMem(0x125a, { 0x7e });
        gbc.writeMem(0xe7a1, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6ecc, gbc.sp());
        EXPECT(0x125b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xe7a1));
        // 7E 028D
        gbc.setState(0x75b1, 0xda03, 0x1450, 0x31e8, 0x6b8a, 0xbe92, 0x1, 0x0);
        gbc.writeMem(0x75b1, { 0x7e });
        gbc.writeMem(0xbe92, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xda03, gbc.sp());
        EXPECT(0x75b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xbe92));
        // 7E 028E
        gbc.setState(0x9090, 0xf0ba, 0xfd00, 0xef4d, 0x5254, 0xf9d3, 0x0, 0x1);
        gbc.writeMem(0x9090, { 0x7e });
        gbc.writeMem(0xf9d3, { 0xc2 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf0ba, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9090));
        EXPECT(0xc2, gbc.readMem(0xf9d3));
        // 7E 028F
        gbc.setState(0x7c14, 0x22cc, 0x3b30, 0x2ce5, 0x2373, 0xfcc4, 0x0, 0x0);
        gbc.writeMem(0x7c14, { 0x7e });
        gbc.writeMem(0xfcc4, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x22cc, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xfcc4));
        // 7E 0290
        gbc.setState(0x6140, 0x2050, 0xc310, 0x31eb, 0xb5f7, 0xa19d, 0x1, 0x1);
        gbc.writeMem(0x6140, { 0x7e });
        gbc.writeMem(0xa19d, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x2050, gbc.sp());
        EXPECT(0x6141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa19d));
        // 7E 0291
        gbc.setState(0x6ca8, 0xcf24, 0xd00, 0x51eb, 0xbfb9, 0xfbd8, 0x0, 0x0);
        gbc.writeMem(0x6ca8, { 0x7e });
        gbc.writeMem(0xfbd8, { 0xb1 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcf24, gbc.sp());
        EXPECT(0x6ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xfbd8));
        // 7E 0292
        gbc.setState(0x1b66, 0x1cf5, 0x97a0, 0x1d77, 0xcf1a, 0xeba0, 0x1, 0x0);
        gbc.writeMem(0x1b66, { 0x7e });
        gbc.writeMem(0xeba0, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1cf5, gbc.sp());
        EXPECT(0x1b67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xeba0));
        // 7E 0293
        gbc.setState(0x1c0e, 0xa0af, 0xa2a0, 0x9759, 0xff25, 0x711b, 0x0, 0x0);
        gbc.writeMem(0x1c0e, { 0x7e });
        gbc.writeMem(0x711b, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0x1c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0294
        gbc.setState(0x9054, 0x504a, 0x1400, 0x6398, 0x7e61, 0xa7c1, 0x0, 0x1);
        gbc.writeMem(0x9054, { 0x7e });
        gbc.writeMem(0xa7c1, { 0x7 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x504a, gbc.sp());
        EXPECT(0x9055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9054));
        EXPECT(0x7, gbc.readMem(0xa7c1));
        // 7E 0296
        gbc.setState(0xc05, 0x4c21, 0xe9f0, 0x5e8, 0x593, 0x96c2, 0x1, 0x0);
        gbc.writeMem(0xc05, { 0x7e });
        gbc.writeMem(0x96c2, { 0xc8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x4c21, gbc.sp());
        EXPECT(0xc06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0x96c2));
        // 7E 0297
        gbc.setState(0xdf5, 0x249f, 0x3390, 0x1c3c, 0x9100, 0x6a, 0x0, 0x1);
        gbc.writeMem(0x6a, { 0x1c });
        gbc.writeMem(0xdf5, { 0x7e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x249f, gbc.sp());
        EXPECT(0xdf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0298
        gbc.setState(0x9189, 0xe2fe, 0xa340, 0x7137, 0x1bef, 0xfe52, 0x1, 0x1);
        gbc.writeMem(0x9189, { 0x7e });
        gbc.writeMem(0xfe52, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe2fe, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9189));
        EXPECT(0x32, gbc.readMem(0xfe52));
        // 7E 029A
        gbc.setState(0xd73c, 0x3f3a, 0x70, 0x1f45, 0xa442, 0xd686, 0x1, 0x1);
        gbc.writeMem(0xd686, { 0x2c });
        gbc.writeMem(0xd73c, { 0x7e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3f3a, gbc.sp());
        EXPECT(0xd73d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xd686));
        EXPECT(0x7e, gbc.readMem(0xd73c));
        // 7E 029B
        gbc.setState(0xd22e, 0x76d2, 0x19b0, 0xe0a8, 0xe107, 0x6862, 0x0, 0x0);
        gbc.writeMem(0x6862, { 0xb5 });
        gbc.writeMem(0xd22e, { 0x7e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x76d2, gbc.sp());
        EXPECT(0xd22f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd22e));
        // 7E 029C
        gbc.setState(0x917c, 0xce7e, 0xbf60, 0xef14, 0xc748, 0x8145, 0x0, 0x0);
        gbc.writeMem(0x8145, { 0x7f });
        gbc.writeMem(0x917c, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xce7e, gbc.sp());
        EXPECT(0x917d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0x8145));
        EXPECT(0x7e, gbc.readMem(0x917c));
        // 7E 029D
        gbc.setState(0x9ec9, 0xfcf, 0xd1f0, 0x70b0, 0xcab6, 0x74e7, 0x1, 0x0);
        gbc.writeMem(0x74e7, { 0x1b });
        gbc.writeMem(0x9ec9, { 0x7e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfcf, gbc.sp());
        EXPECT(0x9eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9ec9));
        // 7E 029E
        gbc.setState(0xaf19, 0xbccb, 0x7c80, 0x71b5, 0xd2c8, 0xc2a0, 0x1, 0x0);
        gbc.writeMem(0xaf19, { 0x7e });
        gbc.writeMem(0xc2a0, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbccb, gbc.sp());
        EXPECT(0xaf1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaf19));
        EXPECT(0xbc, gbc.readMem(0xc2a0));
        // 7E 029F
        gbc.setState(0xe1cc, 0xd732, 0x1530, 0xb754, 0x6514, 0x7ef8, 0x1, 0x1);
        gbc.writeMem(0x7ef8, { 0x48 });
        gbc.writeMem(0xe1cc, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd732, gbc.sp());
        EXPECT(0xe1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe1cc));
        // 7E 02A0
        gbc.setState(0x36c8, 0xc541, 0x7ef0, 0xa889, 0x95b9, 0x1273, 0x1, 0x1);
        gbc.writeMem(0x1273, { 0xfd });
        gbc.writeMem(0x36c8, { 0x7e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xc541, gbc.sp());
        EXPECT(0x36c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02A1
        gbc.setState(0xba24, 0x71ea, 0x3a40, 0xcdce, 0xffe0, 0xb619, 0x1, 0x1);
        gbc.writeMem(0xb619, { 0x54 });
        gbc.writeMem(0xba24, { 0x7e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x71ea, gbc.sp());
        EXPECT(0xba25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb619));
        EXPECT(0x7e, gbc.readMem(0xba24));
        // 7E 02A3
        gbc.setState(0xf53, 0xed5b, 0x98f0, 0x25a7, 0xc748, 0x134d, 0x0, 0x0);
        gbc.writeMem(0xf53, { 0x7e });
        gbc.writeMem(0x134d, { 0x21 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xed5b, gbc.sp());
        EXPECT(0xf54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02A4
        gbc.setState(0xd62a, 0xfed2, 0xac10, 0xfe8f, 0x818d, 0xcf51, 0x1, 0x1);
        gbc.writeMem(0xcf51, { 0x9f });
        gbc.writeMem(0xd62a, { 0x7e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xfed2, gbc.sp());
        EXPECT(0xd62b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xcf51));
        EXPECT(0x7e, gbc.readMem(0xd62a));
        // 7E 02A5
        gbc.setState(0x1eb6, 0xd9f, 0xde0, 0xf2ef, 0x1fc1, 0xf730, 0x1, 0x0);
        gbc.writeMem(0x1eb6, { 0x7e });
        gbc.writeMem(0xf730, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd9f, gbc.sp());
        EXPECT(0x1eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xf730));
        // 7E 02A6
        gbc.setState(0xc73c, 0xc62, 0x5fe0, 0xa7f0, 0xb2ab, 0x5beb, 0x0, 0x1);
        gbc.writeMem(0x5beb, { 0x28 });
        gbc.writeMem(0xc73c, { 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc62, gbc.sp());
        EXPECT(0xc73d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc73c));
        // 7E 02A7
        gbc.setState(0x1956, 0xe22d, 0x5c80, 0xb010, 0xe398, 0xda9f, 0x0, 0x1);
        gbc.writeMem(0x1956, { 0x7e });
        gbc.writeMem(0xda9f, { 0xa3 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xe22d, gbc.sp());
        EXPECT(0x1957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xda9f));
        // 7E 02A8
        gbc.setState(0xaa05, 0x845e, 0x4590, 0xcaf9, 0x4b90, 0x95bb, 0x1, 0x1);
        gbc.writeMem(0x95bb, { 0x77 });
        gbc.writeMem(0xaa05, { 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x845e, gbc.sp());
        EXPECT(0xaa06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x95bb));
        EXPECT(0x7e, gbc.readMem(0xaa05));
        // 7E 02A9
        gbc.setState(0xa0c0, 0x9c9b, 0xb470, 0xdbbc, 0x8dbf, 0x9e58, 0x0, 0x1);
        gbc.writeMem(0x9e58, { 0x1 });
        gbc.writeMem(0xa0c0, { 0x7e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9c9b, gbc.sp());
        EXPECT(0xa0c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9e58));
        EXPECT(0x7e, gbc.readMem(0xa0c0));
        // 7E 02AA
        gbc.setState(0xdd1b, 0x628b, 0xe800, 0xfcc0, 0x5b8d, 0xdf2d, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0x7e });
        gbc.writeMem(0xdf2d, { 0x5f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x628b, gbc.sp());
        EXPECT(0xdd1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdd1b));
        EXPECT(0x5f, gbc.readMem(0xdf2d));
        // 7E 02AB
        gbc.setState(0xcc4e, 0x978c, 0x71c0, 0xb3a6, 0x5b07, 0x352b, 0x0, 0x0);
        gbc.writeMem(0x352b, { 0xea });
        gbc.writeMem(0xcc4e, { 0x7e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x978c, gbc.sp());
        EXPECT(0xcc4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcc4e));
        // 7E 02AC
        gbc.setState(0x8de1, 0xc45d, 0x2720, 0x8012, 0x6021, 0xf27f, 0x1, 0x1);
        gbc.writeMem(0x8de1, { 0x7e });
        gbc.writeMem(0xf27f, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc45d, gbc.sp());
        EXPECT(0x8de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8de1));
        EXPECT(0x76, gbc.readMem(0xf27f));
        // 7E 02AD
        gbc.setState(0x154b, 0x786e, 0xee70, 0xb9c6, 0xefa2, 0x1651, 0x0, 0x0);
        gbc.writeMem(0x154b, { 0x7e });
        gbc.writeMem(0x1651, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x786e, gbc.sp());
        EXPECT(0x154c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02AE
        gbc.setState(0xe998, 0xf473, 0xbc70, 0x6163, 0x148c, 0xe295, 0x1, 0x1);
        gbc.writeMem(0xe295, { 0xfd });
        gbc.writeMem(0xe998, { 0x7e });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0xe999, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xe295));
        EXPECT(0x7e, gbc.readMem(0xe998));
        // 7E 02AF
        gbc.setState(0x41e0, 0x19f8, 0x6620, 0x6d85, 0x63a2, 0x163b, 0x0, 0x0);
        gbc.writeMem(0x163b, { 0x3e });
        gbc.writeMem(0x41e0, { 0x7e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x19f8, gbc.sp());
        EXPECT(0x41e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02B0
        gbc.setState(0xbdc8, 0xb6cf, 0x6070, 0x85d6, 0x38c6, 0x4b1c, 0x0, 0x1);
        gbc.writeMem(0x4b1c, { 0x86 });
        gbc.writeMem(0xbdc8, { 0x7e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb6cf, gbc.sp());
        EXPECT(0xbdc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbdc8));
        // 7E 02B1
        gbc.setState(0xa41c, 0x8f77, 0xf1b0, 0x732a, 0xbb80, 0x51db, 0x1, 0x1);
        gbc.writeMem(0x51db, { 0xa3 });
        gbc.writeMem(0xa41c, { 0x7e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8f77, gbc.sp());
        EXPECT(0xa41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa41c));
        // 7E 02B2
        gbc.setState(0xa418, 0x7d0, 0xbe30, 0x41e8, 0xb76c, 0x4800, 0x0, 0x0);
        gbc.writeMem(0x4800, { 0x78 });
        gbc.writeMem(0xa418, { 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x7d0, gbc.sp());
        EXPECT(0xa419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa418));
        // 7E 02B4
        gbc.setState(0xcf11, 0x51d9, 0xcd10, 0xc005, 0x3d1c, 0x8a9f, 0x0, 0x1);
        gbc.writeMem(0x8a9f, { 0xcd });
        gbc.writeMem(0xcf11, { 0x7e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x51d9, gbc.sp());
        EXPECT(0xcf12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8a9f));
        EXPECT(0x7e, gbc.readMem(0xcf11));
        // 7E 02B5
        gbc.setState(0x2559, 0x84d3, 0x6c60, 0x8b4b, 0x1c21, 0x97f6, 0x0, 0x1);
        gbc.writeMem(0x2559, { 0x7e });
        gbc.writeMem(0x97f6, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x84d3, gbc.sp());
        EXPECT(0x255a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x97f6));
        // 7E 02B6
        gbc.setState(0xcec2, 0xc65b, 0xf730, 0x7ca7, 0x3ba2, 0xfb3b, 0x1, 0x1);
        gbc.writeMem(0xcec2, { 0x7e });
        gbc.writeMem(0xfb3b, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc65b, gbc.sp());
        EXPECT(0xcec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcec2));
        EXPECT(0x3a, gbc.readMem(0xfb3b));
        // 7E 02B7
        gbc.setState(0xe08d, 0x184, 0x4c90, 0x7c91, 0xcfac, 0x25ac, 0x1, 0x0);
        gbc.writeMem(0x25ac, { 0x55 });
        gbc.writeMem(0xe08d, { 0x7e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x184, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe08d));
        // 7E 02B8
        gbc.setState(0x3678, 0xd7dd, 0xf0d0, 0x9c8b, 0xfab, 0x980d, 0x1, 0x1);
        gbc.writeMem(0x3678, { 0x7e });
        gbc.writeMem(0x980d, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd7dd, gbc.sp());
        EXPECT(0x3679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0x980d));
        // 7E 02B9
        gbc.setState(0x66b4, 0x7cff, 0x3780, 0xdc4d, 0x7c0, 0x24eb, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0x75 });
        gbc.writeMem(0x66b4, { 0x7e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7cff, gbc.sp());
        EXPECT(0x66b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02BA
        gbc.setState(0x9f5, 0xc70d, 0xfd70, 0x6896, 0xd8a9, 0xfcc7, 0x1, 0x1);
        gbc.writeMem(0x9f5, { 0x7e });
        gbc.writeMem(0xfcc7, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc70d, gbc.sp());
        EXPECT(0x9f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xfcc7));
        // 7E 02BB
        gbc.setState(0x8e65, 0x948d, 0xf540, 0xfdb9, 0x656d, 0xa744, 0x0, 0x0);
        gbc.writeMem(0x8e65, { 0x7e });
        gbc.writeMem(0xa744, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x948d, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8e65));
        EXPECT(0x3e, gbc.readMem(0xa744));
        // 7E 02BC
        gbc.setState(0x646, 0x2d56, 0xb7d0, 0x4f78, 0x984b, 0x564b, 0x0, 0x1);
        gbc.writeMem(0x646, { 0x7e });
        gbc.writeMem(0x564b, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x2d56, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02BD
        gbc.setState(0xbbd1, 0xef88, 0x46f0, 0x83bc, 0xa628, 0x8f37, 0x1, 0x0);
        gbc.writeMem(0x8f37, { 0x1d });
        gbc.writeMem(0xbbd1, { 0x7e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xef88, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8f37));
        EXPECT(0x7e, gbc.readMem(0xbbd1));
        // 7E 02BE
        gbc.setState(0xad7, 0x2816, 0x5c0, 0x3995, 0x5964, 0x240b, 0x0, 0x0);
        gbc.writeMem(0xad7, { 0x7e });
        gbc.writeMem(0x240b, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0xad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02BF
        gbc.setState(0x6608, 0x6328, 0x7890, 0xcd1a, 0x7cf0, 0x3924, 0x0, 0x0);
        gbc.writeMem(0x3924, { 0x76 });
        gbc.writeMem(0x6608, { 0x7e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x6328, gbc.sp());
        EXPECT(0x6609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02C1
        gbc.setState(0x5695, 0xca7f, 0xfc30, 0x3495, 0xc71c, 0x7cc5, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0x7e });
        gbc.writeMem(0x7cc5, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xca7f, gbc.sp());
        EXPECT(0x5696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02C2
        gbc.setState(0x9fbb, 0x49d, 0x8350, 0xae8d, 0xf9b6, 0xa2af, 0x1, 0x1);
        gbc.writeMem(0x9fbb, { 0x7e });
        gbc.writeMem(0xa2af, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x49d, gbc.sp());
        EXPECT(0x9fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9fbb));
        EXPECT(0x53, gbc.readMem(0xa2af));
        // 7E 02C3
        gbc.setState(0x34a9, 0x60c2, 0x45e0, 0xfeab, 0xaaf3, 0x5d84, 0x1, 0x1);
        gbc.writeMem(0x34a9, { 0x7e });
        gbc.writeMem(0x5d84, { 0x10 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x60c2, gbc.sp());
        EXPECT(0x34aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02C4
        gbc.setState(0x9a20, 0xfd3b, 0x4fb0, 0x632, 0xcea9, 0x5a03, 0x0, 0x1);
        gbc.writeMem(0x5a03, { 0xa4 });
        gbc.writeMem(0x9a20, { 0x7e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfd3b, gbc.sp());
        EXPECT(0x9a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9a20));
        // 7E 02C5
        gbc.setState(0x556c, 0xfaa2, 0x4610, 0xe54c, 0xc22f, 0xe373, 0x0, 0x1);
        gbc.writeMem(0x556c, { 0x7e });
        gbc.writeMem(0xe373, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfaa2, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xe373));
        // 7E 02C6
        gbc.setState(0x2ec5, 0x2ed6, 0xe720, 0x9ec6, 0x1882, 0x8922, 0x0, 0x1);
        gbc.writeMem(0x2ec5, { 0x7e });
        gbc.writeMem(0x8922, { 0x17 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x2ed6, gbc.sp());
        EXPECT(0x2ec6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x8922));
        // 7E 02C7
        gbc.setState(0x1537, 0xd96d, 0xf6d0, 0xc8bc, 0x98bc, 0xd66e, 0x0, 0x0);
        gbc.writeMem(0x1537, { 0x7e });
        gbc.writeMem(0xd66e, { 0x34 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xd96d, gbc.sp());
        EXPECT(0x1538, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xd66e));
        // 7E 02C8
        gbc.setState(0x8845, 0xfba8, 0x9f90, 0xa8ba, 0x3fb1, 0xf3df, 0x0, 0x0);
        gbc.writeMem(0x8845, { 0x7e });
        gbc.writeMem(0xf3df, { 0xf8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfba8, gbc.sp());
        EXPECT(0x8846, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8845));
        EXPECT(0xf8, gbc.readMem(0xf3df));
        // 7E 02C9
        gbc.setState(0xb78d, 0x67bb, 0x4710, 0x8519, 0x9fbc, 0x273c, 0x0, 0x1);
        gbc.writeMem(0x273c, { 0x37 });
        gbc.writeMem(0xb78d, { 0x7e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x67bb, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb78d));
        // 7E 02CA
        gbc.setState(0xc2a3, 0xcd82, 0x5e00, 0x33e4, 0x80d4, 0x72f8, 0x1, 0x0);
        gbc.writeMem(0x72f8, { 0xd0 });
        gbc.writeMem(0xc2a3, { 0x7e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xcd82, gbc.sp());
        EXPECT(0xc2a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc2a3));
        // 7E 02CB
        gbc.setState(0x751d, 0xbcc0, 0x37b0, 0x8a96, 0x901f, 0x44d4, 0x1, 0x0);
        gbc.writeMem(0x44d4, { 0xe8 });
        gbc.writeMem(0x751d, { 0x7e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbcc0, gbc.sp());
        EXPECT(0x751e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02CC
        gbc.setState(0x4d22, 0xe72e, 0x8320, 0xf8bc, 0xfdbc, 0x70ed, 0x1, 0x0);
        gbc.writeMem(0x4d22, { 0x7e });
        gbc.writeMem(0x70ed, { 0x3e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe72e, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02CD
        gbc.setState(0x88a8, 0xd6c9, 0x9050, 0x8b1, 0x8470, 0x2dbe, 0x0, 0x1);
        gbc.writeMem(0x2dbe, { 0x67 });
        gbc.writeMem(0x88a8, { 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd6c9, gbc.sp());
        EXPECT(0x88a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x88a8));
        // 7E 02CE
        gbc.setState(0x98aa, 0x9d23, 0xf1e0, 0xb8af, 0xabf, 0xad9f, 0x1, 0x1);
        gbc.writeMem(0x98aa, { 0x7e });
        gbc.writeMem(0xad9f, { 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9d23, gbc.sp());
        EXPECT(0x98ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x98aa));
        EXPECT(0x6a, gbc.readMem(0xad9f));
        // 7E 02CF
        gbc.setState(0x613, 0xb041, 0xfb90, 0x6098, 0x9bbd, 0xb961, 0x1, 0x1);
        gbc.writeMem(0x613, { 0x7e });
        gbc.writeMem(0xb961, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xb041, gbc.sp());
        EXPECT(0x614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb961));
        // 7E 02D0
        gbc.setState(0x11f0, 0xec2d, 0xee00, 0x36cd, 0x7cd3, 0x85a8, 0x0, 0x1);
        gbc.writeMem(0x11f0, { 0x7e });
        gbc.writeMem(0x85a8, { 0x5d });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xec2d, gbc.sp());
        EXPECT(0x11f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x85a8));
        // 7E 02D1
        gbc.setState(0x398a, 0x79ff, 0xe220, 0xa90, 0x66b, 0xba2f, 0x1, 0x1);
        gbc.writeMem(0x398a, { 0x7e });
        gbc.writeMem(0xba2f, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x79ff, gbc.sp());
        EXPECT(0x398b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0xba2f));
        // 7E 02D2
        gbc.setState(0xeec4, 0xbe91, 0x9e50, 0xc108, 0xe7f3, 0x9da4, 0x0, 0x0);
        gbc.writeMem(0x9da4, { 0x3b });
        gbc.writeMem(0xeec4, { 0x7e });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xbe91, gbc.sp());
        EXPECT(0xeec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x9da4));
        EXPECT(0x7e, gbc.readMem(0xeec4));
        // 7E 02D3
        gbc.setState(0x6ddf, 0x6f9b, 0x6600, 0x9226, 0x5ef4, 0x4a87, 0x1, 0x0);
        gbc.writeMem(0x4a87, { 0x91 });
        gbc.writeMem(0x6ddf, { 0x7e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6f9b, gbc.sp());
        EXPECT(0x6de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02D4
        gbc.setState(0x7aef, 0x2b94, 0xe940, 0x3e80, 0x6b31, 0xe338, 0x0, 0x0);
        gbc.writeMem(0x7aef, { 0x7e });
        gbc.writeMem(0xe338, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2b94, gbc.sp());
        EXPECT(0x7af0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe338));
        // 7E 02D5
        gbc.setState(0x6502, 0x7e23, 0xdf20, 0x66a3, 0x8336, 0x5a09, 0x0, 0x1);
        gbc.writeMem(0x5a09, { 0xef });
        gbc.writeMem(0x6502, { 0x7e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7e23, gbc.sp());
        EXPECT(0x6503, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02D6
        gbc.setState(0x4c9f, 0x9e3a, 0x7bb0, 0xa45e, 0x41ae, 0xa99b, 0x1, 0x1);
        gbc.writeMem(0x4c9f, { 0x7e });
        gbc.writeMem(0xa99b, { 0xec });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9e3a, gbc.sp());
        EXPECT(0x4ca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa99b));
        // 7E 02D7
        gbc.setState(0x16eb, 0x45ed, 0x17c0, 0xc614, 0xdece, 0x6068, 0x1, 0x1);
        gbc.writeMem(0x16eb, { 0x7e });
        gbc.writeMem(0x6068, { 0x47 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x45ed, gbc.sp());
        EXPECT(0x16ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02D8
        gbc.setState(0x80d4, 0xb8d5, 0xe3b0, 0xd8f3, 0x8cbd, 0x943, 0x0, 0x0);
        gbc.writeMem(0x943, { 0x5e });
        gbc.writeMem(0x80d4, { 0x7e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb8d5, gbc.sp());
        EXPECT(0x80d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x80d4));
        // 7E 02D9
        gbc.setState(0xd767, 0x8199, 0x1210, 0xdb02, 0xb4a1, 0x1fcb, 0x1, 0x1);
        gbc.writeMem(0x1fcb, { 0x92 });
        gbc.writeMem(0xd767, { 0x7e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8199, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd767));
        // 7E 02DA
        gbc.setState(0x972b, 0x1fa3, 0xf270, 0x5687, 0x8b09, 0x3dcb, 0x1, 0x1);
        gbc.writeMem(0x3dcb, { 0xc5 });
        gbc.writeMem(0x972b, { 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1fa3, gbc.sp());
        EXPECT(0x972c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x972b));
        // 7E 02DB
        gbc.setState(0xc487, 0xb7ea, 0xa120, 0x25e5, 0x6934, 0xcf42, 0x0, 0x0);
        gbc.writeMem(0xc487, { 0x7e });
        gbc.writeMem(0xcf42, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb7ea, gbc.sp());
        EXPECT(0xc488, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc487));
        EXPECT(0x6f, gbc.readMem(0xcf42));
        // 7E 02DC
        gbc.setState(0xe566, 0x85b5, 0x2de0, 0x457d, 0x28c7, 0x7e76, 0x1, 0x0);
        gbc.writeMem(0x7e76, { 0x2a });
        gbc.writeMem(0xe566, { 0x7e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x85b5, gbc.sp());
        EXPECT(0xe567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe566));
        // 7E 02DD
        gbc.setState(0x1d80, 0x2f90, 0xdd80, 0x79b3, 0x9c12, 0x7c46, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x7e });
        gbc.writeMem(0x7c46, { 0x1f });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2f90, gbc.sp());
        EXPECT(0x1d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02DE
        gbc.setState(0xddce, 0x83a7, 0x3860, 0x8f87, 0xdee5, 0xd77, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0x72 });
        gbc.writeMem(0xddce, { 0x7e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x83a7, gbc.sp());
        EXPECT(0xddcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xddce));
        // 7E 02DF
        gbc.setState(0xeee6, 0x5137, 0x500, 0x8855, 0xb7e2, 0x7dec, 0x1, 0x0);
        gbc.writeMem(0x7dec, { 0xa1 });
        gbc.writeMem(0xeee6, { 0x7e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5137, gbc.sp());
        EXPECT(0xeee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xeee6));
        // 7E 02E0
        gbc.setState(0x48e3, 0xa7c9, 0x8b70, 0x8975, 0xb277, 0xd6f5, 0x1, 0x0);
        gbc.writeMem(0x48e3, { 0x7e });
        gbc.writeMem(0xd6f5, { 0x6a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa7c9, gbc.sp());
        EXPECT(0x48e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xd6f5));
        // 7E 02E1
        gbc.setState(0x52b4, 0xfce9, 0x1f50, 0x29ae, 0xdb80, 0xe29f, 0x1, 0x0);
        gbc.writeMem(0x52b4, { 0x7e });
        gbc.writeMem(0xe29f, { 0xac });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfce9, gbc.sp());
        EXPECT(0x52b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xe29f));
        // 7E 02E2
        gbc.setState(0xcfc0, 0x7b1, 0x8390, 0x4337, 0xe3f9, 0xd7d1, 0x0, 0x0);
        gbc.writeMem(0xcfc0, { 0x7e });
        gbc.writeMem(0xd7d1, { 0xed });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b1, gbc.sp());
        EXPECT(0xcfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcfc0));
        EXPECT(0xed, gbc.readMem(0xd7d1));
        // 7E 02E3
        gbc.setState(0xed5f, 0x9491, 0x99a0, 0x4250, 0xbcbe, 0xecb5, 0x0, 0x0);
        gbc.writeMem(0xecb5, { 0xcd });
        gbc.writeMem(0xed5f, { 0x7e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9491, gbc.sp());
        EXPECT(0xed60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xecb5));
        EXPECT(0x7e, gbc.readMem(0xed5f));
        // 7E 02E4
        gbc.setState(0x8517, 0xf060, 0x7c30, 0xad16, 0x116b, 0x18c1, 0x1, 0x0);
        gbc.writeMem(0x18c1, { 0x1e });
        gbc.writeMem(0x8517, { 0x7e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf060, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8517));
        // 7E 02E5
        gbc.setState(0xadce, 0x3a4b, 0x97a0, 0x27a3, 0xa4da, 0x48e6, 0x0, 0x0);
        gbc.writeMem(0x48e6, { 0x13 });
        gbc.writeMem(0xadce, { 0x7e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3a4b, gbc.sp());
        EXPECT(0xadcf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xadce));
        // 7E 02E6
        gbc.setState(0x1260, 0xc7f5, 0x3910, 0x9d93, 0x8d99, 0xd6b8, 0x0, 0x0);
        gbc.writeMem(0x1260, { 0x7e });
        gbc.writeMem(0xd6b8, { 0x29 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc7f5, gbc.sp());
        EXPECT(0x1261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xd6b8));
        // 7E 02E7
        gbc.setState(0x89e3, 0xef2, 0x9840, 0x98d0, 0xa4f3, 0x440a, 0x1, 0x0);
        gbc.writeMem(0x440a, { 0xd0 });
        gbc.writeMem(0x89e3, { 0x7e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xef2, gbc.sp());
        EXPECT(0x89e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x89e3));
        // 7E 02E8
        gbc.setState(0xdf43, 0x81da, 0xf920, 0xb025, 0xcde, 0x7d89, 0x0, 0x1);
        gbc.writeMem(0x7d89, { 0x1c });
        gbc.writeMem(0xdf43, { 0x7e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x81da, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdf43));
        // 7E 02E9
        gbc.setState(0x76fc, 0x5958, 0xbf00, 0x2380, 0xfd18, 0xe7ac, 0x1, 0x1);
        gbc.writeMem(0x76fc, { 0x7e });
        gbc.writeMem(0xe7ac, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0x76fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe7ac));
        // 7E 02EA
        gbc.setState(0xeff7, 0x3c57, 0xb10, 0x4ac, 0x935e, 0x7446, 0x0, 0x0);
        gbc.writeMem(0x7446, { 0xa6 });
        gbc.writeMem(0xeff7, { 0x7e });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x3c57, gbc.sp());
        EXPECT(0xeff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xeff7));
        // 7E 02EB
        gbc.setState(0x3b6b, 0xb14d, 0xc3b0, 0x8bf1, 0x45e8, 0x69e3, 0x1, 0x0);
        gbc.writeMem(0x3b6b, { 0x7e });
        gbc.writeMem(0x69e3, { 0xdd });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb14d, gbc.sp());
        EXPECT(0x3b6c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02ED
        gbc.setState(0x842b, 0x89cd, 0x5a30, 0x92d6, 0x48f3, 0x42be, 0x1, 0x0);
        gbc.writeMem(0x42be, { 0x26 });
        gbc.writeMem(0x842b, { 0x7e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x89cd, gbc.sp());
        EXPECT(0x842c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x842b));
        // 7E 02EE
        gbc.setState(0x3ac, 0x127b, 0xeac0, 0xdceb, 0xfc4, 0xb6f6, 0x1, 0x0);
        gbc.writeMem(0x3ac, { 0x7e });
        gbc.writeMem(0xb6f6, { 0x68 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0x3ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0xb6f6));
        // 7E 02EF
        gbc.setState(0xae72, 0x33cd, 0x5a90, 0x1e6b, 0xc50d, 0x1e54, 0x1, 0x0);
        gbc.writeMem(0x1e54, { 0x35 });
        gbc.writeMem(0xae72, { 0x7e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x33cd, gbc.sp());
        EXPECT(0xae73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xae72));
        // 7E 02F0
        gbc.setState(0xed78, 0x940d, 0xaa40, 0x4732, 0x4a36, 0x35a8, 0x1, 0x1);
        gbc.writeMem(0x35a8, { 0xae });
        gbc.writeMem(0xed78, { 0x7e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x940d, gbc.sp());
        EXPECT(0xed79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xed78));
        // 7E 02F1
        gbc.setState(0x5cc5, 0xa4a7, 0x3b60, 0x8258, 0x1b52, 0xe7f9, 0x1, 0x1);
        gbc.writeMem(0x5cc5, { 0x7e });
        gbc.writeMem(0xe7f9, { 0xa7 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0x5cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe7f9));
        // 7E 02F2
        gbc.setState(0x45a9, 0xca8d, 0x7330, 0xfaab, 0x2177, 0xe513, 0x1, 0x1);
        gbc.writeMem(0x45a9, { 0x7e });
        gbc.writeMem(0xe513, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xca8d, gbc.sp());
        EXPECT(0x45aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe513));
        // 7E 02F3
        gbc.setState(0xb7ff, 0x214e, 0x8690, 0xfef5, 0xc118, 0xcb28, 0x1, 0x1);
        gbc.writeMem(0xb7ff, { 0x7e });
        gbc.writeMem(0xcb28, { 0x97 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x214e, gbc.sp());
        EXPECT(0xb800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb7ff));
        EXPECT(0x97, gbc.readMem(0xcb28));
        // 7E 02F4
        gbc.setState(0x5104, 0xd294, 0x4b70, 0xa519, 0x970a, 0xb2fa, 0x1, 0x1);
        gbc.writeMem(0x5104, { 0x7e });
        gbc.writeMem(0xb2fa, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd294, gbc.sp());
        EXPECT(0x5105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xb2fa));
        // 7E 02F5
        gbc.setState(0xa558, 0xb9dd, 0xe380, 0x861c, 0xbcc4, 0x723e, 0x0, 0x1);
        gbc.writeMem(0x723e, { 0x26 });
        gbc.writeMem(0xa558, { 0x7e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb9dd, gbc.sp());
        EXPECT(0xa559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa558));
        // 7E 02F6
        gbc.setState(0x11b3, 0xcf5f, 0x1a30, 0x6c62, 0x8a44, 0x739e, 0x0, 0x1);
        gbc.writeMem(0x11b3, { 0x7e });
        gbc.writeMem(0x739e, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xcf5f, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02F7
        gbc.setState(0xc5e7, 0x599d, 0x7010, 0xc08f, 0x94f6, 0x1278, 0x1, 0x0);
        gbc.writeMem(0x1278, { 0xfe });
        gbc.writeMem(0xc5e7, { 0x7e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x599d, gbc.sp());
        EXPECT(0xc5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc5e7));
        // 7E 02F8
        gbc.setState(0x4772, 0x8090, 0x8c50, 0x1095, 0x505e, 0xa399, 0x1, 0x0);
        gbc.writeMem(0x4772, { 0x7e });
        gbc.writeMem(0xa399, { 0x90 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8090, gbc.sp());
        EXPECT(0x4773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xa399));
        // 7E 02F9
        gbc.setState(0x5fe2, 0x7e41, 0xa820, 0xd570, 0x3ce4, 0xd63, 0x0, 0x1);
        gbc.writeMem(0xd63, { 0xe7 });
        gbc.writeMem(0x5fe2, { 0x7e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7e41, gbc.sp());
        EXPECT(0x5fe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 02FA
        gbc.setState(0x1a07, 0x2d39, 0xc450, 0x5c05, 0xcf50, 0xb0aa, 0x1, 0x1);
        gbc.writeMem(0x1a07, { 0x7e });
        gbc.writeMem(0xb0aa, { 0x51 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2d39, gbc.sp());
        EXPECT(0x1a08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xb0aa));
        // 7E 02FB
        gbc.setState(0xe213, 0xa45c, 0x5e30, 0x9497, 0x4b1b, 0xbf58, 0x0, 0x0);
        gbc.writeMem(0xbf58, { 0xc3 });
        gbc.writeMem(0xe213, { 0x7e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0xe214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xbf58));
        EXPECT(0x7e, gbc.readMem(0xe213));
        // 7E 02FC
        gbc.setState(0x1ade, 0x7b1b, 0xa110, 0xf2f0, 0xda22, 0x10aa, 0x0, 0x0);
        gbc.writeMem(0x10aa, { 0x96 });
        gbc.writeMem(0x1ade, { 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7b1b, gbc.sp());
        EXPECT(0x1adf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 02FD
        gbc.setState(0xe14a, 0x3691, 0xe840, 0xc2a9, 0x208a, 0x2594, 0x1, 0x1);
        gbc.writeMem(0x2594, { 0x3 });
        gbc.writeMem(0xe14a, { 0x7e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3691, gbc.sp());
        EXPECT(0xe14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe14a));
        // 7E 02FE
        gbc.setState(0x9156, 0x3f2f, 0x6890, 0x5c4c, 0x53bb, 0x51e2, 0x1, 0x0);
        gbc.writeMem(0x51e2, { 0xb8 });
        gbc.writeMem(0x9156, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x3f2f, gbc.sp());
        EXPECT(0x9157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9156));
        // 7E 02FF
        gbc.setState(0xc481, 0x4fc3, 0xcae0, 0x4e83, 0x729f, 0xd2cd, 0x1, 0x0);
        gbc.writeMem(0xc481, { 0x7e });
        gbc.writeMem(0xd2cd, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x4fc3, gbc.sp());
        EXPECT(0xc482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc481));
        EXPECT(0xde, gbc.readMem(0xd2cd));
        // 7E 0300
        gbc.setState(0x446d, 0x333d, 0xb220, 0x782a, 0xa5, 0xa9b, 0x1, 0x0);
        gbc.writeMem(0xa9b, { 0xaf });
        gbc.writeMem(0x446d, { 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x333d, gbc.sp());
        EXPECT(0x446e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0301
        gbc.setState(0x1080, 0x8097, 0xef10, 0xae08, 0x25b7, 0xe513, 0x0, 0x1);
        gbc.writeMem(0x1080, { 0x7e });
        gbc.writeMem(0xe513, { 0xbc });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xe513));
        // 7E 0302
        gbc.setState(0x68e7, 0x75de, 0x5110, 0x1d5d, 0x31e, 0x5f54, 0x1, 0x0);
        gbc.writeMem(0x5f54, { 0x83 });
        gbc.writeMem(0x68e7, { 0x7e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x75de, gbc.sp());
        EXPECT(0x68e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0303
        gbc.setState(0xc004, 0x504c, 0x1d60, 0xc528, 0xac0, 0xca38, 0x1, 0x0);
        gbc.writeMem(0xc004, { 0x7e });
        gbc.writeMem(0xca38, { 0xce });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0xc005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc004));
        EXPECT(0xce, gbc.readMem(0xca38));
        // 7E 0304
        gbc.setState(0x392c, 0x6df2, 0x7f70, 0x200b, 0x842a, 0x5d60, 0x0, 0x1);
        gbc.writeMem(0x392c, { 0x7e });
        gbc.writeMem(0x5d60, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6df2, gbc.sp());
        EXPECT(0x392d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0305
        gbc.setState(0x4f17, 0xa438, 0x24a0, 0xaed3, 0x85cb, 0x45a3, 0x0, 0x1);
        gbc.writeMem(0x45a3, { 0xc });
        gbc.writeMem(0x4f17, { 0x7e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa438, gbc.sp());
        EXPECT(0x4f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0306
        gbc.setState(0x2bdb, 0x1074, 0x76d0, 0x8e09, 0xb9d9, 0xbd63, 0x0, 0x1);
        gbc.writeMem(0x2bdb, { 0x7e });
        gbc.writeMem(0xbd63, { 0x91 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x1074, gbc.sp());
        EXPECT(0x2bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xbd63));
        // 7E 0307
        gbc.setState(0xe7f2, 0x6a8a, 0xedf0, 0x1ada, 0x2ee5, 0x7b76, 0x0, 0x0);
        gbc.writeMem(0x7b76, { 0x97 });
        gbc.writeMem(0xe7f2, { 0x7e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x6a8a, gbc.sp());
        EXPECT(0xe7f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe7f2));
        // 7E 0308
        gbc.setState(0xd634, 0xff32, 0xf350, 0x9888, 0x6366, 0x17fd, 0x1, 0x1);
        gbc.writeMem(0x17fd, { 0x9f });
        gbc.writeMem(0xd634, { 0x7e });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xff32, gbc.sp());
        EXPECT(0xd635, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd634));
        // 7E 0309
        gbc.setState(0xee90, 0x6c3c, 0xc600, 0x367e, 0x32b0, 0xe5bd, 0x1, 0x1);
        gbc.writeMem(0xe5bd, { 0xe6 });
        gbc.writeMem(0xee90, { 0x7e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6c3c, gbc.sp());
        EXPECT(0xee91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xe5bd));
        EXPECT(0x7e, gbc.readMem(0xee90));
        // 7E 030A
        gbc.setState(0xa0d7, 0x479e, 0xb040, 0x7fcb, 0x1881, 0xde4e, 0x1, 0x0);
        gbc.writeMem(0xa0d7, { 0x7e });
        gbc.writeMem(0xde4e, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x479e, gbc.sp());
        EXPECT(0xa0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa0d7));
        EXPECT(0x49, gbc.readMem(0xde4e));
        // 7E 030B
        gbc.setState(0xa999, 0x5765, 0x9110, 0x2127, 0x6573, 0xa15, 0x0, 0x1);
        gbc.writeMem(0xa15, { 0xf5 });
        gbc.writeMem(0xa999, { 0x7e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5765, gbc.sp());
        EXPECT(0xa99a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa999));
        // 7E 030C
        gbc.setState(0xc62b, 0xb072, 0x2860, 0x844f, 0x8e15, 0x99c5, 0x0, 0x0);
        gbc.writeMem(0x99c5, { 0x68 });
        gbc.writeMem(0xc62b, { 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xb072, gbc.sp());
        EXPECT(0xc62c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x68, gbc.readMem(0x99c5));
        EXPECT(0x7e, gbc.readMem(0xc62b));
        // 7E 030D
        gbc.setState(0xadff, 0x1450, 0xdc0, 0xc4d4, 0xfbc4, 0x1f23, 0x1, 0x0);
        gbc.writeMem(0x1f23, { 0x9c });
        gbc.writeMem(0xadff, { 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1450, gbc.sp());
        EXPECT(0xae00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xadff));
        // 7E 030E
        gbc.setState(0x6d25, 0x580b, 0x5710, 0xa65c, 0xb86e, 0x5a2d, 0x0, 0x1);
        gbc.writeMem(0x5a2d, { 0x68 });
        gbc.writeMem(0x6d25, { 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x580b, gbc.sp());
        EXPECT(0x6d26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 030F
        gbc.setState(0xddcb, 0x5e42, 0x5d10, 0x1f98, 0xcaa8, 0x744b, 0x0, 0x1);
        gbc.writeMem(0x744b, { 0x77 });
        gbc.writeMem(0xddcb, { 0x7e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x5e42, gbc.sp());
        EXPECT(0xddcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xddcb));
        // 7E 0310
        gbc.setState(0xa0f2, 0x3c2, 0xdaa0, 0x3226, 0xa1ea, 0x4f09, 0x1, 0x0);
        gbc.writeMem(0x4f09, { 0x34 });
        gbc.writeMem(0xa0f2, { 0x7e });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3c2, gbc.sp());
        EXPECT(0xa0f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa0f2));
        // 7E 0311
        gbc.setState(0xb4c9, 0x7b21, 0x3150, 0x9bb8, 0x8581, 0xa9e7, 0x1, 0x0);
        gbc.writeMem(0xa9e7, { 0x33 });
        gbc.writeMem(0xb4c9, { 0x7e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x7b21, gbc.sp());
        EXPECT(0xb4ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa9e7));
        EXPECT(0x7e, gbc.readMem(0xb4c9));
        // 7E 0312
        gbc.setState(0x1e21, 0x3514, 0xa3b0, 0xbe35, 0x5999, 0x18e6, 0x1, 0x0);
        gbc.writeMem(0x18e6, { 0xc5 });
        gbc.writeMem(0x1e21, { 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0x1e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0313
        gbc.setState(0x8d28, 0xd64f, 0x500, 0x8bef, 0xb31f, 0x3b8a, 0x0, 0x0);
        gbc.writeMem(0x3b8a, { 0x28 });
        gbc.writeMem(0x8d28, { 0x7e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd64f, gbc.sp());
        EXPECT(0x8d29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8d28));
        // 7E 0314
        gbc.setState(0xb540, 0x93bc, 0x3420, 0xa90, 0x85fa, 0x7c90, 0x1, 0x1);
        gbc.writeMem(0x7c90, { 0xe9 });
        gbc.writeMem(0xb540, { 0x7e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x93bc, gbc.sp());
        EXPECT(0xb541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb540));
        // 7E 0315
        gbc.setState(0xe76f, 0x9fe5, 0x6ed0, 0x5114, 0xc06e, 0x371a, 0x0, 0x0);
        gbc.writeMem(0x371a, { 0x78 });
        gbc.writeMem(0xe76f, { 0x7e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0xe770, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe76f));
        // 7E 0316
        gbc.setState(0x8523, 0x6b4e, 0x5780, 0x7ed7, 0x51ad, 0x8b18, 0x1, 0x1);
        gbc.writeMem(0x8523, { 0x7e });
        gbc.writeMem(0x8b18, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x6b4e, gbc.sp());
        EXPECT(0x8524, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8523));
        EXPECT(0xbb, gbc.readMem(0x8b18));
        // 7E 0317
        gbc.setState(0xcb57, 0x750f, 0x2a70, 0x7a1f, 0x3960, 0x8f60, 0x0, 0x1);
        gbc.writeMem(0x8f60, { 0x67 });
        gbc.writeMem(0xcb57, { 0x7e });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x750f, gbc.sp());
        EXPECT(0xcb58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x8f60));
        EXPECT(0x7e, gbc.readMem(0xcb57));
        // 7E 0318
        gbc.setState(0xa812, 0x2651, 0x840, 0x7645, 0x3f6d, 0x4a98, 0x1, 0x0);
        gbc.writeMem(0x4a98, { 0x22 });
        gbc.writeMem(0xa812, { 0x7e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2651, gbc.sp());
        EXPECT(0xa813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa812));
        // 7E 0319
        gbc.setState(0x3ad4, 0x4306, 0xe360, 0x36ad, 0x332f, 0x5512, 0x1, 0x1);
        gbc.writeMem(0x3ad4, { 0x7e });
        gbc.writeMem(0x5512, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0x3ad5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 031A
        gbc.setState(0xdb4e, 0xaa22, 0xe530, 0x358b, 0x1d0f, 0x39b4, 0x0, 0x1);
        gbc.writeMem(0x39b4, { 0x79 });
        gbc.writeMem(0xdb4e, { 0x7e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaa22, gbc.sp());
        EXPECT(0xdb4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdb4e));
        // 7E 031D
        gbc.setState(0x347d, 0x4734, 0x5590, 0x208a, 0xc134, 0x2abe, 0x0, 0x0);
        gbc.writeMem(0x2abe, { 0xe5 });
        gbc.writeMem(0x347d, { 0x7e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4734, gbc.sp());
        EXPECT(0x347e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 031E
        gbc.setState(0x4209, 0x5fb4, 0x65f0, 0xa963, 0x3a96, 0x79f5, 0x1, 0x0);
        gbc.writeMem(0x4209, { 0x7e });
        gbc.writeMem(0x79f5, { 0x6f });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5fb4, gbc.sp());
        EXPECT(0x420a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 031F
        gbc.setState(0x1608, 0x26b7, 0x9540, 0x82db, 0xf640, 0x4cd3, 0x1, 0x0);
        gbc.writeMem(0x1608, { 0x7e });
        gbc.writeMem(0x4cd3, { 0xd6 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0x1609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0321
        gbc.setState(0x3fbc, 0xc085, 0x8b0, 0x292d, 0x8cde, 0x5c92, 0x0, 0x1);
        gbc.writeMem(0x3fbc, { 0x7e });
        gbc.writeMem(0x5c92, { 0xdb });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc085, gbc.sp());
        EXPECT(0x3fbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0322
        gbc.setState(0x4272, 0xc646, 0xea80, 0x1a62, 0x7f71, 0xa2af, 0x0, 0x1);
        gbc.writeMem(0x4272, { 0x7e });
        gbc.writeMem(0xa2af, { 0x53 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc646, gbc.sp());
        EXPECT(0x4273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xa2af));
        // 7E 0323
        gbc.setState(0x683e, 0x4f54, 0x3b50, 0xa278, 0xf714, 0xcfc7, 0x0, 0x1);
        gbc.writeMem(0x683e, { 0x7e });
        gbc.writeMem(0xcfc7, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0x683f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xcfc7));
        // 7E 0324
        gbc.setState(0x5318, 0xa9d1, 0x3300, 0x476f, 0x74b4, 0xa529, 0x1, 0x1);
        gbc.writeMem(0x5318, { 0x7e });
        gbc.writeMem(0xa529, { 0x5c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa9d1, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0xa529));
        // 7E 0325
        gbc.setState(0xdae4, 0xc3df, 0x5810, 0x7d6, 0x16e2, 0xbba9, 0x1, 0x1);
        gbc.writeMem(0xbba9, { 0x25 });
        gbc.writeMem(0xdae4, { 0x7e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc3df, gbc.sp());
        EXPECT(0xdae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbba9));
        EXPECT(0x7e, gbc.readMem(0xdae4));
        // 7E 0326
        gbc.setState(0x8dac, 0xc63f, 0xa0a0, 0x8e78, 0x50f6, 0xd434, 0x1, 0x0);
        gbc.writeMem(0x8dac, { 0x7e });
        gbc.writeMem(0xd434, { 0x4a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc63f, gbc.sp());
        EXPECT(0x8dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8dac));
        EXPECT(0x4a, gbc.readMem(0xd434));
        // 7E 0327
        gbc.setState(0x9cee, 0x3011, 0x17a0, 0xfcf, 0x313b, 0x4f6, 0x1, 0x0);
        gbc.writeMem(0x4f6, { 0x31 });
        gbc.writeMem(0x9cee, { 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3011, gbc.sp());
        EXPECT(0x9cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9cee));
        // 7E 0328
        gbc.setState(0x71c5, 0x978c, 0x58c0, 0xb152, 0xcfdc, 0xfc3d, 0x1, 0x0);
        gbc.writeMem(0x71c5, { 0x7e });
        gbc.writeMem(0xfc3d, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x978c, gbc.sp());
        EXPECT(0x71c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfc3d));
        // 7E 0329
        gbc.setState(0xc86b, 0xa8a7, 0x98c0, 0xa8c, 0x347e, 0x4419, 0x0, 0x1);
        gbc.writeMem(0x4419, { 0xc6 });
        gbc.writeMem(0xc86b, { 0x7e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0xc86c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc86b));
        // 7E 032A
        gbc.setState(0x2499, 0x3354, 0xe9d0, 0x7365, 0x4653, 0x4593, 0x0, 0x1);
        gbc.writeMem(0x2499, { 0x7e });
        gbc.writeMem(0x4593, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3354, gbc.sp());
        EXPECT(0x249a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 032B
        gbc.setState(0x69fc, 0xe2c5, 0x9210, 0xd34a, 0x545a, 0xce83, 0x1, 0x1);
        gbc.writeMem(0x69fc, { 0x7e });
        gbc.writeMem(0xce83, { 0x83 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe2c5, gbc.sp());
        EXPECT(0x69fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xce83));
        // 7E 032C
        gbc.setState(0xd493, 0x8648, 0xeb50, 0x3955, 0x6556, 0x33e5, 0x0, 0x0);
        gbc.writeMem(0x33e5, { 0xa5 });
        gbc.writeMem(0xd493, { 0x7e });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8648, gbc.sp());
        EXPECT(0xd494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd493));
        // 7E 032E
        gbc.setState(0x45a8, 0x189, 0x87f0, 0x4d45, 0x625d, 0xc45f, 0x1, 0x1);
        gbc.writeMem(0x45a8, { 0x7e });
        gbc.writeMem(0xc45f, { 0x82 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x189, gbc.sp());
        EXPECT(0x45a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xc45f));
        // 7E 032F
        gbc.setState(0xd8e7, 0xd9de, 0xf780, 0x67d3, 0xedf4, 0xbad4, 0x0, 0x1);
        gbc.writeMem(0xbad4, { 0x39 });
        gbc.writeMem(0xd8e7, { 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0xd8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbad4));
        EXPECT(0x7e, gbc.readMem(0xd8e7));
        // 7E 0330
        gbc.setState(0xace4, 0xe834, 0x2a00, 0x73fd, 0x37a8, 0xb626, 0x1, 0x0);
        gbc.writeMem(0xace4, { 0x7e });
        gbc.writeMem(0xb626, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe834, gbc.sp());
        EXPECT(0xace5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xace4));
        EXPECT(0x49, gbc.readMem(0xb626));
        // 7E 0332
        gbc.setState(0xc1fb, 0x277f, 0x8770, 0xe4cf, 0xa8e, 0xb1d0, 0x1, 0x0);
        gbc.writeMem(0xb1d0, { 0xb1 });
        gbc.writeMem(0xc1fb, { 0x7e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x277f, gbc.sp());
        EXPECT(0xc1fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0xb1d0));
        EXPECT(0x7e, gbc.readMem(0xc1fb));
        // 7E 0333
        gbc.setState(0xd132, 0x3724, 0xf710, 0x9ec8, 0xa9ef, 0x44d4, 0x0, 0x1);
        gbc.writeMem(0x44d4, { 0xe8 });
        gbc.writeMem(0xd132, { 0x7e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x3724, gbc.sp());
        EXPECT(0xd133, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd132));
        // 7E 0334
        gbc.setState(0xbfc7, 0x253a, 0xc630, 0x89c0, 0x3c2b, 0x2040, 0x0, 0x0);
        gbc.writeMem(0x2040, { 0x9c });
        gbc.writeMem(0xbfc7, { 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x253a, gbc.sp());
        EXPECT(0xbfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbfc7));
        // 7E 0335
        gbc.setState(0xd293, 0x57cf, 0x1e00, 0x5510, 0x700c, 0x50ef, 0x0, 0x1);
        gbc.writeMem(0x50ef, { 0x7d });
        gbc.writeMem(0xd293, { 0x7e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0xd294, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd293));
        // 7E 0336
        gbc.setState(0x502e, 0x8070, 0x7750, 0x7dca, 0xb3ce, 0x7dd, 0x0, 0x1);
        gbc.writeMem(0x7dd, { 0x33 });
        gbc.writeMem(0x502e, { 0x7e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x8070, gbc.sp());
        EXPECT(0x502f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0337
        gbc.setState(0x17e5, 0xbae, 0x4160, 0x2363, 0xdf3, 0x8628, 0x0, 0x1);
        gbc.writeMem(0x17e5, { 0x7e });
        gbc.writeMem(0x8628, { 0xea });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbae, gbc.sp());
        EXPECT(0x17e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8628));
        // 7E 0338
        gbc.setState(0x25cf, 0x1699, 0xeff0, 0x3acb, 0x36ac, 0x8a70, 0x1, 0x0);
        gbc.writeMem(0x25cf, { 0x7e });
        gbc.writeMem(0x8a70, { 0x3b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x25d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0x8a70));
        // 7E 0339
        gbc.setState(0xa39d, 0x6fa1, 0xb150, 0x7d12, 0xa6d3, 0x7c93, 0x1, 0x0);
        gbc.writeMem(0x7c93, { 0x30 });
        gbc.writeMem(0xa39d, { 0x7e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x6fa1, gbc.sp());
        EXPECT(0xa39e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa39d));
        // 7E 033B
        gbc.setState(0xa8d2, 0x44fb, 0xae70, 0xa352, 0x3cd9, 0x4815, 0x1, 0x1);
        gbc.writeMem(0x4815, { 0x9 });
        gbc.writeMem(0xa8d2, { 0x7e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x44fb, gbc.sp());
        EXPECT(0xa8d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa8d2));
        // 7E 033C
        gbc.setState(0x4cee, 0x5af7, 0xfc90, 0xe1dd, 0xd079, 0x4b97, 0x0, 0x0);
        gbc.writeMem(0x4b97, { 0x64 });
        gbc.writeMem(0x4cee, { 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5af7, gbc.sp());
        EXPECT(0x4cef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 033D
        gbc.setState(0xa8db, 0x61e6, 0x3bc0, 0xe0e0, 0x5d86, 0x22d3, 0x1, 0x1);
        gbc.writeMem(0x22d3, { 0x96 });
        gbc.writeMem(0xa8db, { 0x7e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x61e6, gbc.sp());
        EXPECT(0xa8dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa8db));
        // 7E 033E
        gbc.setState(0x852c, 0x326b, 0xe810, 0xa02d, 0xcf81, 0x9b2, 0x0, 0x1);
        gbc.writeMem(0x9b2, { 0x31 });
        gbc.writeMem(0x852c, { 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x326b, gbc.sp());
        EXPECT(0x852d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x852c));
        // 7E 033F
        gbc.setState(0x6ad, 0x800c, 0xf8f0, 0x1850, 0x9226, 0x3172, 0x0, 0x0);
        gbc.writeMem(0x6ad, { 0x7e });
        gbc.writeMem(0x3172, { 0x39 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0x6ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0341
        gbc.setState(0x245a, 0x7e22, 0x4ee0, 0xfc6d, 0x3d56, 0xfcd9, 0x0, 0x1);
        gbc.writeMem(0x245a, { 0x7e });
        gbc.writeMem(0xfcd9, { 0x7f });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x7e22, gbc.sp());
        EXPECT(0x245b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xfcd9));
        // 7E 0342
        gbc.setState(0xc70a, 0x379f, 0xb030, 0x3c02, 0xe4e6, 0x8e6c, 0x1, 0x1);
        gbc.writeMem(0x8e6c, { 0x9e });
        gbc.writeMem(0xc70a, { 0x7e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x379f, gbc.sp());
        EXPECT(0xc70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x8e6c));
        EXPECT(0x7e, gbc.readMem(0xc70a));
        // 7E 0343
        gbc.setState(0xc048, 0xc683, 0x5440, 0x24ec, 0x8d2f, 0xcf5c, 0x0, 0x1);
        gbc.writeMem(0xc048, { 0x7e });
        gbc.writeMem(0xcf5c, { 0xf1 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xc683, gbc.sp());
        EXPECT(0xc049, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc048));
        EXPECT(0xf1, gbc.readMem(0xcf5c));
        // 7E 0344
        gbc.setState(0x3d1a, 0xabc, 0xcd90, 0xf878, 0x4cc7, 0x652b, 0x0, 0x0);
        gbc.writeMem(0x3d1a, { 0x7e });
        gbc.writeMem(0x652b, { 0x5b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xabc, gbc.sp());
        EXPECT(0x3d1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0345
        gbc.setState(0x5079, 0xb76e, 0xb870, 0x2980, 0xb210, 0x16ae, 0x1, 0x0);
        gbc.writeMem(0x16ae, { 0xd2 });
        gbc.writeMem(0x5079, { 0x7e });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xb76e, gbc.sp());
        EXPECT(0x507a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0346
        gbc.setState(0x2b1c, 0x1709, 0xb5d0, 0xd487, 0xe3ac, 0xba90, 0x0, 0x0);
        gbc.writeMem(0x2b1c, { 0x7e });
        gbc.writeMem(0xba90, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1709, gbc.sp());
        EXPECT(0x2b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xba90));
        // 7E 0347
        gbc.setState(0x9a5c, 0xd485, 0x1e30, 0xaaf9, 0x4237, 0x200b, 0x0, 0x0);
        gbc.writeMem(0x200b, { 0xc1 });
        gbc.writeMem(0x9a5c, { 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd485, gbc.sp());
        EXPECT(0x9a5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9a5c));
        // 7E 0348
        gbc.setState(0x92d9, 0xbba9, 0x7660, 0x3fab, 0x2278, 0xdb06, 0x0, 0x0);
        gbc.writeMem(0x92d9, { 0x7e });
        gbc.writeMem(0xdb06, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xbba9, gbc.sp());
        EXPECT(0x92da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x92d9));
        EXPECT(0x89, gbc.readMem(0xdb06));
        // 7E 0349
        gbc.setState(0x4ef5, 0x88b5, 0x2200, 0xdf03, 0x2f90, 0xea56, 0x1, 0x0);
        gbc.writeMem(0x4ef5, { 0x7e });
        gbc.writeMem(0xea56, { 0x2b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x88b5, gbc.sp());
        EXPECT(0x4ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xea56));
        // 7E 034A
        gbc.setState(0x4db5, 0x54ff, 0x4210, 0x15eb, 0xa81f, 0x8ed8, 0x0, 0x0);
        gbc.writeMem(0x4db5, { 0x7e });
        gbc.writeMem(0x8ed8, { 0xf });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x54ff, gbc.sp());
        EXPECT(0x4db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x8ed8));
        // 7E 034B
        gbc.setState(0x7191, 0xd772, 0x2be0, 0x5179, 0xff96, 0xb800, 0x1, 0x0);
        gbc.writeMem(0x7191, { 0x7e });
        gbc.writeMem(0xb800, { 0xa2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xd772, gbc.sp());
        EXPECT(0x7192, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb800));
        // 7E 034C
        gbc.setState(0xaac9, 0x1e5b, 0xd810, 0x984a, 0x9af3, 0xdf37, 0x1, 0x1);
        gbc.writeMem(0xaac9, { 0x7e });
        gbc.writeMem(0xdf37, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1e5b, gbc.sp());
        EXPECT(0xaaca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xaac9));
        EXPECT(0xb0, gbc.readMem(0xdf37));
        // 7E 034D
        gbc.setState(0x6838, 0x50ec, 0x8760, 0x7d45, 0x8698, 0xd391, 0x1, 0x1);
        gbc.writeMem(0x6838, { 0x7e });
        gbc.writeMem(0xd391, { 0xe });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0x6839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xd391));
        // 7E 034E
        gbc.setState(0xc8e4, 0x6088, 0x86c0, 0x1a97, 0x5e69, 0x33ec, 0x1, 0x1);
        gbc.writeMem(0x33ec, { 0xc4 });
        gbc.writeMem(0xc8e4, { 0x7e });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x6088, gbc.sp());
        EXPECT(0xc8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc8e4));
        // 7E 0350
        gbc.setState(0xe649, 0x2197, 0xde20, 0x3b46, 0x80bb, 0xf8cc, 0x0, 0x1);
        gbc.writeMem(0xe649, { 0x7e });
        gbc.writeMem(0xf8cc, { 0x57 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x2197, gbc.sp());
        EXPECT(0xe64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe649));
        EXPECT(0x57, gbc.readMem(0xf8cc));
        // 7E 0351
        gbc.setState(0x6ea5, 0xdac0, 0x4c20, 0xc2b5, 0x6, 0x1117, 0x1, 0x0);
        gbc.writeMem(0x1117, { 0xea });
        gbc.writeMem(0x6ea5, { 0x7e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xdac0, gbc.sp());
        EXPECT(0x6ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0352
        gbc.setState(0x795e, 0x2498, 0x5590, 0x906f, 0x557c, 0x93a0, 0x1, 0x0);
        gbc.writeMem(0x795e, { 0x7e });
        gbc.writeMem(0x93a0, { 0x73 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2498, gbc.sp());
        EXPECT(0x795f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x93a0));
        // 7E 0353
        gbc.setState(0x53b7, 0xacce, 0x330, 0x43b7, 0x5f5e, 0xd27b, 0x0, 0x0);
        gbc.writeMem(0x53b7, { 0x7e });
        gbc.writeMem(0xd27b, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xacce, gbc.sp());
        EXPECT(0x53b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd27b));
        // 7E 0354
        gbc.setState(0xb073, 0x5839, 0x9d00, 0xb0b9, 0x9e34, 0x55f5, 0x1, 0x1);
        gbc.writeMem(0x55f5, { 0x81 });
        gbc.writeMem(0xb073, { 0x7e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5839, gbc.sp());
        EXPECT(0xb074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb073));
        // 7E 0355
        gbc.setState(0x6afe, 0x927b, 0x4220, 0x2b1f, 0xc17a, 0x2c71, 0x1, 0x1);
        gbc.writeMem(0x2c71, { 0x1f });
        gbc.writeMem(0x6afe, { 0x7e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x927b, gbc.sp());
        EXPECT(0x6aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0356
        gbc.setState(0x27ae, 0xc3c0, 0xc2f0, 0x1633, 0x3f6d, 0x6f68, 0x0, 0x1);
        gbc.writeMem(0x27ae, { 0x7e });
        gbc.writeMem(0x6f68, { 0xd });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc3c0, gbc.sp());
        EXPECT(0x27af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0357
        gbc.setState(0x2b04, 0x65a4, 0xb7b0, 0xc3db, 0xe916, 0x7933, 0x1, 0x0);
        gbc.writeMem(0x2b04, { 0x7e });
        gbc.writeMem(0x7933, { 0xb6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x65a4, gbc.sp());
        EXPECT(0x2b05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0358
        gbc.setState(0x83c, 0x33d3, 0x3700, 0x35f7, 0xb1cc, 0xeccf, 0x0, 0x0);
        gbc.writeMem(0x83c, { 0x7e });
        gbc.writeMem(0xeccf, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0x83d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xeccf));
        // 7E 0359
        gbc.setState(0xcdc7, 0x6e06, 0x96f0, 0x2915, 0x8382, 0xa4b6, 0x0, 0x0);
        gbc.writeMem(0xa4b6, { 0xaf });
        gbc.writeMem(0xcdc7, { 0x7e });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6e06, gbc.sp());
        EXPECT(0xcdc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa4b6));
        EXPECT(0x7e, gbc.readMem(0xcdc7));
        // 7E 035A
        gbc.setState(0x1ef9, 0xa1bb, 0xd380, 0xd1d2, 0xfe6c, 0xdd8a, 0x0, 0x1);
        gbc.writeMem(0x1ef9, { 0x7e });
        gbc.writeMem(0xdd8a, { 0xb3 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xa1bb, gbc.sp());
        EXPECT(0x1efa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xdd8a));
        // 7E 035B
        gbc.setState(0x5bf3, 0x4a4b, 0x66f0, 0x1cc8, 0xaa04, 0x9604, 0x1, 0x0);
        gbc.writeMem(0x5bf3, { 0x7e });
        gbc.writeMem(0x9604, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x4a4b, gbc.sp());
        EXPECT(0x5bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x9604));
        // 7E 035C
        gbc.setState(0x13a1, 0x984c, 0x8490, 0x9e9d, 0x8cec, 0xca40, 0x1, 0x0);
        gbc.writeMem(0x13a1, { 0x7e });
        gbc.writeMem(0xca40, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0x13a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xca40));
        // 7E 035D
        gbc.setState(0x25fb, 0x9db, 0x9820, 0x453e, 0xb6d8, 0x4b1b, 0x1, 0x0);
        gbc.writeMem(0x25fb, { 0x7e });
        gbc.writeMem(0x4b1b, { 0xc3 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x9db, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 035E
        gbc.setState(0xa535, 0x8b7d, 0xf820, 0x1300, 0x34f2, 0x477a, 0x0, 0x0);
        gbc.writeMem(0x477a, { 0x2 });
        gbc.writeMem(0xa535, { 0x7e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8b7d, gbc.sp());
        EXPECT(0xa536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa535));
        // 7E 035F
        gbc.setState(0x3210, 0x9ddd, 0x9590, 0xe6af, 0x7a04, 0x57cf, 0x1, 0x0);
        gbc.writeMem(0x3210, { 0x7e });
        gbc.writeMem(0x57cf, { 0xc9 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9ddd, gbc.sp());
        EXPECT(0x3211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0360
        gbc.setState(0xed3, 0x9a36, 0xda60, 0x6f87, 0x916c, 0x627f, 0x1, 0x0);
        gbc.writeMem(0xed3, { 0x7e });
        gbc.writeMem(0x627f, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9a36, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0361
        gbc.setState(0xeaa2, 0xb8f2, 0x8550, 0x48d3, 0x84ec, 0xaa6c, 0x1, 0x0);
        gbc.writeMem(0xaa6c, { 0x48 });
        gbc.writeMem(0xeaa2, { 0x7e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb8f2, gbc.sp());
        EXPECT(0xeaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xaa6c));
        EXPECT(0x7e, gbc.readMem(0xeaa2));
        // 7E 0362
        gbc.setState(0x9eb0, 0xb8b9, 0xfd20, 0x853c, 0xef1e, 0xeb73, 0x1, 0x1);
        gbc.writeMem(0x9eb0, { 0x7e });
        gbc.writeMem(0xeb73, { 0x80 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xb8b9, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9eb0));
        EXPECT(0x80, gbc.readMem(0xeb73));
        // 7E 0363
        gbc.setState(0xcf2c, 0x5cc5, 0x2f20, 0x93fb, 0x476c, 0xf4e9, 0x0, 0x1);
        gbc.writeMem(0xcf2c, { 0x7e });
        gbc.writeMem(0xf4e9, { 0xb });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5cc5, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcf2c));
        EXPECT(0xb, gbc.readMem(0xf4e9));
        // 7E 0364
        gbc.setState(0x5710, 0x5c14, 0xa430, 0xcabc, 0x15ff, 0x11e4, 0x0, 0x0);
        gbc.writeMem(0x11e4, { 0xee });
        gbc.writeMem(0x5710, { 0x7e });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5c14, gbc.sp());
        EXPECT(0x5711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0365
        gbc.setState(0xce32, 0x77fd, 0xbd10, 0xa32d, 0x898e, 0xa7b, 0x1, 0x1);
        gbc.writeMem(0xa7b, { 0x4f });
        gbc.writeMem(0xce32, { 0x7e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x77fd, gbc.sp());
        EXPECT(0xce33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xce32));
        // 7E 0366
        gbc.setState(0x161c, 0xbd0a, 0x3760, 0xe5ee, 0x3a5c, 0xd55c, 0x0, 0x0);
        gbc.writeMem(0x161c, { 0x7e });
        gbc.writeMem(0xd55c, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xbd0a, gbc.sp());
        EXPECT(0x161d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd55c));
        // 7E 0367
        gbc.setState(0x4c72, 0xd092, 0xd030, 0x5fe8, 0x42b7, 0xfcb9, 0x0, 0x0);
        gbc.writeMem(0x4c72, { 0x7e });
        gbc.writeMem(0xfcb9, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd092, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xfcb9));
        // 7E 0368
        gbc.setState(0x6c57, 0xdaae, 0x7240, 0x6c5, 0xa48b, 0x956c, 0x0, 0x0);
        gbc.writeMem(0x6c57, { 0x7e });
        gbc.writeMem(0x956c, { 0xc1 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdaae, gbc.sp());
        EXPECT(0x6c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0x956c));
        // 7E 0369
        gbc.setState(0xa47b, 0xd98f, 0x8df0, 0xa281, 0xa023, 0x14b8, 0x0, 0x1);
        gbc.writeMem(0x14b8, { 0x3a });
        gbc.writeMem(0xa47b, { 0x7e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd98f, gbc.sp());
        EXPECT(0xa47c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa47b));
        // 7E 036A
        gbc.setState(0xe4eb, 0x5bd0, 0xca40, 0x1824, 0x6cbc, 0x2308, 0x1, 0x0);
        gbc.writeMem(0x2308, { 0xb9 });
        gbc.writeMem(0xe4eb, { 0x7e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x5bd0, gbc.sp());
        EXPECT(0xe4ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe4eb));
        // 7E 036B
        gbc.setState(0x9316, 0xa95e, 0xb960, 0x299d, 0x19d7, 0xfe56, 0x0, 0x1);
        gbc.writeMem(0x9316, { 0x7e });
        gbc.writeMem(0xfe56, { 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xa95e, gbc.sp());
        EXPECT(0x9317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9316));
        EXPECT(0xb0, gbc.readMem(0xfe56));
        // 7E 036C
        gbc.setState(0x73fd, 0x8391, 0x89e0, 0x840c, 0xfdef, 0x58ff, 0x1, 0x0);
        gbc.writeMem(0x58ff, { 0x7c });
        gbc.writeMem(0x73fd, { 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0x73fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 036D
        gbc.setState(0x9d7e, 0x9511, 0x1fd0, 0x6390, 0xcd3a, 0x1caf, 0x1, 0x1);
        gbc.writeMem(0x1caf, { 0x59 });
        gbc.writeMem(0x9d7e, { 0x7e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9511, gbc.sp());
        EXPECT(0x9d7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9d7e));
        // 7E 036E
        gbc.setState(0x3a95, 0x9e6f, 0x72c0, 0xda46, 0x2672, 0x4bce, 0x1, 0x0);
        gbc.writeMem(0x3a95, { 0x7e });
        gbc.writeMem(0x4bce, { 0xb4 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x9e6f, gbc.sp());
        EXPECT(0x3a96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 036F
        gbc.setState(0xbb17, 0x3452, 0xffe0, 0xd1e6, 0x8e5f, 0x670e, 0x1, 0x0);
        gbc.writeMem(0x670e, { 0xb2 });
        gbc.writeMem(0xbb17, { 0x7e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3452, gbc.sp());
        EXPECT(0xbb18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbb17));
        // 7E 0370
        gbc.setState(0xbd63, 0xd9b7, 0x2370, 0xd497, 0x740f, 0x127, 0x1, 0x0);
        gbc.writeMem(0x127, { 0x5c });
        gbc.writeMem(0xbd63, { 0x7e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd9b7, gbc.sp());
        EXPECT(0xbd64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xbd63));
        // 7E 0371
        gbc.setState(0xebf8, 0x7cb6, 0x5420, 0xf2bb, 0xec0f, 0xa95d, 0x1, 0x1);
        gbc.writeMem(0xa95d, { 0xd5 });
        gbc.writeMem(0xebf8, { 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7cb6, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa95d));
        EXPECT(0x7e, gbc.readMem(0xebf8));
        // 7E 0372
        gbc.setState(0x87f8, 0x6453, 0x4450, 0x97f4, 0x2517, 0x6844, 0x0, 0x1);
        gbc.writeMem(0x6844, { 0xc5 });
        gbc.writeMem(0x87f8, { 0x7e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6453, gbc.sp());
        EXPECT(0x87f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x87f8));
        // 7E 0373
        gbc.setState(0x6c4b, 0x854a, 0x2ee0, 0x25f2, 0x6f6f, 0xa06b, 0x0, 0x1);
        gbc.writeMem(0x6c4b, { 0x7e });
        gbc.writeMem(0xa06b, { 0xcd });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x854a, gbc.sp());
        EXPECT(0x6c4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa06b));
        // 7E 0374
        gbc.setState(0xe91f, 0x4910, 0xec80, 0x454, 0x92b0, 0x867c, 0x1, 0x0);
        gbc.writeMem(0x867c, { 0x4a });
        gbc.writeMem(0xe91f, { 0x7e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4910, gbc.sp());
        EXPECT(0xe920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x867c));
        EXPECT(0x7e, gbc.readMem(0xe91f));
        // 7E 0375
        gbc.setState(0x7d16, 0x2669, 0xc90, 0x9e25, 0xb4e, 0x22d6, 0x0, 0x1);
        gbc.writeMem(0x22d6, { 0xb });
        gbc.writeMem(0x7d16, { 0x7e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2669, gbc.sp());
        EXPECT(0x7d17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0376
        gbc.setState(0x33f0, 0x5209, 0xcc30, 0xdef6, 0xde72, 0x47c3, 0x1, 0x1);
        gbc.writeMem(0x33f0, { 0x7e });
        gbc.writeMem(0x47c3, { 0xb5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5209, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0377
        gbc.setState(0x93f0, 0x105d, 0x8d60, 0xf954, 0xf44e, 0x1f9b, 0x0, 0x1);
        gbc.writeMem(0x1f9b, { 0x4f });
        gbc.writeMem(0x93f0, { 0x7e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x105d, gbc.sp());
        EXPECT(0x93f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x93f0));
        // 7E 0378
        gbc.setState(0xeede, 0x8782, 0x3590, 0xe90d, 0xda28, 0xd760, 0x0, 0x1);
        gbc.writeMem(0xd760, { 0xa0 });
        gbc.writeMem(0xeede, { 0x7e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x8782, gbc.sp());
        EXPECT(0xeedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xd760));
        EXPECT(0x7e, gbc.readMem(0xeede));
        // 7E 0379
        gbc.setState(0xac17, 0x42aa, 0x12b0, 0xefca, 0x4709, 0xc975, 0x0, 0x1);
        gbc.writeMem(0xac17, { 0x7e });
        gbc.writeMem(0xc975, { 0xbe });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x42aa, gbc.sp());
        EXPECT(0xac18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xac17));
        EXPECT(0xbe, gbc.readMem(0xc975));
        // 7E 037A
        gbc.setState(0x80b4, 0x5b18, 0xda10, 0x42d8, 0xdacb, 0x65d2, 0x1, 0x0);
        gbc.writeMem(0x65d2, { 0x39 });
        gbc.writeMem(0x80b4, { 0x7e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x5b18, gbc.sp());
        EXPECT(0x80b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x80b4));
        // 7E 037B
        gbc.setState(0xcf4a, 0x4d5f, 0x8050, 0xb7b4, 0x34d4, 0xd5f4, 0x0, 0x0);
        gbc.writeMem(0xcf4a, { 0x7e });
        gbc.writeMem(0xd5f4, { 0xf0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4d5f, gbc.sp());
        EXPECT(0xcf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcf4a));
        EXPECT(0xf0, gbc.readMem(0xd5f4));
        // 7E 037C
        gbc.setState(0xe9, 0xfe76, 0xb6b0, 0xc761, 0x2869, 0xff1c, 0x1, 0x1);
        gbc.writeMem(0xe9, { 0x7e });
        gbc.writeMem(0xff1c, { 0x94 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfe76, gbc.sp());
        EXPECT(0xea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xff1c));
        // 7E 037D
        gbc.setState(0xb398, 0xc0d2, 0xae10, 0x3ace, 0x2c34, 0x9d75, 0x0, 0x0);
        gbc.writeMem(0x9d75, { 0xc0 });
        gbc.writeMem(0xb398, { 0x7e });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xc0d2, gbc.sp());
        EXPECT(0xb399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0x9d75));
        EXPECT(0x7e, gbc.readMem(0xb398));
        // 7E 037E
        gbc.setState(0x81b9, 0x5a74, 0x1400, 0x7f16, 0xcab6, 0x1828, 0x0, 0x0);
        gbc.writeMem(0x1828, { 0x5e });
        gbc.writeMem(0x81b9, { 0x7e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0x81ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x81b9));
        // 7E 037F
        gbc.setState(0x8ca3, 0x304c, 0x82b0, 0x2fb5, 0x7b86, 0x81ab, 0x1, 0x1);
        gbc.writeMem(0x81ab, { 0xd4 });
        gbc.writeMem(0x8ca3, { 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x304c, gbc.sp());
        EXPECT(0x8ca4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0x81ab));
        EXPECT(0x7e, gbc.readMem(0x8ca3));
        // 7E 0380
        gbc.setState(0x16a7, 0xeb73, 0xd1a0, 0xae4e, 0x4078, 0x7710, 0x0, 0x1);
        gbc.writeMem(0x16a7, { 0x7e });
        gbc.writeMem(0x7710, { 0x95 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xeb73, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0381
        gbc.setState(0xba07, 0xa8a9, 0x6dc0, 0xb964, 0xb7b5, 0xb5f6, 0x1, 0x1);
        gbc.writeMem(0xb5f6, { 0xd5 });
        gbc.writeMem(0xba07, { 0x7e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xa8a9, gbc.sp());
        EXPECT(0xba08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb5f6));
        EXPECT(0x7e, gbc.readMem(0xba07));
        // 7E 0382
        gbc.setState(0x522b, 0xfee5, 0x7b20, 0xef26, 0xcd87, 0x5eb7, 0x0, 0x0);
        gbc.writeMem(0x522b, { 0x7e });
        gbc.writeMem(0x5eb7, { 0x60 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfee5, gbc.sp());
        EXPECT(0x522c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0383
        gbc.setState(0x863c, 0xac62, 0x4160, 0x5f26, 0xcc86, 0x8f9, 0x0, 0x1);
        gbc.writeMem(0x8f9, { 0xef });
        gbc.writeMem(0x863c, { 0x7e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xac62, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x863c));
        // 7E 0384
        gbc.setState(0xe38b, 0x2453, 0x1990, 0xd572, 0xa442, 0xf825, 0x0, 0x0);
        gbc.writeMem(0xe38b, { 0x7e });
        gbc.writeMem(0xf825, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2453, gbc.sp());
        EXPECT(0xe38c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe38b));
        EXPECT(0xf2, gbc.readMem(0xf825));
        // 7E 0385
        gbc.setState(0xe628, 0x80c0, 0xdc20, 0x9e18, 0xb971, 0xb07c, 0x0, 0x0);
        gbc.writeMem(0xb07c, { 0x7f });
        gbc.writeMem(0xe628, { 0x7e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x80c0, gbc.sp());
        EXPECT(0xe629, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xb07c));
        EXPECT(0x7e, gbc.readMem(0xe628));
        // 7E 0386
        gbc.setState(0xd9de, 0xa1e7, 0xe500, 0x9b09, 0xe91b, 0x9c6, 0x0, 0x0);
        gbc.writeMem(0x9c6, { 0x68 });
        gbc.writeMem(0xd9de, { 0x7e });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0xd9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd9de));
        // 7E 0387
        gbc.setState(0x5a36, 0x7db4, 0x410, 0x62d2, 0x161d, 0xc2e3, 0x1, 0x0);
        gbc.writeMem(0x5a36, { 0x7e });
        gbc.writeMem(0xc2e3, { 0xdf });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7db4, gbc.sp());
        EXPECT(0x5a37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc2e3));
        // 7E 0388
        gbc.setState(0xb121, 0x6962, 0xf960, 0x4fdd, 0xdf74, 0xffa8, 0x0, 0x0);
        gbc.writeMem(0xb121, { 0x7e });
        gbc.writeMem(0xffa8, { 0x85 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6962, gbc.sp());
        EXPECT(0xb122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb121));
        EXPECT(0x85, gbc.readMem(0xffa8));
        // 7E 0389
        gbc.setState(0xcc73, 0x9679, 0x97f0, 0x2899, 0xd417, 0xd568, 0x0, 0x1);
        gbc.writeMem(0xcc73, { 0x7e });
        gbc.writeMem(0xd568, { 0x23 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9679, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xcc73));
        EXPECT(0x23, gbc.readMem(0xd568));
        // 7E 038A
        gbc.setState(0xd343, 0xe835, 0xf9f0, 0x30fb, 0x8466, 0x7261, 0x1, 0x0);
        gbc.writeMem(0x7261, { 0x63 });
        gbc.writeMem(0xd343, { 0x7e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe835, gbc.sp());
        EXPECT(0xd344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xd343));
        // 7E 038B
        gbc.setState(0x7eeb, 0xc2cc, 0x16d0, 0x4324, 0xa967, 0xd4d6, 0x1, 0x1);
        gbc.writeMem(0x7eeb, { 0x7e });
        gbc.writeMem(0xd4d6, { 0xe1 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x7eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd4d6));
        // 7E 038C
        gbc.setState(0x2044, 0xee4d, 0xbd50, 0x7f0d, 0x905d, 0x99ec, 0x0, 0x1);
        gbc.writeMem(0x2044, { 0x7e });
        gbc.writeMem(0x99ec, { 0x88 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xee4d, gbc.sp());
        EXPECT(0x2045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x99ec));
        // 7E 038D
        gbc.setState(0x4d88, 0x76e5, 0x2000, 0x792c, 0xbf1, 0x1fb1, 0x1, 0x1);
        gbc.writeMem(0x1fb1, { 0x2a });
        gbc.writeMem(0x4d88, { 0x7e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x76e5, gbc.sp());
        EXPECT(0x4d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 038E
        gbc.setState(0xb3f7, 0xb3d2, 0x2130, 0xa10, 0x8f23, 0x82e, 0x0, 0x1);
        gbc.writeMem(0x82e, { 0x58 });
        gbc.writeMem(0xb3f7, { 0x7e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xb3d2, gbc.sp());
        EXPECT(0xb3f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb3f7));
        // 7E 038F
        gbc.setState(0x7382, 0x3111, 0xcf80, 0x2343, 0xd89d, 0x66d9, 0x1, 0x1);
        gbc.writeMem(0x66d9, { 0x73 });
        gbc.writeMem(0x7382, { 0x7e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3111, gbc.sp());
        EXPECT(0x7383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 0390
        gbc.setState(0x75eb, 0x1c09, 0xa3f0, 0x6172, 0x2a31, 0x8ce8, 0x1, 0x1);
        gbc.writeMem(0x75eb, { 0x7e });
        gbc.writeMem(0x8ce8, { 0xff });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0x75ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8ce8));
        // 7E 0391
        gbc.setState(0xeb06, 0x37c7, 0x2830, 0x2584, 0xe1c, 0x702e, 0x0, 0x1);
        gbc.writeMem(0x702e, { 0xbc });
        gbc.writeMem(0xeb06, { 0x7e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x37c7, gbc.sp());
        EXPECT(0xeb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xeb06));
        // 7E 0392
        gbc.setState(0x9e6c, 0xa267, 0x32f0, 0x8fe4, 0x9464, 0xa7bc, 0x1, 0x1);
        gbc.writeMem(0x9e6c, { 0x7e });
        gbc.writeMem(0xa7bc, { 0xe4 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa267, gbc.sp());
        EXPECT(0x9e6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9e6c));
        EXPECT(0xe4, gbc.readMem(0xa7bc));
        // 7E 0393
        gbc.setState(0x62c6, 0x469e, 0x1d70, 0x3ac5, 0xddcb, 0x4c95, 0x0, 0x0);
        gbc.writeMem(0x4c95, { 0xe1 });
        gbc.writeMem(0x62c6, { 0x7e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x469e, gbc.sp());
        EXPECT(0x62c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 0394
        gbc.setState(0x6bf4, 0xd2e7, 0xd4c0, 0xf021, 0x9f5, 0xd199, 0x0, 0x1);
        gbc.writeMem(0x6bf4, { 0x7e });
        gbc.writeMem(0xd199, { 0x84 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd2e7, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xd199));
        // 7E 0395
        gbc.setState(0xb60, 0x3e1b, 0x2290, 0x703f, 0x8d41, 0xe67e, 0x0, 0x1);
        gbc.writeMem(0xb60, { 0x7e });
        gbc.writeMem(0xe67e, { 0xf2 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x3e1b, gbc.sp());
        EXPECT(0xb61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xe67e));
        // 7E 0396
        gbc.setState(0xe16f, 0x376c, 0x2030, 0x1976, 0xecd1, 0xf1d3, 0x0, 0x1);
        gbc.writeMem(0xe16f, { 0x7e });
        gbc.writeMem(0xf1d3, { 0x86 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x376c, gbc.sp());
        EXPECT(0xe170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe16f));
        EXPECT(0x86, gbc.readMem(0xf1d3));
        // 7E 0397
        gbc.setState(0xb35d, 0x5a7, 0xb270, 0xe09e, 0x4ce1, 0x68ae, 0x1, 0x0);
        gbc.writeMem(0x68ae, { 0xf1 });
        gbc.writeMem(0xb35d, { 0x7e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x5a7, gbc.sp());
        EXPECT(0xb35e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb35d));
        // 7E 0398
        gbc.setState(0x5009, 0xcf7c, 0x3de0, 0x520d, 0xc5b4, 0xfbb3, 0x1, 0x0);
        gbc.writeMem(0x5009, { 0x7e });
        gbc.writeMem(0xfbb3, { 0x30 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcf7c, gbc.sp());
        EXPECT(0x500a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xfbb3));
        // 7E 0399
        gbc.setState(0x3741, 0x5684, 0x5fd0, 0x6eab, 0x8ae1, 0xf8dd, 0x0, 0x0);
        gbc.writeMem(0x3741, { 0x7e });
        gbc.writeMem(0xf8dd, { 0x9a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5684, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xf8dd));
        // 7E 039A
        gbc.setState(0xda20, 0x2c96, 0x9f10, 0xf8f1, 0x7ffc, 0x966b, 0x1, 0x0);
        gbc.writeMem(0x966b, { 0x31 });
        gbc.writeMem(0xda20, { 0x7e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x2c96, gbc.sp());
        EXPECT(0xda21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x966b));
        EXPECT(0x7e, gbc.readMem(0xda20));
        // 7E 039B
        gbc.setState(0x825d, 0x1e5f, 0x930, 0x80e, 0x72a8, 0x533f, 0x1, 0x1);
        gbc.writeMem(0x533f, { 0xdc });
        gbc.writeMem(0x825d, { 0x7e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1e5f, gbc.sp());
        EXPECT(0x825e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x825d));
        // 7E 039C
        gbc.setState(0xb7e4, 0xe15d, 0x1320, 0x7cc7, 0x9aa8, 0x9f6a, 0x1, 0x1);
        gbc.writeMem(0x9f6a, { 0xe4 });
        gbc.writeMem(0xb7e4, { 0x7e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe15d, gbc.sp());
        EXPECT(0xb7e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0x9f6a));
        EXPECT(0x7e, gbc.readMem(0xb7e4));
        // 7E 039D
        gbc.setState(0xdebd, 0xe191, 0xb1f0, 0x38cf, 0xd9aa, 0x5d26, 0x0, 0x1);
        gbc.writeMem(0x5d26, { 0xb7 });
        gbc.writeMem(0xdebd, { 0x7e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe191, gbc.sp());
        EXPECT(0xdebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdebd));
        // 7E 039E
        gbc.setState(0x4239, 0x2d49, 0xd340, 0x987a, 0x7b79, 0xc663, 0x1, 0x1);
        gbc.writeMem(0x4239, { 0x7e });
        gbc.writeMem(0xc663, { 0x49 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2d49, gbc.sp());
        EXPECT(0x423a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xc663));
        // 7E 039F
        gbc.setState(0x59b9, 0x6919, 0x76c0, 0xc59e, 0xa5b7, 0xf0e2, 0x0, 0x0);
        gbc.writeMem(0x59b9, { 0x7e });
        gbc.writeMem(0xf0e2, { 0x70 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x6919, gbc.sp());
        EXPECT(0x59ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xf0e2));
        // 7E 03A0
        gbc.setState(0x82d0, 0xc883, 0xb3b0, 0x6893, 0x6d6b, 0x8072, 0x0, 0x0);
        gbc.writeMem(0x8072, { 0xfb });
        gbc.writeMem(0x82d0, { 0x7e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x82d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0x8072));
        EXPECT(0x7e, gbc.readMem(0x82d0));
        // 7E 03A1
        gbc.setState(0x5f64, 0x5d35, 0x8440, 0xad66, 0x7bd8, 0x4ea8, 0x0, 0x0);
        gbc.writeMem(0x4ea8, { 0x3d });
        gbc.writeMem(0x5f64, { 0x7e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5d35, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03A3
        gbc.setState(0x244, 0xf604, 0xa660, 0x7172, 0xbd48, 0xa671, 0x0, 0x0);
        gbc.writeMem(0x244, { 0x7e });
        gbc.writeMem(0xa671, { 0x76 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf604, gbc.sp());
        EXPECT(0x245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0xa671));
        // 7E 03A4
        gbc.setState(0xe6c1, 0x5910, 0x8580, 0xdd9, 0x2f16, 0x7068, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0x8d });
        gbc.writeMem(0xe6c1, { 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe6c1));
        // 7E 03A5
        gbc.setState(0x8375, 0x3fab, 0x3f20, 0x3e99, 0x53ea, 0x563e, 0x0, 0x1);
        gbc.writeMem(0x563e, { 0xd4 });
        gbc.writeMem(0x8375, { 0x7e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0x8376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8375));
        // 7E 03A6
        gbc.setState(0x29ba, 0xff97, 0xad40, 0x1018, 0x3655, 0x76a9, 0x1, 0x0);
        gbc.writeMem(0x29ba, { 0x7e });
        gbc.writeMem(0x76a9, { 0x3a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xff97, gbc.sp());
        EXPECT(0x29bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03A7
        gbc.setState(0x4ec3, 0x9275, 0x66d0, 0xb1ef, 0x3dcf, 0xc147, 0x1, 0x0);
        gbc.writeMem(0x4ec3, { 0x7e });
        gbc.writeMem(0xc147, { 0x65 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x9275, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xc147));
        // 7E 03A8
        gbc.setState(0x17ab, 0xc84e, 0xaee0, 0x8537, 0x558f, 0xd4de, 0x0, 0x1);
        gbc.writeMem(0x17ab, { 0x7e });
        gbc.writeMem(0xd4de, { 0xd1 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc84e, gbc.sp());
        EXPECT(0x17ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd4de));
        // 7E 03A9
        gbc.setState(0x933, 0x881f, 0xa540, 0xe069, 0x4ddf, 0x1c3c, 0x1, 0x0);
        gbc.writeMem(0x933, { 0x7e });
        gbc.writeMem(0x1c3c, { 0xaa });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x881f, gbc.sp());
        EXPECT(0x934, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03AA
        gbc.setState(0x3d6d, 0x1b2c, 0x82c0, 0x79b8, 0xc5ad, 0x883d, 0x1, 0x0);
        gbc.writeMem(0x3d6d, { 0x7e });
        gbc.writeMem(0x883d, { 0x4 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b2c, gbc.sp());
        EXPECT(0x3d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x883d));
        // 7E 03AB
        gbc.setState(0xa94, 0x9898, 0xc730, 0x8895, 0x3151, 0x9135, 0x1, 0x0);
        gbc.writeMem(0xa94, { 0x7e });
        gbc.writeMem(0x9135, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9898, gbc.sp());
        EXPECT(0xa95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9135));
        // 7E 03AC
        gbc.setState(0xea66, 0x16c4, 0x3660, 0x4a5e, 0x91b6, 0x107, 0x0, 0x0);
        gbc.writeMem(0x107, { 0x8f });
        gbc.writeMem(0xea66, { 0x7e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x16c4, gbc.sp());
        EXPECT(0xea67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xea66));
        // 7E 03AD
        gbc.setState(0xd56f, 0x855b, 0xa880, 0x327c, 0x2c9d, 0xb9b6, 0x0, 0x1);
        gbc.writeMem(0xb9b6, { 0x62 });
        gbc.writeMem(0xd56f, { 0x7e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x855b, gbc.sp());
        EXPECT(0xd570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x62, gbc.readMem(0xb9b6));
        EXPECT(0x7e, gbc.readMem(0xd56f));
        // 7E 03AE
        gbc.setState(0x91cf, 0x64f, 0x3a10, 0xf723, 0x5a56, 0x3434, 0x1, 0x0);
        gbc.writeMem(0x3434, { 0xc1 });
        gbc.writeMem(0x91cf, { 0x7e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0x91d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x91cf));
        // 7E 03AF
        gbc.setState(0xb106, 0x16d0, 0xe030, 0x1166, 0xaccc, 0x883, 0x1, 0x0);
        gbc.writeMem(0x883, { 0x12 });
        gbc.writeMem(0xb106, { 0x7e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x16d0, gbc.sp());
        EXPECT(0xb107, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb106));
        // 7E 03B1
        gbc.setState(0xda7c, 0x9286, 0x6880, 0x43b6, 0x2fdd, 0x8c1a, 0x0, 0x0);
        gbc.writeMem(0x8c1a, { 0x52 });
        gbc.writeMem(0xda7c, { 0x7e });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9286, gbc.sp());
        EXPECT(0xda7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x8c1a));
        EXPECT(0x7e, gbc.readMem(0xda7c));
        // 7E 03B2
        gbc.setState(0xa5b8, 0x532c, 0xa1b0, 0xa745, 0x57d2, 0xc9fe, 0x1, 0x0);
        gbc.writeMem(0xa5b8, { 0x7e });
        gbc.writeMem(0xc9fe, { 0x4d });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x532c, gbc.sp());
        EXPECT(0xa5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa5b8));
        EXPECT(0x4d, gbc.readMem(0xc9fe));
        // 7E 03B3
        gbc.setState(0xb787, 0xd541, 0x6c40, 0xcd39, 0xd7ec, 0xc227, 0x1, 0x1);
        gbc.writeMem(0xb787, { 0x7e });
        gbc.writeMem(0xc227, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xd541, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xb787));
        EXPECT(0x5e, gbc.readMem(0xc227));
        // 7E 03B4
        gbc.setState(0x7f4c, 0xfcc, 0x9740, 0xfed9, 0x7041, 0x9b15, 0x1, 0x1);
        gbc.writeMem(0x7f4c, { 0x7e });
        gbc.writeMem(0x9b15, { 0x77 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfcc, gbc.sp());
        EXPECT(0x7f4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x9b15));
        // 7E 03B5
        gbc.setState(0x2eff, 0xcfa3, 0x20c0, 0x1dcd, 0x751c, 0xce0f, 0x0, 0x0);
        gbc.writeMem(0x2eff, { 0x7e });
        gbc.writeMem(0xce0f, { 0xc7 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcfa3, gbc.sp());
        EXPECT(0x2f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xce0f));
        // 7E 03B6
        gbc.setState(0x767f, 0xe2f, 0x92c0, 0xa819, 0xfbf0, 0x46c, 0x0, 0x0);
        gbc.writeMem(0x46c, { 0xa2 });
        gbc.writeMem(0x767f, { 0x7e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe2f, gbc.sp());
        EXPECT(0x7680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03B7
        gbc.setState(0x9d56, 0xde6f, 0x1bf0, 0x8e8f, 0xa58d, 0xa244, 0x0, 0x1);
        gbc.writeMem(0x9d56, { 0x7e });
        gbc.writeMem(0xa244, { 0xf9 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xde6f, gbc.sp());
        EXPECT(0x9d57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9d56));
        EXPECT(0xf9, gbc.readMem(0xa244));
        // 7E 03B8
        gbc.setState(0x1c1, 0x7bce, 0xdb0, 0x85c0, 0x4dad, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0x1c1, { 0x7e });
        gbc.writeMem(0xd74a, { 0x6e });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7bce, gbc.sp());
        EXPECT(0x1c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xd74a));
        // 7E 03BA
        gbc.setState(0xc148, 0x5504, 0x5b50, 0xb396, 0x3e92, 0x5485, 0x1, 0x0);
        gbc.writeMem(0x5485, { 0x7c });
        gbc.writeMem(0xc148, { 0x7e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5504, gbc.sp());
        EXPECT(0xc149, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc148));
        // 7E 03BB
        gbc.setState(0x3a9e, 0xfb53, 0xd7e0, 0x8e33, 0x7832, 0xa129, 0x0, 0x0);
        gbc.writeMem(0x3a9e, { 0x7e });
        gbc.writeMem(0xa129, { 0x1e });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xfb53, gbc.sp());
        EXPECT(0x3a9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1e, gbc.readMem(0xa129));
        // 7E 03BD
        gbc.setState(0x7fb, 0xdddf, 0xdf20, 0x6644, 0x65f7, 0xffd3, 0x1, 0x0);
        gbc.writeMem(0x7fb, { 0x7e });
        gbc.writeMem(0xffd3, { 0xbb });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdddf, gbc.sp());
        EXPECT(0x7fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xffd3));
        // 7E 03BE
        gbc.setState(0x571d, 0x20f5, 0x9630, 0xd8d0, 0x70c3, 0x54f4, 0x1, 0x1);
        gbc.writeMem(0x54f4, { 0x99 });
        gbc.writeMem(0x571d, { 0x7e });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x20f5, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03BF
        gbc.setState(0x166e, 0xd808, 0xf430, 0x6088, 0x9632, 0x5c3a, 0x0, 0x1);
        gbc.writeMem(0x166e, { 0x7e });
        gbc.writeMem(0x5c3a, { 0xa0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd808, gbc.sp());
        EXPECT(0x166f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03C0
        gbc.setState(0x5aac, 0xf3ca, 0xef90, 0xc6a2, 0x486a, 0x3d67, 0x0, 0x0);
        gbc.writeMem(0x3d67, { 0xbb });
        gbc.writeMem(0x5aac, { 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0x5aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03C1
        gbc.setState(0x7e9, 0x18fc, 0x3240, 0x1cb2, 0x2ed, 0x7a85, 0x1, 0x0);
        gbc.writeMem(0x7e9, { 0x7e });
        gbc.writeMem(0x7a85, { 0x72 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x18fc, gbc.sp());
        EXPECT(0x7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03C2
        gbc.setState(0x3c5b, 0x7caa, 0x7e00, 0xc9eb, 0x1538, 0x9059, 0x1, 0x0);
        gbc.writeMem(0x3c5b, { 0x7e });
        gbc.writeMem(0x9059, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7caa, gbc.sp());
        EXPECT(0x3c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9059));
        // 7E 03C3
        gbc.setState(0x61f1, 0x87e, 0xd7c0, 0x9e67, 0x7402, 0x9bb8, 0x1, 0x0);
        gbc.writeMem(0x61f1, { 0x7e });
        gbc.writeMem(0x9bb8, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x61f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9bb8));
        // 7E 03C4
        gbc.setState(0xac0, 0xf551, 0xba70, 0xab92, 0x6915, 0x8349, 0x1, 0x1);
        gbc.writeMem(0xac0, { 0x7e });
        gbc.writeMem(0x8349, { 0x26 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf551, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0x8349));
        // 7E 03C5
        gbc.setState(0x71f, 0x3005, 0x3830, 0x4f2c, 0xf9b5, 0x3f37, 0x1, 0x1);
        gbc.writeMem(0x71f, { 0x7e });
        gbc.writeMem(0x3f37, { 0x8e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3005, gbc.sp());
        EXPECT(0x720, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03C6
        gbc.setState(0x1bf3, 0xf4ed, 0x9b10, 0xc458, 0xee4e, 0xd0db, 0x1, 0x0);
        gbc.writeMem(0x1bf3, { 0x7e });
        gbc.writeMem(0xd0db, { 0x6d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf4ed, gbc.sp());
        EXPECT(0x1bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd0db));
        // 7E 03C7
        gbc.setState(0xc10f, 0xb1fd, 0x95c0, 0xe92a, 0x4e53, 0xfe7, 0x0, 0x0);
        gbc.writeMem(0xfe7, { 0xc9 });
        gbc.writeMem(0xc10f, { 0x7e });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1fd, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc10f));
        // 7E 03C8
        gbc.setState(0xb0a8, 0x8be9, 0xdfd0, 0x321a, 0xdd24, 0x82bd, 0x0, 0x0);
        gbc.writeMem(0x82bd, { 0xb7 });
        gbc.writeMem(0xb0a8, { 0x7e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8be9, gbc.sp());
        EXPECT(0xb0a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0x82bd));
        EXPECT(0x7e, gbc.readMem(0xb0a8));
        // 7E 03C9
        gbc.setState(0x74b5, 0x2e14, 0x86e0, 0x23ae, 0xaac6, 0x192c, 0x0, 0x0);
        gbc.writeMem(0x192c, { 0x10 });
        gbc.writeMem(0x74b5, { 0x7e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2e14, gbc.sp());
        EXPECT(0x74b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03CA
        gbc.setState(0xec29, 0xd903, 0xf9a0, 0xc177, 0x9c46, 0x3fc3, 0x1, 0x0);
        gbc.writeMem(0x3fc3, { 0x57 });
        gbc.writeMem(0xec29, { 0x7e });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd903, gbc.sp());
        EXPECT(0xec2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xec29));
        // 7E 03CB
        gbc.setState(0x2354, 0x52b, 0x8070, 0x870c, 0x6fcf, 0x1571, 0x1, 0x1);
        gbc.writeMem(0x1571, { 0x89 });
        gbc.writeMem(0x2354, { 0x7e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x52b, gbc.sp());
        EXPECT(0x2355, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03CC
        gbc.setState(0x11e6, 0xd201, 0x8410, 0x808c, 0xb444, 0xa888, 0x0, 0x0);
        gbc.writeMem(0x11e6, { 0x7e });
        gbc.writeMem(0xa888, { 0xcc });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd201, gbc.sp());
        EXPECT(0x11e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xa888));
        // 7E 03CD
        gbc.setState(0x253b, 0x7e00, 0x1c0, 0x85be, 0x109, 0x323, 0x0, 0x0);
        gbc.writeMem(0x323, { 0x80 });
        gbc.writeMem(0x253b, { 0x7e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7e00, gbc.sp());
        EXPECT(0x253c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03CE
        gbc.setState(0xe37a, 0xb6bb, 0x6280, 0xaf2c, 0x352e, 0x48db, 0x0, 0x0);
        gbc.writeMem(0x48db, { 0x9c });
        gbc.writeMem(0xe37a, { 0x7e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb6bb, gbc.sp());
        EXPECT(0xe37b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe37a));
        // 7E 03CF
        gbc.setState(0x30fb, 0x98f6, 0x54d0, 0xf614, 0x6fb7, 0x611d, 0x1, 0x0);
        gbc.writeMem(0x30fb, { 0x7e });
        gbc.writeMem(0x611d, { 0xde });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x98f6, gbc.sp());
        EXPECT(0x30fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03D0
        gbc.setState(0x5fd9, 0xb3a2, 0x3fc0, 0xb162, 0xb6a5, 0xc811, 0x0, 0x1);
        gbc.writeMem(0x5fd9, { 0x7e });
        gbc.writeMem(0xc811, { 0x13 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb3a2, gbc.sp());
        EXPECT(0x5fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xc811));
        // 7E 03D1
        gbc.setState(0x1333, 0x9801, 0xada0, 0x655b, 0x5e5f, 0x2103, 0x0, 0x0);
        gbc.writeMem(0x1333, { 0x7e });
        gbc.writeMem(0x2103, { 0xd7 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9801, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03D2
        gbc.setState(0x2839, 0xff44, 0x63b0, 0x1457, 0xe080, 0xbd9e, 0x1, 0x1);
        gbc.writeMem(0x2839, { 0x7e });
        gbc.writeMem(0xbd9e, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xff44, gbc.sp());
        EXPECT(0x283a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbd9e));
        // 7E 03D3
        gbc.setState(0x6005, 0x9430, 0xdd60, 0xe1ca, 0x56ec, 0x31e0, 0x1, 0x0);
        gbc.writeMem(0x31e0, { 0x64 });
        gbc.writeMem(0x6005, { 0x7e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9430, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03D4
        gbc.setState(0x1415, 0x7389, 0xe4c0, 0x594, 0x26aa, 0xaa0a, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0x7e });
        gbc.writeMem(0xaa0a, { 0x2d });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7389, gbc.sp());
        EXPECT(0x1416, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xaa0a));
        // 7E 03D5
        gbc.setState(0x9811, 0xb249, 0x8b30, 0xe36c, 0x139, 0x7256, 0x1, 0x1);
        gbc.writeMem(0x7256, { 0x8a });
        gbc.writeMem(0x9811, { 0x7e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb249, gbc.sp());
        EXPECT(0x9812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x9811));
        // 7E 03D6
        gbc.setState(0xdd21, 0xcb08, 0xb3f0, 0x9f83, 0xc2d4, 0x7d68, 0x0, 0x0);
        gbc.writeMem(0x7d68, { 0xb });
        gbc.writeMem(0xdd21, { 0x7e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xcb08, gbc.sp());
        EXPECT(0xdd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdd21));
        // 7E 03D7
        gbc.setState(0xe8cd, 0x880f, 0x3e20, 0x2f23, 0x1aef, 0x2d04, 0x1, 0x1);
        gbc.writeMem(0x2d04, { 0x74 });
        gbc.writeMem(0xe8cd, { 0x7e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x880f, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe8cd));
        // 7E 03D8
        gbc.setState(0xc869, 0x3518, 0x620, 0xa364, 0x6015, 0x3e08, 0x0, 0x1);
        gbc.writeMem(0x3e08, { 0xb8 });
        gbc.writeMem(0xc869, { 0x7e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3518, gbc.sp());
        EXPECT(0xc86a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc869));
        // 7E 03DA
        gbc.setState(0x7a1, 0x9b3d, 0x4ae0, 0xcb63, 0xe42d, 0x9b5, 0x1, 0x0);
        gbc.writeMem(0x7a1, { 0x7e });
        gbc.writeMem(0x9b5, { 0x2 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9b3d, gbc.sp());
        EXPECT(0x7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7E 03DB
        gbc.setState(0x4870, 0xcdcd, 0xec10, 0x9f4c, 0x7bfd, 0x6234, 0x0, 0x0);
        gbc.writeMem(0x4870, { 0x7e });
        gbc.writeMem(0x6234, { 0x44 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcdcd, gbc.sp());
        EXPECT(0x4871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03DC
        gbc.setState(0xdc8a, 0x2dd6, 0xadd0, 0x9200, 0xe51f, 0x12b1, 0x1, 0x0);
        gbc.writeMem(0x12b1, { 0x8d });
        gbc.writeMem(0xdc8a, { 0x7e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x2dd6, gbc.sp());
        EXPECT(0xdc8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xdc8a));
        // 7E 03DD
        gbc.setState(0xc5c3, 0xe156, 0xca60, 0x38cd, 0x24fc, 0x77ed, 0x0, 0x0);
        gbc.writeMem(0x77ed, { 0xf2 });
        gbc.writeMem(0xc5c3, { 0x7e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe156, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xc5c3));
        // 7E 03DE
        gbc.setState(0xe8ab, 0x1a13, 0x7480, 0x2896, 0x9e82, 0x7053, 0x1, 0x1);
        gbc.writeMem(0x7053, { 0xda });
        gbc.writeMem(0xe8ab, { 0x7e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1a13, gbc.sp());
        EXPECT(0xe8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xe8ab));
        // 7E 03DF
        gbc.setState(0x85a4, 0xdadd, 0x1480, 0xa5cc, 0xc363, 0x3da9, 0x1, 0x0);
        gbc.writeMem(0x3da9, { 0xbe });
        gbc.writeMem(0x85a4, { 0x7e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xdadd, gbc.sp());
        EXPECT(0x85a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x85a4));
        // 7E 03E0
        gbc.setState(0x52f4, 0x62ce, 0x50f0, 0x5d44, 0x1121, 0x57b8, 0x1, 0x1);
        gbc.writeMem(0x52f4, { 0x7e });
        gbc.writeMem(0x57b8, { 0x89 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x62ce, gbc.sp());
        EXPECT(0x52f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7E 03E1
        gbc.setState(0x9945, 0x7d8e, 0xf10, 0x3bf9, 0x9021, 0x887c, 0x1, 0x0);
        gbc.writeMem(0x887c, { 0xbb });
        gbc.writeMem(0x9945, { 0x7e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7d8e, gbc.sp());
        EXPECT(0x9946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x887c));
        EXPECT(0x7e, gbc.readMem(0x9945));
        // 7E 03E2
        gbc.setState(0xcb1, 0x3382, 0x380, 0xdebd, 0xb714, 0xd4ba, 0x0, 0x0);
        gbc.writeMem(0xcb1, { 0x7e });
        gbc.writeMem(0xd4ba, { 0x7b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3382, gbc.sp());
        EXPECT(0xcb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xd4ba));
        // 7E 03E3
        gbc.setState(0x3891, 0x978a, 0x4640, 0x82f9, 0x1095, 0xbe14, 0x1, 0x1);
        gbc.writeMem(0x3891, { 0x7e });
        gbc.writeMem(0xbe14, { 0xb2 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x978a, gbc.sp());
        EXPECT(0x3892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xbe14));
        // 7E 03E4
        gbc.setState(0x8c62, 0x4ac5, 0xad10, 0xeb4, 0x3dc1, 0x3fd6, 0x1, 0x0);
        gbc.writeMem(0x3fd6, { 0xd8 });
        gbc.writeMem(0x8c62, { 0x7e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4ac5, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8c62));
        // 7E 03E5
        gbc.setState(0x6680, 0x7634, 0x68b0, 0xab18, 0x4ef0, 0xfd6c, 0x0, 0x0);
        gbc.writeMem(0x6680, { 0x7e });
        gbc.writeMem(0xfd6c, { 0x32 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7634, gbc.sp());
        EXPECT(0x6681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0xfd6c));
        // 7E 03E6
        gbc.setState(0xbf6f, 0x6ad2, 0xf110, 0x8e50, 0x9865, 0x8028, 0x0, 0x0);
        gbc.writeMem(0x8028, { 0x8c });
        gbc.writeMem(0xbf6f, { 0x7e });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6ad2, gbc.sp());
        EXPECT(0xbf70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8028));
        EXPECT(0x7e, gbc.readMem(0xbf6f));
    }
