    TEST(gbcemu, opcode_cb_2c) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 2C 0000
        gbc.setState(0xd98, 0xd225, 0xe0, 0x7b08, 0x7e0f, 0x8ecc, 0x1, 0x1);
        gbc.writeMem(0xd98, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd225, gbc.sp());
        EXPECT(0xd9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0001
        gbc.setState(0x70c8, 0x9f67, 0x5010, 0xea8f, 0x788a, 0xcdd8, 0x1, 0x1);
        gbc.writeMem(0x70c8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9f67, gbc.sp());
        EXPECT(0x70ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0002
        gbc.setState(0x2730, 0xc3e8, 0x2ca0, 0x9b6a, 0x2397, 0xa9dd, 0x0, 0x1);
        gbc.writeMem(0x2730, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc3e8, gbc.sp());
        EXPECT(0x2732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0004
        gbc.setState(0xc296, 0x9988, 0x6f00, 0x1f2, 0x27a0, 0xf73b, 0x0, 0x1);
        gbc.writeMem(0xc296, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9988, gbc.sp());
        EXPECT(0xc298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc296));
        EXPECT(0x2c, gbc.readMem(0xc297));
        // CB 2C 0005
        gbc.setState(0x9565, 0x8bfb, 0xb720, 0x54da, 0xd782, 0xebd4, 0x1, 0x0);
        gbc.writeMem(0x9565, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x8bfb, gbc.sp());
        EXPECT(0x9567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9565));
        EXPECT(0x2c, gbc.readMem(0x9566));
        // CB 2C 0006
        gbc.setState(0x37fb, 0x7619, 0xd4b0, 0x73f7, 0xa2ae, 0xfa94, 0x0, 0x0);
        gbc.writeMem(0x37fb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7619, gbc.sp());
        EXPECT(0x37fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0007
        gbc.setState(0xd10e, 0x9969, 0x4860, 0xa5fe, 0xdf85, 0x5868, 0x0, 0x1);
        gbc.writeMem(0xd10e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9969, gbc.sp());
        EXPECT(0xd110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10e));
        EXPECT(0x2c, gbc.readMem(0xd10f));
        // CB 2C 0008
        gbc.setState(0x8199, 0x14f0, 0x9e30, 0xc36e, 0x5b8b, 0xde96, 0x1, 0x0);
        gbc.writeMem(0x8199, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x14f0, gbc.sp());
        EXPECT(0x819b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8199));
        EXPECT(0x2c, gbc.readMem(0x819a));
        // CB 2C 000A
        gbc.setState(0x21a0, 0x6d95, 0xdde0, 0xc13b, 0xef92, 0x5457, 0x1, 0x0);
        gbc.writeMem(0x21a0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x6d95, gbc.sp());
        EXPECT(0x21a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 000B
        gbc.setState(0x1064, 0xdfc7, 0xbe00, 0xe329, 0x287a, 0xba7c, 0x0, 0x1);
        gbc.writeMem(0x1064, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xdfc7, gbc.sp());
        EXPECT(0x1066, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 000C
        gbc.setState(0x1bd5, 0xdbe5, 0xecc0, 0xfc67, 0x5790, 0xe905, 0x1, 0x0);
        gbc.writeMem(0x1bd5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0x1bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 000D
        gbc.setState(0x26d0, 0xcfce, 0xc5b0, 0x55c8, 0xaeab, 0x4116, 0x0, 0x1);
        gbc.writeMem(0x26d0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x26d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 000E
        gbc.setState(0x9a36, 0x815e, 0x22e0, 0x7b59, 0x64a0, 0x3f2f, 0x1, 0x0);
        gbc.writeMem(0x9a36, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x815e, gbc.sp());
        EXPECT(0x9a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a36));
        EXPECT(0x2c, gbc.readMem(0x9a37));
        // CB 2C 000F
        gbc.setState(0xed26, 0xafca, 0xf600, 0x8817, 0x9571, 0x3bd1, 0x1, 0x0);
        gbc.writeMem(0xed26, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xafca, gbc.sp());
        EXPECT(0xed28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed26));
        EXPECT(0x2c, gbc.readMem(0xed27));
        // CB 2C 0010
        gbc.setState(0xeabc, 0x7c0a, 0xbf90, 0xf212, 0x5aca, 0x3582, 0x1, 0x1);
        gbc.writeMem(0xeabc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7c0a, gbc.sp());
        EXPECT(0xeabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabc));
        EXPECT(0x2c, gbc.readMem(0xeabd));
        // CB 2C 0011
        gbc.setState(0xa756, 0x52b9, 0xa300, 0xbb34, 0x6b03, 0x2b6, 0x1, 0x1);
        gbc.writeMem(0xa756, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x52b9, gbc.sp());
        EXPECT(0xa758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa756));
        EXPECT(0x2c, gbc.readMem(0xa757));
        // CB 2C 0012
        gbc.setState(0x1a70, 0xb1fe, 0xe040, 0x117, 0xcc69, 0xadc0, 0x0, 0x1);
        gbc.writeMem(0x1a70, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb1fe, gbc.sp());
        EXPECT(0x1a72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0013
        gbc.setState(0x7dd7, 0x1950, 0x3b60, 0x4fca, 0xb6fa, 0xfe97, 0x0, 0x0);
        gbc.writeMem(0x7dd7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0x7dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0014
        gbc.setState(0x17bd, 0xe662, 0x43d0, 0x7c93, 0x81ee, 0x8d06, 0x1, 0x1);
        gbc.writeMem(0x17bd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe662, gbc.sp());
        EXPECT(0x17bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0015
        gbc.setState(0xc455, 0xe158, 0x50c0, 0x4599, 0x9947, 0xadcc, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe158, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0x2c, gbc.readMem(0xc456));
        // CB 2C 0016
        gbc.setState(0x24f3, 0x119e, 0xe260, 0x4766, 0x76f5, 0x48f3, 0x0, 0x0);
        gbc.writeMem(0x24f3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0x24f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0017
        gbc.setState(0x45e1, 0xf4bc, 0x6610, 0x51ad, 0xbd1, 0xc352, 0x1, 0x0);
        gbc.writeMem(0x45e1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xf4bc, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0018
        gbc.setState(0x7e1d, 0x5adb, 0x4190, 0xa268, 0xb936, 0xcb2a, 0x1, 0x0);
        gbc.writeMem(0x7e1d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x5adb, gbc.sp());
        EXPECT(0x7e1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0019
        gbc.setState(0x827b, 0xc37d, 0x9830, 0xc30a, 0x160b, 0x2e2, 0x0, 0x0);
        gbc.writeMem(0x827b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc37d, gbc.sp());
        EXPECT(0x827d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x827b));
        EXPECT(0x2c, gbc.readMem(0x827c));
        // CB 2C 001A
        gbc.setState(0xb71a, 0x467c, 0x2180, 0x4218, 0x1ac, 0xf6c1, 0x0, 0x0);
        gbc.writeMem(0xb71a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x467c, gbc.sp());
        EXPECT(0xb71c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb71a));
        EXPECT(0x2c, gbc.readMem(0xb71b));
        // CB 2C 001B
        gbc.setState(0xc655, 0x36ed, 0x1c80, 0x3338, 0x1091, 0xa652, 0x0, 0x1);
        gbc.writeMem(0xc655, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x36ed, gbc.sp());
        EXPECT(0xc657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc655));
        EXPECT(0x2c, gbc.readMem(0xc656));
        // CB 2C 001C
        gbc.setState(0x2336, 0x73b0, 0x3690, 0xba8e, 0xc86d, 0x99e8, 0x1, 0x0);
        gbc.writeMem(0x2336, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x73b0, gbc.sp());
        EXPECT(0x2338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 001D
        gbc.setState(0x46ed, 0x65cd, 0xdc10, 0xc076, 0x7d2b, 0x5deb, 0x0, 0x1);
        gbc.writeMem(0x46ed, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x65cd, gbc.sp());
        EXPECT(0x46ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 001F
        gbc.setState(0x67d7, 0xe232, 0x4c50, 0x43c7, 0xfa14, 0xc6f1, 0x1, 0x0);
        gbc.writeMem(0x67d7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe232, gbc.sp());
        EXPECT(0x67d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0020
        gbc.setState(0x4d23, 0x7141, 0x4600, 0xbb67, 0x2468, 0x3ad, 0x1, 0x0);
        gbc.writeMem(0x4d23, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7141, gbc.sp());
        EXPECT(0x4d25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0021
        gbc.setState(0xe06a, 0x6273, 0x6150, 0xe033, 0x2739, 0x26c0, 0x0, 0x1);
        gbc.writeMem(0xe06a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6273, gbc.sp());
        EXPECT(0xe06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06a));
        EXPECT(0x2c, gbc.readMem(0xe06b));
        // CB 2C 0022
        gbc.setState(0x77b9, 0x30a7, 0x31b0, 0x6d86, 0x7fda, 0x7161, 0x0, 0x0);
        gbc.writeMem(0x77b9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x30a7, gbc.sp());
        EXPECT(0x77bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0023
        gbc.setState(0xbc51, 0x80aa, 0xd560, 0x3367, 0x654e, 0x58d3, 0x0, 0x1);
        gbc.writeMem(0xbc51, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x80aa, gbc.sp());
        EXPECT(0xbc53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc51));
        EXPECT(0x2c, gbc.readMem(0xbc52));
        // CB 2C 0024
        gbc.setState(0x4384, 0x9be1, 0x7c80, 0x16a0, 0x116c, 0x70ff, 0x0, 0x1);
        gbc.writeMem(0x4384, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9be1, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0026
        gbc.setState(0x5947, 0x228d, 0x5600, 0xafba, 0x27ee, 0xf9c, 0x1, 0x1);
        gbc.writeMem(0x5947, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x228d, gbc.sp());
        EXPECT(0x5949, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0027
        gbc.setState(0x9304, 0x4fe5, 0x1660, 0xfb78, 0x2053, 0x54a9, 0x1, 0x1);
        gbc.writeMem(0x9304, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x9306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9304));
        EXPECT(0x2c, gbc.readMem(0x9305));
        // CB 2C 0029
        gbc.setState(0xcaf9, 0xbcd7, 0x4780, 0xbd68, 0xc8b3, 0x5567, 0x0, 0x0);
        gbc.writeMem(0xcaf9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0xcafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaf9));
        EXPECT(0x2c, gbc.readMem(0xcafa));
        // CB 2C 002A
        gbc.setState(0x3252, 0x433f, 0xd330, 0xc31b, 0x74a1, 0xe1ef, 0x0, 0x1);
        gbc.writeMem(0x3252, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x433f, gbc.sp());
        EXPECT(0x3254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 002B
        gbc.setState(0xa0aa, 0x9305, 0x2450, 0x87a9, 0xd5b4, 0xeec7, 0x1, 0x1);
        gbc.writeMem(0xa0aa, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9305, gbc.sp());
        EXPECT(0xa0ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0aa));
        EXPECT(0x2c, gbc.readMem(0xa0ab));
        // CB 2C 002C
        gbc.setState(0xa871, 0xfab0, 0x8d70, 0xcdc1, 0xfdbe, 0x4a65, 0x0, 0x0);
        gbc.writeMem(0xa871, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfab0, gbc.sp());
        EXPECT(0xa873, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa871));
        EXPECT(0x2c, gbc.readMem(0xa872));
        // CB 2C 002D
        gbc.setState(0xd35a, 0x3bf5, 0xf350, 0x862d, 0xc8b5, 0x8340, 0x0, 0x1);
        gbc.writeMem(0xd35a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3bf5, gbc.sp());
        EXPECT(0xd35c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35a));
        EXPECT(0x2c, gbc.readMem(0xd35b));
        // CB 2C 002E
        gbc.setState(0xa263, 0xc8e6, 0x3670, 0x305a, 0x94b3, 0x2dc0, 0x1, 0x1);
        gbc.writeMem(0xa263, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc8e6, gbc.sp());
        EXPECT(0xa265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa263));
        EXPECT(0x2c, gbc.readMem(0xa264));
        // CB 2C 002F
        gbc.setState(0x6d14, 0xb3a5, 0xba60, 0x875e, 0x4493, 0xcaa8, 0x0, 0x1);
        gbc.writeMem(0x6d14, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb3a5, gbc.sp());
        EXPECT(0x6d16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0030
        gbc.setState(0x1e7, 0x5c86, 0x5970, 0x3239, 0x2582, 0x92c1, 0x1, 0x1);
        gbc.writeMem(0x1e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5c86, gbc.sp());
        EXPECT(0x1e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0031
        gbc.setState(0x7ce, 0xd50e, 0xf370, 0x99b0, 0x3cf2, 0x1fb1, 0x1, 0x0);
        gbc.writeMem(0x7ce, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xd50e, gbc.sp());
        EXPECT(0x7d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0032
        gbc.setState(0x2275, 0x2a11, 0xa730, 0x60f4, 0x2a97, 0x47a, 0x0, 0x1);
        gbc.writeMem(0x2275, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x2a11, gbc.sp());
        EXPECT(0x2277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0034
        gbc.setState(0x633c, 0x516e, 0x930, 0xe34f, 0x5819, 0xfcc7, 0x1, 0x1);
        gbc.writeMem(0x633c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x516e, gbc.sp());
        EXPECT(0x633e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0035
        gbc.setState(0xd78e, 0x9b9a, 0xfee0, 0x69c1, 0x85e8, 0xf281, 0x1, 0x1);
        gbc.writeMem(0xd78e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9b9a, gbc.sp());
        EXPECT(0xd790, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd78e));
        EXPECT(0x2c, gbc.readMem(0xd78f));
        // CB 2C 0037
        gbc.setState(0xea75, 0xb5c7, 0x1af0, 0xd036, 0xc77e, 0xee29, 0x0, 0x1);
        gbc.writeMem(0xea75, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb5c7, gbc.sp());
        EXPECT(0xea77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea75));
        EXPECT(0x2c, gbc.readMem(0xea76));
        // CB 2C 0038
        gbc.setState(0x184c, 0xae24, 0x72f0, 0xc151, 0x736, 0x1763, 0x0, 0x1);
        gbc.writeMem(0x184c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xae24, gbc.sp());
        EXPECT(0x184e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0039
        gbc.setState(0xe0b4, 0x3c16, 0xfac0, 0xc596, 0x8e54, 0xa1a, 0x0, 0x1);
        gbc.writeMem(0xe0b4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3c16, gbc.sp());
        EXPECT(0xe0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b4));
        EXPECT(0x2c, gbc.readMem(0xe0b5));
        // CB 2C 003A
        gbc.setState(0x633b, 0xfc09, 0x2d70, 0xc3e4, 0x6548, 0x7ffb, 0x0, 0x0);
        gbc.writeMem(0x633b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc09, gbc.sp());
        EXPECT(0x633d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 003B
        gbc.setState(0x9ed6, 0x9cff, 0x91b0, 0xc130, 0xa1b3, 0x8418, 0x0, 0x1);
        gbc.writeMem(0x9ed6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9cff, gbc.sp());
        EXPECT(0x9ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed6));
        EXPECT(0x2c, gbc.readMem(0x9ed7));
        // CB 2C 003C
        gbc.setState(0x1c90, 0xa2f0, 0x7d60, 0xc7ca, 0xa164, 0x41c3, 0x1, 0x0);
        gbc.writeMem(0x1c90, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa2f0, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 003D
        gbc.setState(0xc14d, 0xcd9e, 0x1e00, 0x6699, 0x8430, 0xf2d7, 0x1, 0x1);
        gbc.writeMem(0xc14d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xcd9e, gbc.sp());
        EXPECT(0xc14f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc14d));
        EXPECT(0x2c, gbc.readMem(0xc14e));
        // CB 2C 003E
        gbc.setState(0x9851, 0x4080, 0xfa80, 0xffb4, 0x156, 0x15bd, 0x0, 0x1);
        gbc.writeMem(0x9851, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4080, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9851));
        EXPECT(0x2c, gbc.readMem(0x9852));
        // CB 2C 003F
        gbc.setState(0xe8f1, 0x4450, 0x3440, 0xd073, 0xd65c, 0x3d82, 0x1, 0x0);
        gbc.writeMem(0xe8f1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4450, gbc.sp());
        EXPECT(0xe8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f1));
        EXPECT(0x2c, gbc.readMem(0xe8f2));
        // CB 2C 0040
        gbc.setState(0x9c7b, 0xa154, 0xc1d0, 0x1a1e, 0xb9c4, 0x3016, 0x1, 0x0);
        gbc.writeMem(0x9c7b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa154, gbc.sp());
        EXPECT(0x9c7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7b));
        EXPECT(0x2c, gbc.readMem(0x9c7c));
        // CB 2C 0041
        gbc.setState(0x6408, 0x9f21, 0x62b0, 0xf2e4, 0x96e1, 0xea5a, 0x1, 0x0);
        gbc.writeMem(0x6408, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9f21, gbc.sp());
        EXPECT(0x640a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0042
        gbc.setState(0x2a6f, 0xa092, 0xc2e0, 0xcd6a, 0x9170, 0x5c5c, 0x0, 0x1);
        gbc.writeMem(0x2a6f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa092, gbc.sp());
        EXPECT(0x2a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0043
        gbc.setState(0x7a38, 0x8680, 0x6fa0, 0x328e, 0x31c8, 0x7311, 0x0, 0x1);
        gbc.writeMem(0x7a38, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8680, gbc.sp());
        EXPECT(0x7a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0044
        gbc.setState(0x5c24, 0xaccc, 0x3520, 0xe8c3, 0x2b40, 0xfdb0, 0x1, 0x0);
        gbc.writeMem(0x5c24, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xaccc, gbc.sp());
        EXPECT(0x5c26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0045
        gbc.setState(0xdd73, 0xa03f, 0x9f80, 0x5d6e, 0x9e9f, 0xe01d, 0x0, 0x0);
        gbc.writeMem(0xdd73, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa03f, gbc.sp());
        EXPECT(0xdd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd73));
        EXPECT(0x2c, gbc.readMem(0xdd74));
        // CB 2C 0046
        gbc.setState(0xb207, 0xd2cf, 0x2670, 0xf4e, 0xbae5, 0x8df5, 0x0, 0x1);
        gbc.writeMem(0xb207, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd2cf, gbc.sp());
        EXPECT(0xb209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb207));
        EXPECT(0x2c, gbc.readMem(0xb208));
        // CB 2C 0047
        gbc.setState(0xdd51, 0x2638, 0x6720, 0x1650, 0x41b5, 0x2fc4, 0x0, 0x0);
        gbc.writeMem(0xdd51, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x2638, gbc.sp());
        EXPECT(0xdd53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd51));
        EXPECT(0x2c, gbc.readMem(0xdd52));
        // CB 2C 0048
        gbc.setState(0x766c, 0x147d, 0x7d30, 0x75f3, 0x85a3, 0x3803, 0x1, 0x1);
        gbc.writeMem(0x766c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x147d, gbc.sp());
        EXPECT(0x766e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0049
        gbc.setState(0x4c7, 0xec55, 0x21b0, 0x261b, 0x90a, 0xa16d, 0x0, 0x0);
        gbc.writeMem(0x4c7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xec55, gbc.sp());
        EXPECT(0x4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 004A
        gbc.setState(0xc8bb, 0x28fe, 0xba20, 0xa6ed, 0xc37f, 0xe242, 0x1, 0x0);
        gbc.writeMem(0xc8bb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x28fe, gbc.sp());
        EXPECT(0xc8bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8bb));
        EXPECT(0x2c, gbc.readMem(0xc8bc));
        // CB 2C 004B
        gbc.setState(0x90f0, 0x755b, 0x4230, 0x7888, 0xbbfb, 0x7965, 0x0, 0x0);
        gbc.writeMem(0x90f0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x755b, gbc.sp());
        EXPECT(0x90f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f0));
        EXPECT(0x2c, gbc.readMem(0x90f1));
        // CB 2C 004D
        gbc.setState(0x162d, 0xd8ac, 0x5b10, 0xc894, 0xed3b, 0xfadf, 0x1, 0x1);
        gbc.writeMem(0x162d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd8ac, gbc.sp());
        EXPECT(0x162f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 004E
        gbc.setState(0xd4a, 0xe556, 0xae10, 0xe6d3, 0x5095, 0x582b, 0x0, 0x1);
        gbc.writeMem(0xd4a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe556, gbc.sp());
        EXPECT(0xd4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 004F
        gbc.setState(0xcda3, 0x4675, 0x170, 0x4549, 0x1637, 0x89c3, 0x0, 0x0);
        gbc.writeMem(0xcda3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4675, gbc.sp());
        EXPECT(0xcda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda3));
        EXPECT(0x2c, gbc.readMem(0xcda4));
        // CB 2C 0050
        gbc.setState(0x350f, 0x1400, 0xf240, 0x3a22, 0x3510, 0x9b97, 0x1, 0x0);
        gbc.writeMem(0x350f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1400, gbc.sp());
        EXPECT(0x3511, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0051
        gbc.setState(0x3b5e, 0xe7b5, 0x1e80, 0x7bc7, 0x8992, 0x3764, 0x1, 0x0);
        gbc.writeMem(0x3b5e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe7b5, gbc.sp());
        EXPECT(0x3b60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0052
        gbc.setState(0xe597, 0x8e69, 0x1be0, 0xeb56, 0x428f, 0xbe38, 0x1, 0x1);
        gbc.writeMem(0xe597, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8e69, gbc.sp());
        EXPECT(0xe599, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe597));
        EXPECT(0x2c, gbc.readMem(0xe598));
        // CB 2C 0053
        gbc.setState(0x15e9, 0x3ea, 0xfa50, 0xb419, 0xfc8c, 0xfdba, 0x1, 0x0);
        gbc.writeMem(0x15e9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3ea, gbc.sp());
        EXPECT(0x15eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0054
        gbc.setState(0xc31a, 0x138, 0x84a0, 0xccd3, 0x7116, 0x2e3c, 0x0, 0x1);
        gbc.writeMem(0xc31a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x138, gbc.sp());
        EXPECT(0xc31c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc31a));
        EXPECT(0x2c, gbc.readMem(0xc31b));
        // CB 2C 0055
        gbc.setState(0x1a87, 0xd6c0, 0x9410, 0xe6e8, 0x617b, 0xe823, 0x1, 0x1);
        gbc.writeMem(0x1a87, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd6c0, gbc.sp());
        EXPECT(0x1a89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0056
        gbc.setState(0x7a03, 0x8ac2, 0x4cb0, 0x57bd, 0xd94c, 0xcd89, 0x1, 0x0);
        gbc.writeMem(0x7a03, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8ac2, gbc.sp());
        EXPECT(0x7a05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0057
        gbc.setState(0x6334, 0x3b58, 0xfbe0, 0x44ce, 0x31a9, 0xf9b7, 0x1, 0x1);
        gbc.writeMem(0x6334, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3b58, gbc.sp());
        EXPECT(0x6336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0058
        gbc.setState(0x382a, 0xd4f, 0xf9a0, 0x1f71, 0xa040, 0xe579, 0x1, 0x0);
        gbc.writeMem(0x382a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd4f, gbc.sp());
        EXPECT(0x382c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0059
        gbc.setState(0x885d, 0x16bb, 0x5460, 0xdc8e, 0x6acc, 0xed01, 0x1, 0x1);
        gbc.writeMem(0x885d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x16bb, gbc.sp());
        EXPECT(0x885f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x885d));
        EXPECT(0x2c, gbc.readMem(0x885e));
        // CB 2C 005A
        gbc.setState(0xed, 0x9405, 0x2550, 0xeab4, 0x6659, 0x311c, 0x0, 0x0);
        gbc.writeMem(0xed, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9405, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 005B
        gbc.setState(0x1a98, 0xb81c, 0x7880, 0x416f, 0xb34a, 0xf74b, 0x0, 0x0);
        gbc.writeMem(0x1a98, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb81c, gbc.sp());
        EXPECT(0x1a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 005C
        gbc.setState(0x450d, 0x94f, 0xb240, 0x2a77, 0x4c00, 0x78d9, 0x1, 0x1);
        gbc.writeMem(0x450d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x94f, gbc.sp());
        EXPECT(0x450f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 005D
        gbc.setState(0xd8b2, 0x3ca8, 0x73c0, 0x3b0f, 0xe4e2, 0xe5cf, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3ca8, gbc.sp());
        EXPECT(0xd8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b2));
        EXPECT(0x2c, gbc.readMem(0xd8b3));
        // CB 2C 005E
        gbc.setState(0xe808, 0x96bc, 0x1a90, 0xe163, 0xc4c8, 0xf1b0, 0x1, 0x0);
        gbc.writeMem(0xe808, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x96bc, gbc.sp());
        EXPECT(0xe80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe808));
        EXPECT(0x2c, gbc.readMem(0xe809));
        // CB 2C 005F
        gbc.setState(0xbbcc, 0x85e6, 0x6fc0, 0xe221, 0xc257, 0x3cca, 0x0, 0x0);
        gbc.writeMem(0xbbcc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x85e6, gbc.sp());
        EXPECT(0xbbce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbcc));
        EXPECT(0x2c, gbc.readMem(0xbbcd));
        // CB 2C 0060
        gbc.setState(0x3c2e, 0xdc70, 0xfc60, 0x897c, 0x4235, 0xcc52, 0x1, 0x1);
        gbc.writeMem(0x3c2e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdc70, gbc.sp());
        EXPECT(0x3c30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0061
        gbc.setState(0xab4f, 0x41, 0xc670, 0x2826, 0xed28, 0x8831, 0x0, 0x0);
        gbc.writeMem(0xab4f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x41, gbc.sp());
        EXPECT(0xab51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab4f));
        EXPECT(0x2c, gbc.readMem(0xab50));
        // CB 2C 0062
        gbc.setState(0xa77, 0xf13, 0xf5d0, 0x4876, 0x5ccd, 0x5f44, 0x1, 0x0);
        gbc.writeMem(0xa77, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf13, gbc.sp());
        EXPECT(0xa79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0063
        gbc.setState(0xc239, 0x2742, 0x5480, 0x62ce, 0xf374, 0x8fe8, 0x1, 0x0);
        gbc.writeMem(0xc239, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2742, gbc.sp());
        EXPECT(0xc23b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc239));
        EXPECT(0x2c, gbc.readMem(0xc23a));
        // CB 2C 0064
        gbc.setState(0xba5a, 0xef89, 0xa790, 0xe368, 0x456a, 0xbbe, 0x0, 0x0);
        gbc.writeMem(0xba5a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xef89, gbc.sp());
        EXPECT(0xba5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba5a));
        EXPECT(0x2c, gbc.readMem(0xba5b));
        // CB 2C 0065
        gbc.setState(0x839c, 0x635a, 0x1a10, 0xd07f, 0x2f7f, 0x661e, 0x1, 0x1);
        gbc.writeMem(0x839c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x635a, gbc.sp());
        EXPECT(0x839e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x839c));
        EXPECT(0x2c, gbc.readMem(0x839d));
        // CB 2C 0066
        gbc.setState(0x3591, 0xfc2b, 0xabd0, 0xb2d6, 0xdd18, 0xf778, 0x0, 0x0);
        gbc.writeMem(0x3591, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfc2b, gbc.sp());
        EXPECT(0x3593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0067
        gbc.setState(0xd5ca, 0x8e81, 0xf320, 0x1c74, 0x31c6, 0xc005, 0x0, 0x1);
        gbc.writeMem(0xd5ca, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8e81, gbc.sp());
        EXPECT(0xd5cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5ca));
        EXPECT(0x2c, gbc.readMem(0xd5cb));
        // CB 2C 0068
        gbc.setState(0xb3a4, 0xacfb, 0x6a00, 0xaf6f, 0xa575, 0x9b44, 0x1, 0x1);
        gbc.writeMem(0xb3a4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xacfb, gbc.sp());
        EXPECT(0xb3a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3a4));
        EXPECT(0x2c, gbc.readMem(0xb3a5));
        // CB 2C 0069
        gbc.setState(0xa764, 0xe707, 0xe310, 0x4cd, 0xb7bb, 0x7cb2, 0x0, 0x0);
        gbc.writeMem(0xa764, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe707, gbc.sp());
        EXPECT(0xa766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa764));
        EXPECT(0x2c, gbc.readMem(0xa765));
        // CB 2C 006A
        gbc.setState(0x2f54, 0x9c16, 0x4760, 0xf76, 0x9f44, 0x284f, 0x0, 0x1);
        gbc.writeMem(0x2f54, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9c16, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 006B
        gbc.setState(0x516f, 0xec97, 0xde00, 0x67b, 0x8bc8, 0x8b13, 0x0, 0x1);
        gbc.writeMem(0x516f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xec97, gbc.sp());
        EXPECT(0x5171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 006C
        gbc.setState(0xc898, 0xc88, 0xc110, 0xf656, 0x5ba, 0x8d98, 0x1, 0x1);
        gbc.writeMem(0xc898, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc88, gbc.sp());
        EXPECT(0xc89a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc898));
        EXPECT(0x2c, gbc.readMem(0xc899));
        // CB 2C 006D
        gbc.setState(0x953, 0x2bd1, 0x9380, 0x52a, 0xd0ca, 0xc5da, 0x1, 0x0);
        gbc.writeMem(0x953, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 006E
        gbc.setState(0xca42, 0xdc83, 0x15d0, 0xd426, 0xf033, 0x87c2, 0x0, 0x1);
        gbc.writeMem(0xca42, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xdc83, gbc.sp());
        EXPECT(0xca44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca42));
        EXPECT(0x2c, gbc.readMem(0xca43));
        // CB 2C 006F
        gbc.setState(0x7e1e, 0x74, 0x8f0, 0x3c43, 0x4f23, 0xd1d9, 0x0, 0x1);
        gbc.writeMem(0x7e1e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x74, gbc.sp());
        EXPECT(0x7e20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0070
        gbc.setState(0xc304, 0x1736, 0x6520, 0x8605, 0xf358, 0x1a2d, 0x1, 0x1);
        gbc.writeMem(0xc304, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0xc306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc304));
        EXPECT(0x2c, gbc.readMem(0xc305));
        // CB 2C 0071
        gbc.setState(0xbeed, 0x5179, 0x5720, 0x6d82, 0xee84, 0xf174, 0x0, 0x1);
        gbc.writeMem(0xbeed, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5179, gbc.sp());
        EXPECT(0xbeef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbeed));
        EXPECT(0x2c, gbc.readMem(0xbeee));
        // CB 2C 0072
        gbc.setState(0x32e1, 0xd39e, 0x5bd0, 0x9d30, 0x3017, 0x51dc, 0x1, 0x0);
        gbc.writeMem(0x32e1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd39e, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0073
        gbc.setState(0x6d26, 0xcd90, 0x51d0, 0xfb04, 0x239b, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0x6d26, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcd90, gbc.sp());
        EXPECT(0x6d28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0074
        gbc.setState(0xb82f, 0x902e, 0xe100, 0x353, 0x7a2d, 0x27d5, 0x0, 0x0);
        gbc.writeMem(0xb82f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x902e, gbc.sp());
        EXPECT(0xb831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82f));
        EXPECT(0x2c, gbc.readMem(0xb830));
        // CB 2C 0075
        gbc.setState(0xe942, 0x67d8, 0x2f80, 0x7b95, 0x35c5, 0xee3, 0x0, 0x1);
        gbc.writeMem(0xe942, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x67d8, gbc.sp());
        EXPECT(0xe944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe942));
        EXPECT(0x2c, gbc.readMem(0xe943));
        // CB 2C 0076
        gbc.setState(0x6771, 0x6b33, 0xac00, 0xdd32, 0x167e, 0x47bb, 0x1, 0x1);
        gbc.writeMem(0x6771, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6b33, gbc.sp());
        EXPECT(0x6773, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0077
        gbc.setState(0x8ac1, 0x8c01, 0x5e0, 0x350a, 0x7e44, 0xb1f9, 0x1, 0x1);
        gbc.writeMem(0x8ac1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8c01, gbc.sp());
        EXPECT(0x8ac3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac1));
        EXPECT(0x2c, gbc.readMem(0x8ac2));
        // CB 2C 0079
        gbc.setState(0x3896, 0x9c1a, 0x70c0, 0x7c00, 0xafea, 0x53d4, 0x0, 0x1);
        gbc.writeMem(0x3896, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9c1a, gbc.sp());
        EXPECT(0x3898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 007A
        gbc.setState(0x6f0a, 0xe3bd, 0x1390, 0xa8f5, 0xaf4a, 0x9503, 0x1, 0x0);
        gbc.writeMem(0x6f0a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe3bd, gbc.sp());
        EXPECT(0x6f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 007B
        gbc.setState(0x4e7d, 0xa157, 0xcaf0, 0xe534, 0x4791, 0x8211, 0x0, 0x0);
        gbc.writeMem(0x4e7d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa157, gbc.sp());
        EXPECT(0x4e7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 007C
        gbc.setState(0x778, 0xeabe, 0xa800, 0x9e5c, 0xcb73, 0xf0b5, 0x0, 0x1);
        gbc.writeMem(0x778, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xeabe, gbc.sp());
        EXPECT(0x77a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 007D
        gbc.setState(0x8a4c, 0x89fd, 0x4790, 0xe1b3, 0x6dd3, 0xac6e, 0x0, 0x1);
        gbc.writeMem(0x8a4c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0x8a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4c));
        EXPECT(0x2c, gbc.readMem(0x8a4d));
        // CB 2C 007E
        gbc.setState(0x4b62, 0x984c, 0x4070, 0x4369, 0x7760, 0x9d68, 0x0, 0x0);
        gbc.writeMem(0x4b62, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x984c, gbc.sp());
        EXPECT(0x4b64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 007F
        gbc.setState(0x5821, 0xaf3c, 0xa1a0, 0x1f91, 0x6de5, 0xd69f, 0x1, 0x0);
        gbc.writeMem(0x5821, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xaf3c, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0080
        gbc.setState(0x8234, 0x3560, 0xb2c0, 0xe29, 0x4472, 0xb5cb, 0x0, 0x1);
        gbc.writeMem(0x8234, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3560, gbc.sp());
        EXPECT(0x8236, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8234));
        EXPECT(0x2c, gbc.readMem(0x8235));
        // CB 2C 0081
        gbc.setState(0x3549, 0x556e, 0x8b90, 0x1644, 0xeb5f, 0xb920, 0x1, 0x1);
        gbc.writeMem(0x3549, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0x354b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0082
        gbc.setState(0x7e04, 0x6f51, 0x57f0, 0x24f2, 0x50d6, 0xe4aa, 0x1, 0x1);
        gbc.writeMem(0x7e04, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0x7e06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0083
        gbc.setState(0x8c63, 0x7aa1, 0x2940, 0xc70e, 0x5dc0, 0xf9f2, 0x1, 0x0);
        gbc.writeMem(0x8c63, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7aa1, gbc.sp());
        EXPECT(0x8c65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c63));
        EXPECT(0x2c, gbc.readMem(0x8c64));
        // CB 2C 0084
        gbc.setState(0x5b18, 0xba29, 0x60c0, 0x51ee, 0x5d95, 0x60c6, 0x0, 0x1);
        gbc.writeMem(0x5b18, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xba29, gbc.sp());
        EXPECT(0x5b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0085
        gbc.setState(0xd3a9, 0xe260, 0x8d20, 0xb7b3, 0x99bf, 0x1b47, 0x0, 0x0);
        gbc.writeMem(0xd3a9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe260, gbc.sp());
        EXPECT(0xd3ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3a9));
        EXPECT(0x2c, gbc.readMem(0xd3aa));
        // CB 2C 0086
        gbc.setState(0xbaa5, 0xf7b0, 0x6590, 0x973a, 0x55c1, 0xbfbc, 0x0, 0x0);
        gbc.writeMem(0xbaa5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf7b0, gbc.sp());
        EXPECT(0xbaa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa5));
        EXPECT(0x2c, gbc.readMem(0xbaa6));
        // CB 2C 0087
        gbc.setState(0xccb7, 0x52fa, 0x17f0, 0x544, 0x72dd, 0x9056, 0x0, 0x1);
        gbc.writeMem(0xccb7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x52fa, gbc.sp());
        EXPECT(0xccb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccb7));
        EXPECT(0x2c, gbc.readMem(0xccb8));
        // CB 2C 0088
        gbc.setState(0x6d9, 0x20fd, 0xe3d0, 0xaa01, 0x1e72, 0x6f41, 0x1, 0x1);
        gbc.writeMem(0x6d9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x20fd, gbc.sp());
        EXPECT(0x6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0089
        gbc.setState(0xa9d4, 0x9a57, 0x9060, 0x405, 0xfe09, 0xfcf5, 0x1, 0x0);
        gbc.writeMem(0xa9d4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0xa9d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d4));
        EXPECT(0x2c, gbc.readMem(0xa9d5));
        // CB 2C 008A
        gbc.setState(0x1eda, 0x9e57, 0x3800, 0xe615, 0x3a13, 0x134e, 0x0, 0x1);
        gbc.writeMem(0x1eda, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9e57, gbc.sp());
        EXPECT(0x1edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 008B
        gbc.setState(0x7571, 0x34ec, 0x8990, 0x8a89, 0x9dd0, 0x2218, 0x1, 0x0);
        gbc.writeMem(0x7571, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x34ec, gbc.sp());
        EXPECT(0x7573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 008C
        gbc.setState(0xb386, 0xcb7e, 0xe140, 0xb317, 0x958d, 0x8bdb, 0x1, 0x0);
        gbc.writeMem(0xb386, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xcb7e, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb386));
        EXPECT(0x2c, gbc.readMem(0xb387));
        // CB 2C 008D
        gbc.setState(0x203e, 0x1e15, 0xd530, 0x4fb0, 0xfe1d, 0x16f4, 0x0, 0x1);
        gbc.writeMem(0x203e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1e15, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 008E
        gbc.setState(0x2361, 0xb89a, 0x7e30, 0xe88a, 0xeccc, 0xd616, 0x0, 0x0);
        gbc.writeMem(0x2361, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb89a, gbc.sp());
        EXPECT(0x2363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 008F
        gbc.setState(0x78e7, 0x2e0c, 0x6790, 0x862f, 0xa8e, 0xf2df, 0x1, 0x1);
        gbc.writeMem(0x78e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2e0c, gbc.sp());
        EXPECT(0x78e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0090
        gbc.setState(0x9ddc, 0x8d75, 0x7540, 0x1aed, 0xd6c1, 0x27b1, 0x1, 0x1);
        gbc.writeMem(0x9ddc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8d75, gbc.sp());
        EXPECT(0x9dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ddc));
        EXPECT(0x2c, gbc.readMem(0x9ddd));
        // CB 2C 0091
        gbc.setState(0xa29f, 0xb31f, 0xab30, 0xed1a, 0x5eec, 0xfcf5, 0x1, 0x0);
        gbc.writeMem(0xa29f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xb31f, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29f));
        EXPECT(0x2c, gbc.readMem(0xa2a0));
        // CB 2C 0092
        gbc.setState(0x6cc2, 0x8d37, 0x5ac0, 0x26f8, 0xacb1, 0x3385, 0x1, 0x1);
        gbc.writeMem(0x6cc2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8d37, gbc.sp());
        EXPECT(0x6cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0093
        gbc.setState(0x8625, 0x10e9, 0x1c70, 0x2881, 0xa87e, 0xb3f4, 0x1, 0x1);
        gbc.writeMem(0x8625, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x10e9, gbc.sp());
        EXPECT(0x8627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8625));
        EXPECT(0x2c, gbc.readMem(0x8626));
        // CB 2C 0094
        gbc.setState(0xd403, 0xe1f4, 0x70c0, 0xcba5, 0x4760, 0x2f2, 0x1, 0x1);
        gbc.writeMem(0xd403, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xe1f4, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd403));
        EXPECT(0x2c, gbc.readMem(0xd404));
        // CB 2C 0095
        gbc.setState(0xd00b, 0xfaa4, 0x8e90, 0x235e, 0xf55d, 0xb15b, 0x1, 0x1);
        gbc.writeMem(0xd00b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfaa4, gbc.sp());
        EXPECT(0xd00d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00b));
        EXPECT(0x2c, gbc.readMem(0xd00c));
        // CB 2C 0096
        gbc.setState(0x634f, 0x3ce0, 0xf9d0, 0xa19f, 0x996, 0x9c5c, 0x1, 0x1);
        gbc.writeMem(0x634f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3ce0, gbc.sp());
        EXPECT(0x6351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0097
        gbc.setState(0x2034, 0xed0b, 0x9e70, 0x160f, 0x67d6, 0xcd80, 0x0, 0x0);
        gbc.writeMem(0x2034, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x2036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0098
        gbc.setState(0x3168, 0x5045, 0x9460, 0xf8d0, 0x52c9, 0xed24, 0x0, 0x0);
        gbc.writeMem(0x3168, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5045, gbc.sp());
        EXPECT(0x316a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0099
        gbc.setState(0x40a7, 0x5aa4, 0xafc0, 0xadc2, 0xef58, 0xf927, 0x1, 0x0);
        gbc.writeMem(0x40a7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x5aa4, gbc.sp());
        EXPECT(0x40a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 009A
        gbc.setState(0x753e, 0x5733, 0x9610, 0x1028, 0x5b89, 0xe01, 0x0, 0x1);
        gbc.writeMem(0x753e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x5733, gbc.sp());
        EXPECT(0x7540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 009C
        gbc.setState(0xbe28, 0x1c4a, 0xc650, 0xbd8, 0xb9fc, 0xb70b, 0x1, 0x1);
        gbc.writeMem(0xbe28, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1c4a, gbc.sp());
        EXPECT(0xbe2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe28));
        EXPECT(0x2c, gbc.readMem(0xbe29));
        // CB 2C 009D
        gbc.setState(0x6073, 0xe29a, 0x83a0, 0xaa9e, 0xda55, 0x23fc, 0x0, 0x0);
        gbc.writeMem(0x6073, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe29a, gbc.sp());
        EXPECT(0x6075, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 009E
        gbc.setState(0xbc, 0x99c2, 0x4f50, 0xebe0, 0x4aac, 0x308, 0x0, 0x0);
        gbc.writeMem(0xbc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x99c2, gbc.sp());
        EXPECT(0xbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 009F
        gbc.setState(0x79e4, 0x49f7, 0x3a70, 0x78e6, 0xfb60, 0x2389, 0x0, 0x0);
        gbc.writeMem(0x79e4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x49f7, gbc.sp());
        EXPECT(0x79e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00A0
        gbc.setState(0xcd5f, 0xb5d6, 0x56c0, 0xf1e5, 0xe94, 0x2a1e, 0x1, 0x0);
        gbc.writeMem(0xcd5f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb5d6, gbc.sp());
        EXPECT(0xcd61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5f));
        EXPECT(0x2c, gbc.readMem(0xcd60));
        // CB 2C 00A1
        gbc.setState(0xd656, 0x9a99, 0x4770, 0x77f1, 0xbf3a, 0x997a, 0x0, 0x1);
        gbc.writeMem(0xd656, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9a99, gbc.sp());
        EXPECT(0xd658, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd656));
        EXPECT(0x2c, gbc.readMem(0xd657));
        // CB 2C 00A2
        gbc.setState(0x5f63, 0x47d6, 0xf8a0, 0x6eff, 0xdf24, 0x1994, 0x1, 0x1);
        gbc.writeMem(0x5f63, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x47d6, gbc.sp());
        EXPECT(0x5f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00A4
        gbc.setState(0x5144, 0xc974, 0x5dd0, 0x20bd, 0x41ff, 0x87b2, 0x0, 0x1);
        gbc.writeMem(0x5144, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc974, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00A5
        gbc.setState(0xaba2, 0x44a1, 0x1b10, 0xaedc, 0x2ce0, 0xfccd, 0x1, 0x0);
        gbc.writeMem(0xaba2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x44a1, gbc.sp());
        EXPECT(0xaba4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba2));
        EXPECT(0x2c, gbc.readMem(0xaba3));
        // CB 2C 00A6
        gbc.setState(0x4c72, 0xfcd9, 0xbd80, 0xa5b0, 0xf560, 0x582e, 0x1, 0x0);
        gbc.writeMem(0x4c72, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xfcd9, gbc.sp());
        EXPECT(0x4c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00A7
        gbc.setState(0xda, 0x19d8, 0xe130, 0xcfdf, 0x4023, 0x90f5, 0x1, 0x0);
        gbc.writeMem(0xda, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x19d8, gbc.sp());
        EXPECT(0xdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00A8
        gbc.setState(0xeebb, 0xaa15, 0x6660, 0x854e, 0xbfbe, 0x71fe, 0x1, 0x1);
        gbc.writeMem(0xeebb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaa15, gbc.sp());
        EXPECT(0xeebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeebb));
        EXPECT(0x2c, gbc.readMem(0xeebc));
        // CB 2C 00A9
        gbc.setState(0x6d68, 0x4311, 0x3a50, 0x580f, 0xa670, 0x8b8, 0x0, 0x0);
        gbc.writeMem(0x6d68, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x4311, gbc.sp());
        EXPECT(0x6d6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00AA
        gbc.setState(0xa521, 0xd83e, 0x2ef0, 0x1996, 0xed7d, 0xadb, 0x1, 0x0);
        gbc.writeMem(0xa521, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd83e, gbc.sp());
        EXPECT(0xa523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa521));
        EXPECT(0x2c, gbc.readMem(0xa522));
        // CB 2C 00AB
        gbc.setState(0xa927, 0x7c7d, 0x4ed0, 0xb042, 0xc22a, 0xe24a, 0x0, 0x1);
        gbc.writeMem(0xa927, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7c7d, gbc.sp());
        EXPECT(0xa929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa927));
        EXPECT(0x2c, gbc.readMem(0xa928));
        // CB 2C 00AC
        gbc.setState(0x2fae, 0x92a4, 0x9d60, 0xda82, 0x663, 0x4c07, 0x1, 0x1);
        gbc.writeMem(0x2fae, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x92a4, gbc.sp());
        EXPECT(0x2fb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00AD
        gbc.setState(0xe531, 0xf7f0, 0xdbe0, 0xfb13, 0xe117, 0x8769, 0x1, 0x0);
        gbc.writeMem(0xe531, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xf7f0, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe531));
        EXPECT(0x2c, gbc.readMem(0xe532));
        // CB 2C 00AE
        gbc.setState(0xeb91, 0x20d3, 0x5400, 0xcdaa, 0xca7, 0x224b, 0x0, 0x0);
        gbc.writeMem(0xeb91, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x20d3, gbc.sp());
        EXPECT(0xeb93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb91));
        EXPECT(0x2c, gbc.readMem(0xeb92));
        // CB 2C 00B0
        gbc.setState(0x4d5b, 0x66c7, 0xe3c0, 0xbfef, 0x6ceb, 0x6a5a, 0x1, 0x0);
        gbc.writeMem(0x4d5b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x66c7, gbc.sp());
        EXPECT(0x4d5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00B1
        gbc.setState(0xa8e3, 0x7a41, 0xfa00, 0x2dd4, 0x17bd, 0xe113, 0x1, 0x0);
        gbc.writeMem(0xa8e3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7a41, gbc.sp());
        EXPECT(0xa8e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e3));
        EXPECT(0x2c, gbc.readMem(0xa8e4));
        // CB 2C 00B2
        gbc.setState(0xcca, 0x2a7e, 0x6630, 0x7bb5, 0x5303, 0x85c2, 0x1, 0x0);
        gbc.writeMem(0xcca, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2a7e, gbc.sp());
        EXPECT(0xccc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00B3
        gbc.setState(0x9e07, 0xbedd, 0x3410, 0x460a, 0xc7da, 0xc5d, 0x1, 0x1);
        gbc.writeMem(0x9e07, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbedd, gbc.sp());
        EXPECT(0x9e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e07));
        EXPECT(0x2c, gbc.readMem(0x9e08));
        // CB 2C 00B4
        gbc.setState(0x3c05, 0x3b21, 0x3f50, 0xe4e1, 0x334e, 0x1638, 0x1, 0x0);
        gbc.writeMem(0x3c05, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3b21, gbc.sp());
        EXPECT(0x3c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00B5
        gbc.setState(0xe19b, 0x5c92, 0x2560, 0x44dd, 0x150c, 0x6f00, 0x1, 0x1);
        gbc.writeMem(0xe19b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5c92, gbc.sp());
        EXPECT(0xe19d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19b));
        EXPECT(0x2c, gbc.readMem(0xe19c));
        // CB 2C 00B6
        gbc.setState(0xeefd, 0xfa50, 0x2d0, 0xf50b, 0xf1a7, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0xeefd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xfa50, gbc.sp());
        EXPECT(0xeeff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefd));
        EXPECT(0x2c, gbc.readMem(0xeefe));
        // CB 2C 00B7
        gbc.setState(0xe822, 0x21f7, 0x4860, 0x6dd3, 0x851c, 0xc2dd, 0x1, 0x0);
        gbc.writeMem(0xe822, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x21f7, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe822));
        EXPECT(0x2c, gbc.readMem(0xe823));
        // CB 2C 00B8
        gbc.setState(0x3f1, 0x803c, 0xcf40, 0xebf6, 0x8e2e, 0xbf1f, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x803c, gbc.sp());
        EXPECT(0x3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00B9
        gbc.setState(0x4d2e, 0xb64, 0xce90, 0x926, 0x221, 0xb51, 0x1, 0x0);
        gbc.writeMem(0x4d2e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb64, gbc.sp());
        EXPECT(0x4d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00BA
        gbc.setState(0x927e, 0x74be, 0xe890, 0xb7c8, 0x2874, 0x154d, 0x1, 0x0);
        gbc.writeMem(0x927e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x74be, gbc.sp());
        EXPECT(0x9280, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x927e));
        EXPECT(0x2c, gbc.readMem(0x927f));
        // CB 2C 00BB
        gbc.setState(0xba2c, 0x9ef5, 0x8280, 0x65b3, 0x4bef, 0xd3d0, 0x0, 0x0);
        gbc.writeMem(0xba2c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9ef5, gbc.sp());
        EXPECT(0xba2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba2c));
        EXPECT(0x2c, gbc.readMem(0xba2d));
        // CB 2C 00BC
        gbc.setState(0x6678, 0xe40, 0xbf20, 0x684c, 0x16e6, 0x440c, 0x1, 0x1);
        gbc.writeMem(0x6678, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe40, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00BD
        gbc.setState(0x54dc, 0xcb2b, 0x2c10, 0xb68d, 0x72c7, 0x1934, 0x0, 0x0);
        gbc.writeMem(0x54dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xcb2b, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00BE
        gbc.setState(0xc113, 0xb385, 0xf0a0, 0x1576, 0x4691, 0x3e53, 0x0, 0x1);
        gbc.writeMem(0xc113, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb385, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc113));
        EXPECT(0x2c, gbc.readMem(0xc114));
        // CB 2C 00BF
        gbc.setState(0xcc8f, 0xe2a7, 0xbbd0, 0xe986, 0xb9a2, 0x1d24, 0x0, 0x0);
        gbc.writeMem(0xcc8f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xe2a7, gbc.sp());
        EXPECT(0xcc91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc8f));
        EXPECT(0x2c, gbc.readMem(0xcc90));
        // CB 2C 00C0
        gbc.setState(0xd449, 0x9ea, 0xdeb0, 0x5a96, 0x81b1, 0x1e9f, 0x0, 0x0);
        gbc.writeMem(0xd449, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9ea, gbc.sp());
        EXPECT(0xd44b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd449));
        EXPECT(0x2c, gbc.readMem(0xd44a));
        // CB 2C 00C1
        gbc.setState(0x990c, 0x695c, 0x3520, 0x3919, 0xad60, 0xf64e, 0x0, 0x1);
        gbc.writeMem(0x990c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x695c, gbc.sp());
        EXPECT(0x990e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x990c));
        EXPECT(0x2c, gbc.readMem(0x990d));
        // CB 2C 00C2
        gbc.setState(0x17a1, 0xaad9, 0xca30, 0x4c14, 0x6e7d, 0x23c7, 0x0, 0x1);
        gbc.writeMem(0x17a1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaad9, gbc.sp());
        EXPECT(0x17a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00C3
        gbc.setState(0x7dab, 0x3047, 0x7810, 0x2e4c, 0x9885, 0xe375, 0x0, 0x0);
        gbc.writeMem(0x7dab, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3047, gbc.sp());
        EXPECT(0x7dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00C4
        gbc.setState(0x8c6a, 0x1537, 0xe110, 0x5db5, 0x76e4, 0x3a0f, 0x0, 0x0);
        gbc.writeMem(0x8c6a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1537, gbc.sp());
        EXPECT(0x8c6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c6a));
        EXPECT(0x2c, gbc.readMem(0x8c6b));
        // CB 2C 00C5
        gbc.setState(0x7296, 0x9ae1, 0xdad0, 0x2320, 0x9937, 0x9ca4, 0x0, 0x0);
        gbc.writeMem(0x7296, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0x7298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00C6
        gbc.setState(0xa9ec, 0xc2af, 0xe190, 0xaa89, 0x38e1, 0x5d13, 0x1, 0x1);
        gbc.writeMem(0xa9ec, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xc2af, gbc.sp());
        EXPECT(0xa9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9ec));
        EXPECT(0x2c, gbc.readMem(0xa9ed));
        // CB 2C 00C7
        gbc.setState(0xc91b, 0xd8be, 0x6e00, 0xb528, 0xa58e, 0x14e7, 0x0, 0x1);
        gbc.writeMem(0xc91b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd8be, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91b));
        EXPECT(0x2c, gbc.readMem(0xc91c));
        // CB 2C 00C8
        gbc.setState(0x616c, 0xf3e4, 0x2ed0, 0xe99b, 0x2fc8, 0x4d25, 0x0, 0x1);
        gbc.writeMem(0x616c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf3e4, gbc.sp());
        EXPECT(0x616e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00C9
        gbc.setState(0x973d, 0x5bdb, 0xedb0, 0x574c, 0x2d2, 0x35d4, 0x1, 0x0);
        gbc.writeMem(0x973d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5bdb, gbc.sp());
        EXPECT(0x973f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973d));
        EXPECT(0x2c, gbc.readMem(0x973e));
        // CB 2C 00CA
        gbc.setState(0xca09, 0x158f, 0x2510, 0x81c4, 0x6b5d, 0x31ae, 0x0, 0x1);
        gbc.writeMem(0xca09, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x158f, gbc.sp());
        EXPECT(0xca0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca09));
        EXPECT(0x2c, gbc.readMem(0xca0a));
        // CB 2C 00CB
        gbc.setState(0x3152, 0xfe, 0x3490, 0xa90c, 0x6fd0, 0x3a3c, 0x1, 0x1);
        gbc.writeMem(0x3152, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfe, gbc.sp());
        EXPECT(0x3154, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00CC
        gbc.setState(0xba90, 0x93ed, 0x4ac0, 0xcceb, 0xb90e, 0x797c, 0x1, 0x0);
        gbc.writeMem(0xba90, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x93ed, gbc.sp());
        EXPECT(0xba92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba90));
        EXPECT(0x2c, gbc.readMem(0xba91));
        // CB 2C 00CD
        gbc.setState(0xae58, 0x1c59, 0x6570, 0x7cf, 0x229e, 0xc7d8, 0x0, 0x0);
        gbc.writeMem(0xae58, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1c59, gbc.sp());
        EXPECT(0xae5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae58));
        EXPECT(0x2c, gbc.readMem(0xae59));
        // CB 2C 00CE
        gbc.setState(0x7172, 0x350, 0xe2c0, 0x6611, 0xf790, 0x4d85, 0x0, 0x1);
        gbc.writeMem(0x7172, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x350, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00CF
        gbc.setState(0xb4c7, 0xf47e, 0xf830, 0x7662, 0x1a38, 0xd91a, 0x0, 0x1);
        gbc.writeMem(0xb4c7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf47e, gbc.sp());
        EXPECT(0xb4c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c7));
        EXPECT(0x2c, gbc.readMem(0xb4c8));
        // CB 2C 00D0
        gbc.setState(0x2fd5, 0x6aee, 0x330, 0xd4a6, 0x42b, 0xdb59, 0x0, 0x0);
        gbc.writeMem(0x2fd5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x6aee, gbc.sp());
        EXPECT(0x2fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00D2
        gbc.setState(0x12c9, 0xeb9d, 0xc2a0, 0x5fa8, 0x3a36, 0xbdfd, 0x1, 0x1);
        gbc.writeMem(0x12c9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xeb9d, gbc.sp());
        EXPECT(0x12cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00D3
        gbc.setState(0x5ad5, 0x76f5, 0xb2c0, 0xe2c4, 0xd9c7, 0x9d7b, 0x1, 0x1);
        gbc.writeMem(0x5ad5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x76f5, gbc.sp());
        EXPECT(0x5ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00D4
        gbc.setState(0xa46a, 0x8253, 0xb0b0, 0x5e20, 0xc39e, 0xa12, 0x1, 0x0);
        gbc.writeMem(0xa46a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x8253, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46a));
        EXPECT(0x2c, gbc.readMem(0xa46b));
        // CB 2C 00D5
        gbc.setState(0x562b, 0x839d, 0x6a20, 0xc080, 0xfa5c, 0xf78f, 0x0, 0x0);
        gbc.writeMem(0x562b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x562d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00D6
        gbc.setState(0xe8b1, 0xab47, 0xc000, 0xcec3, 0xaba, 0x1a3f, 0x0, 0x0);
        gbc.writeMem(0xe8b1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xab47, gbc.sp());
        EXPECT(0xe8b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8b1));
        EXPECT(0x2c, gbc.readMem(0xe8b2));
        // CB 2C 00D7
        gbc.setState(0x2e98, 0xc5a3, 0xad20, 0xbb73, 0x9cc8, 0x704e, 0x1, 0x0);
        gbc.writeMem(0x2e98, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc5a3, gbc.sp());
        EXPECT(0x2e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00D8
        gbc.setState(0x7f7d, 0x5783, 0x11e0, 0xf3b9, 0x1731, 0xe326, 0x1, 0x1);
        gbc.writeMem(0x7f7d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5783, gbc.sp());
        EXPECT(0x7f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00D9
        gbc.setState(0x15ba, 0x6388, 0xe680, 0x3591, 0xf575, 0xda1e, 0x1, 0x1);
        gbc.writeMem(0x15ba, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6388, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00DA
        gbc.setState(0x9c48, 0xaba7, 0x6580, 0x7cfc, 0x569b, 0x6748, 0x0, 0x1);
        gbc.writeMem(0x9c48, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xaba7, gbc.sp());
        EXPECT(0x9c4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c48));
        EXPECT(0x2c, gbc.readMem(0x9c49));
        // CB 2C 00DD
        gbc.setState(0xaed2, 0xeac1, 0xf800, 0xb690, 0xcb9d, 0x21f1, 0x0, 0x1);
        gbc.writeMem(0xaed2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xeac1, gbc.sp());
        EXPECT(0xaed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaed2));
        EXPECT(0x2c, gbc.readMem(0xaed3));
        // CB 2C 00DE
        gbc.setState(0x4da0, 0x262a, 0xb90, 0xc15f, 0x3103, 0xc855, 0x0, 0x0);
        gbc.writeMem(0x4da0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x262a, gbc.sp());
        EXPECT(0x4da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00DF
        gbc.setState(0xe7bb, 0x4bfc, 0xa30, 0x81fd, 0x77e6, 0xc51c, 0x1, 0x0);
        gbc.writeMem(0xe7bb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4bfc, gbc.sp());
        EXPECT(0xe7bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7bb));
        EXPECT(0x2c, gbc.readMem(0xe7bc));
        // CB 2C 00E0
        gbc.setState(0x2241, 0x3cc, 0x2790, 0xb2a5, 0x33e3, 0x2c43, 0x1, 0x0);
        gbc.writeMem(0x2241, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x3cc, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E1
        gbc.setState(0x16f1, 0x633f, 0xfbb0, 0xc7c8, 0x7fc6, 0x96c0, 0x1, 0x0);
        gbc.writeMem(0x16f1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x633f, gbc.sp());
        EXPECT(0x16f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E2
        gbc.setState(0x198e, 0x7221, 0xcbc0, 0xe36c, 0x8626, 0x7268, 0x1, 0x0);
        gbc.writeMem(0x198e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7221, gbc.sp());
        EXPECT(0x1990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E3
        gbc.setState(0xec73, 0x9ad7, 0x6fc0, 0x72ff, 0x53f3, 0x8860, 0x0, 0x1);
        gbc.writeMem(0xec73, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0xec75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec73));
        EXPECT(0x2c, gbc.readMem(0xec74));
        // CB 2C 00E4
        gbc.setState(0x203e, 0x69cd, 0xa510, 0xadf2, 0x6a46, 0x2e8c, 0x0, 0x0);
        gbc.writeMem(0x203e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x69cd, gbc.sp());
        EXPECT(0x2040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E5
        gbc.setState(0x222e, 0x2d50, 0xe580, 0xf1b2, 0x1164, 0x8c0f, 0x1, 0x0);
        gbc.writeMem(0x222e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2d50, gbc.sp());
        EXPECT(0x2230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E6
        gbc.setState(0xdc64, 0x137d, 0x5340, 0x78c8, 0x1325, 0xf8e0, 0x0, 0x1);
        gbc.writeMem(0xdc64, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x137d, gbc.sp());
        EXPECT(0xdc66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc64));
        EXPECT(0x2c, gbc.readMem(0xdc65));
        // CB 2C 00E7
        gbc.setState(0x9f8f, 0xd43e, 0xdf30, 0x61e9, 0xe0d3, 0xf0ab, 0x1, 0x0);
        gbc.writeMem(0x9f8f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd43e, gbc.sp());
        EXPECT(0x9f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f8f));
        EXPECT(0x2c, gbc.readMem(0x9f90));
        // CB 2C 00E8
        gbc.setState(0x19e7, 0x9f7c, 0x7f50, 0xdb8d, 0xc2c7, 0xd6d2, 0x1, 0x1);
        gbc.writeMem(0x19e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9f7c, gbc.sp());
        EXPECT(0x19e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00E9
        gbc.setState(0x6d1e, 0x9e9, 0x8bf0, 0x3d53, 0x8d38, 0xd846, 0x0, 0x0);
        gbc.writeMem(0x6d1e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9e9, gbc.sp());
        EXPECT(0x6d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00EA
        gbc.setState(0x156b, 0xa17e, 0xf940, 0xccce, 0x6b6e, 0xf488, 0x0, 0x1);
        gbc.writeMem(0x156b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa17e, gbc.sp());
        EXPECT(0x156d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00EB
        gbc.setState(0xe5e5, 0x1dca, 0xa540, 0x457a, 0xef37, 0x814d, 0x1, 0x0);
        gbc.writeMem(0xe5e5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1dca, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5e5));
        EXPECT(0x2c, gbc.readMem(0xe5e6));
        // CB 2C 00EC
        gbc.setState(0x7dae, 0xc7f5, 0x1fa0, 0xdde0, 0xa6ca, 0x423e, 0x0, 0x1);
        gbc.writeMem(0x7dae, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xc7f5, gbc.sp());
        EXPECT(0x7db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00EE
        gbc.setState(0xefb4, 0x453a, 0x5610, 0x732, 0xe73a, 0xd420, 0x1, 0x0);
        gbc.writeMem(0xefb4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x453a, gbc.sp());
        EXPECT(0xefb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefb4));
        EXPECT(0x2c, gbc.readMem(0xefb5));
        // CB 2C 00EF
        gbc.setState(0x69a2, 0x4f75, 0xa4f0, 0xca4f, 0xbe56, 0x2aac, 0x0, 0x1);
        gbc.writeMem(0x69a2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4f75, gbc.sp());
        EXPECT(0x69a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00F0
        gbc.setState(0x42a3, 0xf56c, 0xc00, 0xc64e, 0x2c10, 0x5e57, 0x1, 0x0);
        gbc.writeMem(0x42a3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf56c, gbc.sp());
        EXPECT(0x42a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00F1
        gbc.setState(0xbb1c, 0xd37b, 0x9ea0, 0xf955, 0x2f6d, 0x5230, 0x1, 0x0);
        gbc.writeMem(0xbb1c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd37b, gbc.sp());
        EXPECT(0xbb1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb1c));
        EXPECT(0x2c, gbc.readMem(0xbb1d));
        // CB 2C 00F2
        gbc.setState(0xc413, 0xdcce, 0xe890, 0x4178, 0x940c, 0x5c8e, 0x1, 0x0);
        gbc.writeMem(0xc413, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xdcce, gbc.sp());
        EXPECT(0xc415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc413));
        EXPECT(0x2c, gbc.readMem(0xc414));
        // CB 2C 00F3
        gbc.setState(0x7104, 0x480d, 0x1fc0, 0x1865, 0xc32a, 0xcdbd, 0x1, 0x0);
        gbc.writeMem(0x7104, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x480d, gbc.sp());
        EXPECT(0x7106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00F4
        gbc.setState(0xb96a, 0xa702, 0x7d0, 0x5fab, 0xb248, 0x66b8, 0x0, 0x0);
        gbc.writeMem(0xb96a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa702, gbc.sp());
        EXPECT(0xb96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96a));
        EXPECT(0x2c, gbc.readMem(0xb96b));
        // CB 2C 00F5
        gbc.setState(0x469d, 0x3bf4, 0x8680, 0x7595, 0xcf99, 0x1ac6, 0x0, 0x1);
        gbc.writeMem(0x469d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0x469f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 00F6
        gbc.setState(0xc586, 0x2d2d, 0xe3d0, 0x2616, 0x2154, 0x3fd3, 0x1, 0x0);
        gbc.writeMem(0xc586, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2d2d, gbc.sp());
        EXPECT(0xc588, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc586));
        EXPECT(0x2c, gbc.readMem(0xc587));
        // CB 2C 00F7
        gbc.setState(0xc77b, 0x7f7e, 0x58f0, 0xa2ce, 0xa0bf, 0x8b51, 0x0, 0x0);
        gbc.writeMem(0xc77b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7f7e, gbc.sp());
        EXPECT(0xc77d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc77b));
        EXPECT(0x2c, gbc.readMem(0xc77c));
        // CB 2C 00F8
        gbc.setState(0xdc72, 0x7645, 0x7f40, 0xc520, 0xfbc1, 0xb158, 0x1, 0x1);
        gbc.writeMem(0xdc72, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7645, gbc.sp());
        EXPECT(0xdc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc72));
        EXPECT(0x2c, gbc.readMem(0xdc73));
        // CB 2C 00F9
        gbc.setState(0xd29d, 0x6aa0, 0xd350, 0x4eb9, 0xab88, 0x1d6c, 0x0, 0x1);
        gbc.writeMem(0xd29d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x6aa0, gbc.sp());
        EXPECT(0xd29f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29d));
        EXPECT(0x2c, gbc.readMem(0xd29e));
        // CB 2C 00FA
        gbc.setState(0xe08c, 0xd7b2, 0x1440, 0x4c4, 0xdcda, 0x3efb, 0x1, 0x0);
        gbc.writeMem(0xe08c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd7b2, gbc.sp());
        EXPECT(0xe08e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08c));
        EXPECT(0x2c, gbc.readMem(0xe08d));
        // CB 2C 00FB
        gbc.setState(0x864a, 0xfc33, 0xe2d0, 0x4171, 0x2210, 0x5c4d, 0x1, 0x1);
        gbc.writeMem(0x864a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xfc33, gbc.sp());
        EXPECT(0x864c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x864a));
        EXPECT(0x2c, gbc.readMem(0x864b));
        // CB 2C 00FC
        gbc.setState(0x6c87, 0xfe9, 0x1c00, 0x873e, 0x37c9, 0xf59d, 0x1, 0x0);
        gbc.writeMem(0x6c87, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xfe9, gbc.sp());
        EXPECT(0x6c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00FD
        gbc.setState(0x558, 0x7376, 0x6dc0, 0x51d7, 0xd122, 0x6b71, 0x1, 0x1);
        gbc.writeMem(0x558, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7376, gbc.sp());
        EXPECT(0x55a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 00FF
        gbc.setState(0x5050, 0xbc5, 0x6af0, 0x1b59, 0xdff4, 0x718b, 0x1, 0x1);
        gbc.writeMem(0x5050, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbc5, gbc.sp());
        EXPECT(0x5052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0101
        gbc.setState(0x484e, 0xa9e3, 0xeda0, 0xe3fa, 0xcace, 0x6580, 0x0, 0x0);
        gbc.writeMem(0x484e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa9e3, gbc.sp());
        EXPECT(0x4850, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0102
        gbc.setState(0xe06c, 0x2f81, 0xdb50, 0xfd4c, 0xfcdd, 0x71e1, 0x1, 0x0);
        gbc.writeMem(0xe06c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xe06e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe06c));
        EXPECT(0x2c, gbc.readMem(0xe06d));
        // CB 2C 0103
        gbc.setState(0x23aa, 0xf473, 0x2e30, 0xf0a6, 0x1842, 0xd6a0, 0x1, 0x1);
        gbc.writeMem(0x23aa, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xf473, gbc.sp());
        EXPECT(0x23ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0104
        gbc.setState(0xdaaf, 0x1d25, 0x3c30, 0x1fee, 0x40bc, 0x7516, 0x0, 0x0);
        gbc.writeMem(0xdaaf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1d25, gbc.sp());
        EXPECT(0xdab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaaf));
        EXPECT(0x2c, gbc.readMem(0xdab0));
        // CB 2C 0105
        gbc.setState(0x3d3c, 0xe54, 0x3110, 0xd270, 0x47f0, 0x7aac, 0x0, 0x1);
        gbc.writeMem(0x3d3c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe54, gbc.sp());
        EXPECT(0x3d3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0106
        gbc.setState(0x4934, 0xd7b6, 0xd1f0, 0xe678, 0xe3a4, 0x9bdf, 0x0, 0x0);
        gbc.writeMem(0x4934, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xd7b6, gbc.sp());
        EXPECT(0x4936, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0107
        gbc.setState(0xd5c, 0xf7c8, 0x2350, 0xa50, 0x9069, 0x4e15, 0x0, 0x1);
        gbc.writeMem(0xd5c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0xd5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0108
        gbc.setState(0x7dd1, 0xc376, 0x3150, 0x654, 0xae64, 0xb99, 0x1, 0x0);
        gbc.writeMem(0x7dd1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc376, gbc.sp());
        EXPECT(0x7dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0109
        gbc.setState(0xc110, 0x65ba, 0xfba0, 0xbe1f, 0x98ce, 0x16d9, 0x0, 0x0);
        gbc.writeMem(0xc110, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x65ba, gbc.sp());
        EXPECT(0xc112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc110));
        EXPECT(0x2c, gbc.readMem(0xc111));
        // CB 2C 010A
        gbc.setState(0x101f, 0x9a83, 0x1c30, 0xdfb0, 0x9493, 0x6920, 0x1, 0x0);
        gbc.writeMem(0x101f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x9a83, gbc.sp());
        EXPECT(0x1021, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 010B
        gbc.setState(0x90ca, 0x529, 0xa210, 0x2b89, 0x8816, 0xd88, 0x0, 0x0);
        gbc.writeMem(0x90ca, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x529, gbc.sp());
        EXPECT(0x90cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ca));
        EXPECT(0x2c, gbc.readMem(0x90cb));
        // CB 2C 010C
        gbc.setState(0x2c3f, 0x1a37, 0x5140, 0x64d6, 0x4583, 0x2ec4, 0x1, 0x0);
        gbc.writeMem(0x2c3f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1a37, gbc.sp());
        EXPECT(0x2c41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 010D
        gbc.setState(0x3d81, 0x12f7, 0x8290, 0x79bf, 0x467c, 0x6d8d, 0x1, 0x0);
        gbc.writeMem(0x3d81, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x12f7, gbc.sp());
        EXPECT(0x3d83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0110
        gbc.setState(0xc82, 0x93c9, 0x70a0, 0xa661, 0x66cd, 0x5b58, 0x1, 0x1);
        gbc.writeMem(0xc82, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x93c9, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0111
        gbc.setState(0xef4d, 0x2096, 0xa8c0, 0x78ac, 0x44e3, 0x6bb5, 0x1, 0x0);
        gbc.writeMem(0xef4d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2096, gbc.sp());
        EXPECT(0xef4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef4d));
        EXPECT(0x2c, gbc.readMem(0xef4e));
        // CB 2C 0112
        gbc.setState(0x35bb, 0xc94, 0x6a30, 0x5f1d, 0xff3f, 0x727b, 0x1, 0x1);
        gbc.writeMem(0x35bb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc94, gbc.sp());
        EXPECT(0x35bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0113
        gbc.setState(0x620a, 0xff5f, 0xa160, 0xc6d1, 0xe183, 0xab9, 0x0, 0x1);
        gbc.writeMem(0x620a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xff5f, gbc.sp());
        EXPECT(0x620c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0114
        gbc.setState(0x10e7, 0xac91, 0x1a00, 0x537b, 0x7a2f, 0x24e9, 0x0, 0x1);
        gbc.writeMem(0x10e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xac91, gbc.sp());
        EXPECT(0x10e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0115
        gbc.setState(0x4bbf, 0x64f9, 0xb5e0, 0x809b, 0x510a, 0xa603, 0x1, 0x0);
        gbc.writeMem(0x4bbf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x64f9, gbc.sp());
        EXPECT(0x4bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0116
        gbc.setState(0x4deb, 0x623f, 0xc8b0, 0x3375, 0x35ef, 0x92fe, 0x1, 0x0);
        gbc.writeMem(0x4deb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0x4ded, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0117
        gbc.setState(0xadf7, 0x6be3, 0xded0, 0x1d68, 0x4b3e, 0x26ef, 0x0, 0x1);
        gbc.writeMem(0xadf7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0xadf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf7));
        EXPECT(0x2c, gbc.readMem(0xadf8));
        // CB 2C 0118
        gbc.setState(0x1dcc, 0xde87, 0xdd60, 0xdf5f, 0x508f, 0xed49, 0x1, 0x1);
        gbc.writeMem(0x1dcc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xde87, gbc.sp());
        EXPECT(0x1dce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0119
        gbc.setState(0x6506, 0x98b4, 0xe5a0, 0x39de, 0xc143, 0xef28, 0x0, 0x1);
        gbc.writeMem(0x6506, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0x6508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 011A
        gbc.setState(0xcb61, 0x461, 0xc5b0, 0x20eb, 0x5116, 0x4f0, 0x0, 0x0);
        gbc.writeMem(0xcb61, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x461, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb61));
        EXPECT(0x2c, gbc.readMem(0xcb62));
        // CB 2C 011B
        gbc.setState(0x7ed1, 0xf581, 0x7000, 0xbd1b, 0x914b, 0x75af, 0x0, 0x1);
        gbc.writeMem(0x7ed1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf581, gbc.sp());
        EXPECT(0x7ed3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 011C
        gbc.setState(0x129a, 0xf0bf, 0x5cb0, 0x95cd, 0xb5a3, 0x57a4, 0x1, 0x0);
        gbc.writeMem(0x129a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0x129c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 011D
        gbc.setState(0x812b, 0xf9ea, 0x6e80, 0x87ac, 0x7843, 0x3a3c, 0x0, 0x1);
        gbc.writeMem(0x812b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xf9ea, gbc.sp());
        EXPECT(0x812d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x812b));
        EXPECT(0x2c, gbc.readMem(0x812c));
        // CB 2C 011E
        gbc.setState(0x1ad5, 0x9ecf, 0xcca0, 0xdc6a, 0xbec4, 0x2b02, 0x1, 0x1);
        gbc.writeMem(0x1ad5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0x1ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 011F
        gbc.setState(0xb683, 0x2dc9, 0xf180, 0x38e1, 0x1b67, 0xb4ed, 0x0, 0x1);
        gbc.writeMem(0xb683, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2dc9, gbc.sp());
        EXPECT(0xb685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb683));
        EXPECT(0x2c, gbc.readMem(0xb684));
        // CB 2C 0120
        gbc.setState(0x11f8, 0x546f, 0xf0d0, 0x9767, 0xb48e, 0xc880, 0x0, 0x1);
        gbc.writeMem(0x11f8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x546f, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0121
        gbc.setState(0xb5, 0x2ce4, 0x2910, 0xb62b, 0x175d, 0x6bbe, 0x0, 0x1);
        gbc.writeMem(0xb5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2ce4, gbc.sp());
        EXPECT(0xb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0122
        gbc.setState(0x334b, 0x6f3b, 0xd4d0, 0x8c8, 0xf771, 0x6878, 0x1, 0x1);
        gbc.writeMem(0x334b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6f3b, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0123
        gbc.setState(0x8648, 0x6e49, 0xe010, 0x8c48, 0xddf6, 0x10e, 0x0, 0x1);
        gbc.writeMem(0x8648, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6e49, gbc.sp());
        EXPECT(0x864a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8648));
        EXPECT(0x2c, gbc.readMem(0x8649));
        // CB 2C 0124
        gbc.setState(0x4a54, 0xea9f, 0x5ab0, 0x66df, 0xf9e1, 0xa42f, 0x1, 0x1);
        gbc.writeMem(0x4a54, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xea9f, gbc.sp());
        EXPECT(0x4a56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0125
        gbc.setState(0xb5ac, 0x3f9c, 0x9860, 0xde07, 0x9744, 0x73c5, 0x1, 0x1);
        gbc.writeMem(0xb5ac, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x3f9c, gbc.sp());
        EXPECT(0xb5ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ac));
        EXPECT(0x2c, gbc.readMem(0xb5ad));
        // CB 2C 0126
        gbc.setState(0x72f2, 0xbd09, 0x2110, 0x3c5d, 0xac3, 0x5b07, 0x0, 0x1);
        gbc.writeMem(0x72f2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbd09, gbc.sp());
        EXPECT(0x72f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0127
        gbc.setState(0xe33f, 0xa791, 0x8320, 0x4abd, 0xefb3, 0xfee3, 0x1, 0x1);
        gbc.writeMem(0xe33f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa791, gbc.sp());
        EXPECT(0xe341, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33f));
        EXPECT(0x2c, gbc.readMem(0xe340));
        // CB 2C 0128
        gbc.setState(0xefba, 0x15ee, 0x5130, 0x6386, 0xb883, 0x1a11, 0x0, 0x0);
        gbc.writeMem(0xefba, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x15ee, gbc.sp());
        EXPECT(0xefbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefba));
        EXPECT(0x2c, gbc.readMem(0xefbb));
        // CB 2C 0129
        gbc.setState(0x88dc, 0xacf4, 0x5220, 0x233, 0xbd2c, 0x54fe, 0x1, 0x1);
        gbc.writeMem(0x88dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xacf4, gbc.sp());
        EXPECT(0x88de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88dc));
        EXPECT(0x2c, gbc.readMem(0x88dd));
        // CB 2C 012A
        gbc.setState(0x6306, 0xc56f, 0x4180, 0x75c7, 0x9884, 0xc6c6, 0x1, 0x0);
        gbc.writeMem(0x6306, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc56f, gbc.sp());
        EXPECT(0x6308, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 012B
        gbc.setState(0xa26a, 0x2a27, 0x1240, 0xc764, 0xdbe7, 0x39d1, 0x1, 0x1);
        gbc.writeMem(0xa26a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0xa26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26a));
        EXPECT(0x2c, gbc.readMem(0xa26b));
        // CB 2C 012C
        gbc.setState(0x567f, 0xb5d5, 0xc790, 0x63b, 0xdeb1, 0x62bd, 0x0, 0x1);
        gbc.writeMem(0x567f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb5d5, gbc.sp());
        EXPECT(0x5681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 012D
        gbc.setState(0xb4b7, 0xa1c3, 0x9390, 0xb89b, 0x80b6, 0x86d2, 0x0, 0x1);
        gbc.writeMem(0xb4b7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa1c3, gbc.sp());
        EXPECT(0xb4b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b7));
        EXPECT(0x2c, gbc.readMem(0xb4b8));
        // CB 2C 012E
        gbc.setState(0xdcd3, 0x814, 0x9100, 0xe8cf, 0xe7aa, 0xb762, 0x1, 0x1);
        gbc.writeMem(0xdcd3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x814, gbc.sp());
        EXPECT(0xdcd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcd3));
        EXPECT(0x2c, gbc.readMem(0xdcd4));
        // CB 2C 012F
        gbc.setState(0x1748, 0xd09f, 0x1180, 0xde9e, 0xdc22, 0xa570, 0x1, 0x1);
        gbc.writeMem(0x1748, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd09f, gbc.sp());
        EXPECT(0x174a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0130
        gbc.setState(0x4662, 0x56d8, 0x5ec0, 0xf805, 0x8950, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x4662, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x56d8, gbc.sp());
        EXPECT(0x4664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0131
        gbc.setState(0xb78c, 0x4458, 0x2680, 0x89ab, 0xdf14, 0x8cea, 0x0, 0x1);
        gbc.writeMem(0xb78c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0xb78e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb78c));
        EXPECT(0x2c, gbc.readMem(0xb78d));
        // CB 2C 0132
        gbc.setState(0x5614, 0x5a32, 0x8be0, 0xe4a3, 0xead9, 0x6f95, 0x1, 0x1);
        gbc.writeMem(0x5614, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5a32, gbc.sp());
        EXPECT(0x5616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0133
        gbc.setState(0x5dc7, 0x6c9c, 0x2f60, 0xce95, 0x4f08, 0x6edb, 0x0, 0x1);
        gbc.writeMem(0x5dc7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x6c9c, gbc.sp());
        EXPECT(0x5dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0134
        gbc.setState(0x5e24, 0x61b4, 0x84f0, 0xd292, 0x5748, 0x36a, 0x1, 0x0);
        gbc.writeMem(0x5e24, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x61b4, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0135
        gbc.setState(0x71b6, 0x3dfc, 0xdcb0, 0x156, 0x15c7, 0x6521, 0x1, 0x1);
        gbc.writeMem(0x71b6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3dfc, gbc.sp());
        EXPECT(0x71b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0136
        gbc.setState(0x4be5, 0xfbee, 0x28f0, 0x356d, 0xc8f1, 0x55c5, 0x1, 0x0);
        gbc.writeMem(0x4be5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfbee, gbc.sp());
        EXPECT(0x4be7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0137
        gbc.setState(0xc3b7, 0x151e, 0xdb60, 0xcc07, 0x250b, 0x7cc5, 0x0, 0x0);
        gbc.writeMem(0xc3b7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0xc3b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3b7));
        EXPECT(0x2c, gbc.readMem(0xc3b8));
        // CB 2C 0138
        gbc.setState(0x7ca2, 0x7b53, 0xf3f0, 0x34f, 0x5df3, 0x6d86, 0x0, 0x1);
        gbc.writeMem(0x7ca2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7b53, gbc.sp());
        EXPECT(0x7ca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0139
        gbc.setState(0xaf6f, 0xa207, 0xd950, 0x1b0f, 0x895f, 0xeb28, 0x1, 0x0);
        gbc.writeMem(0xaf6f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa207, gbc.sp());
        EXPECT(0xaf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6f));
        EXPECT(0x2c, gbc.readMem(0xaf70));
        // CB 2C 013B
        gbc.setState(0x8a2b, 0x5621, 0x1cb0, 0xbcbb, 0xad70, 0x13a7, 0x1, 0x0);
        gbc.writeMem(0x8a2b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5621, gbc.sp());
        EXPECT(0x8a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a2b));
        EXPECT(0x2c, gbc.readMem(0x8a2c));
        // CB 2C 013C
        gbc.setState(0xca31, 0xebb5, 0xcfa0, 0x1aa3, 0x8618, 0xff49, 0x0, 0x1);
        gbc.writeMem(0xca31, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xebb5, gbc.sp());
        EXPECT(0xca33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca31));
        EXPECT(0x2c, gbc.readMem(0xca32));
        // CB 2C 013D
        gbc.setState(0x41fa, 0xd0ed, 0xb9a0, 0xe6a6, 0x8715, 0xbc48, 0x1, 0x0);
        gbc.writeMem(0x41fa, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd0ed, gbc.sp());
        EXPECT(0x41fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 013E
        gbc.setState(0x84d1, 0x4c6b, 0xeea0, 0x7c43, 0xb611, 0x7449, 0x1, 0x0);
        gbc.writeMem(0x84d1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4c6b, gbc.sp());
        EXPECT(0x84d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84d1));
        EXPECT(0x2c, gbc.readMem(0x84d2));
        // CB 2C 013F
        gbc.setState(0xc521, 0x5f6f, 0x7350, 0xe4bf, 0x3a4f, 0xdb7d, 0x1, 0x1);
        gbc.writeMem(0xc521, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5f6f, gbc.sp());
        EXPECT(0xc523, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc521));
        EXPECT(0x2c, gbc.readMem(0xc522));
        // CB 2C 0140
        gbc.setState(0x3136, 0xa61, 0x6910, 0xd9ed, 0x79c9, 0x1f3a, 0x0, 0x1);
        gbc.writeMem(0x3136, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xa61, gbc.sp());
        EXPECT(0x3138, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0141
        gbc.setState(0xc488, 0x9a2c, 0xcc0, 0x16d7, 0xc44b, 0xeaae, 0x1, 0x0);
        gbc.writeMem(0xc488, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0xc48a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc488));
        EXPECT(0x2c, gbc.readMem(0xc489));
        // CB 2C 0142
        gbc.setState(0x146f, 0x188d, 0x5390, 0x52dd, 0x54db, 0xb1b4, 0x1, 0x1);
        gbc.writeMem(0x146f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x188d, gbc.sp());
        EXPECT(0x1471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0143
        gbc.setState(0x3288, 0x46f, 0x6940, 0x1338, 0xf294, 0xdf8a, 0x0, 0x0);
        gbc.writeMem(0x3288, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x46f, gbc.sp());
        EXPECT(0x328a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0144
        gbc.setState(0xd0fb, 0x7e51, 0xdb10, 0x477f, 0x910d, 0x3fce, 0x1, 0x0);
        gbc.writeMem(0xd0fb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7e51, gbc.sp());
        EXPECT(0xd0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0fb));
        EXPECT(0x2c, gbc.readMem(0xd0fc));
        // CB 2C 0145
        gbc.setState(0x80ea, 0x8afc, 0xda80, 0xd4e8, 0xce84, 0x4723, 0x0, 0x1);
        gbc.writeMem(0x80ea, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8afc, gbc.sp());
        EXPECT(0x80ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80ea));
        EXPECT(0x2c, gbc.readMem(0x80eb));
        // CB 2C 0146
        gbc.setState(0x488f, 0x807b, 0xce10, 0x476, 0x16c0, 0x4f3f, 0x0, 0x1);
        gbc.writeMem(0x488f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x807b, gbc.sp());
        EXPECT(0x4891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0147
        gbc.setState(0x1a86, 0x40c4, 0x3f90, 0x5b0e, 0x346a, 0xf38f, 0x0, 0x1);
        gbc.writeMem(0x1a86, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x40c4, gbc.sp());
        EXPECT(0x1a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0148
        gbc.setState(0xe6f2, 0x4ce0, 0x4ab0, 0x7b13, 0xad9f, 0x6c47, 0x1, 0x1);
        gbc.writeMem(0xe6f2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4ce0, gbc.sp());
        EXPECT(0xe6f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6f2));
        EXPECT(0x2c, gbc.readMem(0xe6f3));
        // CB 2C 0149
        gbc.setState(0xa76a, 0xc7ee, 0x4ec0, 0xe898, 0x44d2, 0xf623, 0x0, 0x0);
        gbc.writeMem(0xa76a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc7ee, gbc.sp());
        EXPECT(0xa76c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76a));
        EXPECT(0x2c, gbc.readMem(0xa76b));
        // CB 2C 014A
        gbc.setState(0x62c7, 0xee0c, 0x6150, 0x5efb, 0x74b5, 0x61ce, 0x0, 0x0);
        gbc.writeMem(0x62c7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xee0c, gbc.sp());
        EXPECT(0x62c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 014B
        gbc.setState(0x4d6e, 0x7c7c, 0xafa0, 0xcccd, 0x956c, 0xb753, 0x1, 0x0);
        gbc.writeMem(0x4d6e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7c7c, gbc.sp());
        EXPECT(0x4d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 014C
        gbc.setState(0xb605, 0xa900, 0x4790, 0x4b51, 0xf646, 0xcc09, 0x0, 0x1);
        gbc.writeMem(0xb605, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa900, gbc.sp());
        EXPECT(0xb607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb605));
        EXPECT(0x2c, gbc.readMem(0xb606));
        // CB 2C 014D
        gbc.setState(0x380f, 0x7b9e, 0x4620, 0x2003, 0x2509, 0xbb1b, 0x1, 0x0);
        gbc.writeMem(0x380f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7b9e, gbc.sp());
        EXPECT(0x3811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 014E
        gbc.setState(0x246a, 0x8937, 0x8470, 0x34d3, 0x7c45, 0xb1f5, 0x1, 0x0);
        gbc.writeMem(0x246a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x246c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 014F
        gbc.setState(0xe77d, 0x252b, 0x9380, 0x2d0, 0xb3cf, 0xe53b, 0x1, 0x1);
        gbc.writeMem(0xe77d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x252b, gbc.sp());
        EXPECT(0xe77f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe77d));
        EXPECT(0x2c, gbc.readMem(0xe77e));
        // CB 2C 0150
        gbc.setState(0xcef0, 0x7299, 0x440, 0x2b33, 0xf4e3, 0xb42c, 0x0, 0x0);
        gbc.writeMem(0xcef0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7299, gbc.sp());
        EXPECT(0xcef2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef0));
        EXPECT(0x2c, gbc.readMem(0xcef1));
        // CB 2C 0151
        gbc.setState(0x5277, 0xafc, 0xcd80, 0x3fcd, 0xb7a4, 0x136, 0x0, 0x1);
        gbc.writeMem(0x5277, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xafc, gbc.sp());
        EXPECT(0x5279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0152
        gbc.setState(0x6205, 0x4d89, 0x8980, 0x58a8, 0xb8fe, 0x322c, 0x1, 0x1);
        gbc.writeMem(0x6205, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4d89, gbc.sp());
        EXPECT(0x6207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0153
        gbc.setState(0x7310, 0x3a0f, 0xa170, 0x7f8b, 0xdb2, 0xff21, 0x0, 0x1);
        gbc.writeMem(0x7310, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3a0f, gbc.sp());
        EXPECT(0x7312, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0154
        gbc.setState(0xde6c, 0x7d14, 0x9e90, 0x6e6f, 0x2833, 0x9f32, 0x1, 0x0);
        gbc.writeMem(0xde6c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7d14, gbc.sp());
        EXPECT(0xde6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6c));
        EXPECT(0x2c, gbc.readMem(0xde6d));
        // CB 2C 0155
        gbc.setState(0x6e9e, 0xe51e, 0x4870, 0xe49, 0xf48d, 0x5505, 0x0, 0x0);
        gbc.writeMem(0x6e9e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe51e, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0156
        gbc.setState(0x5d53, 0xb2af, 0xc5c0, 0xb95b, 0x65bb, 0x7c22, 0x0, 0x0);
        gbc.writeMem(0x5d53, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb2af, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0157
        gbc.setState(0xd672, 0x7de7, 0x54c0, 0xdae3, 0x18eb, 0xd9a0, 0x0, 0x0);
        gbc.writeMem(0xd672, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7de7, gbc.sp());
        EXPECT(0xd674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd672));
        EXPECT(0x2c, gbc.readMem(0xd673));
        // CB 2C 0158
        gbc.setState(0x881c, 0x5b8b, 0xf790, 0xd13, 0x287c, 0xefdd, 0x0, 0x1);
        gbc.writeMem(0x881c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5b8b, gbc.sp());
        EXPECT(0x881e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881c));
        EXPECT(0x2c, gbc.readMem(0x881d));
        // CB 2C 0159
        gbc.setState(0xb0d8, 0xce1e, 0xde10, 0xd237, 0x547d, 0x1c53, 0x1, 0x0);
        gbc.writeMem(0xb0d8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xce1e, gbc.sp());
        EXPECT(0xb0da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0d8));
        EXPECT(0x2c, gbc.readMem(0xb0d9));
        // CB 2C 015A
        gbc.setState(0xd60c, 0x5bbe, 0x1db0, 0xf51b, 0x80f5, 0xe59d, 0x1, 0x1);
        gbc.writeMem(0xd60c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x5bbe, gbc.sp());
        EXPECT(0xd60e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60c));
        EXPECT(0x2c, gbc.readMem(0xd60d));
        // CB 2C 015B
        gbc.setState(0x2cd2, 0x5578, 0xdb90, 0x776a, 0xb8ad, 0xc639, 0x1, 0x1);
        gbc.writeMem(0x2cd2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5578, gbc.sp());
        EXPECT(0x2cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 015C
        gbc.setState(0xa3e7, 0x3891, 0x50e0, 0x416e, 0x810a, 0x717f, 0x1, 0x0);
        gbc.writeMem(0xa3e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x3891, gbc.sp());
        EXPECT(0xa3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e7));
        EXPECT(0x2c, gbc.readMem(0xa3e8));
        // CB 2C 015D
        gbc.setState(0x871c, 0xc69e, 0x1100, 0x92a3, 0x58e6, 0x966d, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xc69e, gbc.sp());
        EXPECT(0x871e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871c));
        EXPECT(0x2c, gbc.readMem(0x871d));
        // CB 2C 015E
        gbc.setState(0x1387, 0x499d, 0x4e90, 0xc690, 0x7333, 0xe80e, 0x1, 0x0);
        gbc.writeMem(0x1387, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x499d, gbc.sp());
        EXPECT(0x1389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 015F
        gbc.setState(0x81b1, 0xc2d2, 0xccd0, 0x84ba, 0x4b73, 0x3cee, 0x1, 0x0);
        gbc.writeMem(0x81b1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc2d2, gbc.sp());
        EXPECT(0x81b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81b1));
        EXPECT(0x2c, gbc.readMem(0x81b2));
        // CB 2C 0160
        gbc.setState(0xb8fe, 0xb98, 0x38c0, 0x1341, 0x5366, 0x978f, 0x0, 0x0);
        gbc.writeMem(0xb8fe, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xb98, gbc.sp());
        EXPECT(0xb900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fe));
        EXPECT(0x2c, gbc.readMem(0xb8ff));
        // CB 2C 0161
        gbc.setState(0xcc7e, 0xe0d0, 0xbd70, 0xd125, 0xe9e7, 0xf4ac, 0x0, 0x0);
        gbc.writeMem(0xcc7e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe0d0, gbc.sp());
        EXPECT(0xcc80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7e));
        EXPECT(0x2c, gbc.readMem(0xcc7f));
        // CB 2C 0162
        gbc.setState(0xd210, 0x6701, 0xa330, 0x50b0, 0xccd0, 0xad01, 0x0, 0x1);
        gbc.writeMem(0xd210, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6701, gbc.sp());
        EXPECT(0xd212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd210));
        EXPECT(0x2c, gbc.readMem(0xd211));
        // CB 2C 0163
        gbc.setState(0xec12, 0xd7e8, 0x7030, 0x5a1, 0xf38e, 0x1896, 0x1, 0x0);
        gbc.writeMem(0xec12, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd7e8, gbc.sp());
        EXPECT(0xec14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec12));
        EXPECT(0x2c, gbc.readMem(0xec13));
        // CB 2C 0164
        gbc.setState(0xc033, 0x410b, 0xea20, 0x297f, 0x3831, 0x73a2, 0x1, 0x1);
        gbc.writeMem(0xc033, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x410b, gbc.sp());
        EXPECT(0xc035, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc033));
        EXPECT(0x2c, gbc.readMem(0xc034));
        // CB 2C 0165
        gbc.setState(0x3b13, 0xb74c, 0x4d10, 0xaf8, 0x6402, 0x2424, 0x0, 0x1);
        gbc.writeMem(0x3b13, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xb74c, gbc.sp());
        EXPECT(0x3b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0166
        gbc.setState(0x7317, 0xf31b, 0x7f60, 0xa356, 0xab32, 0x890f, 0x0, 0x0);
        gbc.writeMem(0x7317, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf31b, gbc.sp());
        EXPECT(0x7319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0167
        gbc.setState(0xd858, 0x9e6, 0x4ea0, 0xd120, 0x6dc5, 0x5c0a, 0x0, 0x1);
        gbc.writeMem(0xd858, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9e6, gbc.sp());
        EXPECT(0xd85a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd858));
        EXPECT(0x2c, gbc.readMem(0xd859));
        // CB 2C 0168
        gbc.setState(0xbedf, 0xbcc8, 0x5b00, 0x708a, 0xa401, 0xb4d1, 0x0, 0x0);
        gbc.writeMem(0xbedf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbcc8, gbc.sp());
        EXPECT(0xbee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedf));
        EXPECT(0x2c, gbc.readMem(0xbee0));
        // CB 2C 0169
        gbc.setState(0xe642, 0xcf44, 0x9c80, 0x1cea, 0x99ef, 0xe9f4, 0x0, 0x0);
        gbc.writeMem(0xe642, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcf44, gbc.sp());
        EXPECT(0xe644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe642));
        EXPECT(0x2c, gbc.readMem(0xe643));
        // CB 2C 016A
        gbc.setState(0x686b, 0x6c38, 0x3760, 0xcf53, 0x5b01, 0xd97, 0x1, 0x1);
        gbc.writeMem(0x686b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6c38, gbc.sp());
        EXPECT(0x686d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 016B
        gbc.setState(0xd75b, 0x57f6, 0xd1d0, 0xd5ca, 0x9659, 0xaba, 0x1, 0x0);
        gbc.writeMem(0xd75b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x57f6, gbc.sp());
        EXPECT(0xd75d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd75b));
        EXPECT(0x2c, gbc.readMem(0xd75c));
        // CB 2C 016C
        gbc.setState(0x69c7, 0x5b30, 0x1e30, 0x58f1, 0x5a0c, 0x6115, 0x1, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5b30, gbc.sp());
        EXPECT(0x69c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 016D
        gbc.setState(0xab17, 0x61cc, 0xbba0, 0x390e, 0x505c, 0x3941, 0x1, 0x1);
        gbc.writeMem(0xab17, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x61cc, gbc.sp());
        EXPECT(0xab19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab17));
        EXPECT(0x2c, gbc.readMem(0xab18));
        // CB 2C 016E
        gbc.setState(0xec16, 0xcdf9, 0xdc60, 0xe732, 0xb508, 0x6910, 0x1, 0x1);
        gbc.writeMem(0xec16, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcdf9, gbc.sp());
        EXPECT(0xec18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec16));
        EXPECT(0x2c, gbc.readMem(0xec17));
        // CB 2C 016F
        gbc.setState(0x69d7, 0x4f7b, 0x44e0, 0x119, 0x4ee1, 0x9464, 0x0, 0x0);
        gbc.writeMem(0x69d7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4f7b, gbc.sp());
        EXPECT(0x69d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0170
        gbc.setState(0x8952, 0xded4, 0xe440, 0x8399, 0xd67d, 0x12e6, 0x0, 0x1);
        gbc.writeMem(0x8952, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0x8954, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8952));
        EXPECT(0x2c, gbc.readMem(0x8953));
        // CB 2C 0171
        gbc.setState(0x2679, 0x324e, 0x3e40, 0x5340, 0xfff1, 0xe596, 0x1, 0x0);
        gbc.writeMem(0x2679, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x324e, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0172
        gbc.setState(0x95ff, 0xa0c9, 0x5510, 0x3bb7, 0x5ebe, 0xab6b, 0x1, 0x1);
        gbc.writeMem(0x95ff, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa0c9, gbc.sp());
        EXPECT(0x9601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ff));
        EXPECT(0x2c, gbc.readMem(0x9600));
        // CB 2C 0173
        gbc.setState(0x6839, 0x73d8, 0x3530, 0x6031, 0x2b24, 0x50c9, 0x1, 0x1);
        gbc.writeMem(0x6839, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x73d8, gbc.sp());
        EXPECT(0x683b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0174
        gbc.setState(0x4836, 0xc2cc, 0xd8c0, 0xa1ea, 0x5352, 0x2b34, 0x0, 0x0);
        gbc.writeMem(0x4836, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc2cc, gbc.sp());
        EXPECT(0x4838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0175
        gbc.setState(0x25af, 0x69f, 0x7e00, 0x7248, 0x3840, 0x5448, 0x0, 0x1);
        gbc.writeMem(0x25af, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x69f, gbc.sp());
        EXPECT(0x25b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0176
        gbc.setState(0x5218, 0x427e, 0x4100, 0x4403, 0x1af, 0xd515, 0x0, 0x1);
        gbc.writeMem(0x5218, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x427e, gbc.sp());
        EXPECT(0x521a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0177
        gbc.setState(0xcff, 0xcee8, 0x1aa0, 0xfa4d, 0x394b, 0x858c, 0x0, 0x0);
        gbc.writeMem(0xcff, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xcee8, gbc.sp());
        EXPECT(0xd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0178
        gbc.setState(0xd60d, 0x1a37, 0xef80, 0x3ed0, 0x8cf1, 0xed57, 0x0, 0x1);
        gbc.writeMem(0xd60d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x1a37, gbc.sp());
        EXPECT(0xd60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd60d));
        EXPECT(0x2c, gbc.readMem(0xd60e));
        // CB 2C 0179
        gbc.setState(0x4726, 0x5033, 0xa9a0, 0x15b3, 0x418b, 0x5f67, 0x0, 0x1);
        gbc.writeMem(0x4726, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x5033, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 017A
        gbc.setState(0x2bf7, 0x96ed, 0x3a10, 0x3ec6, 0x8d59, 0x7efd, 0x0, 0x0);
        gbc.writeMem(0x2bf7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0x2bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 017B
        gbc.setState(0x7ccf, 0x673a, 0xac10, 0xe602, 0x1532, 0x711d, 0x0, 0x0);
        gbc.writeMem(0x7ccf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x673a, gbc.sp());
        EXPECT(0x7cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 017C
        gbc.setState(0xbf4f, 0x516a, 0x99b0, 0x94d6, 0xfd8b, 0x1fa2, 0x0, 0x1);
        gbc.writeMem(0xbf4f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x516a, gbc.sp());
        EXPECT(0xbf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf4f));
        EXPECT(0x2c, gbc.readMem(0xbf50));
        // CB 2C 017D
        gbc.setState(0x8a42, 0x86f1, 0x4df0, 0x2e9b, 0xa5ad, 0x1cd6, 0x1, 0x0);
        gbc.writeMem(0x8a42, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x86f1, gbc.sp());
        EXPECT(0x8a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a42));
        EXPECT(0x2c, gbc.readMem(0x8a43));
        // CB 2C 017E
        gbc.setState(0xcb61, 0x7b97, 0x7ab0, 0x9383, 0x9fc1, 0x24d3, 0x0, 0x0);
        gbc.writeMem(0xcb61, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x7b97, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb61));
        EXPECT(0x2c, gbc.readMem(0xcb62));
        // CB 2C 017F
        gbc.setState(0x5728, 0x13fb, 0xda10, 0x46f0, 0xa86, 0x61e, 0x1, 0x0);
        gbc.writeMem(0x5728, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x13fb, gbc.sp());
        EXPECT(0x572a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0180
        gbc.setState(0x2330, 0x58f2, 0x44d0, 0xad0e, 0xd4ec, 0x71dc, 0x1, 0x1);
        gbc.writeMem(0x2330, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x58f2, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0181
        gbc.setState(0x680d, 0x840b, 0xf40, 0x969f, 0x4b93, 0x282c, 0x1, 0x1);
        gbc.writeMem(0x680d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x840b, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0183
        gbc.setState(0xb5c4, 0xf37f, 0x81e0, 0x193a, 0x2d05, 0x8396, 0x0, 0x1);
        gbc.writeMem(0xb5c4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf37f, gbc.sp());
        EXPECT(0xb5c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5c4));
        EXPECT(0x2c, gbc.readMem(0xb5c5));
        // CB 2C 0184
        gbc.setState(0xe55e, 0x1599, 0x4300, 0x8e0, 0x9d2c, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xe55e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1599, gbc.sp());
        EXPECT(0xe560, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55e));
        EXPECT(0x2c, gbc.readMem(0xe55f));
        // CB 2C 0185
        gbc.setState(0xdee0, 0x9d1a, 0xd420, 0xa04a, 0xd93d, 0x8be0, 0x0, 0x1);
        gbc.writeMem(0xdee0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9d1a, gbc.sp());
        EXPECT(0xdee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee0));
        EXPECT(0x2c, gbc.readMem(0xdee1));
        // CB 2C 0186
        gbc.setState(0x4dd6, 0x94cc, 0x6a20, 0x9acb, 0xed2a, 0x6d2e, 0x0, 0x1);
        gbc.writeMem(0x4dd6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x94cc, gbc.sp());
        EXPECT(0x4dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0187
        gbc.setState(0x587a, 0x2716, 0xbf90, 0x367, 0x3558, 0xab6, 0x1, 0x1);
        gbc.writeMem(0x587a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2716, gbc.sp());
        EXPECT(0x587c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0188
        gbc.setState(0xe882, 0xde3, 0x5f00, 0xbbb5, 0xb790, 0x68ad, 0x0, 0x0);
        gbc.writeMem(0xe882, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde3, gbc.sp());
        EXPECT(0xe884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe882));
        EXPECT(0x2c, gbc.readMem(0xe883));
        // CB 2C 0189
        gbc.setState(0xbadf, 0x988b, 0x59e0, 0x2259, 0xa337, 0x42e5, 0x1, 0x1);
        gbc.writeMem(0xbadf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x988b, gbc.sp());
        EXPECT(0xbae1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbadf));
        EXPECT(0x2c, gbc.readMem(0xbae0));
        // CB 2C 018A
        gbc.setState(0xbdb4, 0xcc15, 0xc160, 0x7193, 0x4f58, 0x7a29, 0x1, 0x1);
        gbc.writeMem(0xbdb4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc15, gbc.sp());
        EXPECT(0xbdb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdb4));
        EXPECT(0x2c, gbc.readMem(0xbdb5));
        // CB 2C 018B
        gbc.setState(0x1150, 0x1e90, 0xde90, 0x87c9, 0x7e8d, 0xf873, 0x1, 0x0);
        gbc.writeMem(0x1150, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1e90, gbc.sp());
        EXPECT(0x1152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 018C
        gbc.setState(0x61f2, 0x3687, 0xb5e0, 0x93d, 0x7d8f, 0x41cd, 0x0, 0x0);
        gbc.writeMem(0x61f2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3687, gbc.sp());
        EXPECT(0x61f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 018D
        gbc.setState(0x4dce, 0x4863, 0x5f90, 0x6d41, 0x2590, 0x6547, 0x0, 0x1);
        gbc.writeMem(0x4dce, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4863, gbc.sp());
        EXPECT(0x4dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 018E
        gbc.setState(0x9ff6, 0x8fd0, 0x5c0, 0x19db, 0xeef6, 0xa0e5, 0x0, 0x1);
        gbc.writeMem(0x9ff6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8fd0, gbc.sp());
        EXPECT(0x9ff8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff6));
        EXPECT(0x2c, gbc.readMem(0x9ff7));
        // CB 2C 018F
        gbc.setState(0x797b, 0xd680, 0x4b60, 0x656, 0xc60b, 0xf7c4, 0x1, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd680, gbc.sp());
        EXPECT(0x797d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0190
        gbc.setState(0x21b6, 0xfa84, 0x8dd0, 0x2864, 0x28ce, 0x28d0, 0x1, 0x0);
        gbc.writeMem(0x21b6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfa84, gbc.sp());
        EXPECT(0x21b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0191
        gbc.setState(0x8812, 0xb4c4, 0x3270, 0x1e00, 0x6d05, 0xb794, 0x0, 0x0);
        gbc.writeMem(0x8812, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xb4c4, gbc.sp());
        EXPECT(0x8814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8812));
        EXPECT(0x2c, gbc.readMem(0x8813));
        // CB 2C 0192
        gbc.setState(0xc691, 0x6459, 0x36d0, 0xc0ef, 0xf830, 0x921c, 0x1, 0x0);
        gbc.writeMem(0xc691, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x6459, gbc.sp());
        EXPECT(0xc693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc691));
        EXPECT(0x2c, gbc.readMem(0xc692));
        // CB 2C 0193
        gbc.setState(0x7b68, 0xa0a, 0x3590, 0x2c28, 0xbe9d, 0x129c, 0x1, 0x1);
        gbc.writeMem(0x7b68, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa0a, gbc.sp());
        EXPECT(0x7b6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0194
        gbc.setState(0x2691, 0x36df, 0x2100, 0xc2d1, 0xe89a, 0x24a9, 0x0, 0x1);
        gbc.writeMem(0x2691, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x36df, gbc.sp());
        EXPECT(0x2693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0195
        gbc.setState(0x8db0, 0x26d2, 0x1790, 0xac62, 0x50fc, 0xa6f7, 0x1, 0x1);
        gbc.writeMem(0x8db0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x26d2, gbc.sp());
        EXPECT(0x8db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db0));
        EXPECT(0x2c, gbc.readMem(0x8db1));
        // CB 2C 0196
        gbc.setState(0xe0f6, 0x48b1, 0x4ca0, 0x23f8, 0xf15d, 0xed34, 0x1, 0x1);
        gbc.writeMem(0xe0f6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x48b1, gbc.sp());
        EXPECT(0xe0f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0f6));
        EXPECT(0x2c, gbc.readMem(0xe0f7));
        // CB 2C 0197
        gbc.setState(0xb3cd, 0x356c, 0xf470, 0x711e, 0xf117, 0xf74e, 0x0, 0x1);
        gbc.writeMem(0xb3cd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x356c, gbc.sp());
        EXPECT(0xb3cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3cd));
        EXPECT(0x2c, gbc.readMem(0xb3ce));
        // CB 2C 0198
        gbc.setState(0x1660, 0x469c, 0x9280, 0x4aa6, 0x548d, 0x2618, 0x0, 0x0);
        gbc.writeMem(0x1660, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x469c, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0199
        gbc.setState(0xa6fc, 0xf247, 0xfba0, 0x6213, 0x18aa, 0x3d96, 0x0, 0x0);
        gbc.writeMem(0xa6fc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0xa6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6fc));
        EXPECT(0x2c, gbc.readMem(0xa6fd));
        // CB 2C 019A
        gbc.setState(0x696a, 0x28ac, 0x91f0, 0xb954, 0x57d, 0xec74, 0x1, 0x1);
        gbc.writeMem(0x696a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x28ac, gbc.sp());
        EXPECT(0x696c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 019B
        gbc.setState(0xabb, 0x2583, 0xe090, 0xac60, 0x32ce, 0xe417, 0x1, 0x0);
        gbc.writeMem(0xabb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2583, gbc.sp());
        EXPECT(0xabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 019C
        gbc.setState(0x1884, 0x7672, 0x8730, 0x9bb, 0xc315, 0x28f1, 0x1, 0x0);
        gbc.writeMem(0x1884, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0x1886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 019D
        gbc.setState(0x854a, 0x1485, 0xa740, 0xa4b2, 0x494c, 0x890a, 0x1, 0x0);
        gbc.writeMem(0x854a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1485, gbc.sp());
        EXPECT(0x854c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854a));
        EXPECT(0x2c, gbc.readMem(0x854b));
        // CB 2C 019E
        gbc.setState(0x4eab, 0xd147, 0xa930, 0xbec2, 0x3b74, 0xa1e0, 0x1, 0x1);
        gbc.writeMem(0x4eab, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd147, gbc.sp());
        EXPECT(0x4ead, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 019F
        gbc.setState(0xe812, 0x49c5, 0xb030, 0xe249, 0xe51, 0x2a86, 0x1, 0x0);
        gbc.writeMem(0xe812, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x49c5, gbc.sp());
        EXPECT(0xe814, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe812));
        EXPECT(0x2c, gbc.readMem(0xe813));
        // CB 2C 01A0
        gbc.setState(0xc7fd, 0xb5b7, 0x8d40, 0xce0b, 0xc920, 0x980c, 0x0, 0x0);
        gbc.writeMem(0xc7fd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb5b7, gbc.sp());
        EXPECT(0xc7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7fd));
        EXPECT(0x2c, gbc.readMem(0xc7fe));
        // CB 2C 01A1
        gbc.setState(0xa1da, 0xfb60, 0x1a80, 0x1266, 0xb30e, 0xe8c5, 0x0, 0x0);
        gbc.writeMem(0xa1da, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfb60, gbc.sp());
        EXPECT(0xa1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1da));
        EXPECT(0x2c, gbc.readMem(0xa1db));
        // CB 2C 01A2
        gbc.setState(0xd56a, 0xbd84, 0xfdc0, 0xd7e9, 0x56c7, 0x1c21, 0x0, 0x0);
        gbc.writeMem(0xd56a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xbd84, gbc.sp());
        EXPECT(0xd56c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd56a));
        EXPECT(0x2c, gbc.readMem(0xd56b));
        // CB 2C 01A3
        gbc.setState(0xd724, 0x826e, 0xd860, 0xab8f, 0x8727, 0xf46b, 0x0, 0x0);
        gbc.writeMem(0xd724, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x826e, gbc.sp());
        EXPECT(0xd726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd724));
        EXPECT(0x2c, gbc.readMem(0xd725));
        // CB 2C 01A4
        gbc.setState(0x393, 0x164a, 0xff20, 0xfc1b, 0xc514, 0xe2e2, 0x1, 0x0);
        gbc.writeMem(0x393, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x164a, gbc.sp());
        EXPECT(0x395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01A5
        gbc.setState(0x2b9, 0x3d45, 0xe2d0, 0x2127, 0x513b, 0xa26b, 0x0, 0x1);
        gbc.writeMem(0x2b9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3d45, gbc.sp());
        EXPECT(0x2bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01A6
        gbc.setState(0xb79c, 0xc160, 0x6c60, 0x8195, 0x2b85, 0xadb3, 0x1, 0x1);
        gbc.writeMem(0xb79c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc160, gbc.sp());
        EXPECT(0xb79e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79c));
        EXPECT(0x2c, gbc.readMem(0xb79d));
        // CB 2C 01A7
        gbc.setState(0x9630, 0xa457, 0x84f0, 0x61d6, 0x1ce5, 0xe063, 0x0, 0x0);
        gbc.writeMem(0x9630, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa457, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9630));
        EXPECT(0x2c, gbc.readMem(0x9631));
        // CB 2C 01A8
        gbc.setState(0x16e, 0x7e71, 0xbbb0, 0x6d8d, 0x382d, 0xd09e, 0x0, 0x0);
        gbc.writeMem(0x16e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7e71, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01A9
        gbc.setState(0xe93f, 0xff20, 0x6780, 0xbe36, 0x6058, 0xa809, 0x1, 0x1);
        gbc.writeMem(0xe93f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xff20, gbc.sp());
        EXPECT(0xe941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93f));
        EXPECT(0x2c, gbc.readMem(0xe940));
        // CB 2C 01AB
        gbc.setState(0x82f9, 0x8fc4, 0x670, 0x6516, 0xc1e1, 0x389c, 0x1, 0x0);
        gbc.writeMem(0x82f9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8fc4, gbc.sp());
        EXPECT(0x82fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82f9));
        EXPECT(0x2c, gbc.readMem(0x82fa));
        // CB 2C 01AC
        gbc.setState(0x53d5, 0x7031, 0x5a10, 0xafcc, 0x813, 0xdfb8, 0x0, 0x0);
        gbc.writeMem(0x53d5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7031, gbc.sp());
        EXPECT(0x53d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01AD
        gbc.setState(0xde61, 0x8e74, 0x5410, 0xffd0, 0x8a1, 0x6340, 0x1, 0x0);
        gbc.writeMem(0xde61, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0xde63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde61));
        EXPECT(0x2c, gbc.readMem(0xde62));
        // CB 2C 01AE
        gbc.setState(0x4918, 0x6a46, 0x9a20, 0x6847, 0xb41d, 0x97cd, 0x0, 0x0);
        gbc.writeMem(0x4918, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x6a46, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01AF
        gbc.setState(0xe7a6, 0xa0d, 0xd930, 0xaa6, 0xfe9f, 0xee03, 0x1, 0x1);
        gbc.writeMem(0xe7a6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa0d, gbc.sp());
        EXPECT(0xe7a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a6));
        EXPECT(0x2c, gbc.readMem(0xe7a7));
        // CB 2C 01B0
        gbc.setState(0x971f, 0xdc6b, 0x3d90, 0x176b, 0xa89b, 0xb836, 0x1, 0x0);
        gbc.writeMem(0x971f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0x9721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x971f));
        EXPECT(0x2c, gbc.readMem(0x9720));
        // CB 2C 01B1
        gbc.setState(0x581d, 0x2d1a, 0xe260, 0x7218, 0x1b33, 0x3e19, 0x1, 0x0);
        gbc.writeMem(0x581d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2d1a, gbc.sp());
        EXPECT(0x581f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01B2
        gbc.setState(0x90af, 0x46e5, 0x42f0, 0xe6b7, 0x48e, 0xff60, 0x0, 0x1);
        gbc.writeMem(0x90af, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0x90b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90af));
        EXPECT(0x2c, gbc.readMem(0x90b0));
        // CB 2C 01B4
        gbc.setState(0x998c, 0x3d74, 0x34d0, 0xc32e, 0xe9ff, 0x9b83, 0x1, 0x0);
        gbc.writeMem(0x998c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x998c));
        EXPECT(0x2c, gbc.readMem(0x998d));
        // CB 2C 01B5
        gbc.setState(0x3529, 0xfb11, 0xb710, 0xaf44, 0x61a4, 0x8c5e, 0x0, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x352b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01B6
        gbc.setState(0xab4, 0xdc29, 0xf4d0, 0xcced, 0x90b7, 0x15af, 0x0, 0x0);
        gbc.writeMem(0xab4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xdc29, gbc.sp());
        EXPECT(0xab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01B7
        gbc.setState(0xbfc6, 0x4250, 0xb530, 0xea95, 0x13c6, 0x7932, 0x0, 0x1);
        gbc.writeMem(0xbfc6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4250, gbc.sp());
        EXPECT(0xbfc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfc6));
        EXPECT(0x2c, gbc.readMem(0xbfc7));
        // CB 2C 01B8
        gbc.setState(0x63ee, 0xb4b8, 0x2a80, 0xed80, 0x4f2, 0xae0d, 0x1, 0x1);
        gbc.writeMem(0x63ee, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb4b8, gbc.sp());
        EXPECT(0x63f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01B9
        gbc.setState(0x768e, 0xc652, 0xca40, 0x436, 0x8228, 0xac72, 0x1, 0x1);
        gbc.writeMem(0x768e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xc652, gbc.sp());
        EXPECT(0x7690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01BA
        gbc.setState(0x6549, 0x9a0a, 0x8e60, 0x65c1, 0x7fe0, 0x9994, 0x0, 0x0);
        gbc.writeMem(0x6549, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9a0a, gbc.sp());
        EXPECT(0x654b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01BB
        gbc.setState(0xc843, 0x5b24, 0x3db0, 0x676d, 0x9d0a, 0x3d89, 0x1, 0x0);
        gbc.writeMem(0xc843, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5b24, gbc.sp());
        EXPECT(0xc845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc843));
        EXPECT(0x2c, gbc.readMem(0xc844));
        // CB 2C 01BC
        gbc.setState(0x7af8, 0xbb98, 0x6500, 0x74c4, 0xe15e, 0x7ff3, 0x0, 0x1);
        gbc.writeMem(0x7af8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xbb98, gbc.sp());
        EXPECT(0x7afa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01BE
        gbc.setState(0xc03e, 0x7672, 0xe9f0, 0x52f3, 0x2a8, 0x771c, 0x1, 0x1);
        gbc.writeMem(0xc03e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7672, gbc.sp());
        EXPECT(0xc040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc03e));
        EXPECT(0x2c, gbc.readMem(0xc03f));
        // CB 2C 01BF
        gbc.setState(0x2a78, 0x91c3, 0xdfa0, 0xc12, 0x18ed, 0xc36d, 0x1, 0x1);
        gbc.writeMem(0x2a78, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x91c3, gbc.sp());
        EXPECT(0x2a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01C0
        gbc.setState(0x8ada, 0x83a9, 0xbc90, 0x192b, 0x3ba3, 0x97f8, 0x1, 0x0);
        gbc.writeMem(0x8ada, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x83a9, gbc.sp());
        EXPECT(0x8adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ada));
        EXPECT(0x2c, gbc.readMem(0x8adb));
        // CB 2C 01C1
        gbc.setState(0xaf91, 0x73a2, 0x1810, 0x8aca, 0x6ec6, 0x5178, 0x0, 0x1);
        gbc.writeMem(0xaf91, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x73a2, gbc.sp());
        EXPECT(0xaf93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf91));
        EXPECT(0x2c, gbc.readMem(0xaf92));
        // CB 2C 01C2
        gbc.setState(0x9336, 0xeb7c, 0x2540, 0x507c, 0x9382, 0x3579, 0x1, 0x0);
        gbc.writeMem(0x9336, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xeb7c, gbc.sp());
        EXPECT(0x9338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9336));
        EXPECT(0x2c, gbc.readMem(0x9337));
        // CB 2C 01C3
        gbc.setState(0xea7c, 0xc195, 0x7930, 0xb3f0, 0x2c26, 0x6d2, 0x1, 0x0);
        gbc.writeMem(0xea7c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc195, gbc.sp());
        EXPECT(0xea7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7c));
        EXPECT(0x2c, gbc.readMem(0xea7d));
        // CB 2C 01C5
        gbc.setState(0xcdde, 0x5c73, 0xbcf0, 0x9068, 0x59d0, 0xf9b2, 0x0, 0x1);
        gbc.writeMem(0xcdde, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5c73, gbc.sp());
        EXPECT(0xcde0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdde));
        EXPECT(0x2c, gbc.readMem(0xcddf));
        // CB 2C 01C6
        gbc.setState(0xe808, 0x640c, 0xca90, 0x9f01, 0xefdd, 0x2c88, 0x0, 0x0);
        gbc.writeMem(0xe808, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x640c, gbc.sp());
        EXPECT(0xe80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe808));
        EXPECT(0x2c, gbc.readMem(0xe809));
        // CB 2C 01C7
        gbc.setState(0x1f47, 0xc7a3, 0xcc40, 0xdd21, 0xd71b, 0x9543, 0x1, 0x1);
        gbc.writeMem(0x1f47, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc7a3, gbc.sp());
        EXPECT(0x1f49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01C8
        gbc.setState(0xb76c, 0x4fa2, 0x69b0, 0x6718, 0xbcf8, 0x1acc, 0x0, 0x1);
        gbc.writeMem(0xb76c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4fa2, gbc.sp());
        EXPECT(0xb76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76c));
        EXPECT(0x2c, gbc.readMem(0xb76d));
        // CB 2C 01C9
        gbc.setState(0xb663, 0x939a, 0xadc0, 0x7318, 0xf34d, 0xb6c0, 0x1, 0x0);
        gbc.writeMem(0xb663, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x939a, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x2c, gbc.readMem(0xb664));
        // CB 2C 01CA
        gbc.setState(0xb4a4, 0x2917, 0xf1c0, 0xa9d7, 0xe2bb, 0xfc3e, 0x1, 0x1);
        gbc.writeMem(0xb4a4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2917, gbc.sp());
        EXPECT(0xb4a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4a4));
        EXPECT(0x2c, gbc.readMem(0xb4a5));
        // CB 2C 01CB
        gbc.setState(0x5657, 0xe715, 0x8790, 0x1f7c, 0x79ec, 0x9552, 0x1, 0x0);
        gbc.writeMem(0x5657, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x5659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01CC
        gbc.setState(0x159c, 0x34ca, 0x3110, 0x93e6, 0x56d, 0x7c9b, 0x0, 0x0);
        gbc.writeMem(0x159c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x34ca, gbc.sp());
        EXPECT(0x159e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01CD
        gbc.setState(0x5fff, 0xc31d, 0xd000, 0x8bb9, 0x9cee, 0xb6fa, 0x1, 0x0);
        gbc.writeMem(0x5fff, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc31d, gbc.sp());
        EXPECT(0x6001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01CE
        gbc.setState(0x292b, 0x4f1d, 0x7f70, 0xab6f, 0xfb00, 0x265a, 0x1, 0x1);
        gbc.writeMem(0x292b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4f1d, gbc.sp());
        EXPECT(0x292d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01CF
        gbc.setState(0x51d, 0xdf9a, 0xc2d0, 0x976c, 0xa03a, 0x66a3, 0x0, 0x1);
        gbc.writeMem(0x51d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xdf9a, gbc.sp());
        EXPECT(0x51f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01D0
        gbc.setState(0x75a2, 0xc4b0, 0xddb0, 0x7b22, 0x6354, 0x31e0, 0x0, 0x1);
        gbc.writeMem(0x75a2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc4b0, gbc.sp());
        EXPECT(0x75a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01D1
        gbc.setState(0xe434, 0x2085, 0xe50, 0xa943, 0x28b4, 0xd18b, 0x1, 0x0);
        gbc.writeMem(0xe434, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x2085, gbc.sp());
        EXPECT(0xe436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe434));
        EXPECT(0x2c, gbc.readMem(0xe435));
        // CB 2C 01D2
        gbc.setState(0x8cd3, 0xbe44, 0x6e0, 0xa04b, 0x9957, 0xa4d7, 0x1, 0x0);
        gbc.writeMem(0x8cd3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xbe44, gbc.sp());
        EXPECT(0x8cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cd3));
        EXPECT(0x2c, gbc.readMem(0x8cd4));
        // CB 2C 01D3
        gbc.setState(0xedf6, 0x15e3, 0xf060, 0x8af5, 0xdfe0, 0x8583, 0x0, 0x0);
        gbc.writeMem(0xedf6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x15e3, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf6));
        EXPECT(0x2c, gbc.readMem(0xedf7));
        // CB 2C 01D4
        gbc.setState(0x3c87, 0xf78c, 0xb860, 0xd216, 0x20a4, 0x7e5f, 0x1, 0x0);
        gbc.writeMem(0x3c87, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xf78c, gbc.sp());
        EXPECT(0x3c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01D5
        gbc.setState(0x4796, 0x48c1, 0xb0a0, 0x91f, 0xa67, 0x8284, 0x0, 0x1);
        gbc.writeMem(0x4796, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x48c1, gbc.sp());
        EXPECT(0x4798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01D6
        gbc.setState(0xa336, 0x8097, 0xd980, 0x1c78, 0xccf8, 0x598d, 0x1, 0x1);
        gbc.writeMem(0xa336, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8097, gbc.sp());
        EXPECT(0xa338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa336));
        EXPECT(0x2c, gbc.readMem(0xa337));
        // CB 2C 01D7
        gbc.setState(0x82c9, 0xc19b, 0x7550, 0xca4c, 0xad8, 0x95ff, 0x1, 0x0);
        gbc.writeMem(0x82c9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc19b, gbc.sp());
        EXPECT(0x82cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c9));
        EXPECT(0x2c, gbc.readMem(0x82ca));
        // CB 2C 01D8
        gbc.setState(0xe256, 0x7491, 0x9460, 0xfb13, 0x5191, 0xb4e3, 0x0, 0x0);
        gbc.writeMem(0xe256, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xe258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe256));
        EXPECT(0x2c, gbc.readMem(0xe257));
        // CB 2C 01D9
        gbc.setState(0x3b5c, 0x7e51, 0x7ff0, 0x99a0, 0xad56, 0x1bea, 0x0, 0x1);
        gbc.writeMem(0x3b5c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x7e51, gbc.sp());
        EXPECT(0x3b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01DA
        gbc.setState(0xcec3, 0x6913, 0x34a0, 0xcacc, 0x62cf, 0x38d6, 0x0, 0x0);
        gbc.writeMem(0xcec3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6913, gbc.sp());
        EXPECT(0xcec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec3));
        EXPECT(0x2c, gbc.readMem(0xcec4));
        // CB 2C 01DB
        gbc.setState(0x6abd, 0x5715, 0xbd40, 0xe50d, 0x16ac, 0x2fa0, 0x0, 0x1);
        gbc.writeMem(0x6abd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5715, gbc.sp());
        EXPECT(0x6abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01DC
        gbc.setState(0xd493, 0x49a9, 0xd7a0, 0x5f20, 0x59b4, 0x5880, 0x0, 0x1);
        gbc.writeMem(0xd493, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x49a9, gbc.sp());
        EXPECT(0xd495, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd493));
        EXPECT(0x2c, gbc.readMem(0xd494));
        // CB 2C 01DD
        gbc.setState(0x595d, 0xf153, 0x24e0, 0xf5e5, 0xfa70, 0x2059, 0x1, 0x0);
        gbc.writeMem(0x595d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xf153, gbc.sp());
        EXPECT(0x595f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01DE
        gbc.setState(0xe095, 0xefb1, 0xa490, 0x696, 0xc3bb, 0x54ff, 0x1, 0x0);
        gbc.writeMem(0xe095, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xefb1, gbc.sp());
        EXPECT(0xe097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe095));
        EXPECT(0x2c, gbc.readMem(0xe096));
        // CB 2C 01DF
        gbc.setState(0xa6a2, 0x8561, 0x9b90, 0xf83c, 0xe6b0, 0x425b, 0x1, 0x1);
        gbc.writeMem(0xa6a2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x8561, gbc.sp());
        EXPECT(0xa6a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a2));
        EXPECT(0x2c, gbc.readMem(0xa6a3));
        // CB 2C 01E0
        gbc.setState(0x74ac, 0x66e3, 0x69a0, 0xbe1, 0x472, 0xb1ed, 0x1, 0x1);
        gbc.writeMem(0x74ac, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x66e3, gbc.sp());
        EXPECT(0x74ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01E1
        gbc.setState(0xbd44, 0x9e45, 0x37b0, 0x19ae, 0x1815, 0x3e1, 0x1, 0x0);
        gbc.writeMem(0xbd44, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9e45, gbc.sp());
        EXPECT(0xbd46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd44));
        EXPECT(0x2c, gbc.readMem(0xbd45));
        // CB 2C 01E2
        gbc.setState(0xebf7, 0x216e, 0x3990, 0x7f8d, 0xe350, 0x6ed3, 0x1, 0x1);
        gbc.writeMem(0xebf7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x216e, gbc.sp());
        EXPECT(0xebf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf7));
        EXPECT(0x2c, gbc.readMem(0xebf8));
        // CB 2C 01E3
        gbc.setState(0xd41e, 0x62e1, 0x1e60, 0xa221, 0x2947, 0x32f6, 0x1, 0x0);
        gbc.writeMem(0xd41e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x62e1, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41e));
        EXPECT(0x2c, gbc.readMem(0xd41f));
        // CB 2C 01E4
        gbc.setState(0xbdfe, 0x76f6, 0xe390, 0x3554, 0x80eb, 0x7cd1, 0x0, 0x0);
        gbc.writeMem(0xbdfe, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x76f6, gbc.sp());
        EXPECT(0xbe00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfe));
        EXPECT(0x2c, gbc.readMem(0xbdff));
        // CB 2C 01E5
        gbc.setState(0x855b, 0xd98e, 0xefa0, 0x946f, 0xf065, 0xfacc, 0x1, 0x1);
        gbc.writeMem(0x855b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855b));
        EXPECT(0x2c, gbc.readMem(0x855c));
        // CB 2C 01E6
        gbc.setState(0xdbd3, 0xc9f8, 0x2a00, 0x70f7, 0x8af6, 0x6a1e, 0x1, 0x0);
        gbc.writeMem(0xdbd3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc9f8, gbc.sp());
        EXPECT(0xdbd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd3));
        EXPECT(0x2c, gbc.readMem(0xdbd4));
        // CB 2C 01E7
        gbc.setState(0xbbca, 0x1c2a, 0xabe0, 0xde68, 0x90c3, 0xa597, 0x1, 0x0);
        gbc.writeMem(0xbbca, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x1c2a, gbc.sp());
        EXPECT(0xbbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbca));
        EXPECT(0x2c, gbc.readMem(0xbbcb));
        // CB 2C 01E8
        gbc.setState(0x1c21, 0xf60b, 0x3ef0, 0x654e, 0xf7ae, 0x8e43, 0x1, 0x0);
        gbc.writeMem(0x1c21, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x1c23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01E9
        gbc.setState(0xab75, 0x47f5, 0x1f0, 0xec20, 0xe907, 0x60a0, 0x1, 0x0);
        gbc.writeMem(0xab75, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x47f5, gbc.sp());
        EXPECT(0xab77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab75));
        EXPECT(0x2c, gbc.readMem(0xab76));
        // CB 2C 01EA
        gbc.setState(0xb3b, 0x9590, 0xb1f0, 0xb10c, 0xdea6, 0xdbbd, 0x0, 0x0);
        gbc.writeMem(0xb3b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9590, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01EB
        gbc.setState(0x220c, 0x7a82, 0xc150, 0x82eb, 0xf61d, 0x927b, 0x0, 0x0);
        gbc.writeMem(0x220c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x7a82, gbc.sp());
        EXPECT(0x220e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01EC
        gbc.setState(0x3ec8, 0xa636, 0xf380, 0xb497, 0x6289, 0x4317, 0x0, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa636, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01ED
        gbc.setState(0x4fdd, 0x878b, 0x3f20, 0x41ae, 0x495e, 0x99bc, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x878b, gbc.sp());
        EXPECT(0x4fdf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01EF
        gbc.setState(0xd68e, 0xaab5, 0xb340, 0x2416, 0x5f2d, 0x6b55, 0x1, 0x1);
        gbc.writeMem(0xd68e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xaab5, gbc.sp());
        EXPECT(0xd690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd68e));
        EXPECT(0x2c, gbc.readMem(0xd68f));
        // CB 2C 01F0
        gbc.setState(0x83a7, 0x27bf, 0xdec0, 0xa0ff, 0x3fb8, 0xb74a, 0x1, 0x0);
        gbc.writeMem(0x83a7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x27bf, gbc.sp());
        EXPECT(0x83a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a7));
        EXPECT(0x2c, gbc.readMem(0x83a8));
        // CB 2C 01F1
        gbc.setState(0x7325, 0xbecb, 0x25a0, 0xf6ce, 0x42f9, 0xb338, 0x1, 0x1);
        gbc.writeMem(0x7325, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbecb, gbc.sp());
        EXPECT(0x7327, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01F2
        gbc.setState(0x562e, 0x3524, 0xae00, 0x9afc, 0x8618, 0x5fe0, 0x0, 0x0);
        gbc.writeMem(0x562e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3524, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01F3
        gbc.setState(0x2d2d, 0x2bdc, 0x6ee0, 0xa271, 0xbb20, 0xc8d5, 0x1, 0x1);
        gbc.writeMem(0x2d2d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bdc, gbc.sp());
        EXPECT(0x2d2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01F4
        gbc.setState(0x3c88, 0xe61a, 0xa1a0, 0x15a1, 0x9ca5, 0x63e4, 0x0, 0x0);
        gbc.writeMem(0x3c88, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01F5
        gbc.setState(0x3ecc, 0x3f81, 0xf3a0, 0x1d49, 0x1aa, 0x42a2, 0x1, 0x1);
        gbc.writeMem(0x3ecc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3f81, gbc.sp());
        EXPECT(0x3ece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 01F6
        gbc.setState(0x3fc7, 0xd596, 0x5840, 0xaed2, 0x25e5, 0x4515, 0x1, 0x0);
        gbc.writeMem(0x3fc7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x3fc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01F7
        gbc.setState(0xce13, 0x124, 0xaaf0, 0x4b21, 0xb22e, 0xc4, 0x0, 0x0);
        gbc.writeMem(0xce13, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x124, gbc.sp());
        EXPECT(0xce15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce13));
        EXPECT(0x2c, gbc.readMem(0xce14));
        // CB 2C 01F8
        gbc.setState(0x274d, 0x63b5, 0xe0d0, 0x8f6b, 0x8788, 0xf53d, 0x0, 0x0);
        gbc.writeMem(0x274d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x63b5, gbc.sp());
        EXPECT(0x274f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01F9
        gbc.setState(0x68e6, 0x50d3, 0x32f0, 0xd7c2, 0xb42a, 0x67ce, 0x1, 0x0);
        gbc.writeMem(0x68e6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x50d3, gbc.sp());
        EXPECT(0x68e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01FA
        gbc.setState(0xc1cf, 0x4224, 0xf230, 0x9470, 0xec4e, 0x4ca2, 0x0, 0x1);
        gbc.writeMem(0xc1cf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4224, gbc.sp());
        EXPECT(0xc1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1cf));
        EXPECT(0x2c, gbc.readMem(0xc1d0));
        // CB 2C 01FB
        gbc.setState(0xb7c0, 0x61b3, 0xdf80, 0x9583, 0x1676, 0x426, 0x0, 0x1);
        gbc.writeMem(0xb7c0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x61b3, gbc.sp());
        EXPECT(0xb7c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7c0));
        EXPECT(0x2c, gbc.readMem(0xb7c1));
        // CB 2C 01FC
        gbc.setState(0x35d1, 0xd52b, 0x3a50, 0x96be, 0x390f, 0x5d9e, 0x1, 0x1);
        gbc.writeMem(0x35d1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd52b, gbc.sp());
        EXPECT(0x35d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01FD
        gbc.setState(0x9046, 0xe3c3, 0xe300, 0x8a9b, 0x4255, 0x4d36, 0x1, 0x1);
        gbc.writeMem(0x9046, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe3c3, gbc.sp());
        EXPECT(0x9048, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9046));
        EXPECT(0x2c, gbc.readMem(0x9047));
        // CB 2C 01FE
        gbc.setState(0x44df, 0xfa5a, 0xa810, 0x409f, 0x4829, 0xb73c, 0x1, 0x0);
        gbc.writeMem(0x44df, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfa5a, gbc.sp());
        EXPECT(0x44e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 01FF
        gbc.setState(0x2ca5, 0x544a, 0xf3d0, 0xec53, 0x947a, 0x1d98, 0x1, 0x1);
        gbc.writeMem(0x2ca5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x544a, gbc.sp());
        EXPECT(0x2ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0200
        gbc.setState(0x89a, 0xc0ed, 0x3c80, 0x2175, 0x4b97, 0xfb30, 0x0, 0x0);
        gbc.writeMem(0x89a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc0ed, gbc.sp());
        EXPECT(0x89c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0201
        gbc.setState(0x36cc, 0x884e, 0x61d0, 0x82a0, 0x702b, 0x5c38, 0x1, 0x0);
        gbc.writeMem(0x36cc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0x36ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0202
        gbc.setState(0x6339, 0x2a07, 0x5150, 0x6e1a, 0x104, 0xae25, 0x0, 0x0);
        gbc.writeMem(0x6339, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2a07, gbc.sp());
        EXPECT(0x633b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0203
        gbc.setState(0x248a, 0xa78b, 0x780, 0x3913, 0x3c09, 0xefc5, 0x1, 0x0);
        gbc.writeMem(0x248a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0x248c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0204
        gbc.setState(0x7691, 0x2eff, 0x1120, 0x24ce, 0x7f93, 0x1f3f, 0x1, 0x0);
        gbc.writeMem(0x7691, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2eff, gbc.sp());
        EXPECT(0x7693, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0205
        gbc.setState(0xaaa6, 0x2f9b, 0xd9c0, 0xc332, 0x60e6, 0x4971, 0x0, 0x0);
        gbc.writeMem(0xaaa6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2f9b, gbc.sp());
        EXPECT(0xaaa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaa6));
        EXPECT(0x2c, gbc.readMem(0xaaa7));
        // CB 2C 0206
        gbc.setState(0x1285, 0x41df, 0x6320, 0x2f5a, 0x6cae, 0x81fb, 0x1, 0x0);
        gbc.writeMem(0x1285, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x41df, gbc.sp());
        EXPECT(0x1287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0207
        gbc.setState(0x64b, 0x46d8, 0x5e60, 0xc22f, 0xa56a, 0x3d8c, 0x0, 0x1);
        gbc.writeMem(0x64b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x46d8, gbc.sp());
        EXPECT(0x64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0208
        gbc.setState(0xa0d9, 0x75fd, 0xe5b0, 0x8bd, 0xec5d, 0x8aac, 0x1, 0x1);
        gbc.writeMem(0xa0d9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0x2c, gbc.readMem(0xa0da));
        // CB 2C 0209
        gbc.setState(0x6c7a, 0x677f, 0x90d0, 0xfee1, 0xfab9, 0x2e25, 0x0, 0x1);
        gbc.writeMem(0x6c7a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x677f, gbc.sp());
        EXPECT(0x6c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 020A
        gbc.setState(0x6423, 0x4c1e, 0x8cf0, 0x1455, 0x1597, 0x938e, 0x0, 0x0);
        gbc.writeMem(0x6423, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4c1e, gbc.sp());
        EXPECT(0x6425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 020B
        gbc.setState(0xe226, 0xc68, 0x1d10, 0xb8c7, 0xd19e, 0x41a4, 0x0, 0x1);
        gbc.writeMem(0xe226, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xc68, gbc.sp());
        EXPECT(0xe228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe226));
        EXPECT(0x2c, gbc.readMem(0xe227));
        // CB 2C 020C
        gbc.setState(0x2d8d, 0x2db, 0x2050, 0xe728, 0x33d7, 0xb1a0, 0x0, 0x0);
        gbc.writeMem(0x2d8d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2db, gbc.sp());
        EXPECT(0x2d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 020D
        gbc.setState(0xe017, 0xb621, 0xdd90, 0x6f8b, 0x235a, 0xcbf6, 0x0, 0x1);
        gbc.writeMem(0xe017, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb621, gbc.sp());
        EXPECT(0xe019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe017));
        EXPECT(0x2c, gbc.readMem(0xe018));
        // CB 2C 020E
        gbc.setState(0xbe8f, 0x1949, 0x8020, 0xaaed, 0x27ed, 0xced3, 0x1, 0x0);
        gbc.writeMem(0xbe8f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x1949, gbc.sp());
        EXPECT(0xbe91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8f));
        EXPECT(0x2c, gbc.readMem(0xbe90));
        // CB 2C 020F
        gbc.setState(0x8ca5, 0xcd5c, 0xc40, 0x6aec, 0x1da8, 0x18c8, 0x1, 0x0);
        gbc.writeMem(0x8ca5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcd5c, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0x2c, gbc.readMem(0x8ca6));
        // CB 2C 0210
        gbc.setState(0xa88a, 0xe35d, 0xf290, 0x2742, 0x3e4d, 0x610c, 0x0, 0x0);
        gbc.writeMem(0xa88a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe35d, gbc.sp());
        EXPECT(0xa88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa88a));
        EXPECT(0x2c, gbc.readMem(0xa88b));
        // CB 2C 0212
        gbc.setState(0x99e9, 0xcd43, 0x6f40, 0x36d1, 0xe09c, 0xbdda, 0x1, 0x1);
        gbc.writeMem(0x99e9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcd43, gbc.sp());
        EXPECT(0x99eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e9));
        EXPECT(0x2c, gbc.readMem(0x99ea));
        // CB 2C 0213
        gbc.setState(0x46ae, 0x8e42, 0x5f00, 0x43d7, 0x8bf8, 0x29a2, 0x1, 0x1);
        gbc.writeMem(0x46ae, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8e42, gbc.sp());
        EXPECT(0x46b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0214
        gbc.setState(0x9caf, 0x8877, 0x1b10, 0xfa44, 0xaf1d, 0x20c7, 0x0, 0x1);
        gbc.writeMem(0x9caf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x8877, gbc.sp());
        EXPECT(0x9cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9caf));
        EXPECT(0x2c, gbc.readMem(0x9cb0));
        // CB 2C 0215
        gbc.setState(0x8ad, 0xfbd0, 0x70b0, 0xf675, 0x8a58, 0xabdb, 0x0, 0x1);
        gbc.writeMem(0x8ad, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfbd0, gbc.sp());
        EXPECT(0x8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0216
        gbc.setState(0x3b66, 0x9290, 0x460, 0xd711, 0xd803, 0x695b, 0x0, 0x0);
        gbc.writeMem(0x3b66, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9290, gbc.sp());
        EXPECT(0x3b68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0217
        gbc.setState(0xe2cb, 0x9683, 0x93b0, 0x8253, 0xd3, 0xe8da, 0x1, 0x0);
        gbc.writeMem(0xe2cb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9683, gbc.sp());
        EXPECT(0xe2cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2cb));
        EXPECT(0x2c, gbc.readMem(0xe2cc));
        // CB 2C 0218
        gbc.setState(0x7f50, 0xb8f1, 0xe300, 0x1fe2, 0x68f3, 0xd86, 0x0, 0x1);
        gbc.writeMem(0x7f50, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb8f1, gbc.sp());
        EXPECT(0x7f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0219
        gbc.setState(0xcc7, 0x7dc2, 0x7da0, 0xdadb, 0x696f, 0x36f5, 0x1, 0x1);
        gbc.writeMem(0xcc7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7dc2, gbc.sp());
        EXPECT(0xcc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 021A
        gbc.setState(0x6672, 0x51e0, 0xd800, 0x3c93, 0xa9af, 0x7f72, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x51e0, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 021B
        gbc.setState(0x4531, 0x3019, 0x32d0, 0x107c, 0x1838, 0xc5b7, 0x0, 0x1);
        gbc.writeMem(0x4531, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3019, gbc.sp());
        EXPECT(0x4533, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 021C
        gbc.setState(0xd6a7, 0xdbb7, 0x3e80, 0xe96e, 0x4306, 0x3bd3, 0x0, 0x1);
        gbc.writeMem(0xd6a7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xdbb7, gbc.sp());
        EXPECT(0xd6a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6a7));
        EXPECT(0x2c, gbc.readMem(0xd6a8));
        // CB 2C 021D
        gbc.setState(0x1b90, 0xe0e7, 0xf350, 0xc7c, 0x66bd, 0xe1b1, 0x1, 0x0);
        gbc.writeMem(0x1b90, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe0e7, gbc.sp());
        EXPECT(0x1b92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 021E
        gbc.setState(0xbde6, 0xa53c, 0xffe0, 0xd226, 0xf459, 0x754a, 0x0, 0x1);
        gbc.writeMem(0xbde6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa53c, gbc.sp());
        EXPECT(0xbde8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde6));
        EXPECT(0x2c, gbc.readMem(0xbde7));
        // CB 2C 021F
        gbc.setState(0x8296, 0x24f2, 0x920, 0xd596, 0x66bf, 0xd0e0, 0x0, 0x0);
        gbc.writeMem(0x8296, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x24f2, gbc.sp());
        EXPECT(0x8298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8296));
        EXPECT(0x2c, gbc.readMem(0x8297));
        // CB 2C 0220
        gbc.setState(0xc72d, 0xfb2d, 0x8c80, 0x5f8f, 0xf488, 0xdd36, 0x0, 0x1);
        gbc.writeMem(0xc72d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfb2d, gbc.sp());
        EXPECT(0xc72f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc72d));
        EXPECT(0x2c, gbc.readMem(0xc72e));
        // CB 2C 0221
        gbc.setState(0xd1b4, 0xbf3d, 0x2b60, 0x33b9, 0x6d44, 0x23c8, 0x0, 0x0);
        gbc.writeMem(0xd1b4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbf3d, gbc.sp());
        EXPECT(0xd1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b4));
        EXPECT(0x2c, gbc.readMem(0xd1b5));
        // CB 2C 0223
        gbc.setState(0x7cc2, 0xd71b, 0xbd40, 0x2b6c, 0xce8f, 0xe470, 0x1, 0x1);
        gbc.writeMem(0x7cc2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd71b, gbc.sp());
        EXPECT(0x7cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0224
        gbc.setState(0xe0b6, 0x6eac, 0xed40, 0xd161, 0x5bd4, 0xf387, 0x0, 0x0);
        gbc.writeMem(0xe0b6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6eac, gbc.sp());
        EXPECT(0xe0b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0b6));
        EXPECT(0x2c, gbc.readMem(0xe0b7));
        // CB 2C 0226
        gbc.setState(0x65ad, 0x75f1, 0x7870, 0xd699, 0xe39, 0x856e, 0x0, 0x1);
        gbc.writeMem(0x65ad, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x65af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0227
        gbc.setState(0x6d3c, 0x14cf, 0x57a0, 0xf6dd, 0xa911, 0xa009, 0x1, 0x1);
        gbc.writeMem(0x6d3c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x14cf, gbc.sp());
        EXPECT(0x6d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0228
        gbc.setState(0xa8f0, 0x7b6e, 0x60e0, 0xc8e0, 0xf5ab, 0x9cf3, 0x1, 0x0);
        gbc.writeMem(0xa8f0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x7b6e, gbc.sp());
        EXPECT(0xa8f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f0));
        EXPECT(0x2c, gbc.readMem(0xa8f1));
        // CB 2C 0229
        gbc.setState(0x9ad1, 0x924b, 0x1a30, 0x482f, 0x6950, 0x1668, 0x0, 0x1);
        gbc.writeMem(0x9ad1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x924b, gbc.sp());
        EXPECT(0x9ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ad1));
        EXPECT(0x2c, gbc.readMem(0x9ad2));
        // CB 2C 022A
        gbc.setState(0xc2f5, 0x4721, 0x2c0, 0x9c23, 0xeb77, 0xbd4e, 0x0, 0x0);
        gbc.writeMem(0xc2f5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x4721, gbc.sp());
        EXPECT(0xc2f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f5));
        EXPECT(0x2c, gbc.readMem(0xc2f6));
        // CB 2C 022B
        gbc.setState(0xe392, 0xffef, 0x83c0, 0x2ba5, 0xf14f, 0xcc22, 0x1, 0x1);
        gbc.writeMem(0xe392, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xffef, gbc.sp());
        EXPECT(0xe394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe392));
        EXPECT(0x2c, gbc.readMem(0xe393));
        // CB 2C 022C
        gbc.setState(0x5c0a, 0xcaa8, 0x6ff0, 0x1d38, 0x3f30, 0x594b, 0x1, 0x0);
        gbc.writeMem(0x5c0a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xcaa8, gbc.sp());
        EXPECT(0x5c0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 022D
        gbc.setState(0x2891, 0xde74, 0xa5f0, 0x2ed2, 0x96f4, 0xc8ef, 0x0, 0x0);
        gbc.writeMem(0x2891, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xde74, gbc.sp());
        EXPECT(0x2893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 022E
        gbc.setState(0x40ec, 0x4ac4, 0x89e0, 0x4b85, 0x6eaa, 0x531c, 0x0, 0x1);
        gbc.writeMem(0x40ec, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4ac4, gbc.sp());
        EXPECT(0x40ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 022F
        gbc.setState(0x2c4, 0xb9b8, 0x88f0, 0x8dbd, 0x9947, 0x2cff, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb9b8, gbc.sp());
        EXPECT(0x2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0230
        gbc.setState(0x7cf8, 0x5cbf, 0x4a40, 0x410c, 0x14b0, 0x9ff0, 0x1, 0x1);
        gbc.writeMem(0x7cf8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x5cbf, gbc.sp());
        EXPECT(0x7cfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0231
        gbc.setState(0xb549, 0x1f5e, 0x4f40, 0x3132, 0xa7aa, 0x9dbf, 0x1, 0x1);
        gbc.writeMem(0xb549, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1f5e, gbc.sp());
        EXPECT(0xb54b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb549));
        EXPECT(0x2c, gbc.readMem(0xb54a));
        // CB 2C 0232
        gbc.setState(0x2786, 0x2241, 0x9f60, 0x63cf, 0x177b, 0x6bbf, 0x1, 0x1);
        gbc.writeMem(0x2786, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2241, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0233
        gbc.setState(0x113d, 0xf71f, 0x5090, 0x899e, 0x7cb1, 0xd73e, 0x1, 0x0);
        gbc.writeMem(0x113d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf71f, gbc.sp());
        EXPECT(0x113f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0234
        gbc.setState(0xbbb1, 0xbc6a, 0x74f0, 0xa957, 0x6d6d, 0x2b5b, 0x0, 0x1);
        gbc.writeMem(0xbbb1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbc6a, gbc.sp());
        EXPECT(0xbbb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbb1));
        EXPECT(0x2c, gbc.readMem(0xbbb2));
        // CB 2C 0235
        gbc.setState(0x1007, 0xbfeb, 0xaeb0, 0x5bef, 0x3512, 0x4ccf, 0x1, 0x1);
        gbc.writeMem(0x1007, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbfeb, gbc.sp());
        EXPECT(0x1009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0236
        gbc.setState(0xf89, 0x1360, 0xb250, 0x2efe, 0xd9e9, 0x7586, 0x1, 0x1);
        gbc.writeMem(0xf89, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1360, gbc.sp());
        EXPECT(0xf8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0238
        gbc.setState(0x5ee5, 0xea9e, 0x2b90, 0x62cc, 0xb427, 0xc12d, 0x1, 0x0);
        gbc.writeMem(0x5ee5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xea9e, gbc.sp());
        EXPECT(0x5ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0239
        gbc.setState(0x99ea, 0x5045, 0xc7c0, 0x10a6, 0x2a5a, 0xeb4d, 0x1, 0x1);
        gbc.writeMem(0x99ea, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x5045, gbc.sp());
        EXPECT(0x99ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ea));
        EXPECT(0x2c, gbc.readMem(0x99eb));
        // CB 2C 023A
        gbc.setState(0x4f87, 0x51b, 0xcc20, 0x3190, 0x6fc7, 0xbd79, 0x1, 0x1);
        gbc.writeMem(0x4f87, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x51b, gbc.sp());
        EXPECT(0x4f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 023B
        gbc.setState(0x921, 0xd853, 0xaa0, 0x49c8, 0xc638, 0xb6ba, 0x1, 0x0);
        gbc.writeMem(0x921, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd853, gbc.sp());
        EXPECT(0x923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 023C
        gbc.setState(0xd6d, 0xbba6, 0x5fa0, 0xe27, 0x33cf, 0x6f97, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xbba6, gbc.sp());
        EXPECT(0xd6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 023D
        gbc.setState(0x2260, 0x714c, 0x2fb0, 0x6c38, 0x19f7, 0xace2, 0x1, 0x0);
        gbc.writeMem(0x2260, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x714c, gbc.sp());
        EXPECT(0x2262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 023E
        gbc.setState(0x8029, 0xd4fa, 0xc1d0, 0x31ba, 0x405d, 0x8a0f, 0x1, 0x1);
        gbc.writeMem(0x8029, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd4fa, gbc.sp());
        EXPECT(0x802b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8029));
        EXPECT(0x2c, gbc.readMem(0x802a));
        // CB 2C 023F
        gbc.setState(0xa5a5, 0xb700, 0x99d0, 0x4e71, 0xaaca, 0xe247, 0x1, 0x0);
        gbc.writeMem(0xa5a5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb700, gbc.sp());
        EXPECT(0xa5a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5a5));
        EXPECT(0x2c, gbc.readMem(0xa5a6));
        // CB 2C 0240
        gbc.setState(0xe94f, 0x66f4, 0x830, 0x898, 0x9d31, 0xbefc, 0x1, 0x1);
        gbc.writeMem(0xe94f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x66f4, gbc.sp());
        EXPECT(0xe951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94f));
        EXPECT(0x2c, gbc.readMem(0xe950));
        // CB 2C 0241
        gbc.setState(0xa180, 0xe132, 0x8ba0, 0xb5b4, 0xbb1a, 0xb9b9, 0x0, 0x0);
        gbc.writeMem(0xa180, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe132, gbc.sp());
        EXPECT(0xa182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa180));
        EXPECT(0x2c, gbc.readMem(0xa181));
        // CB 2C 0242
        gbc.setState(0x7a0d, 0x7bbb, 0xbdd0, 0x7335, 0x6e9e, 0x363, 0x0, 0x1);
        gbc.writeMem(0x7a0d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7bbb, gbc.sp());
        EXPECT(0x7a0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0243
        gbc.setState(0x3390, 0xc545, 0x1440, 0x4b53, 0x4eb8, 0xe12e, 0x0, 0x1);
        gbc.writeMem(0x3390, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc545, gbc.sp());
        EXPECT(0x3392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0244
        gbc.setState(0xca77, 0x1044, 0x6090, 0xe086, 0xa9c7, 0xdd7e, 0x1, 0x1);
        gbc.writeMem(0xca77, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x1044, gbc.sp());
        EXPECT(0xca79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca77));
        EXPECT(0x2c, gbc.readMem(0xca78));
        // CB 2C 0245
        gbc.setState(0x44b3, 0x4eb5, 0x8230, 0xf830, 0xae2, 0x4562, 0x1, 0x0);
        gbc.writeMem(0x44b3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4eb5, gbc.sp());
        EXPECT(0x44b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0246
        gbc.setState(0x922d, 0x35c7, 0x520, 0x969c, 0xf00d, 0xbaec, 0x1, 0x0);
        gbc.writeMem(0x922d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x35c7, gbc.sp());
        EXPECT(0x922f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x922d));
        EXPECT(0x2c, gbc.readMem(0x922e));
        // CB 2C 0247
        gbc.setState(0x666c, 0xd17d, 0xe7f0, 0xec8b, 0x4a88, 0x4290, 0x0, 0x0);
        gbc.writeMem(0x666c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd17d, gbc.sp());
        EXPECT(0x666e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0248
        gbc.setState(0xb194, 0x996, 0x62e0, 0x24d9, 0x86be, 0xecd2, 0x1, 0x1);
        gbc.writeMem(0xb194, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x996, gbc.sp());
        EXPECT(0xb196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb194));
        EXPECT(0x2c, gbc.readMem(0xb195));
        // CB 2C 0249
        gbc.setState(0x53fd, 0x3a31, 0xdbf0, 0xf863, 0x872, 0x3308, 0x1, 0x1);
        gbc.writeMem(0x53fd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3a31, gbc.sp());
        EXPECT(0x53ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 024A
        gbc.setState(0x174e, 0xc645, 0xa0a0, 0x31f2, 0xa548, 0x5b4f, 0x1, 0x0);
        gbc.writeMem(0x174e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc645, gbc.sp());
        EXPECT(0x1750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 024B
        gbc.setState(0x9ea, 0x839d, 0xe870, 0x8fcb, 0x39db, 0xc6b4, 0x1, 0x1);
        gbc.writeMem(0x9ea, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x839d, gbc.sp());
        EXPECT(0x9ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 024C
        gbc.setState(0x1b8, 0xb976, 0x7930, 0x19df, 0x7989, 0x8e90, 0x1, 0x1);
        gbc.writeMem(0x1b8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xb976, gbc.sp());
        EXPECT(0x1ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 024D
        gbc.setState(0x1ac5, 0x5430, 0xaf80, 0x2805, 0xf3cb, 0xf35a, 0x1, 0x1);
        gbc.writeMem(0x1ac5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x5430, gbc.sp());
        EXPECT(0x1ac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 024E
        gbc.setState(0x6c5c, 0xf8ec, 0xd810, 0xd2f9, 0x2edd, 0x2ccf, 0x1, 0x1);
        gbc.writeMem(0x6c5c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf8ec, gbc.sp());
        EXPECT(0x6c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 024F
        gbc.setState(0x29f4, 0x6b6a, 0xc40, 0xcd48, 0xb5d3, 0xc3e5, 0x0, 0x1);
        gbc.writeMem(0x29f4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6b6a, gbc.sp());
        EXPECT(0x29f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0250
        gbc.setState(0xa7d2, 0xe32c, 0x1f00, 0x149b, 0x5a46, 0xae47, 0x1, 0x1);
        gbc.writeMem(0xa7d2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe32c, gbc.sp());
        EXPECT(0xa7d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7d2));
        EXPECT(0x2c, gbc.readMem(0xa7d3));
        // CB 2C 0251
        gbc.setState(0x41f6, 0xa630, 0x4030, 0x8f7d, 0x50e9, 0x6fa6, 0x0, 0x0);
        gbc.writeMem(0x41f6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa630, gbc.sp());
        EXPECT(0x41f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0252
        gbc.setState(0x1ca7, 0xcf9e, 0xc6b0, 0xd028, 0x2d8b, 0x629d, 0x0, 0x0);
        gbc.writeMem(0x1ca7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x1ca9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0253
        gbc.setState(0xb7d6, 0x4ff6, 0x6e90, 0x38a6, 0x7ee, 0xfc10, 0x0, 0x0);
        gbc.writeMem(0xb7d6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4ff6, gbc.sp());
        EXPECT(0xb7d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d6));
        EXPECT(0x2c, gbc.readMem(0xb7d7));
        // CB 2C 0254
        gbc.setState(0x91d8, 0xa462, 0x2840, 0x247d, 0x34e4, 0x47d5, 0x0, 0x1);
        gbc.writeMem(0x91d8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa462, gbc.sp());
        EXPECT(0x91da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d8));
        EXPECT(0x2c, gbc.readMem(0x91d9));
        // CB 2C 0255
        gbc.setState(0x8728, 0x888b, 0xa780, 0x2231, 0xc1ea, 0x1282, 0x0, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x888b, gbc.sp());
        EXPECT(0x872a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8728));
        EXPECT(0x2c, gbc.readMem(0x8729));
        // CB 2C 0256
        gbc.setState(0x5971, 0xeb4c, 0xcf0, 0x4348, 0xa93f, 0x4340, 0x0, 0x1);
        gbc.writeMem(0x5971, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xeb4c, gbc.sp());
        EXPECT(0x5973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0257
        gbc.setState(0xc6dc, 0xfca4, 0x2f40, 0x2706, 0x8efe, 0x77b5, 0x0, 0x0);
        gbc.writeMem(0xc6dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfca4, gbc.sp());
        EXPECT(0xc6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6dc));
        EXPECT(0x2c, gbc.readMem(0xc6dd));
        // CB 2C 0259
        gbc.setState(0x4a8e, 0x2e5a, 0x92f0, 0xc3bc, 0x330a, 0xc3f, 0x0, 0x1);
        gbc.writeMem(0x4a8e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x4a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 025A
        gbc.setState(0xe978, 0x6168, 0x5e40, 0x2af0, 0xd1, 0x974c, 0x0, 0x0);
        gbc.writeMem(0xe978, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x6168, gbc.sp());
        EXPECT(0xe97a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe978));
        EXPECT(0x2c, gbc.readMem(0xe979));
        // CB 2C 025B
        gbc.setState(0x8295, 0x7092, 0xe2f0, 0x3d72, 0x2a33, 0xa067, 0x0, 0x1);
        gbc.writeMem(0x8295, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7092, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8295));
        EXPECT(0x2c, gbc.readMem(0x8296));
        // CB 2C 025C
        gbc.setState(0x10a, 0x1a58, 0x22c0, 0xdbda, 0x6049, 0xa9f1, 0x1, 0x1);
        gbc.writeMem(0x10a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a58, gbc.sp());
        EXPECT(0x10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 025D
        gbc.setState(0xea4c, 0x7855, 0x820, 0xab52, 0xe449, 0x9709, 0x0, 0x1);
        gbc.writeMem(0xea4c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7855, gbc.sp());
        EXPECT(0xea4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea4c));
        EXPECT(0x2c, gbc.readMem(0xea4d));
        // CB 2C 025F
        gbc.setState(0x2a38, 0x45bb, 0x98a0, 0xdb72, 0x2146, 0x5a, 0x1, 0x0);
        gbc.writeMem(0x2a38, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x45bb, gbc.sp());
        EXPECT(0x2a3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0260
        gbc.setState(0xebe, 0x3ac5, 0x8cc0, 0x2ede, 0x685a, 0x96df, 0x0, 0x0);
        gbc.writeMem(0xebe, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x3ac5, gbc.sp());
        EXPECT(0xec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0261
        gbc.setState(0xdc3, 0xea, 0x86d0, 0x73a3, 0x4c78, 0x642b, 0x1, 0x0);
        gbc.writeMem(0xdc3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xea, gbc.sp());
        EXPECT(0xdc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0262
        gbc.setState(0x747, 0x74a5, 0x1a40, 0x24dc, 0xcbdf, 0xc516, 0x1, 0x0);
        gbc.writeMem(0x747, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x74a5, gbc.sp());
        EXPECT(0x749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0263
        gbc.setState(0x6953, 0x118d, 0xe390, 0x721, 0xc3b8, 0x439d, 0x0, 0x1);
        gbc.writeMem(0x6953, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x118d, gbc.sp());
        EXPECT(0x6955, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0264
        gbc.setState(0x1cf2, 0x4085, 0xe0b0, 0xd966, 0x6727, 0x4026, 0x0, 0x1);
        gbc.writeMem(0x1cf2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4085, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0265
        gbc.setState(0x5a2f, 0x9089, 0xe460, 0xb2ee, 0x98b7, 0x8607, 0x0, 0x1);
        gbc.writeMem(0x5a2f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9089, gbc.sp());
        EXPECT(0x5a31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0266
        gbc.setState(0x53b4, 0x7144, 0x7a50, 0xb343, 0x21bd, 0x6c1a, 0x1, 0x1);
        gbc.writeMem(0x53b4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x7144, gbc.sp());
        EXPECT(0x53b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0267
        gbc.setState(0x987b, 0x4ab4, 0xdb0, 0xc38a, 0x571, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x987b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x4ab4, gbc.sp());
        EXPECT(0x987d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x987b));
        EXPECT(0x2c, gbc.readMem(0x987c));
        // CB 2C 0268
        gbc.setState(0x6d21, 0x246b, 0xa10, 0x6cfc, 0x377c, 0x7e0e, 0x0, 0x0);
        gbc.writeMem(0x6d21, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x246b, gbc.sp());
        EXPECT(0x6d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0269
        gbc.setState(0x33a8, 0x4f4c, 0xe5c0, 0xdd3, 0xf1d3, 0x3de7, 0x0, 0x0);
        gbc.writeMem(0x33a8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4f4c, gbc.sp());
        EXPECT(0x33aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 026B
        gbc.setState(0x20b6, 0x7695, 0x960, 0xb9c3, 0x6792, 0xe71c, 0x0, 0x0);
        gbc.writeMem(0x20b6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7695, gbc.sp());
        EXPECT(0x20b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 026C
        gbc.setState(0x42fb, 0x473f, 0x7680, 0x7977, 0xd3c, 0xda78, 0x1, 0x0);
        gbc.writeMem(0x42fb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x473f, gbc.sp());
        EXPECT(0x42fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 026D
        gbc.setState(0xb7a3, 0x7b1d, 0xe560, 0x1a76, 0x8743, 0xbd46, 0x1, 0x1);
        gbc.writeMem(0xb7a3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7b1d, gbc.sp());
        EXPECT(0xb7a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a3));
        EXPECT(0x2c, gbc.readMem(0xb7a4));
        // CB 2C 026E
        gbc.setState(0x12a7, 0xe559, 0x4660, 0xefbb, 0x7be3, 0x5321, 0x0, 0x0);
        gbc.writeMem(0x12a7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe559, gbc.sp());
        EXPECT(0x12a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 026F
        gbc.setState(0x97d5, 0x5f43, 0xf4e0, 0xcd51, 0x1b35, 0xe562, 0x1, 0x1);
        gbc.writeMem(0x97d5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x5f43, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97d5));
        EXPECT(0x2c, gbc.readMem(0x97d6));
        // CB 2C 0270
        gbc.setState(0x89a6, 0xba7b, 0x56a0, 0xf879, 0xb103, 0x1340, 0x0, 0x1);
        gbc.writeMem(0x89a6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xba7b, gbc.sp());
        EXPECT(0x89a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a6));
        EXPECT(0x2c, gbc.readMem(0x89a7));
        // CB 2C 0271
        gbc.setState(0x7cad, 0xbbd4, 0x9f10, 0xff88, 0x99e2, 0x3962, 0x1, 0x0);
        gbc.writeMem(0x7cad, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0x7caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0272
        gbc.setState(0xda2e, 0x6741, 0x3390, 0x831, 0xeeab, 0xc34e, 0x0, 0x0);
        gbc.writeMem(0xda2e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6741, gbc.sp());
        EXPECT(0xda30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda2e));
        EXPECT(0x2c, gbc.readMem(0xda2f));
        // CB 2C 0273
        gbc.setState(0x4589, 0x96db, 0xc1a0, 0x6327, 0xb220, 0xad30, 0x0, 0x0);
        gbc.writeMem(0x4589, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x96db, gbc.sp());
        EXPECT(0x458b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0274
        gbc.setState(0x4ce7, 0xf323, 0x2730, 0xa903, 0x51e2, 0xd2cf, 0x1, 0x0);
        gbc.writeMem(0x4ce7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xf323, gbc.sp());
        EXPECT(0x4ce9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0275
        gbc.setState(0xe736, 0x1c5f, 0xfd0, 0xb8f9, 0x6c3e, 0xf66a, 0x0, 0x1);
        gbc.writeMem(0xe736, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1c5f, gbc.sp());
        EXPECT(0xe738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe736));
        EXPECT(0x2c, gbc.readMem(0xe737));
        // CB 2C 0276
        gbc.setState(0xb46a, 0x7f6d, 0xb3f0, 0x1ca8, 0x506e, 0x7314, 0x1, 0x0);
        gbc.writeMem(0xb46a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7f6d, gbc.sp());
        EXPECT(0xb46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46a));
        EXPECT(0x2c, gbc.readMem(0xb46b));
        // CB 2C 0278
        gbc.setState(0xb902, 0x8539, 0x8020, 0x16e1, 0x77bc, 0xb, 0x1, 0x1);
        gbc.writeMem(0xb902, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8539, gbc.sp());
        EXPECT(0xb904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb902));
        EXPECT(0x2c, gbc.readMem(0xb903));
        // CB 2C 0279
        gbc.setState(0x4231, 0x5116, 0xe550, 0xddce, 0x3b61, 0x8d58, 0x0, 0x0);
        gbc.writeMem(0x4231, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5116, gbc.sp());
        EXPECT(0x4233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 027A
        gbc.setState(0x18ce, 0x844a, 0xa320, 0xcc21, 0x8dab, 0xefe0, 0x0, 0x1);
        gbc.writeMem(0x18ce, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 027B
        gbc.setState(0x28be, 0xa592, 0x6270, 0xf339, 0x34cd, 0x8ce4, 0x1, 0x1);
        gbc.writeMem(0x28be, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x28c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 027C
        gbc.setState(0x4e13, 0x589f, 0xd20, 0x8970, 0x3796, 0x9e0f, 0x1, 0x1);
        gbc.writeMem(0x4e13, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x589f, gbc.sp());
        EXPECT(0x4e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 027D
        gbc.setState(0x3b9c, 0x2eeb, 0x8950, 0x92e2, 0x79a0, 0x2740, 0x0, 0x1);
        gbc.writeMem(0x3b9c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2eeb, gbc.sp());
        EXPECT(0x3b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 027E
        gbc.setState(0xed, 0xc11a, 0xccf0, 0x40c5, 0x8c9a, 0xd0c4, 0x1, 0x1);
        gbc.writeMem(0xed, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc11a, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 027F
        gbc.setState(0x6538, 0x1a2e, 0xc3e0, 0x5aa, 0xa646, 0x444e, 0x0, 0x1);
        gbc.writeMem(0x6538, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1a2e, gbc.sp());
        EXPECT(0x653a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0280
        gbc.setState(0x40e3, 0x404a, 0xb920, 0x66b, 0x364e, 0x8af, 0x0, 0x1);
        gbc.writeMem(0x40e3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x404a, gbc.sp());
        EXPECT(0x40e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0281
        gbc.setState(0xd1d4, 0x4d21, 0x7e00, 0x4d, 0x9a47, 0x1712, 0x1, 0x1);
        gbc.writeMem(0xd1d4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4d21, gbc.sp());
        EXPECT(0xd1d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d4));
        EXPECT(0x2c, gbc.readMem(0xd1d5));
        // CB 2C 0282
        gbc.setState(0x7aee, 0xd21d, 0x47d0, 0x4a9e, 0xfe84, 0x6570, 0x1, 0x0);
        gbc.writeMem(0x7aee, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd21d, gbc.sp());
        EXPECT(0x7af0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0284
        gbc.setState(0x7bed, 0x5b, 0x5fa0, 0x3a, 0xaa45, 0x8244, 0x1, 0x1);
        gbc.writeMem(0x7bed, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5b, gbc.sp());
        EXPECT(0x7bef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0285
        gbc.setState(0xe0cd, 0xbd51, 0x5e70, 0xf763, 0x44a2, 0x517e, 0x0, 0x1);
        gbc.writeMem(0xe0cd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbd51, gbc.sp());
        EXPECT(0xe0cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0cd));
        EXPECT(0x2c, gbc.readMem(0xe0ce));
        // CB 2C 0286
        gbc.setState(0xd5de, 0x4fdf, 0x6130, 0x7f84, 0xf8b4, 0x8d35, 0x0, 0x1);
        gbc.writeMem(0xd5de, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4fdf, gbc.sp());
        EXPECT(0xd5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5de));
        EXPECT(0x2c, gbc.readMem(0xd5df));
        // CB 2C 0287
        gbc.setState(0x3322, 0xbe8c, 0xae60, 0x860b, 0xce30, 0x3713, 0x1, 0x1);
        gbc.writeMem(0x3322, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbe8c, gbc.sp());
        EXPECT(0x3324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0288
        gbc.setState(0x1490, 0xf872, 0xfc00, 0x6c5f, 0x8c4f, 0xa333, 0x1, 0x0);
        gbc.writeMem(0x1490, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xf872, gbc.sp());
        EXPECT(0x1492, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0289
        gbc.setState(0xccfe, 0xcea3, 0xef80, 0x26d1, 0x6ef2, 0x8d09, 0x0, 0x0);
        gbc.writeMem(0xccfe, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcea3, gbc.sp());
        EXPECT(0xcd00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccfe));
        EXPECT(0x2c, gbc.readMem(0xccff));
        // CB 2C 028A
        gbc.setState(0x78cd, 0x223a, 0x9f40, 0xf0a2, 0xec9d, 0xdbcd, 0x0, 0x1);
        gbc.writeMem(0x78cd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x223a, gbc.sp());
        EXPECT(0x78cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 028B
        gbc.setState(0xb018, 0x75f5, 0xfc60, 0x3a4c, 0x1c32, 0x6dd5, 0x1, 0x0);
        gbc.writeMem(0xb018, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x75f5, gbc.sp());
        EXPECT(0xb01a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb018));
        EXPECT(0x2c, gbc.readMem(0xb019));
        // CB 2C 028C
        gbc.setState(0xcec2, 0x4790, 0xb530, 0x8952, 0xcb42, 0xfb9e, 0x1, 0x1);
        gbc.writeMem(0xcec2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4790, gbc.sp());
        EXPECT(0xcec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcec2));
        EXPECT(0x2c, gbc.readMem(0xcec3));
        // CB 2C 028D
        gbc.setState(0x6cf2, 0xb7a1, 0x4970, 0x3a2f, 0xbc68, 0x86f0, 0x1, 0x1);
        gbc.writeMem(0x6cf2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb7a1, gbc.sp());
        EXPECT(0x6cf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 028E
        gbc.setState(0x84ac, 0x3309, 0xeb10, 0x763f, 0x9f24, 0x178b, 0x0, 0x0);
        gbc.writeMem(0x84ac, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3309, gbc.sp());
        EXPECT(0x84ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ac));
        EXPECT(0x2c, gbc.readMem(0x84ad));
        // CB 2C 028F
        gbc.setState(0x2c23, 0x4f3e, 0xb370, 0xe3fa, 0x9a66, 0x691e, 0x1, 0x0);
        gbc.writeMem(0x2c23, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4f3e, gbc.sp());
        EXPECT(0x2c25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0290
        gbc.setState(0xe9a9, 0x67f3, 0xace0, 0x33a7, 0xc0e2, 0x799d, 0x1, 0x0);
        gbc.writeMem(0xe9a9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x67f3, gbc.sp());
        EXPECT(0xe9ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a9));
        EXPECT(0x2c, gbc.readMem(0xe9aa));
        // CB 2C 0291
        gbc.setState(0x5f74, 0xb97c, 0x11e0, 0x59a0, 0x1e2d, 0xb1d6, 0x1, 0x1);
        gbc.writeMem(0x5f74, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb97c, gbc.sp());
        EXPECT(0x5f76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0292
        gbc.setState(0x3574, 0x94f2, 0xb250, 0x2833, 0xa853, 0x7c3c, 0x0, 0x1);
        gbc.writeMem(0x3574, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x94f2, gbc.sp());
        EXPECT(0x3576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0293
        gbc.setState(0x8a3b, 0x2f2b, 0xe140, 0x56e, 0x4fc6, 0x36b5, 0x1, 0x0);
        gbc.writeMem(0x8a3b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2f2b, gbc.sp());
        EXPECT(0x8a3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a3b));
        EXPECT(0x2c, gbc.readMem(0x8a3c));
        // CB 2C 0294
        gbc.setState(0x894f, 0x70ab, 0x1470, 0x3815, 0x11f, 0x5ce2, 0x1, 0x1);
        gbc.writeMem(0x894f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x70ab, gbc.sp());
        EXPECT(0x8951, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x894f));
        EXPECT(0x2c, gbc.readMem(0x8950));
        // CB 2C 0295
        gbc.setState(0xb9f5, 0x43e4, 0x3630, 0x4257, 0x474, 0x69e0, 0x1, 0x1);
        gbc.writeMem(0xb9f5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x43e4, gbc.sp());
        EXPECT(0xb9f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9f5));
        EXPECT(0x2c, gbc.readMem(0xb9f6));
        // CB 2C 0297
        gbc.setState(0xa168, 0x1e98, 0x3df0, 0x37ad, 0xd7df, 0x5b56, 0x0, 0x1);
        gbc.writeMem(0xa168, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1e98, gbc.sp());
        EXPECT(0xa16a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa168));
        EXPECT(0x2c, gbc.readMem(0xa169));
        // CB 2C 0298
        gbc.setState(0xb88b, 0xce55, 0xd6f0, 0x44fb, 0x85d1, 0x9ada, 0x0, 0x1);
        gbc.writeMem(0xb88b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xce55, gbc.sp());
        EXPECT(0xb88d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb88b));
        EXPECT(0x2c, gbc.readMem(0xb88c));
        // CB 2C 029A
        gbc.setState(0x7721, 0x4514, 0x6a00, 0x1f60, 0x40a3, 0x5ade, 0x1, 0x1);
        gbc.writeMem(0x7721, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0x7723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 029B
        gbc.setState(0x7774, 0x57b5, 0x7150, 0xffb2, 0x43ee, 0x8e42, 0x1, 0x1);
        gbc.writeMem(0x7774, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0x7776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 029C
        gbc.setState(0x34c2, 0x112e, 0xe180, 0xca19, 0x5149, 0x7bc4, 0x1, 0x1);
        gbc.writeMem(0x34c2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x112e, gbc.sp());
        EXPECT(0x34c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 029D
        gbc.setState(0x6aca, 0x4ff4, 0x8c90, 0x4baf, 0x7f68, 0x77f2, 0x1, 0x0);
        gbc.writeMem(0x6aca, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4ff4, gbc.sp());
        EXPECT(0x6acc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 029E
        gbc.setState(0x9dba, 0x3a5a, 0x6e70, 0x995b, 0x3d4b, 0x34b2, 0x0, 0x0);
        gbc.writeMem(0x9dba, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3a5a, gbc.sp());
        EXPECT(0x9dbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dba));
        EXPECT(0x2c, gbc.readMem(0x9dbb));
        // CB 2C 029F
        gbc.setState(0x631e, 0x7a0a, 0xa200, 0x2301, 0xce5a, 0x884d, 0x0, 0x1);
        gbc.writeMem(0x631e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x7a0a, gbc.sp());
        EXPECT(0x6320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02A0
        gbc.setState(0x2e7, 0x205b, 0x3f30, 0x342c, 0xb8c5, 0x69c, 0x0, 0x1);
        gbc.writeMem(0x2e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0x2e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02A1
        gbc.setState(0x88b4, 0x70da, 0xd9a0, 0x93cb, 0x8044, 0xb15c, 0x0, 0x0);
        gbc.writeMem(0x88b4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x70da, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b4));
        EXPECT(0x2c, gbc.readMem(0x88b5));
        // CB 2C 02A2
        gbc.setState(0xb93f, 0xa7d1, 0x8ab0, 0xe46, 0xb0e6, 0xf124, 0x1, 0x0);
        gbc.writeMem(0xb93f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xa7d1, gbc.sp());
        EXPECT(0xb941, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb93f));
        EXPECT(0x2c, gbc.readMem(0xb940));
        // CB 2C 02A3
        gbc.setState(0xc4bb, 0x99e5, 0xc5f0, 0xdae3, 0xed7f, 0xc5c3, 0x1, 0x0);
        gbc.writeMem(0xc4bb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x99e5, gbc.sp());
        EXPECT(0xc4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bb));
        EXPECT(0x2c, gbc.readMem(0xc4bc));
        // CB 2C 02A4
        gbc.setState(0xd876, 0xf2db, 0x400, 0xca1b, 0x6d57, 0xd788, 0x1, 0x0);
        gbc.writeMem(0xd876, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf2db, gbc.sp());
        EXPECT(0xd878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd876));
        EXPECT(0x2c, gbc.readMem(0xd877));
        // CB 2C 02A5
        gbc.setState(0x1fe3, 0x3e1f, 0x890, 0x6abb, 0x8867, 0xe961, 0x0, 0x0);
        gbc.writeMem(0x1fe3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3e1f, gbc.sp());
        EXPECT(0x1fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02A6
        gbc.setState(0x5d45, 0xb298, 0x66b0, 0x9f3e, 0x7e91, 0x1a15, 0x1, 0x1);
        gbc.writeMem(0x5d45, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb298, gbc.sp());
        EXPECT(0x5d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02A7
        gbc.setState(0xedf6, 0x4933, 0xbb40, 0xcbc5, 0x92ae, 0xf06e, 0x1, 0x0);
        gbc.writeMem(0xedf6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4933, gbc.sp());
        EXPECT(0xedf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedf6));
        EXPECT(0x2c, gbc.readMem(0xedf7));
        // CB 2C 02A8
        gbc.setState(0x2a14, 0xbf45, 0xe870, 0xc797, 0x88b5, 0x78f8, 0x0, 0x1);
        gbc.writeMem(0x2a14, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbf45, gbc.sp());
        EXPECT(0x2a16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02A9
        gbc.setState(0x397c, 0x96ea, 0x1190, 0xe009, 0x9941, 0xac48, 0x0, 0x1);
        gbc.writeMem(0x397c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x96ea, gbc.sp());
        EXPECT(0x397e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02AA
        gbc.setState(0x6afb, 0x12a8, 0xcd30, 0x3709, 0x62f6, 0x9b5d, 0x1, 0x1);
        gbc.writeMem(0x6afb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x12a8, gbc.sp());
        EXPECT(0x6afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02AB
        gbc.setState(0xaba3, 0x6d1e, 0x6740, 0x7823, 0xa39, 0xc6e3, 0x0, 0x1);
        gbc.writeMem(0xaba3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6d1e, gbc.sp());
        EXPECT(0xaba5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba3));
        EXPECT(0x2c, gbc.readMem(0xaba4));
        // CB 2C 02AC
        gbc.setState(0xeabf, 0xe150, 0xd760, 0x8b53, 0xd11b, 0x342e, 0x0, 0x0);
        gbc.writeMem(0xeabf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe150, gbc.sp());
        EXPECT(0xeac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabf));
        EXPECT(0x2c, gbc.readMem(0xeac0));
        // CB 2C 02AD
        gbc.setState(0x1375, 0x12d3, 0x4620, 0xcc1f, 0x9a4b, 0x2f43, 0x1, 0x0);
        gbc.writeMem(0x1375, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x1377, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02AE
        gbc.setState(0x786c, 0x1964, 0xe1c0, 0x3336, 0x10e6, 0x7bb7, 0x0, 0x0);
        gbc.writeMem(0x786c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1964, gbc.sp());
        EXPECT(0x786e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02AF
        gbc.setState(0x4246, 0xd9a2, 0x1630, 0xd58c, 0xabe5, 0x3f88, 0x0, 0x1);
        gbc.writeMem(0x4246, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd9a2, gbc.sp());
        EXPECT(0x4248, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02B0
        gbc.setState(0xe496, 0xb661, 0xd940, 0xe5e3, 0xe7a, 0xcdf4, 0x1, 0x0);
        gbc.writeMem(0xe496, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xb661, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe496));
        EXPECT(0x2c, gbc.readMem(0xe497));
        // CB 2C 02B1
        gbc.setState(0xbf28, 0x3112, 0x1510, 0x2984, 0xfaaf, 0x6ac3, 0x0, 0x1);
        gbc.writeMem(0xbf28, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3112, gbc.sp());
        EXPECT(0xbf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf28));
        EXPECT(0x2c, gbc.readMem(0xbf29));
        // CB 2C 02B2
        gbc.setState(0xc450, 0x7c2, 0x5860, 0xed8a, 0x86f3, 0xe3c8, 0x1, 0x0);
        gbc.writeMem(0xc450, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x7c2, gbc.sp());
        EXPECT(0xc452, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc450));
        EXPECT(0x2c, gbc.readMem(0xc451));
        // CB 2C 02B3
        gbc.setState(0x62e2, 0x2d4, 0x2180, 0xd958, 0xe230, 0x7db4, 0x1, 0x1);
        gbc.writeMem(0x62e2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2d4, gbc.sp());
        EXPECT(0x62e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02B4
        gbc.setState(0xd6d8, 0xd138, 0x21f0, 0xc3cc, 0xd054, 0xec0d, 0x1, 0x0);
        gbc.writeMem(0xd6d8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd138, gbc.sp());
        EXPECT(0xd6da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6d8));
        EXPECT(0x2c, gbc.readMem(0xd6d9));
        // CB 2C 02B5
        gbc.setState(0x3010, 0x719a, 0xbbe0, 0xeef3, 0xec80, 0x750c, 0x1, 0x1);
        gbc.writeMem(0x3010, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x719a, gbc.sp());
        EXPECT(0x3012, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02B6
        gbc.setState(0x25f4, 0xe99, 0x8180, 0xde03, 0x1762, 0xe46d, 0x0, 0x0);
        gbc.writeMem(0x25f4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe99, gbc.sp());
        EXPECT(0x25f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02B7
        gbc.setState(0x9777, 0x7542, 0x2b70, 0x9b64, 0x110c, 0x8d07, 0x0, 0x1);
        gbc.writeMem(0x9777, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7542, gbc.sp());
        EXPECT(0x9779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9777));
        EXPECT(0x2c, gbc.readMem(0x9778));
        // CB 2C 02B8
        gbc.setState(0x347, 0xebd0, 0x2080, 0x1352, 0x515a, 0x5fe9, 0x0, 0x0);
        gbc.writeMem(0x347, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xebd0, gbc.sp());
        EXPECT(0x349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02B9
        gbc.setState(0xe93c, 0xe205, 0x7170, 0x36c1, 0xc250, 0xbe5b, 0x0, 0x0);
        gbc.writeMem(0xe93c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe205, gbc.sp());
        EXPECT(0xe93e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe93c));
        EXPECT(0x2c, gbc.readMem(0xe93d));
        // CB 2C 02BA
        gbc.setState(0x26de, 0x29ca, 0xee00, 0x54cc, 0xe1ed, 0xe723, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x29ca, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02BB
        gbc.setState(0xdc35, 0xee8, 0x1fd0, 0xcd1b, 0x237f, 0x68ac, 0x0, 0x1);
        gbc.writeMem(0xdc35, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xee8, gbc.sp());
        EXPECT(0xdc37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc35));
        EXPECT(0x2c, gbc.readMem(0xdc36));
        // CB 2C 02BC
        gbc.setState(0x36d2, 0xc039, 0x85b0, 0xa92b, 0x3da5, 0xa159, 0x0, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc039, gbc.sp());
        EXPECT(0x36d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02BD
        gbc.setState(0xeb5, 0x7276, 0x120, 0xe997, 0x10c2, 0xa9e1, 0x1, 0x0);
        gbc.writeMem(0xeb5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x7276, gbc.sp());
        EXPECT(0xeb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02BE
        gbc.setState(0x1c1b, 0x9467, 0x5ae0, 0x92e3, 0xcba6, 0x6484, 0x0, 0x1);
        gbc.writeMem(0x1c1b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9467, gbc.sp());
        EXPECT(0x1c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02BF
        gbc.setState(0xdc9b, 0x63ba, 0x49b0, 0xe16e, 0x5ee9, 0xeacd, 0x0, 0x1);
        gbc.writeMem(0xdc9b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x63ba, gbc.sp());
        EXPECT(0xdc9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc9b));
        EXPECT(0x2c, gbc.readMem(0xdc9c));
        // CB 2C 02C0
        gbc.setState(0x257e, 0xd4f2, 0x3b90, 0xa86, 0xfdf9, 0x852, 0x1, 0x0);
        gbc.writeMem(0x257e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd4f2, gbc.sp());
        EXPECT(0x2580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02C1
        gbc.setState(0x9335, 0x5392, 0x4ea0, 0x1a90, 0xda16, 0x5c05, 0x0, 0x1);
        gbc.writeMem(0x9335, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5392, gbc.sp());
        EXPECT(0x9337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9335));
        EXPECT(0x2c, gbc.readMem(0x9336));
        // CB 2C 02C2
        gbc.setState(0x107a, 0xe48c, 0xe4b0, 0xad73, 0x5240, 0xbd71, 0x1, 0x1);
        gbc.writeMem(0x107a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xe48c, gbc.sp());
        EXPECT(0x107c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02C3
        gbc.setState(0x9a60, 0x67f6, 0xa130, 0xa955, 0xd328, 0xd2b2, 0x1, 0x0);
        gbc.writeMem(0x9a60, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x67f6, gbc.sp());
        EXPECT(0x9a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a60));
        EXPECT(0x2c, gbc.readMem(0x9a61));
        // CB 2C 02C4
        gbc.setState(0xdce4, 0x12e0, 0xa860, 0x6d01, 0x492e, 0x23de, 0x1, 0x0);
        gbc.writeMem(0xdce4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x12e0, gbc.sp());
        EXPECT(0xdce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdce4));
        EXPECT(0x2c, gbc.readMem(0xdce5));
        // CB 2C 02C5
        gbc.setState(0x20a3, 0x89a0, 0x9060, 0x7640, 0x8369, 0x205, 0x1, 0x0);
        gbc.writeMem(0x20a3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x89a0, gbc.sp());
        EXPECT(0x20a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02C6
        gbc.setState(0x37dd, 0xeca1, 0x70, 0x4d0c, 0xef77, 0x335f, 0x1, 0x1);
        gbc.writeMem(0x37dd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeca1, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02C7
        gbc.setState(0x4c01, 0x9a84, 0xa120, 0xdecd, 0x2479, 0x1313, 0x0, 0x1);
        gbc.writeMem(0x4c01, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x9a84, gbc.sp());
        EXPECT(0x4c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02C8
        gbc.setState(0xb711, 0xb4e1, 0x40b0, 0x504b, 0x9a6f, 0xbe19, 0x1, 0x0);
        gbc.writeMem(0xb711, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xb4e1, gbc.sp());
        EXPECT(0xb713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb711));
        EXPECT(0x2c, gbc.readMem(0xb712));
        // CB 2C 02C9
        gbc.setState(0xba99, 0xb2f2, 0xff10, 0x60a4, 0xab1c, 0x754c, 0x0, 0x0);
        gbc.writeMem(0xba99, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb2f2, gbc.sp());
        EXPECT(0xba9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba99));
        EXPECT(0x2c, gbc.readMem(0xba9a));
        // CB 2C 02CA
        gbc.setState(0x4e55, 0xc89c, 0x4610, 0x9796, 0x8712, 0x49de, 0x0, 0x1);
        gbc.writeMem(0x4e55, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc89c, gbc.sp());
        EXPECT(0x4e57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02CC
        gbc.setState(0x493e, 0x10c2, 0xe1e0, 0xde1f, 0x8195, 0x2e09, 0x0, 0x1);
        gbc.writeMem(0x493e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x10c2, gbc.sp());
        EXPECT(0x4940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02CD
        gbc.setState(0xa36e, 0x243, 0x1d10, 0xb158, 0x57c7, 0x72a7, 0x0, 0x1);
        gbc.writeMem(0xa36e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x243, gbc.sp());
        EXPECT(0xa370, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa36e));
        EXPECT(0x2c, gbc.readMem(0xa36f));
        // CB 2C 02CE
        gbc.setState(0x3ba8, 0x3b4d, 0x3850, 0xf8aa, 0x5a56, 0x74a2, 0x0, 0x1);
        gbc.writeMem(0x3ba8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3b4d, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02CF
        gbc.setState(0xa4b1, 0x3d2f, 0xe5f0, 0x9186, 0xb648, 0x80e3, 0x1, 0x0);
        gbc.writeMem(0xa4b1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3d2f, gbc.sp());
        EXPECT(0xa4b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b1));
        EXPECT(0x2c, gbc.readMem(0xa4b2));
        // CB 2C 02D0
        gbc.setState(0xc391, 0x14ae, 0x48a0, 0x589f, 0x9b6d, 0xf1ef, 0x0, 0x0);
        gbc.writeMem(0xc391, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x14ae, gbc.sp());
        EXPECT(0xc393, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc391));
        EXPECT(0x2c, gbc.readMem(0xc392));
        // CB 2C 02D2
        gbc.setState(0xcea2, 0xf3b1, 0x1e50, 0x95c4, 0x5946, 0x10a7, 0x0, 0x0);
        gbc.writeMem(0xcea2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xf3b1, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea2));
        EXPECT(0x2c, gbc.readMem(0xcea3));
        // CB 2C 02D3
        gbc.setState(0x3ec8, 0x3910, 0xb140, 0x8996, 0x40bb, 0x3011, 0x1, 0x0);
        gbc.writeMem(0x3ec8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x3910, gbc.sp());
        EXPECT(0x3eca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02D4
        gbc.setState(0x4b26, 0x1f63, 0x19d0, 0xf7e6, 0x138e, 0x91e, 0x0, 0x0);
        gbc.writeMem(0x4b26, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1f63, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02D5
        gbc.setState(0x5c97, 0x2c52, 0x4d20, 0xcd2d, 0x8dca, 0xe988, 0x0, 0x0);
        gbc.writeMem(0x5c97, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2c52, gbc.sp());
        EXPECT(0x5c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02D6
        gbc.setState(0xc78e, 0x9a33, 0x1fb0, 0x3496, 0x749c, 0x20ec, 0x0, 0x0);
        gbc.writeMem(0xc78e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9a33, gbc.sp());
        EXPECT(0xc790, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc78e));
        EXPECT(0x2c, gbc.readMem(0xc78f));
        // CB 2C 02D7
        gbc.setState(0x7aaa, 0xeaad, 0xfc80, 0x212c, 0xdce, 0xfc8c, 0x0, 0x1);
        gbc.writeMem(0x7aaa, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xeaad, gbc.sp());
        EXPECT(0x7aac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02D8
        gbc.setState(0xc1ee, 0xf945, 0xcdb0, 0xf9ee, 0xbc6d, 0x1189, 0x1, 0x1);
        gbc.writeMem(0xc1ee, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xf945, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0x2c, gbc.readMem(0xc1ef));
        // CB 2C 02D9
        gbc.setState(0x7ab1, 0xc6ef, 0x6580, 0xcc6e, 0x2a6, 0x4bb3, 0x1, 0x1);
        gbc.writeMem(0x7ab1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc6ef, gbc.sp());
        EXPECT(0x7ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02DA
        gbc.setState(0x724e, 0xde93, 0x2770, 0xe24a, 0xac51, 0x3fce, 0x1, 0x0);
        gbc.writeMem(0x724e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xde93, gbc.sp());
        EXPECT(0x7250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02DB
        gbc.setState(0xd095, 0x524e, 0x6120, 0x519b, 0x81f0, 0x11e4, 0x1, 0x1);
        gbc.writeMem(0xd095, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x524e, gbc.sp());
        EXPECT(0xd097, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd095));
        EXPECT(0x2c, gbc.readMem(0xd096));
        // CB 2C 02DC
        gbc.setState(0x1032, 0xb4e4, 0xa800, 0x7487, 0x4d5a, 0x9018, 0x0, 0x1);
        gbc.writeMem(0x1032, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb4e4, gbc.sp());
        EXPECT(0x1034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02DD
        gbc.setState(0x7253, 0xf9ca, 0x9890, 0x89d9, 0x25fd, 0xcf7c, 0x1, 0x1);
        gbc.writeMem(0x7253, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf9ca, gbc.sp());
        EXPECT(0x7255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02DE
        gbc.setState(0x8359, 0xc7d8, 0x51f0, 0xe087, 0xe447, 0x2acf, 0x1, 0x1);
        gbc.writeMem(0x8359, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc7d8, gbc.sp());
        EXPECT(0x835b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8359));
        EXPECT(0x2c, gbc.readMem(0x835a));
        // CB 2C 02DF
        gbc.setState(0xb0dc, 0x4a74, 0x16f0, 0x8360, 0xed7b, 0x4901, 0x1, 0x0);
        gbc.writeMem(0xb0dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4a74, gbc.sp());
        EXPECT(0xb0de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0dc));
        EXPECT(0x2c, gbc.readMem(0xb0dd));
        // CB 2C 02E0
        gbc.setState(0x25ea, 0x6e55, 0xf850, 0xe609, 0xeebd, 0x5a73, 0x1, 0x1);
        gbc.writeMem(0x25ea, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6e55, gbc.sp());
        EXPECT(0x25ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02E1
        gbc.setState(0x2ba2, 0xe9f3, 0x55d0, 0x8f73, 0xdd46, 0xa8fc, 0x0, 0x1);
        gbc.writeMem(0x2ba2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe9f3, gbc.sp());
        EXPECT(0x2ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02E2
        gbc.setState(0x3c1, 0x5778, 0x4460, 0xb4b7, 0xd1d, 0xc27c, 0x0, 0x0);
        gbc.writeMem(0x3c1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5778, gbc.sp());
        EXPECT(0x3c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02E3
        gbc.setState(0x6ed0, 0x1c41, 0xf280, 0xcb0c, 0xe4d2, 0x90e7, 0x0, 0x1);
        gbc.writeMem(0x6ed0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1c41, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02E4
        gbc.setState(0x85e2, 0xdf32, 0xe610, 0xa3aa, 0x47df, 0xfcd4, 0x1, 0x1);
        gbc.writeMem(0x85e2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xdf32, gbc.sp());
        EXPECT(0x85e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85e2));
        EXPECT(0x2c, gbc.readMem(0x85e3));
        // CB 2C 02E5
        gbc.setState(0x3b1b, 0x6ce9, 0x46d0, 0x5f8c, 0xbf87, 0x6796, 0x0, 0x0);
        gbc.writeMem(0x3b1b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6ce9, gbc.sp());
        EXPECT(0x3b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02E6
        gbc.setState(0x10e, 0xfbf5, 0x4e40, 0x68f5, 0x83e4, 0x18d0, 0x1, 0x1);
        gbc.writeMem(0x10e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfbf5, gbc.sp());
        EXPECT(0x110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02E7
        gbc.setState(0x5afc, 0x6a52, 0xe8e0, 0xd9d1, 0x1a64, 0x2f92, 0x1, 0x1);
        gbc.writeMem(0x5afc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6a52, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02E8
        gbc.setState(0xd393, 0xd1d6, 0x2610, 0x5666, 0x325c, 0xca08, 0x1, 0x1);
        gbc.writeMem(0xd393, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0xd395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd393));
        EXPECT(0x2c, gbc.readMem(0xd394));
        // CB 2C 02E9
        gbc.setState(0x52e9, 0xa047, 0xac90, 0xbdfe, 0xe95f, 0x65cf, 0x0, 0x0);
        gbc.writeMem(0x52e9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa047, gbc.sp());
        EXPECT(0x52eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02EA
        gbc.setState(0xead1, 0xed7b, 0xb010, 0x7336, 0x90a3, 0xd07, 0x1, 0x0);
        gbc.writeMem(0xead1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xed7b, gbc.sp());
        EXPECT(0xead3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead1));
        EXPECT(0x2c, gbc.readMem(0xead2));
        // CB 2C 02EB
        gbc.setState(0x9657, 0xb16c, 0x1ea0, 0x5d38, 0xebfe, 0x331f, 0x0, 0x0);
        gbc.writeMem(0x9657, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb16c, gbc.sp());
        EXPECT(0x9659, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9657));
        EXPECT(0x2c, gbc.readMem(0x9658));
        // CB 2C 02EC
        gbc.setState(0xbf2f, 0x605f, 0xdfc0, 0xe86e, 0x603b, 0x6df3, 0x1, 0x0);
        gbc.writeMem(0xbf2f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x605f, gbc.sp());
        EXPECT(0xbf31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf2f));
        EXPECT(0x2c, gbc.readMem(0xbf30));
        // CB 2C 02ED
        gbc.setState(0xc164, 0x44c2, 0xd70, 0x5813, 0x7dee, 0x751a, 0x1, 0x0);
        gbc.writeMem(0xc164, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x44c2, gbc.sp());
        EXPECT(0xc166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc164));
        EXPECT(0x2c, gbc.readMem(0xc165));
        // CB 2C 02EE
        gbc.setState(0x36f2, 0x8326, 0xd080, 0x1786, 0x125f, 0x5a73, 0x0, 0x0);
        gbc.writeMem(0x36f2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8326, gbc.sp());
        EXPECT(0x36f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02EF
        gbc.setState(0x73dc, 0xe1aa, 0xb10, 0x4dab, 0xc631, 0xee60, 0x1, 0x0);
        gbc.writeMem(0x73dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe1aa, gbc.sp());
        EXPECT(0x73de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F0
        gbc.setState(0x3f6e, 0x1a31, 0xac10, 0x7f3, 0x999, 0xf5ed, 0x0, 0x0);
        gbc.writeMem(0x3f6e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1a31, gbc.sp());
        EXPECT(0x3f70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02F1
        gbc.setState(0xbe02, 0xdfa0, 0xade0, 0x1df0, 0x9408, 0xf052, 0x1, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdfa0, gbc.sp());
        EXPECT(0xbe04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe02));
        EXPECT(0x2c, gbc.readMem(0xbe03));
        // CB 2C 02F2
        gbc.setState(0x7ac8, 0x9dea, 0x6bd0, 0xe5b0, 0x685, 0xf5f9, 0x0, 0x1);
        gbc.writeMem(0x7ac8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9dea, gbc.sp());
        EXPECT(0x7aca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02F3
        gbc.setState(0x382b, 0x151e, 0xdf40, 0xf73d, 0xf2d3, 0xcc73, 0x0, 0x0);
        gbc.writeMem(0x382b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x151e, gbc.sp());
        EXPECT(0x382d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F4
        gbc.setState(0xa45, 0x5bfe, 0x4e80, 0xc5f9, 0x14fb, 0x5023, 0x0, 0x1);
        gbc.writeMem(0xa45, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x5bfe, gbc.sp());
        EXPECT(0xa47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F5
        gbc.setState(0x4f3, 0xe123, 0x40b0, 0xe8a, 0xded1, 0x1cfc, 0x0, 0x1);
        gbc.writeMem(0x4f3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xe123, gbc.sp());
        EXPECT(0x4f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F6
        gbc.setState(0xd765, 0xe920, 0x7c70, 0x9fbb, 0xd94d, 0xc6a5, 0x0, 0x1);
        gbc.writeMem(0xd765, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe920, gbc.sp());
        EXPECT(0xd767, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd765));
        EXPECT(0x2c, gbc.readMem(0xd766));
        // CB 2C 02F7
        gbc.setState(0x6f4e, 0xb219, 0xc1e0, 0x9c2f, 0xaa2f, 0x6cac, 0x0, 0x0);
        gbc.writeMem(0x6f4e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb219, gbc.sp());
        EXPECT(0x6f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F8
        gbc.setState(0x6426, 0x7369, 0x8aa0, 0xde31, 0x44bd, 0xf015, 0x1, 0x0);
        gbc.writeMem(0x6426, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x7369, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02F9
        gbc.setState(0xe8ab, 0x1d45, 0x5790, 0x833f, 0xa3a3, 0xccbf, 0x0, 0x0);
        gbc.writeMem(0xe8ab, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1d45, gbc.sp());
        EXPECT(0xe8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8ab));
        EXPECT(0x2c, gbc.readMem(0xe8ac));
        // CB 2C 02FA
        gbc.setState(0x5f32, 0x405c, 0x58a0, 0xf03f, 0xf993, 0x52f7, 0x0, 0x0);
        gbc.writeMem(0x5f32, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x405c, gbc.sp());
        EXPECT(0x5f34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02FB
        gbc.setState(0x5930, 0xbc82, 0x2380, 0x970a, 0xb637, 0xa9d3, 0x0, 0x1);
        gbc.writeMem(0x5930, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xbc82, gbc.sp());
        EXPECT(0x5932, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 02FC
        gbc.setState(0x3265, 0x1c09, 0xa360, 0x2c31, 0x22fc, 0x70b9, 0x0, 0x1);
        gbc.writeMem(0x3265, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1c09, gbc.sp());
        EXPECT(0x3267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02FD
        gbc.setState(0x15cd, 0xab47, 0xead0, 0x7cd0, 0xaf58, 0x8e54, 0x0, 0x1);
        gbc.writeMem(0x15cd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xab47, gbc.sp());
        EXPECT(0x15cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 02FE
        gbc.setState(0x9fcd, 0x6a3, 0xa120, 0x2e7d, 0x1b63, 0xe4a7, 0x1, 0x1);
        gbc.writeMem(0x9fcd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6a3, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0x2c, gbc.readMem(0x9fce));
        // CB 2C 02FF
        gbc.setState(0xbef6, 0x35e3, 0x72b0, 0x6380, 0xcb21, 0x9cf7, 0x1, 0x1);
        gbc.writeMem(0xbef6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x35e3, gbc.sp());
        EXPECT(0xbef8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbef6));
        EXPECT(0x2c, gbc.readMem(0xbef7));
        // CB 2C 0300
        gbc.setState(0x1cc2, 0xda98, 0xf90, 0x74b4, 0x3d05, 0xdd48, 0x1, 0x1);
        gbc.writeMem(0x1cc2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xda98, gbc.sp());
        EXPECT(0x1cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0301
        gbc.setState(0x29c8, 0xcddd, 0xb710, 0xafdd, 0xb8bc, 0xa77e, 0x1, 0x1);
        gbc.writeMem(0x29c8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xcddd, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0302
        gbc.setState(0x37a3, 0xe780, 0x7ee0, 0x9a1c, 0xad41, 0x97f9, 0x0, 0x1);
        gbc.writeMem(0x37a3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe780, gbc.sp());
        EXPECT(0x37a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0303
        gbc.setState(0x6d46, 0x66ed, 0xc6a0, 0x607e, 0xf9ee, 0x7e16, 0x0, 0x1);
        gbc.writeMem(0x6d46, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x66ed, gbc.sp());
        EXPECT(0x6d48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0304
        gbc.setState(0x4ebf, 0x735c, 0x44e0, 0xe2bd, 0x8701, 0xf6d3, 0x0, 0x1);
        gbc.writeMem(0x4ebf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x735c, gbc.sp());
        EXPECT(0x4ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0305
        gbc.setState(0x12e7, 0xbb1c, 0x9b80, 0x276b, 0x7135, 0x1a14, 0x0, 0x0);
        gbc.writeMem(0x12e7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbb1c, gbc.sp());
        EXPECT(0x12e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0306
        gbc.setState(0x5646, 0xe0a3, 0x8f50, 0x7fab, 0xdb34, 0xfd1f, 0x0, 0x0);
        gbc.writeMem(0x5646, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xe0a3, gbc.sp());
        EXPECT(0x5648, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0307
        gbc.setState(0x2bcf, 0xd378, 0x17d0, 0x5eeb, 0xc30d, 0x2ea9, 0x1, 0x0);
        gbc.writeMem(0x2bcf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd378, gbc.sp());
        EXPECT(0x2bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0308
        gbc.setState(0xa498, 0xfbad, 0xf4f0, 0xd9be, 0x3ede, 0x6fee, 0x0, 0x1);
        gbc.writeMem(0xa498, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfbad, gbc.sp());
        EXPECT(0xa49a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa498));
        EXPECT(0x2c, gbc.readMem(0xa499));
        // CB 2C 0309
        gbc.setState(0x11ea, 0x8803, 0x66f0, 0x5dd0, 0xed2e, 0x761c, 0x0, 0x1);
        gbc.writeMem(0x11ea, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8803, gbc.sp());
        EXPECT(0x11ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 030A
        gbc.setState(0xcd4b, 0x9c62, 0x8c80, 0xaac, 0x7550, 0x31ed, 0x0, 0x1);
        gbc.writeMem(0xcd4b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9c62, gbc.sp());
        EXPECT(0xcd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd4b));
        EXPECT(0x2c, gbc.readMem(0xcd4c));
        // CB 2C 030C
        gbc.setState(0x6cc9, 0x15d1, 0xdca0, 0x31b3, 0x98c8, 0xe23c, 0x0, 0x0);
        gbc.writeMem(0x6cc9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x15d1, gbc.sp());
        EXPECT(0x6ccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 030D
        gbc.setState(0x1d87, 0xbe99, 0x5de0, 0xc6d5, 0xb35b, 0x9658, 0x0, 0x0);
        gbc.writeMem(0x1d87, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe99, gbc.sp());
        EXPECT(0x1d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 030E
        gbc.setState(0xd90a, 0x5b6d, 0x59e0, 0x1abd, 0xbdd5, 0x4084, 0x1, 0x1);
        gbc.writeMem(0xd90a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5b6d, gbc.sp());
        EXPECT(0xd90c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90a));
        EXPECT(0x2c, gbc.readMem(0xd90b));
        // CB 2C 030F
        gbc.setState(0x28f8, 0x8bfe, 0x7ee0, 0x9fb1, 0xbd6a, 0x4954, 0x1, 0x0);
        gbc.writeMem(0x28f8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8bfe, gbc.sp());
        EXPECT(0x28fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0310
        gbc.setState(0xdba, 0xf815, 0x4420, 0xf8aa, 0xf3c4, 0x2943, 0x1, 0x0);
        gbc.writeMem(0xdba, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xf815, gbc.sp());
        EXPECT(0xdbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0311
        gbc.setState(0x3ee6, 0x3c27, 0xf830, 0x6681, 0x217, 0xff9a, 0x1, 0x1);
        gbc.writeMem(0x3ee6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3c27, gbc.sp());
        EXPECT(0x3ee8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0313
        gbc.setState(0xe16b, 0x3066, 0xc620, 0x6646, 0xeb60, 0xd14b, 0x1, 0x1);
        gbc.writeMem(0xe16b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3066, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16b));
        EXPECT(0x2c, gbc.readMem(0xe16c));
        // CB 2C 0314
        gbc.setState(0x9e2e, 0x47fe, 0xbbc0, 0x23c0, 0xd6e6, 0x69c3, 0x0, 0x0);
        gbc.writeMem(0x9e2e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x47fe, gbc.sp());
        EXPECT(0x9e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2e));
        EXPECT(0x2c, gbc.readMem(0x9e2f));
        // CB 2C 0315
        gbc.setState(0x8b25, 0x78bb, 0x6dc0, 0xc374, 0x5078, 0xe84f, 0x1, 0x1);
        gbc.writeMem(0x8b25, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x78bb, gbc.sp());
        EXPECT(0x8b27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b25));
        EXPECT(0x2c, gbc.readMem(0x8b26));
        // CB 2C 0316
        gbc.setState(0x1afc, 0xfe9c, 0x4e20, 0x2798, 0xa283, 0x7013, 0x0, 0x1);
        gbc.writeMem(0x1afc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xfe9c, gbc.sp());
        EXPECT(0x1afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0317
        gbc.setState(0x21d4, 0xb2b6, 0x2d60, 0x66d, 0xc66f, 0xaaee, 0x0, 0x1);
        gbc.writeMem(0x21d4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xb2b6, gbc.sp());
        EXPECT(0x21d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0318
        gbc.setState(0x99c9, 0x95d3, 0x39c0, 0x7d6, 0xfbc6, 0xa9f2, 0x0, 0x1);
        gbc.writeMem(0x99c9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x95d3, gbc.sp());
        EXPECT(0x99cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99c9));
        EXPECT(0x2c, gbc.readMem(0x99ca));
        // CB 2C 0319
        gbc.setState(0x8925, 0x802e, 0x1140, 0x1708, 0xbf4d, 0xa790, 0x0, 0x0);
        gbc.writeMem(0x8925, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x802e, gbc.sp());
        EXPECT(0x8927, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8925));
        EXPECT(0x2c, gbc.readMem(0x8926));
        // CB 2C 031A
        gbc.setState(0x1035, 0x2e70, 0x9f00, 0x4cd, 0x3b3c, 0x448d, 0x1, 0x1);
        gbc.writeMem(0x1035, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2e70, gbc.sp());
        EXPECT(0x1037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 031B
        gbc.setState(0x2016, 0x4745, 0xb2e0, 0xa106, 0xec1b, 0x78a9, 0x0, 0x0);
        gbc.writeMem(0x2016, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4745, gbc.sp());
        EXPECT(0x2018, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 031C
        gbc.setState(0x39a7, 0xcde2, 0xb860, 0xa7a1, 0xb5fd, 0xd29f, 0x0, 0x1);
        gbc.writeMem(0x39a7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcde2, gbc.sp());
        EXPECT(0x39a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 031E
        gbc.setState(0x3453, 0x7b4f, 0x7f90, 0x7098, 0xff37, 0x4658, 0x0, 0x0);
        gbc.writeMem(0x3453, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7b4f, gbc.sp());
        EXPECT(0x3455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 031F
        gbc.setState(0xd5aa, 0xcf68, 0x7e60, 0x833f, 0x5c53, 0x8186, 0x1, 0x0);
        gbc.writeMem(0xd5aa, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0xd5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5aa));
        EXPECT(0x2c, gbc.readMem(0xd5ab));
        // CB 2C 0320
        gbc.setState(0xd73f, 0xff28, 0x95e0, 0xc443, 0xc5b9, 0xb914, 0x1, 0x1);
        gbc.writeMem(0xd73f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xff28, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd73f));
        EXPECT(0x2c, gbc.readMem(0xd740));
        // CB 2C 0321
        gbc.setState(0x6e9e, 0x205e, 0xd590, 0x5367, 0x4744, 0x9d4b, 0x1, 0x1);
        gbc.writeMem(0x6e9e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x205e, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0322
        gbc.setState(0x16a0, 0x60a5, 0x2cc0, 0x5603, 0x887b, 0xfd8a, 0x1, 0x1);
        gbc.writeMem(0x16a0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x60a5, gbc.sp());
        EXPECT(0x16a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0323
        gbc.setState(0xb38c, 0x6827, 0x56a0, 0xdad9, 0xd9b6, 0xbe5e, 0x1, 0x0);
        gbc.writeMem(0xb38c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6827, gbc.sp());
        EXPECT(0xb38e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38c));
        EXPECT(0x2c, gbc.readMem(0xb38d));
        // CB 2C 0324
        gbc.setState(0xa678, 0x6e4c, 0xa550, 0xedad, 0x93e7, 0x4d5, 0x0, 0x0);
        gbc.writeMem(0xa678, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6e4c, gbc.sp());
        EXPECT(0xa67a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa678));
        EXPECT(0x2c, gbc.readMem(0xa679));
        // CB 2C 0325
        gbc.setState(0xa810, 0xef7b, 0x1e70, 0x8a5f, 0xc8cd, 0x9033, 0x1, 0x1);
        gbc.writeMem(0xa810, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xef7b, gbc.sp());
        EXPECT(0xa812, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa810));
        EXPECT(0x2c, gbc.readMem(0xa811));
        // CB 2C 0326
        gbc.setState(0xb07b, 0x272, 0x19b0, 0xc2c7, 0xeb9f, 0xd912, 0x0, 0x1);
        gbc.writeMem(0xb07b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0xb07d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb07b));
        EXPECT(0x2c, gbc.readMem(0xb07c));
        // CB 2C 0327
        gbc.setState(0xa44b, 0x609, 0xe0a0, 0xd726, 0xa59, 0xb8b0, 0x0, 0x1);
        gbc.writeMem(0xa44b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x609, gbc.sp());
        EXPECT(0xa44d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa44b));
        EXPECT(0x2c, gbc.readMem(0xa44c));
        // CB 2C 0329
        gbc.setState(0xc1e4, 0x6167, 0x6230, 0x3a42, 0x6161, 0x6337, 0x1, 0x1);
        gbc.writeMem(0xc1e4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6167, gbc.sp());
        EXPECT(0xc1e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e4));
        EXPECT(0x2c, gbc.readMem(0xc1e5));
        // CB 2C 032A
        gbc.setState(0x6fc1, 0x355a, 0x5780, 0x1296, 0x206a, 0x3e56, 0x0, 0x1);
        gbc.writeMem(0x6fc1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x355a, gbc.sp());
        EXPECT(0x6fc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 032B
        gbc.setState(0x2d10, 0xd595, 0x2510, 0xc074, 0x83df, 0xb274, 0x0, 0x1);
        gbc.writeMem(0x2d10, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd595, gbc.sp());
        EXPECT(0x2d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 032D
        gbc.setState(0x2dac, 0xfc1a, 0x47a0, 0x9aeb, 0x3e18, 0x240f, 0x0, 0x1);
        gbc.writeMem(0x2dac, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfc1a, gbc.sp());
        EXPECT(0x2dae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 032E
        gbc.setState(0x9fa0, 0x1fd7, 0x8fa0, 0x8494, 0xbae, 0xee91, 0x0, 0x0);
        gbc.writeMem(0x9fa0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1fd7, gbc.sp());
        EXPECT(0x9fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fa0));
        EXPECT(0x2c, gbc.readMem(0x9fa1));
        // CB 2C 032F
        gbc.setState(0x77b1, 0xaa4b, 0x5040, 0x950a, 0xb95d, 0x4e1c, 0x0, 0x1);
        gbc.writeMem(0x77b1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xaa4b, gbc.sp());
        EXPECT(0x77b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0330
        gbc.setState(0x1b85, 0x361f, 0xf1b0, 0x62c7, 0x54b, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x1b85, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x361f, gbc.sp());
        EXPECT(0x1b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0331
        gbc.setState(0xeb73, 0x281e, 0x9fa0, 0xecd, 0x96ce, 0x9e80, 0x0, 0x0);
        gbc.writeMem(0xeb73, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x281e, gbc.sp());
        EXPECT(0xeb75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb73));
        EXPECT(0x2c, gbc.readMem(0xeb74));
        // CB 2C 0332
        gbc.setState(0x4b78, 0x2c99, 0x5fb0, 0x1e16, 0xbf7b, 0x3d54, 0x0, 0x0);
        gbc.writeMem(0x4b78, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2c99, gbc.sp());
        EXPECT(0x4b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0334
        gbc.setState(0xa1f6, 0x3bfd, 0x2c90, 0x9942, 0x2bee, 0xe08, 0x1, 0x0);
        gbc.writeMem(0xa1f6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3bfd, gbc.sp());
        EXPECT(0xa1f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1f6));
        EXPECT(0x2c, gbc.readMem(0xa1f7));
        // CB 2C 0335
        gbc.setState(0x6c84, 0x47c0, 0xe400, 0x94b0, 0x9699, 0x1600, 0x1, 0x0);
        gbc.writeMem(0x6c84, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x47c0, gbc.sp());
        EXPECT(0x6c86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0337
        gbc.setState(0xa0d7, 0xd69f, 0xe150, 0x5348, 0xbcbe, 0x3466, 0x0, 0x0);
        gbc.writeMem(0xa0d7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd69f, gbc.sp());
        EXPECT(0xa0d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d7));
        EXPECT(0x2c, gbc.readMem(0xa0d8));
        // CB 2C 0338
        gbc.setState(0xab24, 0x4334, 0x3f20, 0x73a7, 0xf57a, 0x7838, 0x1, 0x0);
        gbc.writeMem(0xab24, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4334, gbc.sp());
        EXPECT(0xab26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab24));
        EXPECT(0x2c, gbc.readMem(0xab25));
        // CB 2C 0339
        gbc.setState(0x5aab, 0xb261, 0xea40, 0x9e7e, 0x63dc, 0x99c6, 0x1, 0x1);
        gbc.writeMem(0x5aab, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb261, gbc.sp());
        EXPECT(0x5aad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 033A
        gbc.setState(0x9a2a, 0xac76, 0x1080, 0x6c38, 0x41d1, 0x4b64, 0x1, 0x0);
        gbc.writeMem(0x9a2a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xac76, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2a));
        EXPECT(0x2c, gbc.readMem(0x9a2b));
        // CB 2C 033B
        gbc.setState(0x3db0, 0xfc2e, 0x1650, 0x4f1, 0x2dea, 0x5c0e, 0x1, 0x1);
        gbc.writeMem(0x3db0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xfc2e, gbc.sp());
        EXPECT(0x3db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 033C
        gbc.setState(0x3e04, 0xf87c, 0x3760, 0x9c97, 0xc9d8, 0xabdb, 0x0, 0x0);
        gbc.writeMem(0x3e04, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf87c, gbc.sp());
        EXPECT(0x3e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 033D
        gbc.setState(0x8580, 0x6d82, 0xa440, 0xb10d, 0xe4be, 0xd205, 0x0, 0x0);
        gbc.writeMem(0x8580, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6d82, gbc.sp());
        EXPECT(0x8582, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8580));
        EXPECT(0x2c, gbc.readMem(0x8581));
        // CB 2C 033E
        gbc.setState(0xbbf0, 0xfb8c, 0x5cf0, 0x534b, 0x65b0, 0xb26e, 0x0, 0x0);
        gbc.writeMem(0xbbf0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xfb8c, gbc.sp());
        EXPECT(0xbbf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf0));
        EXPECT(0x2c, gbc.readMem(0xbbf1));
        // CB 2C 0340
        gbc.setState(0x9bf4, 0xe15c, 0xf740, 0xcbc7, 0xc3cc, 0x3595, 0x1, 0x0);
        gbc.writeMem(0x9bf4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe15c, gbc.sp());
        EXPECT(0x9bf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf4));
        EXPECT(0x2c, gbc.readMem(0x9bf5));
        // CB 2C 0341
        gbc.setState(0xa1e1, 0xc1d5, 0xd490, 0x6908, 0x3ea7, 0x92fa, 0x0, 0x0);
        gbc.writeMem(0xa1e1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc1d5, gbc.sp());
        EXPECT(0xa1e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1e1));
        EXPECT(0x2c, gbc.readMem(0xa1e2));
        // CB 2C 0342
        gbc.setState(0xcd79, 0x5656, 0x6a00, 0xda41, 0x3641, 0x2f61, 0x1, 0x1);
        gbc.writeMem(0xcd79, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5656, gbc.sp());
        EXPECT(0xcd7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd79));
        EXPECT(0x2c, gbc.readMem(0xcd7a));
        // CB 2C 0343
        gbc.setState(0xb74d, 0x2c09, 0xb1c0, 0x9fdd, 0xb8f6, 0x493c, 0x0, 0x0);
        gbc.writeMem(0xb74d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2c09, gbc.sp());
        EXPECT(0xb74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb74d));
        EXPECT(0x2c, gbc.readMem(0xb74e));
        // CB 2C 0344
        gbc.setState(0xe76f, 0x7c7b, 0x7590, 0x291d, 0x8dc2, 0x3983, 0x1, 0x1);
        gbc.writeMem(0xe76f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x7c7b, gbc.sp());
        EXPECT(0xe771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76f));
        EXPECT(0x2c, gbc.readMem(0xe770));
        // CB 2C 0345
        gbc.setState(0x1bcf, 0xb72f, 0x91e0, 0x1b83, 0x5450, 0x40e8, 0x1, 0x0);
        gbc.writeMem(0x1bcf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0x1bd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0346
        gbc.setState(0x3bb6, 0x6d14, 0x50c0, 0xe8c0, 0xa5b3, 0x360f, 0x0, 0x0);
        gbc.writeMem(0x3bb6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6d14, gbc.sp());
        EXPECT(0x3bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0347
        gbc.setState(0x9d7a, 0xd786, 0x5460, 0x2d, 0x116b, 0xc35b, 0x1, 0x1);
        gbc.writeMem(0x9d7a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xd786, gbc.sp());
        EXPECT(0x9d7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d7a));
        EXPECT(0x2c, gbc.readMem(0x9d7b));
        // CB 2C 0348
        gbc.setState(0x1799, 0x8faa, 0xea50, 0x3e4d, 0x42b7, 0x6d8d, 0x0, 0x1);
        gbc.writeMem(0x1799, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8faa, gbc.sp());
        EXPECT(0x179b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0349
        gbc.setState(0x93b1, 0x6ffe, 0xb3d0, 0xa90c, 0x71e7, 0xec0b, 0x1, 0x1);
        gbc.writeMem(0x93b1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6ffe, gbc.sp());
        EXPECT(0x93b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b1));
        EXPECT(0x2c, gbc.readMem(0x93b2));
        // CB 2C 034A
        gbc.setState(0xa359, 0xf9b4, 0xd3c0, 0x80b5, 0x1cde, 0xb27f, 0x1, 0x1);
        gbc.writeMem(0xa359, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf9b4, gbc.sp());
        EXPECT(0xa35b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa359));
        EXPECT(0x2c, gbc.readMem(0xa35a));
        // CB 2C 034B
        gbc.setState(0xcda1, 0xccab, 0xdba0, 0x9fbb, 0xed0a, 0xbd1d, 0x0, 0x0);
        gbc.writeMem(0xcda1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xccab, gbc.sp());
        EXPECT(0xcda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda1));
        EXPECT(0x2c, gbc.readMem(0xcda2));
        // CB 2C 034D
        gbc.setState(0xea5c, 0x1292, 0xf7d0, 0x676, 0x3b6b, 0x750e, 0x0, 0x1);
        gbc.writeMem(0xea5c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1292, gbc.sp());
        EXPECT(0xea5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5c));
        EXPECT(0x2c, gbc.readMem(0xea5d));
        // CB 2C 034E
        gbc.setState(0x5fb9, 0x3eed, 0x9c80, 0x7717, 0xc430, 0xba65, 0x0, 0x0);
        gbc.writeMem(0x5fb9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3eed, gbc.sp());
        EXPECT(0x5fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 034F
        gbc.setState(0x7485, 0x2dd5, 0x29a0, 0xea0e, 0x67fa, 0xfb27, 0x0, 0x0);
        gbc.writeMem(0x7485, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2dd5, gbc.sp());
        EXPECT(0x7487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0350
        gbc.setState(0x613, 0xa36, 0x97d0, 0xc335, 0x62d6, 0xcc60, 0x0, 0x0);
        gbc.writeMem(0x613, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa36, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0351
        gbc.setState(0x77d7, 0x1e44, 0x7950, 0xe366, 0x2afa, 0x3a2d, 0x1, 0x0);
        gbc.writeMem(0x77d7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x1e44, gbc.sp());
        EXPECT(0x77d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0352
        gbc.setState(0x539b, 0xc623, 0x22d0, 0x24b5, 0xcdad, 0x3f16, 0x1, 0x0);
        gbc.writeMem(0x539b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc623, gbc.sp());
        EXPECT(0x539d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0353
        gbc.setState(0x4f26, 0xbbcc, 0x3ef0, 0xb2bf, 0x44a3, 0xf6bd, 0x1, 0x0);
        gbc.writeMem(0x4f26, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbbcc, gbc.sp());
        EXPECT(0x4f28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0354
        gbc.setState(0xc7b0, 0xec5c, 0x300, 0x8ae2, 0x6b93, 0x6518, 0x0, 0x1);
        gbc.writeMem(0xc7b0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xec5c, gbc.sp());
        EXPECT(0xc7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b0));
        EXPECT(0x2c, gbc.readMem(0xc7b1));
        // CB 2C 0355
        gbc.setState(0x950b, 0xbc73, 0xd7f0, 0x31ad, 0xf6a1, 0x8e45, 0x1, 0x1);
        gbc.writeMem(0x950b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbc73, gbc.sp());
        EXPECT(0x950d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x950b));
        EXPECT(0x2c, gbc.readMem(0x950c));
        // CB 2C 0356
        gbc.setState(0x25fd, 0x66d2, 0x93a0, 0x9c20, 0x711d, 0x6053, 0x1, 0x1);
        gbc.writeMem(0x25fd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0357
        gbc.setState(0x1252, 0x9908, 0xf290, 0x829e, 0xd8b7, 0x8428, 0x0, 0x1);
        gbc.writeMem(0x1252, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9908, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0358
        gbc.setState(0xe4df, 0xb48f, 0xce10, 0x629d, 0x7357, 0x9186, 0x1, 0x0);
        gbc.writeMem(0xe4df, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb48f, gbc.sp());
        EXPECT(0xe4e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4df));
        EXPECT(0x2c, gbc.readMem(0xe4e0));
        // CB 2C 0359
        gbc.setState(0xb6d9, 0xf4ff, 0x4aa0, 0x5978, 0xe0d8, 0x2421, 0x1, 0x0);
        gbc.writeMem(0xb6d9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf4ff, gbc.sp());
        EXPECT(0xb6db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d9));
        EXPECT(0x2c, gbc.readMem(0xb6da));
        // CB 2C 035A
        gbc.setState(0x2e5c, 0x823d, 0x3e80, 0x5198, 0x66f5, 0x442f, 0x0, 0x0);
        gbc.writeMem(0x2e5c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x823d, gbc.sp());
        EXPECT(0x2e5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 035B
        gbc.setState(0xcf4b, 0xdb91, 0xf7d0, 0x13ca, 0x80b6, 0x3846, 0x1, 0x1);
        gbc.writeMem(0xcf4b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xdb91, gbc.sp());
        EXPECT(0xcf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf4b));
        EXPECT(0x2c, gbc.readMem(0xcf4c));
        // CB 2C 035E
        gbc.setState(0x4852, 0xc058, 0xc2f0, 0xc929, 0x9335, 0x6771, 0x1, 0x0);
        gbc.writeMem(0x4852, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x4854, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 035F
        gbc.setState(0xa96f, 0x17f8, 0x79d0, 0x4366, 0xced8, 0xa4e8, 0x0, 0x0);
        gbc.writeMem(0xa96f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x17f8, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa96f));
        EXPECT(0x2c, gbc.readMem(0xa970));
        // CB 2C 0360
        gbc.setState(0xa899, 0xc8d6, 0x220, 0x8d7e, 0xd003, 0xe12f, 0x0, 0x1);
        gbc.writeMem(0xa899, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc8d6, gbc.sp());
        EXPECT(0xa89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa899));
        EXPECT(0x2c, gbc.readMem(0xa89a));
        // CB 2C 0362
        gbc.setState(0xa35, 0x55be, 0xa4d0, 0x380a, 0x3f60, 0x30ca, 0x0, 0x0);
        gbc.writeMem(0xa35, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0xa37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0363
        gbc.setState(0xcf2b, 0x47ec, 0x22c0, 0x615c, 0x7f15, 0x23d0, 0x0, 0x1);
        gbc.writeMem(0xcf2b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x47ec, gbc.sp());
        EXPECT(0xcf2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf2b));
        EXPECT(0x2c, gbc.readMem(0xcf2c));
        // CB 2C 0364
        gbc.setState(0xabcb, 0xd97a, 0xbc30, 0xd6ed, 0xa85a, 0x387f, 0x0, 0x0);
        gbc.writeMem(0xabcb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd97a, gbc.sp());
        EXPECT(0xabcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabcb));
        EXPECT(0x2c, gbc.readMem(0xabcc));
        // CB 2C 0365
        gbc.setState(0x508e, 0x105d, 0x240, 0xb413, 0xfecb, 0x25d, 0x0, 0x1);
        gbc.writeMem(0x508e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x105d, gbc.sp());
        EXPECT(0x5090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0366
        gbc.setState(0xeecc, 0x4dbd, 0x1260, 0x5f1a, 0x72d0, 0x563a, 0x1, 0x0);
        gbc.writeMem(0xeecc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4dbd, gbc.sp());
        EXPECT(0xeece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeecc));
        EXPECT(0x2c, gbc.readMem(0xeecd));
        // CB 2C 0367
        gbc.setState(0x53a5, 0xb32a, 0x8780, 0xb18d, 0x4833, 0xe221, 0x1, 0x1);
        gbc.writeMem(0x53a5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb32a, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0368
        gbc.setState(0xb21c, 0x8049, 0x2390, 0x8b83, 0xc8d0, 0x6a71, 0x0, 0x0);
        gbc.writeMem(0xb21c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8049, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21c));
        EXPECT(0x2c, gbc.readMem(0xb21d));
        // CB 2C 0369
        gbc.setState(0xc5e9, 0x878a, 0x5cf0, 0x7677, 0xb2b2, 0x9275, 0x0, 0x0);
        gbc.writeMem(0xc5e9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x878a, gbc.sp());
        EXPECT(0xc5eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5e9));
        EXPECT(0x2c, gbc.readMem(0xc5ea));
        // CB 2C 036A
        gbc.setState(0xdf5e, 0x67a2, 0x6510, 0xd686, 0x3b36, 0x5d2e, 0x0, 0x0);
        gbc.writeMem(0xdf5e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x67a2, gbc.sp());
        EXPECT(0xdf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf5e));
        EXPECT(0x2c, gbc.readMem(0xdf5f));
        // CB 2C 036B
        gbc.setState(0x2cc0, 0xba22, 0xf880, 0xf79d, 0x2744, 0x1d55, 0x0, 0x0);
        gbc.writeMem(0x2cc0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xba22, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 036C
        gbc.setState(0x53f7, 0x203b, 0xb660, 0x578c, 0x28ec, 0x6a92, 0x0, 0x0);
        gbc.writeMem(0x53f7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x203b, gbc.sp());
        EXPECT(0x53f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 036D
        gbc.setState(0x514d, 0x1a94, 0x4b50, 0xdbae, 0xa58b, 0x5341, 0x1, 0x0);
        gbc.writeMem(0x514d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1a94, gbc.sp());
        EXPECT(0x514f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 036E
        gbc.setState(0xb63f, 0xd765, 0x9cc0, 0x9658, 0x756d, 0xd430, 0x1, 0x1);
        gbc.writeMem(0xb63f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd765, gbc.sp());
        EXPECT(0xb641, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb63f));
        EXPECT(0x2c, gbc.readMem(0xb640));
        // CB 2C 036F
        gbc.setState(0xe4e5, 0xd4b6, 0x4e40, 0x70e9, 0x97eb, 0xff35, 0x0, 0x0);
        gbc.writeMem(0xe4e5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xd4b6, gbc.sp());
        EXPECT(0xe4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e5));
        EXPECT(0x2c, gbc.readMem(0xe4e6));
        // CB 2C 0370
        gbc.setState(0xacc4, 0x7bfd, 0xeb0, 0x94d5, 0xd1a0, 0xbf97, 0x0, 0x0);
        gbc.writeMem(0xacc4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7bfd, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0x2c, gbc.readMem(0xacc5));
        // CB 2C 0371
        gbc.setState(0x194, 0x26ab, 0x3b40, 0xe1c9, 0x1992, 0xc19b, 0x1, 0x1);
        gbc.writeMem(0x194, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0x196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0372
        gbc.setState(0x36e2, 0x4230, 0x2f0, 0x3c71, 0x17c8, 0xb0f5, 0x0, 0x1);
        gbc.writeMem(0x36e2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x4230, gbc.sp());
        EXPECT(0x36e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0373
        gbc.setState(0x297b, 0x68cb, 0x57f0, 0x5b0a, 0xb1b0, 0xbfd7, 0x1, 0x0);
        gbc.writeMem(0x297b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x68cb, gbc.sp());
        EXPECT(0x297d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0374
        gbc.setState(0x5b3e, 0x927c, 0x9300, 0x75e9, 0xa0b1, 0xf430, 0x1, 0x1);
        gbc.writeMem(0x5b3e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x927c, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0375
        gbc.setState(0xacfc, 0xa0d9, 0x98d0, 0xfdc8, 0xd787, 0x128b, 0x0, 0x0);
        gbc.writeMem(0xacfc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa0d9, gbc.sp());
        EXPECT(0xacfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacfc));
        EXPECT(0x2c, gbc.readMem(0xacfd));
        // CB 2C 0376
        gbc.setState(0x8842, 0x7373, 0xe190, 0x8754, 0x1e7a, 0xab78, 0x0, 0x0);
        gbc.writeMem(0x8842, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7373, gbc.sp());
        EXPECT(0x8844, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8842));
        EXPECT(0x2c, gbc.readMem(0x8843));
        // CB 2C 0377
        gbc.setState(0x34a, 0x7192, 0x6680, 0x82d0, 0x5dc3, 0xb407, 0x0, 0x1);
        gbc.writeMem(0x34a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x7192, gbc.sp());
        EXPECT(0x34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0378
        gbc.setState(0x82c8, 0x31f5, 0xf5e0, 0x4781, 0x4dc7, 0xc4ae, 0x0, 0x0);
        gbc.writeMem(0x82c8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0x82ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c8));
        EXPECT(0x2c, gbc.readMem(0x82c9));
        // CB 2C 0379
        gbc.setState(0x6e18, 0x17ee, 0x5c60, 0x67cd, 0x1c78, 0xf04a, 0x0, 0x0);
        gbc.writeMem(0x6e18, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x17ee, gbc.sp());
        EXPECT(0x6e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 037A
        gbc.setState(0xa4a0, 0x1c9f, 0x6170, 0xb039, 0x9c5, 0x1850, 0x1, 0x1);
        gbc.writeMem(0xa4a0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1c9f, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0x2c, gbc.readMem(0xa4a1));
        // CB 2C 037B
        gbc.setState(0x9b61, 0xf2e, 0x34c0, 0x8b0e, 0x8bf2, 0x3ab6, 0x0, 0x1);
        gbc.writeMem(0x9b61, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xf2e, gbc.sp());
        EXPECT(0x9b63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b61));
        EXPECT(0x2c, gbc.readMem(0x9b62));
        // CB 2C 037C
        gbc.setState(0x481d, 0x1f8c, 0xab00, 0x41ba, 0xc900, 0xd414, 0x1, 0x0);
        gbc.writeMem(0x481d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1f8c, gbc.sp());
        EXPECT(0x481f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 037D
        gbc.setState(0x4518, 0xb04b, 0xb530, 0x16e8, 0x5f48, 0x9fb1, 0x1, 0x0);
        gbc.writeMem(0x4518, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xb04b, gbc.sp());
        EXPECT(0x451a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 037E
        gbc.setState(0x8061, 0x49fc, 0x4bb0, 0x96fd, 0x229d, 0x28c, 0x0, 0x1);
        gbc.writeMem(0x8061, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x49fc, gbc.sp());
        EXPECT(0x8063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8061));
        EXPECT(0x2c, gbc.readMem(0x8062));
        // CB 2C 037F
        gbc.setState(0xcfa5, 0x2ea, 0x33b0, 0x3fce, 0xa211, 0xdda7, 0x1, 0x1);
        gbc.writeMem(0xcfa5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2ea, gbc.sp());
        EXPECT(0xcfa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa5));
        EXPECT(0x2c, gbc.readMem(0xcfa6));
        // CB 2C 0380
        gbc.setState(0x22a3, 0x4557, 0x8710, 0x346c, 0xfc0a, 0x435c, 0x1, 0x1);
        gbc.writeMem(0x22a3, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4557, gbc.sp());
        EXPECT(0x22a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0381
        gbc.setState(0x6aa9, 0x1a7d, 0xdc20, 0x9e78, 0x7852, 0x1a64, 0x1, 0x0);
        gbc.writeMem(0x6aa9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1a7d, gbc.sp());
        EXPECT(0x6aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0382
        gbc.setState(0xcea2, 0x508a, 0x8a0, 0x75dd, 0x2b86, 0xf0b1, 0x1, 0x1);
        gbc.writeMem(0xcea2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x508a, gbc.sp());
        EXPECT(0xcea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea2));
        EXPECT(0x2c, gbc.readMem(0xcea3));
        // CB 2C 0383
        gbc.setState(0x9666, 0xd5a7, 0x4c70, 0x4d70, 0xbabc, 0x7e39, 0x1, 0x1);
        gbc.writeMem(0x9666, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd5a7, gbc.sp());
        EXPECT(0x9668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9666));
        EXPECT(0x2c, gbc.readMem(0x9667));
        // CB 2C 0384
        gbc.setState(0xb1f2, 0xb9b8, 0xb750, 0x21ad, 0x1fdb, 0xde8d, 0x0, 0x0);
        gbc.writeMem(0xb1f2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb9b8, gbc.sp());
        EXPECT(0xb1f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1f2));
        EXPECT(0x2c, gbc.readMem(0xb1f3));
        // CB 2C 0385
        gbc.setState(0xa9d1, 0xd3c7, 0xa470, 0x9f4b, 0x1abf, 0xc4ce, 0x1, 0x1);
        gbc.writeMem(0xa9d1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xd3c7, gbc.sp());
        EXPECT(0xa9d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d1));
        EXPECT(0x2c, gbc.readMem(0xa9d2));
        // CB 2C 0386
        gbc.setState(0xa9fd, 0x2119, 0xb9d0, 0xc5b2, 0x5e56, 0xf0a2, 0x1, 0x1);
        gbc.writeMem(0xa9fd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0xa9ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9fd));
        EXPECT(0x2c, gbc.readMem(0xa9fe));
        // CB 2C 0387
        gbc.setState(0x840, 0x77fc, 0xe750, 0x2e9c, 0x6a07, 0x2ef9, 0x1, 0x0);
        gbc.writeMem(0x840, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x77fc, gbc.sp());
        EXPECT(0x842, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0388
        gbc.setState(0x15f5, 0xb0a7, 0x9920, 0xd775, 0xf1c5, 0xabc9, 0x1, 0x0);
        gbc.writeMem(0x15f5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb0a7, gbc.sp());
        EXPECT(0x15f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0389
        gbc.setState(0x61dc, 0x518c, 0x5410, 0xc13, 0xf034, 0xe7f3, 0x1, 0x1);
        gbc.writeMem(0x61dc, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x518c, gbc.sp());
        EXPECT(0x61de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 038A
        gbc.setState(0xa002, 0x8e88, 0xab10, 0x38b9, 0xca38, 0x8642, 0x0, 0x1);
        gbc.writeMem(0xa002, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0xa004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa002));
        EXPECT(0x2c, gbc.readMem(0xa003));
        // CB 2C 038B
        gbc.setState(0xc99e, 0x48e2, 0x8490, 0xab36, 0xa61c, 0x7396, 0x1, 0x0);
        gbc.writeMem(0xc99e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x48e2, gbc.sp());
        EXPECT(0xc9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc99e));
        EXPECT(0x2c, gbc.readMem(0xc99f));
        // CB 2C 038C
        gbc.setState(0x29a1, 0xf3b, 0xc530, 0xd4df, 0xdbe2, 0xed1d, 0x1, 0x0);
        gbc.writeMem(0x29a1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0x29a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 038D
        gbc.setState(0xa4c6, 0x81d4, 0x93b0, 0xac19, 0x5f4c, 0xa4bd, 0x0, 0x1);
        gbc.writeMem(0xa4c6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x81d4, gbc.sp());
        EXPECT(0xa4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4c6));
        EXPECT(0x2c, gbc.readMem(0xa4c7));
        // CB 2C 038E
        gbc.setState(0xec46, 0x5159, 0x19c0, 0x7df6, 0x918c, 0xf4be, 0x1, 0x1);
        gbc.writeMem(0xec46, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x5159, gbc.sp());
        EXPECT(0xec48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec46));
        EXPECT(0x2c, gbc.readMem(0xec47));
        // CB 2C 038F
        gbc.setState(0xd895, 0x3f5f, 0xa6a0, 0x44f2, 0xcf91, 0xdcda, 0x1, 0x0);
        gbc.writeMem(0xd895, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x3f5f, gbc.sp());
        EXPECT(0xd897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd895));
        EXPECT(0x2c, gbc.readMem(0xd896));
        // CB 2C 0390
        gbc.setState(0x3ebf, 0x483d, 0x6560, 0x46c4, 0xc304, 0xedcd, 0x0, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x483d, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0391
        gbc.setState(0x944e, 0x768a, 0x1c00, 0xc15c, 0x7808, 0x7989, 0x1, 0x1);
        gbc.writeMem(0x944e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x768a, gbc.sp());
        EXPECT(0x9450, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x944e));
        EXPECT(0x2c, gbc.readMem(0x944f));
        // CB 2C 0392
        gbc.setState(0xb64, 0x5315, 0xd860, 0x810c, 0x9518, 0xa26, 0x0, 0x0);
        gbc.writeMem(0xb64, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x5315, gbc.sp());
        EXPECT(0xb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0393
        gbc.setState(0x96a9, 0x9759, 0x50, 0xdf31, 0xef7f, 0x6a9c, 0x1, 0x0);
        gbc.writeMem(0x96a9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9759, gbc.sp());
        EXPECT(0x96ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96a9));
        EXPECT(0x2c, gbc.readMem(0x96aa));
        // CB 2C 0394
        gbc.setState(0x387a, 0x42ce, 0xa070, 0xe4c2, 0xa7d5, 0xb15c, 0x0, 0x1);
        gbc.writeMem(0x387a, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x42ce, gbc.sp());
        EXPECT(0x387c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 0395
        gbc.setState(0x96d2, 0xbcb6, 0x94c0, 0xa67, 0x75f2, 0x7446, 0x0, 0x1);
        gbc.writeMem(0x96d2, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbcb6, gbc.sp());
        EXPECT(0x96d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d2));
        EXPECT(0x2c, gbc.readMem(0x96d3));
        // CB 2C 0396
        gbc.setState(0x35f9, 0xe3a4, 0x2200, 0x340d, 0x1d17, 0x28a2, 0x1, 0x0);
        gbc.writeMem(0x35f9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe3a4, gbc.sp());
        EXPECT(0x35fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0397
        gbc.setState(0x395d, 0xc0ba, 0x4e60, 0x1a7c, 0x1b72, 0x5a97, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc0ba, gbc.sp());
        EXPECT(0x395f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 0398
        gbc.setState(0xb95d, 0x8c32, 0xadd0, 0x957e, 0x5ab7, 0x1294, 0x1, 0x1);
        gbc.writeMem(0xb95d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8c32, gbc.sp());
        EXPECT(0xb95f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb95d));
        EXPECT(0x2c, gbc.readMem(0xb95e));
        // CB 2C 039A
        gbc.setState(0xa27b, 0x2291, 0xa260, 0x25f6, 0x9dc6, 0xf59c, 0x1, 0x1);
        gbc.writeMem(0xa27b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2291, gbc.sp());
        EXPECT(0xa27d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa27b));
        EXPECT(0x2c, gbc.readMem(0xa27c));
        // CB 2C 039B
        gbc.setState(0x8d36, 0x7c34, 0xb40, 0x1557, 0x6e00, 0x4c57, 0x1, 0x1);
        gbc.writeMem(0x8d36, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7c34, gbc.sp());
        EXPECT(0x8d38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d36));
        EXPECT(0x2c, gbc.readMem(0x8d37));
        // CB 2C 039C
        gbc.setState(0x6dc5, 0xe9a8, 0x3c40, 0xeaea, 0x56b0, 0xc708, 0x0, 0x1);
        gbc.writeMem(0x6dc5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xe9a8, gbc.sp());
        EXPECT(0x6dc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 039D
        gbc.setState(0xb386, 0x2f53, 0x7770, 0x3adc, 0x1d7e, 0xb031, 0x1, 0x1);
        gbc.writeMem(0xb386, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x2f53, gbc.sp());
        EXPECT(0xb388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb386));
        EXPECT(0x2c, gbc.readMem(0xb387));
        // CB 2C 039E
        gbc.setState(0xbcd7, 0x5abd, 0xbee0, 0x300c, 0x11b3, 0xec69, 0x1, 0x1);
        gbc.writeMem(0xbcd7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5abd, gbc.sp());
        EXPECT(0xbcd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcd7));
        EXPECT(0x2c, gbc.readMem(0xbcd8));
        // CB 2C 039F
        gbc.setState(0x3dfd, 0xeb82, 0x6c10, 0xab30, 0x52e, 0xe4af, 0x0, 0x0);
        gbc.writeMem(0x3dfd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xeb82, gbc.sp());
        EXPECT(0x3dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03A0
        gbc.setState(0x8e07, 0xbf4a, 0xd310, 0x8d3a, 0xd436, 0x5e39, 0x1, 0x1);
        gbc.writeMem(0x8e07, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbf4a, gbc.sp());
        EXPECT(0x8e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e07));
        EXPECT(0x2c, gbc.readMem(0x8e08));
        // CB 2C 03A1
        gbc.setState(0x6165, 0x4759, 0x3e80, 0x959c, 0xcadf, 0xbcea, 0x0, 0x1);
        gbc.writeMem(0x6165, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x4759, gbc.sp());
        EXPECT(0x6167, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03A2
        gbc.setState(0xaf33, 0x278c, 0xc480, 0xf017, 0xc6c1, 0xddda, 0x1, 0x0);
        gbc.writeMem(0xaf33, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0xaf35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf33));
        EXPECT(0x2c, gbc.readMem(0xaf34));
        // CB 2C 03A3
        gbc.setState(0x1afb, 0xf0a2, 0x7300, 0x572b, 0xaf40, 0x459b, 0x1, 0x1);
        gbc.writeMem(0x1afb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf0a2, gbc.sp());
        EXPECT(0x1afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03A4
        gbc.setState(0x5f94, 0x2f71, 0xca30, 0xe907, 0x22c7, 0x270b, 0x0, 0x0);
        gbc.writeMem(0x5f94, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2f71, gbc.sp());
        EXPECT(0x5f96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03A5
        gbc.setState(0xb651, 0x58de, 0x6cc0, 0xe1ba, 0xb41a, 0x5b2d, 0x0, 0x1);
        gbc.writeMem(0xb651, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x58de, gbc.sp());
        EXPECT(0xb653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb651));
        EXPECT(0x2c, gbc.readMem(0xb652));
        // CB 2C 03A6
        gbc.setState(0xb044, 0xe67c, 0x5620, 0xd901, 0xeefb, 0x9b2, 0x0, 0x0);
        gbc.writeMem(0xb044, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xe67c, gbc.sp());
        EXPECT(0xb046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb044));
        EXPECT(0x2c, gbc.readMem(0xb045));
        // CB 2C 03A7
        gbc.setState(0xc5af, 0xf3f0, 0x2350, 0x321e, 0x26bf, 0x932a, 0x0, 0x1);
        gbc.writeMem(0xc5af, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0xc5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5af));
        EXPECT(0x2c, gbc.readMem(0xc5b0));
        // CB 2C 03A9
        gbc.setState(0x2feb, 0x5adb, 0x7dc0, 0xb90, 0x5116, 0x44da, 0x1, 0x0);
        gbc.writeMem(0x2feb, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5adb, gbc.sp());
        EXPECT(0x2fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03AA
        gbc.setState(0x31f4, 0xbd4f, 0x2150, 0xee09, 0x8efc, 0x9665, 0x1, 0x0);
        gbc.writeMem(0x31f4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0x31f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03AB
        gbc.setState(0x799c, 0xcfea, 0xa3a0, 0x85da, 0x8ea8, 0x8165, 0x1, 0x0);
        gbc.writeMem(0x799c, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xcfea, gbc.sp());
        EXPECT(0x799e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03AC
        gbc.setState(0x2a36, 0x16b5, 0x6fd0, 0xd762, 0x36ba, 0x8ab5, 0x1, 0x0);
        gbc.writeMem(0x2a36, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x16b5, gbc.sp());
        EXPECT(0x2a38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03AE
        gbc.setState(0x60d7, 0xd86d, 0xb680, 0xa092, 0xd548, 0x2edd, 0x0, 0x0);
        gbc.writeMem(0x60d7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd86d, gbc.sp());
        EXPECT(0x60d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03AF
        gbc.setState(0x8eb5, 0x6484, 0x6230, 0xd794, 0x5a99, 0x280f, 0x1, 0x1);
        gbc.writeMem(0x8eb5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6484, gbc.sp());
        EXPECT(0x8eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8eb5));
        EXPECT(0x2c, gbc.readMem(0x8eb6));
        // CB 2C 03B0
        gbc.setState(0x1d21, 0xf769, 0x94a0, 0x1be0, 0x825e, 0x195d, 0x1, 0x0);
        gbc.writeMem(0x1d21, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xf769, gbc.sp());
        EXPECT(0x1d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03B1
        gbc.setState(0x4f5b, 0xc483, 0x9b00, 0x6656, 0x2145, 0xc4e9, 0x1, 0x0);
        gbc.writeMem(0x4f5b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc483, gbc.sp());
        EXPECT(0x4f5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03B2
        gbc.setState(0x46ef, 0xb02b, 0x8ae0, 0x365c, 0x6c5f, 0x9c9a, 0x1, 0x0);
        gbc.writeMem(0x46ef, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb02b, gbc.sp());
        EXPECT(0x46f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03B3
        gbc.setState(0xeb2e, 0x33ee, 0xa7b0, 0xd9da, 0x59f9, 0xd9cf, 0x0, 0x0);
        gbc.writeMem(0xeb2e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x33ee, gbc.sp());
        EXPECT(0xeb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2e));
        EXPECT(0x2c, gbc.readMem(0xeb2f));
        // CB 2C 03B4
        gbc.setState(0x97ef, 0xbf9a, 0xd7c0, 0xc7b8, 0x16dd, 0xd7c7, 0x0, 0x1);
        gbc.writeMem(0x97ef, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xbf9a, gbc.sp());
        EXPECT(0x97f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97ef));
        EXPECT(0x2c, gbc.readMem(0x97f0));
        // CB 2C 03B5
        gbc.setState(0xea56, 0x6a24, 0x1810, 0xc119, 0x87ac, 0x6b83, 0x1, 0x0);
        gbc.writeMem(0xea56, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6a24, gbc.sp());
        EXPECT(0xea58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea56));
        EXPECT(0x2c, gbc.readMem(0xea57));
        // CB 2C 03B6
        gbc.setState(0x7b33, 0x274b, 0xa1e0, 0x58ce, 0x180e, 0x7d8f, 0x1, 0x1);
        gbc.writeMem(0x7b33, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x274b, gbc.sp());
        EXPECT(0x7b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03B7
        gbc.setState(0x705b, 0x92d0, 0x1fc0, 0xdfc6, 0xb72c, 0xf38b, 0x0, 0x1);
        gbc.writeMem(0x705b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x92d0, gbc.sp());
        EXPECT(0x705d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03B8
        gbc.setState(0xca89, 0x2316, 0xd290, 0x1bfd, 0x929f, 0x29a3, 0x0, 0x0);
        gbc.writeMem(0xca89, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2316, gbc.sp());
        EXPECT(0xca8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca89));
        EXPECT(0x2c, gbc.readMem(0xca8a));
        // CB 2C 03B9
        gbc.setState(0xef91, 0x51af, 0x26e0, 0x41b7, 0x5d8a, 0x63a0, 0x1, 0x0);
        gbc.writeMem(0xef91, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x51af, gbc.sp());
        EXPECT(0xef93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef91));
        EXPECT(0x2c, gbc.readMem(0xef92));
        // CB 2C 03BA
        gbc.setState(0x7890, 0x3446, 0xab40, 0x96ad, 0x324b, 0x3d2c, 0x0, 0x0);
        gbc.writeMem(0x7890, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3446, gbc.sp());
        EXPECT(0x7892, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03BC
        gbc.setState(0xadd6, 0x1329, 0x8140, 0xcf51, 0x860d, 0xd225, 0x0, 0x1);
        gbc.writeMem(0xadd6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1329, gbc.sp());
        EXPECT(0xadd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadd6));
        EXPECT(0x2c, gbc.readMem(0xadd7));
        // CB 2C 03BE
        gbc.setState(0x55c8, 0xb488, 0x6260, 0x15b6, 0x18ca, 0x55cf, 0x1, 0x0);
        gbc.writeMem(0x55c8, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb488, gbc.sp());
        EXPECT(0x55ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03BF
        gbc.setState(0xa3a1, 0xc113, 0xb960, 0x336f, 0x14dd, 0xe0eb, 0x0, 0x0);
        gbc.writeMem(0xa3a1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc113, gbc.sp());
        EXPECT(0xa3a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3a1));
        EXPECT(0x2c, gbc.readMem(0xa3a2));
        // CB 2C 03C0
        gbc.setState(0x2751, 0xf2f0, 0xe310, 0xd1e2, 0xd583, 0x933a, 0x1, 0x1);
        gbc.writeMem(0x2751, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03C1
        gbc.setState(0x3735, 0x591a, 0xc1a0, 0x704a, 0xe420, 0x4097, 0x0, 0x0);
        gbc.writeMem(0x3735, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x591a, gbc.sp());
        EXPECT(0x3737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03C3
        gbc.setState(0x9382, 0x1dae, 0x8fb0, 0xfabd, 0xe000, 0xe7ea, 0x1, 0x0);
        gbc.writeMem(0x9382, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1dae, gbc.sp());
        EXPECT(0x9384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9382));
        EXPECT(0x2c, gbc.readMem(0x9383));
        // CB 2C 03C5
        gbc.setState(0x7ae9, 0x4882, 0x43c0, 0x2e53, 0xa3a0, 0x3f69, 0x1, 0x1);
        gbc.writeMem(0x7ae9, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4882, gbc.sp());
        EXPECT(0x7aeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03C7
        gbc.setState(0xedb0, 0xa0af, 0xcb90, 0x6f1d, 0xb6d0, 0x821b, 0x1, 0x1);
        gbc.writeMem(0xedb0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa0af, gbc.sp());
        EXPECT(0xedb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedb0));
        EXPECT(0x2c, gbc.readMem(0xedb1));
        // CB 2C 03C8
        gbc.setState(0xb1d6, 0x261, 0x2f80, 0x540b, 0x4aa8, 0xd2e, 0x1, 0x1);
        gbc.writeMem(0xb1d6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x261, gbc.sp());
        EXPECT(0xb1d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1d6));
        EXPECT(0x2c, gbc.readMem(0xb1d7));
        // CB 2C 03CA
        gbc.setState(0xc5d1, 0x7fd5, 0x2480, 0x1921, 0xcdc3, 0xa999, 0x1, 0x1);
        gbc.writeMem(0xc5d1, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7fd5, gbc.sp());
        EXPECT(0xc5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d1));
        EXPECT(0x2c, gbc.readMem(0xc5d2));
        // CB 2C 03CB
        gbc.setState(0xa61, 0xa292, 0x6740, 0xfe48, 0x2b5, 0x812d, 0x1, 0x0);
        gbc.writeMem(0xa61, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa292, gbc.sp());
        EXPECT(0xa63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03CC
        gbc.setState(0xa1be, 0x2adc, 0xad90, 0x6c82, 0xf32e, 0x8d2a, 0x0, 0x1);
        gbc.writeMem(0xa1be, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2adc, gbc.sp());
        EXPECT(0xa1c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1be));
        EXPECT(0x2c, gbc.readMem(0xa1bf));
        // CB 2C 03CD
        gbc.setState(0xbc9d, 0x7b13, 0x970, 0xc85a, 0xc704, 0x1bf2, 0x0, 0x1);
        gbc.writeMem(0xbc9d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7b13, gbc.sp());
        EXPECT(0xbc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc9d));
        EXPECT(0x2c, gbc.readMem(0xbc9e));
        // CB 2C 03CE
        gbc.setState(0x71fd, 0x3129, 0xa170, 0xea84, 0x372d, 0x1b36, 0x1, 0x1);
        gbc.writeMem(0x71fd, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3129, gbc.sp());
        EXPECT(0x71ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03CF
        gbc.setState(0x9a84, 0xbc11, 0xec80, 0x485d, 0xfa44, 0x27ca, 0x0, 0x1);
        gbc.writeMem(0x9a84, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xbc11, gbc.sp());
        EXPECT(0x9a86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a84));
        EXPECT(0x2c, gbc.readMem(0x9a85));
        // CB 2C 03D0
        gbc.setState(0x5583, 0xde2d, 0x35b0, 0x70e2, 0xc97e, 0x40ad, 0x0, 0x1);
        gbc.writeMem(0x5583, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xde2d, gbc.sp());
        EXPECT(0x5585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03D1
        gbc.setState(0xe29f, 0xc190, 0x6510, 0x8fae, 0xe5d, 0xc4a9, 0x0, 0x1);
        gbc.writeMem(0xe29f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc190, gbc.sp());
        EXPECT(0xe2a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe29f));
        EXPECT(0x2c, gbc.readMem(0xe2a0));
        // CB 2C 03D2
        gbc.setState(0x8465, 0x5f3d, 0x11e0, 0x4e0d, 0x92e5, 0x88d7, 0x0, 0x1);
        gbc.writeMem(0x8465, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5f3d, gbc.sp());
        EXPECT(0x8467, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8465));
        EXPECT(0x2c, gbc.readMem(0x8466));
        // CB 2C 03D3
        gbc.setState(0x215e, 0x5d0b, 0x4080, 0x42e8, 0xdef6, 0x6b90, 0x1, 0x0);
        gbc.writeMem(0x215e, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5d0b, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03D4
        gbc.setState(0xdec6, 0xeadd, 0xc6a0, 0x124, 0xcc2f, 0xc204, 0x0, 0x1);
        gbc.writeMem(0xdec6, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xeadd, gbc.sp());
        EXPECT(0xdec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec6));
        EXPECT(0x2c, gbc.readMem(0xdec7));
        // CB 2C 03D5
        gbc.setState(0xc96f, 0x961f, 0x5470, 0x43c1, 0x954a, 0xf287, 0x0, 0x0);
        gbc.writeMem(0xc96f, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x961f, gbc.sp());
        EXPECT(0xc971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96f));
        EXPECT(0x2c, gbc.readMem(0xc970));
        // CB 2C 03D6
        gbc.setState(0x1686, 0x741a, 0x8ae0, 0x5efe, 0x12e1, 0x986b, 0x0, 0x1);
        gbc.writeMem(0x1686, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x741a, gbc.sp());
        EXPECT(0x1688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03D7
        gbc.setState(0x23d4, 0x3d09, 0xe300, 0xac35, 0xad67, 0x7b9d, 0x1, 0x1);
        gbc.writeMem(0x23d4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3d09, gbc.sp());
        EXPECT(0x23d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03D9
        gbc.setState(0xb403, 0x7751, 0xa70, 0xfe0, 0xd292, 0x3aae, 0x1, 0x1);
        gbc.writeMem(0xb403, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7751, gbc.sp());
        EXPECT(0xb405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb403));
        EXPECT(0x2c, gbc.readMem(0xb404));
        // CB 2C 03DA
        gbc.setState(0xbd89, 0x7998, 0x17d0, 0x2046, 0xd383, 0x8912, 0x1, 0x0);
        gbc.writeMem(0xbd89, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7998, gbc.sp());
        EXPECT(0xbd8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd89));
        EXPECT(0x2c, gbc.readMem(0xbd8a));
        // CB 2C 03DB
        gbc.setState(0x42d0, 0x4b5, 0x1ce0, 0x25dc, 0x9450, 0xbac6, 0x0, 0x0);
        gbc.writeMem(0x42d0, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4b5, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03DC
        gbc.setState(0x1bb4, 0xfa76, 0x52b0, 0xf6da, 0xb5f4, 0x338, 0x0, 0x1);
        gbc.writeMem(0x1bb4, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xfa76, gbc.sp());
        EXPECT(0x1bb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03DD
        gbc.setState(0xc93b, 0x1acb, 0xd6f0, 0xf4d2, 0x39eb, 0xce2, 0x0, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1acb, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0x2c, gbc.readMem(0xc93c));
        // CB 2C 03DE
        gbc.setState(0x652d, 0x3e1d, 0x3270, 0x5f28, 0x941b, 0x86a, 0x0, 0x1);
        gbc.writeMem(0x652d, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x3e1d, gbc.sp());
        EXPECT(0x652f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03DF
        gbc.setState(0x1301, 0xb18d, 0xbfc0, 0xff9c, 0xa66, 0x5947, 0x1, 0x0);
        gbc.writeMem(0x1301, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb18d, gbc.sp());
        EXPECT(0x1303, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03E0
        gbc.setState(0x4e20, 0xd3cb, 0xe970, 0x747d, 0x7447, 0xbb3a, 0x1, 0x0);
        gbc.writeMem(0x4e20, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xd3cb, gbc.sp());
        EXPECT(0x4e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03E1
        gbc.setState(0x5c03, 0xe6d4, 0x1ac0, 0xe1ae, 0x8f6e, 0x5698, 0x1, 0x1);
        gbc.writeMem(0x5c03, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe6d4, gbc.sp());
        EXPECT(0x5c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03E2
        gbc.setState(0x89b7, 0xfe30, 0xa820, 0x73d4, 0x5efa, 0xfee6, 0x1, 0x0);
        gbc.writeMem(0x89b7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfe30, gbc.sp());
        EXPECT(0x89b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89b7));
        EXPECT(0x2c, gbc.readMem(0x89b8));
        // CB 2C 03E3
        gbc.setState(0xc22, 0x39d6, 0xbe50, 0x1a79, 0xc57d, 0xb70e, 0x1, 0x1);
        gbc.writeMem(0xc22, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x39d6, gbc.sp());
        EXPECT(0xc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 2C 03E4
        gbc.setState(0x6686, 0x50a8, 0x6a0, 0x78ca, 0x4203, 0x1238, 0x0, 0x1);
        gbc.writeMem(0x6686, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x50a8, gbc.sp());
        EXPECT(0x6688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03E5
        gbc.setState(0xcf5, 0xb334, 0x2880, 0xc8b2, 0xca07, 0x6add, 0x0, 0x1);
        gbc.writeMem(0xcf5, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb334, gbc.sp());
        EXPECT(0xcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03E6
        gbc.setState(0x7098, 0x884e, 0x5010, 0x81bf, 0xe5b0, 0x8ef2, 0x0, 0x0);
        gbc.writeMem(0x7098, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x884e, gbc.sp());
        EXPECT(0x709a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 2C 03E7
        gbc.setState(0xbaa7, 0x7f54, 0x6c40, 0xea37, 0xe585, 0x40ae, 0x0, 0x1);
        gbc.writeMem(0xbaa7, { 0xcb, 0x2c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0xbaa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaa7));
        EXPECT(0x2c, gbc.readMem(0xbaa8));
    }
