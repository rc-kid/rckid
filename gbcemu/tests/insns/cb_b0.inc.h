    TEST(gbcemu, opcode_cb_b0) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B0 0000
        gbc.setState(0x9919, 0xa06e, 0x6dd0, 0xed8f, 0x8cb2, 0xe9b9, 0x0, 0x1);
        gbc.writeMem(0x9919, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa06e, gbc.sp());
        EXPECT(0x991b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9919));
        EXPECT(0xb0, gbc.readMem(0x991a));
        // CB B0 0001
        gbc.setState(0xa551, 0x2d2f, 0xb3a0, 0xb38, 0x4527, 0xf3de, 0x0, 0x1);
        gbc.writeMem(0xa551, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2d2f, gbc.sp());
        EXPECT(0xa553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa551));
        EXPECT(0xb0, gbc.readMem(0xa552));
        // CB B0 0002
        gbc.setState(0xd1a2, 0xe5e1, 0xb870, 0x41fb, 0x98c4, 0x4d41, 0x0, 0x0);
        gbc.writeMem(0xd1a2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe5e1, gbc.sp());
        EXPECT(0xd1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a2));
        EXPECT(0xb0, gbc.readMem(0xd1a3));
        // CB B0 0003
        gbc.setState(0x8280, 0x2064, 0x4690, 0x46cc, 0x71c7, 0xb342, 0x1, 0x1);
        gbc.writeMem(0x8280, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2064, gbc.sp());
        EXPECT(0x8282, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8280));
        EXPECT(0xb0, gbc.readMem(0x8281));
        // CB B0 0004
        gbc.setState(0x16b2, 0x644b, 0x5210, 0xc875, 0xbd26, 0x16f9, 0x1, 0x0);
        gbc.writeMem(0x16b2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x644b, gbc.sp());
        EXPECT(0x16b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0005
        gbc.setState(0x813f, 0x7f55, 0xb8e0, 0x6760, 0xea7c, 0x3fc3, 0x1, 0x0);
        gbc.writeMem(0x813f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7f55, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813f));
        EXPECT(0xb0, gbc.readMem(0x8140));
        // CB B0 0006
        gbc.setState(0xa30, 0xdf1, 0x1070, 0x8cae, 0x60d9, 0x6672, 0x1, 0x0);
        gbc.writeMem(0xa30, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xdf1, gbc.sp());
        EXPECT(0xa32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0007
        gbc.setState(0x1ec2, 0x652b, 0x7c50, 0x1e2b, 0x670f, 0x21c5, 0x1, 0x0);
        gbc.writeMem(0x1ec2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0x1ec4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0008
        gbc.setState(0x3554, 0x99ba, 0xc4b0, 0x47c5, 0x7cf6, 0x487b, 0x1, 0x0);
        gbc.writeMem(0x3554, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x99ba, gbc.sp());
        EXPECT(0x3556, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0009
        gbc.setState(0x1080, 0xf1ab, 0xfa10, 0x5e54, 0x604f, 0xbe72, 0x0, 0x1);
        gbc.writeMem(0x1080, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0x1082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 000A
        gbc.setState(0xb04a, 0x29d2, 0xabf0, 0xa0ce, 0xa3d3, 0xbfaf, 0x0, 0x1);
        gbc.writeMem(0xb04a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x29d2, gbc.sp());
        EXPECT(0xb04c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb04a));
        EXPECT(0xb0, gbc.readMem(0xb04b));
        // CB B0 000B
        gbc.setState(0xdf88, 0xd4cf, 0x5b80, 0x9492, 0x9d28, 0x55e7, 0x1, 0x0);
        gbc.writeMem(0xdf88, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd4cf, gbc.sp());
        EXPECT(0xdf8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf88));
        EXPECT(0xb0, gbc.readMem(0xdf89));
        // CB B0 000C
        gbc.setState(0x1266, 0xcb30, 0xa710, 0x5f19, 0xda1e, 0x9dc, 0x1, 0x1);
        gbc.writeMem(0x1266, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0x1268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 000D
        gbc.setState(0x36f5, 0xf3ca, 0x40d0, 0x1d4, 0x1e3d, 0xdc16, 0x0, 0x0);
        gbc.writeMem(0x36f5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0x36f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 000E
        gbc.setState(0x95f6, 0x20f6, 0x7d90, 0xb568, 0xc4dd, 0x4fe7, 0x1, 0x0);
        gbc.writeMem(0x95f6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x20f6, gbc.sp());
        EXPECT(0x95f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f6));
        EXPECT(0xb0, gbc.readMem(0x95f7));
        // CB B0 000F
        gbc.setState(0x448a, 0xc9d, 0x9cc0, 0x643e, 0x8d67, 0x50df, 0x0, 0x1);
        gbc.writeMem(0x448a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xc9d, gbc.sp());
        EXPECT(0x448c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0010
        gbc.setState(0xa30c, 0x6f27, 0x5f70, 0x50b3, 0x7aa7, 0x2dd3, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0xa30e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa30c));
        EXPECT(0xb0, gbc.readMem(0xa30d));
        // CB B0 0011
        gbc.setState(0xdea9, 0xd598, 0xa520, 0xa52, 0x9e74, 0x7515, 0x0, 0x0);
        gbc.writeMem(0xdea9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd598, gbc.sp());
        EXPECT(0xdeab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdea9));
        EXPECT(0xb0, gbc.readMem(0xdeaa));
        // CB B0 0012
        gbc.setState(0x8801, 0xe6f3, 0xda40, 0xae9e, 0x3d5, 0x12cb, 0x1, 0x0);
        gbc.writeMem(0x8801, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe6f3, gbc.sp());
        EXPECT(0x8803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8801));
        EXPECT(0xb0, gbc.readMem(0x8802));
        // CB B0 0013
        gbc.setState(0xc47e, 0xb703, 0x3dd0, 0x6cce, 0x81ee, 0x8b, 0x0, 0x0);
        gbc.writeMem(0xc47e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb703, gbc.sp());
        EXPECT(0xc480, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47e));
        EXPECT(0xb0, gbc.readMem(0xc47f));
        // CB B0 0014
        gbc.setState(0xaf67, 0x1c29, 0x1590, 0x4803, 0x73b9, 0xe27b, 0x1, 0x1);
        gbc.writeMem(0xaf67, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x1c29, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf67));
        EXPECT(0xb0, gbc.readMem(0xaf68));
        // CB B0 0015
        gbc.setState(0x1c5c, 0xc478, 0xbba0, 0x5c81, 0x8598, 0xf52c, 0x1, 0x1);
        gbc.writeMem(0x1c5c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xc478, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0016
        gbc.setState(0x58d1, 0x6d82, 0x8f60, 0x1536, 0xcc10, 0x709c, 0x0, 0x1);
        gbc.writeMem(0x58d1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6d82, gbc.sp());
        EXPECT(0x58d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0017
        gbc.setState(0xb837, 0xea60, 0xd70, 0x8360, 0x727d, 0x5424, 0x1, 0x1);
        gbc.writeMem(0xb837, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xea60, gbc.sp());
        EXPECT(0xb839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb837));
        EXPECT(0xb0, gbc.readMem(0xb838));
        // CB B0 0018
        gbc.setState(0x9f, 0xb93e, 0x56c0, 0xe4dd, 0xb9f4, 0xadd3, 0x0, 0x1);
        gbc.writeMem(0x9f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb93e, gbc.sp());
        EXPECT(0xa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 001A
        gbc.setState(0x2639, 0x4169, 0xf4a0, 0xe359, 0x76ae, 0xfd4f, 0x1, 0x0);
        gbc.writeMem(0x2639, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4169, gbc.sp());
        EXPECT(0x263b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 001B
        gbc.setState(0xa648, 0x9577, 0x5a40, 0x398e, 0x853a, 0x297, 0x0, 0x1);
        gbc.writeMem(0xa648, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x9577, gbc.sp());
        EXPECT(0xa64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa648));
        EXPECT(0xb0, gbc.readMem(0xa649));
        // CB B0 001C
        gbc.setState(0xe31d, 0x4d03, 0x6100, 0x2336, 0x5039, 0x2e94, 0x1, 0x1);
        gbc.writeMem(0xe31d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4d03, gbc.sp());
        EXPECT(0xe31f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe31d));
        EXPECT(0xb0, gbc.readMem(0xe31e));
        // CB B0 001D
        gbc.setState(0x6169, 0x2661, 0x9950, 0x764d, 0x94a5, 0xf424, 0x0, 0x1);
        gbc.writeMem(0x6169, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x2661, gbc.sp());
        EXPECT(0x616b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 001E
        gbc.setState(0x6cfc, 0x3b0, 0x6af0, 0x377a, 0xfcb7, 0xb574, 0x1, 0x0);
        gbc.writeMem(0x6cfc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x6cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0020
        gbc.setState(0x16eb, 0xf1c8, 0xb400, 0x4f0a, 0xb349, 0xa7b, 0x0, 0x1);
        gbc.writeMem(0x16eb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf1c8, gbc.sp());
        EXPECT(0x16ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0021
        gbc.setState(0x1378, 0xe4c9, 0x7bb0, 0x559e, 0xe4ad, 0x4f5d, 0x0, 0x0);
        gbc.writeMem(0x1378, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe4c9, gbc.sp());
        EXPECT(0x137a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0022
        gbc.setState(0x8a46, 0xb243, 0xac40, 0xf8d7, 0xdc5a, 0x2b4b, 0x0, 0x1);
        gbc.writeMem(0x8a46, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb243, gbc.sp());
        EXPECT(0x8a48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a46));
        EXPECT(0xb0, gbc.readMem(0x8a47));
        // CB B0 0023
        gbc.setState(0x49f7, 0x78, 0x9180, 0x6575, 0x82db, 0x9bab, 0x0, 0x1);
        gbc.writeMem(0x49f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x78, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0025
        gbc.setState(0x6d06, 0x96ed, 0x2e00, 0xbd08, 0x237e, 0x1d8c, 0x0, 0x0);
        gbc.writeMem(0x6d06, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x96ed, gbc.sp());
        EXPECT(0x6d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0026
        gbc.setState(0x4800, 0x6c39, 0xe2f0, 0x2d90, 0xf105, 0x36d2, 0x0, 0x1);
        gbc.writeMem(0x4800, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x6c39, gbc.sp());
        EXPECT(0x4802, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0027
        gbc.setState(0x7511, 0x3aaf, 0xc80, 0x7ff7, 0x3cb3, 0x8689, 0x1, 0x1);
        gbc.writeMem(0x7511, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3aaf, gbc.sp());
        EXPECT(0x7513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0028
        gbc.setState(0xec6f, 0x9664, 0xc630, 0x5b2c, 0xed41, 0x8090, 0x0, 0x1);
        gbc.writeMem(0xec6f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9664, gbc.sp());
        EXPECT(0xec71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6f));
        EXPECT(0xb0, gbc.readMem(0xec70));
        // CB B0 0029
        gbc.setState(0xb26, 0xe792, 0x7b20, 0xfc52, 0x26da, 0x7f30, 0x0, 0x0);
        gbc.writeMem(0xb26, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe792, gbc.sp());
        EXPECT(0xb28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 002A
        gbc.setState(0x62b7, 0x126, 0x4b60, 0x9230, 0xeab6, 0xf70e, 0x1, 0x0);
        gbc.writeMem(0x62b7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x126, gbc.sp());
        EXPECT(0x62b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 002B
        gbc.setState(0x442d, 0x8282, 0xdd0, 0x13c7, 0xa1b0, 0xa946, 0x0, 0x0);
        gbc.writeMem(0x442d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8282, gbc.sp());
        EXPECT(0x442f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 002C
        gbc.setState(0x3c88, 0x1088, 0xe90, 0x1175, 0x2c4f, 0x2a9, 0x1, 0x1);
        gbc.writeMem(0x3c88, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1088, gbc.sp());
        EXPECT(0x3c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 002F
        gbc.setState(0x8bab, 0x4e88, 0x9f60, 0xc26e, 0x1d15, 0xa473, 0x0, 0x1);
        gbc.writeMem(0x8bab, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e88, gbc.sp());
        EXPECT(0x8bad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bab));
        EXPECT(0xb0, gbc.readMem(0x8bac));
        // CB B0 0030
        gbc.setState(0x24e, 0xd8b2, 0xbd00, 0xdb14, 0x72ea, 0xc20f, 0x0, 0x1);
        gbc.writeMem(0x24e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd8b2, gbc.sp());
        EXPECT(0x250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0031
        gbc.setState(0x2c72, 0x2d13, 0xb1a0, 0xd7d7, 0x56a1, 0x8fdd, 0x0, 0x0);
        gbc.writeMem(0x2c72, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2d13, gbc.sp());
        EXPECT(0x2c74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0032
        gbc.setState(0xc5e, 0x4bf5, 0xcd0, 0xe99d, 0xc684, 0xc62e, 0x0, 0x1);
        gbc.writeMem(0xc5e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4bf5, gbc.sp());
        EXPECT(0xc60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0033
        gbc.setState(0xed6d, 0xd4eb, 0x2890, 0xd810, 0x65ad, 0xa359, 0x1, 0x0);
        gbc.writeMem(0xed6d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd4eb, gbc.sp());
        EXPECT(0xed6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6d));
        EXPECT(0xb0, gbc.readMem(0xed6e));
        // CB B0 0034
        gbc.setState(0x1b49, 0x5773, 0xaa20, 0x8d3d, 0x449f, 0x1fd7, 0x1, 0x1);
        gbc.writeMem(0x1b49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5773, gbc.sp());
        EXPECT(0x1b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0035
        gbc.setState(0x6e9, 0x4bff, 0x11e0, 0x1dc4, 0xa66e, 0x8ff7, 0x1, 0x1);
        gbc.writeMem(0x6e9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x4bff, gbc.sp());
        EXPECT(0x6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0036
        gbc.setState(0x52ba, 0x94df, 0x1140, 0x2c7b, 0x670f, 0x5d2b, 0x0, 0x1);
        gbc.writeMem(0x52ba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x94df, gbc.sp());
        EXPECT(0x52bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0037
        gbc.setState(0xe0e0, 0xf204, 0x9540, 0xc7e1, 0xa8dd, 0xe48c, 0x0, 0x0);
        gbc.writeMem(0xe0e0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0xe0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0e0));
        EXPECT(0xb0, gbc.readMem(0xe0e1));
        // CB B0 0038
        gbc.setState(0x156b, 0xc9e7, 0xb8a0, 0x3ea8, 0x4a8a, 0xfca6, 0x1, 0x0);
        gbc.writeMem(0x156b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc9e7, gbc.sp());
        EXPECT(0x156d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0039
        gbc.setState(0x84c0, 0x943b, 0x7870, 0xaa66, 0x9458, 0x489e, 0x1, 0x0);
        gbc.writeMem(0x84c0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x943b, gbc.sp());
        EXPECT(0x84c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84c0));
        EXPECT(0xb0, gbc.readMem(0x84c1));
        // CB B0 003A
        gbc.setState(0x8943, 0xe620, 0x4f60, 0x6ec3, 0xc7a2, 0x9fc2, 0x1, 0x0);
        gbc.writeMem(0x8943, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe620, gbc.sp());
        EXPECT(0x8945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8943));
        EXPECT(0xb0, gbc.readMem(0x8944));
        // CB B0 003C
        gbc.setState(0x1e63, 0x46b7, 0x95c0, 0xfcbe, 0x934b, 0x36f3, 0x0, 0x0);
        gbc.writeMem(0x1e63, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x46b7, gbc.sp());
        EXPECT(0x1e65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 003D
        gbc.setState(0xb69a, 0x58bc, 0xeac0, 0x77e, 0x23, 0x72c5, 0x0, 0x0);
        gbc.writeMem(0xb69a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x58bc, gbc.sp());
        EXPECT(0xb69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb69a));
        EXPECT(0xb0, gbc.readMem(0xb69b));
        // CB B0 003E
        gbc.setState(0xc0af, 0xf0fe, 0x5b60, 0x66b0, 0x8aa6, 0x7735, 0x1, 0x1);
        gbc.writeMem(0xc0af, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf0fe, gbc.sp());
        EXPECT(0xc0b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0af));
        EXPECT(0xb0, gbc.readMem(0xc0b0));
        // CB B0 003F
        gbc.setState(0x67e8, 0x75ca, 0xada0, 0x38fc, 0x484, 0xde9d, 0x0, 0x1);
        gbc.writeMem(0x67e8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x75ca, gbc.sp());
        EXPECT(0x67ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0040
        gbc.setState(0xd761, 0xc1e5, 0xb6d0, 0x4202, 0x8c87, 0xf35, 0x0, 0x1);
        gbc.writeMem(0xd761, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd761));
        EXPECT(0xb0, gbc.readMem(0xd762));
        // CB B0 0041
        gbc.setState(0xa908, 0x3533, 0xbe10, 0xe651, 0x9916, 0x5b1, 0x0, 0x1);
        gbc.writeMem(0xa908, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3533, gbc.sp());
        EXPECT(0xa90a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa908));
        EXPECT(0xb0, gbc.readMem(0xa909));
        // CB B0 0042
        gbc.setState(0x48a1, 0xc047, 0x2570, 0x809a, 0xaf76, 0xb779, 0x0, 0x1);
        gbc.writeMem(0x48a1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0x48a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0043
        gbc.setState(0xa665, 0xa59e, 0x3170, 0x1450, 0xe1d0, 0xf64e, 0x0, 0x0);
        gbc.writeMem(0xa665, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa59e, gbc.sp());
        EXPECT(0xa667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa665));
        EXPECT(0xb0, gbc.readMem(0xa666));
        // CB B0 0044
        gbc.setState(0x93fd, 0x3215, 0x78d0, 0x7f25, 0xbf73, 0x603c, 0x0, 0x0);
        gbc.writeMem(0x93fd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3215, gbc.sp());
        EXPECT(0x93ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93fd));
        EXPECT(0xb0, gbc.readMem(0x93fe));
        // CB B0 0045
        gbc.setState(0x69ce, 0x2f7d, 0x1be0, 0x190a, 0xd7c6, 0x2967, 0x0, 0x1);
        gbc.writeMem(0x69ce, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2f7d, gbc.sp());
        EXPECT(0x69d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0046
        gbc.setState(0x5b92, 0xb318, 0xe040, 0x62c, 0x45f6, 0x94de, 0x1, 0x0);
        gbc.writeMem(0x5b92, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb318, gbc.sp());
        EXPECT(0x5b94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0047
        gbc.setState(0x3aec, 0x34fb, 0x4190, 0x5a3, 0xfee6, 0x26b9, 0x1, 0x1);
        gbc.writeMem(0x3aec, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x34fb, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0048
        gbc.setState(0xdfa2, 0x8565, 0x3120, 0x70fb, 0xb8d4, 0xf71c, 0x0, 0x1);
        gbc.writeMem(0xdfa2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8565, gbc.sp());
        EXPECT(0xdfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfa2));
        EXPECT(0xb0, gbc.readMem(0xdfa3));
        // CB B0 0049
        gbc.setState(0x7d35, 0x654e, 0x5bb0, 0xf3d4, 0x328, 0x8f2d, 0x1, 0x0);
        gbc.writeMem(0x7d35, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x654e, gbc.sp());
        EXPECT(0x7d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 004A
        gbc.setState(0x9fcc, 0xbf04, 0xf1d0, 0x33ec, 0x3ef, 0x334e, 0x1, 0x0);
        gbc.writeMem(0x9fcc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbf04, gbc.sp());
        EXPECT(0x9fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcc));
        EXPECT(0xb0, gbc.readMem(0x9fcd));
        // CB B0 004B
        gbc.setState(0x2d3d, 0xe82, 0xb0, 0x8a5a, 0x4196, 0xe01a, 0x0, 0x1);
        gbc.writeMem(0x2d3d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe82, gbc.sp());
        EXPECT(0x2d3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 004C
        gbc.setState(0x336f, 0x953c, 0x9be0, 0x8b91, 0x88d5, 0xc0d7, 0x0, 0x1);
        gbc.writeMem(0x336f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x953c, gbc.sp());
        EXPECT(0x3371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 004D
        gbc.setState(0x98f1, 0xdaa7, 0x88b0, 0x10ab, 0x9ed0, 0x33d5, 0x1, 0x0);
        gbc.writeMem(0x98f1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xdaa7, gbc.sp());
        EXPECT(0x98f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f1));
        EXPECT(0xb0, gbc.readMem(0x98f2));
        // CB B0 004E
        gbc.setState(0x6e2a, 0xd17a, 0xff10, 0x2db0, 0x9445, 0xa267, 0x1, 0x1);
        gbc.writeMem(0x6e2a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd17a, gbc.sp());
        EXPECT(0x6e2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 004F
        gbc.setState(0x9552, 0xaf43, 0xebc0, 0x19e5, 0x57ac, 0x5cc7, 0x0, 0x0);
        gbc.writeMem(0x9552, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaf43, gbc.sp());
        EXPECT(0x9554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9552));
        EXPECT(0xb0, gbc.readMem(0x9553));
        // CB B0 0050
        gbc.setState(0x388d, 0x2431, 0x1910, 0xcf7, 0xb02f, 0x7ee4, 0x1, 0x0);
        gbc.writeMem(0x388d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2431, gbc.sp());
        EXPECT(0x388f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0051
        gbc.setState(0xb527, 0xdd82, 0xb200, 0x685d, 0x8942, 0x1efb, 0x1, 0x1);
        gbc.writeMem(0xb527, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdd82, gbc.sp());
        EXPECT(0xb529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb527));
        EXPECT(0xb0, gbc.readMem(0xb528));
        // CB B0 0052
        gbc.setState(0xbead, 0x2088, 0x6c60, 0xa536, 0x844d, 0x655b, 0x0, 0x1);
        gbc.writeMem(0xbead, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x2088, gbc.sp());
        EXPECT(0xbeaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbead));
        EXPECT(0xb0, gbc.readMem(0xbeae));
        // CB B0 0053
        gbc.setState(0x3091, 0x7921, 0x3790, 0xc737, 0x9db7, 0x6ce0, 0x1, 0x1);
        gbc.writeMem(0x3091, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7921, gbc.sp());
        EXPECT(0x3093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0054
        gbc.setState(0x5ef2, 0x1b4c, 0xd950, 0x2209, 0x3fa4, 0x83a1, 0x0, 0x1);
        gbc.writeMem(0x5ef2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x1b4c, gbc.sp());
        EXPECT(0x5ef4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0055
        gbc.setState(0xd81d, 0x852a, 0x2e00, 0x8708, 0xb438, 0xbd18, 0x1, 0x1);
        gbc.writeMem(0xd81d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x852a, gbc.sp());
        EXPECT(0xd81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd81d));
        EXPECT(0xb0, gbc.readMem(0xd81e));
        // CB B0 0056
        gbc.setState(0x8b3e, 0xc94a, 0x240, 0xdddc, 0x9fca, 0xa0d9, 0x0, 0x0);
        gbc.writeMem(0x8b3e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc94a, gbc.sp());
        EXPECT(0x8b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b3e));
        EXPECT(0xb0, gbc.readMem(0x8b3f));
        // CB B0 0057
        gbc.setState(0x7c2, 0xfd92, 0x8610, 0xb362, 0x9520, 0x3b10, 0x1, 0x1);
        gbc.writeMem(0x7c2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0x7c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0058
        gbc.setState(0x1b5b, 0xc267, 0xb460, 0xbc2c, 0x6574, 0x8bbd, 0x1, 0x0);
        gbc.writeMem(0x1b5b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc267, gbc.sp());
        EXPECT(0x1b5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0059
        gbc.setState(0xc9f7, 0x39fc, 0x8b10, 0xa8d9, 0xbc74, 0x1a9f, 0x1, 0x1);
        gbc.writeMem(0xc9f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0xc9f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f7));
        EXPECT(0xb0, gbc.readMem(0xc9f8));
        // CB B0 005A
        gbc.setState(0x2c28, 0xa6ed, 0x7710, 0x1743, 0x38e, 0x91b7, 0x1, 0x1);
        gbc.writeMem(0x2c28, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa6ed, gbc.sp());
        EXPECT(0x2c2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 005B
        gbc.setState(0x2836, 0x5149, 0x3360, 0x297, 0xbbcf, 0xf35, 0x1, 0x0);
        gbc.writeMem(0x2836, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x5149, gbc.sp());
        EXPECT(0x2838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 005C
        gbc.setState(0x32e0, 0x3bdf, 0x5130, 0xd948, 0x6047, 0xb486, 0x1, 0x0);
        gbc.writeMem(0x32e0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3bdf, gbc.sp());
        EXPECT(0x32e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 005D
        gbc.setState(0xd347, 0x6984, 0x7f80, 0x2893, 0xd23, 0x1178, 0x0, 0x1);
        gbc.writeMem(0xd347, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6984, gbc.sp());
        EXPECT(0xd349, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd347));
        EXPECT(0xb0, gbc.readMem(0xd348));
        // CB B0 005E
        gbc.setState(0x5786, 0xd381, 0xaf60, 0xdf9d, 0x84f0, 0x19b8, 0x0, 0x1);
        gbc.writeMem(0x5786, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd381, gbc.sp());
        EXPECT(0x5788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 005F
        gbc.setState(0x35f7, 0xbbfd, 0xeee0, 0x4b92, 0x5970, 0xb345, 0x0, 0x1);
        gbc.writeMem(0x35f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xbbfd, gbc.sp());
        EXPECT(0x35f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0060
        gbc.setState(0x91ca, 0xd07a, 0xcec0, 0xdbb7, 0x2aac, 0x1eb3, 0x1, 0x0);
        gbc.writeMem(0x91ca, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd07a, gbc.sp());
        EXPECT(0x91cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91ca));
        EXPECT(0xb0, gbc.readMem(0x91cb));
        // CB B0 0061
        gbc.setState(0x8fb1, 0x56df, 0xf150, 0xc675, 0x53a9, 0xc29d, 0x0, 0x0);
        gbc.writeMem(0x8fb1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x56df, gbc.sp());
        EXPECT(0x8fb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb1));
        EXPECT(0xb0, gbc.readMem(0x8fb2));
        // CB B0 0062
        gbc.setState(0x5fba, 0x6ec7, 0x4410, 0x5404, 0x70b5, 0xf80, 0x1, 0x0);
        gbc.writeMem(0x5fba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x6ec7, gbc.sp());
        EXPECT(0x5fbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0063
        gbc.setState(0x776c, 0x3e4, 0xc3f0, 0xe62b, 0x8d2e, 0x3f75, 0x0, 0x1);
        gbc.writeMem(0x776c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3e4, gbc.sp());
        EXPECT(0x776e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0064
        gbc.setState(0xeeb9, 0xe10d, 0x1e00, 0x98a0, 0x9a38, 0xdbcf, 0x0, 0x0);
        gbc.writeMem(0xeeb9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe10d, gbc.sp());
        EXPECT(0xeebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeb9));
        EXPECT(0xb0, gbc.readMem(0xeeba));
        // CB B0 0066
        gbc.setState(0x8fd9, 0x565d, 0x5360, 0x7bd7, 0xb445, 0x64d6, 0x0, 0x1);
        gbc.writeMem(0x8fd9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x565d, gbc.sp());
        EXPECT(0x8fdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd9));
        EXPECT(0xb0, gbc.readMem(0x8fda));
        // CB B0 0067
        gbc.setState(0xa5d1, 0xf571, 0x7030, 0x5e4e, 0xc0e1, 0xab3, 0x1, 0x1);
        gbc.writeMem(0xa5d1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0xa5d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5d1));
        EXPECT(0xb0, gbc.readMem(0xa5d2));
        // CB B0 0068
        gbc.setState(0x7da0, 0xe314, 0x7af0, 0xa52c, 0x6c26, 0xf072, 0x0, 0x1);
        gbc.writeMem(0x7da0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe314, gbc.sp());
        EXPECT(0x7da2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0069
        gbc.setState(0x2743, 0x55b, 0x9c90, 0xb299, 0xc65f, 0x8dda, 0x1, 0x0);
        gbc.writeMem(0x2743, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0x2745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 006B
        gbc.setState(0x3875, 0x4937, 0x4010, 0x8425, 0x6542, 0x8ab3, 0x1, 0x0);
        gbc.writeMem(0x3875, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0x3877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 006C
        gbc.setState(0x947c, 0x6078, 0xe9b0, 0xc1cf, 0x4d44, 0xbfbb, 0x1, 0x1);
        gbc.writeMem(0x947c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6078, gbc.sp());
        EXPECT(0x947e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x947c));
        EXPECT(0xb0, gbc.readMem(0x947d));
        // CB B0 006E
        gbc.setState(0x3f14, 0xf871, 0x5540, 0x2077, 0x4b96, 0xbf38, 0x1, 0x1);
        gbc.writeMem(0x3f14, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf871, gbc.sp());
        EXPECT(0x3f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 006F
        gbc.setState(0xa794, 0x48cc, 0xd750, 0x431b, 0xcf15, 0x119b, 0x1, 0x1);
        gbc.writeMem(0xa794, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x48cc, gbc.sp());
        EXPECT(0xa796, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa794));
        EXPECT(0xb0, gbc.readMem(0xa795));
        // CB B0 0070
        gbc.setState(0x2f9d, 0x8f82, 0x5570, 0xe4f2, 0xdbf7, 0x9d18, 0x0, 0x0);
        gbc.writeMem(0x2f9d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8f82, gbc.sp());
        EXPECT(0x2f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0071
        gbc.setState(0xe08e, 0x872e, 0xfd0, 0x978e, 0x993f, 0x8727, 0x0, 0x0);
        gbc.writeMem(0xe08e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x872e, gbc.sp());
        EXPECT(0xe090, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe08e));
        EXPECT(0xb0, gbc.readMem(0xe08f));
        // CB B0 0072
        gbc.setState(0x2933, 0x2bcf, 0xe3d0, 0xc377, 0xda70, 0x6c5, 0x0, 0x0);
        gbc.writeMem(0x2933, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2bcf, gbc.sp());
        EXPECT(0x2935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0073
        gbc.setState(0x1766, 0xa9e7, 0x27d0, 0x634f, 0x3e6d, 0x2785, 0x1, 0x0);
        gbc.writeMem(0x1766, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa9e7, gbc.sp());
        EXPECT(0x1768, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0074
        gbc.setState(0x5356, 0xe4cd, 0x3c30, 0x9a58, 0xc421, 0x57d6, 0x0, 0x1);
        gbc.writeMem(0x5356, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe4cd, gbc.sp());
        EXPECT(0x5358, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0075
        gbc.setState(0x3857, 0x3248, 0x500, 0x9c95, 0xc8cb, 0xd390, 0x0, 0x0);
        gbc.writeMem(0x3857, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3248, gbc.sp());
        EXPECT(0x3859, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0076
        gbc.setState(0x5164, 0x7dca, 0x28e0, 0x8e30, 0x648d, 0x85b8, 0x1, 0x1);
        gbc.writeMem(0x5164, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0x5166, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0077
        gbc.setState(0xa9bd, 0x67c4, 0xc300, 0xa3d8, 0x8f85, 0xd346, 0x1, 0x0);
        gbc.writeMem(0xa9bd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x67c4, gbc.sp());
        EXPECT(0xa9bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9bd));
        EXPECT(0xb0, gbc.readMem(0xa9be));
        // CB B0 0078
        gbc.setState(0xa28f, 0xbfad, 0xe370, 0xe687, 0x8d6, 0x8d95, 0x0, 0x0);
        gbc.writeMem(0xa28f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbfad, gbc.sp());
        EXPECT(0xa291, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa28f));
        EXPECT(0xb0, gbc.readMem(0xa290));
        // CB B0 0079
        gbc.setState(0x6fcf, 0x4f74, 0xb540, 0x9ab9, 0xceb4, 0xb81, 0x1, 0x1);
        gbc.writeMem(0x6fcf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4f74, gbc.sp());
        EXPECT(0x6fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 007A
        gbc.setState(0x5565, 0xb8b1, 0x1300, 0x64f0, 0xe809, 0xc5bd, 0x0, 0x1);
        gbc.writeMem(0x5565, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0x5567, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 007B
        gbc.setState(0xdc28, 0x1782, 0xa920, 0x9d4, 0x8494, 0xa3b0, 0x0, 0x1);
        gbc.writeMem(0xdc28, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1782, gbc.sp());
        EXPECT(0xdc2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc28));
        EXPECT(0xb0, gbc.readMem(0xdc29));
        // CB B0 007C
        gbc.setState(0xbc58, 0x1131, 0xa0b0, 0x265e, 0x9c2b, 0x9535, 0x1, 0x0);
        gbc.writeMem(0xbc58, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1131, gbc.sp());
        EXPECT(0xbc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc58));
        EXPECT(0xb0, gbc.readMem(0xbc59));
        // CB B0 007D
        gbc.setState(0x3fd7, 0x8969, 0xbde0, 0xcb07, 0x354a, 0x9fb6, 0x1, 0x0);
        gbc.writeMem(0x3fd7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8969, gbc.sp());
        EXPECT(0x3fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 007E
        gbc.setState(0x3c33, 0xb384, 0x7ee0, 0x4a7e, 0x403d, 0x65c9, 0x0, 0x1);
        gbc.writeMem(0x3c33, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0x3c35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 007F
        gbc.setState(0x8da9, 0xe8b7, 0x58b0, 0x69a, 0xc9c3, 0xaa2e, 0x0, 0x0);
        gbc.writeMem(0x8da9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xe8b7, gbc.sp());
        EXPECT(0x8dab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da9));
        EXPECT(0xb0, gbc.readMem(0x8daa));
        // CB B0 0081
        gbc.setState(0x5c74, 0x58be, 0xef70, 0x3efc, 0x7418, 0xe0c2, 0x0, 0x0);
        gbc.writeMem(0x5c74, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x58be, gbc.sp());
        EXPECT(0x5c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0082
        gbc.setState(0x6471, 0xb687, 0x4110, 0x50ee, 0x54b8, 0x6b5d, 0x0, 0x0);
        gbc.writeMem(0x6471, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb687, gbc.sp());
        EXPECT(0x6473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0085
        gbc.setState(0xaded, 0x2c4d, 0x9900, 0x93a0, 0xbd14, 0x7c6a, 0x1, 0x1);
        gbc.writeMem(0xaded, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2c4d, gbc.sp());
        EXPECT(0xadef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaded));
        EXPECT(0xb0, gbc.readMem(0xadee));
        // CB B0 0086
        gbc.setState(0x76bf, 0xb7dd, 0x5a0, 0x7b1d, 0xd446, 0x96d8, 0x0, 0x0);
        gbc.writeMem(0x76bf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb7dd, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0087
        gbc.setState(0x8c8c, 0xa05a, 0x3640, 0x4ee0, 0xdee3, 0x8732, 0x0, 0x0);
        gbc.writeMem(0x8c8c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa05a, gbc.sp());
        EXPECT(0x8c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c8c));
        EXPECT(0xb0, gbc.readMem(0x8c8d));
        // CB B0 0088
        gbc.setState(0x7409, 0xfe74, 0x6570, 0xfe31, 0x382b, 0x8561, 0x0, 0x0);
        gbc.writeMem(0x7409, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfe74, gbc.sp());
        EXPECT(0x740b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0089
        gbc.setState(0x52a5, 0x67a3, 0x12d0, 0x808d, 0x15fa, 0xe9f8, 0x0, 0x0);
        gbc.writeMem(0x52a5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x67a3, gbc.sp());
        EXPECT(0x52a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 008A
        gbc.setState(0xc022, 0xa544, 0xa850, 0xa9a0, 0x8e89, 0xabd3, 0x0, 0x0);
        gbc.writeMem(0xc022, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xa544, gbc.sp());
        EXPECT(0xc024, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc022));
        EXPECT(0xb0, gbc.readMem(0xc023));
        // CB B0 008B
        gbc.setState(0x811f, 0x9d64, 0x1da0, 0xd430, 0xcac1, 0xeaf0, 0x0, 0x0);
        gbc.writeMem(0x811f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x9d64, gbc.sp());
        EXPECT(0x8121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x811f));
        EXPECT(0xb0, gbc.readMem(0x8120));
        // CB B0 008C
        gbc.setState(0x3bbe, 0xb35d, 0x39c0, 0xbe68, 0xe298, 0x1ed2, 0x0, 0x0);
        gbc.writeMem(0x3bbe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xb35d, gbc.sp());
        EXPECT(0x3bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 008D
        gbc.setState(0x8ced, 0xf1d2, 0xd350, 0xcdf0, 0x81ce, 0xab7b, 0x1, 0x0);
        gbc.writeMem(0x8ced, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf1d2, gbc.sp());
        EXPECT(0x8cef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ced));
        EXPECT(0xb0, gbc.readMem(0x8cee));
        // CB B0 008E
        gbc.setState(0x4341, 0xcc3, 0xfaf0, 0xa53f, 0xac20, 0x37a3, 0x0, 0x1);
        gbc.writeMem(0x4341, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcc3, gbc.sp());
        EXPECT(0x4343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 008F
        gbc.setState(0x60bc, 0xbea3, 0x1bd0, 0x4e4f, 0xee73, 0xe5d8, 0x1, 0x1);
        gbc.writeMem(0x60bc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0x60be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0090
        gbc.setState(0x6004, 0x3e7b, 0x8a80, 0x1372, 0x2e16, 0x1fdd, 0x1, 0x1);
        gbc.writeMem(0x6004, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3e7b, gbc.sp());
        EXPECT(0x6006, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0091
        gbc.setState(0x9696, 0xc056, 0xdab0, 0x2cb9, 0x9ef0, 0xc670, 0x1, 0x0);
        gbc.writeMem(0x9696, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc056, gbc.sp());
        EXPECT(0x9698, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9696));
        EXPECT(0xb0, gbc.readMem(0x9697));
        // CB B0 0092
        gbc.setState(0x94ea, 0xeed2, 0x6f90, 0xc2bc, 0xe960, 0xb401, 0x1, 0x1);
        gbc.writeMem(0x94ea, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0x94ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94ea));
        EXPECT(0xb0, gbc.readMem(0x94eb));
        // CB B0 0093
        gbc.setState(0xc15c, 0x32f5, 0x3000, 0xaa4f, 0x8423, 0x39d6, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x32f5, gbc.sp());
        EXPECT(0xc15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc15c));
        EXPECT(0xb0, gbc.readMem(0xc15d));
        // CB B0 0094
        gbc.setState(0xf76, 0x453f, 0x6d80, 0x100d, 0x9ef5, 0x485b, 0x1, 0x0);
        gbc.writeMem(0xf76, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x453f, gbc.sp());
        EXPECT(0xf78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0095
        gbc.setState(0x2fa7, 0xbfb5, 0xb580, 0xb267, 0x2d61, 0x8564, 0x1, 0x1);
        gbc.writeMem(0x2fa7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbfb5, gbc.sp());
        EXPECT(0x2fa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0096
        gbc.setState(0xac0c, 0x63c5, 0x5950, 0xa54f, 0x2ca, 0x9c3a, 0x0, 0x1);
        gbc.writeMem(0xac0c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x63c5, gbc.sp());
        EXPECT(0xac0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0c));
        EXPECT(0xb0, gbc.readMem(0xac0d));
        // CB B0 0097
        gbc.setState(0x492f, 0xa203, 0x30f0, 0x7af3, 0x21a5, 0xa7ff, 0x0, 0x0);
        gbc.writeMem(0x492f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa203, gbc.sp());
        EXPECT(0x4931, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0098
        gbc.setState(0x105c, 0xe54f, 0xbe80, 0x799e, 0x21ab, 0xd387, 0x1, 0x0);
        gbc.writeMem(0x105c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe54f, gbc.sp());
        EXPECT(0x105e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0099
        gbc.setState(0x4b2f, 0x8e62, 0x3a90, 0x200d, 0x63f4, 0x3514, 0x1, 0x0);
        gbc.writeMem(0x4b2f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x8e62, gbc.sp());
        EXPECT(0x4b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 009A
        gbc.setState(0x9070, 0x9477, 0xfd90, 0xdfb7, 0xe7c5, 0x9b56, 0x1, 0x1);
        gbc.writeMem(0x9070, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9477, gbc.sp());
        EXPECT(0x9072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9070));
        EXPECT(0xb0, gbc.readMem(0x9071));
        // CB B0 009B
        gbc.setState(0x4cf9, 0xd295, 0xcef0, 0xffb1, 0x15f4, 0x7b19, 0x0, 0x1);
        gbc.writeMem(0x4cf9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd295, gbc.sp());
        EXPECT(0x4cfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 009C
        gbc.setState(0x5e11, 0x95fd, 0xb360, 0x7a87, 0x6c20, 0xb14b, 0x1, 0x1);
        gbc.writeMem(0x5e11, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x95fd, gbc.sp());
        EXPECT(0x5e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 009D
        gbc.setState(0x5adf, 0x2cec, 0xc380, 0xf910, 0x60cd, 0x4a76, 0x0, 0x0);
        gbc.writeMem(0x5adf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x2cec, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 009E
        gbc.setState(0xcab9, 0xd9dd, 0x66b0, 0xf38a, 0xe852, 0xeae0, 0x0, 0x1);
        gbc.writeMem(0xcab9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd9dd, gbc.sp());
        EXPECT(0xcabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcab9));
        EXPECT(0xb0, gbc.readMem(0xcaba));
        // CB B0 009F
        gbc.setState(0xa270, 0x435f, 0xa20, 0x5c57, 0x5db3, 0xc8ec, 0x1, 0x0);
        gbc.writeMem(0xa270, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0xa272, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa270));
        EXPECT(0xb0, gbc.readMem(0xa271));
        // CB B0 00A0
        gbc.setState(0x2203, 0x125e, 0x9780, 0xb94, 0x6253, 0xd70e, 0x1, 0x1);
        gbc.writeMem(0x2203, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x125e, gbc.sp());
        EXPECT(0x2205, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00A1
        gbc.setState(0x4bf1, 0xf6c8, 0x2fb0, 0xec49, 0x84c, 0xbfea, 0x0, 0x1);
        gbc.writeMem(0x4bf1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf6c8, gbc.sp());
        EXPECT(0x4bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00A2
        gbc.setState(0x30ca, 0xd621, 0x46d0, 0x4ec7, 0x3aa9, 0xbc69, 0x0, 0x0);
        gbc.writeMem(0x30ca, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd621, gbc.sp());
        EXPECT(0x30cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00A3
        gbc.setState(0x35fe, 0xed46, 0x3120, 0xe79a, 0xba8c, 0x8b95, 0x1, 0x1);
        gbc.writeMem(0x35fe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00A4
        gbc.setState(0xe5ae, 0xd1e3, 0x52f0, 0xe5eb, 0xc883, 0xa02a, 0x1, 0x0);
        gbc.writeMem(0xe5ae, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xd1e3, gbc.sp());
        EXPECT(0xe5b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ae));
        EXPECT(0xb0, gbc.readMem(0xe5af));
        // CB B0 00A5
        gbc.setState(0xa914, 0x5f47, 0x8e40, 0x3a51, 0x85a, 0xcb7, 0x0, 0x0);
        gbc.writeMem(0xa914, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5f47, gbc.sp());
        EXPECT(0xa916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa914));
        EXPECT(0xb0, gbc.readMem(0xa915));
        // CB B0 00A6
        gbc.setState(0x3b41, 0x45e8, 0x16c0, 0x7375, 0x6203, 0x89f9, 0x0, 0x0);
        gbc.writeMem(0x3b41, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x45e8, gbc.sp());
        EXPECT(0x3b43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00A8
        gbc.setState(0xb49, 0x44f2, 0x8c20, 0x736f, 0xfa15, 0xc5c, 0x1, 0x1);
        gbc.writeMem(0xb49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x44f2, gbc.sp());
        EXPECT(0xb4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00A9
        gbc.setState(0x543d, 0xa63, 0xd2a0, 0xd974, 0xa9f0, 0x4a1b, 0x0, 0x0);
        gbc.writeMem(0x543d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xa63, gbc.sp());
        EXPECT(0x543f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00AA
        gbc.setState(0x6722, 0xc29c, 0x5970, 0x58f5, 0xce79, 0xb594, 0x0, 0x1);
        gbc.writeMem(0x6722, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc29c, gbc.sp());
        EXPECT(0x6724, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00AC
        gbc.setState(0xb7eb, 0x7eb8, 0x3d80, 0x2a10, 0xfbf3, 0x152d, 0x0, 0x0);
        gbc.writeMem(0xb7eb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7eb8, gbc.sp());
        EXPECT(0xb7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7eb));
        EXPECT(0xb0, gbc.readMem(0xb7ec));
        // CB B0 00AE
        gbc.setState(0xe223, 0x2b54, 0xb7c0, 0xde67, 0xebe3, 0xadc2, 0x1, 0x0);
        gbc.writeMem(0xe223, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x2b54, gbc.sp());
        EXPECT(0xe225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe223));
        EXPECT(0xb0, gbc.readMem(0xe224));
        // CB B0 00AF
        gbc.setState(0xc156, 0xf44b, 0xaee0, 0x17d7, 0x4dd8, 0xec9, 0x1, 0x1);
        gbc.writeMem(0xc156, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf44b, gbc.sp());
        EXPECT(0xc158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc156));
        EXPECT(0xb0, gbc.readMem(0xc157));
        // CB B0 00B0
        gbc.setState(0x3053, 0xd5e8, 0x82f0, 0x295b, 0xc931, 0x4843, 0x0, 0x0);
        gbc.writeMem(0x3053, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd5e8, gbc.sp());
        EXPECT(0x3055, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00B1
        gbc.setState(0x99f, 0x321b, 0x7130, 0xf70f, 0x8b92, 0xdb5e, 0x0, 0x0);
        gbc.writeMem(0x99f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x321b, gbc.sp());
        EXPECT(0x9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00B2
        gbc.setState(0x42d9, 0x3ca5, 0x8e30, 0x8335, 0x7c81, 0x5206, 0x1, 0x0);
        gbc.writeMem(0x42d9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x3ca5, gbc.sp());
        EXPECT(0x42db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00B3
        gbc.setState(0xdab0, 0xf8c7, 0x1e10, 0x93e9, 0x99c5, 0x3770, 0x0, 0x0);
        gbc.writeMem(0xdab0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf8c7, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdab0));
        EXPECT(0xb0, gbc.readMem(0xdab1));
        // CB B0 00B4
        gbc.setState(0xbdfa, 0x20ff, 0x77d0, 0xad6c, 0x8ba1, 0x1ad3, 0x0, 0x0);
        gbc.writeMem(0xbdfa, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x20ff, gbc.sp());
        EXPECT(0xbdfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdfa));
        EXPECT(0xb0, gbc.readMem(0xbdfb));
        // CB B0 00B5
        gbc.setState(0xe02d, 0xdfc1, 0x5580, 0x47e5, 0xcabd, 0x6d87, 0x0, 0x0);
        gbc.writeMem(0xe02d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xdfc1, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe02d));
        EXPECT(0xb0, gbc.readMem(0xe02e));
        // CB B0 00B6
        gbc.setState(0xdee8, 0x3761, 0x4ac0, 0x9cc7, 0xcc05, 0xbd8c, 0x0, 0x1);
        gbc.writeMem(0xdee8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0xb0, gbc.readMem(0xdee9));
        // CB B0 00B7
        gbc.setState(0x2023, 0x108d, 0x7140, 0x7840, 0x6770, 0x431a, 0x0, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x108d, gbc.sp());
        EXPECT(0x2025, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00B8
        gbc.setState(0xe534, 0x882b, 0x1f90, 0xed37, 0xa0ed, 0x6631, 0x1, 0x0);
        gbc.writeMem(0xe534, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x882b, gbc.sp());
        EXPECT(0xe536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe534));
        EXPECT(0xb0, gbc.readMem(0xe535));
        // CB B0 00B9
        gbc.setState(0xb4ed, 0x78d7, 0x8e50, 0xc0f0, 0xf648, 0xd166, 0x1, 0x0);
        gbc.writeMem(0xb4ed, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x78d7, gbc.sp());
        EXPECT(0xb4ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ed));
        EXPECT(0xb0, gbc.readMem(0xb4ee));
        // CB B0 00BA
        gbc.setState(0xa5b4, 0xfc7c, 0x3350, 0x9fd4, 0x6b89, 0x1295, 0x1, 0x1);
        gbc.writeMem(0xa5b4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfc7c, gbc.sp());
        EXPECT(0xa5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b4));
        EXPECT(0xb0, gbc.readMem(0xa5b5));
        // CB B0 00BB
        gbc.setState(0xd7c9, 0x2389, 0x8000, 0xe947, 0xf8ab, 0x365c, 0x1, 0x1);
        gbc.writeMem(0xd7c9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2389, gbc.sp());
        EXPECT(0xd7cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c9));
        EXPECT(0xb0, gbc.readMem(0xd7ca));
        // CB B0 00BC
        gbc.setState(0xea49, 0xf9bd, 0x24e0, 0x65a1, 0xf11d, 0xac4c, 0x0, 0x0);
        gbc.writeMem(0xea49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0xea4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea49));
        EXPECT(0xb0, gbc.readMem(0xea4a));
        // CB B0 00BE
        gbc.setState(0xba9b, 0x61e3, 0x3b10, 0xb235, 0x7f77, 0x8b27, 0x0, 0x0);
        gbc.writeMem(0xba9b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x61e3, gbc.sp());
        EXPECT(0xba9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba9b));
        EXPECT(0xb0, gbc.readMem(0xba9c));
        // CB B0 00BF
        gbc.setState(0x91b6, 0xc0a0, 0x960, 0x874b, 0x86cf, 0xc990, 0x1, 0x0);
        gbc.writeMem(0x91b6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc0a0, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91b6));
        EXPECT(0xb0, gbc.readMem(0x91b7));
        // CB B0 00C0
        gbc.setState(0x5719, 0x67de, 0x1720, 0x82d3, 0x2c30, 0x7286, 0x0, 0x1);
        gbc.writeMem(0x5719, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x67de, gbc.sp());
        EXPECT(0x571b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00C1
        gbc.setState(0x2ddf, 0xfc44, 0x86d0, 0xfce0, 0xc171, 0x5d95, 0x1, 0x1);
        gbc.writeMem(0x2ddf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xfc44, gbc.sp());
        EXPECT(0x2de1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00C2
        gbc.setState(0x97f7, 0xc7d3, 0xcd60, 0x44b6, 0x56fd, 0xddd7, 0x0, 0x1);
        gbc.writeMem(0x97f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc7d3, gbc.sp());
        EXPECT(0x97f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f7));
        EXPECT(0xb0, gbc.readMem(0x97f8));
        // CB B0 00C3
        gbc.setState(0xb38a, 0x2339, 0x31f0, 0x8d44, 0xd3f9, 0x4817, 0x1, 0x1);
        gbc.writeMem(0xb38a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2339, gbc.sp());
        EXPECT(0xb38c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb38a));
        EXPECT(0xb0, gbc.readMem(0xb38b));
        // CB B0 00C4
        gbc.setState(0xaa44, 0xfa96, 0x5a30, 0xdae, 0x5986, 0x24b5, 0x0, 0x1);
        gbc.writeMem(0xaa44, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xfa96, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa44));
        EXPECT(0xb0, gbc.readMem(0xaa45));
        // CB B0 00C5
        gbc.setState(0x650b, 0xd0bb, 0xae60, 0x1f55, 0x6031, 0xd3a0, 0x0, 0x0);
        gbc.writeMem(0x650b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd0bb, gbc.sp());
        EXPECT(0x650d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00C6
        gbc.setState(0x4ed9, 0x3200, 0xe680, 0xd651, 0x39df, 0xa3f7, 0x0, 0x1);
        gbc.writeMem(0x4ed9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x4edb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00C7
        gbc.setState(0xce45, 0x268a, 0x2bb0, 0xeaa8, 0xad75, 0x54f1, 0x0, 0x1);
        gbc.writeMem(0xce45, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x268a, gbc.sp());
        EXPECT(0xce47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce45));
        EXPECT(0xb0, gbc.readMem(0xce46));
        // CB B0 00C8
        gbc.setState(0x50fb, 0xee25, 0x5680, 0x782d, 0xee74, 0x55d2, 0x1, 0x1);
        gbc.writeMem(0x50fb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0x50fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00C9
        gbc.setState(0x596e, 0xbdeb, 0x5450, 0x6637, 0xeab6, 0xa8cb, 0x1, 0x0);
        gbc.writeMem(0x596e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xbdeb, gbc.sp());
        EXPECT(0x5970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00CA
        gbc.setState(0x7532, 0x6080, 0xd3e0, 0x8a7d, 0xc838, 0x406e, 0x0, 0x0);
        gbc.writeMem(0x7532, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6080, gbc.sp());
        EXPECT(0x7534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00CB
        gbc.setState(0xaf22, 0xfaf, 0x4650, 0x941, 0xf9ec, 0x694c, 0x0, 0x1);
        gbc.writeMem(0xaf22, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfaf, gbc.sp());
        EXPECT(0xaf24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf22));
        EXPECT(0xb0, gbc.readMem(0xaf23));
        // CB B0 00CC
        gbc.setState(0x2266, 0x7383, 0x8160, 0xee5, 0x48f9, 0x36e6, 0x1, 0x1);
        gbc.writeMem(0x2266, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7383, gbc.sp());
        EXPECT(0x2268, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00CD
        gbc.setState(0x1398, 0x69f7, 0xdcd0, 0x6ecc, 0x27d6, 0x39e2, 0x1, 0x1);
        gbc.writeMem(0x1398, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x69f7, gbc.sp());
        EXPECT(0x139a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00CE
        gbc.setState(0x7fdd, 0xa553, 0x80, 0x222b, 0x394d, 0xe798, 0x0, 0x0);
        gbc.writeMem(0x7fdd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa553, gbc.sp());
        EXPECT(0x7fdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00CF
        gbc.setState(0x11f2, 0x139c, 0x1a00, 0xa490, 0x40cd, 0x64aa, 0x0, 0x1);
        gbc.writeMem(0x11f2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x139c, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00D0
        gbc.setState(0x1dcc, 0xeeb8, 0xcb00, 0xf5fa, 0xf055, 0xfd44, 0x0, 0x0);
        gbc.writeMem(0x1dcc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xeeb8, gbc.sp());
        EXPECT(0x1dce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00D1
        gbc.setState(0x83a0, 0xd2e5, 0x44f0, 0x299, 0x9b38, 0xf4c3, 0x0, 0x1);
        gbc.writeMem(0x83a0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd2e5, gbc.sp());
        EXPECT(0x83a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83a0));
        EXPECT(0xb0, gbc.readMem(0x83a1));
        // CB B0 00D2
        gbc.setState(0x502c, 0x8065, 0xb560, 0xd3a4, 0x8154, 0xe255, 0x0, 0x1);
        gbc.writeMem(0x502c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x8065, gbc.sp());
        EXPECT(0x502e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00D3
        gbc.setState(0xa255, 0xaaa1, 0x71b0, 0x7f0a, 0x375e, 0xeb35, 0x1, 0x1);
        gbc.writeMem(0xa255, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaaa1, gbc.sp());
        EXPECT(0xa257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa255));
        EXPECT(0xb0, gbc.readMem(0xa256));
        // CB B0 00D4
        gbc.setState(0x1014, 0x94ee, 0x40a0, 0x863b, 0xd398, 0x7102, 0x0, 0x0);
        gbc.writeMem(0x1014, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x94ee, gbc.sp());
        EXPECT(0x1016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00D5
        gbc.setState(0x110b, 0x5ad, 0xc280, 0xe57, 0xae84, 0xb9e9, 0x1, 0x0);
        gbc.writeMem(0x110b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x5ad, gbc.sp());
        EXPECT(0x110d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00D6
        gbc.setState(0x79d2, 0xca3a, 0x72b0, 0xb44b, 0xc2bb, 0x1b1b, 0x1, 0x0);
        gbc.writeMem(0x79d2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0x79d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00D7
        gbc.setState(0xdfb2, 0xd779, 0x24f0, 0x3553, 0x659c, 0xd348, 0x1, 0x1);
        gbc.writeMem(0xdfb2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd779, gbc.sp());
        EXPECT(0xdfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb2));
        EXPECT(0xb0, gbc.readMem(0xdfb3));
        // CB B0 00D8
        gbc.setState(0xc362, 0xb990, 0xc2d0, 0x4b2e, 0x577e, 0x7c6f, 0x1, 0x0);
        gbc.writeMem(0xc362, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xb990, gbc.sp());
        EXPECT(0xc364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc362));
        EXPECT(0xb0, gbc.readMem(0xc363));
        // CB B0 00DA
        gbc.setState(0xcfab, 0x614, 0xddd0, 0xf663, 0x5c62, 0xedaa, 0x0, 0x1);
        gbc.writeMem(0xcfab, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x614, gbc.sp());
        EXPECT(0xcfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfab));
        EXPECT(0xb0, gbc.readMem(0xcfac));
        // CB B0 00DB
        gbc.setState(0x5af9, 0xb439, 0x1ac0, 0xded2, 0xfadf, 0xd855, 0x1, 0x1);
        gbc.writeMem(0x5af9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb439, gbc.sp());
        EXPECT(0x5afb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00DC
        gbc.setState(0x295a, 0x6bdd, 0xbe20, 0xd4f7, 0xcb10, 0x2e6b, 0x0, 0x1);
        gbc.writeMem(0x295a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x6bdd, gbc.sp());
        EXPECT(0x295c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00DD
        gbc.setState(0x9b07, 0x2681, 0x4110, 0x7d7d, 0x1d1d, 0xc608, 0x0, 0x0);
        gbc.writeMem(0x9b07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x9b09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b07));
        EXPECT(0xb0, gbc.readMem(0x9b08));
        // CB B0 00DE
        gbc.setState(0xd90c, 0xac1a, 0xf250, 0x6732, 0x5ed3, 0x9c3f, 0x1, 0x0);
        gbc.writeMem(0xd90c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xac1a, gbc.sp());
        EXPECT(0xd90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90c));
        EXPECT(0xb0, gbc.readMem(0xd90d));
        // CB B0 00DF
        gbc.setState(0x9e5a, 0xc820, 0x10a0, 0xca69, 0x713f, 0x3196, 0x0, 0x1);
        gbc.writeMem(0x9e5a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc820, gbc.sp());
        EXPECT(0x9e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e5a));
        EXPECT(0xb0, gbc.readMem(0x9e5b));
        // CB B0 00E0
        gbc.setState(0x8dae, 0x1bd9, 0xdf20, 0x31c3, 0x5ab7, 0xaddb, 0x1, 0x0);
        gbc.writeMem(0x8dae, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1bd9, gbc.sp());
        EXPECT(0x8db0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dae));
        EXPECT(0xb0, gbc.readMem(0x8daf));
        // CB B0 00E1
        gbc.setState(0xdc22, 0x64ee, 0x8e10, 0x3a52, 0x1bee, 0x949b, 0x1, 0x1);
        gbc.writeMem(0xdc22, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x64ee, gbc.sp());
        EXPECT(0xdc24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc22));
        EXPECT(0xb0, gbc.readMem(0xdc23));
        // CB B0 00E2
        gbc.setState(0xa6b0, 0x7516, 0xabf0, 0x54f9, 0x9db1, 0x479a, 0x0, 0x0);
        gbc.writeMem(0xa6b0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x7516, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b0));
        EXPECT(0xb0, gbc.readMem(0xa6b1));
        // CB B0 00E3
        gbc.setState(0x9418, 0xe3cc, 0xe080, 0x53dc, 0x7fe8, 0xf9e6, 0x1, 0x0);
        gbc.writeMem(0x9418, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9418));
        EXPECT(0xb0, gbc.readMem(0x9419));
        // CB B0 00E4
        gbc.setState(0x6d00, 0x1118, 0x8700, 0xbf19, 0xaf97, 0xe1ac, 0x0, 0x0);
        gbc.writeMem(0x6d00, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1118, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00E6
        gbc.setState(0x14bd, 0xe904, 0x3da0, 0xd702, 0xd199, 0x9333, 0x1, 0x1);
        gbc.writeMem(0x14bd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe904, gbc.sp());
        EXPECT(0x14bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00E7
        gbc.setState(0xa50c, 0xc26d, 0x4e80, 0x86ad, 0xcc4e, 0x1d95, 0x0, 0x0);
        gbc.writeMem(0xa50c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xc26d, gbc.sp());
        EXPECT(0xa50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa50c));
        EXPECT(0xb0, gbc.readMem(0xa50d));
        // CB B0 00E8
        gbc.setState(0x628e, 0x7a9e, 0x7930, 0x2382, 0xc87c, 0x31ad, 0x1, 0x0);
        gbc.writeMem(0x628e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x7a9e, gbc.sp());
        EXPECT(0x6290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00E9
        gbc.setState(0xa4b4, 0x2239, 0xb6d0, 0x894f, 0xf0ee, 0xa50b, 0x1, 0x0);
        gbc.writeMem(0xa4b4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2239, gbc.sp());
        EXPECT(0xa4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b4));
        EXPECT(0xb0, gbc.readMem(0xa4b5));
        // CB B0 00EA
        gbc.setState(0x39ec, 0x6875, 0xf900, 0x2e02, 0x684a, 0x7c26, 0x0, 0x1);
        gbc.writeMem(0x39ec, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6875, gbc.sp());
        EXPECT(0x39ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00EB
        gbc.setState(0xb6bc, 0x87d2, 0xc890, 0x2547, 0xbbb1, 0x894d, 0x1, 0x1);
        gbc.writeMem(0xb6bc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x87d2, gbc.sp());
        EXPECT(0xb6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6bc));
        EXPECT(0xb0, gbc.readMem(0xb6bd));
        // CB B0 00EC
        gbc.setState(0xdd0, 0xdf0a, 0xae40, 0x26b2, 0xa4be, 0x917e, 0x0, 0x0);
        gbc.writeMem(0xdd0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0xdd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00ED
        gbc.setState(0x4eb8, 0x4cf6, 0x3da0, 0x6c6f, 0xe7fd, 0x3218, 0x1, 0x0);
        gbc.writeMem(0x4eb8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x4cf6, gbc.sp());
        EXPECT(0x4eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00EE
        gbc.setState(0x9eb7, 0x8254, 0x3ec0, 0xf16a, 0x95ce, 0xea77, 0x1, 0x1);
        gbc.writeMem(0x9eb7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8254, gbc.sp());
        EXPECT(0x9eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb7));
        EXPECT(0xb0, gbc.readMem(0x9eb8));
        // CB B0 00EF
        gbc.setState(0x7cfc, 0x6601, 0xfcc0, 0xb0ab, 0xe580, 0x3deb, 0x1, 0x1);
        gbc.writeMem(0x7cfc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6601, gbc.sp());
        EXPECT(0x7cfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00F0
        gbc.setState(0xafb5, 0x7952, 0x50d0, 0x2cfe, 0x3e91, 0xd3e5, 0x1, 0x0);
        gbc.writeMem(0xafb5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x7952, gbc.sp());
        EXPECT(0xafb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafb5));
        EXPECT(0xb0, gbc.readMem(0xafb6));
        // CB B0 00F1
        gbc.setState(0xc243, 0xf2ea, 0x3890, 0x41c1, 0x5112, 0xbd63, 0x0, 0x0);
        gbc.writeMem(0xc243, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf2ea, gbc.sp());
        EXPECT(0xc245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc243));
        EXPECT(0xb0, gbc.readMem(0xc244));
        // CB B0 00F2
        gbc.setState(0x6225, 0x8746, 0x77d0, 0x74e3, 0x921e, 0xe3be, 0x1, 0x1);
        gbc.writeMem(0x6225, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8746, gbc.sp());
        EXPECT(0x6227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00F3
        gbc.setState(0x49c1, 0x4611, 0xa2d0, 0xe9f, 0xba97, 0xe8ac, 0x0, 0x0);
        gbc.writeMem(0x49c1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4611, gbc.sp());
        EXPECT(0x49c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00F4
        gbc.setState(0x1534, 0x7e17, 0x9dc0, 0x1d9a, 0x673f, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7e17, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00F5
        gbc.setState(0xb58b, 0x6d8a, 0x2d70, 0xd9d2, 0x968f, 0x335d, 0x0, 0x1);
        gbc.writeMem(0xb58b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6d8a, gbc.sp());
        EXPECT(0xb58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58b));
        EXPECT(0xb0, gbc.readMem(0xb58c));
        // CB B0 00F6
        gbc.setState(0x2621, 0x6b41, 0x2410, 0x7b5c, 0x28ae, 0xea20, 0x1, 0x0);
        gbc.writeMem(0x2621, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6b41, gbc.sp());
        EXPECT(0x2623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00F7
        gbc.setState(0x1028, 0x64a5, 0xdc0, 0x6efe, 0x4f9f, 0xc7bd, 0x1, 0x0);
        gbc.writeMem(0x1028, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x64a5, gbc.sp());
        EXPECT(0x102a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00F8
        gbc.setState(0xa4e0, 0x7da6, 0xf2a0, 0xd050, 0xdc29, 0xbee4, 0x0, 0x1);
        gbc.writeMem(0xa4e0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7da6, gbc.sp());
        EXPECT(0xa4e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4e0));
        EXPECT(0xb0, gbc.readMem(0xa4e1));
        // CB B0 00F9
        gbc.setState(0xe479, 0x1867, 0x4430, 0x1355, 0x4b6c, 0x6230, 0x1, 0x1);
        gbc.writeMem(0xe479, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x1867, gbc.sp());
        EXPECT(0xe47b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe479));
        EXPECT(0xb0, gbc.readMem(0xe47a));
        // CB B0 00FA
        gbc.setState(0x701b, 0x7d5f, 0xea60, 0xeed2, 0xc696, 0x83bb, 0x0, 0x1);
        gbc.writeMem(0x701b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7d5f, gbc.sp());
        EXPECT(0x701d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00FB
        gbc.setState(0x674c, 0xfb70, 0x5be0, 0x536f, 0x4838, 0xbb81, 0x0, 0x1);
        gbc.writeMem(0x674c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfb70, gbc.sp());
        EXPECT(0x674e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00FC
        gbc.setState(0x294a, 0x36cb, 0x430, 0x95d8, 0xced5, 0x34ef, 0x1, 0x0);
        gbc.writeMem(0x294a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x36cb, gbc.sp());
        EXPECT(0x294c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 00FD
        gbc.setState(0xc0ee, 0xea3, 0x9c50, 0x9d5f, 0xb3b0, 0x1052, 0x0, 0x1);
        gbc.writeMem(0xc0ee, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xea3, gbc.sp());
        EXPECT(0xc0f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ee));
        EXPECT(0xb0, gbc.readMem(0xc0ef));
        // CB B0 00FE
        gbc.setState(0x4865, 0x4232, 0xd300, 0x131, 0x62f5, 0x83c3, 0x1, 0x1);
        gbc.writeMem(0x4865, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4232, gbc.sp());
        EXPECT(0x4867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 00FF
        gbc.setState(0x4755, 0xcffc, 0xca70, 0x9729, 0x488b, 0xa044, 0x0, 0x0);
        gbc.writeMem(0x4755, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcffc, gbc.sp());
        EXPECT(0x4757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0100
        gbc.setState(0x8468, 0x802f, 0xb7a0, 0x3697, 0x5a16, 0x7f44, 0x1, 0x0);
        gbc.writeMem(0x8468, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x802f, gbc.sp());
        EXPECT(0x846a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8468));
        EXPECT(0xb0, gbc.readMem(0x8469));
        // CB B0 0101
        gbc.setState(0xb093, 0x4e1d, 0x8630, 0x9495, 0x3188, 0x6109, 0x1, 0x1);
        gbc.writeMem(0xb093, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4e1d, gbc.sp());
        EXPECT(0xb095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb093));
        EXPECT(0xb0, gbc.readMem(0xb094));
        // CB B0 0102
        gbc.setState(0x5934, 0x8843, 0xc630, 0x2607, 0xcea4, 0xf15f, 0x1, 0x1);
        gbc.writeMem(0x5934, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8843, gbc.sp());
        EXPECT(0x5936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0103
        gbc.setState(0x1dfa, 0x71b7, 0x33e0, 0xadc0, 0xf68c, 0xe3c5, 0x0, 0x0);
        gbc.writeMem(0x1dfa, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x71b7, gbc.sp());
        EXPECT(0x1dfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0104
        gbc.setState(0xbcab, 0x3b51, 0xd030, 0x1dcf, 0x97b2, 0x1e3, 0x0, 0x0);
        gbc.writeMem(0xbcab, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3b51, gbc.sp());
        EXPECT(0xbcad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcab));
        EXPECT(0xb0, gbc.readMem(0xbcac));
        // CB B0 0105
        gbc.setState(0x70b9, 0x46da, 0x4df0, 0x1f49, 0x4caf, 0xde4a, 0x0, 0x0);
        gbc.writeMem(0x70b9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x46da, gbc.sp());
        EXPECT(0x70bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0106
        gbc.setState(0x9203, 0x4989, 0xd2c0, 0x6e85, 0x40ca, 0x462c, 0x0, 0x1);
        gbc.writeMem(0x9203, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x4989, gbc.sp());
        EXPECT(0x9205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9203));
        EXPECT(0xb0, gbc.readMem(0x9204));
        // CB B0 0107
        gbc.setState(0x690a, 0x4f09, 0x1ce0, 0x23a9, 0xcc4, 0xac, 0x1, 0x0);
        gbc.writeMem(0x690a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4f09, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0108
        gbc.setState(0xb82f, 0x79dd, 0x3a0, 0xd552, 0x7a4a, 0x249b, 0x1, 0x0);
        gbc.writeMem(0xb82f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x79dd, gbc.sp());
        EXPECT(0xb831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82f));
        EXPECT(0xb0, gbc.readMem(0xb830));
        // CB B0 0109
        gbc.setState(0x562a, 0xf516, 0xd90, 0x5509, 0xa19b, 0xc360, 0x1, 0x0);
        gbc.writeMem(0x562a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xf516, gbc.sp());
        EXPECT(0x562c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 010A
        gbc.setState(0x1b49, 0x9a5c, 0x5d0, 0x4331, 0x8fc0, 0xc653, 0x0, 0x1);
        gbc.writeMem(0x1b49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9a5c, gbc.sp());
        EXPECT(0x1b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 010B
        gbc.setState(0xcb61, 0x990f, 0xb810, 0x3965, 0x4340, 0xc0e, 0x1, 0x1);
        gbc.writeMem(0xcb61, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x990f, gbc.sp());
        EXPECT(0xcb63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb61));
        EXPECT(0xb0, gbc.readMem(0xcb62));
        // CB B0 010C
        gbc.setState(0x3f59, 0x9267, 0xbbd0, 0x3a, 0xb97c, 0x21ea, 0x1, 0x1);
        gbc.writeMem(0x3f59, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x9267, gbc.sp());
        EXPECT(0x3f5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 010D
        gbc.setState(0xc033, 0x2b22, 0x2ab0, 0xeaed, 0x5ee7, 0x6b33, 0x0, 0x0);
        gbc.writeMem(0xc033, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2b22, gbc.sp());
        EXPECT(0xc035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc033));
        EXPECT(0xb0, gbc.readMem(0xc034));
        // CB B0 010E
        gbc.setState(0xde85, 0xeed6, 0x91f0, 0xad63, 0x9a01, 0xb45f, 0x1, 0x0);
        gbc.writeMem(0xde85, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xeed6, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde85));
        EXPECT(0xb0, gbc.readMem(0xde86));
        // CB B0 010F
        gbc.setState(0xae76, 0x240f, 0x3ac0, 0x1fa9, 0x8571, 0x41ec, 0x1, 0x1);
        gbc.writeMem(0xae76, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x240f, gbc.sp());
        EXPECT(0xae78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae76));
        EXPECT(0xb0, gbc.readMem(0xae77));
        // CB B0 0110
        gbc.setState(0x3c4b, 0x7f81, 0x3c0, 0xd5a8, 0x4f13, 0x9835, 0x0, 0x0);
        gbc.writeMem(0x3c4b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7f81, gbc.sp());
        EXPECT(0x3c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0111
        gbc.setState(0xac5b, 0x3b22, 0xdbc0, 0xc9b8, 0x9841, 0x493d, 0x1, 0x1);
        gbc.writeMem(0xac5b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x3b22, gbc.sp());
        EXPECT(0xac5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac5b));
        EXPECT(0xb0, gbc.readMem(0xac5c));
        // CB B0 0112
        gbc.setState(0x27aa, 0x3200, 0x5ae0, 0xf826, 0x1eca, 0xedb2, 0x0, 0x1);
        gbc.writeMem(0x27aa, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3200, gbc.sp());
        EXPECT(0x27ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0113
        gbc.setState(0x2563, 0x9be0, 0x5350, 0xe2a1, 0x9900, 0x5f83, 0x0, 0x0);
        gbc.writeMem(0x2563, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x9be0, gbc.sp());
        EXPECT(0x2565, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0114
        gbc.setState(0xe110, 0x7b6, 0x9050, 0x933c, 0x950e, 0x7bb0, 0x1, 0x0);
        gbc.writeMem(0xe110, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7b6, gbc.sp());
        EXPECT(0xe112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe110));
        EXPECT(0xb0, gbc.readMem(0xe111));
        // CB B0 0115
        gbc.setState(0x8412, 0x38f, 0x8450, 0xacac, 0x4d69, 0xf19a, 0x0, 0x1);
        gbc.writeMem(0x8412, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x38f, gbc.sp());
        EXPECT(0x8414, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8412));
        EXPECT(0xb0, gbc.readMem(0x8413));
        // CB B0 0116
        gbc.setState(0xb1e5, 0x5866, 0x5290, 0xaecb, 0x4c6c, 0xdde7, 0x1, 0x1);
        gbc.writeMem(0xb1e5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5866, gbc.sp());
        EXPECT(0xb1e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e5));
        EXPECT(0xb0, gbc.readMem(0xb1e6));
        // CB B0 0117
        gbc.setState(0xc2c1, 0xfc5, 0xaab0, 0x7030, 0x4b3c, 0xd00d, 0x1, 0x1);
        gbc.writeMem(0xc2c1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfc5, gbc.sp());
        EXPECT(0xc2c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c1));
        EXPECT(0xb0, gbc.readMem(0xc2c2));
        // CB B0 0118
        gbc.setState(0x1660, 0x9d62, 0x4ec0, 0xb255, 0xc7c8, 0xffcf, 0x0, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9d62, gbc.sp());
        EXPECT(0x1662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0119
        gbc.setState(0xc455, 0x5be6, 0x8a30, 0xe773, 0x5bc3, 0xff71, 0x0, 0x0);
        gbc.writeMem(0xc455, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5be6, gbc.sp());
        EXPECT(0xc457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc455));
        EXPECT(0xb0, gbc.readMem(0xc456));
        // CB B0 011A
        gbc.setState(0xb82b, 0x2913, 0x6690, 0xa026, 0xb220, 0xf7cf, 0x0, 0x1);
        gbc.writeMem(0xb82b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2913, gbc.sp());
        EXPECT(0xb82d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb82b));
        EXPECT(0xb0, gbc.readMem(0xb82c));
        // CB B0 011B
        gbc.setState(0x1b44, 0xc3a8, 0x33f0, 0xcf83, 0xe79a, 0xd9ab, 0x1, 0x0);
        gbc.writeMem(0x1b44, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xc3a8, gbc.sp());
        EXPECT(0x1b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 011C
        gbc.setState(0x4ed6, 0x6f65, 0x2230, 0x27a5, 0xc175, 0x482d, 0x0, 0x1);
        gbc.writeMem(0x4ed6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0x4ed8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 011D
        gbc.setState(0xbecc, 0xb0fe, 0xa240, 0xb95f, 0x85db, 0xa040, 0x1, 0x1);
        gbc.writeMem(0xbecc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb0fe, gbc.sp());
        EXPECT(0xbece, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbecc));
        EXPECT(0xb0, gbc.readMem(0xbecd));
        // CB B0 011E
        gbc.setState(0xab5d, 0x9f19, 0x9b60, 0xe753, 0x424, 0xc5f6, 0x0, 0x0);
        gbc.writeMem(0xab5d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9f19, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5d));
        EXPECT(0xb0, gbc.readMem(0xab5e));
        // CB B0 011F
        gbc.setState(0x105e, 0x7a85, 0xe860, 0x3529, 0x3e13, 0x1da5, 0x0, 0x1);
        gbc.writeMem(0x105e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7a85, gbc.sp());
        EXPECT(0x1060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0120
        gbc.setState(0xbb26, 0x1aa4, 0xc7a0, 0xb7b8, 0xb90c, 0x529, 0x1, 0x0);
        gbc.writeMem(0xbb26, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1aa4, gbc.sp());
        EXPECT(0xbb28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb26));
        EXPECT(0xb0, gbc.readMem(0xbb27));
        // CB B0 0121
        gbc.setState(0x5f3c, 0xff93, 0x5ab0, 0x3add, 0x5aeb, 0xc547, 0x0, 0x0);
        gbc.writeMem(0x5f3c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xff93, gbc.sp());
        EXPECT(0x5f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0122
        gbc.setState(0x7921, 0xc768, 0x6ec0, 0xb60d, 0x5453, 0x6490, 0x0, 0x1);
        gbc.writeMem(0x7921, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc768, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0123
        gbc.setState(0x80a7, 0x48ea, 0x7ff0, 0x83d, 0x29e6, 0x7da0, 0x0, 0x0);
        gbc.writeMem(0x80a7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x48ea, gbc.sp());
        EXPECT(0x80a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a7));
        EXPECT(0xb0, gbc.readMem(0x80a8));
        // CB B0 0124
        gbc.setState(0xe11c, 0xf3dd, 0xcc20, 0x734, 0xd98e, 0xb05, 0x0, 0x1);
        gbc.writeMem(0xe11c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0xe11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe11c));
        EXPECT(0xb0, gbc.readMem(0xe11d));
        // CB B0 0125
        gbc.setState(0x7179, 0x6f34, 0xf7c0, 0x8729, 0xe8c8, 0x4a95, 0x1, 0x1);
        gbc.writeMem(0x7179, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6f34, gbc.sp());
        EXPECT(0x717b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0126
        gbc.setState(0x6362, 0x2230, 0x9240, 0x7c3a, 0x5588, 0xbdb3, 0x1, 0x0);
        gbc.writeMem(0x6362, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2230, gbc.sp());
        EXPECT(0x6364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0127
        gbc.setState(0x95ed, 0x6b99, 0xb8b0, 0x3880, 0x6dbe, 0x289a, 0x1, 0x0);
        gbc.writeMem(0x95ed, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6b99, gbc.sp());
        EXPECT(0x95ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95ed));
        EXPECT(0xb0, gbc.readMem(0x95ee));
        // CB B0 0128
        gbc.setState(0x3262, 0x1593, 0xaba0, 0x9d5f, 0xa6e0, 0x8c6b, 0x1, 0x1);
        gbc.writeMem(0x3262, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1593, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0129
        gbc.setState(0x38df, 0x2a8b, 0xe080, 0x9037, 0x418b, 0x600d, 0x0, 0x1);
        gbc.writeMem(0x38df, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2a8b, gbc.sp());
        EXPECT(0x38e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 012A
        gbc.setState(0x3a42, 0x17df, 0x2ab0, 0x6901, 0xec95, 0x3b15, 0x1, 0x0);
        gbc.writeMem(0x3a42, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x17df, gbc.sp());
        EXPECT(0x3a44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 012B
        gbc.setState(0xab18, 0xc868, 0xf710, 0xc78a, 0x2069, 0x9df2, 0x0, 0x0);
        gbc.writeMem(0xab18, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc868, gbc.sp());
        EXPECT(0xab1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab18));
        EXPECT(0xb0, gbc.readMem(0xab19));
        // CB B0 012C
        gbc.setState(0xe39b, 0xda30, 0x52b0, 0x15f4, 0x47c1, 0xeb68, 0x1, 0x0);
        gbc.writeMem(0xe39b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xda30, gbc.sp());
        EXPECT(0xe39d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe39b));
        EXPECT(0xb0, gbc.readMem(0xe39c));
        // CB B0 012D
        gbc.setState(0x163c, 0xd7bc, 0x6ea0, 0x7aa0, 0xfd3c, 0xc90e, 0x1, 0x1);
        gbc.writeMem(0x163c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd7bc, gbc.sp());
        EXPECT(0x163e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 012E
        gbc.setState(0x61f, 0xe9b2, 0xe40, 0x60da, 0x923d, 0x2a0d, 0x1, 0x1);
        gbc.writeMem(0x61f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe9b2, gbc.sp());
        EXPECT(0x621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 012F
        gbc.setState(0xb258, 0xa5fd, 0x39c0, 0x87e5, 0x741d, 0xcc0d, 0x1, 0x0);
        gbc.writeMem(0xb258, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa5fd, gbc.sp());
        EXPECT(0xb25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb258));
        EXPECT(0xb0, gbc.readMem(0xb259));
        // CB B0 0130
        gbc.setState(0x123c, 0x9b4e, 0x6270, 0x817f, 0x8285, 0x3f7e, 0x1, 0x1);
        gbc.writeMem(0x123c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x9b4e, gbc.sp());
        EXPECT(0x123e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0131
        gbc.setState(0xb4f7, 0x162e, 0x6e20, 0xf3b1, 0x8ece, 0xc216, 0x0, 0x1);
        gbc.writeMem(0xb4f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x162e, gbc.sp());
        EXPECT(0xb4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f7));
        EXPECT(0xb0, gbc.readMem(0xb4f8));
        // CB B0 0132
        gbc.setState(0xb3e5, 0x2fb1, 0x7570, 0x6361, 0x50c6, 0xf42d, 0x1, 0x1);
        gbc.writeMem(0xb3e5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2fb1, gbc.sp());
        EXPECT(0xb3e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e5));
        EXPECT(0xb0, gbc.readMem(0xb3e6));
        // CB B0 0133
        gbc.setState(0xbac8, 0x9b42, 0xc030, 0xf3fa, 0xb44, 0xc2a2, 0x0, 0x1);
        gbc.writeMem(0xbac8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9b42, gbc.sp());
        EXPECT(0xbaca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbac8));
        EXPECT(0xb0, gbc.readMem(0xbac9));
        // CB B0 0134
        gbc.setState(0xca2e, 0x53ae, 0x57c0, 0x200a, 0x7d1, 0x1622, 0x1, 0x0);
        gbc.writeMem(0xca2e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x53ae, gbc.sp());
        EXPECT(0xca30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2e));
        EXPECT(0xb0, gbc.readMem(0xca2f));
        // CB B0 0135
        gbc.setState(0x750, 0x368d, 0x9d80, 0x8965, 0x2384, 0x9852, 0x0, 0x0);
        gbc.writeMem(0x750, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0x752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0136
        gbc.setState(0xb3ba, 0xb31, 0x39c0, 0x2708, 0x6138, 0xd522, 0x1, 0x1);
        gbc.writeMem(0xb3ba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb31, gbc.sp());
        EXPECT(0xb3bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ba));
        EXPECT(0xb0, gbc.readMem(0xb3bb));
        // CB B0 0137
        gbc.setState(0xde22, 0xc2a4, 0x2280, 0x3bad, 0x2842, 0xbddd, 0x0, 0x0);
        gbc.writeMem(0xde22, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc2a4, gbc.sp());
        EXPECT(0xde24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde22));
        EXPECT(0xb0, gbc.readMem(0xde23));
        // CB B0 0138
        gbc.setState(0x44d7, 0xf209, 0x83a0, 0x90d8, 0xf9d1, 0x72fb, 0x0, 0x1);
        gbc.writeMem(0x44d7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf209, gbc.sp());
        EXPECT(0x44d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0139
        gbc.setState(0x3638, 0x4c8, 0xf680, 0x6f3f, 0x71dd, 0xbf5c, 0x1, 0x1);
        gbc.writeMem(0x3638, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4c8, gbc.sp());
        EXPECT(0x363a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 013A
        gbc.setState(0x8163, 0x9db6, 0x3930, 0x3300, 0x65be, 0xc95b, 0x1, 0x0);
        gbc.writeMem(0x8163, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9db6, gbc.sp());
        EXPECT(0x8165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8163));
        EXPECT(0xb0, gbc.readMem(0x8164));
        // CB B0 013B
        gbc.setState(0xa360, 0xfd4e, 0xfd00, 0xcf33, 0x3fad, 0xed2c, 0x1, 0x0);
        gbc.writeMem(0xa360, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfd4e, gbc.sp());
        EXPECT(0xa362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa360));
        EXPECT(0xb0, gbc.readMem(0xa361));
        // CB B0 013C
        gbc.setState(0x7bf, 0xd47a, 0xbcb0, 0xaf1c, 0x9cfa, 0xb428, 0x1, 0x1);
        gbc.writeMem(0x7bf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd47a, gbc.sp());
        EXPECT(0x7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 013D
        gbc.setState(0x61ac, 0xdad8, 0xe590, 0xbf42, 0xb3e3, 0x264e, 0x0, 0x1);
        gbc.writeMem(0x61ac, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdad8, gbc.sp());
        EXPECT(0x61ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 013E
        gbc.setState(0x5b77, 0x17bf, 0xa6b0, 0x16ac, 0x41e0, 0x1226, 0x0, 0x0);
        gbc.writeMem(0x5b77, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x17bf, gbc.sp());
        EXPECT(0x5b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 013F
        gbc.setState(0x54c4, 0xf650, 0xbca0, 0x46a, 0x7af6, 0xa874, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf650, gbc.sp());
        EXPECT(0x54c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0140
        gbc.setState(0x82e1, 0x9907, 0xb950, 0xdc39, 0xa2f4, 0x8c2f, 0x1, 0x0);
        gbc.writeMem(0x82e1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9907, gbc.sp());
        EXPECT(0x82e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e1));
        EXPECT(0xb0, gbc.readMem(0x82e2));
        // CB B0 0141
        gbc.setState(0x5721, 0x58b6, 0x8c30, 0x1421, 0x829, 0xe44f, 0x1, 0x0);
        gbc.writeMem(0x5721, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x58b6, gbc.sp());
        EXPECT(0x5723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0143
        gbc.setState(0x7a81, 0x211b, 0xf5a0, 0x465, 0x5196, 0x48, 0x0, 0x1);
        gbc.writeMem(0x7a81, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0x7a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0144
        gbc.setState(0xa0f8, 0x743d, 0x420, 0xd8fb, 0x4941, 0x39ed, 0x1, 0x0);
        gbc.writeMem(0xa0f8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x743d, gbc.sp());
        EXPECT(0xa0fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0f8));
        EXPECT(0xb0, gbc.readMem(0xa0f9));
        // CB B0 0145
        gbc.setState(0x711d, 0xa015, 0xaa90, 0xadae, 0x1c7c, 0x31b6, 0x0, 0x0);
        gbc.writeMem(0x711d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa015, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0146
        gbc.setState(0xa697, 0x2449, 0x63c0, 0x4fe4, 0x367a, 0x58ea, 0x0, 0x0);
        gbc.writeMem(0xa697, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2449, gbc.sp());
        EXPECT(0xa699, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa697));
        EXPECT(0xb0, gbc.readMem(0xa698));
        // CB B0 0147
        gbc.setState(0x467, 0x2d51, 0x9c00, 0xad54, 0x4e38, 0xabd5, 0x0, 0x0);
        gbc.writeMem(0x467, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d51, gbc.sp());
        EXPECT(0x469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0148
        gbc.setState(0x4f43, 0x39a4, 0x5080, 0x10b8, 0x6b21, 0xfca2, 0x1, 0x1);
        gbc.writeMem(0x4f43, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x39a4, gbc.sp());
        EXPECT(0x4f45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0149
        gbc.setState(0xc235, 0xf1df, 0x2df0, 0x65f9, 0x58c7, 0x46be, 0x0, 0x0);
        gbc.writeMem(0xc235, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xf1df, gbc.sp());
        EXPECT(0xc237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc235));
        EXPECT(0xb0, gbc.readMem(0xc236));
        // CB B0 014A
        gbc.setState(0xb40, 0x28bb, 0x4d60, 0x3975, 0xcba2, 0x267d, 0x1, 0x1);
        gbc.writeMem(0xb40, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x28bb, gbc.sp());
        EXPECT(0xb42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 014B
        gbc.setState(0x1452, 0x308f, 0xdc70, 0xa20f, 0xd564, 0x3e2b, 0x1, 0x0);
        gbc.writeMem(0x1452, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x308f, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 014C
        gbc.setState(0x58a4, 0xfdf0, 0x37b0, 0xdbc7, 0x6a5, 0x70f1, 0x0, 0x0);
        gbc.writeMem(0x58a4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfdf0, gbc.sp());
        EXPECT(0x58a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 014D
        gbc.setState(0x91af, 0x8e0d, 0x1d80, 0x34ee, 0x582b, 0xca96, 0x1, 0x0);
        gbc.writeMem(0x91af, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8e0d, gbc.sp());
        EXPECT(0x91b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91af));
        EXPECT(0xb0, gbc.readMem(0x91b0));
        // CB B0 014E
        gbc.setState(0x6b5c, 0xbe65, 0x6ce0, 0x9ed9, 0x38b0, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0x6b5c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xbe65, gbc.sp());
        EXPECT(0x6b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0150
        gbc.setState(0xb0fb, 0x33f6, 0x7d80, 0x56f0, 0xb261, 0x2e24, 0x1, 0x0);
        gbc.writeMem(0xb0fb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x33f6, gbc.sp());
        EXPECT(0xb0fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fb));
        EXPECT(0xb0, gbc.readMem(0xb0fc));
        // CB B0 0151
        gbc.setState(0xc779, 0x13fa, 0x77b0, 0x2c50, 0xace6, 0x43b8, 0x0, 0x1);
        gbc.writeMem(0xc779, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x13fa, gbc.sp());
        EXPECT(0xc77b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc779));
        EXPECT(0xb0, gbc.readMem(0xc77a));
        // CB B0 0152
        gbc.setState(0xed4c, 0x12ea, 0x47d0, 0x52fa, 0xb02c, 0xc47, 0x0, 0x1);
        gbc.writeMem(0xed4c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x12ea, gbc.sp());
        EXPECT(0xed4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed4c));
        EXPECT(0xb0, gbc.readMem(0xed4d));
        // CB B0 0153
        gbc.setState(0x3236, 0xe4ff, 0x5a80, 0xe70, 0xb75a, 0xdc41, 0x0, 0x0);
        gbc.writeMem(0x3236, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xe4ff, gbc.sp());
        EXPECT(0x3238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0154
        gbc.setState(0x27a3, 0xa6e8, 0x9a0, 0x62b7, 0x1345, 0x536b, 0x0, 0x1);
        gbc.writeMem(0x27a3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa6e8, gbc.sp());
        EXPECT(0x27a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0155
        gbc.setState(0xe00, 0x8ced, 0x3ed0, 0x4683, 0x87a1, 0xa5d2, 0x0, 0x0);
        gbc.writeMem(0xe00, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8ced, gbc.sp());
        EXPECT(0xe02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0157
        gbc.setState(0xc62d, 0x4d8b, 0x2520, 0xc2a4, 0xfb4d, 0xdb62, 0x1, 0x1);
        gbc.writeMem(0xc62d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4d8b, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc62d));
        EXPECT(0xb0, gbc.readMem(0xc62e));
        // CB B0 0158
        gbc.setState(0x9742, 0x8bd6, 0x6c0, 0x840b, 0xc49d, 0x2d, 0x1, 0x1);
        gbc.writeMem(0x9742, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x8bd6, gbc.sp());
        EXPECT(0x9744, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9742));
        EXPECT(0xb0, gbc.readMem(0x9743));
        // CB B0 0159
        gbc.setState(0x66ce, 0xb960, 0x7c20, 0xb48f, 0x5b0a, 0xf90d, 0x1, 0x0);
        gbc.writeMem(0x66ce, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xb960, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 015A
        gbc.setState(0x5cb6, 0x195a, 0xe400, 0xdc51, 0xd11e, 0xed3c, 0x0, 0x1);
        gbc.writeMem(0x5cb6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x195a, gbc.sp());
        EXPECT(0x5cb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 015B
        gbc.setState(0x7155, 0x7c9a, 0x2030, 0x1104, 0x17, 0x4b55, 0x0, 0x1);
        gbc.writeMem(0x7155, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7c9a, gbc.sp());
        EXPECT(0x7157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 015C
        gbc.setState(0x3229, 0x7810, 0xe820, 0x7640, 0x2172, 0x8927, 0x0, 0x1);
        gbc.writeMem(0x3229, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x7810, gbc.sp());
        EXPECT(0x322b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 015D
        gbc.setState(0xa31f, 0x9d1, 0xc7f0, 0xe4dc, 0xa81a, 0x57c4, 0x0, 0x1);
        gbc.writeMem(0xa31f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9d1, gbc.sp());
        EXPECT(0xa321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa31f));
        EXPECT(0xb0, gbc.readMem(0xa320));
        // CB B0 015E
        gbc.setState(0x2083, 0xb3b9, 0x8f50, 0x81ee, 0xf687, 0xb4d3, 0x1, 0x1);
        gbc.writeMem(0x2083, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb3b9, gbc.sp());
        EXPECT(0x2085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 015F
        gbc.setState(0xd9f7, 0xc97b, 0x1100, 0xa67, 0xbe57, 0xd5b6, 0x0, 0x1);
        gbc.writeMem(0xd9f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc97b, gbc.sp());
        EXPECT(0xd9f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9f7));
        EXPECT(0xb0, gbc.readMem(0xd9f8));
        // CB B0 0160
        gbc.setState(0x2e07, 0x96, 0xb670, 0x50ac, 0x1db1, 0x5886, 0x1, 0x1);
        gbc.writeMem(0x2e07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0x2e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0161
        gbc.setState(0x60d6, 0x2221, 0xe600, 0x62ac, 0x923e, 0xef36, 0x0, 0x0);
        gbc.writeMem(0x60d6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2221, gbc.sp());
        EXPECT(0x60d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0162
        gbc.setState(0xe630, 0x2cc3, 0x97d0, 0x2a34, 0xc311, 0x8067, 0x1, 0x0);
        gbc.writeMem(0xe630, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2cc3, gbc.sp());
        EXPECT(0xe632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe630));
        EXPECT(0xb0, gbc.readMem(0xe631));
        // CB B0 0163
        gbc.setState(0x5ad4, 0x9889, 0xaea0, 0xd5db, 0x885c, 0x78a1, 0x1, 0x0);
        gbc.writeMem(0x5ad4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9889, gbc.sp());
        EXPECT(0x5ad6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0164
        gbc.setState(0xec07, 0xfaa, 0xc6d0, 0xef79, 0xf3f2, 0x89aa, 0x1, 0x0);
        gbc.writeMem(0xec07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xfaa, gbc.sp());
        EXPECT(0xec09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec07));
        EXPECT(0xb0, gbc.readMem(0xec08));
        // CB B0 0165
        gbc.setState(0xc13b, 0x8e0b, 0x1440, 0x73fe, 0xf2a7, 0xfdaf, 0x1, 0x0);
        gbc.writeMem(0xc13b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8e0b, gbc.sp());
        EXPECT(0xc13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc13b));
        EXPECT(0xb0, gbc.readMem(0xc13c));
        // CB B0 0166
        gbc.setState(0x6eb7, 0xddac, 0xd0, 0xdc4a, 0x48ed, 0x6fcb, 0x0, 0x1);
        gbc.writeMem(0x6eb7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xddac, gbc.sp());
        EXPECT(0x6eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0168
        gbc.setState(0x669f, 0x8832, 0xd480, 0x676d, 0xcfa6, 0xc197, 0x1, 0x1);
        gbc.writeMem(0x669f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0x66a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0169
        gbc.setState(0x47c6, 0xbd96, 0x56d0, 0xc28e, 0xbbba, 0x2b15, 0x1, 0x0);
        gbc.writeMem(0x47c6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbd96, gbc.sp());
        EXPECT(0x47c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 016A
        gbc.setState(0xe285, 0x5069, 0xb0d0, 0x4cd8, 0xb316, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0xe285, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5069, gbc.sp());
        EXPECT(0xe287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe285));
        EXPECT(0xb0, gbc.readMem(0xe286));
        // CB B0 016B
        gbc.setState(0x46e, 0xbc3b, 0x4c90, 0xd65e, 0x8cc1, 0xc295, 0x1, 0x0);
        gbc.writeMem(0x46e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbc3b, gbc.sp());
        EXPECT(0x470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 016C
        gbc.setState(0x18d9, 0x6c1b, 0x24b0, 0x517d, 0xda05, 0x66d6, 0x1, 0x1);
        gbc.writeMem(0x18d9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6c1b, gbc.sp());
        EXPECT(0x18db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 016D
        gbc.setState(0x6dbf, 0x91ba, 0x290, 0xc6cb, 0xf2b3, 0xedd1, 0x1, 0x0);
        gbc.writeMem(0x6dbf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x91ba, gbc.sp());
        EXPECT(0x6dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 016E
        gbc.setState(0xe55c, 0x1c23, 0x9d90, 0xe863, 0x69f3, 0x86d, 0x0, 0x0);
        gbc.writeMem(0xe55c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1c23, gbc.sp());
        EXPECT(0xe55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55c));
        EXPECT(0xb0, gbc.readMem(0xe55d));
        // CB B0 016F
        gbc.setState(0xa6dc, 0x9dd3, 0x1280, 0xf1c0, 0x6904, 0x7546, 0x1, 0x0);
        gbc.writeMem(0xa6dc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9dd3, gbc.sp());
        EXPECT(0xa6de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6dc));
        EXPECT(0xb0, gbc.readMem(0xa6dd));
        // CB B0 0170
        gbc.setState(0xda8, 0x3cd8, 0x5330, 0x2ea4, 0x52dd, 0x4b0f, 0x1, 0x1);
        gbc.writeMem(0xda8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x3cd8, gbc.sp());
        EXPECT(0xdaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0171
        gbc.setState(0xc97c, 0x2623, 0xa700, 0xa3b0, 0xd9a4, 0x6598, 0x1, 0x1);
        gbc.writeMem(0xc97c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2623, gbc.sp());
        EXPECT(0xc97e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc97c));
        EXPECT(0xb0, gbc.readMem(0xc97d));
        // CB B0 0172
        gbc.setState(0x56a, 0x8b7, 0x5180, 0x1358, 0x8fe2, 0xfce5, 0x1, 0x0);
        gbc.writeMem(0x56a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b7, gbc.sp());
        EXPECT(0x56c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0173
        gbc.setState(0x6d87, 0xc70a, 0x3b80, 0x366a, 0xf03c, 0xc25d, 0x1, 0x1);
        gbc.writeMem(0x6d87, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc70a, gbc.sp());
        EXPECT(0x6d89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0174
        gbc.setState(0xc12e, 0xbb1e, 0x810, 0x1009, 0x7922, 0x6077, 0x0, 0x1);
        gbc.writeMem(0xc12e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xbb1e, gbc.sp());
        EXPECT(0xc130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc12e));
        EXPECT(0xb0, gbc.readMem(0xc12f));
        // CB B0 0175
        gbc.setState(0x1ae7, 0x1e48, 0xb970, 0xca0, 0x2518, 0xe601, 0x1, 0x1);
        gbc.writeMem(0x1ae7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1e48, gbc.sp());
        EXPECT(0x1ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0176
        gbc.setState(0x954f, 0x6466, 0x7220, 0x1ca8, 0x47, 0x1aed, 0x0, 0x1);
        gbc.writeMem(0x954f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x6466, gbc.sp());
        EXPECT(0x9551, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x954f));
        EXPECT(0xb0, gbc.readMem(0x9550));
        // CB B0 0177
        gbc.setState(0x4716, 0x7b38, 0x7640, 0x9460, 0xd1b2, 0x725f, 0x1, 0x1);
        gbc.writeMem(0x4716, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x7b38, gbc.sp());
        EXPECT(0x4718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0179
        gbc.setState(0x5807, 0xd75f, 0x7530, 0xce81, 0x8c98, 0xb23, 0x0, 0x1);
        gbc.writeMem(0x5807, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd75f, gbc.sp());
        EXPECT(0x5809, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 017A
        gbc.setState(0x5f3d, 0xa2b8, 0xca00, 0xe68, 0x53c0, 0x46b7, 0x0, 0x1);
        gbc.writeMem(0x5f3d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa2b8, gbc.sp());
        EXPECT(0x5f3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 017B
        gbc.setState(0x117f, 0xd6eb, 0x2740, 0x920d, 0x42ca, 0x9105, 0x0, 0x1);
        gbc.writeMem(0x117f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd6eb, gbc.sp());
        EXPECT(0x1181, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 017C
        gbc.setState(0x5d0c, 0x81cd, 0x4020, 0x3f00, 0xad8a, 0x2ac9, 0x1, 0x0);
        gbc.writeMem(0x5d0c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x81cd, gbc.sp());
        EXPECT(0x5d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 017D
        gbc.setState(0xa29a, 0x43d, 0xc790, 0x70f, 0x8636, 0x9174, 0x0, 0x1);
        gbc.writeMem(0xa29a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x43d, gbc.sp());
        EXPECT(0xa29c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29a));
        EXPECT(0xb0, gbc.readMem(0xa29b));
        // CB B0 017E
        gbc.setState(0x5eb6, 0x96a1, 0x58c0, 0xa6df, 0x29f2, 0x8c29, 0x1, 0x1);
        gbc.writeMem(0x5eb6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0x5eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 017F
        gbc.setState(0x9eb8, 0x5873, 0x9ba0, 0x7e98, 0x24a, 0x724e, 0x1, 0x1);
        gbc.writeMem(0x9eb8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x5873, gbc.sp());
        EXPECT(0x9eba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb8));
        EXPECT(0xb0, gbc.readMem(0x9eb9));
        // CB B0 0180
        gbc.setState(0xc63e, 0xb043, 0x5a20, 0xb0a9, 0xa49e, 0xe67e, 0x0, 0x0);
        gbc.writeMem(0xc63e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xb043, gbc.sp());
        EXPECT(0xc640, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63e));
        EXPECT(0xb0, gbc.readMem(0xc63f));
        // CB B0 0181
        gbc.setState(0x851f, 0xe7f1, 0xc3b0, 0x4f65, 0xc3b6, 0x1c30, 0x1, 0x0);
        gbc.writeMem(0x851f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe7f1, gbc.sp());
        EXPECT(0x8521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x851f));
        EXPECT(0xb0, gbc.readMem(0x8520));
        // CB B0 0182
        gbc.setState(0x5cf4, 0x80b6, 0xd350, 0x3739, 0x1e1a, 0xc25f, 0x1, 0x1);
        gbc.writeMem(0x5cf4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x80b6, gbc.sp());
        EXPECT(0x5cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0183
        gbc.setState(0xb11a, 0xe796, 0xe6f0, 0x1659, 0xcad3, 0x1f07, 0x0, 0x0);
        gbc.writeMem(0xb11a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xe796, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0xb0, gbc.readMem(0xb11b));
        // CB B0 0184
        gbc.setState(0xd85a, 0xca25, 0x9b50, 0xe635, 0xfcfe, 0xd3b2, 0x0, 0x0);
        gbc.writeMem(0xd85a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0xd85c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd85a));
        EXPECT(0xb0, gbc.readMem(0xd85b));
        // CB B0 0185
        gbc.setState(0x7aba, 0xdc53, 0xdab0, 0x5b29, 0x26c4, 0x7f79, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0186
        gbc.setState(0x9e7c, 0x6177, 0x4cd0, 0x3026, 0xea5b, 0x5070, 0x0, 0x0);
        gbc.writeMem(0x9e7c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6177, gbc.sp());
        EXPECT(0x9e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7c));
        EXPECT(0xb0, gbc.readMem(0x9e7d));
        // CB B0 0187
        gbc.setState(0x753, 0xe5fc, 0x8c10, 0xe0d5, 0xe49b, 0x63fa, 0x0, 0x0);
        gbc.writeMem(0x753, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0x755, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0188
        gbc.setState(0x7ff0, 0x3383, 0x36e0, 0xff0c, 0xbfb0, 0xbe8b, 0x0, 0x1);
        gbc.writeMem(0x7ff0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3383, gbc.sp());
        EXPECT(0x7ff2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0189
        gbc.setState(0x448f, 0x951f, 0xfb80, 0x8176, 0x6dac, 0xd41a, 0x0, 0x0);
        gbc.writeMem(0x448f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x951f, gbc.sp());
        EXPECT(0x4491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 018A
        gbc.setState(0xc75e, 0x35b3, 0x27d0, 0x626a, 0x24e9, 0x5a2a, 0x1, 0x0);
        gbc.writeMem(0xc75e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x35b3, gbc.sp());
        EXPECT(0xc760, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc75e));
        EXPECT(0xb0, gbc.readMem(0xc75f));
        // CB B0 018B
        gbc.setState(0xe875, 0xb17e, 0xdc40, 0x3bd9, 0xb192, 0x4517, 0x0, 0x1);
        gbc.writeMem(0xe875, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb17e, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe875));
        EXPECT(0xb0, gbc.readMem(0xe876));
        // CB B0 018D
        gbc.setState(0x45a6, 0xb2a0, 0xf000, 0x772e, 0x11ee, 0x37d6, 0x0, 0x1);
        gbc.writeMem(0x45a6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xb2a0, gbc.sp());
        EXPECT(0x45a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 018E
        gbc.setState(0x6ca1, 0xf902, 0x1690, 0xbcbc, 0x233c, 0x1ec8, 0x0, 0x0);
        gbc.writeMem(0x6ca1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf902, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 018F
        gbc.setState(0xa5e6, 0x2eb6, 0xd90, 0x6cea, 0x419, 0xa255, 0x0, 0x1);
        gbc.writeMem(0xa5e6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x2eb6, gbc.sp());
        EXPECT(0xa5e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5e6));
        EXPECT(0xb0, gbc.readMem(0xa5e7));
        // CB B0 0190
        gbc.setState(0x67a, 0xd698, 0xbbc0, 0x67c0, 0x9132, 0x2c1e, 0x0, 0x0);
        gbc.writeMem(0x67a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd698, gbc.sp());
        EXPECT(0x67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0191
        gbc.setState(0xe98a, 0xd7ad, 0x6470, 0x7f8b, 0x31a1, 0x9481, 0x1, 0x0);
        gbc.writeMem(0xe98a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd7ad, gbc.sp());
        EXPECT(0xe98c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe98a));
        EXPECT(0xb0, gbc.readMem(0xe98b));
        // CB B0 0192
        gbc.setState(0xcea4, 0x77e8, 0x3830, 0xdbfb, 0x9911, 0x1eb8, 0x1, 0x0);
        gbc.writeMem(0xcea4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0xcea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea4));
        EXPECT(0xb0, gbc.readMem(0xcea5));
        // CB B0 0193
        gbc.setState(0x24fd, 0xa432, 0xd540, 0xcc5, 0x965f, 0x917f, 0x1, 0x0);
        gbc.writeMem(0x24fd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0x24ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0194
        gbc.setState(0x3e77, 0x3a86, 0xa660, 0x69c0, 0x155a, 0xace6, 0x1, 0x0);
        gbc.writeMem(0x3e77, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x3a86, gbc.sp());
        EXPECT(0x3e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0195
        gbc.setState(0xa95a, 0x44a2, 0xe8e0, 0xb924, 0x884, 0x8233, 0x0, 0x0);
        gbc.writeMem(0xa95a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0xa95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa95a));
        EXPECT(0xb0, gbc.readMem(0xa95b));
        // CB B0 0196
        gbc.setState(0xdb08, 0x5e31, 0x8310, 0x32ca, 0x9197, 0x4e97, 0x1, 0x0);
        gbc.writeMem(0xdb08, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5e31, gbc.sp());
        EXPECT(0xdb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb08));
        EXPECT(0xb0, gbc.readMem(0xdb09));
        // CB B0 0197
        gbc.setState(0x5a5f, 0xc565, 0x43a0, 0xae27, 0x76bc, 0xaa5b, 0x1, 0x1);
        gbc.writeMem(0x5a5f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc565, gbc.sp());
        EXPECT(0x5a61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0198
        gbc.setState(0xbe61, 0x460a, 0x2020, 0x31f9, 0x26b0, 0x1f3c, 0x0, 0x1);
        gbc.writeMem(0xbe61, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x460a, gbc.sp());
        EXPECT(0xbe63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe61));
        EXPECT(0xb0, gbc.readMem(0xbe62));
        // CB B0 0199
        gbc.setState(0x7714, 0x2ec5, 0x180, 0xb642, 0xb2ca, 0x2074, 0x0, 0x0);
        gbc.writeMem(0x7714, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0x7716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 019A
        gbc.setState(0x5402, 0x327b, 0xa550, 0x6391, 0x8f7d, 0x690f, 0x0, 0x0);
        gbc.writeMem(0x5402, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x327b, gbc.sp());
        EXPECT(0x5404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 019B
        gbc.setState(0x2f07, 0x93ef, 0x6d80, 0xba0f, 0xe944, 0x8e77, 0x0, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x93ef, gbc.sp());
        EXPECT(0x2f09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 019C
        gbc.setState(0x2dc8, 0xa44d, 0x5460, 0x908a, 0x10df, 0xdf, 0x0, 0x1);
        gbc.writeMem(0x2dc8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa44d, gbc.sp());
        EXPECT(0x2dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 019D
        gbc.setState(0x1010, 0xe8ef, 0x4b10, 0x6237, 0x21c9, 0xd245, 0x0, 0x1);
        gbc.writeMem(0x1010, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xe8ef, gbc.sp());
        EXPECT(0x1012, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 019E
        gbc.setState(0x6eb6, 0x547c, 0xd680, 0xfc12, 0xc12, 0x406e, 0x0, 0x0);
        gbc.writeMem(0x6eb6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x547c, gbc.sp());
        EXPECT(0x6eb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 019F
        gbc.setState(0xc474, 0x24c9, 0x62f0, 0x323f, 0x1af9, 0x936e, 0x1, 0x1);
        gbc.writeMem(0xc474, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x24c9, gbc.sp());
        EXPECT(0xc476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc474));
        EXPECT(0xb0, gbc.readMem(0xc475));
        // CB B0 01A0
        gbc.setState(0xc658, 0xb3d6, 0x56a0, 0xa01c, 0x1b74, 0x330f, 0x0, 0x0);
        gbc.writeMem(0xc658, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xb3d6, gbc.sp());
        EXPECT(0xc65a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc658));
        EXPECT(0xb0, gbc.readMem(0xc659));
        // CB B0 01A1
        gbc.setState(0x4ec7, 0x32d0, 0x3af0, 0x9b49, 0x6b01, 0x358f, 0x0, 0x1);
        gbc.writeMem(0x4ec7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x32d0, gbc.sp());
        EXPECT(0x4ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01A2
        gbc.setState(0x81b, 0xc55, 0xae70, 0xab4, 0x3655, 0xeaaf, 0x1, 0x1);
        gbc.writeMem(0x81b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc55, gbc.sp());
        EXPECT(0x81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01A3
        gbc.setState(0xe93, 0xe35e, 0x23e0, 0x5d31, 0xfd7b, 0x8a4f, 0x1, 0x0);
        gbc.writeMem(0xe93, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe35e, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01A4
        gbc.setState(0xe86d, 0x6122, 0x1850, 0xe37c, 0x3eba, 0x7f0e, 0x0, 0x1);
        gbc.writeMem(0xe86d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x6122, gbc.sp());
        EXPECT(0xe86f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86d));
        EXPECT(0xb0, gbc.readMem(0xe86e));
        // CB B0 01A5
        gbc.setState(0x22ed, 0x8b54, 0x9da0, 0x33d6, 0x606a, 0xdc91, 0x0, 0x1);
        gbc.writeMem(0x22ed, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8b54, gbc.sp());
        EXPECT(0x22ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01A6
        gbc.setState(0x4919, 0x5438, 0xa5b0, 0x49bb, 0x99e2, 0x2709, 0x0, 0x0);
        gbc.writeMem(0x4919, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5438, gbc.sp());
        EXPECT(0x491b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01A7
        gbc.setState(0xa141, 0x5183, 0xa00, 0x111e, 0xf610, 0x4eb2, 0x0, 0x0);
        gbc.writeMem(0xa141, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5183, gbc.sp());
        EXPECT(0xa143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa141));
        EXPECT(0xb0, gbc.readMem(0xa142));
        // CB B0 01A8
        gbc.setState(0x14eb, 0x9329, 0x7220, 0xb2fc, 0x67fe, 0x67d3, 0x0, 0x1);
        gbc.writeMem(0x14eb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9329, gbc.sp());
        EXPECT(0x14ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01A9
        gbc.setState(0x7194, 0x7396, 0x97a0, 0x5b3a, 0x602b, 0xfb7c, 0x1, 0x1);
        gbc.writeMem(0x7194, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7396, gbc.sp());
        EXPECT(0x7196, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01AA
        gbc.setState(0x896f, 0xc1db, 0xcff0, 0xb587, 0xd3e7, 0xfda2, 0x1, 0x1);
        gbc.writeMem(0x896f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc1db, gbc.sp());
        EXPECT(0x8971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896f));
        EXPECT(0xb0, gbc.readMem(0x8970));
        // CB B0 01AB
        gbc.setState(0xace7, 0xde66, 0x6880, 0x2b7, 0xc1a4, 0x5164, 0x1, 0x1);
        gbc.writeMem(0xace7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xde66, gbc.sp());
        EXPECT(0xace9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace7));
        EXPECT(0xb0, gbc.readMem(0xace8));
        // CB B0 01AC
        gbc.setState(0x6467, 0x3e4f, 0x77c0, 0x147b, 0xcdcb, 0x297c, 0x0, 0x1);
        gbc.writeMem(0x6467, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3e4f, gbc.sp());
        EXPECT(0x6469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01AD
        gbc.setState(0x2377, 0xd1da, 0x2b90, 0x989e, 0x2764, 0x45e1, 0x1, 0x0);
        gbc.writeMem(0x2377, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd1da, gbc.sp());
        EXPECT(0x2379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01AE
        gbc.setState(0xa213, 0xced2, 0xf080, 0xb90a, 0xf753, 0x7e72, 0x0, 0x0);
        gbc.writeMem(0xa213, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xced2, gbc.sp());
        EXPECT(0xa215, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa213));
        EXPECT(0xb0, gbc.readMem(0xa214));
        // CB B0 01AF
        gbc.setState(0x989e, 0x5f48, 0x4a0, 0xc066, 0xb750, 0x3dad, 0x1, 0x0);
        gbc.writeMem(0x989e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5f48, gbc.sp());
        EXPECT(0x98a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989e));
        EXPECT(0xb0, gbc.readMem(0x989f));
        // CB B0 01B0
        gbc.setState(0x816f, 0xd51a, 0x2130, 0x710b, 0x2766, 0x4d6b, 0x0, 0x1);
        gbc.writeMem(0x816f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd51a, gbc.sp());
        EXPECT(0x8171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816f));
        EXPECT(0xb0, gbc.readMem(0x8170));
        // CB B0 01B1
        gbc.setState(0x93f7, 0x12a2, 0x6940, 0x42ba, 0x75bd, 0xddfb, 0x1, 0x1);
        gbc.writeMem(0x93f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x12a2, gbc.sp());
        EXPECT(0x93f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93f7));
        EXPECT(0xb0, gbc.readMem(0x93f8));
        // CB B0 01B2
        gbc.setState(0xe999, 0xc97f, 0x13a0, 0xf579, 0xc132, 0x8c7a, 0x1, 0x1);
        gbc.writeMem(0xe999, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc97f, gbc.sp());
        EXPECT(0xe99b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe999));
        EXPECT(0xb0, gbc.readMem(0xe99a));
        // CB B0 01B3
        gbc.setState(0x8e8c, 0xeaa, 0x4e70, 0x832f, 0x7688, 0xfcf7, 0x0, 0x1);
        gbc.writeMem(0x8e8c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeaa, gbc.sp());
        EXPECT(0x8e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8c));
        EXPECT(0xb0, gbc.readMem(0x8e8d));
        // CB B0 01B4
        gbc.setState(0x6038, 0xeee0, 0x3830, 0x27dc, 0xe074, 0x4ac0, 0x1, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xeee0, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01B5
        gbc.setState(0x1983, 0x1190, 0x800, 0xc44f, 0x903a, 0x474b, 0x1, 0x1);
        gbc.writeMem(0x1983, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1190, gbc.sp());
        EXPECT(0x1985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01B6
        gbc.setState(0x792c, 0x3d2b, 0xe280, 0x416b, 0x83bf, 0xc29a, 0x0, 0x1);
        gbc.writeMem(0x792c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3d2b, gbc.sp());
        EXPECT(0x792e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01B7
        gbc.setState(0xb92c, 0xf29f, 0x9450, 0x35de, 0xacb2, 0x558b, 0x1, 0x1);
        gbc.writeMem(0xb92c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf29f, gbc.sp());
        EXPECT(0xb92e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92c));
        EXPECT(0xb0, gbc.readMem(0xb92d));
        // CB B0 01B8
        gbc.setState(0x7e7c, 0xe25f, 0x2800, 0x3413, 0x276c, 0x2dca, 0x0, 0x1);
        gbc.writeMem(0x7e7c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xe25f, gbc.sp());
        EXPECT(0x7e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01B9
        gbc.setState(0xa0fd, 0x41c7, 0x7fc0, 0xcdb4, 0xb299, 0x9e2c, 0x1, 0x1);
        gbc.writeMem(0xa0fd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x41c7, gbc.sp());
        EXPECT(0xa0ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0fd));
        EXPECT(0xb0, gbc.readMem(0xa0fe));
        // CB B0 01BA
        gbc.setState(0x1299, 0x6fc4, 0xa270, 0x3d49, 0xc1eb, 0x48a8, 0x0, 0x0);
        gbc.writeMem(0x1299, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6fc4, gbc.sp());
        EXPECT(0x129b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01BB
        gbc.setState(0xc6bc, 0x57b5, 0xe9d0, 0x6bad, 0x968e, 0x4632, 0x1, 0x1);
        gbc.writeMem(0xc6bc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x57b5, gbc.sp());
        EXPECT(0xc6be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6bc));
        EXPECT(0xb0, gbc.readMem(0xc6bd));
        // CB B0 01BD
        gbc.setState(0x7699, 0x6a12, 0x1f40, 0xe017, 0x84a8, 0xf943, 0x1, 0x0);
        gbc.writeMem(0x7699, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0x769b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01BE
        gbc.setState(0x4b2b, 0x1f93, 0xb5d0, 0xfe2c, 0x3b93, 0x885, 0x0, 0x1);
        gbc.writeMem(0x4b2b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1f93, gbc.sp());
        EXPECT(0x4b2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01BF
        gbc.setState(0xa18a, 0x5a93, 0xc2d0, 0x26b6, 0x68ca, 0x8d9a, 0x1, 0x0);
        gbc.writeMem(0xa18a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5a93, gbc.sp());
        EXPECT(0xa18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18a));
        EXPECT(0xb0, gbc.readMem(0xa18b));
        // CB B0 01C0
        gbc.setState(0x2fd1, 0xf1cf, 0xc0a0, 0x1d67, 0xc874, 0x9bdb, 0x0, 0x0);
        gbc.writeMem(0x2fd1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf1cf, gbc.sp());
        EXPECT(0x2fd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01C1
        gbc.setState(0x8c7, 0x9bc5, 0x78c0, 0xb8f3, 0xba9d, 0x7c67, 0x1, 0x0);
        gbc.writeMem(0x8c7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9bc5, gbc.sp());
        EXPECT(0x8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01C2
        gbc.setState(0x2d1d, 0xf1f3, 0xc4f0, 0x9523, 0x49d3, 0xaac0, 0x1, 0x0);
        gbc.writeMem(0x2d1d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf1f3, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01C3
        gbc.setState(0x6c96, 0x23f0, 0xc970, 0x9c77, 0xfc79, 0x16dc, 0x0, 0x1);
        gbc.writeMem(0x6c96, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x6c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01C4
        gbc.setState(0x5683, 0x4aa5, 0x0, 0x1b0a, 0x9f45, 0xa76d, 0x0, 0x1);
        gbc.writeMem(0x5683, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x4aa5, gbc.sp());
        EXPECT(0x5685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01C5
        gbc.setState(0xd27, 0xe6b3, 0x5240, 0x3f2c, 0xace6, 0x458c, 0x1, 0x0);
        gbc.writeMem(0xd27, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe6b3, gbc.sp());
        EXPECT(0xd29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01C6
        gbc.setState(0x1e6d, 0xb8e5, 0xc70, 0xbdf, 0xbd86, 0xca45, 0x0, 0x1);
        gbc.writeMem(0x1e6d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x1e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01C8
        gbc.setState(0x2141, 0x1890, 0xd8e0, 0xa2ee, 0xe3a3, 0x8c64, 0x0, 0x1);
        gbc.writeMem(0x2141, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1890, gbc.sp());
        EXPECT(0x2143, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01C9
        gbc.setState(0xbc2e, 0xd793, 0xa460, 0xdde4, 0x5661, 0x390b, 0x1, 0x0);
        gbc.writeMem(0xbc2e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd793, gbc.sp());
        EXPECT(0xbc30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2e));
        EXPECT(0xb0, gbc.readMem(0xbc2f));
        // CB B0 01CA
        gbc.setState(0xc302, 0x4379, 0xd70, 0x8c25, 0xa0e4, 0x616e, 0x0, 0x0);
        gbc.writeMem(0xc302, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4379, gbc.sp());
        EXPECT(0xc304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc302));
        EXPECT(0xb0, gbc.readMem(0xc303));
        // CB B0 01CB
        gbc.setState(0xa8a3, 0xac60, 0x9dc0, 0x2981, 0x1c23, 0xa5e8, 0x1, 0x1);
        gbc.writeMem(0xa8a3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xac60, gbc.sp());
        EXPECT(0xa8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a3));
        EXPECT(0xb0, gbc.readMem(0xa8a4));
        // CB B0 01CC
        gbc.setState(0x7bb8, 0x3362, 0x54f0, 0x1575, 0x1d56, 0x6f87, 0x1, 0x0);
        gbc.writeMem(0x7bb8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3362, gbc.sp());
        EXPECT(0x7bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01CD
        gbc.setState(0x2bb8, 0xb7cb, 0xbd90, 0xda06, 0x818e, 0x296d, 0x0, 0x1);
        gbc.writeMem(0x2bb8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb7cb, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01CE
        gbc.setState(0x7d60, 0x9ef0, 0xc340, 0x567a, 0xff7, 0xcf44, 0x1, 0x0);
        gbc.writeMem(0x7d60, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x9ef0, gbc.sp());
        EXPECT(0x7d62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01CF
        gbc.setState(0x9c5, 0xf66b, 0xb2a0, 0x81c5, 0x377b, 0x1788, 0x1, 0x0);
        gbc.writeMem(0x9c5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf66b, gbc.sp());
        EXPECT(0x9c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01D0
        gbc.setState(0x50dd, 0x6afd, 0x29a0, 0x2e27, 0x1e17, 0xdcb3, 0x1, 0x0);
        gbc.writeMem(0x50dd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x6afd, gbc.sp());
        EXPECT(0x50df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01D1
        gbc.setState(0x7b5e, 0xd3a7, 0xea60, 0xd053, 0x999b, 0xad44, 0x0, 0x0);
        gbc.writeMem(0x7b5e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd3a7, gbc.sp());
        EXPECT(0x7b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01D2
        gbc.setState(0x26f7, 0x6297, 0x9b70, 0x2e25, 0x2156, 0xe14e, 0x0, 0x1);
        gbc.writeMem(0x26f7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x6297, gbc.sp());
        EXPECT(0x26f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01D3
        gbc.setState(0xb46f, 0x202b, 0x7da0, 0xe81, 0x67b7, 0x9bed, 0x0, 0x1);
        gbc.writeMem(0xb46f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0xb471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb46f));
        EXPECT(0xb0, gbc.readMem(0xb470));
        // CB B0 01D4
        gbc.setState(0xc990, 0xf0f, 0x69f0, 0x93b3, 0x8379, 0x2fac, 0x0, 0x1);
        gbc.writeMem(0xc990, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf0f, gbc.sp());
        EXPECT(0xc992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc990));
        EXPECT(0xb0, gbc.readMem(0xc991));
        // CB B0 01D5
        gbc.setState(0xd11f, 0xf37e, 0x9610, 0x91a6, 0x8ee6, 0x9a7a, 0x0, 0x0);
        gbc.writeMem(0xd11f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xf37e, gbc.sp());
        EXPECT(0xd121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd11f));
        EXPECT(0xb0, gbc.readMem(0xd120));
        // CB B0 01D6
        gbc.setState(0x4534, 0x53e7, 0x9610, 0xa6d4, 0x931b, 0x9c9a, 0x0, 0x0);
        gbc.writeMem(0x4534, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x53e7, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01D7
        gbc.setState(0x9ac9, 0x3eeb, 0x8810, 0x89f3, 0xfc0, 0xa30, 0x1, 0x0);
        gbc.writeMem(0x9ac9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x3eeb, gbc.sp());
        EXPECT(0x9acb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ac9));
        EXPECT(0xb0, gbc.readMem(0x9aca));
        // CB B0 01D8
        gbc.setState(0x54dc, 0xfe92, 0x7610, 0x586d, 0xe468, 0x551d, 0x0, 0x1);
        gbc.writeMem(0x54dc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xfe92, gbc.sp());
        EXPECT(0x54de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01D9
        gbc.setState(0x423c, 0x956, 0x7f60, 0xf677, 0x2bcb, 0x257b, 0x1, 0x1);
        gbc.writeMem(0x423c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x956, gbc.sp());
        EXPECT(0x423e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01DA
        gbc.setState(0xd7ce, 0x8363, 0x3aa0, 0xf19, 0x2e8, 0xd321, 0x0, 0x1);
        gbc.writeMem(0xd7ce, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8363, gbc.sp());
        EXPECT(0xd7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7ce));
        EXPECT(0xb0, gbc.readMem(0xd7cf));
        // CB B0 01DB
        gbc.setState(0x1342, 0xa1b6, 0xaa60, 0xe827, 0x82aa, 0x96c3, 0x1, 0x1);
        gbc.writeMem(0x1342, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0x1344, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01DC
        gbc.setState(0x104c, 0xa685, 0x8760, 0xafd6, 0xdbd, 0x4a33, 0x0, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa685, gbc.sp());
        EXPECT(0x104e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01DD
        gbc.setState(0x6672, 0x9a7f, 0x7dd0, 0xc0d8, 0x4ab0, 0xac8e, 0x0, 0x0);
        gbc.writeMem(0x6672, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9a7f, gbc.sp());
        EXPECT(0x6674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01DE
        gbc.setState(0xc7aa, 0x39e6, 0x4a0, 0x6784, 0xa706, 0xe0ee, 0x1, 0x1);
        gbc.writeMem(0xc7aa, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x39e6, gbc.sp());
        EXPECT(0xc7ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7aa));
        EXPECT(0xb0, gbc.readMem(0xc7ab));
        // CB B0 01DF
        gbc.setState(0xda6c, 0x620a, 0x6600, 0x2539, 0xb521, 0xa40f, 0x1, 0x1);
        gbc.writeMem(0xda6c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x620a, gbc.sp());
        EXPECT(0xda6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda6c));
        EXPECT(0xb0, gbc.readMem(0xda6d));
        // CB B0 01E1
        gbc.setState(0x2d21, 0x9816, 0xeb10, 0x4866, 0x5b04, 0xe0ba, 0x0, 0x0);
        gbc.writeMem(0x2d21, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0x2d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01E2
        gbc.setState(0xd9de, 0x35de, 0xcfa0, 0x53c6, 0x5cd9, 0xddc5, 0x0, 0x1);
        gbc.writeMem(0xd9de, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x35de, gbc.sp());
        EXPECT(0xd9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9de));
        EXPECT(0xb0, gbc.readMem(0xd9df));
        // CB B0 01E3
        gbc.setState(0xa8dc, 0x7e8, 0x2d0, 0xbef2, 0x3248, 0xabf6, 0x0, 0x0);
        gbc.writeMem(0xa8dc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7e8, gbc.sp());
        EXPECT(0xa8de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8dc));
        EXPECT(0xb0, gbc.readMem(0xa8dd));
        // CB B0 01E4
        gbc.setState(0xa508, 0xf3e7, 0xd710, 0x222e, 0xaade, 0xe7ae, 0x0, 0x0);
        gbc.writeMem(0xa508, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf3e7, gbc.sp());
        EXPECT(0xa50a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa508));
        EXPECT(0xb0, gbc.readMem(0xa509));
        // CB B0 01E5
        gbc.setState(0xebac, 0x9311, 0x4280, 0x6fe3, 0xb551, 0x90e, 0x0, 0x1);
        gbc.writeMem(0xebac, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebac));
        EXPECT(0xb0, gbc.readMem(0xebad));
        // CB B0 01E6
        gbc.setState(0x31b1, 0x6ec2, 0x610, 0x5afa, 0xfc0c, 0xa936, 0x1, 0x1);
        gbc.writeMem(0x31b1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x6ec2, gbc.sp());
        EXPECT(0x31b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01E7
        gbc.setState(0x401b, 0x2980, 0x30, 0x1906, 0xbd3c, 0x867c, 0x0, 0x1);
        gbc.writeMem(0x401b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2980, gbc.sp());
        EXPECT(0x401d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01E8
        gbc.setState(0x584, 0x16a2, 0x37e0, 0xecb0, 0x4d80, 0xa2f7, 0x0, 0x1);
        gbc.writeMem(0x584, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x16a2, gbc.sp());
        EXPECT(0x586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01E9
        gbc.setState(0xe7dc, 0x88fe, 0xae50, 0x2e4b, 0x2cb, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0xe7dc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x88fe, gbc.sp());
        EXPECT(0xe7de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7dc));
        EXPECT(0xb0, gbc.readMem(0xe7dd));
        // CB B0 01EA
        gbc.setState(0x533d, 0x51c8, 0x88c0, 0x2fc3, 0x4cd8, 0xe84f, 0x1, 0x1);
        gbc.writeMem(0x533d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x51c8, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01EB
        gbc.setState(0xbcdb, 0x912f, 0xe580, 0xc8ca, 0x68eb, 0x979b, 0x0, 0x1);
        gbc.writeMem(0xbcdb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x912f, gbc.sp());
        EXPECT(0xbcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdb));
        EXPECT(0xb0, gbc.readMem(0xbcdc));
        // CB B0 01EC
        gbc.setState(0xeb5e, 0x1408, 0x7860, 0xc87a, 0x2503, 0x52ce, 0x0, 0x1);
        gbc.writeMem(0xeb5e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1408, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5e));
        EXPECT(0xb0, gbc.readMem(0xeb5f));
        // CB B0 01ED
        gbc.setState(0xcb1a, 0x42c3, 0xcb90, 0xbe1d, 0xeb02, 0x189e, 0x0, 0x0);
        gbc.writeMem(0xcb1a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x42c3, gbc.sp());
        EXPECT(0xcb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1a));
        EXPECT(0xb0, gbc.readMem(0xcb1b));
        // CB B0 01EE
        gbc.setState(0x12c4, 0x16a7, 0x6e00, 0xac6a, 0x415d, 0xe02c, 0x0, 0x0);
        gbc.writeMem(0x12c4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x16a7, gbc.sp());
        EXPECT(0x12c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01EF
        gbc.setState(0x4c8e, 0x7066, 0xf260, 0x7ba4, 0x1a26, 0xf0a2, 0x0, 0x0);
        gbc.writeMem(0x4c8e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x7066, gbc.sp());
        EXPECT(0x4c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01F0
        gbc.setState(0xa1b6, 0x3505, 0x42f0, 0xd138, 0xb6a7, 0x29a7, 0x1, 0x0);
        gbc.writeMem(0xa1b6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3505, gbc.sp());
        EXPECT(0xa1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b6));
        EXPECT(0xb0, gbc.readMem(0xa1b7));
        // CB B0 01F2
        gbc.setState(0x6d63, 0x6a79, 0x5090, 0x8080, 0x150b, 0xbb2f, 0x1, 0x0);
        gbc.writeMem(0x6d63, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6a79, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01F3
        gbc.setState(0xfe5, 0x2a35, 0x1c10, 0x4cba, 0x3596, 0xf904, 0x0, 0x0);
        gbc.writeMem(0xfe5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x2a35, gbc.sp());
        EXPECT(0xfe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01F4
        gbc.setState(0xba35, 0x64e4, 0xcde0, 0x6d32, 0x21c2, 0xf293, 0x1, 0x0);
        gbc.writeMem(0xba35, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x64e4, gbc.sp());
        EXPECT(0xba37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba35));
        EXPECT(0xb0, gbc.readMem(0xba36));
        // CB B0 01F5
        gbc.setState(0x9d77, 0xfce4, 0x510, 0xb4aa, 0xbf59, 0xeae, 0x0, 0x1);
        gbc.writeMem(0x9d77, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfce4, gbc.sp());
        EXPECT(0x9d79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d77));
        EXPECT(0xb0, gbc.readMem(0x9d78));
        // CB B0 01F6
        gbc.setState(0x1ae1, 0x9614, 0x2090, 0x97f3, 0x4789, 0x28c3, 0x0, 0x0);
        gbc.writeMem(0x1ae1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9614, gbc.sp());
        EXPECT(0x1ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01F7
        gbc.setState(0xb47, 0xffb6, 0x9210, 0xf90b, 0xed95, 0xacd6, 0x0, 0x0);
        gbc.writeMem(0xb47, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xffb6, gbc.sp());
        EXPECT(0xb49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01F9
        gbc.setState(0xdc48, 0x5827, 0x52b0, 0x2c3, 0xd9e0, 0x9f52, 0x1, 0x0);
        gbc.writeMem(0xdc48, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x5827, gbc.sp());
        EXPECT(0xdc4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc48));
        EXPECT(0xb0, gbc.readMem(0xdc49));
        // CB B0 01FA
        gbc.setState(0x5c7c, 0xf67, 0xdc00, 0xa30b, 0x23c3, 0xf265, 0x1, 0x1);
        gbc.writeMem(0x5c7c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0x5c7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 01FB
        gbc.setState(0xef65, 0x7495, 0x5ca0, 0x6265, 0x6e83, 0xeca4, 0x1, 0x0);
        gbc.writeMem(0xef65, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7495, gbc.sp());
        EXPECT(0xef67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef65));
        EXPECT(0xb0, gbc.readMem(0xef66));
        // CB B0 01FC
        gbc.setState(0x19fb, 0x460d, 0x8b50, 0x4833, 0xeb7, 0x9539, 0x1, 0x0);
        gbc.writeMem(0x19fb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x460d, gbc.sp());
        EXPECT(0x19fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01FD
        gbc.setState(0x5170, 0x9b9f, 0x3490, 0x7cad, 0xfdea, 0x1c5c, 0x1, 0x1);
        gbc.writeMem(0x5170, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9b9f, gbc.sp());
        EXPECT(0x5172, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 01FE
        gbc.setState(0xca3f, 0xbc4, 0xcb80, 0x66e, 0xdc6e, 0x1418, 0x0, 0x0);
        gbc.writeMem(0xca3f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbc4, gbc.sp());
        EXPECT(0xca41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca3f));
        EXPECT(0xb0, gbc.readMem(0xca40));
        // CB B0 01FF
        gbc.setState(0x9506, 0xbcf4, 0x7750, 0x2ff5, 0x5eca, 0x3286, 0x1, 0x0);
        gbc.writeMem(0x9506, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbcf4, gbc.sp());
        EXPECT(0x9508, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9506));
        EXPECT(0xb0, gbc.readMem(0x9507));
        // CB B0 0200
        gbc.setState(0xcc79, 0x58f4, 0x8e20, 0x712e, 0xbf5b, 0xab3e, 0x1, 0x1);
        gbc.writeMem(0xcc79, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x58f4, gbc.sp());
        EXPECT(0xcc7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc79));
        EXPECT(0xb0, gbc.readMem(0xcc7a));
        // CB B0 0201
        gbc.setState(0x3199, 0xbd18, 0xc8e0, 0x693f, 0xd0d9, 0xe318, 0x0, 0x1);
        gbc.writeMem(0x3199, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xbd18, gbc.sp());
        EXPECT(0x319b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0202
        gbc.setState(0xad37, 0xc1ed, 0x19f0, 0xd260, 0xfa66, 0x6c28, 0x0, 0x0);
        gbc.writeMem(0xad37, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0xad39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad37));
        EXPECT(0xb0, gbc.readMem(0xad38));
        // CB B0 0204
        gbc.setState(0xa93b, 0x1324, 0xd490, 0x6dc1, 0x8a53, 0x9c6a, 0x0, 0x0);
        gbc.writeMem(0xa93b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1324, gbc.sp());
        EXPECT(0xa93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa93b));
        EXPECT(0xb0, gbc.readMem(0xa93c));
        // CB B0 0205
        gbc.setState(0x1b5e, 0x9d17, 0x8520, 0xa542, 0xd328, 0x9545, 0x0, 0x0);
        gbc.writeMem(0x1b5e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9d17, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0206
        gbc.setState(0x40b4, 0xec96, 0x5b80, 0xb04f, 0x282e, 0x8d28, 0x0, 0x0);
        gbc.writeMem(0x40b4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xec96, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0207
        gbc.setState(0x2882, 0xe808, 0xdc20, 0x79c1, 0x3793, 0x754d, 0x1, 0x0);
        gbc.writeMem(0x2882, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe808, gbc.sp());
        EXPECT(0x2884, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0208
        gbc.setState(0xb2f, 0x4aa4, 0xb50, 0xfd27, 0x87b, 0x2f24, 0x1, 0x0);
        gbc.writeMem(0xb2f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4aa4, gbc.sp());
        EXPECT(0xb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0209
        gbc.setState(0xb4cf, 0x67ca, 0x8870, 0xe45a, 0x480, 0x836f, 0x0, 0x1);
        gbc.writeMem(0xb4cf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x67ca, gbc.sp());
        EXPECT(0xb4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4cf));
        EXPECT(0xb0, gbc.readMem(0xb4d0));
        // CB B0 020A
        gbc.setState(0x8af0, 0x1711, 0x6ba0, 0xc8a, 0x9cee, 0x4a3b, 0x1, 0x1);
        gbc.writeMem(0x8af0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1711, gbc.sp());
        EXPECT(0x8af2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8af0));
        EXPECT(0xb0, gbc.readMem(0x8af1));
        // CB B0 020C
        gbc.setState(0x7c11, 0xf9de, 0x45a0, 0x3dc0, 0xfca9, 0xad2e, 0x0, 0x0);
        gbc.writeMem(0x7c11, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf9de, gbc.sp());
        EXPECT(0x7c13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 020D
        gbc.setState(0x742c, 0xe080, 0x6bb0, 0x3546, 0x5928, 0xe669, 0x0, 0x1);
        gbc.writeMem(0x742c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe080, gbc.sp());
        EXPECT(0x742e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 020E
        gbc.setState(0x7b65, 0x7736, 0xe2c0, 0x4211, 0x9f6d, 0x40a4, 0x0, 0x0);
        gbc.writeMem(0x7b65, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 020F
        gbc.setState(0x8676, 0x5bd7, 0x4d60, 0x7984, 0xa662, 0x8bf8, 0x1, 0x0);
        gbc.writeMem(0x8676, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5bd7, gbc.sp());
        EXPECT(0x8678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8676));
        EXPECT(0xb0, gbc.readMem(0x8677));
        // CB B0 0210
        gbc.setState(0x6c60, 0x1950, 0x7cb0, 0xf7a2, 0x62a7, 0x3c0f, 0x1, 0x0);
        gbc.writeMem(0x6c60, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1950, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0211
        gbc.setState(0x37b7, 0x3839, 0x1660, 0x888a, 0xd1d0, 0x319c, 0x1, 0x1);
        gbc.writeMem(0x37b7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3839, gbc.sp());
        EXPECT(0x37b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0212
        gbc.setState(0x85eb, 0x2ec4, 0xf8f0, 0xa38b, 0x66ba, 0x891a, 0x1, 0x0);
        gbc.writeMem(0x85eb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x2ec4, gbc.sp());
        EXPECT(0x85ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85eb));
        EXPECT(0xb0, gbc.readMem(0x85ec));
        // CB B0 0213
        gbc.setState(0x2cc1, 0x75bb, 0x95f0, 0xb135, 0x1572, 0xf90b, 0x0, 0x0);
        gbc.writeMem(0x2cc1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x75bb, gbc.sp());
        EXPECT(0x2cc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0214
        gbc.setState(0x8101, 0xa9d3, 0x92c0, 0x7450, 0x888a, 0xd991, 0x1, 0x0);
        gbc.writeMem(0x8101, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa9d3, gbc.sp());
        EXPECT(0x8103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8101));
        EXPECT(0xb0, gbc.readMem(0x8102));
        // CB B0 0215
        gbc.setState(0x2b18, 0xf154, 0x4680, 0x5752, 0xa4e7, 0xcfc7, 0x1, 0x1);
        gbc.writeMem(0x2b18, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf154, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0216
        gbc.setState(0x2668, 0x3143, 0x7b80, 0x72ac, 0xf519, 0xb038, 0x0, 0x1);
        gbc.writeMem(0x2668, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3143, gbc.sp());
        EXPECT(0x266a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0217
        gbc.setState(0x7f0a, 0xe842, 0x6d20, 0x6f9d, 0x5bf0, 0x8870, 0x1, 0x1);
        gbc.writeMem(0x7f0a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe842, gbc.sp());
        EXPECT(0x7f0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0218
        gbc.setState(0x339d, 0xeed4, 0x41c0, 0x97ef, 0x3978, 0xf137, 0x1, 0x1);
        gbc.writeMem(0x339d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xeed4, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0219
        gbc.setState(0x51de, 0x14e1, 0x1790, 0xa3a, 0xdf76, 0x3665, 0x1, 0x1);
        gbc.writeMem(0x51de, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x14e1, gbc.sp());
        EXPECT(0x51e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 021A
        gbc.setState(0x1e63, 0xec5b, 0x5860, 0x8e48, 0x684c, 0x3bb5, 0x1, 0x0);
        gbc.writeMem(0x1e63, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xec5b, gbc.sp());
        EXPECT(0x1e65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 021C
        gbc.setState(0xa331, 0xfd60, 0x660, 0x1ee, 0x8258, 0x97b3, 0x1, 0x1);
        gbc.writeMem(0xa331, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfd60, gbc.sp());
        EXPECT(0xa333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa331));
        EXPECT(0xb0, gbc.readMem(0xa332));
        // CB B0 021D
        gbc.setState(0x49ee, 0x6996, 0x2c00, 0x8cb1, 0xa537, 0x5260, 0x0, 0x0);
        gbc.writeMem(0x49ee, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 021E
        gbc.setState(0x1e41, 0x7898, 0xbd30, 0xadd6, 0x678d, 0xf221, 0x1, 0x1);
        gbc.writeMem(0x1e41, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7898, gbc.sp());
        EXPECT(0x1e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0220
        gbc.setState(0x46ea, 0x1b80, 0x990, 0xbec2, 0xbb6d, 0x5cd7, 0x0, 0x0);
        gbc.writeMem(0x46ea, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1b80, gbc.sp());
        EXPECT(0x46ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0221
        gbc.setState(0x956b, 0xe279, 0xe7f0, 0x9cfc, 0x707d, 0xeb7f, 0x0, 0x1);
        gbc.writeMem(0x956b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe279, gbc.sp());
        EXPECT(0x956d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x956b));
        EXPECT(0xb0, gbc.readMem(0x956c));
        // CB B0 0222
        gbc.setState(0x3435, 0x4f1, 0x7910, 0xc537, 0x341c, 0xb00e, 0x1, 0x0);
        gbc.writeMem(0x3435, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4f1, gbc.sp());
        EXPECT(0x3437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0223
        gbc.setState(0x9b67, 0x8a45, 0x8020, 0x4273, 0xef09, 0xf574, 0x1, 0x1);
        gbc.writeMem(0x9b67, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8a45, gbc.sp());
        EXPECT(0x9b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b67));
        EXPECT(0xb0, gbc.readMem(0x9b68));
        // CB B0 0224
        gbc.setState(0x57e9, 0xbbfe, 0xe550, 0x5a23, 0x109, 0x4b1, 0x1, 0x0);
        gbc.writeMem(0x57e9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbbfe, gbc.sp());
        EXPECT(0x57eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0225
        gbc.setState(0x33ef, 0xb635, 0x2ec0, 0xd80, 0x3d34, 0x1629, 0x0, 0x0);
        gbc.writeMem(0x33ef, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb635, gbc.sp());
        EXPECT(0x33f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0227
        gbc.setState(0xc4fb, 0x202b, 0x5b30, 0x4f40, 0x6e8c, 0xaa6f, 0x1, 0x0);
        gbc.writeMem(0xc4fb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0xc4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4fb));
        EXPECT(0xb0, gbc.readMem(0xc4fc));
        // CB B0 0228
        gbc.setState(0x5c67, 0xb147, 0xfcf0, 0x17d6, 0x94b9, 0x8c27, 0x1, 0x0);
        gbc.writeMem(0x5c67, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb147, gbc.sp());
        EXPECT(0x5c69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 022A
        gbc.setState(0xc47c, 0x6f27, 0x3790, 0xedc6, 0xbafc, 0x8fda, 0x1, 0x0);
        gbc.writeMem(0xc47c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6f27, gbc.sp());
        EXPECT(0xc47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc47c));
        EXPECT(0xb0, gbc.readMem(0xc47d));
        // CB B0 022B
        gbc.setState(0x44f8, 0xebe1, 0x2cc0, 0xf635, 0x5cc3, 0xca17, 0x1, 0x1);
        gbc.writeMem(0x44f8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xebe1, gbc.sp());
        EXPECT(0x44fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 022C
        gbc.setState(0x91d2, 0x8922, 0xf50, 0xd60a, 0x1c3c, 0x5d81, 0x1, 0x1);
        gbc.writeMem(0x91d2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x91d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91d2));
        EXPECT(0xb0, gbc.readMem(0x91d3));
        // CB B0 022D
        gbc.setState(0xed9f, 0x4f51, 0xc130, 0x2350, 0x955d, 0xc643, 0x1, 0x0);
        gbc.writeMem(0xed9f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x4f51, gbc.sp());
        EXPECT(0xeda1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9f));
        EXPECT(0xb0, gbc.readMem(0xeda0));
        // CB B0 022E
        gbc.setState(0xa06e, 0x602e, 0xa210, 0xafa6, 0x8713, 0xa908, 0x1, 0x0);
        gbc.writeMem(0xa06e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x602e, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06e));
        EXPECT(0xb0, gbc.readMem(0xa06f));
        // CB B0 022F
        gbc.setState(0x8472, 0x546d, 0x1180, 0x5afa, 0x551c, 0x16c9, 0x1, 0x1);
        gbc.writeMem(0x8472, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x546d, gbc.sp());
        EXPECT(0x8474, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8472));
        EXPECT(0xb0, gbc.readMem(0x8473));
        // CB B0 0230
        gbc.setState(0x64d8, 0x7d1c, 0xde00, 0xa65, 0x2ceb, 0x59af, 0x0, 0x0);
        gbc.writeMem(0x64d8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0x64da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0232
        gbc.setState(0xe30, 0xac99, 0xdf70, 0x5460, 0x96e3, 0x6d3c, 0x0, 0x0);
        gbc.writeMem(0xe30, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xac99, gbc.sp());
        EXPECT(0xe32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0233
        gbc.setState(0x317c, 0xa5da, 0xc8f0, 0x35c4, 0xae12, 0xde73, 0x1, 0x0);
        gbc.writeMem(0x317c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa5da, gbc.sp());
        EXPECT(0x317e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0234
        gbc.setState(0xdf62, 0xd7f0, 0x3420, 0x1a96, 0x6897, 0x4074, 0x1, 0x1);
        gbc.writeMem(0xdf62, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd7f0, gbc.sp());
        EXPECT(0xdf64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf62));
        EXPECT(0xb0, gbc.readMem(0xdf63));
        // CB B0 0235
        gbc.setState(0xc79c, 0x70de, 0x630, 0x63f8, 0x19d6, 0x12ea, 0x0, 0x0);
        gbc.writeMem(0xc79c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x70de, gbc.sp());
        EXPECT(0xc79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc79c));
        EXPECT(0xb0, gbc.readMem(0xc79d));
        // CB B0 0236
        gbc.setState(0x98b2, 0x5bf6, 0x7ce0, 0x4f17, 0x34d7, 0xb75, 0x1, 0x0);
        gbc.writeMem(0x98b2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5bf6, gbc.sp());
        EXPECT(0x98b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98b2));
        EXPECT(0xb0, gbc.readMem(0x98b3));
        // CB B0 0237
        gbc.setState(0xea02, 0xc328, 0xe8c0, 0x460c, 0xbb6a, 0x5ff0, 0x1, 0x0);
        gbc.writeMem(0xea02, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc328, gbc.sp());
        EXPECT(0xea04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea02));
        EXPECT(0xb0, gbc.readMem(0xea03));
        // CB B0 0238
        gbc.setState(0x5bb7, 0x3bde, 0x38d0, 0x5202, 0xbe5b, 0x79e9, 0x0, 0x1);
        gbc.writeMem(0x5bb7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x3bde, gbc.sp());
        EXPECT(0x5bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0239
        gbc.setState(0xeeba, 0x6b3, 0xed30, 0xc85a, 0x13c, 0x65e, 0x1, 0x0);
        gbc.writeMem(0xeeba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x6b3, gbc.sp());
        EXPECT(0xeebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeba));
        EXPECT(0xb0, gbc.readMem(0xeebb));
        // CB B0 023A
        gbc.setState(0x27d7, 0xcebf, 0x8640, 0x81a0, 0x15e6, 0x2436, 0x1, 0x1);
        gbc.writeMem(0x27d7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcebf, gbc.sp());
        EXPECT(0x27d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 023C
        gbc.setState(0x9d2c, 0x1050, 0x5c50, 0x98b, 0xcd58, 0x1d2f, 0x0, 0x1);
        gbc.writeMem(0x9d2c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x1050, gbc.sp());
        EXPECT(0x9d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2c));
        EXPECT(0xb0, gbc.readMem(0x9d2d));
        // CB B0 023E
        gbc.setState(0xa455, 0x6d2e, 0xe4e0, 0xcf1e, 0xda11, 0x718a, 0x0, 0x0);
        gbc.writeMem(0xa455, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x6d2e, gbc.sp());
        EXPECT(0xa457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa455));
        EXPECT(0xb0, gbc.readMem(0xa456));
        // CB B0 023F
        gbc.setState(0xb96e, 0x9669, 0x19c0, 0xe05b, 0x335a, 0x47b3, 0x1, 0x1);
        gbc.writeMem(0xb96e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9669, gbc.sp());
        EXPECT(0xb970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96e));
        EXPECT(0xb0, gbc.readMem(0xb96f));
        // CB B0 0240
        gbc.setState(0x9966, 0x2ec5, 0x5f00, 0x646b, 0xcd13, 0x27e5, 0x1, 0x0);
        gbc.writeMem(0x9966, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2ec5, gbc.sp());
        EXPECT(0x9968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9966));
        EXPECT(0xb0, gbc.readMem(0x9967));
        // CB B0 0241
        gbc.setState(0x651c, 0x132d, 0x3330, 0xfb09, 0xa477, 0xe468, 0x1, 0x1);
        gbc.writeMem(0x651c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0x651e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0242
        gbc.setState(0x17df, 0xa54f, 0x4f70, 0x3e4e, 0xd0b, 0x6ae8, 0x0, 0x1);
        gbc.writeMem(0x17df, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xa54f, gbc.sp());
        EXPECT(0x17e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0243
        gbc.setState(0xb8b3, 0xbf64, 0xd4f0, 0x37a6, 0xab0, 0xe0e4, 0x1, 0x1);
        gbc.writeMem(0xb8b3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xbf64, gbc.sp());
        EXPECT(0xb8b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8b3));
        EXPECT(0xb0, gbc.readMem(0xb8b4));
        // CB B0 0244
        gbc.setState(0xa872, 0xfc2c, 0xee20, 0x8aaf, 0x2e76, 0xde6a, 0x1, 0x1);
        gbc.writeMem(0xa872, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xfc2c, gbc.sp());
        EXPECT(0xa874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa872));
        EXPECT(0xb0, gbc.readMem(0xa873));
        // CB B0 0245
        gbc.setState(0x8a62, 0xeaba, 0xd5a0, 0x17d5, 0xf626, 0xb1ec, 0x0, 0x0);
        gbc.writeMem(0x8a62, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xeaba, gbc.sp());
        EXPECT(0x8a64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a62));
        EXPECT(0xb0, gbc.readMem(0x8a63));
        // CB B0 0246
        gbc.setState(0x4a87, 0x70da, 0x9ad0, 0x46f4, 0x2423, 0xec8f, 0x0, 0x1);
        gbc.writeMem(0x4a87, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70da, gbc.sp());
        EXPECT(0x4a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0247
        gbc.setState(0x92b9, 0xa2dc, 0xf320, 0xc530, 0xc6ae, 0xc551, 0x0, 0x0);
        gbc.writeMem(0x92b9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa2dc, gbc.sp());
        EXPECT(0x92bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92b9));
        EXPECT(0xb0, gbc.readMem(0x92ba));
        // CB B0 0248
        gbc.setState(0xd096, 0xe012, 0x64b0, 0x621b, 0x6a81, 0xebe2, 0x0, 0x1);
        gbc.writeMem(0xd096, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe012, gbc.sp());
        EXPECT(0xd098, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd096));
        EXPECT(0xb0, gbc.readMem(0xd097));
        // CB B0 0249
        gbc.setState(0x6514, 0x9c66, 0xf5c0, 0x3f4f, 0x5864, 0xaba4, 0x0, 0x0);
        gbc.writeMem(0x6514, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9c66, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 024A
        gbc.setState(0x2f26, 0x57c7, 0xb460, 0x28f1, 0xeed, 0x24b1, 0x0, 0x1);
        gbc.writeMem(0x2f26, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x57c7, gbc.sp());
        EXPECT(0x2f28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 024B
        gbc.setState(0x22ab, 0x9650, 0xd490, 0xbead, 0xfd04, 0x8f58, 0x0, 0x0);
        gbc.writeMem(0x22ab, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9650, gbc.sp());
        EXPECT(0x22ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 024C
        gbc.setState(0x776a, 0xa05, 0xb250, 0xd935, 0x4332, 0xfc7e, 0x1, 0x1);
        gbc.writeMem(0x776a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xa05, gbc.sp());
        EXPECT(0x776c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 024D
        gbc.setState(0x8fd2, 0xc901, 0x5b60, 0x4763, 0xb11e, 0xdf34, 0x1, 0x0);
        gbc.writeMem(0x8fd2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc901, gbc.sp());
        EXPECT(0x8fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fd2));
        EXPECT(0xb0, gbc.readMem(0x8fd3));
        // CB B0 024E
        gbc.setState(0x127f, 0x3d89, 0xab50, 0x7937, 0xb542, 0x175, 0x1, 0x1);
        gbc.writeMem(0x127f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3d89, gbc.sp());
        EXPECT(0x1281, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 024F
        gbc.setState(0x17ee, 0x9b14, 0x2570, 0x7a72, 0x1e35, 0xc1f, 0x0, 0x1);
        gbc.writeMem(0x17ee, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9b14, gbc.sp());
        EXPECT(0x17f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0250
        gbc.setState(0x8a7c, 0x6fa5, 0xc550, 0xb73b, 0x78d0, 0x7cb2, 0x1, 0x0);
        gbc.writeMem(0x8a7c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6fa5, gbc.sp());
        EXPECT(0x8a7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a7c));
        EXPECT(0xb0, gbc.readMem(0x8a7d));
        // CB B0 0251
        gbc.setState(0x3be5, 0x1be8, 0xf990, 0x61cd, 0x38cc, 0x6ed, 0x0, 0x0);
        gbc.writeMem(0x3be5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1be8, gbc.sp());
        EXPECT(0x3be7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0252
        gbc.setState(0x273c, 0x932e, 0xab10, 0x4d5d, 0x8fe9, 0xb219, 0x0, 0x0);
        gbc.writeMem(0x273c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x932e, gbc.sp());
        EXPECT(0x273e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0254
        gbc.setState(0x4cba, 0xdfc8, 0x8450, 0xb62d, 0xda19, 0xc297, 0x0, 0x0);
        gbc.writeMem(0x4cba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xdfc8, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0255
        gbc.setState(0x323e, 0xd887, 0xbb10, 0xa49b, 0x34c9, 0xd5f7, 0x1, 0x0);
        gbc.writeMem(0x323e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd887, gbc.sp());
        EXPECT(0x3240, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0256
        gbc.setState(0x653, 0xc7fd, 0xdba0, 0x96b0, 0x7111, 0x5f6b, 0x1, 0x1);
        gbc.writeMem(0x653, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xc7fd, gbc.sp());
        EXPECT(0x655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0257
        gbc.setState(0x9cb9, 0xe576, 0xf4f0, 0xf507, 0xa238, 0x568c, 0x0, 0x1);
        gbc.writeMem(0x9cb9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xe576, gbc.sp());
        EXPECT(0x9cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb9));
        EXPECT(0xb0, gbc.readMem(0x9cba));
        // CB B0 0258
        gbc.setState(0x2550, 0xa8d4, 0x9e30, 0x650c, 0xfcf2, 0xbcd6, 0x1, 0x0);
        gbc.writeMem(0x2550, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xa8d4, gbc.sp());
        EXPECT(0x2552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0259
        gbc.setState(0xc992, 0x7452, 0xc20, 0x5f03, 0x4cc6, 0x7a21, 0x1, 0x1);
        gbc.writeMem(0xc992, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0xc994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc992));
        EXPECT(0xb0, gbc.readMem(0xc993));
        // CB B0 025A
        gbc.setState(0x386, 0xae6e, 0x11e0, 0x423f, 0x5bca, 0x9ab0, 0x1, 0x0);
        gbc.writeMem(0x386, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xae6e, gbc.sp());
        EXPECT(0x388, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 025B
        gbc.setState(0xb5b, 0x7e82, 0x580, 0x6de9, 0x353c, 0x4039, 0x0, 0x1);
        gbc.writeMem(0xb5b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7e82, gbc.sp());
        EXPECT(0xb5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 025C
        gbc.setState(0xb8a7, 0x743f, 0xa200, 0x9f04, 0xa287, 0x55b8, 0x0, 0x1);
        gbc.writeMem(0xb8a7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x743f, gbc.sp());
        EXPECT(0xb8a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a7));
        EXPECT(0xb0, gbc.readMem(0xb8a8));
        // CB B0 025D
        gbc.setState(0x7cbb, 0x80ec, 0xd10, 0x7aca, 0x827a, 0x1906, 0x0, 0x1);
        gbc.writeMem(0x7cbb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x80ec, gbc.sp());
        EXPECT(0x7cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 025E
        gbc.setState(0x6930, 0xeb92, 0x82c0, 0x4902, 0x1236, 0xee01, 0x1, 0x1);
        gbc.writeMem(0x6930, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xeb92, gbc.sp());
        EXPECT(0x6932, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 025F
        gbc.setState(0xcc85, 0xbae0, 0xf050, 0x5f3f, 0x8413, 0x219f, 0x1, 0x0);
        gbc.writeMem(0xcc85, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xbae0, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc85));
        EXPECT(0xb0, gbc.readMem(0xcc86));
        // CB B0 0260
        gbc.setState(0x46f4, 0xd898, 0x4380, 0x9122, 0x60c3, 0x97d7, 0x1, 0x0);
        gbc.writeMem(0x46f4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd898, gbc.sp());
        EXPECT(0x46f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0261
        gbc.setState(0x1b73, 0xc2ac, 0x7e50, 0xfe72, 0x8cd9, 0xd7c, 0x1, 0x1);
        gbc.writeMem(0x1b73, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc2ac, gbc.sp());
        EXPECT(0x1b75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0262
        gbc.setState(0x456d, 0x2956, 0x4490, 0x8d23, 0x6cf8, 0xc29c, 0x1, 0x0);
        gbc.writeMem(0x456d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2956, gbc.sp());
        EXPECT(0x456f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0263
        gbc.setState(0xc09b, 0x83e8, 0x8e00, 0x706c, 0x12dd, 0xdf42, 0x0, 0x0);
        gbc.writeMem(0xc09b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x83e8, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc09b));
        EXPECT(0xb0, gbc.readMem(0xc09c));
        // CB B0 0265
        gbc.setState(0x935f, 0x2006, 0x96b0, 0xc2a7, 0x331c, 0x18e, 0x0, 0x1);
        gbc.writeMem(0x935f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2006, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0xb0, gbc.readMem(0x9360));
        // CB B0 0267
        gbc.setState(0xec5b, 0xc59a, 0x880, 0x7878, 0x9ae5, 0x6a56, 0x0, 0x0);
        gbc.writeMem(0xec5b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc59a, gbc.sp());
        EXPECT(0xec5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5b));
        EXPECT(0xb0, gbc.readMem(0xec5c));
        // CB B0 0268
        gbc.setState(0x2897, 0x7baa, 0x4150, 0x127a, 0xf15a, 0x91c0, 0x0, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7baa, gbc.sp());
        EXPECT(0x2899, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0269
        gbc.setState(0x27c4, 0x29db, 0x2c20, 0x1ca2, 0x3692, 0x93bb, 0x0, 0x0);
        gbc.writeMem(0x27c4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x29db, gbc.sp());
        EXPECT(0x27c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 026A
        gbc.setState(0xd8, 0x97b4, 0x3d80, 0xb37f, 0xad2, 0x1779, 0x0, 0x1);
        gbc.writeMem(0xd8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x97b4, gbc.sp());
        EXPECT(0xda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 026C
        gbc.setState(0xe76b, 0xd20f, 0xdea0, 0xb598, 0xa96a, 0x1e06, 0x1, 0x0);
        gbc.writeMem(0xe76b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd20f, gbc.sp());
        EXPECT(0xe76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76b));
        EXPECT(0xb0, gbc.readMem(0xe76c));
        // CB B0 026D
        gbc.setState(0x28cc, 0x9e89, 0x4340, 0x14f5, 0x7e72, 0x6806, 0x1, 0x0);
        gbc.writeMem(0x28cc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9e89, gbc.sp());
        EXPECT(0x28ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 026E
        gbc.setState(0xaf8, 0xf2f0, 0x1a90, 0xf6bf, 0xbb2e, 0x38fb, 0x0, 0x1);
        gbc.writeMem(0xaf8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf2f0, gbc.sp());
        EXPECT(0xafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 026F
        gbc.setState(0x1b37, 0x555d, 0x2fa0, 0x7314, 0x3c84, 0x856f, 0x1, 0x1);
        gbc.writeMem(0x1b37, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x555d, gbc.sp());
        EXPECT(0x1b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0270
        gbc.setState(0x3512, 0xc536, 0x24f0, 0x696c, 0xe31d, 0x796f, 0x0, 0x0);
        gbc.writeMem(0x3512, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc536, gbc.sp());
        EXPECT(0x3514, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0271
        gbc.setState(0xc2ba, 0x137c, 0x7d30, 0xa959, 0x1a19, 0x2e2c, 0x0, 0x0);
        gbc.writeMem(0xc2ba, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x137c, gbc.sp());
        EXPECT(0xc2bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ba));
        EXPECT(0xb0, gbc.readMem(0xc2bb));
        // CB B0 0272
        gbc.setState(0x8dc9, 0x3113, 0x9820, 0xd737, 0xa14a, 0x47f5, 0x1, 0x0);
        gbc.writeMem(0x8dc9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x3113, gbc.sp());
        EXPECT(0x8dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc9));
        EXPECT(0xb0, gbc.readMem(0x8dca));
        // CB B0 0273
        gbc.setState(0xadc5, 0x211b, 0xdc80, 0x264d, 0x73db, 0x6449, 0x1, 0x0);
        gbc.writeMem(0xadc5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0xadc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc5));
        EXPECT(0xb0, gbc.readMem(0xadc6));
        // CB B0 0274
        gbc.setState(0xe2f, 0x85d9, 0x3530, 0xdb24, 0xe688, 0x770a, 0x0, 0x1);
        gbc.writeMem(0xe2f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x85d9, gbc.sp());
        EXPECT(0xe31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0275
        gbc.setState(0xc298, 0xdc41, 0xacd0, 0xed62, 0xa7ad, 0xc567, 0x1, 0x0);
        gbc.writeMem(0xc298, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xdc41, gbc.sp());
        EXPECT(0xc29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc298));
        EXPECT(0xb0, gbc.readMem(0xc299));
        // CB B0 0276
        gbc.setState(0x2afd, 0x3761, 0x4ea0, 0x20dd, 0x62b, 0x6d4b, 0x0, 0x0);
        gbc.writeMem(0x2afd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3761, gbc.sp());
        EXPECT(0x2aff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0277
        gbc.setState(0x5111, 0xb16f, 0xcca0, 0x5bbc, 0x9a7c, 0x4bda, 0x0, 0x0);
        gbc.writeMem(0x5111, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb16f, gbc.sp());
        EXPECT(0x5113, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0278
        gbc.setState(0x5fdc, 0x19a0, 0x6510, 0x5cab, 0xd8c1, 0x114e, 0x0, 0x1);
        gbc.writeMem(0x5fdc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x19a0, gbc.sp());
        EXPECT(0x5fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0279
        gbc.setState(0xdaca, 0xdb3d, 0xbb00, 0x1c47, 0xedfd, 0xc36b, 0x1, 0x1);
        gbc.writeMem(0xdaca, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xdb3d, gbc.sp());
        EXPECT(0xdacc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaca));
        EXPECT(0xb0, gbc.readMem(0xdacb));
        // CB B0 027A
        gbc.setState(0x2995, 0xaee5, 0x8cf0, 0x64ab, 0xe6e2, 0xb6e5, 0x1, 0x1);
        gbc.writeMem(0x2995, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x2997, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 027B
        gbc.setState(0xdeeb, 0xf8d, 0xfda0, 0x4352, 0x5e7b, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0xdeeb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf8d, gbc.sp());
        EXPECT(0xdeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeeb));
        EXPECT(0xb0, gbc.readMem(0xdeec));
        // CB B0 027C
        gbc.setState(0x994e, 0x8e8d, 0xc7e0, 0x505e, 0x289, 0x5cb1, 0x1, 0x0);
        gbc.writeMem(0x994e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8e8d, gbc.sp());
        EXPECT(0x9950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994e));
        EXPECT(0xb0, gbc.readMem(0x994f));
        // CB B0 027D
        gbc.setState(0xe632, 0xe124, 0x3f60, 0xf412, 0x18f7, 0x9533, 0x0, 0x1);
        gbc.writeMem(0xe632, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xe124, gbc.sp());
        EXPECT(0xe634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe632));
        EXPECT(0xb0, gbc.readMem(0xe633));
        // CB B0 027E
        gbc.setState(0xe59, 0xf8e5, 0xdb90, 0x1843, 0xa9f0, 0xe332, 0x1, 0x1);
        gbc.writeMem(0xe59, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0xe5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 027F
        gbc.setState(0x8b9a, 0x9f39, 0xc90, 0xcbbb, 0x3da3, 0x8019, 0x1, 0x1);
        gbc.writeMem(0x8b9a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f39, gbc.sp());
        EXPECT(0x8b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b9a));
        EXPECT(0xb0, gbc.readMem(0x8b9b));
        // CB B0 0280
        gbc.setState(0x7131, 0x8bea, 0xcb50, 0x5d3a, 0x7f11, 0x65e, 0x1, 0x1);
        gbc.writeMem(0x7131, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8bea, gbc.sp());
        EXPECT(0x7133, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0282
        gbc.setState(0xcac2, 0xb5b8, 0x8ee0, 0x5b4c, 0x724d, 0x6b85, 0x1, 0x1);
        gbc.writeMem(0xcac2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb5b8, gbc.sp());
        EXPECT(0xcac4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcac2));
        EXPECT(0xb0, gbc.readMem(0xcac3));
        // CB B0 0283
        gbc.setState(0xf44, 0x4525, 0x5610, 0x68d5, 0x20d, 0x74b, 0x1, 0x1);
        gbc.writeMem(0xf44, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x4525, gbc.sp());
        EXPECT(0xf46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0284
        gbc.setState(0xaf00, 0x44e8, 0x8ca0, 0xfbdf, 0xcd14, 0xd299, 0x1, 0x1);
        gbc.writeMem(0xaf00, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0xaf02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf00));
        EXPECT(0xb0, gbc.readMem(0xaf01));
        // CB B0 0285
        gbc.setState(0xdc0f, 0x48d2, 0x96c0, 0x631a, 0x1d15, 0xa2b, 0x1, 0x1);
        gbc.writeMem(0xdc0f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x48d2, gbc.sp());
        EXPECT(0xdc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc0f));
        EXPECT(0xb0, gbc.readMem(0xdc10));
        // CB B0 0286
        gbc.setState(0x5e4b, 0xb60d, 0xf0e0, 0xd2e3, 0xd026, 0x2f02, 0x0, 0x1);
        gbc.writeMem(0x5e4b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb60d, gbc.sp());
        EXPECT(0x5e4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0287
        gbc.setState(0x900f, 0xb206, 0x5640, 0xe246, 0x675d, 0xe43e, 0x1, 0x1);
        gbc.writeMem(0x900f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x9011, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x900f));
        EXPECT(0xb0, gbc.readMem(0x9010));
        // CB B0 0288
        gbc.setState(0xbaea, 0x4a2b, 0x17d0, 0xa8b6, 0x87f1, 0x236f, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x4a2b, gbc.sp());
        EXPECT(0xbaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaea));
        EXPECT(0xb0, gbc.readMem(0xbaeb));
        // CB B0 0289
        gbc.setState(0x7ae6, 0x499f, 0x8bd0, 0x9175, 0x2ee6, 0x4986, 0x1, 0x1);
        gbc.writeMem(0x7ae6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x499f, gbc.sp());
        EXPECT(0x7ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 028A
        gbc.setState(0x55d, 0xb7ef, 0x53d0, 0x5c1a, 0x61b6, 0xc3ba, 0x0, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xb7ef, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 028B
        gbc.setState(0x93b6, 0x2f39, 0x10a0, 0x2aec, 0xb974, 0x4ba5, 0x1, 0x1);
        gbc.writeMem(0x93b6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2f39, gbc.sp());
        EXPECT(0x93b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93b6));
        EXPECT(0xb0, gbc.readMem(0x93b7));
        // CB B0 028C
        gbc.setState(0x3a52, 0xd379, 0x9f30, 0x2ec8, 0x9551, 0xcf8, 0x1, 0x1);
        gbc.writeMem(0x3a52, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd379, gbc.sp());
        EXPECT(0x3a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 028D
        gbc.setState(0x65f4, 0xd0ec, 0x6fb0, 0x14e1, 0xf553, 0x3623, 0x1, 0x1);
        gbc.writeMem(0x65f4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd0ec, gbc.sp());
        EXPECT(0x65f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 028E
        gbc.setState(0x4762, 0x6f21, 0xe840, 0xeeb3, 0xa693, 0x9f92, 0x1, 0x0);
        gbc.writeMem(0x4762, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6f21, gbc.sp());
        EXPECT(0x4764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 028F
        gbc.setState(0xb0f5, 0x4595, 0x79b0, 0x9cdc, 0xfef5, 0x6ae9, 0x0, 0x1);
        gbc.writeMem(0xb0f5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4595, gbc.sp());
        EXPECT(0xb0f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0f5));
        EXPECT(0xb0, gbc.readMem(0xb0f6));
        // CB B0 0290
        gbc.setState(0xad09, 0xf2a5, 0xd740, 0xaa39, 0x1975, 0x50a8, 0x0, 0x0);
        gbc.writeMem(0xad09, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0xad0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad09));
        EXPECT(0xb0, gbc.readMem(0xad0a));
        // CB B0 0291
        gbc.setState(0x696d, 0xcccb, 0xf100, 0x6af4, 0x67b5, 0x19a0, 0x0, 0x0);
        gbc.writeMem(0x696d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcccb, gbc.sp());
        EXPECT(0x696f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0293
        gbc.setState(0x4d34, 0xbd73, 0x70c0, 0xc746, 0x25ce, 0x80d1, 0x0, 0x0);
        gbc.writeMem(0x4d34, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xbd73, gbc.sp());
        EXPECT(0x4d36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0294
        gbc.setState(0xa4b5, 0x907, 0xa3d0, 0x297c, 0xff81, 0x7f89, 0x0, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x907, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b5));
        EXPECT(0xb0, gbc.readMem(0xa4b6));
        // CB B0 0295
        gbc.setState(0xc571, 0x4ea4, 0xbdb0, 0x4130, 0xe120, 0xf3f3, 0x0, 0x0);
        gbc.writeMem(0xc571, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4ea4, gbc.sp());
        EXPECT(0xc573, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc571));
        EXPECT(0xb0, gbc.readMem(0xc572));
        // CB B0 0296
        gbc.setState(0xdd1b, 0xdaf1, 0xaaf0, 0x2a95, 0x4a21, 0x9e2a, 0x1, 0x0);
        gbc.writeMem(0xdd1b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdaf1, gbc.sp());
        EXPECT(0xdd1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd1b));
        EXPECT(0xb0, gbc.readMem(0xdd1c));
        // CB B0 0297
        gbc.setState(0x2a1f, 0x3976, 0x2240, 0x71a9, 0x6f80, 0x7a5b, 0x0, 0x1);
        gbc.writeMem(0x2a1f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0x2a21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0298
        gbc.setState(0x9890, 0x330, 0xaf70, 0x32fd, 0x9b61, 0xa0d9, 0x1, 0x1);
        gbc.writeMem(0x9890, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x330, gbc.sp());
        EXPECT(0x9892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9890));
        EXPECT(0xb0, gbc.readMem(0x9891));
        // CB B0 0299
        gbc.setState(0xc504, 0x3ab6, 0xb220, 0x6ff4, 0xe05a, 0x748a, 0x1, 0x1);
        gbc.writeMem(0xc504, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3ab6, gbc.sp());
        EXPECT(0xc506, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc504));
        EXPECT(0xb0, gbc.readMem(0xc505));
        // CB B0 029A
        gbc.setState(0xb37e, 0x644a, 0x8780, 0xecb9, 0x6ef8, 0x9385, 0x0, 0x0);
        gbc.writeMem(0xb37e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x644a, gbc.sp());
        EXPECT(0xb380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb37e));
        EXPECT(0xb0, gbc.readMem(0xb37f));
        // CB B0 029B
        gbc.setState(0xdb71, 0xcd59, 0x48f0, 0xbec5, 0x8785, 0x21de, 0x1, 0x1);
        gbc.writeMem(0xdb71, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xcd59, gbc.sp());
        EXPECT(0xdb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb71));
        EXPECT(0xb0, gbc.readMem(0xdb72));
        // CB B0 029C
        gbc.setState(0x45e8, 0x7518, 0x5030, 0x7390, 0x8030, 0xc624, 0x0, 0x0);
        gbc.writeMem(0x45e8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x7518, gbc.sp());
        EXPECT(0x45ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 029D
        gbc.setState(0x5940, 0x111f, 0x3ea0, 0xc2a0, 0xe57b, 0x611d, 0x1, 0x0);
        gbc.writeMem(0x5940, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x111f, gbc.sp());
        EXPECT(0x5942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 029E
        gbc.setState(0xb79f, 0x80c1, 0x5570, 0xc79e, 0x7f36, 0x3e5f, 0x0, 0x0);
        gbc.writeMem(0xb79f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x80c1, gbc.sp());
        EXPECT(0xb7a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79f));
        EXPECT(0xb0, gbc.readMem(0xb7a0));
        // CB B0 029F
        gbc.setState(0xd084, 0x105, 0xbd20, 0x86c, 0x443, 0x420f, 0x0, 0x1);
        gbc.writeMem(0xd084, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x105, gbc.sp());
        EXPECT(0xd086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd084));
        EXPECT(0xb0, gbc.readMem(0xd085));
        // CB B0 02A0
        gbc.setState(0xbaf4, 0xa2fe, 0x9c80, 0xa426, 0x20dc, 0x7ae2, 0x0, 0x1);
        gbc.writeMem(0xbaf4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa2fe, gbc.sp());
        EXPECT(0xbaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf4));
        EXPECT(0xb0, gbc.readMem(0xbaf5));
        // CB B0 02A1
        gbc.setState(0xe2f5, 0x231d, 0x3210, 0x66c4, 0xa190, 0x5780, 0x1, 0x0);
        gbc.writeMem(0xe2f5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x231d, gbc.sp());
        EXPECT(0xe2f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2f5));
        EXPECT(0xb0, gbc.readMem(0xe2f6));
        // CB B0 02A2
        gbc.setState(0xe545, 0xbea3, 0x36c0, 0x3796, 0xa1a5, 0x6d0b, 0x1, 0x0);
        gbc.writeMem(0xe545, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbea3, gbc.sp());
        EXPECT(0xe547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe545));
        EXPECT(0xb0, gbc.readMem(0xe546));
        // CB B0 02A3
        gbc.setState(0xa8e2, 0xaa51, 0x1890, 0x53e8, 0x7202, 0xc9de, 0x1, 0x1);
        gbc.writeMem(0xa8e2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xaa51, gbc.sp());
        EXPECT(0xa8e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e2));
        EXPECT(0xb0, gbc.readMem(0xa8e3));
        // CB B0 02A4
        gbc.setState(0xbf3b, 0x550d, 0xf8d0, 0x835a, 0xfaed, 0x5bbc, 0x1, 0x1);
        gbc.writeMem(0xbf3b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x550d, gbc.sp());
        EXPECT(0xbf3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf3b));
        EXPECT(0xb0, gbc.readMem(0xbf3c));
        // CB B0 02A6
        gbc.setState(0xef7d, 0x94f8, 0x7160, 0xd3d2, 0xcca7, 0xc863, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x94f8, gbc.sp());
        EXPECT(0xef7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef7d));
        EXPECT(0xb0, gbc.readMem(0xef7e));
        // CB B0 02A7
        gbc.setState(0x5216, 0x2a5f, 0xe480, 0xca5b, 0x1fec, 0xc8d0, 0x0, 0x0);
        gbc.writeMem(0x5216, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2a5f, gbc.sp());
        EXPECT(0x5218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02A8
        gbc.setState(0xecbf, 0x4db0, 0x4d90, 0xb78d, 0x5b73, 0x5166, 0x1, 0x0);
        gbc.writeMem(0xecbf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4db0, gbc.sp());
        EXPECT(0xecc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecbf));
        EXPECT(0xb0, gbc.readMem(0xecc0));
        // CB B0 02A9
        gbc.setState(0xa380, 0x9ca9, 0x7560, 0xf291, 0xbb4, 0x483e, 0x0, 0x0);
        gbc.writeMem(0xa380, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9ca9, gbc.sp());
        EXPECT(0xa382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa380));
        EXPECT(0xb0, gbc.readMem(0xa381));
        // CB B0 02AA
        gbc.setState(0xd9c4, 0xc0bf, 0x5330, 0x6196, 0xff77, 0xd23b, 0x1, 0x1);
        gbc.writeMem(0xd9c4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc0bf, gbc.sp());
        EXPECT(0xd9c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c4));
        EXPECT(0xb0, gbc.readMem(0xd9c5));
        // CB B0 02AB
        gbc.setState(0x566c, 0xda4b, 0x9120, 0x5bc3, 0x689d, 0x1b99, 0x0, 0x0);
        gbc.writeMem(0x566c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xda4b, gbc.sp());
        EXPECT(0x566e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02AC
        gbc.setState(0x808c, 0x1007, 0x93a0, 0xee04, 0x9b18, 0x1036, 0x1, 0x1);
        gbc.writeMem(0x808c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1007, gbc.sp());
        EXPECT(0x808e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808c));
        EXPECT(0xb0, gbc.readMem(0x808d));
        // CB B0 02AD
        gbc.setState(0x5e9a, 0x462c, 0x59f0, 0xeae1, 0x11c7, 0x8832, 0x1, 0x1);
        gbc.writeMem(0x5e9a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x462c, gbc.sp());
        EXPECT(0x5e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02AE
        gbc.setState(0x4a36, 0xf368, 0x4480, 0xdfb7, 0x60e8, 0xdfdb, 0x0, 0x0);
        gbc.writeMem(0x4a36, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf368, gbc.sp());
        EXPECT(0x4a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02AF
        gbc.setState(0xcb9f, 0x7f2a, 0x50a0, 0x62a8, 0xa51a, 0x5dd0, 0x0, 0x0);
        gbc.writeMem(0xcb9f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7f2a, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb9f));
        EXPECT(0xb0, gbc.readMem(0xcba0));
        // CB B0 02B0
        gbc.setState(0xc22f, 0xb6ad, 0x7bb0, 0xf8b3, 0xecaf, 0x992a, 0x0, 0x0);
        gbc.writeMem(0xc22f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0xc231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc22f));
        EXPECT(0xb0, gbc.readMem(0xc230));
        // CB B0 02B1
        gbc.setState(0xa937, 0x5de5, 0x7230, 0xd618, 0x7f60, 0xa5ba, 0x0, 0x1);
        gbc.writeMem(0xa937, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5de5, gbc.sp());
        EXPECT(0xa939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa937));
        EXPECT(0xb0, gbc.readMem(0xa938));
        // CB B0 02B2
        gbc.setState(0x7153, 0x7e44, 0xecb0, 0xdf93, 0xb7f9, 0x38ba, 0x1, 0x1);
        gbc.writeMem(0x7153, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7e44, gbc.sp());
        EXPECT(0x7155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02B3
        gbc.setState(0x4d89, 0x85b9, 0x6800, 0x98ba, 0xce8c, 0x677, 0x1, 0x0);
        gbc.writeMem(0x4d89, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x85b9, gbc.sp());
        EXPECT(0x4d8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02B4
        gbc.setState(0x5358, 0xa5f8, 0xb200, 0xc841, 0xcfc1, 0xb1e7, 0x0, 0x0);
        gbc.writeMem(0x5358, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa5f8, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02B5
        gbc.setState(0xb00, 0xfdc0, 0xbc40, 0xa685, 0x2a35, 0x3510, 0x1, 0x1);
        gbc.writeMem(0xb00, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xfdc0, gbc.sp());
        EXPECT(0xb02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02B6
        gbc.setState(0x9e41, 0x9b9b, 0x7d0, 0x82dc, 0x72a3, 0xb593, 0x1, 0x1);
        gbc.writeMem(0x9e41, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x9b9b, gbc.sp());
        EXPECT(0x9e43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e41));
        EXPECT(0xb0, gbc.readMem(0x9e42));
        // CB B0 02B7
        gbc.setState(0xd1cc, 0x49b5, 0x2ec0, 0x1e07, 0x5dfe, 0xe996, 0x1, 0x0);
        gbc.writeMem(0xd1cc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x49b5, gbc.sp());
        EXPECT(0xd1ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1cc));
        EXPECT(0xb0, gbc.readMem(0xd1cd));
        // CB B0 02B8
        gbc.setState(0xc7c7, 0x3ba1, 0x5f90, 0x19b2, 0x2289, 0x64cc, 0x1, 0x1);
        gbc.writeMem(0xc7c7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x3ba1, gbc.sp());
        EXPECT(0xc7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c7));
        EXPECT(0xb0, gbc.readMem(0xc7c8));
        // CB B0 02B9
        gbc.setState(0x7c57, 0xd457, 0x8440, 0x2e73, 0xe560, 0x6377, 0x1, 0x0);
        gbc.writeMem(0x7c57, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd457, gbc.sp());
        EXPECT(0x7c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02BA
        gbc.setState(0x813, 0xecf8, 0x890, 0x379c, 0x7048, 0x1a7f, 0x0, 0x0);
        gbc.writeMem(0x813, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xecf8, gbc.sp());
        EXPECT(0x815, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02BB
        gbc.setState(0x675a, 0x1833, 0x15c0, 0x5dc2, 0x4a44, 0x7170, 0x0, 0x1);
        gbc.writeMem(0x675a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x1833, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02BC
        gbc.setState(0xeb3b, 0x3139, 0xe2a0, 0x1676, 0x790, 0xb83a, 0x1, 0x1);
        gbc.writeMem(0xeb3b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3139, gbc.sp());
        EXPECT(0xeb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb3b));
        EXPECT(0xb0, gbc.readMem(0xeb3c));
        // CB B0 02BD
        gbc.setState(0xbd20, 0xd5b6, 0x5f00, 0xe2e7, 0x15da, 0x92e7, 0x1, 0x1);
        gbc.writeMem(0xbd20, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd5b6, gbc.sp());
        EXPECT(0xbd22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd20));
        EXPECT(0xb0, gbc.readMem(0xbd21));
        // CB B0 02BE
        gbc.setState(0x2d9, 0x8217, 0xc6a0, 0xd7da, 0x7d2b, 0xc189, 0x0, 0x1);
        gbc.writeMem(0x2d9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8217, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02BF
        gbc.setState(0x6a86, 0xb6d1, 0xf1a0, 0x7f89, 0xae52, 0x6843, 0x1, 0x0);
        gbc.writeMem(0x6a86, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb6d1, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02C0
        gbc.setState(0xb785, 0xfc4d, 0xe990, 0xa8ac, 0xd180, 0x7328, 0x1, 0x0);
        gbc.writeMem(0xb785, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xfc4d, gbc.sp());
        EXPECT(0xb787, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb785));
        EXPECT(0xb0, gbc.readMem(0xb786));
        // CB B0 02C1
        gbc.setState(0xa5ed, 0x6258, 0xdc90, 0xb78b, 0x7e59, 0x36c5, 0x1, 0x1);
        gbc.writeMem(0xa5ed, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x6258, gbc.sp());
        EXPECT(0xa5ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5ed));
        EXPECT(0xb0, gbc.readMem(0xa5ee));
        // CB B0 02C2
        gbc.setState(0x2180, 0x7c7e, 0x6650, 0x462d, 0xdb12, 0x32bd, 0x0, 0x0);
        gbc.writeMem(0x2180, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7c7e, gbc.sp());
        EXPECT(0x2182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02C3
        gbc.setState(0x9804, 0x6b8, 0x4e30, 0xde66, 0x8c12, 0x43d5, 0x0, 0x0);
        gbc.writeMem(0x9804, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6b8, gbc.sp());
        EXPECT(0x9806, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9804));
        EXPECT(0xb0, gbc.readMem(0x9805));
        // CB B0 02C4
        gbc.setState(0xe1a3, 0x9315, 0x9a0, 0x52a6, 0x964f, 0xe99f, 0x1, 0x0);
        gbc.writeMem(0xe1a3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9315, gbc.sp());
        EXPECT(0xe1a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a3));
        EXPECT(0xb0, gbc.readMem(0xe1a4));
        // CB B0 02C5
        gbc.setState(0x19f5, 0xf7ac, 0x9940, 0xff26, 0x8ca8, 0x8e36, 0x1, 0x0);
        gbc.writeMem(0x19f5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xf7ac, gbc.sp());
        EXPECT(0x19f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02C6
        gbc.setState(0x3bfc, 0x9c9b, 0x79d0, 0x4f12, 0x1ded, 0x6f60, 0x0, 0x0);
        gbc.writeMem(0x3bfc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9c9b, gbc.sp());
        EXPECT(0x3bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02C7
        gbc.setState(0x115c, 0x799, 0x4f00, 0xcfca, 0xb6, 0x39b5, 0x0, 0x0);
        gbc.writeMem(0x115c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x799, gbc.sp());
        EXPECT(0x115e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02C8
        gbc.setState(0xe8e7, 0x7b70, 0x7750, 0x12e9, 0xccd6, 0xfb85, 0x0, 0x0);
        gbc.writeMem(0xe8e7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x7b70, gbc.sp());
        EXPECT(0xe8e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e7));
        EXPECT(0xb0, gbc.readMem(0xe8e8));
        // CB B0 02C9
        gbc.setState(0x6eae, 0xd2d7, 0x3780, 0x6fa0, 0xd3f0, 0x3886, 0x0, 0x1);
        gbc.writeMem(0x6eae, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd2d7, gbc.sp());
        EXPECT(0x6eb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02CA
        gbc.setState(0xb2f6, 0xf944, 0xf420, 0x7897, 0xb552, 0xf712, 0x1, 0x1);
        gbc.writeMem(0xb2f6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf944, gbc.sp());
        EXPECT(0xb2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f6));
        EXPECT(0xb0, gbc.readMem(0xb2f7));
        // CB B0 02CB
        gbc.setState(0x2df8, 0x65cb, 0x720, 0x3d56, 0x4e90, 0xdd65, 0x1, 0x1);
        gbc.writeMem(0x2df8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x65cb, gbc.sp());
        EXPECT(0x2dfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02CC
        gbc.setState(0x4a88, 0xbac0, 0x9f0, 0x97f1, 0xa4f3, 0xc7cd, 0x1, 0x1);
        gbc.writeMem(0x4a88, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xbac0, gbc.sp());
        EXPECT(0x4a8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02CD
        gbc.setState(0x359e, 0xaea9, 0xb2f0, 0xac08, 0x7054, 0xd9b, 0x1, 0x0);
        gbc.writeMem(0x359e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xaea9, gbc.sp());
        EXPECT(0x35a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02CE
        gbc.setState(0x716f, 0x6fb, 0xc920, 0x8ba6, 0xaa2c, 0x25b0, 0x0, 0x0);
        gbc.writeMem(0x716f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6fb, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02CF
        gbc.setState(0xec6d, 0xae85, 0x5a00, 0x3a7f, 0x2905, 0x54af, 0x0, 0x0);
        gbc.writeMem(0xec6d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xae85, gbc.sp());
        EXPECT(0xec6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6d));
        EXPECT(0xb0, gbc.readMem(0xec6e));
        // CB B0 02D0
        gbc.setState(0x1106, 0x8db9, 0x2100, 0x8570, 0x233, 0x31f2, 0x1, 0x0);
        gbc.writeMem(0x1106, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8db9, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02D1
        gbc.setState(0x3950, 0x26fd, 0xd160, 0x751d, 0x4ac8, 0x42dc, 0x1, 0x1);
        gbc.writeMem(0x3950, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x26fd, gbc.sp());
        EXPECT(0x3952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02D2
        gbc.setState(0xa14c, 0x311, 0x98c0, 0xfb14, 0xe046, 0xfb3b, 0x1, 0x1);
        gbc.writeMem(0xa14c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x311, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa14c));
        EXPECT(0xb0, gbc.readMem(0xa14d));
        // CB B0 02D3
        gbc.setState(0x621a, 0x4c14, 0xaae0, 0xb363, 0xbe72, 0x3182, 0x1, 0x0);
        gbc.writeMem(0x621a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4c14, gbc.sp());
        EXPECT(0x621c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02D4
        gbc.setState(0x26df, 0xef21, 0xbeb0, 0x2a0d, 0xc3c0, 0xb835, 0x0, 0x0);
        gbc.writeMem(0x26df, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xef21, gbc.sp());
        EXPECT(0x26e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02D5
        gbc.setState(0x1d57, 0x959b, 0x40f0, 0x1546, 0xf8e7, 0xfd48, 0x1, 0x1);
        gbc.writeMem(0x1d57, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x1d59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02D6
        gbc.setState(0x1341, 0xf0d2, 0x120, 0x11ac, 0xd77f, 0xf488, 0x1, 0x0);
        gbc.writeMem(0x1341, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf0d2, gbc.sp());
        EXPECT(0x1343, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02D7
        gbc.setState(0xca48, 0xaaa3, 0x8320, 0xf071, 0x44bc, 0x8116, 0x0, 0x0);
        gbc.writeMem(0xca48, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xaaa3, gbc.sp());
        EXPECT(0xca4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca48));
        EXPECT(0xb0, gbc.readMem(0xca49));
        // CB B0 02D8
        gbc.setState(0xcc15, 0x196c, 0x1c80, 0xedae, 0x946f, 0x5c3b, 0x1, 0x1);
        gbc.writeMem(0xcc15, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x196c, gbc.sp());
        EXPECT(0xcc17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc15));
        EXPECT(0xb0, gbc.readMem(0xcc16));
        // CB B0 02D9
        gbc.setState(0x792, 0x57f7, 0x2590, 0x1760, 0xeaaf, 0x1eb6, 0x0, 0x0);
        gbc.writeMem(0x792, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x57f7, gbc.sp());
        EXPECT(0x794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02DA
        gbc.setState(0xd0c8, 0x7558, 0xc390, 0x34cb, 0x52e2, 0x96bf, 0x0, 0x1);
        gbc.writeMem(0xd0c8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7558, gbc.sp());
        EXPECT(0xd0ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0c8));
        EXPECT(0xb0, gbc.readMem(0xd0c9));
        // CB B0 02DB
        gbc.setState(0x5676, 0x9da6, 0x5060, 0x44de, 0x82fb, 0x69a7, 0x1, 0x1);
        gbc.writeMem(0x5676, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9da6, gbc.sp());
        EXPECT(0x5678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02DD
        gbc.setState(0xea5d, 0xd106, 0x5870, 0x6a83, 0xd9fc, 0xd256, 0x0, 0x0);
        gbc.writeMem(0xea5d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xd106, gbc.sp());
        EXPECT(0xea5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea5d));
        EXPECT(0xb0, gbc.readMem(0xea5e));
        // CB B0 02DE
        gbc.setState(0xb7e6, 0x7724, 0x4f60, 0x6372, 0xf06d, 0xf02d, 0x0, 0x1);
        gbc.writeMem(0xb7e6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0xb7e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e6));
        EXPECT(0xb0, gbc.readMem(0xb7e7));
        // CB B0 02DF
        gbc.setState(0x7354, 0x81b8, 0x5ee0, 0x4c8a, 0x1c7f, 0x7935, 0x1, 0x0);
        gbc.writeMem(0x7354, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x81b8, gbc.sp());
        EXPECT(0x7356, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02E0
        gbc.setState(0x8559, 0xa09f, 0x9d30, 0x3cc5, 0x28b3, 0x23b5, 0x0, 0x0);
        gbc.writeMem(0x8559, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa09f, gbc.sp());
        EXPECT(0x855b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8559));
        EXPECT(0xb0, gbc.readMem(0x855a));
        // CB B0 02E1
        gbc.setState(0x274e, 0xda48, 0x5dc0, 0x959b, 0x281e, 0xfb21, 0x1, 0x0);
        gbc.writeMem(0x274e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xda48, gbc.sp());
        EXPECT(0x2750, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02E2
        gbc.setState(0x7b7a, 0x6140, 0x7310, 0x284c, 0xa26e, 0x60e3, 0x1, 0x0);
        gbc.writeMem(0x7b7a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6140, gbc.sp());
        EXPECT(0x7b7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02E3
        gbc.setState(0x7a92, 0xd5fb, 0xafb0, 0x6bb6, 0x52fd, 0x1ddb, 0x1, 0x1);
        gbc.writeMem(0x7a92, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd5fb, gbc.sp());
        EXPECT(0x7a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02E4
        gbc.setState(0x7e51, 0xc4d9, 0x1a80, 0x58f8, 0xaa52, 0x8ad6, 0x1, 0x0);
        gbc.writeMem(0x7e51, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0x7e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02E5
        gbc.setState(0x469e, 0x3f71, 0xd610, 0xb35d, 0x436c, 0xb0b2, 0x1, 0x1);
        gbc.writeMem(0x469e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x46a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02E6
        gbc.setState(0xbcf3, 0x9b5f, 0xfdd0, 0x5983, 0x6911, 0x450a, 0x0, 0x1);
        gbc.writeMem(0xbcf3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9b5f, gbc.sp());
        EXPECT(0xbcf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf3));
        EXPECT(0xb0, gbc.readMem(0xbcf4));
        // CB B0 02E7
        gbc.setState(0x78f3, 0x46f2, 0x1a10, 0xc036, 0xdcb7, 0xfb1e, 0x0, 0x0);
        gbc.writeMem(0x78f3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x46f2, gbc.sp());
        EXPECT(0x78f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02E8
        gbc.setState(0x832a, 0x437f, 0xa530, 0xe93d, 0xebff, 0xa12, 0x0, 0x0);
        gbc.writeMem(0x832a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x437f, gbc.sp());
        EXPECT(0x832c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x832a));
        EXPECT(0xb0, gbc.readMem(0x832b));
        // CB B0 02EA
        gbc.setState(0x144d, 0xfb1c, 0x5fc0, 0x8262, 0xfb83, 0xb965, 0x1, 0x0);
        gbc.writeMem(0x144d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xfb1c, gbc.sp());
        EXPECT(0x144f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02EB
        gbc.setState(0x848a, 0x912f, 0x4720, 0xac60, 0x5b17, 0xe81f, 0x1, 0x0);
        gbc.writeMem(0x848a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x912f, gbc.sp());
        EXPECT(0x848c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848a));
        EXPECT(0xb0, gbc.readMem(0x848b));
        // CB B0 02EC
        gbc.setState(0xc694, 0x9f07, 0xc510, 0xb76e, 0x1e5a, 0x6767, 0x0, 0x0);
        gbc.writeMem(0xc694, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x9f07, gbc.sp());
        EXPECT(0xc696, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc694));
        EXPECT(0xb0, gbc.readMem(0xc695));
        // CB B0 02ED
        gbc.setState(0xa46b, 0x6311, 0xb1d0, 0x6b28, 0x50e1, 0x31ae, 0x0, 0x1);
        gbc.writeMem(0xa46b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6311, gbc.sp());
        EXPECT(0xa46d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa46b));
        EXPECT(0xb0, gbc.readMem(0xa46c));
        // CB B0 02EE
        gbc.setState(0xda02, 0xeb6c, 0x5a00, 0xfeed, 0x8a6d, 0x345a, 0x0, 0x0);
        gbc.writeMem(0xda02, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xeb6c, gbc.sp());
        EXPECT(0xda04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda02));
        EXPECT(0xb0, gbc.readMem(0xda03));
        // CB B0 02EF
        gbc.setState(0x6c6c, 0x71f1, 0x2b00, 0xf862, 0x8b3e, 0x7036, 0x0, 0x0);
        gbc.writeMem(0x6c6c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x71f1, gbc.sp());
        EXPECT(0x6c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02F0
        gbc.setState(0xddff, 0xbd48, 0xf050, 0x126f, 0x67f7, 0xe926, 0x1, 0x1);
        gbc.writeMem(0xddff, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd48, gbc.sp());
        EXPECT(0xde01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddff));
        EXPECT(0xb0, gbc.readMem(0xde00));
        // CB B0 02F1
        gbc.setState(0x9653, 0xae36, 0xe80, 0xd281, 0xdf4, 0xb559, 0x1, 0x0);
        gbc.writeMem(0x9653, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xae36, gbc.sp());
        EXPECT(0x9655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9653));
        EXPECT(0xb0, gbc.readMem(0x9654));
        // CB B0 02F2
        gbc.setState(0x503, 0x2493, 0xb160, 0x6d70, 0x4022, 0x5853, 0x0, 0x0);
        gbc.writeMem(0x503, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2493, gbc.sp());
        EXPECT(0x505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02F3
        gbc.setState(0x1d1f, 0xbb60, 0x9f00, 0x81e1, 0xa400, 0xd964, 0x0, 0x1);
        gbc.writeMem(0x1d1f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbb60, gbc.sp());
        EXPECT(0x1d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02F4
        gbc.setState(0x1b75, 0xc42d, 0xcea0, 0x55a, 0xb492, 0x7103, 0x1, 0x0);
        gbc.writeMem(0x1b75, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xc42d, gbc.sp());
        EXPECT(0x1b77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02F5
        gbc.setState(0xad55, 0xcfe2, 0x1150, 0xa370, 0x99a9, 0x666b, 0x1, 0x0);
        gbc.writeMem(0xad55, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xcfe2, gbc.sp());
        EXPECT(0xad57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad55));
        EXPECT(0xb0, gbc.readMem(0xad56));
        // CB B0 02F6
        gbc.setState(0x6059, 0xf9e, 0xfa60, 0x192, 0x1ef9, 0x30e1, 0x1, 0x1);
        gbc.writeMem(0x6059, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf9e, gbc.sp());
        EXPECT(0x605b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 02F7
        gbc.setState(0xe361, 0x135b, 0x6a00, 0x27ed, 0x26d8, 0x774a, 0x1, 0x1);
        gbc.writeMem(0xe361, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0xe363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe361));
        EXPECT(0xb0, gbc.readMem(0xe362));
        // CB B0 02F9
        gbc.setState(0xb833, 0x9d44, 0xf8d0, 0xeac0, 0xc027, 0x8298, 0x1, 0x1);
        gbc.writeMem(0xb833, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9d44, gbc.sp());
        EXPECT(0xb835, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb833));
        EXPECT(0xb0, gbc.readMem(0xb834));
        // CB B0 02FA
        gbc.setState(0x2e9f, 0x266d, 0x55d0, 0xba55, 0xd408, 0x8fe7, 0x0, 0x1);
        gbc.writeMem(0x2e9f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x266d, gbc.sp());
        EXPECT(0x2ea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02FB
        gbc.setState(0xe14a, 0x77ed, 0xade0, 0x7c22, 0x3bab, 0x66d7, 0x0, 0x0);
        gbc.writeMem(0xe14a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x77ed, gbc.sp());
        EXPECT(0xe14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14a));
        EXPECT(0xb0, gbc.readMem(0xe14b));
        // CB B0 02FD
        gbc.setState(0xc93b, 0xc9cf, 0x1540, 0xe29e, 0xde8a, 0x2c1e, 0x1, 0x0);
        gbc.writeMem(0xc93b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0xc93d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93b));
        EXPECT(0xb0, gbc.readMem(0xc93c));
        // CB B0 02FE
        gbc.setState(0x1bbe, 0xba7d, 0x4bd0, 0x917d, 0xbb1f, 0xea98, 0x1, 0x0);
        gbc.writeMem(0x1bbe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xba7d, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 02FF
        gbc.setState(0x2282, 0x552c, 0x6c70, 0xf9e7, 0x633a, 0xe1b1, 0x1, 0x0);
        gbc.writeMem(0x2282, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x552c, gbc.sp());
        EXPECT(0x2284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0300
        gbc.setState(0x67d7, 0x25d7, 0xf360, 0x919a, 0x955b, 0xf507, 0x0, 0x1);
        gbc.writeMem(0x67d7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0x67d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0301
        gbc.setState(0x137f, 0xe2c7, 0x1810, 0xff91, 0x911e, 0x7bcf, 0x1, 0x0);
        gbc.writeMem(0x137f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe2c7, gbc.sp());
        EXPECT(0x1381, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0303
        gbc.setState(0x9169, 0x729e, 0xade0, 0xf76c, 0x8e25, 0x2096, 0x1, 0x1);
        gbc.writeMem(0x9169, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x729e, gbc.sp());
        EXPECT(0x916b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9169));
        EXPECT(0xb0, gbc.readMem(0x916a));
        // CB B0 0304
        gbc.setState(0x6d07, 0xbc18, 0xef60, 0x3e2, 0x434e, 0x1c1b, 0x1, 0x0);
        gbc.writeMem(0x6d07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xbc18, gbc.sp());
        EXPECT(0x6d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0305
        gbc.setState(0x1d1c, 0x1a2c, 0xce0, 0xa5af, 0x175a, 0xeb7a, 0x1, 0x1);
        gbc.writeMem(0x1d1c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1a2c, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0306
        gbc.setState(0x3214, 0xa5c2, 0x80f0, 0xd5e7, 0x1c1a, 0xa58, 0x0, 0x0);
        gbc.writeMem(0x3214, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa5c2, gbc.sp());
        EXPECT(0x3216, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0307
        gbc.setState(0x186f, 0x313b, 0xc1d0, 0x9649, 0x241f, 0xe9f7, 0x0, 0x0);
        gbc.writeMem(0x186f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x313b, gbc.sp());
        EXPECT(0x1871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0308
        gbc.setState(0x84cf, 0x7441, 0x46e0, 0x84c3, 0x40d0, 0x41de, 0x1, 0x1);
        gbc.writeMem(0x84cf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7441, gbc.sp());
        EXPECT(0x84d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84cf));
        EXPECT(0xb0, gbc.readMem(0x84d0));
        // CB B0 0309
        gbc.setState(0x3846, 0xb0ca, 0x3930, 0x4c8e, 0xa8e7, 0xcfc7, 0x0, 0x0);
        gbc.writeMem(0x3846, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb0ca, gbc.sp());
        EXPECT(0x3848, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 030A
        gbc.setState(0xe1f0, 0x1b8, 0x1ba0, 0xc66f, 0xda3, 0xde25, 0x0, 0x0);
        gbc.writeMem(0xe1f0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x1b8, gbc.sp());
        EXPECT(0xe1f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f0));
        EXPECT(0xb0, gbc.readMem(0xe1f1));
        // CB B0 030B
        gbc.setState(0xabdb, 0x2b06, 0x65f0, 0x56eb, 0xa031, 0xe5a1, 0x1, 0x1);
        gbc.writeMem(0xabdb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2b06, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabdb));
        EXPECT(0xb0, gbc.readMem(0xabdc));
        // CB B0 030C
        gbc.setState(0x7a87, 0x22ac, 0x2110, 0x6aad, 0x2ffe, 0xca2b, 0x0, 0x0);
        gbc.writeMem(0x7a87, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x22ac, gbc.sp());
        EXPECT(0x7a89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 030D
        gbc.setState(0x538d, 0x3821, 0xbf60, 0xba6c, 0xfc50, 0x7aaa, 0x1, 0x1);
        gbc.writeMem(0x538d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3821, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 030E
        gbc.setState(0x7442, 0xf744, 0x5690, 0xd178, 0x8eff, 0xf73e, 0x1, 0x0);
        gbc.writeMem(0x7442, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf744, gbc.sp());
        EXPECT(0x7444, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 030F
        gbc.setState(0xee86, 0x2e51, 0x6900, 0x6120, 0x671, 0xf7e, 0x0, 0x1);
        gbc.writeMem(0xee86, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2e51, gbc.sp());
        EXPECT(0xee88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee86));
        EXPECT(0xb0, gbc.readMem(0xee87));
        // CB B0 0310
        gbc.setState(0x2b22, 0x1838, 0xd370, 0x15d9, 0x4dfb, 0xa39, 0x0, 0x1);
        gbc.writeMem(0x2b22, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x1838, gbc.sp());
        EXPECT(0x2b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0311
        gbc.setState(0xb4d1, 0xbbd7, 0x9540, 0x612b, 0x14e8, 0x466b, 0x0, 0x0);
        gbc.writeMem(0xb4d1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbbd7, gbc.sp());
        EXPECT(0xb4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d1));
        EXPECT(0xb0, gbc.readMem(0xb4d2));
        // CB B0 0312
        gbc.setState(0xc08a, 0x21d6, 0x58f0, 0xff8, 0x3717, 0xd813, 0x1, 0x1);
        gbc.writeMem(0xc08a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x21d6, gbc.sp());
        EXPECT(0xc08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc08a));
        EXPECT(0xb0, gbc.readMem(0xc08b));
        // CB B0 0313
        gbc.setState(0xd71e, 0x8c0d, 0xd450, 0x5e19, 0xe3d3, 0x9b2c, 0x0, 0x1);
        gbc.writeMem(0xd71e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0xd720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd71e));
        EXPECT(0xb0, gbc.readMem(0xd71f));
        // CB B0 0314
        gbc.setState(0x42ea, 0x437c, 0xa310, 0xc2fc, 0x448b, 0x9bd5, 0x0, 0x1);
        gbc.writeMem(0x42ea, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x437c, gbc.sp());
        EXPECT(0x42ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0315
        gbc.setState(0xe55f, 0x177b, 0xbba0, 0x28d8, 0x7dfb, 0x98e1, 0x0, 0x1);
        gbc.writeMem(0xe55f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x177b, gbc.sp());
        EXPECT(0xe561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe55f));
        EXPECT(0xb0, gbc.readMem(0xe560));
        // CB B0 0316
        gbc.setState(0x8903, 0x197c, 0x5490, 0x975c, 0x23e9, 0x638a, 0x1, 0x0);
        gbc.writeMem(0x8903, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x197c, gbc.sp());
        EXPECT(0x8905, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8903));
        EXPECT(0xb0, gbc.readMem(0x8904));
        // CB B0 0317
        gbc.setState(0xeff7, 0x948c, 0x860, 0x2f1f, 0x989b, 0x1fba, 0x0, 0x1);
        gbc.writeMem(0xeff7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x948c, gbc.sp());
        EXPECT(0xeff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff7));
        EXPECT(0xb0, gbc.readMem(0xeff8));
        // CB B0 0318
        gbc.setState(0x8101, 0xd059, 0x1050, 0xf9d6, 0x9194, 0xdd70, 0x0, 0x1);
        gbc.writeMem(0x8101, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xd059, gbc.sp());
        EXPECT(0x8103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8101));
        EXPECT(0xb0, gbc.readMem(0x8102));
        // CB B0 031A
        gbc.setState(0xcbdb, 0xe581, 0x9660, 0x63a5, 0xbf60, 0x4014, 0x1, 0x1);
        gbc.writeMem(0xcbdb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe581, gbc.sp());
        EXPECT(0xcbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbdb));
        EXPECT(0xb0, gbc.readMem(0xcbdc));
        // CB B0 031B
        gbc.setState(0x14b5, 0x2df7, 0x41d0, 0x67fa, 0x7565, 0xef81, 0x1, 0x0);
        gbc.writeMem(0x14b5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2df7, gbc.sp());
        EXPECT(0x14b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 031C
        gbc.setState(0x77c3, 0xf58f, 0x44d0, 0xf8a6, 0xb462, 0x849a, 0x1, 0x0);
        gbc.writeMem(0x77c3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf58f, gbc.sp());
        EXPECT(0x77c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 031D
        gbc.setState(0x6d86, 0x133e, 0x8630, 0x43bf, 0xc07b, 0xa92, 0x1, 0x1);
        gbc.writeMem(0x6d86, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0x6d88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 031E
        gbc.setState(0xb706, 0xc098, 0x9df0, 0x252e, 0x60b6, 0x7e96, 0x1, 0x0);
        gbc.writeMem(0xb706, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc098, gbc.sp());
        EXPECT(0xb708, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb706));
        EXPECT(0xb0, gbc.readMem(0xb707));
        // CB B0 031F
        gbc.setState(0x5fee, 0xc2ef, 0xbc00, 0x1a9f, 0x8eb3, 0x715e, 0x0, 0x0);
        gbc.writeMem(0x5fee, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc2ef, gbc.sp());
        EXPECT(0x5ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0320
        gbc.setState(0x939, 0x1fb2, 0x4c30, 0x80be, 0x937a, 0xc04b, 0x1, 0x1);
        gbc.writeMem(0x939, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1fb2, gbc.sp());
        EXPECT(0x93b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0321
        gbc.setState(0x3e3a, 0xd61, 0x3c00, 0xc410, 0x358a, 0x9b29, 0x1, 0x0);
        gbc.writeMem(0x3e3a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd61, gbc.sp());
        EXPECT(0x3e3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0322
        gbc.setState(0x774d, 0x4f69, 0x4740, 0x5bf5, 0x1b3, 0xfec9, 0x0, 0x0);
        gbc.writeMem(0x774d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x774f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0323
        gbc.setState(0x162c, 0xf3d6, 0xc8d0, 0x47ba, 0x472f, 0x8361, 0x0, 0x1);
        gbc.writeMem(0x162c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf3d6, gbc.sp());
        EXPECT(0x162e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0324
        gbc.setState(0x8c7e, 0x21f0, 0x58b0, 0xe4e3, 0xbc68, 0x56ae, 0x0, 0x0);
        gbc.writeMem(0x8c7e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x21f0, gbc.sp());
        EXPECT(0x8c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7e));
        EXPECT(0xb0, gbc.readMem(0x8c7f));
        // CB B0 0325
        gbc.setState(0x6579, 0x303b, 0xed90, 0xd0ff, 0xc9a8, 0x84e8, 0x1, 0x1);
        gbc.writeMem(0x6579, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x303b, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0326
        gbc.setState(0xd71, 0x728e, 0x96b0, 0x57c0, 0x9377, 0xf6b1, 0x1, 0x0);
        gbc.writeMem(0xd71, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x728e, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0327
        gbc.setState(0x5752, 0xb138, 0x7570, 0x45de, 0xe63a, 0xa8d, 0x0, 0x0);
        gbc.writeMem(0x5752, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb138, gbc.sp());
        EXPECT(0x5754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0328
        gbc.setState(0x418c, 0xf7c4, 0x4db0, 0x711b, 0xdca1, 0xb376, 0x0, 0x1);
        gbc.writeMem(0x418c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf7c4, gbc.sp());
        EXPECT(0x418e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0329
        gbc.setState(0x5abd, 0xda61, 0x2d30, 0xb30, 0x1442, 0xe0cc, 0x0, 0x1);
        gbc.writeMem(0x5abd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0x5abf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 032A
        gbc.setState(0x5c49, 0x54d1, 0x24e0, 0xc99f, 0xefac, 0x206b, 0x0, 0x1);
        gbc.writeMem(0x5c49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x54d1, gbc.sp());
        EXPECT(0x5c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 032B
        gbc.setState(0x296f, 0x94b1, 0x900, 0x57bf, 0x4d1b, 0xcbfc, 0x1, 0x0);
        gbc.writeMem(0x296f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x94b1, gbc.sp());
        EXPECT(0x2971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 032C
        gbc.setState(0x1c4a, 0x7fef, 0x56d0, 0x5bb, 0xe2, 0x3ec5, 0x1, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x7fef, gbc.sp());
        EXPECT(0x1c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 032D
        gbc.setState(0xa49d, 0x8b73, 0xa220, 0x3f65, 0xeac2, 0x8cca, 0x1, 0x1);
        gbc.writeMem(0xa49d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8b73, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa49d));
        EXPECT(0xb0, gbc.readMem(0xa49e));
        // CB B0 032E
        gbc.setState(0x1c73, 0xaad3, 0x50e0, 0x1954, 0xdfd6, 0x9bec, 0x1, 0x0);
        gbc.writeMem(0x1c73, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xaad3, gbc.sp());
        EXPECT(0x1c75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 032F
        gbc.setState(0x577a, 0xfbef, 0xe20, 0x6fc0, 0x4e81, 0x102c, 0x0, 0x1);
        gbc.writeMem(0x577a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfbef, gbc.sp());
        EXPECT(0x577c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0330
        gbc.setState(0x7358, 0xa20a, 0x9420, 0xda58, 0x81a0, 0x91dd, 0x1, 0x0);
        gbc.writeMem(0x7358, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa20a, gbc.sp());
        EXPECT(0x735a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0331
        gbc.setState(0x1429, 0xcbce, 0xa4d0, 0xd777, 0xc899, 0x976c, 0x0, 0x1);
        gbc.writeMem(0x1429, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcbce, gbc.sp());
        EXPECT(0x142b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0332
        gbc.setState(0xaa74, 0xc6a2, 0xa690, 0xa34b, 0xc649, 0x77b3, 0x1, 0x0);
        gbc.writeMem(0xaa74, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0xaa76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa74));
        EXPECT(0xb0, gbc.readMem(0xaa75));
        // CB B0 0333
        gbc.setState(0xfdb, 0x2727, 0xc220, 0xad89, 0x7933, 0x7789, 0x1, 0x1);
        gbc.writeMem(0xfdb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2727, gbc.sp());
        EXPECT(0xfdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0334
        gbc.setState(0xe61a, 0x9fd2, 0x1c0, 0x5a09, 0x1cb3, 0x9666, 0x1, 0x0);
        gbc.writeMem(0xe61a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9fd2, gbc.sp());
        EXPECT(0xe61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe61a));
        EXPECT(0xb0, gbc.readMem(0xe61b));
        // CB B0 0335
        gbc.setState(0x626e, 0x9fb7, 0xd020, 0x383a, 0x2209, 0x34d1, 0x0, 0x1);
        gbc.writeMem(0x626e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9fb7, gbc.sp());
        EXPECT(0x6270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0336
        gbc.setState(0xbc0a, 0x6ca9, 0x4330, 0xede8, 0xfedf, 0xb2e4, 0x1, 0x0);
        gbc.writeMem(0xbc0a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6ca9, gbc.sp());
        EXPECT(0xbc0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc0a));
        EXPECT(0xb0, gbc.readMem(0xbc0b));
        // CB B0 0337
        gbc.setState(0x2eb3, 0x9c1c, 0xb3f0, 0xe97b, 0x165e, 0x248b, 0x0, 0x0);
        gbc.writeMem(0x2eb3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9c1c, gbc.sp());
        EXPECT(0x2eb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0338
        gbc.setState(0xbe11, 0x15a7, 0x920, 0x13d2, 0x4e04, 0xa7f8, 0x1, 0x0);
        gbc.writeMem(0xbe11, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x15a7, gbc.sp());
        EXPECT(0xbe13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe11));
        EXPECT(0xb0, gbc.readMem(0xbe12));
        // CB B0 0339
        gbc.setState(0x226, 0x3fd4, 0xa7d0, 0x470a, 0x9d73, 0x9f6d, 0x0, 0x1);
        gbc.writeMem(0x226, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3fd4, gbc.sp());
        EXPECT(0x228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 033A
        gbc.setState(0x7427, 0xcd3a, 0xee0, 0x8b16, 0x28a0, 0x336f, 0x1, 0x0);
        gbc.writeMem(0x7427, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd3a, gbc.sp());
        EXPECT(0x7429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 033B
        gbc.setState(0xe7e1, 0x7b26, 0x24f0, 0x37f0, 0xce00, 0x7ab8, 0x1, 0x1);
        gbc.writeMem(0xe7e1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x7b26, gbc.sp());
        EXPECT(0xe7e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7e1));
        EXPECT(0xb0, gbc.readMem(0xe7e2));
        // CB B0 033C
        gbc.setState(0x8459, 0x76a9, 0xc350, 0x2d20, 0x68d8, 0x59cb, 0x1, 0x1);
        gbc.writeMem(0x8459, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x76a9, gbc.sp());
        EXPECT(0x845b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8459));
        EXPECT(0xb0, gbc.readMem(0x845a));
        // CB B0 033D
        gbc.setState(0x2424, 0xb590, 0x2500, 0x7622, 0x6f39, 0x219a, 0x1, 0x0);
        gbc.writeMem(0x2424, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb590, gbc.sp());
        EXPECT(0x2426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 033F
        gbc.setState(0x4f0d, 0xc77b, 0x43e0, 0x224a, 0xda89, 0xaeb, 0x0, 0x0);
        gbc.writeMem(0x4f0d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc77b, gbc.sp());
        EXPECT(0x4f0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0340
        gbc.setState(0x7009, 0x9f1, 0xf9c0, 0x78fc, 0x87af, 0x529, 0x1, 0x0);
        gbc.writeMem(0x7009, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9f1, gbc.sp());
        EXPECT(0x700b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0341
        gbc.setState(0x908f, 0x5458, 0x910, 0x5b53, 0x4b8d, 0x210c, 0x1, 0x1);
        gbc.writeMem(0x908f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5458, gbc.sp());
        EXPECT(0x9091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908f));
        EXPECT(0xb0, gbc.readMem(0x9090));
        // CB B0 0342
        gbc.setState(0x3895, 0x547d, 0xab60, 0x39a9, 0x48a2, 0xd113, 0x0, 0x1);
        gbc.writeMem(0x3895, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x547d, gbc.sp());
        EXPECT(0x3897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0343
        gbc.setState(0xd101, 0x886b, 0xb5d0, 0xc963, 0x9b34, 0xf53e, 0x1, 0x1);
        gbc.writeMem(0xd101, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x886b, gbc.sp());
        EXPECT(0xd103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd101));
        EXPECT(0xb0, gbc.readMem(0xd102));
        // CB B0 0344
        gbc.setState(0x9d7, 0x3d5, 0xb8c0, 0x8f29, 0x84c0, 0x7d19, 0x1, 0x0);
        gbc.writeMem(0x9d7, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x3d5, gbc.sp());
        EXPECT(0x9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0345
        gbc.setState(0x3a7f, 0x3665, 0x7c10, 0x9fc1, 0x3374, 0x7f81, 0x0, 0x0);
        gbc.writeMem(0x3a7f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3665, gbc.sp());
        EXPECT(0x3a81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0346
        gbc.setState(0x7390, 0x7e54, 0x4a90, 0x9b71, 0xc775, 0x4acb, 0x0, 0x0);
        gbc.writeMem(0x7390, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7e54, gbc.sp());
        EXPECT(0x7392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0347
        gbc.setState(0x815d, 0x939e, 0xaa0, 0xf8f3, 0x57bd, 0xe744, 0x1, 0x0);
        gbc.writeMem(0x815d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x939e, gbc.sp());
        EXPECT(0x815f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815d));
        EXPECT(0xb0, gbc.readMem(0x815e));
        // CB B0 0348
        gbc.setState(0x3b72, 0xea53, 0xf230, 0xc66, 0x379c, 0xd097, 0x1, 0x0);
        gbc.writeMem(0x3b72, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xea53, gbc.sp());
        EXPECT(0x3b74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0349
        gbc.setState(0x8d8f, 0xbb52, 0x1000, 0x496b, 0xfa58, 0x913d, 0x0, 0x0);
        gbc.writeMem(0x8d8f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x8d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d8f));
        EXPECT(0xb0, gbc.readMem(0x8d90));
        // CB B0 034A
        gbc.setState(0x8637, 0x33e5, 0xbaf0, 0x16e5, 0x90cf, 0x2d3d, 0x1, 0x1);
        gbc.writeMem(0x8637, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x33e5, gbc.sp());
        EXPECT(0x8639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8637));
        EXPECT(0xb0, gbc.readMem(0x8638));
        // CB B0 034B
        gbc.setState(0x86e2, 0x78ce, 0x6830, 0x5dd4, 0xc772, 0x2e55, 0x1, 0x1);
        gbc.writeMem(0x86e2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x78ce, gbc.sp());
        EXPECT(0x86e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e2));
        EXPECT(0xb0, gbc.readMem(0x86e3));
        // CB B0 034C
        gbc.setState(0x6bda, 0x24, 0x3770, 0x7cbe, 0x6a49, 0x62dc, 0x1, 0x0);
        gbc.writeMem(0x6bda, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x24, gbc.sp());
        EXPECT(0x6bdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 034D
        gbc.setState(0x3fca, 0x1e92, 0xd990, 0x3a73, 0x1161, 0xe66e, 0x1, 0x0);
        gbc.writeMem(0x3fca, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1e92, gbc.sp());
        EXPECT(0x3fcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 034E
        gbc.setState(0x5781, 0x1326, 0x4670, 0xbca9, 0xc13e, 0xf31, 0x0, 0x1);
        gbc.writeMem(0x5781, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x1326, gbc.sp());
        EXPECT(0x5783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 034F
        gbc.setState(0xa717, 0xb72f, 0xfb00, 0x8638, 0x5b2a, 0x4c13, 0x0, 0x1);
        gbc.writeMem(0xa717, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xb72f, gbc.sp());
        EXPECT(0xa719, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa717));
        EXPECT(0xb0, gbc.readMem(0xa718));
        // CB B0 0350
        gbc.setState(0x798b, 0xa900, 0xc6c0, 0xb417, 0x295d, 0x996b, 0x0, 0x1);
        gbc.writeMem(0x798b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa900, gbc.sp());
        EXPECT(0x798d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0351
        gbc.setState(0xda4a, 0xb0a8, 0x75e0, 0xc687, 0x35ab, 0xd46, 0x0, 0x1);
        gbc.writeMem(0xda4a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb0a8, gbc.sp());
        EXPECT(0xda4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda4a));
        EXPECT(0xb0, gbc.readMem(0xda4b));
        // CB B0 0352
        gbc.setState(0xaa90, 0x35b9, 0x5260, 0xd884, 0x15ca, 0x4ad8, 0x1, 0x1);
        gbc.writeMem(0xaa90, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x35b9, gbc.sp());
        EXPECT(0xaa92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa90));
        EXPECT(0xb0, gbc.readMem(0xaa91));
        // CB B0 0354
        gbc.setState(0x48bc, 0x44b5, 0x11a0, 0xcd2e, 0x8864, 0x6ab6, 0x0, 0x0);
        gbc.writeMem(0x48bc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x44b5, gbc.sp());
        EXPECT(0x48be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0355
        gbc.setState(0x4eb9, 0x5431, 0x8a10, 0x157f, 0x640f, 0xda0, 0x1, 0x0);
        gbc.writeMem(0x4eb9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5431, gbc.sp());
        EXPECT(0x4ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0356
        gbc.setState(0x192e, 0x816d, 0x390, 0x8569, 0x3594, 0x2a3b, 0x1, 0x0);
        gbc.writeMem(0x192e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x816d, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0357
        gbc.setState(0x5120, 0xc714, 0x67c0, 0x7c61, 0xedfa, 0xadaf, 0x0, 0x1);
        gbc.writeMem(0x5120, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc714, gbc.sp());
        EXPECT(0x5122, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0358
        gbc.setState(0x4abe, 0x4c76, 0x6750, 0x4323, 0x52df, 0x8b36, 0x0, 0x0);
        gbc.writeMem(0x4abe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4c76, gbc.sp());
        EXPECT(0x4ac0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0359
        gbc.setState(0xada, 0x83c8, 0x5d70, 0x907, 0xc0b, 0xd656, 0x0, 0x1);
        gbc.writeMem(0xada, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x83c8, gbc.sp());
        EXPECT(0xadc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 035A
        gbc.setState(0xe089, 0x3bbe, 0x5040, 0x7da2, 0xa42f, 0x8a0b, 0x1, 0x0);
        gbc.writeMem(0xe089, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x3bbe, gbc.sp());
        EXPECT(0xe08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe089));
        EXPECT(0xb0, gbc.readMem(0xe08a));
        // CB B0 035B
        gbc.setState(0x91fe, 0xc95c, 0x3dd0, 0xc9b6, 0xbfcd, 0xbd4c, 0x0, 0x1);
        gbc.writeMem(0x91fe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc95c, gbc.sp());
        EXPECT(0x9200, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91fe));
        EXPECT(0xb0, gbc.readMem(0x91ff));
        // CB B0 035C
        gbc.setState(0xced2, 0x982e, 0xef20, 0x1cbd, 0x1a4, 0x893, 0x1, 0x1);
        gbc.writeMem(0xced2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0xced4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced2));
        EXPECT(0xb0, gbc.readMem(0xced3));
        // CB B0 035D
        gbc.setState(0xadf5, 0x9bdd, 0xb850, 0x2a9f, 0x95a4, 0xa022, 0x0, 0x1);
        gbc.writeMem(0xadf5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9bdd, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadf5));
        EXPECT(0xb0, gbc.readMem(0xadf6));
        // CB B0 035E
        gbc.setState(0xcbea, 0x4705, 0x2240, 0x164b, 0x72f0, 0x77ae, 0x0, 0x0);
        gbc.writeMem(0xcbea, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x4705, gbc.sp());
        EXPECT(0xcbec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbea));
        EXPECT(0xb0, gbc.readMem(0xcbeb));
        // CB B0 035F
        gbc.setState(0x6c49, 0xc2d7, 0xaca0, 0x406b, 0xd09b, 0xb0a, 0x1, 0x0);
        gbc.writeMem(0x6c49, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc2d7, gbc.sp());
        EXPECT(0x6c4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0360
        gbc.setState(0xa37b, 0xbb82, 0xd420, 0x31ea, 0xbab8, 0xa042, 0x1, 0x0);
        gbc.writeMem(0xa37b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xbb82, gbc.sp());
        EXPECT(0xa37d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37b));
        EXPECT(0xb0, gbc.readMem(0xa37c));
        // CB B0 0361
        gbc.setState(0xabc2, 0xee14, 0x5be0, 0x886d, 0x2070, 0xd1ea, 0x0, 0x1);
        gbc.writeMem(0xabc2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xee14, gbc.sp());
        EXPECT(0xabc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc2));
        EXPECT(0xb0, gbc.readMem(0xabc3));
        // CB B0 0362
        gbc.setState(0x9129, 0xf3b8, 0xa590, 0x17da, 0xf8bc, 0x3b7e, 0x0, 0x1);
        gbc.writeMem(0x9129, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xf3b8, gbc.sp());
        EXPECT(0x912b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9129));
        EXPECT(0xb0, gbc.readMem(0x912a));
        // CB B0 0363
        gbc.setState(0xb0be, 0xb3d1, 0x5620, 0xce67, 0x5a21, 0x5c17, 0x0, 0x0);
        gbc.writeMem(0xb0be, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb3d1, gbc.sp());
        EXPECT(0xb0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0be));
        EXPECT(0xb0, gbc.readMem(0xb0bf));
        // CB B0 0364
        gbc.setState(0xdf48, 0xec68, 0x6b30, 0xe751, 0x6139, 0xe51, 0x0, 0x0);
        gbc.writeMem(0xdf48, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xec68, gbc.sp());
        EXPECT(0xdf4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf48));
        EXPECT(0xb0, gbc.readMem(0xdf49));
        // CB B0 0365
        gbc.setState(0x2dd8, 0x47a7, 0x1390, 0x387c, 0x1ee4, 0xb8b6, 0x0, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x47a7, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0366
        gbc.setState(0x4fdb, 0x6067, 0x1a50, 0xaa73, 0xade6, 0xc3a7, 0x0, 0x1);
        gbc.writeMem(0x4fdb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x6067, gbc.sp());
        EXPECT(0x4fdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0368
        gbc.setState(0x533, 0xd266, 0x3fc0, 0x769d, 0x9538, 0xd6c4, 0x0, 0x0);
        gbc.writeMem(0x533, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd266, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0369
        gbc.setState(0xa425, 0x291d, 0xb1a0, 0x6a0c, 0xae97, 0x77b3, 0x1, 0x0);
        gbc.writeMem(0xa425, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x291d, gbc.sp());
        EXPECT(0xa427, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa425));
        EXPECT(0xb0, gbc.readMem(0xa426));
        // CB B0 036A
        gbc.setState(0x386a, 0xd9cc, 0x6370, 0xc3c0, 0x4f39, 0x761a, 0x1, 0x1);
        gbc.writeMem(0x386a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd9cc, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 036B
        gbc.setState(0xddb2, 0x7306, 0x65d0, 0x3d3a, 0xbf1b, 0x304, 0x0, 0x1);
        gbc.writeMem(0xddb2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7306, gbc.sp());
        EXPECT(0xddb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddb2));
        EXPECT(0xb0, gbc.readMem(0xddb3));
        // CB B0 036C
        gbc.setState(0x690a, 0x7b35, 0x58a0, 0xbcae, 0xb0b0, 0x76ab, 0x0, 0x1);
        gbc.writeMem(0x690a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7b35, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 036E
        gbc.setState(0xdeff, 0xcae2, 0x3630, 0xc729, 0xd2ec, 0xbb6d, 0x0, 0x0);
        gbc.writeMem(0xdeff, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcae2, gbc.sp());
        EXPECT(0xdf01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeff));
        EXPECT(0xb0, gbc.readMem(0xdf00));
        // CB B0 036F
        gbc.setState(0x8c7f, 0xa5b4, 0x6720, 0xd743, 0xea85, 0xa9a1, 0x0, 0x0);
        gbc.writeMem(0x8c7f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa5b4, gbc.sp());
        EXPECT(0x8c81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c7f));
        EXPECT(0xb0, gbc.readMem(0x8c80));
        // CB B0 0370
        gbc.setState(0x78a9, 0x1b7e, 0x9340, 0x4b37, 0x4a37, 0xc1ad, 0x1, 0x0);
        gbc.writeMem(0x78a9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1b7e, gbc.sp());
        EXPECT(0x78ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0371
        gbc.setState(0x9842, 0xa140, 0x3a00, 0x268b, 0x71f5, 0xa0ff, 0x1, 0x0);
        gbc.writeMem(0x9842, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa140, gbc.sp());
        EXPECT(0x9844, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9842));
        EXPECT(0xb0, gbc.readMem(0x9843));
        // CB B0 0372
        gbc.setState(0x5020, 0x601d, 0xafb0, 0xf856, 0x44b, 0xc416, 0x0, 0x1);
        gbc.writeMem(0x5020, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0x5022, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0373
        gbc.setState(0x8f7c, 0x444f, 0xfaa0, 0x89f6, 0xd0d4, 0xf727, 0x1, 0x1);
        gbc.writeMem(0x8f7c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x444f, gbc.sp());
        EXPECT(0x8f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f7c));
        EXPECT(0xb0, gbc.readMem(0x8f7d));
        // CB B0 0374
        gbc.setState(0x97f2, 0x95a3, 0xbf90, 0xd90e, 0xc44, 0xc613, 0x1, 0x1);
        gbc.writeMem(0x97f2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x95a3, gbc.sp());
        EXPECT(0x97f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97f2));
        EXPECT(0xb0, gbc.readMem(0x97f3));
        // CB B0 0375
        gbc.setState(0x27eb, 0x1fe5, 0xcd40, 0x3c76, 0xce84, 0x9de, 0x0, 0x1);
        gbc.writeMem(0x27eb, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1fe5, gbc.sp());
        EXPECT(0x27ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0376
        gbc.setState(0x7ff5, 0x5323, 0x310, 0xdd5c, 0x6af4, 0x8ed8, 0x1, 0x1);
        gbc.writeMem(0x7ff5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5323, gbc.sp());
        EXPECT(0x7ff7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0377
        gbc.setState(0x9786, 0x586c, 0xd3b0, 0xae8, 0x371a, 0xf750, 0x0, 0x1);
        gbc.writeMem(0x9786, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x586c, gbc.sp());
        EXPECT(0x9788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9786));
        EXPECT(0xb0, gbc.readMem(0x9787));
        // CB B0 0378
        gbc.setState(0xcfa2, 0x29ca, 0xcdc0, 0x902c, 0x7921, 0x2bd3, 0x0, 0x1);
        gbc.writeMem(0xcfa2, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x29ca, gbc.sp());
        EXPECT(0xcfa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfa2));
        EXPECT(0xb0, gbc.readMem(0xcfa3));
        // CB B0 0379
        gbc.setState(0x3329, 0x629, 0x20b0, 0x4741, 0xf88e, 0x5ced, 0x1, 0x0);
        gbc.writeMem(0x3329, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x629, gbc.sp());
        EXPECT(0x332b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 037A
        gbc.setState(0x1749, 0xbd02, 0x38c0, 0xc889, 0xab95, 0xbbbd, 0x0, 0x1);
        gbc.writeMem(0x1749, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbd02, gbc.sp());
        EXPECT(0x174b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 037B
        gbc.setState(0xd7e8, 0xec49, 0x5670, 0xb668, 0xa26f, 0xd9fd, 0x1, 0x1);
        gbc.writeMem(0xd7e8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xec49, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7e8));
        EXPECT(0xb0, gbc.readMem(0xd7e9));
        // CB B0 037C
        gbc.setState(0x94d8, 0x8b0f, 0x8c30, 0xa05b, 0x2e7, 0x74f, 0x0, 0x0);
        gbc.writeMem(0x94d8, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8b0f, gbc.sp());
        EXPECT(0x94da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d8));
        EXPECT(0xb0, gbc.readMem(0x94d9));
        // CB B0 037D
        gbc.setState(0xd55b, 0x6142, 0x84d0, 0xa9c, 0xb262, 0x21d9, 0x0, 0x0);
        gbc.writeMem(0xd55b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6142, gbc.sp());
        EXPECT(0xd55d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55b));
        EXPECT(0xb0, gbc.readMem(0xd55c));
        // CB B0 037E
        gbc.setState(0xd7fe, 0x292e, 0xec70, 0x953b, 0xc530, 0x891, 0x1, 0x0);
        gbc.writeMem(0xd7fe, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x292e, gbc.sp());
        EXPECT(0xd800, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7fe));
        EXPECT(0xb0, gbc.readMem(0xd7ff));
        // CB B0 037F
        gbc.setState(0xc249, 0x5ad1, 0x26d0, 0xb8f1, 0x1c55, 0x1f60, 0x1, 0x1);
        gbc.writeMem(0xc249, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x5ad1, gbc.sp());
        EXPECT(0xc24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc249));
        EXPECT(0xb0, gbc.readMem(0xc24a));
        // CB B0 0380
        gbc.setState(0x3ff6, 0x8385, 0x61f0, 0x9a18, 0xf070, 0xff3a, 0x1, 0x1);
        gbc.writeMem(0x3ff6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8385, gbc.sp());
        EXPECT(0x3ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0381
        gbc.setState(0x8ea4, 0x61ac, 0xc7f0, 0xa783, 0xe5d4, 0xc3c5, 0x1, 0x0);
        gbc.writeMem(0x8ea4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x61ac, gbc.sp());
        EXPECT(0x8ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea4));
        EXPECT(0xb0, gbc.readMem(0x8ea5));
        // CB B0 0382
        gbc.setState(0xcbfd, 0x528c, 0x4af0, 0x90b8, 0x6faa, 0x387d, 0x0, 0x1);
        gbc.writeMem(0xcbfd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x528c, gbc.sp());
        EXPECT(0xcbff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfd));
        EXPECT(0xb0, gbc.readMem(0xcbfe));
        // CB B0 0383
        gbc.setState(0xa8c9, 0xae2d, 0xc850, 0x91d2, 0x71fd, 0x45ec, 0x1, 0x0);
        gbc.writeMem(0xa8c9, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xae2d, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0xb0, gbc.readMem(0xa8ca));
        // CB B0 0384
        gbc.setState(0x3456, 0x571c, 0x2bf0, 0x19f6, 0xaa83, 0xbd5f, 0x1, 0x0);
        gbc.writeMem(0x3456, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x571c, gbc.sp());
        EXPECT(0x3458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0385
        gbc.setState(0x95be, 0x4212, 0x7700, 0xc893, 0xac81, 0xfe9, 0x0, 0x0);
        gbc.writeMem(0x95be, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4212, gbc.sp());
        EXPECT(0x95c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95be));
        EXPECT(0xb0, gbc.readMem(0x95bf));
        // CB B0 0386
        gbc.setState(0xd172, 0x5849, 0xaa0, 0x8793, 0x3578, 0xe29a, 0x0, 0x0);
        gbc.writeMem(0xd172, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x5849, gbc.sp());
        EXPECT(0xd174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd172));
        EXPECT(0xb0, gbc.readMem(0xd173));
        // CB B0 0387
        gbc.setState(0x1e5a, 0x975, 0xb860, 0xff50, 0x1e01, 0xc7f2, 0x0, 0x0);
        gbc.writeMem(0x1e5a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x975, gbc.sp());
        EXPECT(0x1e5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0388
        gbc.setState(0x7157, 0x886d, 0xcf10, 0xc34d, 0xff01, 0x68fb, 0x0, 0x1);
        gbc.writeMem(0x7157, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x886d, gbc.sp());
        EXPECT(0x7159, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0389
        gbc.setState(0xc0ff, 0x9a7, 0x5f80, 0x4025, 0x6a0a, 0x3bf6, 0x1, 0x1);
        gbc.writeMem(0xc0ff, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9a7, gbc.sp());
        EXPECT(0xc101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ff));
        EXPECT(0xb0, gbc.readMem(0xc100));
        // CB B0 038A
        gbc.setState(0x2341, 0x5925, 0x8390, 0x815e, 0x6a46, 0xd4d8, 0x0, 0x1);
        gbc.writeMem(0x2341, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5925, gbc.sp());
        EXPECT(0x2343, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 038B
        gbc.setState(0xa860, 0xd60c, 0xd40, 0x2413, 0xcaf4, 0xf983, 0x0, 0x0);
        gbc.writeMem(0xa860, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa860));
        EXPECT(0xb0, gbc.readMem(0xa861));
        // CB B0 038C
        gbc.setState(0xb234, 0x35e8, 0xd260, 0x13b2, 0x781, 0xbda2, 0x1, 0x0);
        gbc.writeMem(0xb234, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x35e8, gbc.sp());
        EXPECT(0xb236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb234));
        EXPECT(0xb0, gbc.readMem(0xb235));
        // CB B0 038D
        gbc.setState(0xc618, 0x2762, 0x5890, 0x28f9, 0x79b1, 0x6d4a, 0x0, 0x0);
        gbc.writeMem(0xc618, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2762, gbc.sp());
        EXPECT(0xc61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc618));
        EXPECT(0xb0, gbc.readMem(0xc619));
        // CB B0 038E
        gbc.setState(0x9d07, 0xf41b, 0xb400, 0x34c4, 0x2e4c, 0x14b9, 0x0, 0x0);
        gbc.writeMem(0x9d07, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x9d09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d07));
        EXPECT(0xb0, gbc.readMem(0x9d08));
        // CB B0 0390
        gbc.setState(0xe7df, 0x9b69, 0x94c0, 0xc6cf, 0x9436, 0x8ae4, 0x0, 0x1);
        gbc.writeMem(0xe7df, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9b69, gbc.sp());
        EXPECT(0xe7e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7df));
        EXPECT(0xb0, gbc.readMem(0xe7e0));
        // CB B0 0391
        gbc.setState(0xbe93, 0x1d21, 0xba90, 0x7619, 0xb2a0, 0x4236, 0x0, 0x0);
        gbc.writeMem(0xbe93, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x1d21, gbc.sp());
        EXPECT(0xbe95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe93));
        EXPECT(0xb0, gbc.readMem(0xbe94));
        // CB B0 0392
        gbc.setState(0x1a30, 0x9910, 0x5970, 0x1730, 0xc7cf, 0xdc9b, 0x0, 0x1);
        gbc.writeMem(0x1a30, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9910, gbc.sp());
        EXPECT(0x1a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0393
        gbc.setState(0xb608, 0xffc8, 0xf1b0, 0xf9e7, 0x19cb, 0x6308, 0x1, 0x0);
        gbc.writeMem(0xb608, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xffc8, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb608));
        EXPECT(0xb0, gbc.readMem(0xb609));
        // CB B0 0394
        gbc.setState(0x7398, 0xf131, 0x8b40, 0x683b, 0xbe7f, 0x48a9, 0x1, 0x0);
        gbc.writeMem(0x7398, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0x739a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0395
        gbc.setState(0x2aad, 0xab35, 0xf980, 0xb106, 0xa79b, 0x33a1, 0x0, 0x0);
        gbc.writeMem(0x2aad, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xab35, gbc.sp());
        EXPECT(0x2aaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0396
        gbc.setState(0x40dd, 0xcad9, 0x880, 0x671a, 0x54d0, 0x9354, 0x1, 0x1);
        gbc.writeMem(0x40dd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xcad9, gbc.sp());
        EXPECT(0x40df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 0397
        gbc.setState(0x5f27, 0x25ef, 0xe870, 0xedb0, 0x4f1e, 0xa314, 0x0, 0x1);
        gbc.writeMem(0x5f27, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x5f29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 0398
        gbc.setState(0x9c7d, 0x1e5e, 0x3370, 0x9292, 0x88f2, 0xc523, 0x0, 0x0);
        gbc.writeMem(0x9c7d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1e5e, gbc.sp());
        EXPECT(0x9c7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7d));
        EXPECT(0xb0, gbc.readMem(0x9c7e));
        // CB B0 0399
        gbc.setState(0x6ca1, 0x19b1, 0x59e0, 0x65ca, 0x1cd5, 0x1802, 0x1, 0x1);
        gbc.writeMem(0x6ca1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x19b1, gbc.sp());
        EXPECT(0x6ca3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 039A
        gbc.setState(0x3da1, 0x911e, 0x9e20, 0xeca9, 0x84ea, 0xfd, 0x1, 0x1);
        gbc.writeMem(0x3da1, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x911e, gbc.sp());
        EXPECT(0x3da3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 039B
        gbc.setState(0xeaf, 0xcaaf, 0x7e00, 0x87f0, 0x5ecb, 0x94e5, 0x1, 0x0);
        gbc.writeMem(0xeaf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcaaf, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 039D
        gbc.setState(0xc811, 0x705f, 0x29f0, 0xcfea, 0x447, 0x4c9e, 0x1, 0x1);
        gbc.writeMem(0xc811, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x705f, gbc.sp());
        EXPECT(0xc813, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc811));
        EXPECT(0xb0, gbc.readMem(0xc812));
        // CB B0 039E
        gbc.setState(0xc4de, 0xbf50, 0xfbc0, 0x1d8a, 0x10ea, 0xb42f, 0x1, 0x1);
        gbc.writeMem(0xc4de, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0xc4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4de));
        EXPECT(0xb0, gbc.readMem(0xc4df));
        // CB B0 039F
        gbc.setState(0xe90c, 0x3b6a, 0xabc0, 0x1031, 0x360b, 0x9e37, 0x1, 0x1);
        gbc.writeMem(0xe90c, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x3b6a, gbc.sp());
        EXPECT(0xe90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90c));
        EXPECT(0xb0, gbc.readMem(0xe90d));
        // CB B0 03A0
        gbc.setState(0xd5a6, 0x5db2, 0x2c90, 0xf4ee, 0x2e9e, 0xa2b2, 0x1, 0x1);
        gbc.writeMem(0xd5a6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x5db2, gbc.sp());
        EXPECT(0xd5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5a6));
        EXPECT(0xb0, gbc.readMem(0xd5a7));
        // CB B0 03A1
        gbc.setState(0x860, 0x123, 0x6600, 0x63e8, 0x3b68, 0x668e, 0x0, 0x1);
        gbc.writeMem(0x860, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x123, gbc.sp());
        EXPECT(0x862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03A2
        gbc.setState(0x865, 0xb5ca, 0x9720, 0xf2b3, 0x627, 0x87c1, 0x1, 0x0);
        gbc.writeMem(0x865, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb5ca, gbc.sp());
        EXPECT(0x867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03A3
        gbc.setState(0x3c28, 0x373d, 0x6a10, 0x2084, 0x6003, 0xf96f, 0x0, 0x0);
        gbc.writeMem(0x3c28, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x373d, gbc.sp());
        EXPECT(0x3c2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03A4
        gbc.setState(0x3b17, 0xf278, 0x9670, 0xf83, 0x6ad5, 0xa227, 0x0, 0x0);
        gbc.writeMem(0x3b17, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf278, gbc.sp());
        EXPECT(0x3b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03A5
        gbc.setState(0x54fd, 0x355f, 0x3020, 0x6424, 0x4764, 0xcb27, 0x0, 0x1);
        gbc.writeMem(0x54fd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x355f, gbc.sp());
        EXPECT(0x54ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03A6
        gbc.setState(0x7e72, 0x839f, 0xd8d0, 0xbb10, 0x44da, 0x8fa9, 0x0, 0x0);
        gbc.writeMem(0x7e72, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x839f, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03A7
        gbc.setState(0x533, 0x467a, 0x9970, 0xcba4, 0x898f, 0x9b8d, 0x1, 0x1);
        gbc.writeMem(0x533, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x467a, gbc.sp());
        EXPECT(0x535, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03A8
        gbc.setState(0x1a7d, 0xa49c, 0xd4a0, 0x9525, 0x83c5, 0xaba4, 0x0, 0x0);
        gbc.writeMem(0x1a7d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa49c, gbc.sp());
        EXPECT(0x1a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03A9
        gbc.setState(0xce4, 0x63da, 0x2b80, 0xe81a, 0x2467, 0x8f48, 0x1, 0x1);
        gbc.writeMem(0xce4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x63da, gbc.sp());
        EXPECT(0xce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03AA
        gbc.setState(0xec23, 0xc932, 0xbbe0, 0x5d17, 0xb2da, 0xac36, 0x0, 0x1);
        gbc.writeMem(0xec23, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc932, gbc.sp());
        EXPECT(0xec25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec23));
        EXPECT(0xb0, gbc.readMem(0xec24));
        // CB B0 03AB
        gbc.setState(0xc949, 0xd94c, 0x4bf0, 0xb86c, 0xa497, 0x5cb4, 0x0, 0x0);
        gbc.writeMem(0xc949, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xd94c, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc949));
        EXPECT(0xb0, gbc.readMem(0xc94a));
        // CB B0 03AD
        gbc.setState(0xc0c3, 0xe4a6, 0xd1f0, 0x9aaa, 0xcb02, 0x84cb, 0x1, 0x1);
        gbc.writeMem(0xc0c3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe4a6, gbc.sp());
        EXPECT(0xc0c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c3));
        EXPECT(0xb0, gbc.readMem(0xc0c4));
        // CB B0 03AE
        gbc.setState(0x622a, 0xd7a6, 0xa420, 0x97cf, 0xd87, 0x6f37, 0x0, 0x1);
        gbc.writeMem(0x622a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xd7a6, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03B0
        gbc.setState(0xdf9b, 0xfbf9, 0x43a0, 0xea48, 0x6e28, 0x2a87, 0x1, 0x0);
        gbc.writeMem(0xdf9b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xfbf9, gbc.sp());
        EXPECT(0xdf9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9b));
        EXPECT(0xb0, gbc.readMem(0xdf9c));
        // CB B0 03B2
        gbc.setState(0xda12, 0x26fb, 0xc1d0, 0x6dd8, 0xf7a, 0xfc9b, 0x0, 0x0);
        gbc.writeMem(0xda12, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26fb, gbc.sp());
        EXPECT(0xda14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda12));
        EXPECT(0xb0, gbc.readMem(0xda13));
        // CB B0 03B3
        gbc.setState(0x5a7d, 0x808a, 0x8410, 0xf2ac, 0xca08, 0x6b6d, 0x0, 0x0);
        gbc.writeMem(0x5a7d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x808a, gbc.sp());
        EXPECT(0x5a7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03B4
        gbc.setState(0x1762, 0xaf73, 0x7b20, 0x7b81, 0x3b74, 0x2492, 0x0, 0x1);
        gbc.writeMem(0x1762, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf73, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03B5
        gbc.setState(0xba48, 0x4a1, 0xe140, 0x8eda, 0x3f74, 0xd037, 0x1, 0x0);
        gbc.writeMem(0xba48, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4a1, gbc.sp());
        EXPECT(0xba4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba48));
        EXPECT(0xb0, gbc.readMem(0xba49));
        // CB B0 03B6
        gbc.setState(0x12b3, 0xa25f, 0x4820, 0x2048, 0x5cf7, 0x4542, 0x1, 0x1);
        gbc.writeMem(0x12b3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa25f, gbc.sp());
        EXPECT(0x12b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03B7
        gbc.setState(0xaf58, 0x51df, 0x2420, 0x1bea, 0x106, 0x65d9, 0x1, 0x0);
        gbc.writeMem(0xaf58, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x51df, gbc.sp());
        EXPECT(0xaf5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf58));
        EXPECT(0xb0, gbc.readMem(0xaf59));
        // CB B0 03B8
        gbc.setState(0xb767, 0x7edf, 0x9c10, 0xdd05, 0xb543, 0x2c0, 0x0, 0x1);
        gbc.writeMem(0xb767, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7edf, gbc.sp());
        EXPECT(0xb769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb767));
        EXPECT(0xb0, gbc.readMem(0xb768));
        // CB B0 03B9
        gbc.setState(0x851, 0xa0db, 0xe120, 0x64c1, 0x28cf, 0x6de9, 0x0, 0x0);
        gbc.writeMem(0x851, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0x853, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03BA
        gbc.setState(0x9ead, 0xfefb, 0xc0f0, 0xbbea, 0x3e4, 0xb4a9, 0x0, 0x0);
        gbc.writeMem(0x9ead, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfefb, gbc.sp());
        EXPECT(0x9eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ead));
        EXPECT(0xb0, gbc.readMem(0x9eae));
        // CB B0 03BB
        gbc.setState(0xaea3, 0x4ddf, 0xf2e0, 0xf81c, 0x953c, 0xa8e2, 0x1, 0x0);
        gbc.writeMem(0xaea3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x4ddf, gbc.sp());
        EXPECT(0xaea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaea3));
        EXPECT(0xb0, gbc.readMem(0xaea4));
        // CB B0 03BC
        gbc.setState(0x7cf6, 0x16c0, 0x8230, 0x92fa, 0x9eb6, 0x4c73, 0x0, 0x0);
        gbc.writeMem(0x7cf6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x16c0, gbc.sp());
        EXPECT(0x7cf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03BD
        gbc.setState(0xc0e3, 0x51be, 0xd5d0, 0x21, 0xb4b1, 0x9370, 0x1, 0x0);
        gbc.writeMem(0xc0e3, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x51be, gbc.sp());
        EXPECT(0xc0e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e3));
        EXPECT(0xb0, gbc.readMem(0xc0e4));
        // CB B0 03BF
        gbc.setState(0xb1e0, 0xe85e, 0xbff0, 0xa2a6, 0xebfd, 0x89b5, 0x0, 0x1);
        gbc.writeMem(0xb1e0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe85e, gbc.sp());
        EXPECT(0xb1e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1e0));
        EXPECT(0xb0, gbc.readMem(0xb1e1));
        // CB B0 03C0
        gbc.setState(0xa9d5, 0x978f, 0x3180, 0x690, 0xf441, 0x2f47, 0x0, 0x1);
        gbc.writeMem(0xa9d5, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x978f, gbc.sp());
        EXPECT(0xa9d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d5));
        EXPECT(0xb0, gbc.readMem(0xa9d6));
        // CB B0 03C1
        gbc.setState(0x7693, 0x9ad5, 0x9860, 0x12b3, 0xf8e9, 0x5991, 0x1, 0x0);
        gbc.writeMem(0x7693, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9ad5, gbc.sp());
        EXPECT(0x7695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03C2
        gbc.setState(0xb47b, 0x1f2d, 0x26f0, 0xe26c, 0xf950, 0x8fd9, 0x0, 0x0);
        gbc.writeMem(0xb47b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x1f2d, gbc.sp());
        EXPECT(0xb47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb47b));
        EXPECT(0xb0, gbc.readMem(0xb47c));
        // CB B0 03C3
        gbc.setState(0x1997, 0x6594, 0x3d20, 0x8007, 0x45b6, 0x244, 0x0, 0x1);
        gbc.writeMem(0x1997, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6594, gbc.sp());
        EXPECT(0x1999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03C4
        gbc.setState(0x9227, 0xaced, 0x6520, 0x270b, 0x6a76, 0x5795, 0x1, 0x0);
        gbc.writeMem(0x9227, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xaced, gbc.sp());
        EXPECT(0x9229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9227));
        EXPECT(0xb0, gbc.readMem(0x9228));
        // CB B0 03C5
        gbc.setState(0xd513, 0x695e, 0xef90, 0x6762, 0x4127, 0x3fa5, 0x1, 0x1);
        gbc.writeMem(0xd513, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x695e, gbc.sp());
        EXPECT(0xd515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd513));
        EXPECT(0xb0, gbc.readMem(0xd514));
        // CB B0 03C6
        gbc.setState(0xe27a, 0x996b, 0xf50, 0xeb87, 0x5972, 0x9c1, 0x0, 0x1);
        gbc.writeMem(0xe27a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x996b, gbc.sp());
        EXPECT(0xe27c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe27a));
        EXPECT(0xb0, gbc.readMem(0xe27b));
        // CB B0 03C7
        gbc.setState(0x5e83, 0x8571, 0xe250, 0x2c44, 0xcc35, 0xc185, 0x0, 0x0);
        gbc.writeMem(0x5e83, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x8571, gbc.sp());
        EXPECT(0x5e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03C8
        gbc.setState(0x108f, 0x4ad5, 0xb480, 0xf3e1, 0x943, 0x245e, 0x0, 0x0);
        gbc.writeMem(0x108f, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4ad5, gbc.sp());
        EXPECT(0x1091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03C9
        gbc.setState(0xb92a, 0x6acf, 0x2890, 0xe54, 0x19cc, 0x39da, 0x1, 0x0);
        gbc.writeMem(0xb92a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6acf, gbc.sp());
        EXPECT(0xb92c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb92a));
        EXPECT(0xb0, gbc.readMem(0xb92b));
        // CB B0 03CA
        gbc.setState(0x6325, 0x1d03, 0xaca0, 0xa166, 0x9aa7, 0xc899, 0x0, 0x0);
        gbc.writeMem(0x6325, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x1d03, gbc.sp());
        EXPECT(0x6327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03CB
        gbc.setState(0x65fc, 0x90e6, 0xfbd0, 0x4957, 0x5169, 0x9c62, 0x1, 0x1);
        gbc.writeMem(0x65fc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x65fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03CC
        gbc.setState(0x489d, 0x7b09, 0x9bb0, 0x78e0, 0x5f29, 0x5e6e, 0x0, 0x1);
        gbc.writeMem(0x489d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b09, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03CE
        gbc.setState(0x2612, 0x81f2, 0x3ef0, 0xc251, 0xc2dc, 0xb916, 0x0, 0x1);
        gbc.writeMem(0x2612, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x81f2, gbc.sp());
        EXPECT(0x2614, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03CF
        gbc.setState(0x7247, 0x8c07, 0xc130, 0xb66, 0xcabc, 0xe264, 0x1, 0x1);
        gbc.writeMem(0x7247, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0x7249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03D0
        gbc.setState(0x7411, 0x1af8, 0xc90, 0x13f3, 0x8acb, 0x9ad1, 0x0, 0x0);
        gbc.writeMem(0x7411, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0x7413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03D1
        gbc.setState(0x9ccc, 0x5570, 0xc240, 0x5005, 0xa4cb, 0x7772, 0x0, 0x0);
        gbc.writeMem(0x9ccc, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0x9cce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ccc));
        EXPECT(0xb0, gbc.readMem(0x9ccd));
        // CB B0 03D3
        gbc.setState(0x311a, 0xafc7, 0x28a0, 0x362, 0xb0e2, 0xd344, 0x0, 0x0);
        gbc.writeMem(0x311a, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xafc7, gbc.sp());
        EXPECT(0x311c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03D4
        gbc.setState(0x87e, 0x52cb, 0xb440, 0xab65, 0xafb2, 0x4a35, 0x0, 0x1);
        gbc.writeMem(0x87e, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x52cb, gbc.sp());
        EXPECT(0x880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03D5
        gbc.setState(0x4c50, 0x1dde, 0xb340, 0x817f, 0xf0c2, 0xb990, 0x0, 0x1);
        gbc.writeMem(0x4c50, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x1dde, gbc.sp());
        EXPECT(0x4c52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03D6
        gbc.setState(0x6111, 0x61d2, 0x2d80, 0x6a41, 0x27b8, 0xd39, 0x1, 0x0);
        gbc.writeMem(0x6111, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x61d2, gbc.sp());
        EXPECT(0x6113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03D7
        gbc.setState(0xae82, 0x6e1e, 0xc6b0, 0x92f3, 0x763e, 0xda0c, 0x0, 0x0);
        gbc.writeMem(0xae82, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6e1e, gbc.sp());
        EXPECT(0xae84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae82));
        EXPECT(0xb0, gbc.readMem(0xae83));
        // CB B0 03D8
        gbc.setState(0x7a93, 0xcb3b, 0xf050, 0x58de, 0x6ec7, 0xbd0a, 0x1, 0x1);
        gbc.writeMem(0x7a93, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcb3b, gbc.sp());
        EXPECT(0x7a95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03D9
        gbc.setState(0x1bbd, 0x26ac, 0x8970, 0x86e7, 0x40a5, 0x8e1a, 0x0, 0x1);
        gbc.writeMem(0x1bbd, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x26ac, gbc.sp());
        EXPECT(0x1bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03DA
        gbc.setState(0x55f6, 0xb48c, 0xa0, 0x478, 0xb23d, 0x102, 0x1, 0x1);
        gbc.writeMem(0x55f6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0x55f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03DB
        gbc.setState(0x446d, 0x4396, 0xdce0, 0xf055, 0x9a0d, 0x8dd6, 0x1, 0x0);
        gbc.writeMem(0x446d, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4396, gbc.sp());
        EXPECT(0x446f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03DC
        gbc.setState(0xc34, 0xa834, 0x38f0, 0x7158, 0x455e, 0x1cb4, 0x0, 0x1);
        gbc.writeMem(0xc34, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xa834, gbc.sp());
        EXPECT(0xc36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03DE
        gbc.setState(0x3181, 0xbd7e, 0x7fa0, 0x847d, 0xf6e9, 0xbce3, 0x0, 0x0);
        gbc.writeMem(0x3181, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd7e, gbc.sp());
        EXPECT(0x3183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03DF
        gbc.setState(0xe534, 0x25d7, 0xa9e0, 0xbcb4, 0xab72, 0x5f1d, 0x1, 0x1);
        gbc.writeMem(0xe534, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x25d7, gbc.sp());
        EXPECT(0xe536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe534));
        EXPECT(0xb0, gbc.readMem(0xe535));
        // CB B0 03E0
        gbc.setState(0x5bca, 0xb890, 0xf290, 0x190a, 0x9543, 0xcc56, 0x0, 0x1);
        gbc.writeMem(0x5bca, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb890, gbc.sp());
        EXPECT(0x5bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03E1
        gbc.setState(0xd2c4, 0x2b28, 0xdb0, 0x2df7, 0x6212, 0x3848, 0x1, 0x1);
        gbc.writeMem(0xd2c4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2b28, gbc.sp());
        EXPECT(0xd2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2c4));
        EXPECT(0xb0, gbc.readMem(0xd2c5));
        // CB B0 03E3
        gbc.setState(0xabbf, 0x4306, 0x3930, 0x67f2, 0x5e20, 0xcfc9, 0x1, 0x1);
        gbc.writeMem(0xabbf, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x4306, gbc.sp());
        EXPECT(0xabc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbf));
        EXPECT(0xb0, gbc.readMem(0xabc0));
        // CB B0 03E4
        gbc.setState(0x26b4, 0x50f9, 0x560, 0xfcd8, 0xdee1, 0x31bc, 0x1, 0x1);
        gbc.writeMem(0x26b4, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x50f9, gbc.sp());
        EXPECT(0x26b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B0 03E5
        gbc.setState(0x7cd6, 0x889c, 0x5490, 0xa1f2, 0x251c, 0x53a0, 0x0, 0x0);
        gbc.writeMem(0x7cd6, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x889c, gbc.sp());
        EXPECT(0x7cd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B0 03E6
        gbc.setState(0xe6d0, 0x4442, 0xce10, 0xda7e, 0xd515, 0x3ab7, 0x1, 0x0);
        gbc.writeMem(0xe6d0, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4442, gbc.sp());
        EXPECT(0xe6d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d0));
        EXPECT(0xb0, gbc.readMem(0xe6d1));
        // CB B0 03E7
        gbc.setState(0x855b, 0xc544, 0x6dc0, 0xfa39, 0xa2cd, 0xceca, 0x1, 0x0);
        gbc.writeMem(0x855b, { 0xcb, 0xb0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc544, gbc.sp());
        EXPECT(0x855d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x855b));
        EXPECT(0xb0, gbc.readMem(0x855c));
    }
