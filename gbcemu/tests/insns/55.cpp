#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_55)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_55) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 55 0000
        gbc.setState(0xbb92, 0x4628, 0xf8b0, 0xd18c, 0x98d8, 0x7814, 0x1, 0x0);
        gbc.writeMem(0xbb92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4628);
        EXPECT(gbc.pc(), 0xbb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb92), 0x55);
        // 55 0001
        gbc.setState(0xe156, 0x9096, 0xa400, 0xa734, 0xed9a, 0x5301, 0x1, 0x0);
        gbc.writeMem(0xe156, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9096);
        EXPECT(gbc.pc(), 0xe157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe156), 0x55);
        // 55 0002
        gbc.setState(0xcf4f, 0x1a02, 0xf290, 0x3a88, 0xae44, 0x6944, 0x0, 0x0);
        gbc.writeMem(0xcf4f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x1a02);
        EXPECT(gbc.pc(), 0xcf50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4f), 0x55);
        // 55 0003
        gbc.setState(0x86ec, 0x494, 0x6cd0, 0x2f5d, 0xb9b4, 0x4888, 0x1, 0x0);
        gbc.writeMem(0x86ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x494);
        EXPECT(gbc.pc(), 0x86ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ec), 0x55);
        // 55 0005
        gbc.setState(0x6095, 0xf048, 0x7f40, 0xe84d, 0x77bd, 0xfb23, 0x0, 0x1);
        gbc.writeMem(0x6095, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x6096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0007
        gbc.setState(0x294e, 0x59e8, 0x270, 0xf7b, 0xdc7e, 0xec7f, 0x1, 0x0);
        gbc.writeMem(0x294e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x59e8);
        EXPECT(gbc.pc(), 0x294f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0008
        gbc.setState(0x7a25, 0x788e, 0xde0, 0x43f5, 0xab22, 0x7166, 0x0, 0x0);
        gbc.writeMem(0x7a25, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x788e);
        EXPECT(gbc.pc(), 0x7a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 000B
        gbc.setState(0xdd1b, 0x685f, 0xe2c0, 0xfab1, 0xe343, 0x6d22, 0x1, 0x1);
        gbc.writeMem(0xdd1b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x685f);
        EXPECT(gbc.pc(), 0xdd1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1b), 0x55);
        // 55 000C
        gbc.setState(0xd856, 0xbade, 0xc130, 0x1d81, 0x2d74, 0x8830, 0x0, 0x1);
        gbc.writeMem(0xd856, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xbade);
        EXPECT(gbc.pc(), 0xd857);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd856), 0x55);
        // 55 000D
        gbc.setState(0x9fbd, 0x3c36, 0x5b50, 0x54d7, 0x94cd, 0x7208, 0x1, 0x1);
        gbc.writeMem(0x9fbd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3c36);
        EXPECT(gbc.pc(), 0x9fbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fbd), 0x55);
        // 55 000E
        gbc.setState(0x642a, 0x3227, 0x7f70, 0x7ac9, 0x1902, 0x1e68, 0x1, 0x1);
        gbc.writeMem(0x642a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x3227);
        EXPECT(gbc.pc(), 0x642b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 000F
        gbc.setState(0xe40c, 0x713b, 0xc60, 0xbbbc, 0x2638, 0xd6db, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x713b);
        EXPECT(gbc.pc(), 0xe40d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40c), 0x55);
        // 55 0010
        gbc.setState(0x7331, 0x5e44, 0x8090, 0xc540, 0x7270, 0xa4ac, 0x1, 0x1);
        gbc.writeMem(0x7331, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5e44);
        EXPECT(gbc.pc(), 0x7332);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0011
        gbc.setState(0x13f0, 0x4a90, 0xc20, 0x7087, 0x140b, 0x8e43, 0x0, 0x0);
        gbc.writeMem(0x13f0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x4a90);
        EXPECT(gbc.pc(), 0x13f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0013
        gbc.setState(0x5fef, 0xe028, 0x2720, 0x909, 0x5b7c, 0x1c93, 0x1, 0x0);
        gbc.writeMem(0x5fef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xe028);
        EXPECT(gbc.pc(), 0x5ff0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0014
        gbc.setState(0x4452, 0x916f, 0xc190, 0x4353, 0xd924, 0x8537, 0x1, 0x1);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x916f);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0015
        gbc.setState(0x9367, 0xf5cb, 0xb3a0, 0xdaf7, 0x529d, 0x2ef8, 0x0, 0x1);
        gbc.writeMem(0x9367, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf5cb);
        EXPECT(gbc.pc(), 0x9368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9367), 0x55);
        // 55 0016
        gbc.setState(0x2d78, 0xf591, 0xbce0, 0x5bea, 0x9578, 0x30de, 0x1, 0x0);
        gbc.writeMem(0x2d78, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xf591);
        EXPECT(gbc.pc(), 0x2d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0017
        gbc.setState(0xa3e5, 0xbaa4, 0xbf60, 0x8b86, 0x775b, 0x6e03, 0x1, 0x0);
        gbc.writeMem(0xa3e5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xbaa4);
        EXPECT(gbc.pc(), 0xa3e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e5), 0x55);
        // 55 0019
        gbc.setState(0xb9d1, 0x4baa, 0xee00, 0x812f, 0x9453, 0x875b, 0x0, 0x0);
        gbc.writeMem(0xb9d1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x4baa);
        EXPECT(gbc.pc(), 0xb9d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d1), 0x55);
        // 55 001C
        gbc.setState(0xc731, 0x72a9, 0xf3f0, 0x22d1, 0x9ec, 0x2b62, 0x0, 0x1);
        gbc.writeMem(0xc731, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x72a9);
        EXPECT(gbc.pc(), 0xc732);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc731), 0x55);
        // 55 001D
        gbc.setState(0xec5, 0xdaa9, 0x6440, 0xfce2, 0x8f0, 0x8807, 0x1, 0x0);
        gbc.writeMem(0xec5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdaa9);
        EXPECT(gbc.pc(), 0xec6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 001E
        gbc.setState(0xc29d, 0x50c9, 0x2c0, 0x2905, 0x63c2, 0x60d9, 0x0, 0x0);
        gbc.writeMem(0xc29d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x50c9);
        EXPECT(gbc.pc(), 0xc29e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc29d), 0x55);
        // 55 001F
        gbc.setState(0x26c5, 0x7ddf, 0x270, 0xa8c6, 0xe692, 0xc99f, 0x1, 0x1);
        gbc.writeMem(0x26c5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7ddf);
        EXPECT(gbc.pc(), 0x26c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0020
        gbc.setState(0xa1cd, 0x5c45, 0x38c0, 0x29ca, 0xd4a5, 0xa89c, 0x1, 0x1);
        gbc.writeMem(0xa1cd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5c45);
        EXPECT(gbc.pc(), 0xa1ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1cd), 0x55);
        // 55 0021
        gbc.setState(0x49cf, 0x5693, 0x9240, 0xbeb2, 0x4863, 0x629b, 0x0, 0x0);
        gbc.writeMem(0x49cf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x5693);
        EXPECT(gbc.pc(), 0x49d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0022
        gbc.setState(0x8861, 0xc966, 0x5e10, 0xc663, 0xa066, 0x9454, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc966);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8861), 0x55);
        // 55 0023
        gbc.setState(0x5133, 0xee2e, 0xb5e0, 0x13b6, 0x9469, 0xd04a, 0x1, 0x0);
        gbc.writeMem(0x5133, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xee2e);
        EXPECT(gbc.pc(), 0x5134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0024
        gbc.setState(0xd3f5, 0xa8f1, 0x330, 0xb024, 0x11d0, 0xeabc, 0x0, 0x1);
        gbc.writeMem(0xd3f5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa8f1);
        EXPECT(gbc.pc(), 0xd3f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f5), 0x55);
        // 55 0025
        gbc.setState(0x1d80, 0x1eb, 0xddc0, 0x4561, 0x7a32, 0x1577, 0x1, 0x1);
        gbc.writeMem(0x1d80, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1eb);
        EXPECT(gbc.pc(), 0x1d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0026
        gbc.setState(0x59dc, 0x7ffa, 0xc3f0, 0xfd3b, 0xa03b, 0x3553, 0x0, 0x0);
        gbc.writeMem(0x59dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7ffa);
        EXPECT(gbc.pc(), 0x59dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0027
        gbc.setState(0x6dd8, 0x2d6c, 0x8020, 0xd5ee, 0x1ef7, 0x1ecb, 0x0, 0x0);
        gbc.writeMem(0x6dd8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x2d6c);
        EXPECT(gbc.pc(), 0x6dd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0028
        gbc.setState(0xdf08, 0x650c, 0x5390, 0xb27f, 0x7617, 0xe218, 0x0, 0x1);
        gbc.writeMem(0xdf08, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x650c);
        EXPECT(gbc.pc(), 0xdf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf08), 0x55);
        // 55 0029
        gbc.setState(0xdea1, 0x5fab, 0x6ba0, 0xa6ff, 0xde28, 0x87d4, 0x0, 0x1);
        gbc.writeMem(0xdea1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x5fab);
        EXPECT(gbc.pc(), 0xdea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea1), 0x55);
        // 55 002A
        gbc.setState(0x13ac, 0x1b6a, 0xd120, 0x2734, 0x6ee6, 0x91d9, 0x0, 0x0);
        gbc.writeMem(0x13ac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x1b6a);
        EXPECT(gbc.pc(), 0x13ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 002B
        gbc.setState(0x7ddf, 0x3813, 0x1b50, 0x6808, 0xa544, 0xfb81, 0x1, 0x0);
        gbc.writeMem(0x7ddf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x3813);
        EXPECT(gbc.pc(), 0x7de0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 002C
        gbc.setState(0x11a7, 0x39f7, 0x75d0, 0x89cd, 0x868c, 0x3c3c, 0x0, 0x1);
        gbc.writeMem(0x11a7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x39f7);
        EXPECT(gbc.pc(), 0x11a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 002D
        gbc.setState(0x18ce, 0x81ef, 0x7b30, 0xded0, 0x6411, 0xe177, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x81ef);
        EXPECT(gbc.pc(), 0x18cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 002E
        gbc.setState(0x862d, 0x19d, 0x50f0, 0x3832, 0x6647, 0x3ca5, 0x1, 0x1);
        gbc.writeMem(0x862d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x19d);
        EXPECT(gbc.pc(), 0x862e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862d), 0x55);
        // 55 002F
        gbc.setState(0xa318, 0xb544, 0x6a60, 0xff79, 0xbc2d, 0x8f8e, 0x1, 0x1);
        gbc.writeMem(0xa318, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb544);
        EXPECT(gbc.pc(), 0xa319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa318), 0x55);
        // 55 0030
        gbc.setState(0xaa22, 0xbb54, 0xeaa0, 0x6f5f, 0xb00c, 0xfdad, 0x1, 0x0);
        gbc.writeMem(0xaa22, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xbb54);
        EXPECT(gbc.pc(), 0xaa23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa22), 0x55);
        // 55 0032
        gbc.setState(0x9a25, 0xe966, 0x5d60, 0x2ac5, 0x4e6e, 0x4910, 0x0, 0x0);
        gbc.writeMem(0x9a25, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xe966);
        EXPECT(gbc.pc(), 0x9a26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a25), 0x55);
        // 55 0033
        gbc.setState(0xa97b, 0xdf77, 0x7610, 0xaa25, 0xba78, 0xd7eb, 0x0, 0x0);
        gbc.writeMem(0xa97b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdf77);
        EXPECT(gbc.pc(), 0xa97c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa97b), 0x55);
        // 55 0035
        gbc.setState(0xdca0, 0x7010, 0x2c80, 0x247e, 0xd548, 0x1ab5, 0x1, 0x0);
        gbc.writeMem(0xdca0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0xdca1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdca0), 0x55);
        // 55 0036
        gbc.setState(0xb88a, 0x657d, 0x9770, 0x88f6, 0x3acc, 0x49ee, 0x0, 0x0);
        gbc.writeMem(0xb88a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x657d);
        EXPECT(gbc.pc(), 0xb88b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb88a), 0x55);
        // 55 0037
        gbc.setState(0x1160, 0xe135, 0xc940, 0x22e5, 0xba89, 0x9132, 0x0, 0x0);
        gbc.writeMem(0x1160, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xe135);
        EXPECT(gbc.pc(), 0x1161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0038
        gbc.setState(0x64c1, 0x95d8, 0xfd00, 0xc8b2, 0x529c, 0x476, 0x1, 0x0);
        gbc.writeMem(0x64c1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x95d8);
        EXPECT(gbc.pc(), 0x64c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0039
        gbc.setState(0xeed8, 0xa6a5, 0x9f0, 0x3d09, 0x7dd7, 0x668, 0x1, 0x1);
        gbc.writeMem(0xeed8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xa6a5);
        EXPECT(gbc.pc(), 0xeed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed8), 0x55);
        // 55 003A
        gbc.setState(0xaaa8, 0x1a77, 0xb890, 0x1717, 0xe30e, 0x21d5, 0x1, 0x1);
        gbc.writeMem(0xaaa8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1a77);
        EXPECT(gbc.pc(), 0xaaa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa8), 0x55);
        // 55 003B
        gbc.setState(0x133e, 0xaafc, 0x4430, 0x913a, 0x769d, 0x844e, 0x0, 0x1);
        gbc.writeMem(0x133e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xaafc);
        EXPECT(gbc.pc(), 0x133f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 003C
        gbc.setState(0x3014, 0xe367, 0xb6e0, 0x189a, 0xafdd, 0xd912, 0x0, 0x1);
        gbc.writeMem(0x3014, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe367);
        EXPECT(gbc.pc(), 0x3015);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 003D
        gbc.setState(0xaf6a, 0x1801, 0x6b60, 0x8440, 0xb467, 0x1ab8, 0x0, 0x1);
        gbc.writeMem(0xaf6a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1801);
        EXPECT(gbc.pc(), 0xaf6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf6a), 0x55);
        // 55 003E
        gbc.setState(0xd65f, 0x2633, 0xaf70, 0x3534, 0x4a96, 0xf618, 0x1, 0x1);
        gbc.writeMem(0xd65f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2633);
        EXPECT(gbc.pc(), 0xd660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd65f), 0x55);
        // 55 003F
        gbc.setState(0x7ba5, 0xe7bf, 0x4d60, 0xa4e6, 0xbb7c, 0x7c22, 0x0, 0x1);
        gbc.writeMem(0x7ba5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0x7ba6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0040
        gbc.setState(0x8fcb, 0xccbb, 0xe70, 0x6508, 0x5e80, 0x7951, 0x1, 0x0);
        gbc.writeMem(0x8fcb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xccbb);
        EXPECT(gbc.pc(), 0x8fcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcb), 0x55);
        // 55 0041
        gbc.setState(0x13d4, 0xa2cd, 0x3680, 0xd2fc, 0x6979, 0x33e3, 0x0, 0x0);
        gbc.writeMem(0x13d4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa2cd);
        EXPECT(gbc.pc(), 0x13d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0042
        gbc.setState(0x25a7, 0x20a1, 0xa9d0, 0xdb7f, 0xec27, 0xc40d, 0x1, 0x0);
        gbc.writeMem(0x25a7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x20a1);
        EXPECT(gbc.pc(), 0x25a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0043
        gbc.setState(0xa01b, 0x3eae, 0x5650, 0x3ba9, 0x4020, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xa01b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3eae);
        EXPECT(gbc.pc(), 0xa01c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa01b), 0x55);
        // 55 0044
        gbc.setState(0x44be, 0x913, 0xfde0, 0xde51, 0xe900, 0xd388, 0x0, 0x0);
        gbc.writeMem(0x44be, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x913);
        EXPECT(gbc.pc(), 0x44bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0045
        gbc.setState(0x103e, 0x8bc7, 0x9c90, 0x63d0, 0x89ac, 0xff3, 0x0, 0x1);
        gbc.writeMem(0x103e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8bc7);
        EXPECT(gbc.pc(), 0x103f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0046
        gbc.setState(0xba8c, 0xeeb4, 0xce60, 0xe464, 0xc5c4, 0xdd52, 0x1, 0x1);
        gbc.writeMem(0xba8c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xeeb4);
        EXPECT(gbc.pc(), 0xba8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba8c), 0x55);
        // 55 0047
        gbc.setState(0xc402, 0x3b7a, 0x2950, 0xa69a, 0x3c1c, 0xea71, 0x1, 0x1);
        gbc.writeMem(0xc402, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x3b7a);
        EXPECT(gbc.pc(), 0xc403);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc402), 0x55);
        // 55 0048
        gbc.setState(0xd420, 0x2373, 0xf730, 0x7360, 0x6351, 0xdf65, 0x1, 0x1);
        gbc.writeMem(0xd420, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x2373);
        EXPECT(gbc.pc(), 0xd421);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd420), 0x55);
        // 55 0049
        gbc.setState(0x10a0, 0x5eb5, 0x7670, 0xfc67, 0x48e8, 0x1954, 0x1, 0x0);
        gbc.writeMem(0x10a0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5eb5);
        EXPECT(gbc.pc(), 0x10a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 004A
        gbc.setState(0x1598, 0x1680, 0x1630, 0x895c, 0xfb5e, 0x3aad, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x1680);
        EXPECT(gbc.pc(), 0x1599);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 004B
        gbc.setState(0x12, 0x9444, 0xcf0, 0x3f2, 0x97cc, 0x2654, 0x0, 0x1);
        gbc.writeMem(0x12, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x9444);
        EXPECT(gbc.pc(), 0x13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 004C
        gbc.setState(0xad2f, 0x561e, 0x6830, 0x9dd9, 0xa7a5, 0x3a54, 0x1, 0x1);
        gbc.writeMem(0xad2f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x561e);
        EXPECT(gbc.pc(), 0xad30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad2f), 0x55);
        // 55 004D
        gbc.setState(0x57ae, 0xba66, 0x6c90, 0x42f6, 0xd9c4, 0x53c1, 0x0, 0x0);
        gbc.writeMem(0x57ae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xba66);
        EXPECT(gbc.pc(), 0x57af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 004E
        gbc.setState(0xb605, 0x2d23, 0x3a20, 0x901e, 0x862, 0x8089, 0x1, 0x0);
        gbc.writeMem(0xb605, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2d23);
        EXPECT(gbc.pc(), 0xb606);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb605), 0x55);
        // 55 004F
        gbc.setState(0x6441, 0x8a14, 0xc450, 0x4227, 0x2ce2, 0xafdf, 0x1, 0x1);
        gbc.writeMem(0x6441, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8a14);
        EXPECT(gbc.pc(), 0x6442);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0050
        gbc.setState(0x3e7d, 0x6833, 0xdb50, 0xbbba, 0xff64, 0xdd37, 0x0, 0x0);
        gbc.writeMem(0x3e7d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x6833);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0051
        gbc.setState(0x1c3f, 0xe7c0, 0xb3d0, 0x4206, 0x94f0, 0x5c38, 0x1, 0x0);
        gbc.writeMem(0x1c3f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe7c0);
        EXPECT(gbc.pc(), 0x1c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0052
        gbc.setState(0x1d7d, 0xa337, 0xbaa0, 0x7ca6, 0x414b, 0xa0e4, 0x1, 0x1);
        gbc.writeMem(0x1d7d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa337);
        EXPECT(gbc.pc(), 0x1d7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0053
        gbc.setState(0xda52, 0x753b, 0x2d00, 0x9db3, 0x64d1, 0x511d, 0x0, 0x1);
        gbc.writeMem(0xda52, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x753b);
        EXPECT(gbc.pc(), 0xda53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda52), 0x55);
        // 55 0054
        gbc.setState(0xc3f4, 0xce44, 0x3e70, 0x8724, 0x76e8, 0xcdb2, 0x1, 0x0);
        gbc.writeMem(0xc3f4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0xc3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3f4), 0x55);
        // 55 0055
        gbc.setState(0x401f, 0x961b, 0x84c0, 0x29cb, 0xce10, 0x9b30, 0x0, 0x0);
        gbc.writeMem(0x401f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x961b);
        EXPECT(gbc.pc(), 0x4020);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0056
        gbc.setState(0x8516, 0xd148, 0x6510, 0xeac5, 0x4763, 0x4d28, 0x1, 0x1);
        gbc.writeMem(0x8516, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd148);
        EXPECT(gbc.pc(), 0x8517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8516), 0x55);
        // 55 0057
        gbc.setState(0x729a, 0x3a55, 0x10b0, 0x43eb, 0x7a5a, 0xa3df, 0x1, 0x1);
        gbc.writeMem(0x729a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x3a55);
        EXPECT(gbc.pc(), 0x729b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0058
        gbc.setState(0x8c4, 0x72f9, 0x3e70, 0x1705, 0xb940, 0xf8c9, 0x1, 0x0);
        gbc.writeMem(0x8c4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x72f9);
        EXPECT(gbc.pc(), 0x8c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0059
        gbc.setState(0xa780, 0xbe70, 0x2660, 0x4742, 0x524b, 0xca8c, 0x0, 0x1);
        gbc.writeMem(0xa780, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xbe70);
        EXPECT(gbc.pc(), 0xa781);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa780), 0x55);
        // 55 005A
        gbc.setState(0x67a7, 0x34e7, 0x9970, 0x8776, 0x48b4, 0x2ad5, 0x1, 0x0);
        gbc.writeMem(0x67a7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x34e7);
        EXPECT(gbc.pc(), 0x67a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 005B
        gbc.setState(0x7c3d, 0xb474, 0x9c50, 0x948d, 0x7ccf, 0xdfb3, 0x0, 0x1);
        gbc.writeMem(0x7c3d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb474);
        EXPECT(gbc.pc(), 0x7c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 005C
        gbc.setState(0x1fb5, 0xe278, 0x1a00, 0x20fd, 0x92a3, 0x9ffe, 0x0, 0x0);
        gbc.writeMem(0x1fb5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe278);
        EXPECT(gbc.pc(), 0x1fb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 005D
        gbc.setState(0x3e79, 0xa891, 0x33c0, 0xe9aa, 0x708c, 0x6e3, 0x0, 0x0);
        gbc.writeMem(0x3e79, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa891);
        EXPECT(gbc.pc(), 0x3e7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 005E
        gbc.setState(0xd1bd, 0x4f6, 0xa30, 0x9200, 0x9845, 0xb5f8, 0x1, 0x1);
        gbc.writeMem(0xd1bd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x4f6);
        EXPECT(gbc.pc(), 0xd1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bd), 0x55);
        // 55 005F
        gbc.setState(0x88d2, 0xed92, 0x58f0, 0xc61d, 0x9f96, 0x7a90, 0x1, 0x0);
        gbc.writeMem(0x88d2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed92);
        EXPECT(gbc.pc(), 0x88d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d2), 0x55);
        // 55 0060
        gbc.setState(0x1f83, 0xe67e, 0xed90, 0xf2f9, 0x88ea, 0x355c, 0x0, 0x1);
        gbc.writeMem(0x1f83, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xe67e);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0061
        gbc.setState(0xa8d, 0x701, 0xc800, 0xec85, 0x9244, 0x4b78, 0x1, 0x0);
        gbc.writeMem(0xa8d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x701);
        EXPECT(gbc.pc(), 0xa8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0062
        gbc.setState(0xd757, 0x5972, 0x1d80, 0xc14, 0x575c, 0xf51c, 0x0, 0x1);
        gbc.writeMem(0xd757, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5972);
        EXPECT(gbc.pc(), 0xd758);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd757), 0x55);
        // 55 0063
        gbc.setState(0x1b25, 0x53ee, 0x8010, 0xc586, 0xba7a, 0xfeb0, 0x1, 0x1);
        gbc.writeMem(0x1b25, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x53ee);
        EXPECT(gbc.pc(), 0x1b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0064
        gbc.setState(0x5e30, 0x73f, 0xb280, 0x6083, 0x689d, 0xd60, 0x0, 0x1);
        gbc.writeMem(0x5e30, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x73f);
        EXPECT(gbc.pc(), 0x5e31);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0065
        gbc.setState(0x93a8, 0xf147, 0x7fe0, 0x752d, 0x6990, 0x8b75, 0x1, 0x0);
        gbc.writeMem(0x93a8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf147);
        EXPECT(gbc.pc(), 0x93a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a8), 0x55);
        // 55 0067
        gbc.setState(0x920, 0x2c9b, 0xdeb0, 0xd9f1, 0xdbd0, 0xc477, 0x0, 0x0);
        gbc.writeMem(0x920, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2c9b);
        EXPECT(gbc.pc(), 0x921);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0068
        gbc.setState(0xe0bc, 0x453c, 0xea40, 0x5da2, 0x44c9, 0x96f1, 0x1, 0x1);
        gbc.writeMem(0xe0bc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0xe0bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0bc), 0x55);
        // 55 0069
        gbc.setState(0xc11, 0x7e12, 0x920, 0x433e, 0x4e48, 0xa00, 0x1, 0x1);
        gbc.writeMem(0xc11, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x7e12);
        EXPECT(gbc.pc(), 0xc12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 006A
        gbc.setState(0x2f98, 0x4781, 0x5000, 0x4ba7, 0xbdcd, 0xc487, 0x1, 0x0);
        gbc.writeMem(0x2f98, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x4781);
        EXPECT(gbc.pc(), 0x2f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 006B
        gbc.setState(0xdc1b, 0x14d6, 0x8f80, 0x6b5a, 0xeb84, 0x9bfb, 0x0, 0x1);
        gbc.writeMem(0xdc1b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x14d6);
        EXPECT(gbc.pc(), 0xdc1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc1b), 0x55);
        // 55 006D
        gbc.setState(0x64af, 0xdc9f, 0x2db0, 0x6212, 0xd6f5, 0x91c0, 0x1, 0x1);
        gbc.writeMem(0x64af, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xdc9f);
        EXPECT(gbc.pc(), 0x64b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 006E
        gbc.setState(0x8f4c, 0xe336, 0x4470, 0x4117, 0xdcdb, 0x9b8, 0x1, 0x0);
        gbc.writeMem(0x8f4c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe336);
        EXPECT(gbc.pc(), 0x8f4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f4c), 0x55);
        // 55 006F
        gbc.setState(0x6222, 0x65e9, 0xdbb0, 0x7ae1, 0x31e8, 0xf739, 0x0, 0x1);
        gbc.writeMem(0x6222, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x65e9);
        EXPECT(gbc.pc(), 0x6223);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0070
        gbc.setState(0x6fe1, 0x67bb, 0x79f0, 0xd959, 0xe035, 0xd6be, 0x1, 0x0);
        gbc.writeMem(0x6fe1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x67bb);
        EXPECT(gbc.pc(), 0x6fe2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0072
        gbc.setState(0x639, 0x4ed0, 0x1a70, 0x621b, 0x6aae, 0x1c8a, 0x0, 0x0);
        gbc.writeMem(0x639, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x4ed0);
        EXPECT(gbc.pc(), 0x63a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0073
        gbc.setState(0x2ed4, 0x6ede, 0x89a0, 0xe1a1, 0x195d, 0x518e, 0x1, 0x1);
        gbc.writeMem(0x2ed4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x6ede);
        EXPECT(gbc.pc(), 0x2ed5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0074
        gbc.setState(0xa79d, 0xb33c, 0x5520, 0x2f22, 0x24c0, 0xbdb2, 0x0, 0x0);
        gbc.writeMem(0xa79d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb33c);
        EXPECT(gbc.pc(), 0xa79e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa79d), 0x55);
        // 55 0075
        gbc.setState(0x3d79, 0x6721, 0x200, 0x5e80, 0xde70, 0x30d9, 0x0, 0x1);
        gbc.writeMem(0x3d79, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x6721);
        EXPECT(gbc.pc(), 0x3d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0076
        gbc.setState(0x9982, 0xbd25, 0xe0f0, 0x8a0d, 0xed67, 0x866f, 0x0, 0x0);
        gbc.writeMem(0x9982, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xbd25);
        EXPECT(gbc.pc(), 0x9983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9982), 0x55);
        // 55 0078
        gbc.setState(0x58c6, 0x7763, 0x7c90, 0x9c98, 0x6a47, 0x3524, 0x0, 0x1);
        gbc.writeMem(0x58c6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x7763);
        EXPECT(gbc.pc(), 0x58c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0079
        gbc.setState(0xd583, 0xc54c, 0x87e0, 0xaf2a, 0xa444, 0x31da, 0x1, 0x1);
        gbc.writeMem(0xd583, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc54c);
        EXPECT(gbc.pc(), 0xd584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd583), 0x55);
        // 55 007A
        gbc.setState(0x745d, 0x3a13, 0x9730, 0xcce4, 0xccd5, 0x3115, 0x0, 0x0);
        gbc.writeMem(0x745d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3a13);
        EXPECT(gbc.pc(), 0x745e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 007B
        gbc.setState(0x393b, 0xfa20, 0xef60, 0x1ca4, 0xf469, 0xc4f5, 0x0, 0x1);
        gbc.writeMem(0x393b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xfa20);
        EXPECT(gbc.pc(), 0x393c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 007C
        gbc.setState(0xb427, 0x5741, 0x6bb0, 0x31c0, 0x95c6, 0x77bc, 0x0, 0x1);
        gbc.writeMem(0xb427, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x5741);
        EXPECT(gbc.pc(), 0xb428);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb427), 0x55);
        // 55 007D
        gbc.setState(0x9c15, 0xe719, 0xb160, 0x3634, 0xb18c, 0xec55, 0x0, 0x1);
        gbc.writeMem(0x9c15, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe719);
        EXPECT(gbc.pc(), 0x9c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c15), 0x55);
        // 55 007E
        gbc.setState(0xc073, 0x1a1, 0xa870, 0xa4a7, 0x2781, 0x6488, 0x0, 0x0);
        gbc.writeMem(0xc073, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x1a1);
        EXPECT(gbc.pc(), 0xc074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc073), 0x55);
        // 55 007F
        gbc.setState(0x233b, 0x5977, 0x7cc0, 0x7cc0, 0xa22b, 0xe8fb, 0x0, 0x1);
        gbc.writeMem(0x233b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x5977);
        EXPECT(gbc.pc(), 0x233c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0080
        gbc.setState(0xb36d, 0xcbee, 0x14c0, 0xf50, 0x770f, 0x50b8, 0x0, 0x1);
        gbc.writeMem(0xb36d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xcbee);
        EXPECT(gbc.pc(), 0xb36e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb36d), 0x55);
        // 55 0081
        gbc.setState(0xa7c3, 0x12e8, 0x2e40, 0x4707, 0x103d, 0x3751, 0x0, 0x1);
        gbc.writeMem(0xa7c3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x12e8);
        EXPECT(gbc.pc(), 0xa7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7c3), 0x55);
        // 55 0082
        gbc.setState(0xbb44, 0x245c, 0xde0, 0xc5b1, 0x3b05, 0x91c7, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x245c);
        EXPECT(gbc.pc(), 0xbb45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb44), 0x55);
        // 55 0083
        gbc.setState(0x1a75, 0x5646, 0x2c70, 0x2515, 0xdd7d, 0xe5eb, 0x0, 0x1);
        gbc.writeMem(0x1a75, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x1a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0084
        gbc.setState(0x2ffe, 0x99de, 0x40d0, 0xbd06, 0x6396, 0x9a0, 0x0, 0x0);
        gbc.writeMem(0x2ffe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x99de);
        EXPECT(gbc.pc(), 0x2fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0086
        gbc.setState(0x89ef, 0xc16e, 0x90b0, 0xc093, 0x4f81, 0xc483, 0x1, 0x1);
        gbc.writeMem(0x89ef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc16e);
        EXPECT(gbc.pc(), 0x89f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89ef), 0x55);
        // 55 0087
        gbc.setState(0xd71b, 0x88e9, 0x61a0, 0xb89e, 0x934e, 0x4b9f, 0x0, 0x1);
        gbc.writeMem(0xd71b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x88e9);
        EXPECT(gbc.pc(), 0xd71c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd71b), 0x55);
        // 55 0088
        gbc.setState(0x23e1, 0x761, 0xda40, 0x7707, 0x8667, 0x753d, 0x0, 0x0);
        gbc.writeMem(0x23e1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x761);
        EXPECT(gbc.pc(), 0x23e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0089
        gbc.setState(0xa272, 0xf069, 0x34d0, 0xf2c, 0xe38b, 0x885a, 0x0, 0x0);
        gbc.writeMem(0xa272, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf069);
        EXPECT(gbc.pc(), 0xa273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa272), 0x55);
        // 55 008A
        gbc.setState(0x3635, 0xde78, 0x13b0, 0x1f46, 0x23c2, 0xd3fa, 0x1, 0x0);
        gbc.writeMem(0x3635, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xde78);
        EXPECT(gbc.pc(), 0x3636);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 008B
        gbc.setState(0xbcc2, 0xc5f1, 0x92a0, 0x4d3, 0x8b40, 0xa70d, 0x0, 0x0);
        gbc.writeMem(0xbcc2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xc5f1);
        EXPECT(gbc.pc(), 0xbcc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc2), 0x55);
        // 55 008C
        gbc.setState(0x80d0, 0x9072, 0xcd60, 0xc976, 0x4479, 0xcb6, 0x0, 0x0);
        gbc.writeMem(0x80d0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x9072);
        EXPECT(gbc.pc(), 0x80d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80d0), 0x55);
        // 55 008D
        gbc.setState(0x2d87, 0x805e, 0xef30, 0x292f, 0x1747, 0xbe45, 0x1, 0x0);
        gbc.writeMem(0x2d87, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x805e);
        EXPECT(gbc.pc(), 0x2d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 008E
        gbc.setState(0xd247, 0xe07d, 0x3460, 0x8e25, 0x9bfd, 0xbe2e, 0x1, 0x1);
        gbc.writeMem(0xd247, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xe07d);
        EXPECT(gbc.pc(), 0xd248);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd247), 0x55);
        // 55 008F
        gbc.setState(0x39f1, 0xe1ae, 0x58b0, 0xb48a, 0x90df, 0x4303, 0x1, 0x0);
        gbc.writeMem(0x39f1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xe1ae);
        EXPECT(gbc.pc(), 0x39f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0090
        gbc.setState(0xac8, 0xe308, 0x600, 0x2a2, 0x30e8, 0x53b2, 0x1, 0x0);
        gbc.writeMem(0xac8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xe308);
        EXPECT(gbc.pc(), 0xac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0091
        gbc.setState(0x5714, 0x76bd, 0x6310, 0xe332, 0xed64, 0x5b, 0x1, 0x0);
        gbc.writeMem(0x5714, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x76bd);
        EXPECT(gbc.pc(), 0x5715);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0092
        gbc.setState(0xe2ac, 0xfacc, 0xca70, 0xd27a, 0x640, 0x808f, 0x1, 0x1);
        gbc.writeMem(0xe2ac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xfacc);
        EXPECT(gbc.pc(), 0xe2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ac), 0x55);
        // 55 0093
        gbc.setState(0x184d, 0x34ca, 0x5720, 0xf0fa, 0x331d, 0x176c, 0x0, 0x0);
        gbc.writeMem(0x184d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x34ca);
        EXPECT(gbc.pc(), 0x184e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0094
        gbc.setState(0xa638, 0xc7c5, 0x4c40, 0xe2da, 0xfcf9, 0xf5da, 0x1, 0x0);
        gbc.writeMem(0xa638, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xc7c5);
        EXPECT(gbc.pc(), 0xa639);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa638), 0x55);
        // 55 0095
        gbc.setState(0x2c08, 0x6743, 0x9380, 0xf4ec, 0x3cc9, 0xb45, 0x0, 0x1);
        gbc.writeMem(0x2c08, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x6743);
        EXPECT(gbc.pc(), 0x2c09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0096
        gbc.setState(0x347c, 0x9c88, 0xc570, 0xc7f3, 0xe59e, 0x7259, 0x1, 0x1);
        gbc.writeMem(0x347c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9c88);
        EXPECT(gbc.pc(), 0x347d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0097
        gbc.setState(0x2de6, 0xd550, 0x20a0, 0xd0f2, 0x7313, 0xa0ae, 0x1, 0x1);
        gbc.writeMem(0x2de6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd550);
        EXPECT(gbc.pc(), 0x2de7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0098
        gbc.setState(0xa823, 0x7905, 0x6450, 0x32a2, 0x3205, 0x210a, 0x0, 0x0);
        gbc.writeMem(0xa823, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x7905);
        EXPECT(gbc.pc(), 0xa824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa823), 0x55);
        // 55 0099
        gbc.setState(0x299d, 0xcac8, 0x46a0, 0xaf8f, 0x4be6, 0xd1f0, 0x0, 0x1);
        gbc.writeMem(0x299d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcac8);
        EXPECT(gbc.pc(), 0x299e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 009A
        gbc.setState(0x7c79, 0x7a4a, 0xb640, 0x309f, 0x3163, 0x631b, 0x1, 0x1);
        gbc.writeMem(0x7c79, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7a4a);
        EXPECT(gbc.pc(), 0x7c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 009C
        gbc.setState(0x6767, 0xba98, 0x2550, 0x16, 0x9d04, 0x71e4, 0x0, 0x1);
        gbc.writeMem(0x6767, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xba98);
        EXPECT(gbc.pc(), 0x6768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 009D
        gbc.setState(0xd4fe, 0x76aa, 0x7b50, 0xd9e8, 0x24bf, 0x6f5c, 0x0, 0x1);
        gbc.writeMem(0xd4fe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x76aa);
        EXPECT(gbc.pc(), 0xd4ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4fe), 0x55);
        // 55 009E
        gbc.setState(0xa62e, 0xced, 0x8090, 0xdfd0, 0x27e4, 0xcaf5, 0x0, 0x0);
        gbc.writeMem(0xa62e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xced);
        EXPECT(gbc.pc(), 0xa62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62e), 0x55);
        // 55 009F
        gbc.setState(0xb5c6, 0xa15f, 0x97c0, 0xa453, 0x8b8f, 0x33b4, 0x1, 0x0);
        gbc.writeMem(0xb5c6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xa15f);
        EXPECT(gbc.pc(), 0xb5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5c6), 0x55);
        // 55 00A0
        gbc.setState(0xbcb8, 0x90e1, 0x6530, 0x39b, 0x98ce, 0xc7, 0x1, 0x1);
        gbc.writeMem(0xbcb8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x90e1);
        EXPECT(gbc.pc(), 0xbcb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb8), 0x55);
        // 55 00A1
        gbc.setState(0x998e, 0x65d9, 0x2b70, 0xf661, 0x8ec6, 0xf6a8, 0x0, 0x1);
        gbc.writeMem(0x998e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x65d9);
        EXPECT(gbc.pc(), 0x998f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998e), 0x55);
        // 55 00A2
        gbc.setState(0x49f, 0xc8d5, 0x31e0, 0x79c3, 0xbdf9, 0xaa40, 0x0, 0x0);
        gbc.writeMem(0x49f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xc8d5);
        EXPECT(gbc.pc(), 0x4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00A3
        gbc.setState(0x4c4a, 0xc6c, 0x8300, 0xfde6, 0x7b50, 0x17e7, 0x1, 0x0);
        gbc.writeMem(0x4c4a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc6c);
        EXPECT(gbc.pc(), 0x4c4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00A4
        gbc.setState(0xcdf5, 0xc14d, 0xa870, 0xb3f8, 0xa0d4, 0x2caf, 0x0, 0x0);
        gbc.writeMem(0xcdf5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xc14d);
        EXPECT(gbc.pc(), 0xcdf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdf5), 0x55);
        // 55 00A5
        gbc.setState(0xa6fa, 0xe0e0, 0x8580, 0x5032, 0xa103, 0x195f, 0x0, 0x0);
        gbc.writeMem(0xa6fa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe0e0);
        EXPECT(gbc.pc(), 0xa6fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6fa), 0x55);
        // 55 00A6
        gbc.setState(0xc8ba, 0x2d22, 0x2190, 0x8d24, 0xf90d, 0x2215, 0x1, 0x0);
        gbc.writeMem(0xc8ba, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x2d22);
        EXPECT(gbc.pc(), 0xc8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ba), 0x55);
        // 55 00A7
        gbc.setState(0xc6e3, 0xd8d8, 0x1ca0, 0x1847, 0x77ed, 0xf5d2, 0x1, 0x0);
        gbc.writeMem(0xc6e3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd8d8);
        EXPECT(gbc.pc(), 0xc6e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e3), 0x55);
        // 55 00A8
        gbc.setState(0x9040, 0x585c, 0xb990, 0x31be, 0xfe79, 0x5df7, 0x0, 0x1);
        gbc.writeMem(0x9040, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x585c);
        EXPECT(gbc.pc(), 0x9041);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9040), 0x55);
        // 55 00A9
        gbc.setState(0x96bc, 0xd3a3, 0xe5a0, 0x590f, 0xcfdb, 0xeb8c, 0x0, 0x1);
        gbc.writeMem(0x96bc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd3a3);
        EXPECT(gbc.pc(), 0x96bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96bc), 0x55);
        // 55 00AA
        gbc.setState(0xd84d, 0xe07e, 0xeeb0, 0xd171, 0xffaf, 0xd2e2, 0x0, 0x0);
        gbc.writeMem(0xd84d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe07e);
        EXPECT(gbc.pc(), 0xd84e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84d), 0x55);
        // 55 00AB
        gbc.setState(0xc1a1, 0xe72, 0x88e0, 0x9af6, 0xd47f, 0x821a, 0x1, 0x1);
        gbc.writeMem(0xc1a1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xe72);
        EXPECT(gbc.pc(), 0xc1a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a1), 0x55);
        // 55 00AC
        gbc.setState(0xc77e, 0x87cb, 0x2950, 0x41a2, 0xc3ea, 0xd511, 0x0, 0x1);
        gbc.writeMem(0xc77e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x87cb);
        EXPECT(gbc.pc(), 0xc77f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc77e), 0x55);
        // 55 00AD
        gbc.setState(0x1d0b, 0xa766, 0xc1c0, 0x649c, 0xc9e4, 0xeef, 0x0, 0x0);
        gbc.writeMem(0x1d0b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xa766);
        EXPECT(gbc.pc(), 0x1d0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00AE
        gbc.setState(0x4452, 0xe6f7, 0x8290, 0xf91f, 0xe2f7, 0x7b18, 0x0, 0x0);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe6f7);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00AF
        gbc.setState(0x8885, 0x4ce8, 0x3950, 0x1d96, 0x2547, 0x6270, 0x0, 0x0);
        gbc.writeMem(0x8885, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x4ce8);
        EXPECT(gbc.pc(), 0x8886);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8885), 0x55);
        // 55 00B0
        gbc.setState(0x76a3, 0x22a3, 0xee80, 0xe9d4, 0xd4d1, 0x3528, 0x0, 0x1);
        gbc.writeMem(0x76a3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x22a3);
        EXPECT(gbc.pc(), 0x76a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00B1
        gbc.setState(0xbb7a, 0x2a9b, 0x8af0, 0x11a, 0x460d, 0xeef2, 0x0, 0x0);
        gbc.writeMem(0xbb7a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x2a9b);
        EXPECT(gbc.pc(), 0xbb7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7a), 0x55);
        // 55 00B2
        gbc.setState(0x395d, 0x6236, 0xcbd0, 0xfd2a, 0x4337, 0x4a3e, 0x0, 0x1);
        gbc.writeMem(0x395d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x6236);
        EXPECT(gbc.pc(), 0x395e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00B3
        gbc.setState(0x755b, 0x99ea, 0x7800, 0xb21, 0x5fb0, 0x518, 0x0, 0x1);
        gbc.writeMem(0x755b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x99ea);
        EXPECT(gbc.pc(), 0x755c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00B4
        gbc.setState(0xef3b, 0x6b4f, 0x3f70, 0x9a94, 0xafcd, 0xbb81, 0x1, 0x1);
        gbc.writeMem(0xef3b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6b4f);
        EXPECT(gbc.pc(), 0xef3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef3b), 0x55);
        // 55 00B5
        gbc.setState(0x25fd, 0x8bbf, 0x11a0, 0x5cd4, 0xcef, 0x4282, 0x1, 0x0);
        gbc.writeMem(0x25fd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8bbf);
        EXPECT(gbc.pc(), 0x25fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00B6
        gbc.setState(0xc750, 0xfc86, 0xc050, 0x9888, 0xec70, 0xe19a, 0x1, 0x0);
        gbc.writeMem(0xc750, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfc86);
        EXPECT(gbc.pc(), 0xc751);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc750), 0x55);
        // 55 00B7
        gbc.setState(0xa0fb, 0x24a3, 0x4fc0, 0x83d, 0x4ec0, 0xf8be, 0x0, 0x1);
        gbc.writeMem(0xa0fb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x24a3);
        EXPECT(gbc.pc(), 0xa0fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fb), 0x55);
        // 55 00B8
        gbc.setState(0x39f5, 0x779d, 0xe240, 0xed7, 0x5dbd, 0xe38c, 0x0, 0x1);
        gbc.writeMem(0x39f5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x779d);
        EXPECT(gbc.pc(), 0x39f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00B9
        gbc.setState(0xb4b1, 0x415f, 0x7ab0, 0x58cf, 0x6e8f, 0x6bdc, 0x0, 0x0);
        gbc.writeMem(0xb4b1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0xb4b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4b1), 0x55);
        // 55 00BA
        gbc.setState(0x3703, 0x8dbe, 0x2540, 0xcd73, 0xb6e2, 0x51b4, 0x1, 0x0);
        gbc.writeMem(0x3703, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x8dbe);
        EXPECT(gbc.pc(), 0x3704);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00BB
        gbc.setState(0xd610, 0x22f6, 0x29b0, 0x6437, 0xf296, 0x53b4, 0x1, 0x0);
        gbc.writeMem(0xd610, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x22f6);
        EXPECT(gbc.pc(), 0xd611);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd610), 0x55);
        // 55 00BC
        gbc.setState(0xd691, 0x43e2, 0x37f0, 0x7ca, 0xa63, 0x218b, 0x0, 0x1);
        gbc.writeMem(0xd691, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x43e2);
        EXPECT(gbc.pc(), 0xd692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd691), 0x55);
        // 55 00BD
        gbc.setState(0x880c, 0x15c6, 0xec20, 0xa4f6, 0x1b8d, 0x3762, 0x0, 0x1);
        gbc.writeMem(0x880c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x15c6);
        EXPECT(gbc.pc(), 0x880d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x880c), 0x55);
        // 55 00BE
        gbc.setState(0x2e65, 0x3a47, 0xe2a0, 0x8def, 0xfb9f, 0xf5e4, 0x0, 0x0);
        gbc.writeMem(0x2e65, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3a47);
        EXPECT(gbc.pc(), 0x2e66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00BF
        gbc.setState(0x8719, 0xa509, 0x4ff0, 0x68f6, 0xd9c, 0x9e3c, 0x0, 0x1);
        gbc.writeMem(0x8719, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa509);
        EXPECT(gbc.pc(), 0x871a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8719), 0x55);
        // 55 00C0
        gbc.setState(0x788f, 0xa394, 0xe250, 0x323b, 0x9c51, 0xf8df, 0x1, 0x0);
        gbc.writeMem(0x788f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa394);
        EXPECT(gbc.pc(), 0x7890);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00C1
        gbc.setState(0x6bed, 0x2e11, 0x8240, 0x77a1, 0x4823, 0x6b01, 0x0, 0x0);
        gbc.writeMem(0x6bed, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x2e11);
        EXPECT(gbc.pc(), 0x6bee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00C2
        gbc.setState(0xab38, 0x42cf, 0x83c0, 0xdfd8, 0x73b9, 0xb55b, 0x1, 0x0);
        gbc.writeMem(0xab38, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x42cf);
        EXPECT(gbc.pc(), 0xab39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab38), 0x55);
        // 55 00C3
        gbc.setState(0x248e, 0x7765, 0xbcc0, 0x1589, 0xd6fd, 0xf5b4, 0x0, 0x1);
        gbc.writeMem(0x248e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x7765);
        EXPECT(gbc.pc(), 0x248f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00C4
        gbc.setState(0x1ef, 0x19e1, 0xa2e0, 0x5e96, 0x71d9, 0xe005, 0x0, 0x1);
        gbc.writeMem(0x1ef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x19e1);
        EXPECT(gbc.pc(), 0x1f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00C5
        gbc.setState(0xaef, 0x7caa, 0x22f0, 0x44a2, 0xd3a9, 0x6532, 0x1, 0x1);
        gbc.writeMem(0xaef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7caa);
        EXPECT(gbc.pc(), 0xaf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00C6
        gbc.setState(0x2e70, 0xac23, 0xd5d0, 0xc575, 0xb44, 0x878e, 0x0, 0x0);
        gbc.writeMem(0x2e70, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xac23);
        EXPECT(gbc.pc(), 0x2e71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00C7
        gbc.setState(0x8758, 0x4867, 0xb580, 0xb2bb, 0xe6ec, 0x4a84, 0x1, 0x1);
        gbc.writeMem(0x8758, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4867);
        EXPECT(gbc.pc(), 0x8759);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8758), 0x55);
        // 55 00C8
        gbc.setState(0xd2c4, 0xddef, 0x7a40, 0xbc6d, 0xc94, 0xe929, 0x1, 0x1);
        gbc.writeMem(0xd2c4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xddef);
        EXPECT(gbc.pc(), 0xd2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2c4), 0x55);
        // 55 00C9
        gbc.setState(0xe897, 0x8592, 0xddf0, 0x183d, 0x6fb3, 0x6da4, 0x0, 0x1);
        gbc.writeMem(0xe897, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8592);
        EXPECT(gbc.pc(), 0xe898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe897), 0x55);
        // 55 00CA
        gbc.setState(0x8b5f, 0x3d3c, 0xfc0, 0x55b0, 0x439e, 0xcd0e, 0x0, 0x0);
        gbc.writeMem(0x8b5f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3d3c);
        EXPECT(gbc.pc(), 0x8b60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5f), 0x55);
        // 55 00CB
        gbc.setState(0x6e45, 0x969d, 0x2cf0, 0x9d9, 0x82a3, 0xe2f5, 0x1, 0x0);
        gbc.writeMem(0x6e45, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x969d);
        EXPECT(gbc.pc(), 0x6e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00CC
        gbc.setState(0x542e, 0x69ff, 0x8120, 0x723d, 0xe29f, 0x7b41, 0x0, 0x1);
        gbc.writeMem(0x542e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x69ff);
        EXPECT(gbc.pc(), 0x542f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00CD
        gbc.setState(0x43d3, 0x3812, 0x440, 0x149c, 0xabc7, 0x2208, 0x1, 0x0);
        gbc.writeMem(0x43d3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0x43d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00CE
        gbc.setState(0x7711, 0x3941, 0xbd80, 0x1295, 0x65bb, 0x1e4b, 0x0, 0x0);
        gbc.writeMem(0x7711, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x3941);
        EXPECT(gbc.pc(), 0x7712);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00CF
        gbc.setState(0x4ab2, 0xbebf, 0xab20, 0xffb, 0xf486, 0xc1af, 0x0, 0x0);
        gbc.writeMem(0x4ab2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xbebf);
        EXPECT(gbc.pc(), 0x4ab3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00D0
        gbc.setState(0x8622, 0xb248, 0x5ca0, 0x48b9, 0x52f1, 0xd052, 0x0, 0x0);
        gbc.writeMem(0x8622, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xb248);
        EXPECT(gbc.pc(), 0x8623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8622), 0x55);
        // 55 00D2
        gbc.setState(0x3117, 0x35c0, 0xeb90, 0x4f2a, 0xa586, 0x109, 0x0, 0x0);
        gbc.writeMem(0x3117, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x35c0);
        EXPECT(gbc.pc(), 0x3118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00D3
        gbc.setState(0xdc60, 0x84e9, 0xdb20, 0x9cf7, 0xc3f7, 0x55a, 0x0, 0x0);
        gbc.writeMem(0xdc60, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x84e9);
        EXPECT(gbc.pc(), 0xdc61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc60), 0x55);
        // 55 00D4
        gbc.setState(0x5fa0, 0xf06a, 0x3a70, 0xc1be, 0xbd9c, 0x1dd7, 0x0, 0x0);
        gbc.writeMem(0x5fa0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xf06a);
        EXPECT(gbc.pc(), 0x5fa1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00D5
        gbc.setState(0x3f9b, 0x9359, 0xacf0, 0x1dec, 0x727a, 0xdfe7, 0x0, 0x0);
        gbc.writeMem(0x3f9b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9359);
        EXPECT(gbc.pc(), 0x3f9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00D6
        gbc.setState(0x209e, 0x3463, 0xf140, 0xad23, 0xf8c7, 0x2794, 0x0, 0x0);
        gbc.writeMem(0x209e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3463);
        EXPECT(gbc.pc(), 0x209f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00D7
        gbc.setState(0x87be, 0xbcab, 0xbe80, 0xcfa3, 0x3c75, 0x27f4, 0x0, 0x1);
        gbc.writeMem(0x87be, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xbcab);
        EXPECT(gbc.pc(), 0x87bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87be), 0x55);
        // 55 00D8
        gbc.setState(0x7be5, 0xe8b9, 0x9170, 0x962c, 0xc8a9, 0xfd42, 0x0, 0x0);
        gbc.writeMem(0x7be5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe8b9);
        EXPECT(gbc.pc(), 0x7be6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00D9
        gbc.setState(0xc128, 0x38e4, 0x1470, 0x98a9, 0x3840, 0x4f38, 0x1, 0x0);
        gbc.writeMem(0xc128, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x38e4);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc128), 0x55);
        // 55 00DA
        gbc.setState(0x9a9e, 0x5aee, 0xd740, 0x8eae, 0x2b01, 0xa2e5, 0x1, 0x0);
        gbc.writeMem(0x9a9e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5aee);
        EXPECT(gbc.pc(), 0x9a9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a9e), 0x55);
        // 55 00DC
        gbc.setState(0x64c3, 0x6080, 0xb080, 0xd679, 0x7947, 0x598d, 0x0, 0x0);
        gbc.writeMem(0x64c3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6080);
        EXPECT(gbc.pc(), 0x64c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00DD
        gbc.setState(0x4cc8, 0x46fe, 0x320, 0xe476, 0xc131, 0x34f5, 0x0, 0x1);
        gbc.writeMem(0x4cc8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x46fe);
        EXPECT(gbc.pc(), 0x4cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00DE
        gbc.setState(0x2753, 0x83e7, 0x89f0, 0x3250, 0xde4f, 0xee85, 0x1, 0x0);
        gbc.writeMem(0x2753, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x83e7);
        EXPECT(gbc.pc(), 0x2754);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00DF
        gbc.setState(0x67ec, 0x22fc, 0x93e0, 0x787, 0xffc3, 0x1b98, 0x1, 0x0);
        gbc.writeMem(0x67ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x22fc);
        EXPECT(gbc.pc(), 0x67ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00E0
        gbc.setState(0xd204, 0x995c, 0x5540, 0x4ec9, 0x61e0, 0x3a0a, 0x1, 0x0);
        gbc.writeMem(0xd204, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x995c);
        EXPECT(gbc.pc(), 0xd205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd204), 0x55);
        // 55 00E1
        gbc.setState(0x7a93, 0x31d9, 0xb120, 0x2986, 0xa7af, 0x814a, 0x0, 0x0);
        gbc.writeMem(0x7a93, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x31d9);
        EXPECT(gbc.pc(), 0x7a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00E2
        gbc.setState(0x9c57, 0x85b1, 0xab60, 0x64bd, 0x3b5a, 0xde9e, 0x1, 0x0);
        gbc.writeMem(0x9c57, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x85b1);
        EXPECT(gbc.pc(), 0x9c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c57), 0x55);
        // 55 00E3
        gbc.setState(0x6fde, 0xd7c6, 0xdfd0, 0x9161, 0xd0ae, 0x2af8, 0x0, 0x1);
        gbc.writeMem(0x6fde, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xd7c6);
        EXPECT(gbc.pc(), 0x6fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00E4
        gbc.setState(0xc239, 0x68df, 0x3eb0, 0x336e, 0xe4bf, 0x4d21, 0x0, 0x1);
        gbc.writeMem(0xc239, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x68df);
        EXPECT(gbc.pc(), 0xc23a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc239), 0x55);
        // 55 00E5
        gbc.setState(0x698c, 0xde61, 0x5f30, 0x595e, 0x28f, 0x298f, 0x0, 0x1);
        gbc.writeMem(0x698c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xde61);
        EXPECT(gbc.pc(), 0x698d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00E6
        gbc.setState(0x500f, 0x469a, 0xf690, 0x7a89, 0xfde5, 0xa2db, 0x0, 0x0);
        gbc.writeMem(0x500f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x469a);
        EXPECT(gbc.pc(), 0x5010);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 00E7
        gbc.setState(0xce1, 0x6173, 0x13f0, 0x8643, 0xfd52, 0x8281, 0x0, 0x1);
        gbc.writeMem(0xce1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x6173);
        EXPECT(gbc.pc(), 0xce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00E8
        gbc.setState(0x4fdc, 0x823a, 0x7a70, 0xd9cc, 0x8566, 0x321d, 0x1, 0x0);
        gbc.writeMem(0x4fdc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x823a);
        EXPECT(gbc.pc(), 0x4fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00E9
        gbc.setState(0x41b4, 0x2609, 0x2d00, 0x63b9, 0x2c9b, 0x4741, 0x0, 0x1);
        gbc.writeMem(0x41b4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2609);
        EXPECT(gbc.pc(), 0x41b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00EA
        gbc.setState(0x2d72, 0xde67, 0x3080, 0xf525, 0xbb29, 0x75dc, 0x1, 0x1);
        gbc.writeMem(0x2d72, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xde67);
        EXPECT(gbc.pc(), 0x2d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00EB
        gbc.setState(0xb1ad, 0x8736, 0xdd60, 0x6f88, 0x7210, 0xc9af, 0x1, 0x0);
        gbc.writeMem(0xb1ad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8736);
        EXPECT(gbc.pc(), 0xb1ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1ad), 0x55);
        // 55 00EC
        gbc.setState(0x45c9, 0x8e03, 0xcac0, 0x78d3, 0x65bb, 0x511a, 0x0, 0x0);
        gbc.writeMem(0x45c9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x8e03);
        EXPECT(gbc.pc(), 0x45ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00ED
        gbc.setState(0x5a81, 0x795f, 0x8960, 0xa5df, 0xd455, 0xb711, 0x1, 0x1);
        gbc.writeMem(0x5a81, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x795f);
        EXPECT(gbc.pc(), 0x5a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00EE
        gbc.setState(0x81e8, 0xf0f9, 0x5a0, 0xbfd4, 0x293e, 0xc6f4, 0x1, 0x1);
        gbc.writeMem(0x81e8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf0f9);
        EXPECT(gbc.pc(), 0x81e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81e8), 0x55);
        // 55 00EF
        gbc.setState(0x24bb, 0x5126, 0x9cf0, 0xc94f, 0x5769, 0x7771, 0x0, 0x1);
        gbc.writeMem(0x24bb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x5126);
        EXPECT(gbc.pc(), 0x24bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00F0
        gbc.setState(0x1e6c, 0x734f, 0xca70, 0x2f98, 0x1ffa, 0x71, 0x1, 0x0);
        gbc.writeMem(0x1e6c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x734f);
        EXPECT(gbc.pc(), 0x1e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00F1
        gbc.setState(0x1e4a, 0xce86, 0x9ee0, 0x4eca, 0xd8fb, 0xb959, 0x0, 0x0);
        gbc.writeMem(0x1e4a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xce86);
        EXPECT(gbc.pc(), 0x1e4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00F2
        gbc.setState(0xc8bf, 0x4dc2, 0x82d0, 0x3720, 0xbff1, 0x17c7, 0x0, 0x1);
        gbc.writeMem(0xc8bf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4dc2);
        EXPECT(gbc.pc(), 0xc8c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bf), 0x55);
        // 55 00F3
        gbc.setState(0x4093, 0x703a, 0xee30, 0x2d4e, 0xd505, 0x390c, 0x1, 0x0);
        gbc.writeMem(0x4093, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x703a);
        EXPECT(gbc.pc(), 0x4094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00F4
        gbc.setState(0xa40d, 0xa5fd, 0x1010, 0x405f, 0xa804, 0xffe3, 0x1, 0x0);
        gbc.writeMem(0xa40d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa5fd);
        EXPECT(gbc.pc(), 0xa40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa40d), 0x55);
        // 55 00F5
        gbc.setState(0x4d0c, 0xe267, 0x2780, 0xb4bc, 0xa961, 0x5ae5, 0x1, 0x1);
        gbc.writeMem(0x4d0c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xe267);
        EXPECT(gbc.pc(), 0x4d0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 00F6
        gbc.setState(0xa963, 0xaee9, 0xa720, 0xa18c, 0xedb1, 0x6cc9, 0x1, 0x1);
        gbc.writeMem(0xa963, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xaee9);
        EXPECT(gbc.pc(), 0xa964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa963), 0x55);
        // 55 00F7
        gbc.setState(0xdf8d, 0x8c53, 0x47c0, 0x197e, 0x4b3b, 0x99c9, 0x0, 0x1);
        gbc.writeMem(0xdf8d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8c53);
        EXPECT(gbc.pc(), 0xdf8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf8d), 0x55);
        // 55 00F9
        gbc.setState(0xd6e6, 0x3323, 0x7b50, 0xa7ba, 0xf13d, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0xd6e6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3323);
        EXPECT(gbc.pc(), 0xd6e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6e6), 0x55);
        // 55 00FA
        gbc.setState(0xd88c, 0x44ab, 0x33d0, 0x9483, 0x30f4, 0xe6b6, 0x1, 0x1);
        gbc.writeMem(0xd88c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x44ab);
        EXPECT(gbc.pc(), 0xd88d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd88c), 0x55);
        // 55 00FB
        gbc.setState(0x20ec, 0xf4c9, 0x5e60, 0xe250, 0x97f7, 0xec2e, 0x1, 0x1);
        gbc.writeMem(0x20ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf4c9);
        EXPECT(gbc.pc(), 0x20ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 00FC
        gbc.setState(0xe167, 0xf79f, 0xdf50, 0xd4f8, 0xd468, 0x5bb9, 0x1, 0x1);
        gbc.writeMem(0xe167, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf79f);
        EXPECT(gbc.pc(), 0xe168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe167), 0x55);
        // 55 00FD
        gbc.setState(0xdcec, 0x970f, 0x8090, 0x1ed7, 0x54f2, 0xbfec, 0x0, 0x0);
        gbc.writeMem(0xdcec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x970f);
        EXPECT(gbc.pc(), 0xdced);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcec), 0x55);
        // 55 00FE
        gbc.setState(0x71bd, 0x3d91, 0x4230, 0x6173, 0x975a, 0xb6c9, 0x0, 0x1);
        gbc.writeMem(0x71bd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3d91);
        EXPECT(gbc.pc(), 0x71be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 00FF
        gbc.setState(0x19b1, 0xb3b9, 0xe640, 0xc636, 0x223d, 0x7de6, 0x0, 0x0);
        gbc.writeMem(0x19b1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xb3b9);
        EXPECT(gbc.pc(), 0x19b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0100
        gbc.setState(0x9073, 0x44c, 0xe370, 0xf0dd, 0xcc4f, 0x3f62, 0x1, 0x1);
        gbc.writeMem(0x9073, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x44c);
        EXPECT(gbc.pc(), 0x9074);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9073), 0x55);
        // 55 0101
        gbc.setState(0xe591, 0xa0de, 0xe720, 0x720d, 0x565, 0x3bb7, 0x1, 0x1);
        gbc.writeMem(0xe591, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa0de);
        EXPECT(gbc.pc(), 0xe592);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe591), 0x55);
        // 55 0102
        gbc.setState(0xdf27, 0x751b, 0xd200, 0x3156, 0x7c09, 0x512c, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x751b);
        EXPECT(gbc.pc(), 0xdf28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf27), 0x55);
        // 55 0103
        gbc.setState(0xaacb, 0x88ae, 0xe610, 0xf4c2, 0xe3ac, 0x527e, 0x0, 0x0);
        gbc.writeMem(0xaacb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x88ae);
        EXPECT(gbc.pc(), 0xaacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaacb), 0x55);
        // 55 0104
        gbc.setState(0x94cc, 0xf229, 0x20b0, 0x4cb7, 0x5d35, 0xd897, 0x1, 0x1);
        gbc.writeMem(0x94cc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf229);
        EXPECT(gbc.pc(), 0x94cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94cc), 0x55);
        // 55 0105
        gbc.setState(0x9387, 0x543f, 0xc650, 0xc1d1, 0x14de, 0x36b8, 0x1, 0x0);
        gbc.writeMem(0x9387, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0x9388);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9387), 0x55);
        // 55 0106
        gbc.setState(0x4718, 0x836e, 0x3790, 0x840, 0x7526, 0x67ed, 0x0, 0x0);
        gbc.writeMem(0x4718, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x836e);
        EXPECT(gbc.pc(), 0x4719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0107
        gbc.setState(0x58e9, 0x48c7, 0x98f0, 0xe4f0, 0x7c65, 0x64a, 0x1, 0x0);
        gbc.writeMem(0x58e9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x48c7);
        EXPECT(gbc.pc(), 0x58ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0108
        gbc.setState(0x35a1, 0x5bc5, 0xf940, 0x3f01, 0xa30c, 0x8b17, 0x0, 0x1);
        gbc.writeMem(0x35a1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5bc5);
        EXPECT(gbc.pc(), 0x35a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 010A
        gbc.setState(0xe930, 0x21ad, 0x780, 0x44d1, 0xee1d, 0x8ba4, 0x1, 0x1);
        gbc.writeMem(0xe930, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x21ad);
        EXPECT(gbc.pc(), 0xe931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe930), 0x55);
        // 55 010B
        gbc.setState(0x1002, 0xe732, 0x89d0, 0x604d, 0xaadb, 0xc5b0, 0x0, 0x1);
        gbc.writeMem(0x1002, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xe732);
        EXPECT(gbc.pc(), 0x1003);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 010C
        gbc.setState(0xded4, 0x97d8, 0x6fc0, 0x5597, 0xa532, 0xfe0d, 0x0, 0x0);
        gbc.writeMem(0xded4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x97d8);
        EXPECT(gbc.pc(), 0xded5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded4), 0x55);
        // 55 010D
        gbc.setState(0xac63, 0x56c4, 0x570, 0x8e, 0xb592, 0x8f96, 0x1, 0x1);
        gbc.writeMem(0xac63, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x56c4);
        EXPECT(gbc.pc(), 0xac64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac63), 0x55);
        // 55 010E
        gbc.setState(0x9ff8, 0x8435, 0x5f20, 0x6b7d, 0x32dd, 0x8212, 0x1, 0x1);
        gbc.writeMem(0x9ff8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8435);
        EXPECT(gbc.pc(), 0x9ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff8), 0x55);
        // 55 010F
        gbc.setState(0x8423, 0xe33e, 0x8e10, 0x5586, 0x6c8, 0xcff3, 0x0, 0x0);
        gbc.writeMem(0x8423, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe33e);
        EXPECT(gbc.pc(), 0x8424);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8423), 0x55);
        // 55 0110
        gbc.setState(0x364, 0xa481, 0x2ff0, 0x8b5, 0xc293, 0x9a75, 0x0, 0x1);
        gbc.writeMem(0x364, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xa481);
        EXPECT(gbc.pc(), 0x365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0111
        gbc.setState(0x5555, 0x56bd, 0x6d90, 0xee71, 0x48d2, 0xc01f, 0x0, 0x0);
        gbc.writeMem(0x5555, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x56bd);
        EXPECT(gbc.pc(), 0x5556);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0112
        gbc.setState(0x4ee8, 0x8495, 0xa930, 0x4b49, 0x436d, 0xd50a, 0x1, 0x1);
        gbc.writeMem(0x4ee8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x8495);
        EXPECT(gbc.pc(), 0x4ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0113
        gbc.setState(0x40c2, 0xd209, 0xd2b0, 0xa15, 0x89a1, 0x7, 0x1, 0x0);
        gbc.writeMem(0x40c2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xd209);
        EXPECT(gbc.pc(), 0x40c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0114
        gbc.setState(0x2f1d, 0xc399, 0x9150, 0x8c96, 0xa92b, 0x1d58, 0x0, 0x0);
        gbc.writeMem(0x2f1d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc399);
        EXPECT(gbc.pc(), 0x2f1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0115
        gbc.setState(0x1ffe, 0x3e2c, 0xe520, 0x5d05, 0x26ea, 0x3a19, 0x0, 0x0);
        gbc.writeMem(0x1ffe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3e2c);
        EXPECT(gbc.pc(), 0x1fff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0116
        gbc.setState(0x3bcc, 0xd3a6, 0x7660, 0x6dc9, 0xb98c, 0x13a0, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd3a6);
        EXPECT(gbc.pc(), 0x3bcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0117
        gbc.setState(0x6486, 0xf322, 0x27a0, 0xa7b4, 0xc432, 0xce82, 0x1, 0x0);
        gbc.writeMem(0x6486, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xf322);
        EXPECT(gbc.pc(), 0x6487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0118
        gbc.setState(0x1e32, 0xac32, 0xc570, 0xad94, 0xca58, 0xccfc, 0x0, 0x1);
        gbc.writeMem(0x1e32, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xac32);
        EXPECT(gbc.pc(), 0x1e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0119
        gbc.setState(0x5aa1, 0x681a, 0x24b0, 0x43c2, 0x9db8, 0x4753, 0x0, 0x0);
        gbc.writeMem(0x5aa1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x681a);
        EXPECT(gbc.pc(), 0x5aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 011A
        gbc.setState(0xd7fd, 0x6e76, 0x49e0, 0x80bf, 0x79cc, 0xac71, 0x1, 0x1);
        gbc.writeMem(0xd7fd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6e76);
        EXPECT(gbc.pc(), 0xd7fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7fd), 0x55);
        // 55 011B
        gbc.setState(0xbdcc, 0x4830, 0xb9c0, 0xe200, 0xd6a3, 0x12a7, 0x1, 0x1);
        gbc.writeMem(0xbdcc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4830);
        EXPECT(gbc.pc(), 0xbdcd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdcc), 0x55);
        // 55 011C
        gbc.setState(0x11b0, 0x4de6, 0x5f60, 0xea20, 0x7c96, 0x2729, 0x0, 0x1);
        gbc.writeMem(0x11b0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4de6);
        EXPECT(gbc.pc(), 0x11b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 011D
        gbc.setState(0xba08, 0xa3bb, 0x19a0, 0x2fe4, 0xa024, 0xd13c, 0x1, 0x0);
        gbc.writeMem(0xba08, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa3bb);
        EXPECT(gbc.pc(), 0xba09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba08), 0x55);
        // 55 011E
        gbc.setState(0x407d, 0xe0ba, 0xab10, 0x358f, 0x78, 0x7005, 0x0, 0x0);
        gbc.writeMem(0x407d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe0ba);
        EXPECT(gbc.pc(), 0x407e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 011F
        gbc.setState(0x5419, 0xf22b, 0xd7e0, 0xfe1e, 0x5a9b, 0xd07c, 0x0, 0x0);
        gbc.writeMem(0x5419, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf22b);
        EXPECT(gbc.pc(), 0x541a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0120
        gbc.setState(0xb1e2, 0xc6e0, 0xf230, 0x221b, 0x26c4, 0x8aa4, 0x1, 0x0);
        gbc.writeMem(0xb1e2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc6e0);
        EXPECT(gbc.pc(), 0xb1e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1e2), 0x55);
        // 55 0121
        gbc.setState(0x29c, 0xfbe0, 0x1710, 0xf22f, 0xc7b2, 0xe4f6, 0x1, 0x1);
        gbc.writeMem(0x29c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xfbe0);
        EXPECT(gbc.pc(), 0x29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0122
        gbc.setState(0x5eef, 0x930c, 0xfb40, 0x4a0a, 0xb25b, 0xa7f1, 0x1, 0x1);
        gbc.writeMem(0x5eef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x930c);
        EXPECT(gbc.pc(), 0x5ef0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0123
        gbc.setState(0xaa75, 0x593a, 0xc030, 0xf63d, 0x7d9c, 0x217, 0x0, 0x1);
        gbc.writeMem(0xaa75, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x593a);
        EXPECT(gbc.pc(), 0xaa76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa75), 0x55);
        // 55 0124
        gbc.setState(0xcff, 0x7607, 0xb870, 0xa5b7, 0xffb4, 0xee4e, 0x1, 0x0);
        gbc.writeMem(0xcff, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x7607);
        EXPECT(gbc.pc(), 0xd00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0125
        gbc.setState(0xa528, 0x181, 0xb230, 0x5e08, 0x9a6c, 0x6fd, 0x1, 0x1);
        gbc.writeMem(0xa528, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x181);
        EXPECT(gbc.pc(), 0xa529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa528), 0x55);
        // 55 0126
        gbc.setState(0x9574, 0xbbbe, 0xae10, 0x39f3, 0x89c0, 0x5bcb, 0x0, 0x1);
        gbc.writeMem(0x9574, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbbbe);
        EXPECT(gbc.pc(), 0x9575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9574), 0x55);
        // 55 0127
        gbc.setState(0xc0b2, 0xca8, 0xebf0, 0x3a68, 0x7ba, 0x9d35, 0x0, 0x1);
        gbc.writeMem(0xc0b2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xca8);
        EXPECT(gbc.pc(), 0xc0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b2), 0x55);
        // 55 0128
        gbc.setState(0xc75d, 0x3c4d, 0x2af0, 0x422e, 0x9a93, 0xbf7b, 0x1, 0x1);
        gbc.writeMem(0xc75d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3c4d);
        EXPECT(gbc.pc(), 0xc75e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc75d), 0x55);
        // 55 0129
        gbc.setState(0x5cc1, 0x1e39, 0x1d80, 0x8b52, 0xa5fb, 0x3461, 0x1, 0x1);
        gbc.writeMem(0x5cc1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1e39);
        EXPECT(gbc.pc(), 0x5cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 012A
        gbc.setState(0x43bb, 0xe1e9, 0x64a0, 0x6d61, 0xe79f, 0x8f6, 0x1, 0x0);
        gbc.writeMem(0x43bb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0x43bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 012B
        gbc.setState(0xa20c, 0xb26a, 0xada0, 0xe5b4, 0x666f, 0x3262, 0x1, 0x1);
        gbc.writeMem(0xa20c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xb26a);
        EXPECT(gbc.pc(), 0xa20d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa20c), 0x55);
        // 55 012C
        gbc.setState(0xd447, 0x9ebd, 0x10a0, 0x26d0, 0x8a13, 0x40dd, 0x1, 0x0);
        gbc.writeMem(0xd447, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9ebd);
        EXPECT(gbc.pc(), 0xd448);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd447), 0x55);
        // 55 012D
        gbc.setState(0xa76, 0x2ac8, 0x66a0, 0x18e1, 0x6903, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0xa76, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2ac8);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 012E
        gbc.setState(0xd6c5, 0x8625, 0xb5c0, 0x5eb1, 0x78c4, 0xbed8, 0x1, 0x0);
        gbc.writeMem(0xd6c5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8625);
        EXPECT(gbc.pc(), 0xd6c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c5), 0x55);
        // 55 012F
        gbc.setState(0xa056, 0xecd7, 0xa50, 0x6924, 0x6ca6, 0x188e, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xecd7);
        EXPECT(gbc.pc(), 0xa057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa056), 0x55);
        // 55 0130
        gbc.setState(0xb76, 0x2901, 0x3980, 0x2561, 0x72b4, 0xbef4, 0x1, 0x1);
        gbc.writeMem(0xb76, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2901);
        EXPECT(gbc.pc(), 0xb77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0131
        gbc.setState(0x65a4, 0x9e34, 0x5c40, 0xf597, 0xbde0, 0xf9c5, 0x1, 0x1);
        gbc.writeMem(0x65a4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9e34);
        EXPECT(gbc.pc(), 0x65a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0132
        gbc.setState(0xc8c9, 0x29fe, 0xae0, 0xcf8d, 0xe29d, 0xd7f4, 0x1, 0x0);
        gbc.writeMem(0xc8c9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x29fe);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8c9), 0x55);
        // 55 0133
        gbc.setState(0xefb9, 0x9903, 0x5e30, 0x822f, 0xcdd, 0x6061, 0x1, 0x0);
        gbc.writeMem(0xefb9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9903);
        EXPECT(gbc.pc(), 0xefba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb9), 0x55);
        // 55 0134
        gbc.setState(0x60ef, 0x8e6a, 0x5da0, 0x4be2, 0x8264, 0x81d4, 0x0, 0x0);
        gbc.writeMem(0x60ef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8e6a);
        EXPECT(gbc.pc(), 0x60f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0135
        gbc.setState(0xb7b3, 0xd274, 0xc9b0, 0xba1d, 0xce75, 0xea67, 0x0, 0x0);
        gbc.writeMem(0xb7b3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd274);
        EXPECT(gbc.pc(), 0xb7b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7b3), 0x55);
        // 55 0136
        gbc.setState(0xee95, 0xd827, 0x9450, 0x58d0, 0x33a6, 0xd234, 0x1, 0x1);
        gbc.writeMem(0xee95, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd827);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee95), 0x55);
        // 55 0138
        gbc.setState(0x103, 0x9d7e, 0x1f90, 0x896c, 0xd36c, 0x764e, 0x1, 0x1);
        gbc.writeMem(0x103, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9d7e);
        EXPECT(gbc.pc(), 0x104);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0139
        gbc.setState(0x723d, 0x25fe, 0x8760, 0x2b08, 0x35e0, 0x622a, 0x1, 0x0);
        gbc.writeMem(0x723d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x25fe);
        EXPECT(gbc.pc(), 0x723e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 013A
        gbc.setState(0x3328, 0x638e, 0xcc30, 0x644f, 0x4af9, 0x7c86, 0x0, 0x0);
        gbc.writeMem(0x3328, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x638e);
        EXPECT(gbc.pc(), 0x3329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 013B
        gbc.setState(0x29a4, 0x7558, 0xaa80, 0xca91, 0x1380, 0x9462, 0x0, 0x0);
        gbc.writeMem(0x29a4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x7558);
        EXPECT(gbc.pc(), 0x29a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 013C
        gbc.setState(0xd760, 0x3475, 0x7190, 0x4dd1, 0x768f, 0x4b07, 0x1, 0x0);
        gbc.writeMem(0xd760, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3475);
        EXPECT(gbc.pc(), 0xd761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd760), 0x55);
        // 55 013D
        gbc.setState(0x9494, 0x4229, 0x1d10, 0x664f, 0x475e, 0x139e, 0x0, 0x1);
        gbc.writeMem(0x9494, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4229);
        EXPECT(gbc.pc(), 0x9495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9494), 0x55);
        // 55 013E
        gbc.setState(0xc7da, 0x9b3b, 0xc850, 0x97c1, 0x61fd, 0x4c3a, 0x0, 0x1);
        gbc.writeMem(0xc7da, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x9b3b);
        EXPECT(gbc.pc(), 0xc7db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7da), 0x55);
        // 55 013F
        gbc.setState(0xe28, 0x78b9, 0x8990, 0xcfd0, 0x9479, 0xb4e8, 0x0, 0x1);
        gbc.writeMem(0xe28, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x78b9);
        EXPECT(gbc.pc(), 0xe29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0140
        gbc.setState(0xed90, 0xa901, 0xce80, 0xc46, 0xfc2, 0x1477, 0x1, 0x1);
        gbc.writeMem(0xed90, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xa901);
        EXPECT(gbc.pc(), 0xed91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed90), 0x55);
        // 55 0141
        gbc.setState(0x933d, 0x8872, 0xf40, 0x586e, 0x59cd, 0x197e, 0x0, 0x0);
        gbc.writeMem(0x933d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x8872);
        EXPECT(gbc.pc(), 0x933e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x933d), 0x55);
        // 55 0142
        gbc.setState(0x10af, 0xe78d, 0x6440, 0xc612, 0x5085, 0xe697, 0x1, 0x0);
        gbc.writeMem(0x10af, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xe78d);
        EXPECT(gbc.pc(), 0x10b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0143
        gbc.setState(0x4174, 0x2701, 0xad50, 0xd32e, 0x476e, 0x8560, 0x1, 0x0);
        gbc.writeMem(0x4174, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2701);
        EXPECT(gbc.pc(), 0x4175);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0144
        gbc.setState(0x993d, 0x6749, 0xb280, 0xa48c, 0xa56f, 0xaf6b, 0x0, 0x0);
        gbc.writeMem(0x993d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x6749);
        EXPECT(gbc.pc(), 0x993e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x993d), 0x55);
        // 55 0145
        gbc.setState(0x77ec, 0x3e0e, 0xbc0, 0x79d7, 0xc3d2, 0x4a17, 0x0, 0x0);
        gbc.writeMem(0x77ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3e0e);
        EXPECT(gbc.pc(), 0x77ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0146
        gbc.setState(0xe3b, 0x7240, 0xdbe0, 0xc556, 0x115, 0x499e, 0x0, 0x0);
        gbc.writeMem(0xe3b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7240);
        EXPECT(gbc.pc(), 0xe3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0148
        gbc.setState(0xdb6b, 0x21df, 0x9c50, 0x6a3d, 0x9a39, 0xa1da, 0x1, 0x0);
        gbc.writeMem(0xdb6b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x21df);
        EXPECT(gbc.pc(), 0xdb6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb6b), 0x55);
        // 55 0149
        gbc.setState(0x1ac8, 0x3131, 0x8800, 0x2647, 0x3500, 0xb685, 0x0, 0x0);
        gbc.writeMem(0x1ac8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x3131);
        EXPECT(gbc.pc(), 0x1ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 014A
        gbc.setState(0x10c7, 0xda0e, 0xbeb0, 0x2148, 0x54e3, 0x1a9c, 0x1, 0x0);
        gbc.writeMem(0x10c7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xda0e);
        EXPECT(gbc.pc(), 0x10c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 014B
        gbc.setState(0x81e7, 0xf777, 0x1bf0, 0x1f56, 0x3f04, 0xb9, 0x0, 0x1);
        gbc.writeMem(0x81e7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf777);
        EXPECT(gbc.pc(), 0x81e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e7), 0x55);
        // 55 014C
        gbc.setState(0xc1b1, 0x5086, 0xd180, 0x57d6, 0x3183, 0xbec0, 0x1, 0x0);
        gbc.writeMem(0xc1b1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5086);
        EXPECT(gbc.pc(), 0xc1b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b1), 0x55);
        // 55 014D
        gbc.setState(0x1d17, 0x6490, 0x9bd0, 0x3d6b, 0xbc96, 0xc91, 0x0, 0x1);
        gbc.writeMem(0x1d17, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6490);
        EXPECT(gbc.pc(), 0x1d18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 014E
        gbc.setState(0x366a, 0x556b, 0x1bd0, 0x64ac, 0x4b17, 0xa425, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x556b);
        EXPECT(gbc.pc(), 0x366b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 014F
        gbc.setState(0x5edf, 0x6e50, 0x62e0, 0x58ac, 0xbead, 0xa71a, 0x0, 0x1);
        gbc.writeMem(0x5edf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x6e50);
        EXPECT(gbc.pc(), 0x5ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0150
        gbc.setState(0xda05, 0x24a1, 0x31f0, 0x2dc2, 0x2cc6, 0x8e21, 0x0, 0x0);
        gbc.writeMem(0xda05, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x24a1);
        EXPECT(gbc.pc(), 0xda06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda05), 0x55);
        // 55 0151
        gbc.setState(0xe1a4, 0x1da0, 0x6430, 0x69f2, 0xcfcd, 0x199, 0x1, 0x1);
        gbc.writeMem(0xe1a4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x1da0);
        EXPECT(gbc.pc(), 0xe1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a4), 0x55);
        // 55 0152
        gbc.setState(0x85a5, 0x49af, 0x97e0, 0x734f, 0x20d0, 0x3e96, 0x1, 0x0);
        gbc.writeMem(0x85a5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x49af);
        EXPECT(gbc.pc(), 0x85a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85a5), 0x55);
        // 55 0153
        gbc.setState(0x2da3, 0x9385, 0x8b60, 0x9d5e, 0x7e38, 0x5b13, 0x0, 0x0);
        gbc.writeMem(0x2da3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9385);
        EXPECT(gbc.pc(), 0x2da4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0154
        gbc.setState(0xdae, 0x2af9, 0xa780, 0xaab0, 0xa8ed, 0x546d, 0x1, 0x1);
        gbc.writeMem(0xdae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x2af9);
        EXPECT(gbc.pc(), 0xdaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0155
        gbc.setState(0xaae8, 0x7498, 0x6580, 0x5894, 0x4cfa, 0xd39f, 0x1, 0x0);
        gbc.writeMem(0xaae8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x7498);
        EXPECT(gbc.pc(), 0xaae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaae8), 0x55);
        // 55 0156
        gbc.setState(0x30f9, 0x558c, 0x1b40, 0x72b8, 0xb40f, 0x7cca, 0x1, 0x1);
        gbc.writeMem(0x30f9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x558c);
        EXPECT(gbc.pc(), 0x30fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0157
        gbc.setState(0x2c4f, 0xdb08, 0xbf70, 0x309d, 0x8444, 0x98c3, 0x0, 0x0);
        gbc.writeMem(0x2c4f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdb08);
        EXPECT(gbc.pc(), 0x2c50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0158
        gbc.setState(0x6ce7, 0x6a08, 0x41f0, 0xe89a, 0x63e6, 0x291, 0x1, 0x0);
        gbc.writeMem(0x6ce7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x6a08);
        EXPECT(gbc.pc(), 0x6ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0159
        gbc.setState(0xd9d3, 0xa351, 0xa4f0, 0xf7e, 0x7bf1, 0x9dc0, 0x1, 0x1);
        gbc.writeMem(0xd9d3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa351);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d3), 0x55);
        // 55 015B
        gbc.setState(0x8d3b, 0x3d04, 0xa0e0, 0x3fb4, 0x8cd, 0x68ce, 0x1, 0x0);
        gbc.writeMem(0x8d3b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3d04);
        EXPECT(gbc.pc(), 0x8d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3b), 0x55);
        // 55 015C
        gbc.setState(0xcaa2, 0x72d0, 0xbf30, 0x7dd6, 0x244, 0x79f5, 0x0, 0x0);
        gbc.writeMem(0xcaa2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x72d0);
        EXPECT(gbc.pc(), 0xcaa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaa2), 0x55);
        // 55 015D
        gbc.setState(0xe575, 0x2210, 0x22f0, 0x522f, 0x43fd, 0xa0b8, 0x0, 0x0);
        gbc.writeMem(0xe575, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x2210);
        EXPECT(gbc.pc(), 0xe576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe575), 0x55);
        // 55 015E
        gbc.setState(0x4a1e, 0x6489, 0x9150, 0x7e17, 0x27e1, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0x4a1e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x6489);
        EXPECT(gbc.pc(), 0x4a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 015F
        gbc.setState(0xd75c, 0xdff7, 0xae30, 0x543c, 0xae3b, 0x9d65, 0x1, 0x0);
        gbc.writeMem(0xd75c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xdff7);
        EXPECT(gbc.pc(), 0xd75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd75c), 0x55);
        // 55 0160
        gbc.setState(0x4053, 0x111c, 0x2370, 0x39d9, 0x312e, 0x251a, 0x1, 0x0);
        gbc.writeMem(0x4053, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x111c);
        EXPECT(gbc.pc(), 0x4054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0161
        gbc.setState(0x11b8, 0x3093, 0xc5f0, 0x9a71, 0xff59, 0x7166, 0x1, 0x0);
        gbc.writeMem(0x11b8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3093);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0162
        gbc.setState(0x88a1, 0xc7f4, 0xdf40, 0xebb4, 0xbe1f, 0xd5c6, 0x1, 0x1);
        gbc.writeMem(0x88a1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xc7f4);
        EXPECT(gbc.pc(), 0x88a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88a1), 0x55);
        // 55 0163
        gbc.setState(0x9c73, 0x5a1e, 0x67d0, 0xbd1, 0x7a16, 0x35c0, 0x1, 0x1);
        gbc.writeMem(0x9c73, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5a1e);
        EXPECT(gbc.pc(), 0x9c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c73), 0x55);
        // 55 0165
        gbc.setState(0x5c3e, 0xc175, 0xc9b0, 0x5261, 0x1a58, 0xfc, 0x0, 0x1);
        gbc.writeMem(0x5c3e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc175);
        EXPECT(gbc.pc(), 0x5c3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0166
        gbc.setState(0x7b65, 0xeb0b, 0x7420, 0x8875, 0x1aa2, 0xf8c4, 0x1, 0x1);
        gbc.writeMem(0x7b65, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xeb0b);
        EXPECT(gbc.pc(), 0x7b66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0167
        gbc.setState(0x5487, 0x6732, 0xd480, 0x90a7, 0x570d, 0xe3a6, 0x0, 0x0);
        gbc.writeMem(0x5487, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x6732);
        EXPECT(gbc.pc(), 0x5488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0168
        gbc.setState(0x44f4, 0xef48, 0xf390, 0x9e70, 0xbd44, 0x3dff, 0x1, 0x0);
        gbc.writeMem(0x44f4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xef48);
        EXPECT(gbc.pc(), 0x44f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0169
        gbc.setState(0xcc47, 0x83bf, 0x5b80, 0x6a79, 0x85fe, 0x41d6, 0x0, 0x1);
        gbc.writeMem(0xcc47, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x83bf);
        EXPECT(gbc.pc(), 0xcc48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc47), 0x55);
        // 55 016A
        gbc.setState(0x719d, 0xb174, 0xc0b0, 0x8560, 0xf98c, 0x1a3, 0x0, 0x1);
        gbc.writeMem(0x719d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb174);
        EXPECT(gbc.pc(), 0x719e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 016C
        gbc.setState(0xfa, 0xdd72, 0x9c50, 0xf10, 0xdb42, 0x6d8a, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdd72);
        EXPECT(gbc.pc(), 0xfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 016D
        gbc.setState(0x6fad, 0xd601, 0x9ad0, 0x6313, 0xa162, 0x676a, 0x1, 0x1);
        gbc.writeMem(0x6fad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd601);
        EXPECT(gbc.pc(), 0x6fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 016E
        gbc.setState(0x88d1, 0x23b, 0x770, 0x63a8, 0x34e5, 0x79ae, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x23b);
        EXPECT(gbc.pc(), 0x88d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d1), 0x55);
        // 55 0170
        gbc.setState(0xc0d9, 0x9b0d, 0x3720, 0xbece, 0x959b, 0x2851, 0x0, 0x1);
        gbc.writeMem(0xc0d9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9b0d);
        EXPECT(gbc.pc(), 0xc0da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d9), 0x55);
        // 55 0171
        gbc.setState(0x25d1, 0xd88f, 0x1950, 0x3147, 0x380b, 0x96b8, 0x1, 0x1);
        gbc.writeMem(0x25d1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd88f);
        EXPECT(gbc.pc(), 0x25d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0173
        gbc.setState(0x84b9, 0xf6d5, 0x68f0, 0xd408, 0x551a, 0x2c1f, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf6d5);
        EXPECT(gbc.pc(), 0x84ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b9), 0x55);
        // 55 0174
        gbc.setState(0x17f9, 0x1f15, 0x9a10, 0x133, 0xdf3f, 0x51cd, 0x0, 0x0);
        gbc.writeMem(0x17f9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x1f15);
        EXPECT(gbc.pc(), 0x17fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0175
        gbc.setState(0x8375, 0x3a05, 0x2a10, 0xc7f2, 0x7210, 0xcc1e, 0x0, 0x1);
        gbc.writeMem(0x8375, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3a05);
        EXPECT(gbc.pc(), 0x8376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8375), 0x55);
        // 55 0176
        gbc.setState(0xbfad, 0x4656, 0xa890, 0x9b3b, 0x32d3, 0x76f2, 0x0, 0x0);
        gbc.writeMem(0xbfad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x4656);
        EXPECT(gbc.pc(), 0xbfae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfad), 0x55);
        // 55 0177
        gbc.setState(0xd01c, 0x2eec, 0xe10, 0x38e6, 0x25de, 0xf585, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2eec);
        EXPECT(gbc.pc(), 0xd01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd01c), 0x55);
        // 55 0178
        gbc.setState(0xb82b, 0x5cd8, 0xe7d0, 0xd5fa, 0x433b, 0x8bcc, 0x1, 0x1);
        gbc.writeMem(0xb82b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x5cd8);
        EXPECT(gbc.pc(), 0xb82c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb82b), 0x55);
        // 55 0179
        gbc.setState(0x5bf0, 0xbbea, 0xd220, 0xdd0f, 0xa4c5, 0x925e, 0x1, 0x0);
        gbc.writeMem(0x5bf0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbbea);
        EXPECT(gbc.pc(), 0x5bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 017A
        gbc.setState(0x80dc, 0x8da1, 0xb610, 0x59e7, 0x6687, 0x19c7, 0x0, 0x1);
        gbc.writeMem(0x80dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8da1);
        EXPECT(gbc.pc(), 0x80dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80dc), 0x55);
        // 55 017B
        gbc.setState(0x3133, 0x2e18, 0xe930, 0x8a0, 0xeaba, 0xa6f5, 0x1, 0x1);
        gbc.writeMem(0x3133, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2e18);
        EXPECT(gbc.pc(), 0x3134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 017C
        gbc.setState(0xc37d, 0x9b1, 0x7130, 0x4e24, 0x3565, 0x2c46, 0x1, 0x0);
        gbc.writeMem(0xc37d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x9b1);
        EXPECT(gbc.pc(), 0xc37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc37d), 0x55);
        // 55 017D
        gbc.setState(0x3d0e, 0x3c2, 0xc870, 0xaf5e, 0x9af9, 0x46d5, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3c2);
        EXPECT(gbc.pc(), 0x3d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 017E
        gbc.setState(0xa6c, 0x94b6, 0x1720, 0xfdcf, 0xc83e, 0x4774, 0x1, 0x0);
        gbc.writeMem(0xa6c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x94b6);
        EXPECT(gbc.pc(), 0xa6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 017F
        gbc.setState(0x19eb, 0xfea, 0xc820, 0x1001, 0x87fd, 0xe597, 0x0, 0x1);
        gbc.writeMem(0x19eb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xfea);
        EXPECT(gbc.pc(), 0x19ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0181
        gbc.setState(0x8aa2, 0x39c9, 0xc1e0, 0xbaa7, 0xe0d4, 0xbcda, 0x0, 0x0);
        gbc.writeMem(0x8aa2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x39c9);
        EXPECT(gbc.pc(), 0x8aa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa2), 0x55);
        // 55 0182
        gbc.setState(0x4e6a, 0x7c0b, 0xbe90, 0xa512, 0xbf66, 0x3cd4, 0x0, 0x1);
        gbc.writeMem(0x4e6a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7c0b);
        EXPECT(gbc.pc(), 0x4e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0183
        gbc.setState(0xcbeb, 0x97be, 0x8310, 0x5b04, 0xb126, 0xe481, 0x1, 0x1);
        gbc.writeMem(0xcbeb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x97be);
        EXPECT(gbc.pc(), 0xcbec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbeb), 0x55);
        // 55 0184
        gbc.setState(0x366a, 0xe61, 0xdf40, 0x5659, 0x91e, 0xa876, 0x0, 0x0);
        gbc.writeMem(0x366a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe61);
        EXPECT(gbc.pc(), 0x366b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0185
        gbc.setState(0xead3, 0x9658, 0x6490, 0x893c, 0x5391, 0xb739, 0x1, 0x0);
        gbc.writeMem(0xead3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9658);
        EXPECT(gbc.pc(), 0xead4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xead3), 0x55);
        // 55 0186
        gbc.setState(0xd9d3, 0xd8c1, 0xae30, 0x60a1, 0x9816, 0x7bd6, 0x0, 0x0);
        gbc.writeMem(0xd9d3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd8c1);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9d3), 0x55);
        // 55 0187
        gbc.setState(0x6238, 0x44d6, 0x6420, 0x674e, 0x7687, 0xdbfd, 0x0, 0x1);
        gbc.writeMem(0x6238, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x44d6);
        EXPECT(gbc.pc(), 0x6239);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0188
        gbc.setState(0xe045, 0x84a5, 0x9b50, 0x727c, 0x2377, 0x64b6, 0x1, 0x0);
        gbc.writeMem(0xe045, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x84a5);
        EXPECT(gbc.pc(), 0xe046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe045), 0x55);
        // 55 0189
        gbc.setState(0x181e, 0x73a3, 0xf390, 0xcd63, 0x185c, 0xac29, 0x1, 0x0);
        gbc.writeMem(0x181e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x73a3);
        EXPECT(gbc.pc(), 0x181f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 018A
        gbc.setState(0x501a, 0x59ff, 0x7420, 0x1cdc, 0xabd5, 0xb45c, 0x0, 0x1);
        gbc.writeMem(0x501a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x59ff);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 018B
        gbc.setState(0x666b, 0x6bec, 0x4760, 0x9873, 0x712c, 0x914f, 0x0, 0x0);
        gbc.writeMem(0x666b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6bec);
        EXPECT(gbc.pc(), 0x666c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 018C
        gbc.setState(0x36c1, 0x9558, 0x18e0, 0x4ca5, 0x71f5, 0x8187, 0x0, 0x0);
        gbc.writeMem(0x36c1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x9558);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 018D
        gbc.setState(0x3f67, 0x78bf, 0x6730, 0x3493, 0x59db, 0xfc5a, 0x0, 0x0);
        gbc.writeMem(0x3f67, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x78bf);
        EXPECT(gbc.pc(), 0x3f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 018E
        gbc.setState(0x1da, 0x6b47, 0xf790, 0x83eb, 0xcaf6, 0x2303, 0x0, 0x1);
        gbc.writeMem(0x1da, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x6b47);
        EXPECT(gbc.pc(), 0x1db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 018F
        gbc.setState(0x5e, 0x1634, 0x3c80, 0x199, 0xd2b8, 0xef14, 0x1, 0x0);
        gbc.writeMem(0x5e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x1634);
        EXPECT(gbc.pc(), 0x5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0190
        gbc.setState(0xa0e9, 0xd7b1, 0xfcf0, 0xa474, 0x25da, 0x66ea, 0x1, 0x0);
        gbc.writeMem(0xa0e9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xd7b1);
        EXPECT(gbc.pc(), 0xa0ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0e9), 0x55);
        // 55 0191
        gbc.setState(0x94f9, 0x6e8f, 0x3590, 0xe656, 0x22a2, 0x8c14, 0x1, 0x1);
        gbc.writeMem(0x94f9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6e8f);
        EXPECT(gbc.pc(), 0x94fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94f9), 0x55);
        // 55 0192
        gbc.setState(0xef3, 0x2bd0, 0xd960, 0xde7e, 0x9e72, 0x2655, 0x0, 0x1);
        gbc.writeMem(0xef3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2bd0);
        EXPECT(gbc.pc(), 0xef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0193
        gbc.setState(0xd7ab, 0x3769, 0x4400, 0x728f, 0x45c4, 0x4d4, 0x0, 0x1);
        gbc.writeMem(0xd7ab, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x3769);
        EXPECT(gbc.pc(), 0xd7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7ab), 0x55);
        // 55 0194
        gbc.setState(0x96ed, 0xa9a0, 0x8ba0, 0xce7, 0x9cef, 0xc82a, 0x0, 0x0);
        gbc.writeMem(0x96ed, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa9a0);
        EXPECT(gbc.pc(), 0x96ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96ed), 0x55);
        // 55 0195
        gbc.setState(0x54dd, 0xedd3, 0xf340, 0xf43b, 0xf7e2, 0xd1f, 0x1, 0x1);
        gbc.writeMem(0x54dd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xedd3);
        EXPECT(gbc.pc(), 0x54de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0196
        gbc.setState(0x8088, 0x2952, 0x1f80, 0xe4e0, 0xe9c1, 0x80dc, 0x1, 0x0);
        gbc.writeMem(0x8088, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x2952);
        EXPECT(gbc.pc(), 0x8089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8088), 0x55);
        // 55 0197
        gbc.setState(0xd4e1, 0x7777, 0x5760, 0x5cb5, 0x9a54, 0xf6ae, 0x0, 0x0);
        gbc.writeMem(0xd4e1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x7777);
        EXPECT(gbc.pc(), 0xd4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e1), 0x55);
        // 55 0198
        gbc.setState(0xda84, 0xed07, 0xe20, 0xb9b0, 0xbd2a, 0xa4b4, 0x1, 0x1);
        gbc.writeMem(0xda84, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xed07);
        EXPECT(gbc.pc(), 0xda85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda84), 0x55);
        // 55 0199
        gbc.setState(0x2523, 0x9371, 0x6020, 0x3098, 0x3533, 0xb4b4, 0x1, 0x0);
        gbc.writeMem(0x2523, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x9371);
        EXPECT(gbc.pc(), 0x2524);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 019A
        gbc.setState(0x7d92, 0xd353, 0x8c20, 0x8ecf, 0x160c, 0x3fc3, 0x1, 0x0);
        gbc.writeMem(0x7d92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd353);
        EXPECT(gbc.pc(), 0x7d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 019C
        gbc.setState(0x2dfb, 0x35a4, 0x6af0, 0x1731, 0xc3bc, 0xa103, 0x1, 0x0);
        gbc.writeMem(0x2dfb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x35a4);
        EXPECT(gbc.pc(), 0x2dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 019D
        gbc.setState(0x66b3, 0x99c5, 0xb1f0, 0x464b, 0x4526, 0xe1b2, 0x0, 0x1);
        gbc.writeMem(0x66b3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x99c5);
        EXPECT(gbc.pc(), 0x66b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 019E
        gbc.setState(0xb89, 0x9f23, 0xb730, 0xd89, 0x76f, 0x50fa, 0x0, 0x0);
        gbc.writeMem(0xb89, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9f23);
        EXPECT(gbc.pc(), 0xb8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 019F
        gbc.setState(0xe21d, 0xf526, 0x69b0, 0xab1c, 0x4cff, 0x81ab, 0x0, 0x0);
        gbc.writeMem(0xe21d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf526);
        EXPECT(gbc.pc(), 0xe21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe21d), 0x55);
        // 55 01A0
        gbc.setState(0x8f9e, 0x57de, 0x9b20, 0x451d, 0xcf64, 0x8749, 0x1, 0x0);
        gbc.writeMem(0x8f9e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x57de);
        EXPECT(gbc.pc(), 0x8f9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f9e), 0x55);
        // 55 01A1
        gbc.setState(0x11ee, 0x6cf9, 0xa5b0, 0x3937, 0xd63b, 0x6ef8, 0x0, 0x1);
        gbc.writeMem(0x11ee, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6cf9);
        EXPECT(gbc.pc(), 0x11ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01A2
        gbc.setState(0xe685, 0xe912, 0xc3c0, 0x37fe, 0xce9e, 0xe6da, 0x1, 0x1);
        gbc.writeMem(0xe685, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe912);
        EXPECT(gbc.pc(), 0xe686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe685), 0x55);
        // 55 01A3
        gbc.setState(0xdf91, 0xfff9, 0xef50, 0x96b0, 0xc850, 0x8b56, 0x0, 0x1);
        gbc.writeMem(0xdf91, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfff9);
        EXPECT(gbc.pc(), 0xdf92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf91), 0x55);
        // 55 01A4
        gbc.setState(0x1b8a, 0x4979, 0x1c0, 0x8b9e, 0x4a9e, 0xc3a7, 0x0, 0x0);
        gbc.writeMem(0x1b8a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x4979);
        EXPECT(gbc.pc(), 0x1b8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01A5
        gbc.setState(0xe5dc, 0x3d48, 0x2e40, 0x8808, 0x2151, 0x57c6, 0x1, 0x0);
        gbc.writeMem(0xe5dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x3d48);
        EXPECT(gbc.pc(), 0xe5dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5dc), 0x55);
        // 55 01A6
        gbc.setState(0xb6d2, 0x2562, 0x6b60, 0x5fa4, 0x9541, 0xd95b, 0x0, 0x1);
        gbc.writeMem(0xb6d2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2562);
        EXPECT(gbc.pc(), 0xb6d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d2), 0x55);
        // 55 01A7
        gbc.setState(0xb52e, 0x68fa, 0xcbf0, 0x29eb, 0x12ad, 0x31a, 0x0, 0x1);
        gbc.writeMem(0xb52e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x68fa);
        EXPECT(gbc.pc(), 0xb52f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb52e), 0x55);
        // 55 01A8
        gbc.setState(0x3d6a, 0x49a2, 0xeb80, 0xe43c, 0xe9c2, 0x9867, 0x1, 0x0);
        gbc.writeMem(0x3d6a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x49a2);
        EXPECT(gbc.pc(), 0x3d6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01A9
        gbc.setState(0x89f6, 0x82aa, 0x8460, 0xe89c, 0x738c, 0x8518, 0x0, 0x1);
        gbc.writeMem(0x89f6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x82aa);
        EXPECT(gbc.pc(), 0x89f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f6), 0x55);
        // 55 01AA
        gbc.setState(0x55cd, 0xb91, 0x9990, 0x6188, 0xa981, 0xb258, 0x1, 0x0);
        gbc.writeMem(0x55cd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb91);
        EXPECT(gbc.pc(), 0x55ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01AB
        gbc.setState(0xec34, 0x643a, 0xe340, 0x9465, 0x1b43, 0xf99c, 0x0, 0x1);
        gbc.writeMem(0xec34, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x643a);
        EXPECT(gbc.pc(), 0xec35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec34), 0x55);
        // 55 01AC
        gbc.setState(0x64c5, 0xfa6, 0x3660, 0xeee0, 0xba58, 0x7a6a, 0x1, 0x0);
        gbc.writeMem(0x64c5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xfa6);
        EXPECT(gbc.pc(), 0x64c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01AD
        gbc.setState(0xa30c, 0x54bb, 0xcd80, 0x8ed7, 0x74c0, 0x2f4c, 0x1, 0x1);
        gbc.writeMem(0xa30c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x54bb);
        EXPECT(gbc.pc(), 0xa30d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa30c), 0x55);
        // 55 01AE
        gbc.setState(0x767e, 0xaa0f, 0x38d0, 0x5554, 0x80b5, 0x1206, 0x1, 0x1);
        gbc.writeMem(0x767e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xaa0f);
        EXPECT(gbc.pc(), 0x767f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01AF
        gbc.setState(0x4aef, 0xbc9f, 0xf140, 0x5b4b, 0x94ca, 0x6851, 0x1, 0x0);
        gbc.writeMem(0x4aef, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbc9f);
        EXPECT(gbc.pc(), 0x4af0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01B0
        gbc.setState(0x5abd, 0xaf51, 0x6a00, 0xe0da, 0xfae8, 0x4f04, 0x1, 0x0);
        gbc.writeMem(0x5abd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xaf51);
        EXPECT(gbc.pc(), 0x5abe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01B1
        gbc.setState(0x42f3, 0x90d7, 0x8660, 0x1e43, 0x274f, 0x4df5, 0x1, 0x1);
        gbc.writeMem(0x42f3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x90d7);
        EXPECT(gbc.pc(), 0x42f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01B2
        gbc.setState(0x862e, 0xbd7f, 0xe010, 0xd994, 0xc47f, 0x9bc3, 0x1, 0x0);
        gbc.writeMem(0x862e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xbd7f);
        EXPECT(gbc.pc(), 0x862f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x862e), 0x55);
        // 55 01B3
        gbc.setState(0xef5a, 0x3c1c, 0x54b0, 0x8e31, 0x7bfc, 0xbcc5, 0x0, 0x1);
        gbc.writeMem(0xef5a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3c1c);
        EXPECT(gbc.pc(), 0xef5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef5a), 0x55);
        // 55 01B4
        gbc.setState(0x8c15, 0xc00, 0xce10, 0xa0af, 0xdefc, 0x9609, 0x0, 0x1);
        gbc.writeMem(0x8c15, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xc00);
        EXPECT(gbc.pc(), 0x8c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c15), 0x55);
        // 55 01B5
        gbc.setState(0x1106, 0x3b28, 0x66e0, 0x4f61, 0x5d1d, 0xd7e3, 0x1, 0x1);
        gbc.writeMem(0x1106, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x3b28);
        EXPECT(gbc.pc(), 0x1107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01B6
        gbc.setState(0xcf72, 0x5508, 0x8960, 0x40f1, 0x4e09, 0x842a, 0x1, 0x0);
        gbc.writeMem(0xcf72, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5508);
        EXPECT(gbc.pc(), 0xcf73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf72), 0x55);
        // 55 01B7
        gbc.setState(0xe335, 0xcfa7, 0xa350, 0x362, 0xb076, 0xc5f9, 0x0, 0x0);
        gbc.writeMem(0xe335, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xcfa7);
        EXPECT(gbc.pc(), 0xe336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe335), 0x55);
        // 55 01B8
        gbc.setState(0x491c, 0x4960, 0x3730, 0x2c11, 0x33b9, 0x3c1f, 0x1, 0x0);
        gbc.writeMem(0x491c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x4960);
        EXPECT(gbc.pc(), 0x491d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01B9
        gbc.setState(0x2cfe, 0xeb3c, 0x3bd0, 0x13e7, 0xef17, 0x61d, 0x0, 0x1);
        gbc.writeMem(0x2cfe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xeb3c);
        EXPECT(gbc.pc(), 0x2cff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01BA
        gbc.setState(0xa5fd, 0x3e2a, 0x1690, 0x51ea, 0x2102, 0xf73d, 0x0, 0x1);
        gbc.writeMem(0xa5fd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x3e2a);
        EXPECT(gbc.pc(), 0xa5fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5fd), 0x55);
        // 55 01BB
        gbc.setState(0x8cc2, 0x9a8d, 0x7650, 0x592f, 0x161b, 0xcddd, 0x1, 0x1);
        gbc.writeMem(0x8cc2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9a8d);
        EXPECT(gbc.pc(), 0x8cc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cc2), 0x55);
        // 55 01BC
        gbc.setState(0xa1ce, 0x8dd4, 0x9200, 0x115e, 0x8ee0, 0x7c9b, 0x1, 0x0);
        gbc.writeMem(0xa1ce, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8dd4);
        EXPECT(gbc.pc(), 0xa1cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1ce), 0x55);
        // 55 01BD
        gbc.setState(0xc5b5, 0xf824, 0xeb00, 0x4f56, 0xa704, 0xd550, 0x1, 0x1);
        gbc.writeMem(0xc5b5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xf824);
        EXPECT(gbc.pc(), 0xc5b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5b5), 0x55);
        // 55 01BE
        gbc.setState(0x8034, 0xc533, 0xb8a0, 0xfd7a, 0x3282, 0x710f, 0x1, 0x1);
        gbc.writeMem(0x8034, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xc533);
        EXPECT(gbc.pc(), 0x8035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8034), 0x55);
        // 55 01BF
        gbc.setState(0x9acc, 0x512b, 0x6e90, 0xae9c, 0xc042, 0x912b, 0x1, 0x1);
        gbc.writeMem(0x9acc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x512b);
        EXPECT(gbc.pc(), 0x9acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9acc), 0x55);
        // 55 01C0
        gbc.setState(0x631b, 0x1812, 0x5e30, 0xb842, 0x2332, 0x3c37, 0x1, 0x1);
        gbc.writeMem(0x631b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1812);
        EXPECT(gbc.pc(), 0x631c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01C1
        gbc.setState(0xc895, 0xe685, 0xc730, 0x24a4, 0x6e39, 0x1ce9, 0x1, 0x0);
        gbc.writeMem(0xc895, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe685);
        EXPECT(gbc.pc(), 0xc896);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc895), 0x55);
        // 55 01C2
        gbc.setState(0x95ca, 0x105c, 0x8390, 0x295b, 0xd9b5, 0x947e, 0x1, 0x1);
        gbc.writeMem(0x95ca, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x105c);
        EXPECT(gbc.pc(), 0x95cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95ca), 0x55);
        // 55 01C3
        gbc.setState(0xd512, 0xa081, 0x4eb0, 0xba14, 0x384c, 0x45bc, 0x1, 0x1);
        gbc.writeMem(0xd512, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa081);
        EXPECT(gbc.pc(), 0xd513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd512), 0x55);
        // 55 01C4
        gbc.setState(0x6f84, 0x7a4d, 0x43b0, 0x774b, 0x1ee9, 0x490e, 0x1, 0x0);
        gbc.writeMem(0x6f84, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7a4d);
        EXPECT(gbc.pc(), 0x6f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01C5
        gbc.setState(0xbf3c, 0x4cb0, 0x8ce0, 0x390f, 0x3470, 0xb773, 0x0, 0x0);
        gbc.writeMem(0xbf3c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x4cb0);
        EXPECT(gbc.pc(), 0xbf3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf3c), 0x55);
        // 55 01C6
        gbc.setState(0x97d, 0xca4c, 0xcd60, 0x50d6, 0xa2, 0xb9c2, 0x0, 0x1);
        gbc.writeMem(0x97d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xca4c);
        EXPECT(gbc.pc(), 0x97e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01C7
        gbc.setState(0x832, 0x5b3, 0x13a0, 0x26b0, 0xb109, 0xbd49, 0x1, 0x1);
        gbc.writeMem(0x832, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5b3);
        EXPECT(gbc.pc(), 0x833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01C8
        gbc.setState(0x1cfb, 0x516b, 0xf730, 0xc0ee, 0x302, 0x13f1, 0x0, 0x1);
        gbc.writeMem(0x1cfb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x516b);
        EXPECT(gbc.pc(), 0x1cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01C9
        gbc.setState(0x5e5f, 0xf76, 0x60d0, 0x66e5, 0xa828, 0xee52, 0x1, 0x0);
        gbc.writeMem(0x5e5f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xf76);
        EXPECT(gbc.pc(), 0x5e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01CA
        gbc.setState(0x906e, 0x3760, 0xecd0, 0xf79, 0x9123, 0x5775, 0x0, 0x0);
        gbc.writeMem(0x906e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3760);
        EXPECT(gbc.pc(), 0x906f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x906e), 0x55);
        // 55 01CB
        gbc.setState(0xbacd, 0x3b6e, 0xc0e0, 0xadee, 0xf257, 0x32a6, 0x1, 0x0);
        gbc.writeMem(0xbacd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0xbace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbacd), 0x55);
        // 55 01CC
        gbc.setState(0xdc5d, 0xf02b, 0xd550, 0xa719, 0x9c81, 0x1f17, 0x1, 0x0);
        gbc.writeMem(0xdc5d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xf02b);
        EXPECT(gbc.pc(), 0xdc5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc5d), 0x55);
        // 55 01CD
        gbc.setState(0xb5b3, 0x47c6, 0xeda0, 0x427c, 0xd4d3, 0x7f4f, 0x0, 0x1);
        gbc.writeMem(0xb5b3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x47c6);
        EXPECT(gbc.pc(), 0xb5b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0x55);
        // 55 01CE
        gbc.setState(0x3f55, 0x9d3b, 0x22c0, 0x4ac0, 0x236, 0x6f15, 0x0, 0x1);
        gbc.writeMem(0x3f55, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9d3b);
        EXPECT(gbc.pc(), 0x3f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01CF
        gbc.setState(0x8f2e, 0x355c, 0xc560, 0x57f1, 0xb4b9, 0x4b37, 0x0, 0x0);
        gbc.writeMem(0x8f2e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x355c);
        EXPECT(gbc.pc(), 0x8f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f2e), 0x55);
        // 55 01D0
        gbc.setState(0x25e7, 0xa21b, 0x8070, 0x54cb, 0x4e0d, 0xe4b7, 0x1, 0x0);
        gbc.writeMem(0x25e7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x25e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01D1
        gbc.setState(0x5d54, 0xa13e, 0x4bd0, 0xd826, 0x59ab, 0x9ef0, 0x1, 0x0);
        gbc.writeMem(0x5d54, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa13e);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01D2
        gbc.setState(0xb51e, 0x921f, 0xab50, 0x88ca, 0xfc51, 0x1eb6, 0x0, 0x0);
        gbc.writeMem(0xb51e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x921f);
        EXPECT(gbc.pc(), 0xb51f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51e), 0x55);
        // 55 01D3
        gbc.setState(0x8528, 0x312b, 0x30f0, 0xf401, 0x6baf, 0x7dd9, 0x1, 0x0);
        gbc.writeMem(0x8528, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x312b);
        EXPECT(gbc.pc(), 0x8529);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8528), 0x55);
        // 55 01D4
        gbc.setState(0x4df8, 0x3a08, 0xba70, 0xdb52, 0x1af9, 0xc5d6, 0x0, 0x1);
        gbc.writeMem(0x4df8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x3a08);
        EXPECT(gbc.pc(), 0x4df9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01D5
        gbc.setState(0x7007, 0x425a, 0x1b90, 0x9b1c, 0x3041, 0x4993, 0x1, 0x0);
        gbc.writeMem(0x7007, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x425a);
        EXPECT(gbc.pc(), 0x7008);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01D6
        gbc.setState(0xb109, 0xd099, 0x6740, 0x7de9, 0x888c, 0x5f42, 0x1, 0x1);
        gbc.writeMem(0xb109, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd099);
        EXPECT(gbc.pc(), 0xb10a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb109), 0x55);
        // 55 01D7
        gbc.setState(0x54a9, 0x5f38, 0x8960, 0xe72c, 0x9671, 0xd2dc, 0x0, 0x0);
        gbc.writeMem(0x54a9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5f38);
        EXPECT(gbc.pc(), 0x54aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01D8
        gbc.setState(0x9e4c, 0x2bfd, 0x6e20, 0xe414, 0xeba9, 0xc7fa, 0x0, 0x0);
        gbc.writeMem(0x9e4c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x2bfd);
        EXPECT(gbc.pc(), 0x9e4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e4c), 0x55);
        // 55 01D9
        gbc.setState(0xea6c, 0xbcf6, 0x2af0, 0x4bd9, 0x475a, 0xa4b4, 0x1, 0x1);
        gbc.writeMem(0xea6c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xbcf6);
        EXPECT(gbc.pc(), 0xea6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea6c), 0x55);
        // 55 01DA
        gbc.setState(0x9e73, 0x6b85, 0x32a0, 0x1bd3, 0x1431, 0x377a, 0x1, 0x1);
        gbc.writeMem(0x9e73, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6b85);
        EXPECT(gbc.pc(), 0x9e74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e73), 0x55);
        // 55 01DB
        gbc.setState(0xe323, 0xb145, 0xea40, 0xfb91, 0xd726, 0xb14, 0x0, 0x1);
        gbc.writeMem(0xe323, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xb145);
        EXPECT(gbc.pc(), 0xe324);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe323), 0x55);
        // 55 01DC
        gbc.setState(0x97e3, 0x3316, 0xc510, 0x78a4, 0x2f20, 0x7aa1, 0x1, 0x0);
        gbc.writeMem(0x97e3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3316);
        EXPECT(gbc.pc(), 0x97e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97e3), 0x55);
        // 55 01DD
        gbc.setState(0x3ee0, 0xe39f, 0x3150, 0x5f79, 0xc55d, 0x8a4b, 0x1, 0x0);
        gbc.writeMem(0x3ee0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe39f);
        EXPECT(gbc.pc(), 0x3ee1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01DE
        gbc.setState(0x5502, 0x6d2a, 0x2820, 0x2120, 0x58d3, 0xd62e, 0x1, 0x0);
        gbc.writeMem(0x5502, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x6d2a);
        EXPECT(gbc.pc(), 0x5503);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01DF
        gbc.setState(0x9074, 0x1a7d, 0x7990, 0x827e, 0xe625, 0x3e17, 0x1, 0x0);
        gbc.writeMem(0x9074, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1a7d);
        EXPECT(gbc.pc(), 0x9075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9074), 0x55);
        // 55 01E0
        gbc.setState(0x8d66, 0xcae9, 0xec90, 0x211a, 0x1e9a, 0xb61b, 0x0, 0x0);
        gbc.writeMem(0x8d66, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xcae9);
        EXPECT(gbc.pc(), 0x8d67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d66), 0x55);
        // 55 01E1
        gbc.setState(0x4462, 0xd585, 0x4cb0, 0x3404, 0x327e, 0xfe13, 0x1, 0x0);
        gbc.writeMem(0x4462, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd585);
        EXPECT(gbc.pc(), 0x4463);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01E2
        gbc.setState(0xdd65, 0xc3d5, 0xf680, 0xad0, 0x89c5, 0x9e2a, 0x1, 0x1);
        gbc.writeMem(0xdd65, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xc3d5);
        EXPECT(gbc.pc(), 0xdd66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd65), 0x55);
        // 55 01E3
        gbc.setState(0x5961, 0x52c2, 0xc300, 0x6643, 0xbac, 0x7cb0, 0x1, 0x1);
        gbc.writeMem(0x5961, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x52c2);
        EXPECT(gbc.pc(), 0x5962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01E4
        gbc.setState(0x992c, 0x6d9e, 0xad50, 0x5ed5, 0x3ebd, 0x4ab6, 0x1, 0x1);
        gbc.writeMem(0x992c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6d9e);
        EXPECT(gbc.pc(), 0x992d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x992c), 0x55);
        // 55 01E5
        gbc.setState(0xb26c, 0xe470, 0xc760, 0x93d7, 0x4263, 0x8a16, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xe470);
        EXPECT(gbc.pc(), 0xb26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26c), 0x55);
        // 55 01E6
        gbc.setState(0xab68, 0x1de4, 0x5500, 0xd84e, 0x1bd3, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0xab68, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1de4);
        EXPECT(gbc.pc(), 0xab69);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab68), 0x55);
        // 55 01E7
        gbc.setState(0x41ae, 0xd3a4, 0xd920, 0x3ab9, 0x23d7, 0xa17, 0x1, 0x1);
        gbc.writeMem(0x41ae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0x41af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01E8
        gbc.setState(0x81f2, 0x285b, 0x3940, 0x92a1, 0x6641, 0x1c1b, 0x0, 0x1);
        gbc.writeMem(0x81f2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x285b);
        EXPECT(gbc.pc(), 0x81f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81f2), 0x55);
        // 55 01E9
        gbc.setState(0x3ef4, 0x6b52, 0x2340, 0x6f5e, 0x1c7b, 0x491d, 0x1, 0x0);
        gbc.writeMem(0x3ef4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6b52);
        EXPECT(gbc.pc(), 0x3ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01EA
        gbc.setState(0x6c6f, 0x13f6, 0x35f0, 0x3800, 0xae1c, 0xa4cb, 0x1, 0x1);
        gbc.writeMem(0x6c6f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x13f6);
        EXPECT(gbc.pc(), 0x6c70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01EB
        gbc.setState(0x8520, 0x4440, 0x3980, 0xdb63, 0x96ae, 0x34e2, 0x1, 0x1);
        gbc.writeMem(0x8520, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4440);
        EXPECT(gbc.pc(), 0x8521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8520), 0x55);
        // 55 01EC
        gbc.setState(0x402e, 0x91c3, 0xb980, 0xbf31, 0x5804, 0x2b97, 0x1, 0x0);
        gbc.writeMem(0x402e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x91c3);
        EXPECT(gbc.pc(), 0x402f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 01ED
        gbc.setState(0xa624, 0x73f5, 0xd6e0, 0x7cc1, 0xf44b, 0xf682, 0x0, 0x0);
        gbc.writeMem(0xa624, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x73f5);
        EXPECT(gbc.pc(), 0xa625);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa624), 0x55);
        // 55 01EE
        gbc.setState(0x896d, 0x70ca, 0xb790, 0x7fa7, 0xc1e0, 0x9058, 0x1, 0x0);
        gbc.writeMem(0x896d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x70ca);
        EXPECT(gbc.pc(), 0x896e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x896d), 0x55);
        // 55 01EF
        gbc.setState(0xde37, 0x6ea3, 0x5400, 0x8fec, 0xf676, 0xb1e5, 0x1, 0x0);
        gbc.writeMem(0xde37, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x6ea3);
        EXPECT(gbc.pc(), 0xde38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde37), 0x55);
        // 55 01F0
        gbc.setState(0x56f1, 0x188e, 0xfdb0, 0xb16c, 0xdf14, 0x934d, 0x0, 0x1);
        gbc.writeMem(0x56f1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x188e);
        EXPECT(gbc.pc(), 0x56f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01F1
        gbc.setState(0x9230, 0xbe29, 0xea70, 0xcfcb, 0xaaf2, 0x1a67, 0x1, 0x0);
        gbc.writeMem(0x9230, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xbe29);
        EXPECT(gbc.pc(), 0x9231);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9230), 0x55);
        // 55 01F2
        gbc.setState(0x9f4d, 0x2f92, 0x2790, 0x4387, 0xb3c9, 0x5f4f, 0x1, 0x1);
        gbc.writeMem(0x9f4d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2f92);
        EXPECT(gbc.pc(), 0x9f4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f4d), 0x55);
        // 55 01F3
        gbc.setState(0x3594, 0xa630, 0x3ce0, 0x3f09, 0x7f66, 0x6d57, 0x0, 0x0);
        gbc.writeMem(0x3594, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xa630);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01F4
        gbc.setState(0x54e4, 0x1712, 0xe5e0, 0x2dd, 0xa4d6, 0x1334, 0x0, 0x1);
        gbc.writeMem(0x54e4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x1712);
        EXPECT(gbc.pc(), 0x54e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01F5
        gbc.setState(0x8d4b, 0x6e7e, 0x3020, 0x6f73, 0xa9f3, 0x160d, 0x1, 0x1);
        gbc.writeMem(0x8d4b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6e7e);
        EXPECT(gbc.pc(), 0x8d4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d4b), 0x55);
        // 55 01F6
        gbc.setState(0xca6f, 0x138e, 0xdc70, 0xe04, 0xf17e, 0xf2b2, 0x1, 0x0);
        gbc.writeMem(0xca6f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x138e);
        EXPECT(gbc.pc(), 0xca70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6f), 0x55);
        // 55 01F7
        gbc.setState(0x7338, 0xfd09, 0xea70, 0xa0b6, 0x9e5e, 0x2e77, 0x0, 0x0);
        gbc.writeMem(0x7338, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfd09);
        EXPECT(gbc.pc(), 0x7339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01F8
        gbc.setState(0x6abe, 0x5808, 0xd7b0, 0xb686, 0x5ba0, 0x4d47, 0x1, 0x1);
        gbc.writeMem(0x6abe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x5808);
        EXPECT(gbc.pc(), 0x6abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 01F9
        gbc.setState(0xae5f, 0x8462, 0xdcb0, 0xbec7, 0x6f1b, 0xcc79, 0x0, 0x0);
        gbc.writeMem(0xae5f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x8462);
        EXPECT(gbc.pc(), 0xae60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae5f), 0x55);
        // 55 01FA
        gbc.setState(0xc982, 0x11ad, 0x1e00, 0x195a, 0xf2d0, 0xf938, 0x1, 0x1);
        gbc.writeMem(0xc982, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x11ad);
        EXPECT(gbc.pc(), 0xc983);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc982), 0x55);
        // 55 01FC
        gbc.setState(0xcc38, 0xfb0a, 0xc780, 0x3b7, 0xde4f, 0x2652, 0x1, 0x1);
        gbc.writeMem(0xcc38, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xfb0a);
        EXPECT(gbc.pc(), 0xcc39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc38), 0x55);
        // 55 01FD
        gbc.setState(0x77df, 0x1399, 0x1d10, 0x5b8c, 0xa8dd, 0xdd32, 0x0, 0x0);
        gbc.writeMem(0x77df, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1399);
        EXPECT(gbc.pc(), 0x77e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 01FE
        gbc.setState(0x58, 0x2299, 0xa560, 0xe9af, 0x34ef, 0x5664, 0x0, 0x0);
        gbc.writeMem(0x58, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x2299);
        EXPECT(gbc.pc(), 0x59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 01FF
        gbc.setState(0x5e6f, 0x6e00, 0x53a0, 0x17cf, 0xb055, 0x75e7, 0x0, 0x0);
        gbc.writeMem(0x5e6f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6e00);
        EXPECT(gbc.pc(), 0x5e70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0200
        gbc.setState(0x5ec, 0x60cc, 0xa840, 0xeeb, 0x1c03, 0x362d, 0x1, 0x0);
        gbc.writeMem(0x5ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x60cc);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0201
        gbc.setState(0xebc4, 0xf236, 0xfc70, 0x27d1, 0xb116, 0xd2cb, 0x1, 0x0);
        gbc.writeMem(0xebc4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf236);
        EXPECT(gbc.pc(), 0xebc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebc4), 0x55);
        // 55 0202
        gbc.setState(0x1ce0, 0x6eae, 0xfb40, 0x5f28, 0xeb92, 0x5352, 0x0, 0x1);
        gbc.writeMem(0x1ce0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6eae);
        EXPECT(gbc.pc(), 0x1ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0204
        gbc.setState(0x4121, 0x5f77, 0xfb00, 0x7e37, 0xd065, 0xc18a, 0x1, 0x0);
        gbc.writeMem(0x4121, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5f77);
        EXPECT(gbc.pc(), 0x4122);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0205
        gbc.setState(0x5d6b, 0xed23, 0xe460, 0x4c55, 0x85b6, 0x8ee2, 0x1, 0x1);
        gbc.writeMem(0x5d6b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xed23);
        EXPECT(gbc.pc(), 0x5d6c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0206
        gbc.setState(0x7cf7, 0xfa8, 0xbd30, 0xe09c, 0xbbe2, 0x6264, 0x0, 0x0);
        gbc.writeMem(0x7cf7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xfa8);
        EXPECT(gbc.pc(), 0x7cf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0207
        gbc.setState(0x8ee9, 0x7e, 0x4c80, 0x8d0, 0xc070, 0x58f3, 0x0, 0x0);
        gbc.writeMem(0x8ee9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7e);
        EXPECT(gbc.pc(), 0x8eea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ee9), 0x55);
        // 55 0208
        gbc.setState(0x71ee, 0xfdda, 0x6da0, 0x980e, 0x3e91, 0xf79a, 0x0, 0x0);
        gbc.writeMem(0x71ee, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0x71ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0209
        gbc.setState(0xbe5c, 0x2616, 0x55e0, 0xe8e3, 0x7d0a, 0x9a6, 0x0, 0x0);
        gbc.writeMem(0xbe5c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2616);
        EXPECT(gbc.pc(), 0xbe5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5c), 0x55);
        // 55 020A
        gbc.setState(0x6156, 0x61cf, 0x6320, 0xdd7a, 0x837b, 0x75c, 0x0, 0x0);
        gbc.writeMem(0x6156, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x61cf);
        EXPECT(gbc.pc(), 0x6157);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 020B
        gbc.setState(0x5f9, 0x9cfa, 0xd980, 0xc923, 0xda26, 0x1a91, 0x0, 0x0);
        gbc.writeMem(0x5f9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9cfa);
        EXPECT(gbc.pc(), 0x5fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 020C
        gbc.setState(0xe1ec, 0x3913, 0x2070, 0x58e7, 0x99f4, 0x53bd, 0x1, 0x1);
        gbc.writeMem(0xe1ec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x3913);
        EXPECT(gbc.pc(), 0xe1ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1ec), 0x55);
        // 55 020D
        gbc.setState(0x5351, 0x486, 0x2c60, 0xc845, 0x8d72, 0xf473, 0x1, 0x1);
        gbc.writeMem(0x5351, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x486);
        EXPECT(gbc.pc(), 0x5352);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 020E
        gbc.setState(0x40a2, 0x7d2e, 0x8410, 0x146, 0x7a8d, 0xec57, 0x0, 0x1);
        gbc.writeMem(0x40a2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7d2e);
        EXPECT(gbc.pc(), 0x40a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 020F
        gbc.setState(0xe66a, 0xf348, 0x5090, 0x75bd, 0x49fc, 0x3ce6, 0x1, 0x0);
        gbc.writeMem(0xe66a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf348);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe66a), 0x55);
        // 55 0210
        gbc.setState(0x40ab, 0x9919, 0x9a60, 0xac2d, 0x88a, 0x4f32, 0x1, 0x1);
        gbc.writeMem(0x40ab, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x9919);
        EXPECT(gbc.pc(), 0x40ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0211
        gbc.setState(0x7fea, 0x5c8a, 0x9c70, 0x3b0, 0x6857, 0x9fd2, 0x0, 0x1);
        gbc.writeMem(0x7fea, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x5c8a);
        EXPECT(gbc.pc(), 0x7feb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0212
        gbc.setState(0x35a7, 0xc49c, 0xee60, 0xe8d9, 0x7f19, 0x9008, 0x1, 0x0);
        gbc.writeMem(0x35a7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xc49c);
        EXPECT(gbc.pc(), 0x35a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0213
        gbc.setState(0xe6e1, 0x930b, 0x1980, 0xc213, 0x13ef, 0xd7d9, 0x1, 0x0);
        gbc.writeMem(0xe6e1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x930b);
        EXPECT(gbc.pc(), 0xe6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6e1), 0x55);
        // 55 0214
        gbc.setState(0xb9ea, 0x864f, 0x2b80, 0xe113, 0x7f15, 0x5642, 0x1, 0x0);
        gbc.writeMem(0xb9ea, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x864f);
        EXPECT(gbc.pc(), 0xb9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9ea), 0x55);
        // 55 0217
        gbc.setState(0xd369, 0x270a, 0x7030, 0x286c, 0x7762, 0x5c03, 0x0, 0x1);
        gbc.writeMem(0xd369, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x270a);
        EXPECT(gbc.pc(), 0xd36a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd369), 0x55);
        // 55 0218
        gbc.setState(0xb97f, 0x875e, 0x7660, 0x3131, 0x3b5c, 0x5061, 0x0, 0x0);
        gbc.writeMem(0xb97f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x875e);
        EXPECT(gbc.pc(), 0xb980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb97f), 0x55);
        // 55 021A
        gbc.setState(0xab25, 0x8edd, 0x1700, 0x1d46, 0x7c95, 0xd140, 0x1, 0x1);
        gbc.writeMem(0xab25, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8edd);
        EXPECT(gbc.pc(), 0xab26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab25), 0x55);
        // 55 021C
        gbc.setState(0xb760, 0x8014, 0x8460, 0x18ce, 0x5821, 0x9b98, 0x0, 0x0);
        gbc.writeMem(0xb760, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8014);
        EXPECT(gbc.pc(), 0xb761);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb760), 0x55);
        // 55 021D
        gbc.setState(0x94ea, 0xdb71, 0xabc0, 0xea92, 0x4342, 0xb371, 0x0, 0x1);
        gbc.writeMem(0x94ea, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xdb71);
        EXPECT(gbc.pc(), 0x94eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ea), 0x55);
        // 55 021E
        gbc.setState(0x724c, 0x9128, 0x38f0, 0xecb1, 0xcc22, 0x3213, 0x0, 0x0);
        gbc.writeMem(0x724c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x9128);
        EXPECT(gbc.pc(), 0x724d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 021F
        gbc.setState(0xeabf, 0xa276, 0x5070, 0x793f, 0xd23f, 0xec7d, 0x0, 0x0);
        gbc.writeMem(0xeabf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xa276);
        EXPECT(gbc.pc(), 0xeac0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeabf), 0x55);
        // 55 0220
        gbc.setState(0xa1a6, 0x108c, 0x2980, 0x3300, 0x3a71, 0x7ab6, 0x1, 0x0);
        gbc.writeMem(0xa1a6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x108c);
        EXPECT(gbc.pc(), 0xa1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1a6), 0x55);
        // 55 0221
        gbc.setState(0xd89e, 0x74dd, 0x7d70, 0xdd26, 0x4584, 0x9987, 0x1, 0x0);
        gbc.writeMem(0xd89e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x74dd);
        EXPECT(gbc.pc(), 0xd89f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89e), 0x55);
        // 55 0222
        gbc.setState(0xb4cb, 0x5b45, 0xdf00, 0xf7cf, 0x1b7d, 0xb5aa, 0x1, 0x1);
        gbc.writeMem(0xb4cb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5b45);
        EXPECT(gbc.pc(), 0xb4cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4cb), 0x55);
        // 55 0223
        gbc.setState(0x3baa, 0xfefd, 0x6020, 0x694a, 0x9d5c, 0xdae3, 0x0, 0x0);
        gbc.writeMem(0x3baa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xfefd);
        EXPECT(gbc.pc(), 0x3bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0224
        gbc.setState(0xeed9, 0xcb16, 0xfa90, 0xd281, 0xc443, 0xf292, 0x0, 0x1);
        gbc.writeMem(0xeed9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xcb16);
        EXPECT(gbc.pc(), 0xeeda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed9), 0x55);
        // 55 0225
        gbc.setState(0xdc97, 0x5bac, 0x8470, 0x1259, 0xce9c, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0xdc97, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5bac);
        EXPECT(gbc.pc(), 0xdc98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc97), 0x55);
        // 55 0226
        gbc.setState(0x49af, 0x46ac, 0xdfb0, 0x7794, 0xa3e0, 0xdc23, 0x1, 0x1);
        gbc.writeMem(0x49af, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x46ac);
        EXPECT(gbc.pc(), 0x49b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0227
        gbc.setState(0x7879, 0x3e0b, 0xdff0, 0x5f3b, 0x3684, 0x7aaa, 0x1, 0x0);
        gbc.writeMem(0x7879, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x3e0b);
        EXPECT(gbc.pc(), 0x787a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0228
        gbc.setState(0x2ffc, 0xf795, 0x5db0, 0xb12e, 0x5c3f, 0x2662, 0x1, 0x1);
        gbc.writeMem(0x2ffc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf795);
        EXPECT(gbc.pc(), 0x2ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0229
        gbc.setState(0x3aa, 0x9597, 0xa6b0, 0x85e5, 0x35f6, 0x174d, 0x0, 0x1);
        gbc.writeMem(0x3aa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x9597);
        EXPECT(gbc.pc(), 0x3ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 022A
        gbc.setState(0xbaaf, 0xe489, 0xc50, 0xb0d4, 0x6b99, 0xfa3b, 0x0, 0x0);
        gbc.writeMem(0xbaaf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe489);
        EXPECT(gbc.pc(), 0xbab0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaaf), 0x55);
        // 55 022B
        gbc.setState(0x36a6, 0x804f, 0x6cc0, 0x43f2, 0x5bde, 0x6713, 0x1, 0x0);
        gbc.writeMem(0x36a6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x804f);
        EXPECT(gbc.pc(), 0x36a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 022D
        gbc.setState(0x408d, 0xf7d2, 0x32e0, 0x8f5e, 0xb113, 0xf2b0, 0x1, 0x0);
        gbc.writeMem(0x408d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf7d2);
        EXPECT(gbc.pc(), 0x408e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 022E
        gbc.setState(0xa2c2, 0x4b9a, 0x5e50, 0xb289, 0x7cb, 0x929c, 0x1, 0x0);
        gbc.writeMem(0xa2c2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4b9a);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c2), 0x55);
        // 55 022F
        gbc.setState(0xc5d, 0x8c88, 0xeec0, 0xae4f, 0xa842, 0xf216, 0x1, 0x0);
        gbc.writeMem(0xc5d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8c88);
        EXPECT(gbc.pc(), 0xc5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0230
        gbc.setState(0x6b3d, 0xc8bd, 0xd270, 0xa557, 0x31ae, 0xf3a9, 0x1, 0x0);
        gbc.writeMem(0x6b3d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc8bd);
        EXPECT(gbc.pc(), 0x6b3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0231
        gbc.setState(0x14b9, 0xde1f, 0x6e20, 0x2ce1, 0xeb6, 0x11ec, 0x0, 0x1);
        gbc.writeMem(0x14b9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0x14ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0232
        gbc.setState(0x7b5e, 0xb921, 0x2190, 0xbec1, 0x3b18, 0x7328, 0x1, 0x0);
        gbc.writeMem(0x7b5e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xb921);
        EXPECT(gbc.pc(), 0x7b5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0233
        gbc.setState(0x27e0, 0x1267, 0x1e30, 0x4749, 0xc22b, 0xa890, 0x0, 0x1);
        gbc.writeMem(0x27e0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1267);
        EXPECT(gbc.pc(), 0x27e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0234
        gbc.setState(0x856d, 0x840f, 0x1610, 0x497f, 0x3bbf, 0xd504, 0x1, 0x1);
        gbc.writeMem(0x856d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x840f);
        EXPECT(gbc.pc(), 0x856e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x856d), 0x55);
        // 55 0235
        gbc.setState(0x16e, 0xa2e5, 0x75e0, 0x4215, 0xb134, 0xab54, 0x1, 0x1);
        gbc.writeMem(0x16e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xa2e5);
        EXPECT(gbc.pc(), 0x16f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0236
        gbc.setState(0x914e, 0xaca, 0x620, 0xae78, 0x4b38, 0x18f4, 0x1, 0x1);
        gbc.writeMem(0x914e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xaca);
        EXPECT(gbc.pc(), 0x914f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x914e), 0x55);
        // 55 0237
        gbc.setState(0x526e, 0xf639, 0x1d60, 0xb837, 0xae8d, 0xb551, 0x1, 0x1);
        gbc.writeMem(0x526e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf639);
        EXPECT(gbc.pc(), 0x526f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0238
        gbc.setState(0x6bd7, 0x36bd, 0xc930, 0x9beb, 0x4b5b, 0x48d3, 0x1, 0x1);
        gbc.writeMem(0x6bd7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x36bd);
        EXPECT(gbc.pc(), 0x6bd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 023A
        gbc.setState(0xb38a, 0x7a43, 0xc980, 0x3c39, 0x936c, 0x5ab8, 0x1, 0x1);
        gbc.writeMem(0xb38a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x7a43);
        EXPECT(gbc.pc(), 0xb38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38a), 0x55);
        // 55 023B
        gbc.setState(0x1490, 0x5f48, 0xb70, 0xdb4b, 0xeb16, 0x3d46, 0x1, 0x0);
        gbc.writeMem(0x1490, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x5f48);
        EXPECT(gbc.pc(), 0x1491);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 023C
        gbc.setState(0xe3bf, 0xc256, 0x66f0, 0x3738, 0x29d4, 0x42de, 0x0, 0x0);
        gbc.writeMem(0xe3bf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc256);
        EXPECT(gbc.pc(), 0xe3c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3bf), 0x55);
        // 55 023D
        gbc.setState(0xbe99, 0x7305, 0xf090, 0xb498, 0xfe5f, 0x576e, 0x1, 0x0);
        gbc.writeMem(0xbe99, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x7305);
        EXPECT(gbc.pc(), 0xbe9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe99), 0x55);
        // 55 023E
        gbc.setState(0x8b25, 0x1c03, 0xb640, 0xcff7, 0x2481, 0xb06, 0x1, 0x1);
        gbc.writeMem(0x8b25, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1c03);
        EXPECT(gbc.pc(), 0x8b26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b25), 0x55);
        // 55 023F
        gbc.setState(0xce38, 0xe8e9, 0x7970, 0x892c, 0x8372, 0x58ce, 0x0, 0x0);
        gbc.writeMem(0xce38, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe8e9);
        EXPECT(gbc.pc(), 0xce39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce38), 0x55);
        // 55 0240
        gbc.setState(0x549e, 0x96a9, 0x2500, 0x12ac, 0xdf2e, 0xd2ea, 0x1, 0x1);
        gbc.writeMem(0x549e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x96a9);
        EXPECT(gbc.pc(), 0x549f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0241
        gbc.setState(0x8286, 0x93ef, 0x5220, 0x5da5, 0x5acd, 0x79e3, 0x0, 0x0);
        gbc.writeMem(0x8286, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x93ef);
        EXPECT(gbc.pc(), 0x8287);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8286), 0x55);
        // 55 0243
        gbc.setState(0x7ae2, 0x498, 0xfc60, 0xbf0d, 0x986, 0x8172, 0x1, 0x0);
        gbc.writeMem(0x7ae2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x498);
        EXPECT(gbc.pc(), 0x7ae3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0245
        gbc.setState(0x34f6, 0x6d21, 0xf940, 0x5e7f, 0xe12c, 0x8d6a, 0x1, 0x1);
        gbc.writeMem(0x34f6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x6d21);
        EXPECT(gbc.pc(), 0x34f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0246
        gbc.setState(0x7726, 0x21d9, 0xdc20, 0x3085, 0x68b3, 0x10f1, 0x0, 0x0);
        gbc.writeMem(0x7726, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x21d9);
        EXPECT(gbc.pc(), 0x7727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0247
        gbc.setState(0x6b95, 0x8294, 0xe5a0, 0xfc9a, 0x46d1, 0x225c, 0x1, 0x1);
        gbc.writeMem(0x6b95, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x8294);
        EXPECT(gbc.pc(), 0x6b96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0248
        gbc.setState(0x8bcf, 0x72b, 0xa310, 0x41bb, 0x70ae, 0x7ac3, 0x1, 0x0);
        gbc.writeMem(0x8bcf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x72b);
        EXPECT(gbc.pc(), 0x8bd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bcf), 0x55);
        // 55 0249
        gbc.setState(0x643a, 0xf0eb, 0x59c0, 0x9808, 0xde8e, 0xe998, 0x0, 0x1);
        gbc.writeMem(0x643a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xf0eb);
        EXPECT(gbc.pc(), 0x643b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 024A
        gbc.setState(0xc094, 0x846, 0x3a90, 0xbb74, 0xa25c, 0x9bac, 0x1, 0x0);
        gbc.writeMem(0xc094, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x846);
        EXPECT(gbc.pc(), 0xc095);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc094), 0x55);
        // 55 024B
        gbc.setState(0x4127, 0xf689, 0xe10, 0x1729, 0x1a58, 0xf3cb, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xf689);
        EXPECT(gbc.pc(), 0x4128);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 024C
        gbc.setState(0x124d, 0x6a6c, 0xe680, 0x7a7f, 0x6be6, 0x14e8, 0x1, 0x1);
        gbc.writeMem(0x124d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6a6c);
        EXPECT(gbc.pc(), 0x124e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 024D
        gbc.setState(0xbfe4, 0x8778, 0x22a0, 0x9876, 0x6b4f, 0x89e6, 0x1, 0x1);
        gbc.writeMem(0xbfe4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x8778);
        EXPECT(gbc.pc(), 0xbfe5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfe4), 0x55);
        // 55 024E
        gbc.setState(0xca92, 0x2a0c, 0x810, 0x6e46, 0x2ef3, 0x6d52, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2a0c);
        EXPECT(gbc.pc(), 0xca93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca92), 0x55);
        // 55 0250
        gbc.setState(0xc96c, 0xb4e4, 0x1e10, 0xb6d9, 0x4274, 0x3cba, 0x0, 0x1);
        gbc.writeMem(0xc96c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb4e4);
        EXPECT(gbc.pc(), 0xc96d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc96c), 0x55);
        // 55 0251
        gbc.setState(0xc664, 0x1eb9, 0xb010, 0x93f8, 0xab1a, 0x7bb2, 0x1, 0x1);
        gbc.writeMem(0xc664, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1eb9);
        EXPECT(gbc.pc(), 0xc665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc664), 0x55);
        // 55 0252
        gbc.setState(0xdc0c, 0x8344, 0xa190, 0x9db6, 0x96b, 0xaf05, 0x0, 0x0);
        gbc.writeMem(0xdc0c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8344);
        EXPECT(gbc.pc(), 0xdc0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc0c), 0x55);
        // 55 0253
        gbc.setState(0xc308, 0x4136, 0x18e0, 0x8b8e, 0xd493, 0xeff0, 0x1, 0x0);
        gbc.writeMem(0xc308, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x4136);
        EXPECT(gbc.pc(), 0xc309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc308), 0x55);
        // 55 0254
        gbc.setState(0x3e05, 0x69ad, 0x60, 0xc7fb, 0x2847, 0x69a2, 0x1, 0x0);
        gbc.writeMem(0x3e05, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x69ad);
        EXPECT(gbc.pc(), 0x3e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0255
        gbc.setState(0x1dac, 0xcbb1, 0xd5e0, 0xa7eb, 0x75be, 0x7462, 0x0, 0x0);
        gbc.writeMem(0x1dac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xcbb1);
        EXPECT(gbc.pc(), 0x1dad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0256
        gbc.setState(0xd3e7, 0x4b22, 0xf2c0, 0xe00f, 0x3310, 0xdd6e, 0x0, 0x0);
        gbc.writeMem(0xd3e7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4b22);
        EXPECT(gbc.pc(), 0xd3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3e7), 0x55);
        // 55 0257
        gbc.setState(0x1e0c, 0xeb71, 0x5180, 0x14d, 0x88c3, 0xf7b, 0x1, 0x0);
        gbc.writeMem(0x1e0c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xeb71);
        EXPECT(gbc.pc(), 0x1e0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0258
        gbc.setState(0x849d, 0xf78f, 0x40f0, 0x946e, 0x408f, 0x1bb4, 0x0, 0x1);
        gbc.writeMem(0x849d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf78f);
        EXPECT(gbc.pc(), 0x849e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849d), 0x55);
        // 55 0259
        gbc.setState(0x7618, 0xf7fa, 0xab80, 0x4880, 0xe874, 0x431a, 0x0, 0x0);
        gbc.writeMem(0x7618, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf7fa);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 025A
        gbc.setState(0xca9c, 0x5728, 0x2e50, 0xca30, 0x4fff, 0xbeac, 0x0, 0x1);
        gbc.writeMem(0xca9c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5728);
        EXPECT(gbc.pc(), 0xca9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9c), 0x55);
        // 55 025B
        gbc.setState(0xa17f, 0xb737, 0xc090, 0xcff, 0x3310, 0x288e, 0x0, 0x0);
        gbc.writeMem(0xa17f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb737);
        EXPECT(gbc.pc(), 0xa180);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa17f), 0x55);
        // 55 025C
        gbc.setState(0x635f, 0x6d43, 0xd3e0, 0x8162, 0xf577, 0x5467, 0x1, 0x1);
        gbc.writeMem(0x635f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x6d43);
        EXPECT(gbc.pc(), 0x6360);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 025D
        gbc.setState(0x7396, 0x210b, 0x7880, 0xb1c7, 0x91a, 0x645b, 0x0, 0x1);
        gbc.writeMem(0x7396, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x210b);
        EXPECT(gbc.pc(), 0x7397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 025E
        gbc.setState(0x129a, 0x1397, 0x6b20, 0xd231, 0xc85d, 0x9ae4, 0x1, 0x1);
        gbc.writeMem(0x129a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1397);
        EXPECT(gbc.pc(), 0x129b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 025F
        gbc.setState(0xab1, 0xc107, 0x9c40, 0x7b56, 0x6bf9, 0x6760, 0x1, 0x1);
        gbc.writeMem(0xab1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xc107);
        EXPECT(gbc.pc(), 0xab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0260
        gbc.setState(0x9500, 0x51b3, 0x5c0, 0xb6c3, 0x9ee4, 0x74cd, 0x1, 0x0);
        gbc.writeMem(0x9500, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x51b3);
        EXPECT(gbc.pc(), 0x9501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9500), 0x55);
        // 55 0262
        gbc.setState(0xc581, 0x840a, 0x1530, 0x6d59, 0xff7e, 0x7620, 0x1, 0x0);
        gbc.writeMem(0xc581, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x840a);
        EXPECT(gbc.pc(), 0xc582);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc581), 0x55);
        // 55 0263
        gbc.setState(0xa9cc, 0xc1df, 0x1050, 0x2542, 0x56a7, 0xd2a0, 0x0, 0x0);
        gbc.writeMem(0xa9cc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc1df);
        EXPECT(gbc.pc(), 0xa9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9cc), 0x55);
        // 55 0264
        gbc.setState(0x58af, 0xa161, 0x2440, 0xfb98, 0xc06c, 0xb48f, 0x0, 0x1);
        gbc.writeMem(0x58af, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa161);
        EXPECT(gbc.pc(), 0x58b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0265
        gbc.setState(0x5a27, 0x6d76, 0x3cf0, 0xc8aa, 0x7234, 0x1ac8, 0x0, 0x0);
        gbc.writeMem(0x5a27, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x6d76);
        EXPECT(gbc.pc(), 0x5a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0266
        gbc.setState(0x55b2, 0x5289, 0xf810, 0x32ad, 0x90b2, 0xe754, 0x1, 0x1);
        gbc.writeMem(0x55b2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5289);
        EXPECT(gbc.pc(), 0x55b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0267
        gbc.setState(0x5bf5, 0xd3a, 0x3d30, 0xdbf0, 0x8b52, 0xbcbc, 0x1, 0x1);
        gbc.writeMem(0x5bf5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd3a);
        EXPECT(gbc.pc(), 0x5bf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0268
        gbc.setState(0xaa77, 0x58ca, 0xc420, 0x4bba, 0x23ea, 0x39b, 0x1, 0x0);
        gbc.writeMem(0xaa77, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x58ca);
        EXPECT(gbc.pc(), 0xaa78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa77), 0x55);
        // 55 0269
        gbc.setState(0x9bd0, 0xd864, 0xb6f0, 0x5fce, 0xad18, 0x22c6, 0x0, 0x0);
        gbc.writeMem(0x9bd0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd864);
        EXPECT(gbc.pc(), 0x9bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bd0), 0x55);
        // 55 026A
        gbc.setState(0x129d, 0xa44d, 0x5fc0, 0x29f2, 0x8eb3, 0xf35c, 0x0, 0x1);
        gbc.writeMem(0x129d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa44d);
        EXPECT(gbc.pc(), 0x129e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 026B
        gbc.setState(0xda95, 0xaa70, 0x6eb0, 0x82ab, 0xdef2, 0xe557, 0x0, 0x0);
        gbc.writeMem(0xda95, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xaa70);
        EXPECT(gbc.pc(), 0xda96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda95), 0x55);
        // 55 026C
        gbc.setState(0xaae, 0x9eaa, 0x3dd0, 0xf3db, 0x6dcd, 0x82a5, 0x1, 0x1);
        gbc.writeMem(0xaae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x9eaa);
        EXPECT(gbc.pc(), 0xaaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 026E
        gbc.setState(0xa543, 0x96bd, 0x2100, 0x65c6, 0x71f1, 0xe690, 0x0, 0x1);
        gbc.writeMem(0xa543, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x96bd);
        EXPECT(gbc.pc(), 0xa544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa543), 0x55);
        // 55 026F
        gbc.setState(0xe7f, 0x9898, 0xb570, 0x68f3, 0x5bc9, 0xb0c5, 0x1, 0x1);
        gbc.writeMem(0xe7f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9898);
        EXPECT(gbc.pc(), 0xe80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0270
        gbc.setState(0x868, 0xd28a, 0x9c50, 0xdcc6, 0x870d, 0x866e, 0x0, 0x0);
        gbc.writeMem(0x868, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd28a);
        EXPECT(gbc.pc(), 0x869);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0271
        gbc.setState(0x2520, 0x784, 0x790, 0x4fdc, 0xcf71, 0x66c4, 0x0, 0x0);
        gbc.writeMem(0x2520, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x784);
        EXPECT(gbc.pc(), 0x2521);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0272
        gbc.setState(0xe20c, 0xfa61, 0x8340, 0x7b9a, 0x927e, 0x581, 0x0, 0x1);
        gbc.writeMem(0xe20c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfa61);
        EXPECT(gbc.pc(), 0xe20d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe20c), 0x55);
        // 55 0273
        gbc.setState(0xd242, 0xfd61, 0xf450, 0x66c3, 0x585f, 0x7a42, 0x1, 0x1);
        gbc.writeMem(0xd242, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xfd61);
        EXPECT(gbc.pc(), 0xd243);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd242), 0x55);
        // 55 0274
        gbc.setState(0xb7b7, 0x1565, 0x5100, 0x992e, 0x4a39, 0xbef, 0x0, 0x1);
        gbc.writeMem(0xb7b7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x1565);
        EXPECT(gbc.pc(), 0xb7b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b7), 0x55);
        // 55 0275
        gbc.setState(0xda76, 0x2ec4, 0x83c0, 0xeb74, 0x1ba0, 0x6ace, 0x0, 0x0);
        gbc.writeMem(0xda76, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2ec4);
        EXPECT(gbc.pc(), 0xda77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda76), 0x55);
        // 55 0276
        gbc.setState(0xe55d, 0xb0f, 0x5200, 0x187d, 0xa0ac, 0x38bb, 0x1, 0x1);
        gbc.writeMem(0xe55d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb0f);
        EXPECT(gbc.pc(), 0xe55e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe55d), 0x55);
        // 55 0277
        gbc.setState(0xa44e, 0x77f5, 0x10b0, 0x1d48, 0xef82, 0x7201, 0x1, 0x1);
        gbc.writeMem(0xa44e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x77f5);
        EXPECT(gbc.pc(), 0xa44f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa44e), 0x55);
        // 55 0278
        gbc.setState(0x3d87, 0xf134, 0xd0d0, 0xc45a, 0x773b, 0x6520, 0x1, 0x0);
        gbc.writeMem(0x3d87, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf134);
        EXPECT(gbc.pc(), 0x3d88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0279
        gbc.setState(0x58ee, 0x7fe2, 0xdb70, 0xc7f1, 0xcce8, 0xb15c, 0x1, 0x1);
        gbc.writeMem(0x58ee, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7fe2);
        EXPECT(gbc.pc(), 0x58ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 027A
        gbc.setState(0x3606, 0xb545, 0x3170, 0x1d72, 0x7f07, 0xc212, 0x1, 0x0);
        gbc.writeMem(0x3606, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb545);
        EXPECT(gbc.pc(), 0x3607);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 027B
        gbc.setState(0x7e58, 0x740a, 0x7660, 0x8ad, 0x1110, 0xe7cb, 0x1, 0x0);
        gbc.writeMem(0x7e58, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x740a);
        EXPECT(gbc.pc(), 0x7e59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 027C
        gbc.setState(0x3766, 0x974c, 0xb660, 0x4622, 0x2757, 0xd1be, 0x1, 0x1);
        gbc.writeMem(0x3766, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x974c);
        EXPECT(gbc.pc(), 0x3767);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 027D
        gbc.setState(0xd2dc, 0x3e24, 0x8d00, 0xb9fb, 0x36f2, 0xd603, 0x0, 0x1);
        gbc.writeMem(0xd2dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3e24);
        EXPECT(gbc.pc(), 0xd2dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2dc), 0x55);
        // 55 0280
        gbc.setState(0x4138, 0xdd3b, 0xec80, 0xea84, 0x8656, 0x2a23, 0x0, 0x0);
        gbc.writeMem(0x4138, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xdd3b);
        EXPECT(gbc.pc(), 0x4139);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0281
        gbc.setState(0xb551, 0x655c, 0x2ae0, 0xdb89, 0xc711, 0x4efd, 0x0, 0x1);
        gbc.writeMem(0xb551, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x655c);
        EXPECT(gbc.pc(), 0xb552);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb551), 0x55);
        // 55 0282
        gbc.setState(0x5c63, 0x3483, 0x8640, 0xc91e, 0xed4b, 0x2492, 0x0, 0x0);
        gbc.writeMem(0x5c63, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3483);
        EXPECT(gbc.pc(), 0x5c64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0283
        gbc.setState(0x181c, 0xdd3f, 0x5140, 0xef74, 0x2c6c, 0x1dce, 0x1, 0x0);
        gbc.writeMem(0x181c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xdd3f);
        EXPECT(gbc.pc(), 0x181d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0284
        gbc.setState(0x1af1, 0x7334, 0xa5a0, 0x5800, 0xfcbd, 0xad5d, 0x1, 0x0);
        gbc.writeMem(0x1af1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x7334);
        EXPECT(gbc.pc(), 0x1af2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0285
        gbc.setState(0x8804, 0x726c, 0x3ab0, 0x3e59, 0xf8b6, 0xcfa1, 0x0, 0x0);
        gbc.writeMem(0x8804, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x726c);
        EXPECT(gbc.pc(), 0x8805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8804), 0x55);
        // 55 0286
        gbc.setState(0x9ce4, 0xe7d7, 0x8a70, 0x5cf, 0xb29c, 0x8bfe, 0x1, 0x0);
        gbc.writeMem(0x9ce4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe7d7);
        EXPECT(gbc.pc(), 0x9ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce4), 0x55);
        // 55 0287
        gbc.setState(0x8d32, 0x92f0, 0xca70, 0xca31, 0xc803, 0xc9d4, 0x0, 0x0);
        gbc.writeMem(0x8d32, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x92f0);
        EXPECT(gbc.pc(), 0x8d33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d32), 0x55);
        // 55 0289
        gbc.setState(0x9ce8, 0x338a, 0xb5b0, 0x761, 0x14d2, 0x8e2f, 0x0, 0x0);
        gbc.writeMem(0x9ce8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x338a);
        EXPECT(gbc.pc(), 0x9ce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce8), 0x55);
        // 55 028A
        gbc.setState(0x6f8d, 0xed9c, 0xcb70, 0x2809, 0x3353, 0x629, 0x1, 0x1);
        gbc.writeMem(0x6f8d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xed9c);
        EXPECT(gbc.pc(), 0x6f8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 028B
        gbc.setState(0x934f, 0x7f9d, 0xa050, 0xb193, 0x25ea, 0xe2ad, 0x0, 0x1);
        gbc.writeMem(0x934f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7f9d);
        EXPECT(gbc.pc(), 0x9350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x934f), 0x55);
        // 55 028C
        gbc.setState(0xad, 0x76cf, 0x5220, 0x3acf, 0x3a72, 0x7fab, 0x1, 0x1);
        gbc.writeMem(0xad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x76cf);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 028D
        gbc.setState(0xc8bd, 0x381, 0xd4b0, 0xd401, 0x5d14, 0xa054, 0x0, 0x1);
        gbc.writeMem(0xc8bd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x381);
        EXPECT(gbc.pc(), 0xc8be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8bd), 0x55);
        // 55 028E
        gbc.setState(0x7c03, 0xce0f, 0xfd50, 0xb653, 0x5541, 0xab28, 0x1, 0x0);
        gbc.writeMem(0x7c03, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xce0f);
        EXPECT(gbc.pc(), 0x7c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 028F
        gbc.setState(0x62ce, 0x81f0, 0xd890, 0x136d, 0x684d, 0x8ea1, 0x1, 0x1);
        gbc.writeMem(0x62ce, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x81f0);
        EXPECT(gbc.pc(), 0x62cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0290
        gbc.setState(0xdce2, 0x6b0f, 0xa30, 0xea02, 0x2021, 0xe044, 0x1, 0x1);
        gbc.writeMem(0xdce2, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x6b0f);
        EXPECT(gbc.pc(), 0xdce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdce2), 0x55);
        // 55 0291
        gbc.setState(0x9901, 0x162a, 0x8580, 0x3627, 0xc530, 0xbaf9, 0x1, 0x0);
        gbc.writeMem(0x9901, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x162a);
        EXPECT(gbc.pc(), 0x9902);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9901), 0x55);
        // 55 0292
        gbc.setState(0xcc4a, 0xf643, 0x2880, 0xf6e6, 0x34e6, 0x4005, 0x1, 0x0);
        gbc.writeMem(0xcc4a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xf643);
        EXPECT(gbc.pc(), 0xcc4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4a), 0x55);
        // 55 0293
        gbc.setState(0x28b3, 0xa0bd, 0x3380, 0x8475, 0x31cc, 0x1e86, 0x0, 0x1);
        gbc.writeMem(0x28b3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa0bd);
        EXPECT(gbc.pc(), 0x28b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0294
        gbc.setState(0xad8e, 0x862b, 0xd150, 0xbee7, 0xe53f, 0x9b91, 0x1, 0x1);
        gbc.writeMem(0xad8e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x862b);
        EXPECT(gbc.pc(), 0xad8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad8e), 0x55);
        // 55 0295
        gbc.setState(0x8b60, 0x6135, 0xc3c0, 0x4189, 0xf2e4, 0x2690, 0x1, 0x0);
        gbc.writeMem(0x8b60, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x6135);
        EXPECT(gbc.pc(), 0x8b61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b60), 0x55);
        // 55 0296
        gbc.setState(0x8751, 0xce0d, 0x9380, 0x87b0, 0x9fcd, 0x3335, 0x0, 0x1);
        gbc.writeMem(0x8751, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xce0d);
        EXPECT(gbc.pc(), 0x8752);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8751), 0x55);
        // 55 0297
        gbc.setState(0x869d, 0x1ca0, 0x4d0, 0x267d, 0x3681, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0x869d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1ca0);
        EXPECT(gbc.pc(), 0x869e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x869d), 0x55);
        // 55 0298
        gbc.setState(0xb685, 0x7dd4, 0x48c0, 0x3b5, 0x1865, 0xf7c3, 0x1, 0x0);
        gbc.writeMem(0xb685, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7dd4);
        EXPECT(gbc.pc(), 0xb686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb685), 0x55);
        // 55 0299
        gbc.setState(0x9b94, 0x62d1, 0xb320, 0x866d, 0x86d7, 0x2029, 0x1, 0x1);
        gbc.writeMem(0x9b94, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x62d1);
        EXPECT(gbc.pc(), 0x9b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b94), 0x55);
        // 55 029A
        gbc.setState(0x1d58, 0xc467, 0xebf0, 0x7754, 0xeb0a, 0xe928, 0x0, 0x0);
        gbc.writeMem(0x1d58, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc467);
        EXPECT(gbc.pc(), 0x1d59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 029B
        gbc.setState(0xf5c, 0x7f91, 0xbee0, 0xd00c, 0x235f, 0x7c02, 0x1, 0x0);
        gbc.writeMem(0xf5c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7f91);
        EXPECT(gbc.pc(), 0xf5d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 029C
        gbc.setState(0x9292, 0x50d5, 0x16b0, 0x2e7, 0xc7aa, 0x5336, 0x1, 0x0);
        gbc.writeMem(0x9292, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x50d5);
        EXPECT(gbc.pc(), 0x9293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9292), 0x55);
        // 55 029E
        gbc.setState(0xbe28, 0x10ab, 0xf280, 0xa007, 0x65e1, 0x7b09, 0x0, 0x0);
        gbc.writeMem(0xbe28, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x10ab);
        EXPECT(gbc.pc(), 0xbe29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe28), 0x55);
        // 55 029F
        gbc.setState(0xb7c0, 0x3405, 0x7ad0, 0x700d, 0xc0a2, 0x7769, 0x1, 0x0);
        gbc.writeMem(0xb7c0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3405);
        EXPECT(gbc.pc(), 0xb7c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c0), 0x55);
        // 55 02A0
        gbc.setState(0x45b, 0x3812, 0xe1e0, 0xbd31, 0x998e, 0xac59, 0x1, 0x1);
        gbc.writeMem(0x45b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x3812);
        EXPECT(gbc.pc(), 0x45c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02A1
        gbc.setState(0x10ad, 0xf6d9, 0x6c10, 0xb23b, 0xf1d, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x10ad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf6d9);
        EXPECT(gbc.pc(), 0x10ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02A2
        gbc.setState(0xafd3, 0x51fa, 0x740, 0x6678, 0xa3a7, 0x9ae, 0x1, 0x1);
        gbc.writeMem(0xafd3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x51fa);
        EXPECT(gbc.pc(), 0xafd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafd3), 0x55);
        // 55 02A3
        gbc.setState(0x1b9f, 0x62e, 0x6290, 0x7289, 0x5aa2, 0x77da, 0x1, 0x0);
        gbc.writeMem(0x1b9f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x62e);
        EXPECT(gbc.pc(), 0x1ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02A4
        gbc.setState(0x85f6, 0xe869, 0x1950, 0x9414, 0xdc59, 0x362a, 0x0, 0x0);
        gbc.writeMem(0x85f6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe869);
        EXPECT(gbc.pc(), 0x85f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f6), 0x55);
        // 55 02A5
        gbc.setState(0x5c70, 0x1a48, 0xa0d0, 0xee89, 0x5b7, 0xd9ca, 0x1, 0x0);
        gbc.writeMem(0x5c70, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1a48);
        EXPECT(gbc.pc(), 0x5c71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02A6
        gbc.setState(0xb939, 0x77ec, 0xda30, 0x3931, 0xa52b, 0xd03e, 0x0, 0x1);
        gbc.writeMem(0xb939, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x77ec);
        EXPECT(gbc.pc(), 0xb93a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb939), 0x55);
        // 55 02A7
        gbc.setState(0x7bf7, 0x5f51, 0xd5c0, 0xf814, 0xf703, 0x9d5b, 0x0, 0x0);
        gbc.writeMem(0x7bf7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5f51);
        EXPECT(gbc.pc(), 0x7bf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02A8
        gbc.setState(0xeed0, 0xec15, 0x5580, 0x60a5, 0x9806, 0x8ea2, 0x1, 0x1);
        gbc.writeMem(0xeed0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xec15);
        EXPECT(gbc.pc(), 0xeed1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeed0), 0x55);
        // 55 02A9
        gbc.setState(0x5a81, 0x792e, 0x5e30, 0x6f83, 0x423, 0x33de, 0x1, 0x0);
        gbc.writeMem(0x5a81, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x792e);
        EXPECT(gbc.pc(), 0x5a82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02AA
        gbc.setState(0x3c7c, 0x5909, 0x4670, 0xc635, 0x2bf8, 0x896a, 0x0, 0x0);
        gbc.writeMem(0x3c7c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x5909);
        EXPECT(gbc.pc(), 0x3c7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02AB
        gbc.setState(0x18ed, 0x888a, 0xa790, 0x9a9e, 0x2e8, 0xfb43, 0x1, 0x1);
        gbc.writeMem(0x18ed, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x888a);
        EXPECT(gbc.pc(), 0x18ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02AC
        gbc.setState(0x508e, 0xc01a, 0xf5c0, 0xdb2e, 0xf9a, 0x34e8, 0x0, 0x0);
        gbc.writeMem(0x508e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xc01a);
        EXPECT(gbc.pc(), 0x508f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02AD
        gbc.setState(0x99f0, 0xe055, 0xdbc0, 0x4d01, 0x450a, 0x50f3, 0x1, 0x0);
        gbc.writeMem(0x99f0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xe055);
        EXPECT(gbc.pc(), 0x99f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f0), 0x55);
        // 55 02AE
        gbc.setState(0x451b, 0xecaf, 0x3a40, 0xf222, 0x39ef, 0x4a7b, 0x0, 0x0);
        gbc.writeMem(0x451b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xecaf);
        EXPECT(gbc.pc(), 0x451c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02AF
        gbc.setState(0x1b53, 0x3a1d, 0x93b0, 0x38ef, 0x8f4d, 0xa8d3, 0x1, 0x1);
        gbc.writeMem(0x1b53, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3a1d);
        EXPECT(gbc.pc(), 0x1b54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02B0
        gbc.setState(0x8308, 0x7369, 0xf6c0, 0xb861, 0xb109, 0x95cb, 0x0, 0x0);
        gbc.writeMem(0x8308, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x7369);
        EXPECT(gbc.pc(), 0x8309);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8308), 0x55);
        // 55 02B2
        gbc.setState(0x121e, 0xb175, 0xc750, 0x7f2c, 0x6286, 0xbecf, 0x0, 0x1);
        gbc.writeMem(0x121e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xb175);
        EXPECT(gbc.pc(), 0x121f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02B3
        gbc.setState(0xe5ae, 0xb8f9, 0x4360, 0x1432, 0xe809, 0xc7b0, 0x0, 0x1);
        gbc.writeMem(0xe5ae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb8f9);
        EXPECT(gbc.pc(), 0xe5af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5ae), 0x55);
        // 55 02B4
        gbc.setState(0x5a31, 0x1b44, 0xa570, 0xfb34, 0xb795, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x5a31, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1b44);
        EXPECT(gbc.pc(), 0x5a32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02B5
        gbc.setState(0x7876, 0x9d94, 0x6b0, 0xb153, 0x3c67, 0x8dbc, 0x0, 0x1);
        gbc.writeMem(0x7876, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9d94);
        EXPECT(gbc.pc(), 0x7877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02B6
        gbc.setState(0x5695, 0x5aed, 0xd3d0, 0xa7b8, 0xb4e4, 0x615, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5aed);
        EXPECT(gbc.pc(), 0x5696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02B7
        gbc.setState(0x5810, 0x6e45, 0xdf40, 0x2aff, 0x408a, 0x9bdc, 0x0, 0x1);
        gbc.writeMem(0x5810, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6e45);
        EXPECT(gbc.pc(), 0x5811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02B8
        gbc.setState(0x4b18, 0x440, 0x66f0, 0xf655, 0xbe84, 0xacdb, 0x0, 0x0);
        gbc.writeMem(0x4b18, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x440);
        EXPECT(gbc.pc(), 0x4b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02B9
        gbc.setState(0xeb92, 0xe3f3, 0xca00, 0x4d3e, 0x9268, 0x1b8c, 0x1, 0x0);
        gbc.writeMem(0xeb92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xe3f3);
        EXPECT(gbc.pc(), 0xeb93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb92), 0x55);
        // 55 02BA
        gbc.setState(0x4722, 0xbd8a, 0xe300, 0x3ea, 0x470c, 0x4687, 0x0, 0x1);
        gbc.writeMem(0x4722, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xbd8a);
        EXPECT(gbc.pc(), 0x4723);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02BB
        gbc.setState(0x520b, 0x1799, 0xc130, 0x2051, 0x114a, 0xf3f2, 0x0, 0x1);
        gbc.writeMem(0x520b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1799);
        EXPECT(gbc.pc(), 0x520c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02BC
        gbc.setState(0xba7d, 0x9487, 0x6730, 0x7ee6, 0xb0b3, 0x78e6, 0x0, 0x1);
        gbc.writeMem(0xba7d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9487);
        EXPECT(gbc.pc(), 0xba7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba7d), 0x55);
        // 55 02BD
        gbc.setState(0x7e33, 0xd4a8, 0x3f60, 0x310e, 0xd2f0, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0x7e33, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xd4a8);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02BE
        gbc.setState(0x4774, 0xc80d, 0xb730, 0xa846, 0x90bd, 0x261, 0x1, 0x0);
        gbc.writeMem(0x4774, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xc80d);
        EXPECT(gbc.pc(), 0x4775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02BF
        gbc.setState(0x917d, 0x4324, 0xb740, 0xeade, 0xbf63, 0x742d, 0x1, 0x1);
        gbc.writeMem(0x917d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4324);
        EXPECT(gbc.pc(), 0x917e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x917d), 0x55);
        // 55 02C0
        gbc.setState(0x7a55, 0x9cec, 0x1300, 0xb32d, 0x57a3, 0x8f5, 0x0, 0x0);
        gbc.writeMem(0x7a55, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9cec);
        EXPECT(gbc.pc(), 0x7a56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02C1
        gbc.setState(0x9223, 0x8998, 0x54a0, 0xf058, 0x93ac, 0x209b, 0x1, 0x1);
        gbc.writeMem(0x9223, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8998);
        EXPECT(gbc.pc(), 0x9224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9223), 0x55);
        // 55 02C2
        gbc.setState(0x5dd4, 0x8d5c, 0x8c40, 0xd050, 0xc9c4, 0x33d4, 0x0, 0x0);
        gbc.writeMem(0x5dd4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8d5c);
        EXPECT(gbc.pc(), 0x5dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02C3
        gbc.setState(0x42d9, 0xe85b, 0x57b0, 0xa352, 0x7aeb, 0xd02, 0x0, 0x0);
        gbc.writeMem(0x42d9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe85b);
        EXPECT(gbc.pc(), 0x42da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02C4
        gbc.setState(0x3624, 0xd3c5, 0x5d40, 0x4942, 0x6435, 0x5ded, 0x1, 0x0);
        gbc.writeMem(0x3624, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd3c5);
        EXPECT(gbc.pc(), 0x3625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02C5
        gbc.setState(0x24a5, 0x4fe4, 0xab40, 0xb34, 0x736b, 0x1e39, 0x0, 0x0);
        gbc.writeMem(0x24a5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x4fe4);
        EXPECT(gbc.pc(), 0x24a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02C6
        gbc.setState(0xcc4b, 0x3892, 0xdee0, 0x50b9, 0xea5e, 0xdd90, 0x0, 0x1);
        gbc.writeMem(0xcc4b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3892);
        EXPECT(gbc.pc(), 0xcc4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0x55);
        // 55 02C7
        gbc.setState(0x3706, 0x74e0, 0x1950, 0xb2b, 0x49ae, 0x58b8, 0x1, 0x0);
        gbc.writeMem(0x3706, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x74e0);
        EXPECT(gbc.pc(), 0x3707);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02C8
        gbc.setState(0x2a7a, 0xaca3, 0x91d0, 0xae00, 0xd56e, 0x7809, 0x1, 0x0);
        gbc.writeMem(0x2a7a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xaca3);
        EXPECT(gbc.pc(), 0x2a7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02CA
        gbc.setState(0x59fd, 0x80c, 0xfcf0, 0xb451, 0xca68, 0xf880, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x80c);
        EXPECT(gbc.pc(), 0x59fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02CB
        gbc.setState(0x3107, 0x223, 0x3c50, 0xa0fb, 0xa096, 0xf210, 0x0, 0x1);
        gbc.writeMem(0x3107, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x223);
        EXPECT(gbc.pc(), 0x3108);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02CC
        gbc.setState(0x570, 0x2f45, 0xb480, 0xb034, 0xbc50, 0xf0b0, 0x0, 0x0);
        gbc.writeMem(0x570, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2f45);
        EXPECT(gbc.pc(), 0x571);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02CD
        gbc.setState(0x56cf, 0xce83, 0x77d0, 0xfb9f, 0x3e7f, 0x5902, 0x1, 0x1);
        gbc.writeMem(0x56cf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xce83);
        EXPECT(gbc.pc(), 0x56d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02CF
        gbc.setState(0x6e9f, 0x239b, 0x5400, 0xd21e, 0x5ea3, 0x85b7, 0x0, 0x1);
        gbc.writeMem(0x6e9f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x239b);
        EXPECT(gbc.pc(), 0x6ea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02D1
        gbc.setState(0xe582, 0xa0d2, 0xe3f0, 0xafe6, 0x1cc5, 0x3cc, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa0d2);
        EXPECT(gbc.pc(), 0xe583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe582), 0x55);
        // 55 02D2
        gbc.setState(0x6bee, 0xe00f, 0xf810, 0xd8e6, 0xd3be, 0xcb1, 0x1, 0x1);
        gbc.writeMem(0x6bee, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe00f);
        EXPECT(gbc.pc(), 0x6bef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02D3
        gbc.setState(0xd011, 0x3bec, 0x1ee0, 0xbc81, 0xc44e, 0xd2c8, 0x1, 0x1);
        gbc.writeMem(0xd011, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3bec);
        EXPECT(gbc.pc(), 0xd012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd011), 0x55);
        // 55 02D4
        gbc.setState(0x2bc7, 0x5a30, 0x33e0, 0xddbc, 0xd0eb, 0x7a6, 0x0, 0x1);
        gbc.writeMem(0x2bc7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x5a30);
        EXPECT(gbc.pc(), 0x2bc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02D5
        gbc.setState(0x1f76, 0xbab4, 0x8400, 0xed01, 0xd227, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x1f76, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbab4);
        EXPECT(gbc.pc(), 0x1f77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02D6
        gbc.setState(0x4db5, 0x171e, 0x4410, 0xd2c9, 0x5c0c, 0xe731, 0x0, 0x1);
        gbc.writeMem(0x4db5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x171e);
        EXPECT(gbc.pc(), 0x4db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02D7
        gbc.setState(0x79cc, 0x2dd5, 0x9810, 0x7112, 0xb39b, 0xcb58, 0x1, 0x0);
        gbc.writeMem(0x79cc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x2dd5);
        EXPECT(gbc.pc(), 0x79cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02D8
        gbc.setState(0x1fb1, 0xaad2, 0x6410, 0x22cc, 0x8397, 0x22e4, 0x0, 0x0);
        gbc.writeMem(0x1fb1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xaad2);
        EXPECT(gbc.pc(), 0x1fb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02D9
        gbc.setState(0x97a7, 0xb819, 0x670, 0x6bab, 0x7fe5, 0x27cd, 0x0, 0x0);
        gbc.writeMem(0x97a7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb819);
        EXPECT(gbc.pc(), 0x97a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97a7), 0x55);
        // 55 02DA
        gbc.setState(0x8882, 0x5788, 0xa8f0, 0x53c9, 0x831e, 0x5dcd, 0x1, 0x0);
        gbc.writeMem(0x8882, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x5788);
        EXPECT(gbc.pc(), 0x8883);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8882), 0x55);
        // 55 02DB
        gbc.setState(0x9563, 0x3ac5, 0x8510, 0x90c8, 0xbf8, 0xb94d, 0x0, 0x0);
        gbc.writeMem(0x9563, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x3ac5);
        EXPECT(gbc.pc(), 0x9564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9563), 0x55);
        // 55 02DC
        gbc.setState(0x772e, 0x11f9, 0x8990, 0x1494, 0x5e37, 0x9ad, 0x1, 0x1);
        gbc.writeMem(0x772e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x11f9);
        EXPECT(gbc.pc(), 0x772f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02DD
        gbc.setState(0x5b46, 0xc6d4, 0x4d90, 0x16ea, 0x90d, 0x2283, 0x1, 0x0);
        gbc.writeMem(0x5b46, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc6d4);
        EXPECT(gbc.pc(), 0x5b47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02DE
        gbc.setState(0xb26c, 0x3636, 0xdde0, 0xcf37, 0x8e65, 0xa6d1, 0x1, 0x0);
        gbc.writeMem(0xb26c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3636);
        EXPECT(gbc.pc(), 0xb26d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb26c), 0x55);
        // 55 02DF
        gbc.setState(0x518b, 0x4d02, 0x6d40, 0x6e63, 0x73f4, 0x79ce, 0x1, 0x0);
        gbc.writeMem(0x518b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4d02);
        EXPECT(gbc.pc(), 0x518c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02E0
        gbc.setState(0x85e9, 0xd05b, 0xf80, 0x647d, 0xaa41, 0x201e, 0x0, 0x1);
        gbc.writeMem(0x85e9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd05b);
        EXPECT(gbc.pc(), 0x85ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85e9), 0x55);
        // 55 02E1
        gbc.setState(0x849d, 0x4f2b, 0x8780, 0x9a80, 0xabed, 0xb5d, 0x1, 0x1);
        gbc.writeMem(0x849d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4f2b);
        EXPECT(gbc.pc(), 0x849e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x849d), 0x55);
        // 55 02E2
        gbc.setState(0x5239, 0xc97d, 0x7a0, 0xc9f5, 0x5eb0, 0x132c, 0x1, 0x0);
        gbc.writeMem(0x5239, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc97d);
        EXPECT(gbc.pc(), 0x523a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02E3
        gbc.setState(0x3e92, 0x8df2, 0x8ca0, 0xdc6, 0xc6d8, 0x3884, 0x1, 0x0);
        gbc.writeMem(0x3e92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8df2);
        EXPECT(gbc.pc(), 0x3e93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02E4
        gbc.setState(0x308b, 0x2c37, 0x3300, 0x7a3b, 0x981, 0xe9ce, 0x0, 0x0);
        gbc.writeMem(0x308b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2c37);
        EXPECT(gbc.pc(), 0x308c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02E5
        gbc.setState(0x985, 0xa6ac, 0xa830, 0xc78c, 0xeccc, 0x9b3c, 0x1, 0x0);
        gbc.writeMem(0x985, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xa6ac);
        EXPECT(gbc.pc(), 0x986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02E7
        gbc.setState(0x156d, 0x271d, 0xf70, 0x4ae3, 0x5826, 0x3c20, 0x0, 0x0);
        gbc.writeMem(0x156d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x271d);
        EXPECT(gbc.pc(), 0x156e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02E8
        gbc.setState(0xb68d, 0xa853, 0x8ac0, 0x3161, 0x2408, 0xcb1f, 0x1, 0x0);
        gbc.writeMem(0xb68d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa853);
        EXPECT(gbc.pc(), 0xb68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68d), 0x55);
        // 55 02E9
        gbc.setState(0x3958, 0x3fc9, 0x55c0, 0xc4e5, 0x2b39, 0xdac5, 0x1, 0x1);
        gbc.writeMem(0x3958, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x3fc9);
        EXPECT(gbc.pc(), 0x3959);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 02EA
        gbc.setState(0x2b68, 0x58e7, 0x60, 0xc4a, 0xf1cf, 0x3995, 0x1, 0x0);
        gbc.writeMem(0x2b68, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x58e7);
        EXPECT(gbc.pc(), 0x2b69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02EB
        gbc.setState(0xc0b4, 0x2afb, 0xdd50, 0xd12c, 0x141a, 0x539, 0x1, 0x0);
        gbc.writeMem(0xc0b4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x2afb);
        EXPECT(gbc.pc(), 0xc0b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b4), 0x55);
        // 55 02EC
        gbc.setState(0xc36a, 0xc072, 0x6660, 0x7ba9, 0x4f90, 0x26c1, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xc072);
        EXPECT(gbc.pc(), 0xc36b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36a), 0x55);
        // 55 02ED
        gbc.setState(0xdb36, 0x9508, 0xfa30, 0xf793, 0x3fd9, 0xab8c, 0x1, 0x1);
        gbc.writeMem(0xdb36, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9508);
        EXPECT(gbc.pc(), 0xdb37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb36), 0x55);
        // 55 02EE
        gbc.setState(0x76fa, 0x82b0, 0x8a60, 0x373b, 0x9fa6, 0x4fa2, 0x1, 0x1);
        gbc.writeMem(0x76fa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x82b0);
        EXPECT(gbc.pc(), 0x76fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02EF
        gbc.setState(0x77bd, 0xd5a1, 0x77d0, 0x7919, 0x1280, 0xf12a, 0x1, 0x1);
        gbc.writeMem(0x77bd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd5a1);
        EXPECT(gbc.pc(), 0x77be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02F0
        gbc.setState(0xeffc, 0x3897, 0x2210, 0xe7c1, 0xca0d, 0x3c9f, 0x1, 0x1);
        gbc.writeMem(0xeffc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3897);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffc), 0x55);
        // 55 02F1
        gbc.setState(0x4608, 0x8b12, 0x230, 0x6db7, 0xf604, 0x2873, 0x0, 0x0);
        gbc.writeMem(0x4608, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x8b12);
        EXPECT(gbc.pc(), 0x4609);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 02F2
        gbc.setState(0x5a2e, 0xb003, 0xac60, 0xfd0, 0xdd37, 0x8993, 0x1, 0x1);
        gbc.writeMem(0x5a2e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb003);
        EXPECT(gbc.pc(), 0x5a2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02F3
        gbc.setState(0xc488, 0xdee8, 0x2ef0, 0x45c4, 0xbc86, 0x4aa3, 0x1, 0x0);
        gbc.writeMem(0xc488, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xdee8);
        EXPECT(gbc.pc(), 0xc489);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc488), 0x55);
        // 55 02F4
        gbc.setState(0xd799, 0xdc77, 0xd6a0, 0x5e81, 0x8c15, 0x668, 0x0, 0x0);
        gbc.writeMem(0xd799, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xdc77);
        EXPECT(gbc.pc(), 0xd79a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd799), 0x55);
        // 55 02F5
        gbc.setState(0x5a6a, 0x7801, 0x3110, 0xc91e, 0x3756, 0x1748, 0x0, 0x0);
        gbc.writeMem(0x5a6a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x7801);
        EXPECT(gbc.pc(), 0x5a6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 02F7
        gbc.setState(0xeff7, 0x8ea9, 0x2040, 0x45d2, 0xbb2a, 0x5187, 0x1, 0x0);
        gbc.writeMem(0xeff7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x8ea9);
        EXPECT(gbc.pc(), 0xeff8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeff7), 0x55);
        // 55 02F8
        gbc.setState(0xa0e7, 0xd01e, 0x6de0, 0x9f71, 0xef6c, 0x1739, 0x0, 0x1);
        gbc.writeMem(0xa0e7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd01e);
        EXPECT(gbc.pc(), 0xa0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0e7), 0x55);
        // 55 02F9
        gbc.setState(0x4e6e, 0x7846, 0xcba0, 0xbcda, 0x40f9, 0xb866, 0x1, 0x1);
        gbc.writeMem(0x4e6e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7846);
        EXPECT(gbc.pc(), 0x4e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02FA
        gbc.setState(0xcce8, 0xe1c0, 0xe280, 0x26e2, 0x8336, 0xd522, 0x0, 0x0);
        gbc.writeMem(0xcce8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe1c0);
        EXPECT(gbc.pc(), 0xcce9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcce8), 0x55);
        // 55 02FC
        gbc.setState(0x9e67, 0x6a59, 0xa4f0, 0xec19, 0xe549, 0x8f1b, 0x0, 0x1);
        gbc.writeMem(0x9e67, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6a59);
        EXPECT(gbc.pc(), 0x9e68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e67), 0x55);
        // 55 02FD
        gbc.setState(0x1ee0, 0xe431, 0x6d60, 0xf800, 0xa9f7, 0x5a52, 0x0, 0x0);
        gbc.writeMem(0x1ee0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xe431);
        EXPECT(gbc.pc(), 0x1ee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 02FF
        gbc.setState(0x408e, 0xed2f, 0xcce0, 0xadb, 0x89b3, 0xa118, 0x1, 0x1);
        gbc.writeMem(0x408e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xed2f);
        EXPECT(gbc.pc(), 0x408f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0300
        gbc.setState(0x21ca, 0x5bb4, 0x8140, 0x3e42, 0x87ad, 0xd90, 0x1, 0x1);
        gbc.writeMem(0x21ca, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x5bb4);
        EXPECT(gbc.pc(), 0x21cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0301
        gbc.setState(0xec82, 0xb5fd, 0x4210, 0x6181, 0xed1e, 0x9bb0, 0x1, 0x0);
        gbc.writeMem(0xec82, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb5fd);
        EXPECT(gbc.pc(), 0xec83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec82), 0x55);
        // 55 0302
        gbc.setState(0xa7bc, 0x7dc7, 0xed20, 0x6339, 0xb5a4, 0x486, 0x1, 0x1);
        gbc.writeMem(0xa7bc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x7dc7);
        EXPECT(gbc.pc(), 0xa7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7bc), 0x55);
        // 55 0304
        gbc.setState(0xb03a, 0xccde, 0x8200, 0x43a1, 0xbdfb, 0xdea3, 0x0, 0x1);
        gbc.writeMem(0xb03a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xccde);
        EXPECT(gbc.pc(), 0xb03b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb03a), 0x55);
        // 55 0305
        gbc.setState(0x9287, 0x61e4, 0xd6d0, 0xfb82, 0xc9b9, 0xc42, 0x0, 0x0);
        gbc.writeMem(0x9287, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x61e4);
        EXPECT(gbc.pc(), 0x9288);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9287), 0x55);
        // 55 0306
        gbc.setState(0x47ae, 0x7a0, 0xcdb0, 0x24ca, 0x3c11, 0xbf39, 0x0, 0x1);
        gbc.writeMem(0x47ae, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7a0);
        EXPECT(gbc.pc(), 0x47af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0307
        gbc.setState(0x3b34, 0x859e, 0x6dc0, 0x1ae6, 0xe807, 0xd568, 0x0, 0x1);
        gbc.writeMem(0x3b34, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x859e);
        EXPECT(gbc.pc(), 0x3b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0308
        gbc.setState(0x876a, 0x476f, 0xe60, 0xf8e2, 0x5ab7, 0xabc7, 0x1, 0x0);
        gbc.writeMem(0x876a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x476f);
        EXPECT(gbc.pc(), 0x876b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x876a), 0x55);
        // 55 0309
        gbc.setState(0x14c5, 0xad7d, 0x7cf0, 0x1714, 0x1f03, 0x170d, 0x1, 0x1);
        gbc.writeMem(0x14c5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xad7d);
        EXPECT(gbc.pc(), 0x14c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 030A
        gbc.setState(0x136b, 0x850, 0xad50, 0x5eaf, 0x71ed, 0x17ba, 0x0, 0x1);
        gbc.writeMem(0x136b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x850);
        EXPECT(gbc.pc(), 0x136c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 030B
        gbc.setState(0xab1f, 0x1c0a, 0x6020, 0x3e6e, 0x940e, 0x3c8, 0x0, 0x1);
        gbc.writeMem(0xab1f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x1c0a);
        EXPECT(gbc.pc(), 0xab20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1f), 0x55);
        // 55 030C
        gbc.setState(0x8860, 0x97d7, 0x2200, 0x652b, 0xea70, 0x848e, 0x0, 0x1);
        gbc.writeMem(0x8860, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x97d7);
        EXPECT(gbc.pc(), 0x8861);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8860), 0x55);
        // 55 030D
        gbc.setState(0x8652, 0x2d48, 0xa4b0, 0x76e, 0xfa5c, 0xf659, 0x1, 0x0);
        gbc.writeMem(0x8652, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x2d48);
        EXPECT(gbc.pc(), 0x8653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8652), 0x55);
        // 55 030E
        gbc.setState(0x870d, 0xb693, 0x36e0, 0x9af0, 0x3245, 0xa35a, 0x1, 0x1);
        gbc.writeMem(0x870d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xb693);
        EXPECT(gbc.pc(), 0x870e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870d), 0x55);
        // 55 030F
        gbc.setState(0x321b, 0x2013, 0xd270, 0x1ac, 0xba78, 0x19a8, 0x0, 0x1);
        gbc.writeMem(0x321b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x2013);
        EXPECT(gbc.pc(), 0x321c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0310
        gbc.setState(0x2607, 0xb8dd, 0x49c0, 0xd555, 0xff41, 0xdbfe, 0x1, 0x0);
        gbc.writeMem(0x2607, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb8dd);
        EXPECT(gbc.pc(), 0x2608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0311
        gbc.setState(0x48fc, 0xbe6d, 0x4d0, 0xcdae, 0x42cf, 0xf80b, 0x1, 0x0);
        gbc.writeMem(0x48fc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbe6d);
        EXPECT(gbc.pc(), 0x48fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0312
        gbc.setState(0x1817, 0x5f55, 0x3450, 0xdb68, 0x40c2, 0xd053, 0x0, 0x0);
        gbc.writeMem(0x1817, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5f55);
        EXPECT(gbc.pc(), 0x1818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0313
        gbc.setState(0xb1fc, 0x4074, 0x5ab0, 0xea80, 0xfa0e, 0xd828, 0x1, 0x1);
        gbc.writeMem(0xb1fc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4074);
        EXPECT(gbc.pc(), 0xb1fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1fc), 0x55);
        // 55 0314
        gbc.setState(0x753a, 0x1b2e, 0x8cc0, 0x421f, 0xf2d5, 0x2d50, 0x0, 0x1);
        gbc.writeMem(0x753a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1b2e);
        EXPECT(gbc.pc(), 0x753b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0315
        gbc.setState(0x2ac, 0xdc4b, 0xb9a0, 0xcbff, 0x9fd6, 0x9f58, 0x1, 0x1);
        gbc.writeMem(0x2ac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xdc4b);
        EXPECT(gbc.pc(), 0x2ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0316
        gbc.setState(0x7844, 0x162a, 0x6700, 0xb0ac, 0x15b5, 0xdb32, 0x1, 0x0);
        gbc.writeMem(0x7844, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x162a);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0317
        gbc.setState(0x3d68, 0xda64, 0xda70, 0x3892, 0x557c, 0xa6de, 0x1, 0x1);
        gbc.writeMem(0x3d68, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xda64);
        EXPECT(gbc.pc(), 0x3d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0318
        gbc.setState(0x2a50, 0x3659, 0x7280, 0xaaef, 0x5869, 0x9b25, 0x1, 0x1);
        gbc.writeMem(0x2a50, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x3659);
        EXPECT(gbc.pc(), 0x2a51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0319
        gbc.setState(0x8e6, 0x162b, 0xe3d0, 0x100b, 0x1969, 0x75e4, 0x0, 0x1);
        gbc.writeMem(0x8e6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x162b);
        EXPECT(gbc.pc(), 0x8e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 031A
        gbc.setState(0xbe77, 0x8cb, 0x69b0, 0x9eb6, 0xada0, 0xa523, 0x1, 0x0);
        gbc.writeMem(0xbe77, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x8cb);
        EXPECT(gbc.pc(), 0xbe78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe77), 0x55);
        // 55 031B
        gbc.setState(0x8a82, 0xa95e, 0x2e80, 0x51c9, 0x17b8, 0x2155, 0x0, 0x1);
        gbc.writeMem(0x8a82, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa95e);
        EXPECT(gbc.pc(), 0x8a83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a82), 0x55);
        // 55 031C
        gbc.setState(0xc74d, 0x29f1, 0x4430, 0x848, 0xbf64, 0x4e2e, 0x0, 0x0);
        gbc.writeMem(0xc74d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x29f1);
        EXPECT(gbc.pc(), 0xc74e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74d), 0x55);
        // 55 031E
        gbc.setState(0x64e0, 0x6e96, 0xd820, 0xd75d, 0x6d9b, 0xe462, 0x0, 0x1);
        gbc.writeMem(0x64e0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e96);
        EXPECT(gbc.pc(), 0x64e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 031F
        gbc.setState(0x3f8a, 0xc88a, 0x55b0, 0x1e80, 0xe088, 0x7c8, 0x0, 0x1);
        gbc.writeMem(0x3f8a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xc88a);
        EXPECT(gbc.pc(), 0x3f8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0321
        gbc.setState(0xe2da, 0xaaab, 0xb770, 0x7d6b, 0xf623, 0x1614, 0x0, 0x1);
        gbc.writeMem(0xe2da, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xaaab);
        EXPECT(gbc.pc(), 0xe2db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2da), 0x55);
        // 55 0322
        gbc.setState(0x265e, 0xdfa, 0xceb0, 0x87e1, 0x11aa, 0x88e, 0x0, 0x1);
        gbc.writeMem(0x265e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdfa);
        EXPECT(gbc.pc(), 0x265f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0323
        gbc.setState(0x19e6, 0x3c63, 0xe830, 0xf8d, 0xf49f, 0xe030, 0x1, 0x1);
        gbc.writeMem(0x19e6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3c63);
        EXPECT(gbc.pc(), 0x19e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0324
        gbc.setState(0xb450, 0x9219, 0x1ec0, 0xd2fc, 0xfe30, 0x8d57, 0x0, 0x1);
        gbc.writeMem(0xb450, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x9219);
        EXPECT(gbc.pc(), 0xb451);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb450), 0x55);
        // 55 0325
        gbc.setState(0x8516, 0xb8e7, 0x440, 0x393e, 0x894a, 0x5772, 0x1, 0x0);
        gbc.writeMem(0x8516, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xb8e7);
        EXPECT(gbc.pc(), 0x8517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8516), 0x55);
        // 55 0326
        gbc.setState(0xc794, 0xd7b, 0x7620, 0x97d3, 0x5135, 0x830a, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd7b);
        EXPECT(gbc.pc(), 0xc795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc794), 0x55);
        // 55 0327
        gbc.setState(0xe914, 0x875a, 0xc0d0, 0x3d46, 0x8230, 0xf402, 0x1, 0x0);
        gbc.writeMem(0xe914, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x875a);
        EXPECT(gbc.pc(), 0xe915);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe914), 0x55);
        // 55 0329
        gbc.setState(0x8ca8, 0x2a65, 0x3370, 0xc865, 0x46a2, 0x744a, 0x1, 0x0);
        gbc.writeMem(0x8ca8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x2a65);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca8), 0x55);
        // 55 032A
        gbc.setState(0x8059, 0x261f, 0x2c40, 0x82cb, 0x312b, 0x2db, 0x0, 0x1);
        gbc.writeMem(0x8059, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x261f);
        EXPECT(gbc.pc(), 0x805a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8059), 0x55);
        // 55 032B
        gbc.setState(0xceb9, 0x13ea, 0xb70, 0x2d66, 0x2f0b, 0x6490, 0x0, 0x1);
        gbc.writeMem(0xceb9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x13ea);
        EXPECT(gbc.pc(), 0xceba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceb9), 0x55);
        // 55 032C
        gbc.setState(0x153b, 0xb335, 0xcf40, 0x2372, 0x5e83, 0x77f2, 0x1, 0x1);
        gbc.writeMem(0x153b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb335);
        EXPECT(gbc.pc(), 0x153c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 032D
        gbc.setState(0x7cb6, 0x19cc, 0x4a70, 0x1eeb, 0x7f3a, 0xdb8d, 0x0, 0x0);
        gbc.writeMem(0x7cb6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x19cc);
        EXPECT(gbc.pc(), 0x7cb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 032E
        gbc.setState(0x376b, 0x3cdf, 0x4fa0, 0x72b9, 0xccab, 0x6c64, 0x0, 0x0);
        gbc.writeMem(0x376b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x3cdf);
        EXPECT(gbc.pc(), 0x376c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 032F
        gbc.setState(0x11fc, 0xe6fa, 0x74a0, 0x497a, 0xd654, 0x2542, 0x1, 0x0);
        gbc.writeMem(0x11fc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xe6fa);
        EXPECT(gbc.pc(), 0x11fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0330
        gbc.setState(0x5fb3, 0x61d7, 0x85f0, 0x8d87, 0xa377, 0xe68a, 0x0, 0x0);
        gbc.writeMem(0x5fb3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x61d7);
        EXPECT(gbc.pc(), 0x5fb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0331
        gbc.setState(0x9f98, 0x6820, 0x1890, 0xfd37, 0xd115, 0xdeab, 0x1, 0x0);
        gbc.writeMem(0x9f98, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6820);
        EXPECT(gbc.pc(), 0x9f99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f98), 0x55);
        // 55 0332
        gbc.setState(0x43c7, 0x703d, 0x690, 0xb041, 0xe6fd, 0x306b, 0x0, 0x0);
        gbc.writeMem(0x43c7, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x703d);
        EXPECT(gbc.pc(), 0x43c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0333
        gbc.setState(0xca31, 0xff6a, 0x6f50, 0x322c, 0xd1c4, 0x37a7, 0x0, 0x0);
        gbc.writeMem(0xca31, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xff6a);
        EXPECT(gbc.pc(), 0xca32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca31), 0x55);
        // 55 0334
        gbc.setState(0x12db, 0xa7df, 0xcc60, 0x1933, 0xf2ba, 0x7946, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa7df);
        EXPECT(gbc.pc(), 0x12dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0336
        gbc.setState(0xba5a, 0x3b6e, 0xa1d0, 0x1a2b, 0xb213, 0xf7a5, 0x1, 0x1);
        gbc.writeMem(0xba5a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x3b6e);
        EXPECT(gbc.pc(), 0xba5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba5a), 0x55);
        // 55 0338
        gbc.setState(0xb0e5, 0xf067, 0x54c0, 0x7fe0, 0xba28, 0xedf0, 0x1, 0x0);
        gbc.writeMem(0xb0e5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xf067);
        EXPECT(gbc.pc(), 0xb0e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0e5), 0x55);
        // 55 0339
        gbc.setState(0x6e5, 0xf5fb, 0x80a0, 0x8772, 0x7907, 0x5295, 0x0, 0x0);
        gbc.writeMem(0x6e5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xf5fb);
        EXPECT(gbc.pc(), 0x6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 033A
        gbc.setState(0x8fd8, 0x73ac, 0x3630, 0x48b8, 0xe811, 0x6318, 0x1, 0x1);
        gbc.writeMem(0x8fd8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x73ac);
        EXPECT(gbc.pc(), 0x8fd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd8), 0x55);
        // 55 033B
        gbc.setState(0xcbc1, 0x5fa, 0xf720, 0x65c4, 0xded2, 0x52e2, 0x0, 0x0);
        gbc.writeMem(0xcbc1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5fa);
        EXPECT(gbc.pc(), 0xcbc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbc1), 0x55);
        // 55 033C
        gbc.setState(0xc509, 0xe58c, 0x2ac0, 0xa835, 0xb615, 0x1f86, 0x0, 0x1);
        gbc.writeMem(0xc509, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xe58c);
        EXPECT(gbc.pc(), 0xc50a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc509), 0x55);
        // 55 033D
        gbc.setState(0xb6e9, 0x981f, 0x3130, 0xd960, 0x5b88, 0x338a, 0x1, 0x0);
        gbc.writeMem(0xb6e9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x981f);
        EXPECT(gbc.pc(), 0xb6ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6e9), 0x55);
        // 55 033E
        gbc.setState(0x2189, 0xcbc, 0x7750, 0x7944, 0x163f, 0xe62e, 0x0, 0x0);
        gbc.writeMem(0x2189, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xcbc);
        EXPECT(gbc.pc(), 0x218a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 033F
        gbc.setState(0xcbc9, 0x6671, 0x8490, 0xd7a6, 0x7693, 0xe1a0, 0x1, 0x1);
        gbc.writeMem(0xcbc9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6671);
        EXPECT(gbc.pc(), 0xcbca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbc9), 0x55);
        // 55 0340
        gbc.setState(0xd8e, 0x770, 0x3b80, 0x84ee, 0x710f, 0x6f79, 0x0, 0x1);
        gbc.writeMem(0xd8e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x770);
        EXPECT(gbc.pc(), 0xd8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0341
        gbc.setState(0x5b7a, 0xab6f, 0xcd90, 0xdd9, 0xa582, 0xb70b, 0x0, 0x0);
        gbc.writeMem(0x5b7a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xab6f);
        EXPECT(gbc.pc(), 0x5b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0342
        gbc.setState(0xb9fa, 0xaa18, 0x4040, 0x7491, 0xd20, 0xfc5c, 0x1, 0x1);
        gbc.writeMem(0xb9fa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xaa18);
        EXPECT(gbc.pc(), 0xb9fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9fa), 0x55);
        // 55 0343
        gbc.setState(0x9798, 0x538f, 0x1360, 0x955f, 0x833e, 0xf803, 0x1, 0x1);
        gbc.writeMem(0x9798, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0x9799);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9798), 0x55);
        // 55 0345
        gbc.setState(0xecc3, 0x89a4, 0x2a30, 0xa0c9, 0xaec9, 0x1557, 0x1, 0x0);
        gbc.writeMem(0xecc3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x89a4);
        EXPECT(gbc.pc(), 0xecc4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecc3), 0x55);
        // 55 0346
        gbc.setState(0xdbd0, 0x3f03, 0xbe10, 0x8eed, 0xc422, 0xd512, 0x0, 0x0);
        gbc.writeMem(0xdbd0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3f03);
        EXPECT(gbc.pc(), 0xdbd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbd0), 0x55);
        // 55 0347
        gbc.setState(0x7c55, 0xdd1, 0x3c30, 0x5836, 0x5706, 0x448b, 0x1, 0x0);
        gbc.writeMem(0x7c55, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdd1);
        EXPECT(gbc.pc(), 0x7c56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0348
        gbc.setState(0x238d, 0x9142, 0xe60, 0x9870, 0x3f0b, 0x8427, 0x0, 0x0);
        gbc.writeMem(0x238d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9142);
        EXPECT(gbc.pc(), 0x238e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0349
        gbc.setState(0x8332, 0xe569, 0x8e70, 0x9b91, 0xdf08, 0xa625, 0x1, 0x1);
        gbc.writeMem(0x8332, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe569);
        EXPECT(gbc.pc(), 0x8333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8332), 0x55);
        // 55 034A
        gbc.setState(0x5202, 0x6719, 0x6910, 0xb123, 0xb42a, 0x4384, 0x1, 0x1);
        gbc.writeMem(0x5202, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6719);
        EXPECT(gbc.pc(), 0x5203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 034B
        gbc.setState(0xcd92, 0x3078, 0x12d0, 0x1abf, 0x3e1, 0x41fc, 0x0, 0x1);
        gbc.writeMem(0xcd92, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3078);
        EXPECT(gbc.pc(), 0xcd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd92), 0x55);
        // 55 034C
        gbc.setState(0x55a9, 0xcc42, 0x12d0, 0x3cf9, 0xc372, 0x7064, 0x0, 0x1);
        gbc.writeMem(0x55a9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xcc42);
        EXPECT(gbc.pc(), 0x55aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 034D
        gbc.setState(0x3904, 0x762d, 0xd070, 0xffd8, 0x8218, 0x4ccc, 0x1, 0x0);
        gbc.writeMem(0x3904, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x762d);
        EXPECT(gbc.pc(), 0x3905);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 034E
        gbc.setState(0x4354, 0x5f93, 0x9fc0, 0x4d76, 0xa80b, 0x5c73, 0x0, 0x0);
        gbc.writeMem(0x4354, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x5f93);
        EXPECT(gbc.pc(), 0x4355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 034F
        gbc.setState(0x9426, 0x846d, 0xa540, 0x422e, 0xf297, 0xbacf, 0x0, 0x0);
        gbc.writeMem(0x9426, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x846d);
        EXPECT(gbc.pc(), 0x9427);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9426), 0x55);
        // 55 0351
        gbc.setState(0xafac, 0xa955, 0x4a70, 0x183a, 0xbe70, 0x67f4, 0x0, 0x1);
        gbc.writeMem(0xafac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xa955);
        EXPECT(gbc.pc(), 0xafad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafac), 0x55);
        // 55 0352
        gbc.setState(0x5325, 0x64ad, 0x7300, 0x59ce, 0x4473, 0xc46b, 0x1, 0x1);
        gbc.writeMem(0x5325, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x64ad);
        EXPECT(gbc.pc(), 0x5326);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0353
        gbc.setState(0x5a6f, 0x362f, 0x1830, 0xe8a1, 0x2769, 0x3d9a, 0x1, 0x0);
        gbc.writeMem(0x5a6f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x362f);
        EXPECT(gbc.pc(), 0x5a70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0354
        gbc.setState(0xb6ba, 0x4c8f, 0xbaa0, 0x7d72, 0x99d0, 0x2647, 0x0, 0x1);
        gbc.writeMem(0xb6ba, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4c8f);
        EXPECT(gbc.pc(), 0xb6bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6ba), 0x55);
        // 55 0355
        gbc.setState(0xe92b, 0x9ca3, 0xa120, 0x6593, 0x5033, 0x4404, 0x1, 0x1);
        gbc.writeMem(0xe92b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9ca3);
        EXPECT(gbc.pc(), 0xe92c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe92b), 0x55);
        // 55 0356
        gbc.setState(0xbf2c, 0x7898, 0xa7b0, 0xf0b7, 0xa99e, 0x3f47, 0x0, 0x0);
        gbc.writeMem(0xbf2c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x7898);
        EXPECT(gbc.pc(), 0xbf2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2c), 0x55);
        // 55 0357
        gbc.setState(0xc2dd, 0x765f, 0x8420, 0xb935, 0x379d, 0xf0e8, 0x1, 0x1);
        gbc.writeMem(0xc2dd, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x765f);
        EXPECT(gbc.pc(), 0xc2de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2dd), 0x55);
        // 55 0358
        gbc.setState(0x604d, 0x1d2f, 0x62c0, 0xaf92, 0x8fc2, 0xdfcc, 0x0, 0x0);
        gbc.writeMem(0x604d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1d2f);
        EXPECT(gbc.pc(), 0x604e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0359
        gbc.setState(0x244e, 0xc518, 0x7d20, 0x53fa, 0xbb4, 0xfc06, 0x1, 0x0);
        gbc.writeMem(0x244e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc518);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 035A
        gbc.setState(0xa580, 0x67b8, 0x1bb0, 0xf17, 0xe050, 0xb70, 0x1, 0x1);
        gbc.writeMem(0xa580, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x67b8);
        EXPECT(gbc.pc(), 0xa581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa580), 0x55);
        // 55 035B
        gbc.setState(0x73b5, 0x6f01, 0xeb20, 0x8c3a, 0x457, 0x17d6, 0x0, 0x1);
        gbc.writeMem(0x73b5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6f01);
        EXPECT(gbc.pc(), 0x73b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 035C
        gbc.setState(0x13a5, 0x1849, 0x2270, 0xef1f, 0xd919, 0x8aca, 0x1, 0x0);
        gbc.writeMem(0x13a5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x1849);
        EXPECT(gbc.pc(), 0x13a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 035D
        gbc.setState(0x9cf6, 0x538e, 0x2a50, 0x921f, 0x3132, 0xeb59, 0x1, 0x0);
        gbc.writeMem(0x9cf6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x538e);
        EXPECT(gbc.pc(), 0x9cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cf6), 0x55);
        // 55 035E
        gbc.setState(0xafbe, 0xeb06, 0x9bc0, 0x5609, 0xcc3e, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0xafbe, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xeb06);
        EXPECT(gbc.pc(), 0xafbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafbe), 0x55);
        // 55 035F
        gbc.setState(0x24e8, 0xa61, 0xc310, 0xb480, 0x655f, 0x7ebc, 0x0, 0x0);
        gbc.writeMem(0x24e8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa61);
        EXPECT(gbc.pc(), 0x24e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0360
        gbc.setState(0xcc5b, 0xfbc1, 0x6550, 0x72fb, 0xcf4f, 0xd3c6, 0x0, 0x1);
        gbc.writeMem(0xcc5b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xfbc1);
        EXPECT(gbc.pc(), 0xcc5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc5b), 0x55);
        // 55 0361
        gbc.setState(0x6a23, 0x1b73, 0x4330, 0x5eab, 0x57be, 0x10f5, 0x1, 0x1);
        gbc.writeMem(0x6a23, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x1b73);
        EXPECT(gbc.pc(), 0x6a24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0362
        gbc.setState(0xcc59, 0xf5cb, 0xa100, 0xfb54, 0xb79e, 0xee61, 0x1, 0x0);
        gbc.writeMem(0xcc59, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf5cb);
        EXPECT(gbc.pc(), 0xcc5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc59), 0x55);
        // 55 0363
        gbc.setState(0xcd4a, 0x4b2a, 0x5200, 0xe99d, 0x1645, 0xa15f, 0x0, 0x0);
        gbc.writeMem(0xcd4a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x4b2a);
        EXPECT(gbc.pc(), 0xcd4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd4a), 0x55);
        // 55 0364
        gbc.setState(0x8690, 0x940, 0x3340, 0x9f20, 0x4f80, 0x2853, 0x1, 0x0);
        gbc.writeMem(0x8690, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x940);
        EXPECT(gbc.pc(), 0x8691);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8690), 0x55);
        // 55 0365
        gbc.setState(0x8b34, 0x13a, 0x8480, 0x27be, 0x2a6c, 0xaf0a, 0x0, 0x1);
        gbc.writeMem(0x8b34, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x13a);
        EXPECT(gbc.pc(), 0x8b35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b34), 0x55);
        // 55 0366
        gbc.setState(0x3df9, 0x9b20, 0xfbe0, 0x6ce6, 0xc1e4, 0xbac5, 0x1, 0x1);
        gbc.writeMem(0x3df9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9b20);
        EXPECT(gbc.pc(), 0x3dfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0367
        gbc.setState(0xd841, 0x7db4, 0xb500, 0xcf75, 0x455f, 0xd08a, 0x1, 0x1);
        gbc.writeMem(0xd841, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7db4);
        EXPECT(gbc.pc(), 0xd842);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd841), 0x55);
        // 55 0368
        gbc.setState(0x1fd3, 0xd290, 0xae40, 0x92ab, 0x6a12, 0x9b82, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xd290);
        EXPECT(gbc.pc(), 0x1fd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0369
        gbc.setState(0xeccc, 0xd4ef, 0xd9f0, 0xb81, 0xdfcd, 0x7256, 0x0, 0x0);
        gbc.writeMem(0xeccc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd4ef);
        EXPECT(gbc.pc(), 0xeccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeccc), 0x55);
        // 55 036A
        gbc.setState(0x2563, 0x1dc7, 0xa770, 0x8be6, 0x7224, 0xe26, 0x0, 0x1);
        gbc.writeMem(0x2563, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x1dc7);
        EXPECT(gbc.pc(), 0x2564);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 036B
        gbc.setState(0xa9e5, 0x3347, 0x81b0, 0x997f, 0x5b44, 0x906e, 0x1, 0x0);
        gbc.writeMem(0xa9e5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x3347);
        EXPECT(gbc.pc(), 0xa9e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9e5), 0x55);
        // 55 036C
        gbc.setState(0x683c, 0xd5fa, 0x5390, 0xd029, 0x9fb0, 0x2a9a, 0x1, 0x1);
        gbc.writeMem(0x683c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xd5fa);
        EXPECT(gbc.pc(), 0x683d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 036D
        gbc.setState(0xbf65, 0xcfc6, 0x7790, 0x1d80, 0xac8e, 0x5e3c, 0x0, 0x0);
        gbc.writeMem(0xbf65, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xcfc6);
        EXPECT(gbc.pc(), 0xbf66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf65), 0x55);
        // 55 036E
        gbc.setState(0x7503, 0x9140, 0x6540, 0xa1c9, 0x420c, 0xa304, 0x0, 0x0);
        gbc.writeMem(0x7503, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9140);
        EXPECT(gbc.pc(), 0x7504);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 036F
        gbc.setState(0x9dd1, 0xf530, 0xd2f0, 0xa427, 0xc30c, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0x9dd1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xf530);
        EXPECT(gbc.pc(), 0x9dd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9dd1), 0x55);
        // 55 0370
        gbc.setState(0xf37, 0xd647, 0xa910, 0x1ce1, 0xefc0, 0xd050, 0x1, 0x0);
        gbc.writeMem(0xf37, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xd647);
        EXPECT(gbc.pc(), 0xf38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0371
        gbc.setState(0x5eb4, 0xce4, 0xcde0, 0xd755, 0xdefd, 0x3b33, 0x1, 0x1);
        gbc.writeMem(0x5eb4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xce4);
        EXPECT(gbc.pc(), 0x5eb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0372
        gbc.setState(0x1688, 0xe422, 0x45c0, 0x536e, 0x7205, 0x2f79, 0x1, 0x1);
        gbc.writeMem(0x1688, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xe422);
        EXPECT(gbc.pc(), 0x1689);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0373
        gbc.setState(0x45b6, 0x85a5, 0x4e20, 0xd4ef, 0x3c23, 0x39ab, 0x1, 0x1);
        gbc.writeMem(0x45b6, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x85a5);
        EXPECT(gbc.pc(), 0x45b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0375
        gbc.setState(0x510e, 0x6e30, 0x8500, 0x9c06, 0xae28, 0x5462, 0x0, 0x1);
        gbc.writeMem(0x510e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6e30);
        EXPECT(gbc.pc(), 0x510f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0376
        gbc.setState(0xd81, 0xa749, 0x73f0, 0xadd6, 0x8c34, 0x2792, 0x1, 0x0);
        gbc.writeMem(0xd81, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xa749);
        EXPECT(gbc.pc(), 0xd82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0377
        gbc.setState(0xb87c, 0x3149, 0x4520, 0xc711, 0xe29f, 0x2fc9, 0x0, 0x1);
        gbc.writeMem(0xb87c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3149);
        EXPECT(gbc.pc(), 0xb87d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb87c), 0x55);
        // 55 0378
        gbc.setState(0xafb4, 0xc10, 0xbef0, 0x8981, 0x9b29, 0x4f33, 0x0, 0x0);
        gbc.writeMem(0xafb4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc10);
        EXPECT(gbc.pc(), 0xafb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb4), 0x55);
        // 55 0379
        gbc.setState(0x6089, 0x1057, 0xd210, 0xba27, 0xc477, 0xb7df, 0x0, 0x1);
        gbc.writeMem(0x6089, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1057);
        EXPECT(gbc.pc(), 0x608a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 037A
        gbc.setState(0x2e8a, 0x6204, 0x1e10, 0x813e, 0x5f32, 0x1f26, 0x1, 0x1);
        gbc.writeMem(0x2e8a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6204);
        EXPECT(gbc.pc(), 0x2e8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 037B
        gbc.setState(0xcf59, 0xc3aa, 0xe910, 0x5952, 0x53a, 0x4928, 0x0, 0x0);
        gbc.writeMem(0xcf59, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xc3aa);
        EXPECT(gbc.pc(), 0xcf5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf59), 0x55);
        // 55 037C
        gbc.setState(0xaa9b, 0x743d, 0x2740, 0x153, 0xb49, 0x20e6, 0x0, 0x1);
        gbc.writeMem(0xaa9b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x743d);
        EXPECT(gbc.pc(), 0xaa9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa9b), 0x55);
        // 55 037D
        gbc.setState(0x7de5, 0xf3b9, 0xc150, 0xf492, 0xd10d, 0xa09d, 0x1, 0x1);
        gbc.writeMem(0x7de5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf3b9);
        EXPECT(gbc.pc(), 0x7de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 037E
        gbc.setState(0xaad9, 0x3a85, 0xa140, 0xea04, 0x8550, 0x9a61, 0x0, 0x1);
        gbc.writeMem(0xaad9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x3a85);
        EXPECT(gbc.pc(), 0xaada);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad9), 0x55);
        // 55 037F
        gbc.setState(0x571, 0x6f00, 0x2aa0, 0x5d0, 0xfd01, 0xbb73, 0x0, 0x0);
        gbc.writeMem(0x571, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x6f00);
        EXPECT(gbc.pc(), 0x572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0380
        gbc.setState(0xa790, 0x8de2, 0xbc40, 0x3dbd, 0x2902, 0x95c8, 0x1, 0x0);
        gbc.writeMem(0xa790, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8de2);
        EXPECT(gbc.pc(), 0xa791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa790), 0x55);
        // 55 0381
        gbc.setState(0x6445, 0xfb5f, 0xd390, 0x96bc, 0x5da, 0x8879, 0x0, 0x1);
        gbc.writeMem(0x6445, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xfb5f);
        EXPECT(gbc.pc(), 0x6446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0382
        gbc.setState(0x11bb, 0x4995, 0x5000, 0xd0da, 0x901d, 0x6410, 0x1, 0x0);
        gbc.writeMem(0x11bb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0x11bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0383
        gbc.setState(0x4452, 0x9ed9, 0x4b40, 0xc8f4, 0x627c, 0xcec7, 0x0, 0x1);
        gbc.writeMem(0x4452, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9ed9);
        EXPECT(gbc.pc(), 0x4453);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0384
        gbc.setState(0x6f91, 0xc01, 0x1ed0, 0xa0c, 0xdf96, 0xe6b6, 0x0, 0x0);
        gbc.writeMem(0x6f91, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc01);
        EXPECT(gbc.pc(), 0x6f92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0385
        gbc.setState(0x8436, 0x4e1f, 0xd990, 0xe1c6, 0x8cd5, 0x97e0, 0x0, 0x0);
        gbc.writeMem(0x8436, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4e1f);
        EXPECT(gbc.pc(), 0x8437);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8436), 0x55);
        // 55 0386
        gbc.setState(0xa311, 0x40c4, 0xcfa0, 0xb847, 0xbc02, 0xf964, 0x1, 0x0);
        gbc.writeMem(0xa311, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x40c4);
        EXPECT(gbc.pc(), 0xa312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa311), 0x55);
        // 55 0387
        gbc.setState(0x94ce, 0xd085, 0x2cb0, 0xf7bf, 0x3b8a, 0x588e, 0x0, 0x0);
        gbc.writeMem(0x94ce, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd085);
        EXPECT(gbc.pc(), 0x94cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94ce), 0x55);
        // 55 0388
        gbc.setState(0x4838, 0x42cf, 0xd930, 0xe8f6, 0xbd20, 0x21ff, 0x1, 0x1);
        gbc.writeMem(0x4838, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x42cf);
        EXPECT(gbc.pc(), 0x4839);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0389
        gbc.setState(0xbb7d, 0x5b4b, 0xa8e0, 0x1c20, 0xe08b, 0x32a1, 0x0, 0x0);
        gbc.writeMem(0xbb7d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x5b4b);
        EXPECT(gbc.pc(), 0xbb7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb7d), 0x55);
        // 55 038A
        gbc.setState(0x8835, 0x3a1e, 0x37a0, 0xaf1a, 0xc12, 0x4e02, 0x0, 0x1);
        gbc.writeMem(0x8835, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3a1e);
        EXPECT(gbc.pc(), 0x8836);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8835), 0x55);
        // 55 038B
        gbc.setState(0xbcc4, 0x93f7, 0xa960, 0x21cb, 0xc86c, 0x87a8, 0x1, 0x1);
        gbc.writeMem(0xbcc4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x93f7);
        EXPECT(gbc.pc(), 0xbcc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcc4), 0x55);
        // 55 038C
        gbc.setState(0x82e9, 0xb2a5, 0x78a0, 0x4235, 0xf337, 0x2366, 0x0, 0x1);
        gbc.writeMem(0x82e9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xb2a5);
        EXPECT(gbc.pc(), 0x82ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82e9), 0x55);
        // 55 038D
        gbc.setState(0xcea8, 0xe52f, 0x2dd0, 0xedd8, 0x8893, 0x1e84, 0x0, 0x0);
        gbc.writeMem(0xcea8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe52f);
        EXPECT(gbc.pc(), 0xcea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcea8), 0x55);
        // 55 038E
        gbc.setState(0xcb04, 0x1068, 0x3c30, 0x1afc, 0x113e, 0xbdf1, 0x1, 0x0);
        gbc.writeMem(0xcb04, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1068);
        EXPECT(gbc.pc(), 0xcb05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb04), 0x55);
        // 55 038F
        gbc.setState(0x42a3, 0xb356, 0xe190, 0x9aec, 0xa554, 0x8803, 0x0, 0x0);
        gbc.writeMem(0x42a3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb356);
        EXPECT(gbc.pc(), 0x42a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 0390
        gbc.setState(0xda51, 0x20b8, 0x3040, 0xa37a, 0xad5b, 0xd836, 0x1, 0x1);
        gbc.writeMem(0xda51, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x20b8);
        EXPECT(gbc.pc(), 0xda52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda51), 0x55);
        // 55 0391
        gbc.setState(0x8d9, 0xb46d, 0x6200, 0x8355, 0xee67, 0xa6e8, 0x0, 0x0);
        gbc.writeMem(0x8d9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb46d);
        EXPECT(gbc.pc(), 0x8da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0392
        gbc.setState(0x413c, 0xcfe9, 0x30, 0x78d1, 0x85ea, 0xd12a, 0x1, 0x0);
        gbc.writeMem(0x413c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xcfe9);
        EXPECT(gbc.pc(), 0x413d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 0393
        gbc.setState(0xd6dc, 0x9cf4, 0x7580, 0xe9fb, 0x357c, 0x9c67, 0x1, 0x0);
        gbc.writeMem(0xd6dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9cf4);
        EXPECT(gbc.pc(), 0xd6dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6dc), 0x55);
        // 55 0394
        gbc.setState(0x8244, 0x8274, 0x7730, 0x7df9, 0x512f, 0xa35d, 0x1, 0x1);
        gbc.writeMem(0x8244, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x8274);
        EXPECT(gbc.pc(), 0x8245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8244), 0x55);
        // 55 0395
        gbc.setState(0x2707, 0x34c9, 0x1720, 0xf738, 0xbf70, 0x8520, 0x1, 0x1);
        gbc.writeMem(0x2707, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x34c9);
        EXPECT(gbc.pc(), 0x2708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0396
        gbc.setState(0x9150, 0x51ac, 0xc0e0, 0x3dc6, 0x64f2, 0x1088, 0x1, 0x0);
        gbc.writeMem(0x9150, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x51ac);
        EXPECT(gbc.pc(), 0x9151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9150), 0x55);
        // 55 0397
        gbc.setState(0x313d, 0xde54, 0xdc60, 0xd7c1, 0x8c11, 0xffe, 0x0, 0x0);
        gbc.writeMem(0x313d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xde54);
        EXPECT(gbc.pc(), 0x313e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 0398
        gbc.setState(0x5a93, 0x20f4, 0x3b00, 0x4120, 0x1cd9, 0x22a4, 0x0, 0x0);
        gbc.writeMem(0x5a93, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x20f4);
        EXPECT(gbc.pc(), 0x5a94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 0399
        gbc.setState(0x42c8, 0xc641, 0x6300, 0x9007, 0xdcda, 0xdb2c, 0x1, 0x1);
        gbc.writeMem(0x42c8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xc641);
        EXPECT(gbc.pc(), 0x42c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 039A
        gbc.setState(0x5afb, 0x9668, 0x9b90, 0x200e, 0x57ab, 0xb99a, 0x0, 0x0);
        gbc.writeMem(0x5afb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9668);
        EXPECT(gbc.pc(), 0x5afc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 039B
        gbc.setState(0xb34a, 0xf700, 0x4530, 0xc352, 0x3767, 0x3870, 0x0, 0x1);
        gbc.writeMem(0xb34a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xf700);
        EXPECT(gbc.pc(), 0xb34b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb34a), 0x55);
        // 55 039C
        gbc.setState(0x17dc, 0x4fa0, 0x8160, 0x9416, 0xa679, 0x7a66, 0x1, 0x1);
        gbc.writeMem(0x17dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x4fa0);
        EXPECT(gbc.pc(), 0x17dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 039D
        gbc.setState(0x8807, 0xe2be, 0x7ce0, 0x43b0, 0xbdd2, 0x5685, 0x0, 0x1);
        gbc.writeMem(0x8807, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe2be);
        EXPECT(gbc.pc(), 0x8808);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8807), 0x55);
        // 55 039E
        gbc.setState(0x2b89, 0xf5fd, 0x4560, 0xfa7, 0x3e9e, 0xc0af, 0x0, 0x0);
        gbc.writeMem(0x2b89, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xf5fd);
        EXPECT(gbc.pc(), 0x2b8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 039F
        gbc.setState(0x1176, 0xed65, 0xe780, 0xda62, 0x96d0, 0xbb96, 0x0, 0x0);
        gbc.writeMem(0x1176, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xed65);
        EXPECT(gbc.pc(), 0x1177);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03A0
        gbc.setState(0x7dff, 0x3053, 0x7650, 0xfbf3, 0xb60b, 0xdd3b, 0x0, 0x1);
        gbc.writeMem(0x7dff, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x3053);
        EXPECT(gbc.pc(), 0x7e00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03A1
        gbc.setState(0xe01c, 0xc29a, 0x6290, 0xfa1f, 0x8f8b, 0xb630, 0x1, 0x0);
        gbc.writeMem(0xe01c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc29a);
        EXPECT(gbc.pc(), 0xe01d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe01c), 0x55);
        // 55 03A2
        gbc.setState(0xe434, 0x73ab, 0xea0, 0xd08, 0x79e0, 0x9218, 0x0, 0x1);
        gbc.writeMem(0xe434, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x73ab);
        EXPECT(gbc.pc(), 0xe435);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe434), 0x55);
        // 55 03A3
        gbc.setState(0x74f, 0x6cb7, 0xfb80, 0x7916, 0x59d7, 0x18d7, 0x1, 0x0);
        gbc.writeMem(0x74f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x6cb7);
        EXPECT(gbc.pc(), 0x750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03A4
        gbc.setState(0x9691, 0xef6d, 0x8b90, 0xf2fa, 0x87ed, 0x93c7, 0x1, 0x1);
        gbc.writeMem(0x9691, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xef6d);
        EXPECT(gbc.pc(), 0x9692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9691), 0x55);
        // 55 03A5
        gbc.setState(0x9e4a, 0xb267, 0xb9f0, 0x7b3f, 0x7e89, 0x5189, 0x1, 0x1);
        gbc.writeMem(0x9e4a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0x9e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e4a), 0x55);
        // 55 03A6
        gbc.setState(0x1f0a, 0xea04, 0x8a00, 0x260f, 0xa4fe, 0x8784, 0x1, 0x0);
        gbc.writeMem(0x1f0a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xea04);
        EXPECT(gbc.pc(), 0x1f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03A7
        gbc.setState(0xd3af, 0x968b, 0xcd00, 0x329, 0x4f35, 0x63b6, 0x0, 0x1);
        gbc.writeMem(0xd3af, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x968b);
        EXPECT(gbc.pc(), 0xd3b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3af), 0x55);
        // 55 03A8
        gbc.setState(0x26aa, 0xc62c, 0x9750, 0xeb15, 0x3f66, 0xb9f4, 0x0, 0x1);
        gbc.writeMem(0x26aa, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc62c);
        EXPECT(gbc.pc(), 0x26ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03A9
        gbc.setState(0x58, 0x7a8d, 0xe50, 0xe057, 0x80e9, 0xd468, 0x0, 0x1);
        gbc.writeMem(0x58, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7a8d);
        EXPECT(gbc.pc(), 0x59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03AA
        gbc.setState(0xd33b, 0xfccb, 0x8fc0, 0xce32, 0xa94c, 0xd1a8, 0x1, 0x1);
        gbc.writeMem(0xd33b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xfccb);
        EXPECT(gbc.pc(), 0xd33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33b), 0x55);
        // 55 03AB
        gbc.setState(0x629f, 0x3409, 0x5620, 0xab5, 0xa11d, 0x5215, 0x1, 0x1);
        gbc.writeMem(0x629f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3409);
        EXPECT(gbc.pc(), 0x62a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03AC
        gbc.setState(0xe008, 0x2e8b, 0x7740, 0x4b51, 0x793c, 0x544f, 0x1, 0x0);
        gbc.writeMem(0xe008, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2e8b);
        EXPECT(gbc.pc(), 0xe009);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe008), 0x55);
        // 55 03AD
        gbc.setState(0xe63a, 0x2188, 0x4ab0, 0xa0cb, 0xe1aa, 0xdaa7, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2188);
        EXPECT(gbc.pc(), 0xe63b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe63a), 0x55);
        // 55 03AE
        gbc.setState(0x59, 0x1d94, 0xe370, 0xef18, 0x772c, 0xdffb, 0x0, 0x1);
        gbc.writeMem(0x59, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1d94);
        EXPECT(gbc.pc(), 0x5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 03AF
        gbc.setState(0x4dc8, 0xfe02, 0xad30, 0x794a, 0x43aa, 0x2dfd, 0x0, 0x0);
        gbc.writeMem(0x4dc8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfe02);
        EXPECT(gbc.pc(), 0x4dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 03B0
        gbc.setState(0x65a1, 0x7989, 0xa820, 0x958a, 0x4a55, 0xdda4, 0x0, 0x1);
        gbc.writeMem(0x65a1, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x7989);
        EXPECT(gbc.pc(), 0x65a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03B2
        gbc.setState(0x8daf, 0xe6be, 0x1810, 0x5f0, 0x4a6c, 0x9677, 0x0, 0x0);
        gbc.writeMem(0x8daf, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe6be);
        EXPECT(gbc.pc(), 0x8db0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8daf), 0x55);
        // 55 03B3
        gbc.setState(0x9e02, 0x577f, 0x60f0, 0x9ff, 0xd531, 0xdbc2, 0x1, 0x0);
        gbc.writeMem(0x9e02, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x577f);
        EXPECT(gbc.pc(), 0x9e03);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e02), 0x55);
        // 55 03B4
        gbc.setState(0x990b, 0x2645, 0x4840, 0x9a61, 0x296b, 0xf7d3, 0x1, 0x1);
        gbc.writeMem(0x990b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x2645);
        EXPECT(gbc.pc(), 0x990c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990b), 0x55);
        // 55 03B5
        gbc.setState(0x185c, 0x5366, 0xd420, 0xcc41, 0xba7c, 0xb3e5, 0x0, 0x0);
        gbc.writeMem(0x185c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5366);
        EXPECT(gbc.pc(), 0x185d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03B6
        gbc.setState(0x50a4, 0xb4cf, 0xdfa0, 0x8fa4, 0xb15b, 0x28b2, 0x0, 0x0);
        gbc.writeMem(0x50a4, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xb4cf);
        EXPECT(gbc.pc(), 0x50a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03B7
        gbc.setState(0x87a5, 0x8f9d, 0x25b0, 0x527a, 0x36db, 0x2f42, 0x1, 0x1);
        gbc.writeMem(0x87a5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8f9d);
        EXPECT(gbc.pc(), 0x87a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a5), 0x55);
        // 55 03B8
        gbc.setState(0x14ce, 0xf73e, 0x8dc0, 0x29ec, 0x9ad5, 0x6bef, 0x0, 0x1);
        gbc.writeMem(0x14ce, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf73e);
        EXPECT(gbc.pc(), 0x14cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03B9
        gbc.setState(0x8aec, 0x4ff3, 0xcee0, 0x9159, 0x4957, 0xb1eb, 0x0, 0x0);
        gbc.writeMem(0x8aec, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4ff3);
        EXPECT(gbc.pc(), 0x8aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aec), 0x55);
        // 55 03BA
        gbc.setState(0xe9ad, 0x6098, 0x1310, 0x5c5, 0xa003, 0xf112, 0x1, 0x1);
        gbc.writeMem(0xe9ad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6098);
        EXPECT(gbc.pc(), 0xe9ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ad), 0x55);
        // 55 03BB
        gbc.setState(0x4d1f, 0x9ce2, 0x50f0, 0x4405, 0xbad6, 0xcdf1, 0x1, 0x0);
        gbc.writeMem(0x4d1f, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x9ce2);
        EXPECT(gbc.pc(), 0x4d20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 03BC
        gbc.setState(0x5cc0, 0x877a, 0x28f0, 0x4bea, 0xdbfb, 0xa294, 0x0, 0x0);
        gbc.writeMem(0x5cc0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x877a);
        EXPECT(gbc.pc(), 0x5cc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 03BD
        gbc.setState(0x6c96, 0x914d, 0xb690, 0xcf4, 0xfdba, 0xbbbe, 0x1, 0x1);
        gbc.writeMem(0x6c96, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x914d);
        EXPECT(gbc.pc(), 0x6c97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03BE
        gbc.setState(0xb84c, 0x2884, 0x8fc0, 0x8e2a, 0x25a9, 0x6fe2, 0x1, 0x1);
        gbc.writeMem(0xb84c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2884);
        EXPECT(gbc.pc(), 0xb84d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb84c), 0x55);
        // 55 03BF
        gbc.setState(0xe4f3, 0xe09b, 0x9950, 0x5e3, 0x19c1, 0x9485, 0x1, 0x1);
        gbc.writeMem(0xe4f3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xe09b);
        EXPECT(gbc.pc(), 0xe4f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4f3), 0x55);
        // 55 03C0
        gbc.setState(0x5794, 0xd02c, 0x4080, 0x1724, 0xc5e0, 0xd42, 0x0, 0x0);
        gbc.writeMem(0x5794, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xd02c);
        EXPECT(gbc.pc(), 0x5795);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03C1
        gbc.setState(0x722c, 0xbaae, 0x4950, 0xa456, 0x9ea5, 0x2c4e, 0x1, 0x0);
        gbc.writeMem(0x722c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xbaae);
        EXPECT(gbc.pc(), 0x722d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03C3
        gbc.setState(0xb5b3, 0xf6d0, 0x5180, 0x2dc8, 0xebbd, 0x46b6, 0x1, 0x0);
        gbc.writeMem(0xb5b3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xf6d0);
        EXPECT(gbc.pc(), 0xb5b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0x55);
        // 55 03C4
        gbc.setState(0xb45e, 0xb109, 0x52f0, 0x7b3a, 0x9f04, 0x7755, 0x1, 0x0);
        gbc.writeMem(0xb45e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb109);
        EXPECT(gbc.pc(), 0xb45f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45e), 0x55);
        // 55 03C5
        gbc.setState(0xcdc3, 0xcb8c, 0xe230, 0x253b, 0x7c90, 0x7cb6, 0x0, 0x0);
        gbc.writeMem(0xcdc3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcb8c);
        EXPECT(gbc.pc(), 0xcdc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdc3), 0x55);
        // 55 03C6
        gbc.setState(0x6a63, 0x44d1, 0x4ed0, 0x4e62, 0xe2fd, 0x3f5a, 0x1, 0x0);
        gbc.writeMem(0x6a63, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x44d1);
        EXPECT(gbc.pc(), 0x6a64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03C8
        gbc.setState(0x18ee, 0xc198, 0x6700, 0x9908, 0x4c9d, 0xb86d, 0x1, 0x0);
        gbc.writeMem(0x18ee, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc198);
        EXPECT(gbc.pc(), 0x18ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03C9
        gbc.setState(0xba2e, 0x2428, 0x5870, 0x3606, 0xb04a, 0xdc11, 0x1, 0x1);
        gbc.writeMem(0xba2e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x2428);
        EXPECT(gbc.pc(), 0xba2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba2e), 0x55);
        // 55 03CB
        gbc.setState(0x652a, 0xc967, 0xa0e0, 0x3dfb, 0x81af, 0xa1ad, 0x1, 0x0);
        gbc.writeMem(0x652a, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc967);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03CC
        gbc.setState(0x21fb, 0xc724, 0xf440, 0x5475, 0xb452, 0xd8f3, 0x0, 0x1);
        gbc.writeMem(0x21fb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xc724);
        EXPECT(gbc.pc(), 0x21fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03CD
        gbc.setState(0xe03b, 0x6c74, 0x8810, 0x8e6e, 0x53a, 0xc2a8, 0x1, 0x0);
        gbc.writeMem(0xe03b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6c74);
        EXPECT(gbc.pc(), 0xe03c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe03b), 0x55);
        // 55 03CE
        gbc.setState(0x7878, 0xe987, 0x94d0, 0xa215, 0x5867, 0xc0bb, 0x1, 0x0);
        gbc.writeMem(0x7878, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xe987);
        EXPECT(gbc.pc(), 0x7879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03CF
        gbc.setState(0xd345, 0xfca4, 0x3e10, 0x63d1, 0xcf5e, 0x7c3c, 0x1, 0x1);
        gbc.writeMem(0xd345, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfca4);
        EXPECT(gbc.pc(), 0xd346);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd345), 0x55);
        // 55 03D0
        gbc.setState(0x7376, 0xda88, 0xd7e0, 0xdcd6, 0x2e9f, 0xddf6, 0x1, 0x0);
        gbc.writeMem(0x7376, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xda88);
        EXPECT(gbc.pc(), 0x7377);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 55 03D1
        gbc.setState(0x91b8, 0x9b22, 0x6db0, 0x374, 0x9d96, 0xeb73, 0x1, 0x1);
        gbc.writeMem(0x91b8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x9b22);
        EXPECT(gbc.pc(), 0x91b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91b8), 0x55);
        // 55 03D2
        gbc.setState(0xeab3, 0x2a56, 0xe000, 0xcd43, 0xb471, 0x9aef, 0x1, 0x1);
        gbc.writeMem(0xeab3, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2a56);
        EXPECT(gbc.pc(), 0xeab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeab3), 0x55);
        // 55 03D3
        gbc.setState(0xe73d, 0xac12, 0x6ad0, 0x3ce4, 0xcff9, 0xda9b, 0x1, 0x1);
        gbc.writeMem(0xe73d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xac12);
        EXPECT(gbc.pc(), 0xe73e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73d), 0x55);
        // 55 03D5
        gbc.setState(0xa179, 0xdf17, 0x3c10, 0xe831, 0x2ed6, 0x4a3a, 0x0, 0x1);
        gbc.writeMem(0xa179, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xdf17);
        EXPECT(gbc.pc(), 0xa17a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa179), 0x55);
        // 55 03D7
        gbc.setState(0x1a1e, 0x44d, 0x1450, 0xd73e, 0x3b07, 0xaa1, 0x1, 0x1);
        gbc.writeMem(0x1a1e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x44d);
        EXPECT(gbc.pc(), 0x1a1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03D8
        gbc.setState(0xa547, 0x4cde, 0x15c0, 0xa0e2, 0xcf5, 0xc296, 0x0, 0x0);
        gbc.writeMem(0xa547, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4cde);
        EXPECT(gbc.pc(), 0xa548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa547), 0x55);
        // 55 03D9
        gbc.setState(0x6f9, 0xd5a7, 0xf9d0, 0x71b3, 0xd728, 0x381f, 0x1, 0x1);
        gbc.writeMem(0x6f9, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd5a7);
        EXPECT(gbc.pc(), 0x6fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03DA
        gbc.setState(0x389c, 0x31e5, 0x8bd0, 0x7c9, 0xb7da, 0x9715, 0x1, 0x0);
        gbc.writeMem(0x389c, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x31e5);
        EXPECT(gbc.pc(), 0x389d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 55 03DB
        gbc.setState(0x822b, 0xa6c6, 0xfd0, 0x94ec, 0xb912, 0x7f0, 0x0, 0x1);
        gbc.writeMem(0x822b, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa6c6);
        EXPECT(gbc.pc(), 0x822c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x822b), 0x55);
        // 55 03DC
        gbc.setState(0x3268, 0x3d59, 0x4740, 0x3d50, 0x4cac, 0x1149, 0x1, 0x1);
        gbc.writeMem(0x3268, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x3d59);
        EXPECT(gbc.pc(), 0x3269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03DD
        gbc.setState(0x5c2e, 0x513f, 0xb100, 0x3c04, 0x22c3, 0xba64, 0x0, 0x0);
        gbc.writeMem(0x5c2e, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x513f);
        EXPECT(gbc.pc(), 0x5c2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03DE
        gbc.setState(0x9eac, 0x29e8, 0xd0a0, 0x6ea4, 0x42c0, 0xed55, 0x0, 0x0);
        gbc.writeMem(0x9eac, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x29e8);
        EXPECT(gbc.pc(), 0x9ead);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eac), 0x55);
        // 55 03DF
        gbc.setState(0xb7dc, 0x1009, 0x32a0, 0x1b24, 0x5fd3, 0xcb70, 0x1, 0x1);
        gbc.writeMem(0xb7dc, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x1009);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7dc), 0x55);
        // 55 03E0
        gbc.setState(0x63ad, 0x245c, 0xd170, 0x13c1, 0x26e4, 0xc923, 0x1, 0x1);
        gbc.writeMem(0x63ad, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x245c);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 55 03E1
        gbc.setState(0xc0bb, 0x2c37, 0x8c00, 0x5b7f, 0x2bfd, 0x606, 0x0, 0x1);
        gbc.writeMem(0xc0bb, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2c37);
        EXPECT(gbc.pc(), 0xc0bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0bb), 0x55);
        // 55 03E2
        gbc.setState(0x1e9d, 0x7d5d, 0x8fc0, 0x4fcd, 0x9713, 0x3ef6, 0x1, 0x0);
        gbc.writeMem(0x1e9d, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x7d5d);
        EXPECT(gbc.pc(), 0x1e9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03E3
        gbc.setState(0x1b0, 0x4c37, 0x2ec0, 0x294e, 0x38e3, 0x1ae3, 0x1, 0x0);
        gbc.writeMem(0x1b0, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4c37);
        EXPECT(gbc.pc(), 0x1b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 55 03E4
        gbc.setState(0xe207, 0xe371, 0xbca0, 0x4ee3, 0x53f4, 0xf16e, 0x1, 0x0);
        gbc.writeMem(0xe207, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe371);
        EXPECT(gbc.pc(), 0xe208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe207), 0x55);
        // 55 03E5
        gbc.setState(0xac93, 0x8030, 0xa190, 0xc8ea, 0xc565, 0x9c16, 0x1, 0x1);
        gbc.writeMem(0xac93, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x8030);
        EXPECT(gbc.pc(), 0xac94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac93), 0x55);
        // 55 03E6
        gbc.setState(0x8424, 0xc31c, 0x2080, 0xaa57, 0xac57, 0x80b6, 0x1, 0x1);
        gbc.writeMem(0x8424, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xc31c);
        EXPECT(gbc.pc(), 0x8425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8424), 0x55);
        // 55 03E7
        gbc.setState(0xe8b5, 0x2bfb, 0x2210, 0x225, 0x9276, 0xcdb5, 0x0, 0x1);
        gbc.writeMem(0xe8b5, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2bfb);
        EXPECT(gbc.pc(), 0xe8b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b5), 0x55);
    }
}
#endif
